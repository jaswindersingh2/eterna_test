%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (413)
} def

/sequence { (\
GGAAAAGAUAGUGCGAUGUACAAAGUAUAUCCUAGCAAAGCUAGCUAUUCGAAGAAUAGGUAUUGUCGGUAUAUGUUCGCAUGUACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 67 0.004299664 ubox
1 78 0.003329155 ubox
1 80 0.003351056 ubox
1 86 0.004374884 ubox
1 95 0.067311066 ubox
1 98 0.067762456 ubox
1 101 0.069320449 ubox
1 104 0.069649835 ubox
1 107 0.017588819 ubox
2 67 0.008097198 ubox
2 70 0.003309008 ubox
2 77 0.003320497 ubox
2 78 0.005701658 ubox
2 95 0.035533291 ubox
2 98 0.035673930 ubox
2 101 0.036441785 ubox
2 104 0.036312263 ubox
2 107 0.011851323 ubox
3 66 0.006799330 ubox
3 76 0.003277442 ubox
3 77 0.005701513 ubox
4 70 0.011497023 ubox
4 76 0.005505332 ubox
5 70 0.003737681 ubox
7 67 0.998222769 ubox
8 66 0.999538375 ubox
9 65 0.999320097 ubox
10 64 0.998064522 ubox
11 63 0.998889813 ubox
11 86 0.004901874 ubox
11 98 0.003443615 ubox
11 101 0.003809208 ubox
11 104 0.003873216 ubox
12 62 0.999361371 ubox
12 81 0.003314099 ubox
12 85 0.004906648 ubox
12 97 0.003266541 ubox
12 100 0.003514801 ubox
12 103 0.003570357 ubox
13 32 0.003190362 ubox
13 36 0.003322339 ubox
13 61 0.999430703 ubox
13 80 0.003373550 ubox
13 84 0.004908013 ubox
14 35 0.003321148 ubox
14 59 0.003869263 ubox
14 60 0.998913264 ubox
14 79 0.003373475 ubox
14 83 0.004902947 ubox
15 30 0.003744592 ubox
15 31 0.997101846 ubox
15 32 0.009452066 ubox
15 78 0.003297827 ubox
16 30 0.999241720 ubox
16 82 0.003801033 ubox
17 29 0.999027524 ubox
17 81 0.004715548 ubox
18 28 0.999407086 ubox
18 80 0.004727833 ubox
19 27 0.999588882 ubox
19 79 0.004635589 ubox
20 26 0.998623139 ubox
21 25 0.988855158 ubox
25 74 0.004958827 ubox
26 73 0.005315843 ubox
27 72 0.005327313 ubox
28 71 0.005329294 ubox
29 70 0.005313860 ubox
30 69 0.004990411 ubox
31 68 0.004964654 ubox
32 40 0.004753042 ubox
32 44 0.986869105 ubox
33 39 0.004697824 ubox
33 43 0.998367766 ubox
33 44 0.004370606 ubox
33 47 0.007460325 ubox
34 42 0.999395456 ubox
34 46 0.008281487 ubox
35 41 0.999733442 ubox
35 45 0.008781191 ubox
35 66 0.005154535 ubox
36 40 0.992466234 ubox
36 44 0.009024214 ubox
36 65 0.005250349 ubox
37 64 0.005218134 ubox
38 63 0.005036411 ubox
42 62 0.005495592 ubox
43 61 0.005988283 ubox
45 51 0.003963437 ubox
45 54 0.013827725 ubox
45 59 0.995316805 ubox
46 53 0.013461086 ubox
46 58 0.998839927 ubox
46 59 0.003557295 ubox
47 57 0.998955121 ubox
48 55 0.010111480 ubox
48 56 0.998420720 ubox
49 54 0.013014560 ubox
49 55 0.997782723 ubox
49 56 0.004051495 ubox
50 54 0.989622179 ubox
50 59 0.011867624 ubox
60 95 0.007238103 ubox
61 94 0.007119811 ubox
63 92 0.006769560 ubox
64 91 0.006853980 ubox
66 89 0.005705536 ubox
67 91 0.004080939 ubox
68 86 0.051426251 ubox
68 95 0.023719261 ubox
68 98 0.018693643 ubox
68 101 0.016459558 ubox
68 104 0.014335374 ubox
68 107 0.004899667 ubox
69 80 0.003275875 ubox
69 86 0.996043933 ubox
69 95 0.004485909 ubox
69 98 0.006867343 ubox
69 101 0.012108367 ubox
69 104 0.006911223 ubox
70 79 0.003262685 ubox
70 85 0.998750890 ubox
70 94 0.003824842 ubox
70 97 0.006570566 ubox
70 100 0.011750652 ubox
70 103 0.006667229 ubox
71 84 0.999124322 ubox
72 83 0.998937967 ubox
73 82 0.998620990 ubox
74 81 0.998390930 ubox
74 83 0.003209298 ubox
74 87 0.010253994 ubox
74 96 0.017953007 ubox
74 99 0.007700543 ubox
74 102 0.009644396 ubox
74 105 0.009733781 ubox
75 80 0.992606728 ubox
75 82 0.003750074 ubox
75 86 0.011306663 ubox
75 95 0.019183627 ubox
75 98 0.008232929 ubox
75 101 0.010516378 ubox
75 104 0.010794945 ubox
76 81 0.003895608 ubox
76 85 0.011084047 ubox
76 93 0.012262458 ubox
76 94 0.016077061 ubox
76 97 0.008074204 ubox
76 100 0.010464564 ubox
76 103 0.010741513 ubox
77 92 0.016558920 ubox
77 93 0.012030192 ubox
77 96 0.006708865 ubox
77 99 0.009822419 ubox
77 102 0.010031944 ubox
78 83 0.005929024 ubox
78 91 0.019606844 ubox
79 95 0.003740020 ubox
79 98 0.006873633 ubox
79 101 0.005070904 ubox
80 91 0.003692129 ubox
82 88 0.004280157 ubox
82 89 0.004021975 ubox
82 96 0.013000885 ubox
82 99 0.006911091 ubox
83 95 0.013649493 ubox
83 98 0.007307474 ubox
83 101 0.003318967 ubox
84 94 0.013214369 ubox
84 97 0.007111555 ubox
84 100 0.003231422 ubox
86 91 0.008029379 ubox
91 95 0.043203831 ubox
91 98 0.104017463 ubox
91 101 0.045566548 ubox
91 104 0.035210162 ubox
91 107 0.010415036 ubox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
45 59 0.9500000 lbox
46 58 0.9500000 lbox
47 57 0.9500000 lbox
48 56 0.9500000 lbox
49 55 0.9500000 lbox
50 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
