%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (244)
} def

/sequence { (\
GGAAAUUCGGCCGCGCUGAAAUCAGCAGCCUUGGCUCCGGAACGAAAGAUCCUGCCUUGGCAAGGCCUACAUCGGUUCGCCGAUGUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.015315024 ubox
1 7 0.012205139 ubox
1 8 0.237652488 ubox
1 12 0.015051021 ubox
1 23 0.007111749 ubox
1 26 0.003178064 ubox
1 38 0.011756641 ubox
1 52 0.004471792 ubox
1 67 0.005712187 ubox
1 95 0.075741543 ubox
1 98 0.172362703 ubox
1 101 0.075518163 ubox
1 104 0.070360631 ubox
1 107 0.017717946 ubox
2 6 0.012808932 ubox
2 7 0.187631740 ubox
2 8 0.223623359 ubox
2 11 0.015055663 ubox
2 22 0.006840828 ubox
2 23 0.012571643 ubox
2 37 0.011767283 ubox
2 51 0.004479988 ubox
2 66 0.005500752 ubox
2 95 0.061845077 ubox
2 98 0.051201937 ubox
2 101 0.033326441 ubox
2 104 0.032664310 ubox
2 107 0.010643156 ubox
3 7 0.194983186 ubox
3 22 0.012144308 ubox
3 36 0.010738870 ubox
3 50 0.004374956 ubox
3 68 0.003558484 ubox
4 22 0.003766009 ubox
4 68 0.004538691 ubox
5 68 0.006276368 ubox
6 20 0.019933495 ubox
6 33 0.003640380 ubox
6 46 0.003596951 ubox
6 69 0.004717185 ubox
6 88 0.007138841 ubox
6 89 0.015169146 ubox
6 90 0.025066934 ubox
6 91 0.010250547 ubox
6 92 0.021698881 ubox
6 93 0.287418135 ubox
6 94 0.021613647 ubox
6 96 0.008342515 ubox
6 97 0.014108378 ubox
6 99 0.007277811 ubox
6 100 0.013874047 ubox
6 102 0.006206825 ubox
6 103 0.012058340 ubox
6 105 0.005971942 ubox
6 106 0.011715976 ubox
7 19 0.022075192 ubox
7 45 0.004117488 ubox
7 69 0.011526137 ubox
7 83 0.005268868 ubox
7 87 0.003807942 ubox
7 88 0.015636615 ubox
7 89 0.023952814 ubox
7 90 0.011719283 ubox
7 91 0.021186880 ubox
7 92 0.324178268 ubox
7 93 0.020063263 ubox
7 94 0.006418106 ubox
7 96 0.014229160 ubox
7 97 0.006355652 ubox
7 99 0.014251121 ubox
7 100 0.006200106 ubox
7 102 0.012718879 ubox
7 103 0.005961766 ubox
7 105 0.012453709 ubox
7 106 0.005875257 ubox
8 18 0.022342154 ubox
8 44 0.004310742 ubox
8 82 0.005612553 ubox
8 91 0.327272033 ubox
9 14 0.003286220 ubox
9 17 0.022329964 ubox
9 30 0.012492217 ubox
9 36 0.010190814 ubox
9 43 0.004101762 ubox
9 67 0.998083274 ubox
9 81 0.005622186 ubox
10 16 0.022346076 ubox
10 29 0.012517041 ubox
10 35 0.012727239 ubox
10 66 0.999364979 ubox
10 67 0.003176461 ubox
10 80 0.005621992 ubox
11 15 0.022183661 ubox
11 28 0.012422266 ubox
11 34 0.012798121 ubox
11 40 0.003275724 ubox
11 65 0.999361967 ubox
11 79 0.005082258 ubox
12 33 0.012788144 ubox
12 39 0.003280072 ubox
12 64 0.998108207 ubox
12 65 0.004267693 ubox
13 26 0.034159770 ubox
13 29 0.022628380 ubox
13 32 0.005484111 ubox
13 61 0.011278277 ubox
13 66 0.008666229 ubox
13 78 0.003347438 ubox
14 25 0.033542845 ubox
14 28 0.025106893 ubox
14 60 0.010648632 ubox
14 64 0.007442317 ubox
14 65 0.008692787 ubox
15 23 0.003602623 ubox
15 26 0.998040365 ubox
15 29 0.007557513 ubox
15 76 0.003368604 ubox
16 25 0.999101265 ubox
16 28 0.007792136 ubox
16 75 0.003415122 ubox
17 24 0.998676169 ubox
17 27 0.008397974 ubox
17 74 0.003412636 ubox
18 22 0.004581069 ubox
18 23 0.995675302 ubox
18 26 0.008482826 ubox
18 73 0.003413657 ubox
19 72 0.003345661 ubox
25 66 0.017869281 ubox
26 65 0.017927417 ubox
27 36 0.004062782 ubox
28 35 0.004344054 ubox
28 61 0.998394840 ubox
28 66 0.009991570 ubox
29 34 0.004328899 ubox
29 60 0.999501760 ubox
29 65 0.010038599 ubox
30 59 0.999557934 ubox
30 60 0.006279971 ubox
30 64 0.010064122 ubox
31 59 0.006621572 ubox
31 63 0.010116321 ubox
32 62 0.010042221 ubox
33 56 0.999665890 ubox
33 57 0.004307570 ubox
33 61 0.009197762 ubox
34 55 0.999787189 ubox
34 56 0.003806099 ubox
34 61 0.003584612 ubox
35 54 0.998798393 ubox
35 59 0.008378010 ubox
35 60 0.004713898 ubox
36 45 0.006822253 ubox
36 49 0.007197756 ubox
36 54 0.012518991 ubox
36 59 0.004599668 ubox
37 44 0.006806015 ubox
37 48 0.007176170 ubox
37 54 0.028613564 ubox
38 44 0.005428293 ubox
38 48 0.005247385 ubox
38 54 0.011631835 ubox
39 43 0.005192453 ubox
39 50 0.004959617 ubox
39 51 0.010693026 ubox
39 52 0.997542102 ubox
39 53 0.015130790 ubox
39 56 0.005108243 ubox
40 50 0.008557910 ubox
40 51 0.998976899 ubox
40 52 0.014110832 ubox
40 55 0.005112467 ubox
41 50 0.987589900 ubox
42 50 0.031541155 ubox
43 48 0.868502333 ubox
44 51 0.008379026 ubox
45 50 0.008010382 ubox
53 62 0.003921102 ubox
54 61 0.004273381 ubox
54 66 0.016129883 ubox
55 60 0.004258158 ubox
55 65 0.016225032 ubox
56 64 0.016224532 ubox
57 63 0.015994017 ubox
58 62 0.013318147 ubox
59 67 0.008170767 ubox
60 66 0.008187423 ubox
61 65 0.008128136 ubox
64 77 0.003516570 ubox
65 76 0.004331721 ubox
66 75 0.004485646 ubox
67 74 0.004482048 ubox
67 91 0.009876601 ubox
68 87 0.953499517 ubox
68 88 0.043957595 ubox
68 89 0.015986961 ubox
68 90 0.013517982 ubox
68 91 0.007493295 ubox
68 92 0.005403567 ubox
68 93 0.003911234 ubox
69 86 0.995472943 ubox
70 85 0.999909099 ubox
71 84 0.999571023 ubox
72 83 0.999731773 ubox
73 82 0.999952792 ubox
74 80 0.007053243 ubox
74 81 0.999827102 ubox
75 80 0.993650184 ubox
85 95 0.003466541 ubox
86 94 0.003573946 ubox
91 95 0.040765445 ubox
91 98 0.098157222 ubox
91 101 0.043002963 ubox
91 104 0.033237398 ubox
91 107 0.009827572 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
68 87 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
