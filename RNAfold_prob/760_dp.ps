%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (760)
} def

/sequence { (\
GGAAAGACGUGGCAAAGGCAGGUCAAGUGGACGGGAAAACGGUGCACAGAGGUCGCGAAAGGGAGCUCGUGUCGCUUCGGUGGCACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.012875054 ubox
1 24 0.004538379 ubox
1 47 0.003596712 ubox
1 68 0.007035318 ubox
1 86 0.015181634 ubox
1 95 0.242640157 ubox
1 98 0.244158454 ubox
1 101 0.249718381 ubox
1 104 0.250848522 ubox
1 107 0.063332934 ubox
2 8 0.004107137 ubox
2 24 0.007715807 ubox
2 67 0.003195476 ubox
2 68 0.008479180 ubox
2 86 0.007939292 ubox
2 95 0.128087158 ubox
2 98 0.128536764 ubox
2 101 0.131280315 ubox
2 104 0.130782147 ubox
2 107 0.042674785 ubox
3 23 0.006180950 ubox
3 67 0.006164266 ubox
6 24 0.997475298 ubox
6 95 0.008920246 ubox
6 98 0.010929102 ubox
6 101 0.010910967 ubox
6 104 0.010758305 ubox
6 107 0.003762928 ubox
7 23 0.998709710 ubox
8 21 0.005650392 ubox
8 22 0.998605411 ubox
8 27 0.003205963 ubox
8 91 0.004449024 ubox
9 19 0.009297567 ubox
9 95 0.012360752 ubox
9 98 0.012301501 ubox
9 101 0.012435472 ubox
9 104 0.011106722 ubox
9 107 0.004176601 ubox
10 18 0.009285681 ubox
10 20 0.992152176 ubox
10 21 0.029598873 ubox
10 25 0.031195765 ubox
10 94 0.011118331 ubox
10 96 0.004930976 ubox
10 97 0.010704425 ubox
10 99 0.004679804 ubox
10 100 0.010827570 ubox
10 102 0.004466841 ubox
10 103 0.009670267 ubox
10 105 0.003868075 ubox
10 106 0.003667015 ubox
11 19 0.963731194 ubox
11 24 0.038965244 ubox
11 95 0.005911757 ubox
11 98 0.005695256 ubox
11 101 0.005408344 ubox
11 104 0.004355150 ubox
12 19 0.262186785 ubox
12 23 0.039052186 ubox
13 17 0.812107542 ubox
13 18 0.355482269 ubox
13 22 0.039053844 ubox
13 91 0.004054426 ubox
23 92 0.005681569 ubox
24 91 0.007595420 ubox
27 45 0.009510369 ubox
27 47 0.997719190 ubox
27 86 0.008192382 ubox
27 95 0.009413626 ubox
27 98 0.009658503 ubox
27 101 0.009926794 ubox
27 104 0.009881670 ubox
27 107 0.003448394 ubox
28 44 0.009393971 ubox
28 46 0.998992382 ubox
28 48 0.005587733 ubox
28 85 0.008196485 ubox
28 94 0.008431362 ubox
28 97 0.008605228 ubox
28 100 0.008853886 ubox
28 103 0.008801708 ubox
29 43 0.005963609 ubox
29 45 0.999563539 ubox
29 47 0.006306274 ubox
29 84 0.008181816 ubox
30 43 0.009361022 ubox
30 45 0.008205867 ubox
31 43 0.993427703 ubox
31 81 0.007082617 ubox
32 41 0.153180083 ubox
32 42 0.987024224 ubox
32 80 0.007208189 ubox
33 40 0.198791757 ubox
34 40 0.965460638 ubox
34 78 0.006884265 ubox
35 40 0.044340447 ubox
35 77 0.006794819 ubox
35 78 0.003681753 ubox
36 76 0.004902992 ubox
36 77 0.003735934 ubox
40 74 0.003162503 ubox
41 76 0.006276930 ubox
42 75 0.007617035 ubox
42 86 0.003271879 ubox
43 74 0.007615372 ubox
43 85 0.003277196 ubox
44 72 0.003637525 ubox
44 73 0.007567496 ubox
44 84 0.003278503 ubox
45 71 0.008138618 ubox
46 70 0.008197010 ubox
47 69 0.008220608 ubox
48 70 0.004290605 ubox
49 68 0.998207154 ubox
49 78 0.003331239 ubox
50 67 0.999544040 ubox
50 77 0.003347342 ubox
51 66 0.999504205 ubox
51 67 0.006530460 ubox
51 76 0.003340712 ubox
51 86 0.004291155 ubox
52 66 0.008796872 ubox
52 75 0.003339868 ubox
52 84 0.007855660 ubox
53 63 0.005600209 ubox
53 64 0.997523430 ubox
53 65 0.006127697 ubox
53 74 0.003204131 ubox
53 83 0.007867635 ubox
54 61 0.003698850 ubox
54 62 0.009660298 ubox
54 63 0.999569860 ubox
54 71 0.003264152 ubox
54 82 0.007874881 ubox
55 66 0.004251986 ubox
55 70 0.003352465 ubox
55 81 0.007856278 ubox
56 61 0.975109331 ubox
56 62 0.109302965 ubox
56 63 0.003967730 ubox
56 65 0.004280456 ubox
56 69 0.003359136 ubox
56 80 0.007736798 ubox
57 68 0.003389679 ubox
58 67 0.003284257 ubox
59 77 0.007626620 ubox
60 76 0.007762686 ubox
61 75 0.007853381 ubox
63 73 0.007837871 ubox
64 72 0.007238236 ubox
66 71 0.005539657 ubox
67 88 0.003299140 ubox
67 92 0.003264738 ubox
68 91 0.004490199 ubox
69 86 0.997771791 ubox
69 95 0.003353681 ubox
69 98 0.004591997 ubox
70 85 0.999151257 ubox
70 87 0.005877275 ubox
70 96 0.004762383 ubox
70 97 0.003313659 ubox
71 84 0.999864241 ubox
71 86 0.006486392 ubox
71 95 0.005813090 ubox
72 83 0.999535900 ubox
72 85 0.006409955 ubox
72 94 0.005796248 ubox
73 82 0.999662551 ubox
74 81 0.998921498 ubox
74 84 0.006703701 ubox
75 79 0.012321052 ubox
75 80 0.998610425 ubox
75 83 0.006709185 ubox
75 91 0.005857332 ubox
76 82 0.006630295 ubox
76 90 0.005839099 ubox
77 89 0.005720879 ubox
80 86 0.005527405 ubox
81 85 0.004980542 ubox
86 91 0.007760479 ubox
91 95 0.054621190 ubox
91 98 0.119628723 ubox
91 101 0.046275090 ubox
91 104 0.029962009 ubox
91 107 0.008721498 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
