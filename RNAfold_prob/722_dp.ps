%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (722)
} def

/sequence { (\
GGAAACAUGCAGCAAAGGUGGAUGAAGAUGGCGCGAAAAGGGCGAUCAGACGGUACGAAAGAACGGUCGCUCAGCUUCGGCUGAGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.037442981 ubox
1 10 0.020935719 ubox
1 13 0.007029265 ubox
1 47 0.003399807 ubox
1 68 0.007746811 ubox
1 86 0.009564715 ubox
1 95 0.241927638 ubox
1 98 0.243366334 ubox
1 101 0.248900462 ubox
1 104 0.250039798 ubox
1 107 0.063129448 ubox
2 6 0.006355831 ubox
2 10 0.005042844 ubox
2 47 0.004394243 ubox
2 67 0.004001253 ubox
2 68 0.009881632 ubox
2 86 0.006920414 ubox
2 95 0.127726131 ubox
2 98 0.128114341 ubox
2 101 0.130853041 ubox
2 104 0.130356641 ubox
2 107 0.042536620 ubox
3 8 0.011221824 ubox
3 23 0.017145998 ubox
3 46 0.003609029 ubox
3 67 0.007724158 ubox
4 23 0.004580168 ubox
5 19 0.009475117 ubox
5 23 0.003807298 ubox
6 12 0.005695028 ubox
6 17 0.005809678 ubox
6 18 0.009794660 ubox
6 20 0.044881964 ubox
6 21 0.007269633 ubox
6 24 0.988937944 ubox
6 91 0.017127474 ubox
7 19 0.044815027 ubox
7 23 0.993477471 ubox
8 14 0.007146453 ubox
8 15 0.006789115 ubox
8 16 0.005357019 ubox
8 17 0.004590451 ubox
8 18 0.043573757 ubox
8 20 0.008974837 ubox
8 21 0.003632487 ubox
8 22 0.988296720 ubox
8 25 0.003513435 ubox
8 26 0.003260462 ubox
8 96 0.014631875 ubox
8 99 0.014325236 ubox
8 102 0.014399054 ubox
8 105 0.015552379 ubox
9 13 0.007813890 ubox
9 19 0.018874670 ubox
9 95 0.016082263 ubox
9 98 0.015786532 ubox
9 101 0.015916698 ubox
9 104 0.017198400 ubox
10 17 0.023227825 ubox
10 18 0.019395555 ubox
10 20 0.992404253 ubox
10 21 0.045131810 ubox
10 24 0.020754752 ubox
10 91 0.005025789 ubox
11 19 0.977781710 ubox
11 23 0.020352471 ubox
12 19 0.161501296 ubox
12 95 0.005052027 ubox
12 98 0.005210686 ubox
12 101 0.007269919 ubox
12 104 0.006985631 ubox
13 17 0.863495848 ubox
13 18 0.258346582 ubox
13 20 0.021969111 ubox
13 21 0.008833935 ubox
13 24 0.012838095 ubox
13 91 0.005086983 ubox
14 19 0.019408431 ubox
14 23 0.012585131 ubox
17 95 0.004677486 ubox
17 98 0.012868410 ubox
17 101 0.015243495 ubox
17 104 0.016204195 ubox
17 107 0.005725504 ubox
18 95 0.013498721 ubox
18 98 0.017570247 ubox
18 101 0.026408435 ubox
18 104 0.026581161 ubox
18 107 0.008785605 ubox
19 26 0.003320633 ubox
19 94 0.013137215 ubox
19 96 0.016435347 ubox
19 97 0.015574092 ubox
19 99 0.018796099 ubox
19 100 0.024277563 ubox
19 102 0.019646890 ubox
19 103 0.024344742 ubox
19 105 0.013821677 ubox
19 106 0.008164684 ubox
20 95 0.019697307 ubox
20 98 0.022553929 ubox
20 101 0.023572916 ubox
20 104 0.015767402 ubox
21 95 0.008921631 ubox
21 98 0.019223928 ubox
21 101 0.018970647 ubox
21 104 0.011607165 ubox
21 107 0.003358494 ubox
23 48 0.003878457 ubox
23 90 0.004678900 ubox
23 92 0.008183772 ubox
23 93 0.003576151 ubox
23 96 0.028760765 ubox
23 99 0.027986013 ubox
23 102 0.018609681 ubox
23 105 0.011765069 ubox
24 47 0.004165061 ubox
24 95 0.030430798 ubox
24 98 0.029659997 ubox
24 101 0.020715817 ubox
24 104 0.014637305 ubox
25 46 0.003816480 ubox
27 47 0.996759140 ubox
27 95 0.005292835 ubox
27 98 0.007563365 ubox
27 101 0.007628508 ubox
27 104 0.007689314 ubox
28 46 0.997744908 ubox
29 44 0.007088277 ubox
29 45 0.991912443 ubox
29 48 0.045688382 ubox
29 96 0.007676266 ubox
29 99 0.007671519 ubox
29 102 0.007796225 ubox
29 105 0.005853382 ubox
30 43 0.011094918 ubox
30 47 0.050776683 ubox
30 95 0.008115046 ubox
30 98 0.008110155 ubox
30 101 0.008244281 ubox
30 104 0.006422053 ubox
31 43 0.998023494 ubox
31 46 0.050308626 ubox
32 41 0.014816333 ubox
32 42 0.997977566 ubox
32 44 0.059435461 ubox
33 43 0.059689237 ubox
34 40 0.981284573 ubox
34 41 0.152026862 ubox
34 42 0.059523752 ubox
46 92 0.004130504 ubox
47 91 0.004981620 ubox
49 67 0.003698448 ubox
49 68 0.997243061 ubox
50 67 0.998586430 ubox
51 57 0.003724967 ubox
51 65 0.030074822 ubox
51 66 0.997578401 ubox
52 56 0.003592783 ubox
52 64 0.038147552 ubox
52 68 0.008219523 ubox
53 64 0.995347735 ubox
53 67 0.007497665 ubox
53 68 0.035685426 ubox
54 59 0.003408110 ubox
54 60 0.005049824 ubox
54 61 0.009608856 ubox
54 62 0.037228245 ubox
54 63 0.983978858 ubox
55 67 0.005177631 ubox
56 61 0.832060155 ubox
56 65 0.043114415 ubox
56 66 0.005289684 ubox
57 64 0.042497864 ubox
57 68 0.005028347 ubox
58 67 0.004962240 ubox
61 68 0.004711857 ubox
62 67 0.004311538 ubox
64 91 0.004048238 ubox
67 88 0.005074191 ubox
67 92 0.004627424 ubox
68 91 0.005728839 ubox
69 86 0.998836257 ubox
70 85 0.999971121 ubox
71 84 0.999845403 ubox
72 83 0.999980718 ubox
73 82 0.999752491 ubox
74 81 0.999979466 ubox
75 79 0.011547156 ubox
75 80 0.999157581 ubox
76 80 0.003704437 ubox
86 91 0.006751558 ubox
91 95 0.054674588 ubox
91 98 0.119594195 ubox
91 101 0.046213215 ubox
91 104 0.029899538 ubox
91 107 0.008703431 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
