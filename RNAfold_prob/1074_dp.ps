%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1074)
} def

/sequence { (\
GGAAAAAAGAUGGCUAGAGUACCAGAAACUGAGUACAAAAGAUCAUGCAAAGCAGAUCACUAGGCAUCAAAAGGUUUCGACCUUUUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 68 0.003370057 ubox
1 78 0.018819814 ubox
1 86 0.006094120 ubox
1 95 0.066288338 ubox
1 98 0.067899626 ubox
1 101 0.069407094 ubox
1 104 0.069713274 ubox
1 107 0.017599749 ubox
2 68 0.004567414 ubox
2 77 0.018837055 ubox
2 78 0.017473486 ubox
2 85 0.005852436 ubox
2 86 0.011638033 ubox
2 95 0.034989609 ubox
2 98 0.035748389 ubox
2 101 0.036488594 ubox
2 104 0.036346408 ubox
2 107 0.011859313 ubox
3 67 0.004043774 ubox
3 76 0.018811531 ubox
3 77 0.017522318 ubox
3 84 0.005041783 ubox
3 85 0.010800956 ubox
3 86 0.009108814 ubox
4 75 0.018411264 ubox
4 76 0.017441190 ubox
4 84 0.008187405 ubox
4 85 0.008028737 ubox
4 86 0.008404459 ubox
5 75 0.017079137 ubox
5 83 0.004648455 ubox
5 84 0.006133534 ubox
5 85 0.007474336 ubox
5 86 0.008415339 ubox
6 83 0.003493872 ubox
6 84 0.005720567 ubox
6 85 0.007491680 ubox
6 86 0.007853689 ubox
7 83 0.003260750 ubox
7 84 0.005747782 ubox
7 85 0.006760408 ubox
7 86 0.006557724 ubox
8 83 0.003314924 ubox
8 84 0.004719991 ubox
8 85 0.004931801 ubox
8 86 0.004691331 ubox
9 68 0.998462061 ubox
10 67 0.999468454 ubox
11 66 0.999519531 ubox
12 65 0.999763699 ubox
13 65 0.010383967 ubox
14 63 0.999679246 ubox
14 64 0.011908026 ubox
15 62 0.999596932 ubox
15 63 0.008973005 ubox
16 61 0.999060995 ubox
17 60 0.993160312 ubox
17 61 0.004281498 ubox
18 30 0.007777255 ubox
19 29 0.008027195 ubox
19 36 0.998128600 ubox
20 28 0.007854628 ubox
20 35 0.999325614 ubox
21 34 0.999551613 ubox
22 33 0.999572156 ubox
23 31 0.997919661 ubox
23 33 0.003722890 ubox
24 30 0.995710890 ubox
25 29 0.973904709 ubox
25 30 0.038401933 ubox
26 30 0.004346749 ubox
38 61 0.003634071 ubox
41 58 0.998450748 ubox
42 57 0.999422532 ubox
43 56 0.999360983 ubox
44 55 0.997301753 ubox
46 51 0.011390372 ubox
46 52 0.006439113 ubox
46 54 0.991752199 ubox
47 53 0.997903056 ubox
48 52 0.990663334 ubox
67 88 0.004536318 ubox
67 92 0.004894953 ubox
68 91 0.006726110 ubox
69 84 0.004635142 ubox
69 85 0.028887777 ubox
69 86 0.874092244 ubox
70 84 0.026461192 ubox
70 85 0.955422587 ubox
70 86 0.041801753 ubox
71 83 0.019146188 ubox
71 84 0.974014437 ubox
71 85 0.037039177 ubox
71 86 0.006524743 ubox
72 83 0.979752754 ubox
72 84 0.028183558 ubox
72 85 0.003591744 ubox
73 81 0.003399025 ubox
73 82 0.981465202 ubox
73 83 0.013803509 ubox
73 95 0.010081501 ubox
73 98 0.021080363 ubox
73 101 0.007965342 ubox
73 104 0.004642389 ubox
74 81 0.980935825 ubox
74 82 0.013517557 ubox
74 95 0.187652466 ubox
74 98 0.006588034 ubox
74 101 0.004382598 ubox
74 104 0.003534794 ubox
75 79 0.035342136 ubox
75 80 0.906777524 ubox
75 94 0.188131828 ubox
75 97 0.006369646 ubox
75 100 0.004320643 ubox
75 103 0.003493547 ubox
76 80 0.027809422 ubox
76 93 0.188183304 ubox
76 96 0.005259894 ubox
76 99 0.003828338 ubox
77 92 0.188417040 ubox
78 91 0.188361859 ubox
79 85 0.004947525 ubox
79 86 0.009823451 ubox
80 84 0.004262508 ubox
80 85 0.008815123 ubox
82 91 0.015738325 ubox
83 87 0.007942125 ubox
83 88 0.007964487 ubox
83 89 0.003942937 ubox
83 90 0.017206901 ubox
83 92 0.004739548 ubox
83 93 0.006870088 ubox
83 94 0.010734948 ubox
84 88 0.004649984 ubox
84 89 0.015148539 ubox
84 90 0.005329500 ubox
84 91 0.006044696 ubox
84 92 0.010483188 ubox
84 93 0.018765513 ubox
84 94 0.008060205 ubox
85 89 0.005268550 ubox
85 90 0.006602671 ubox
85 91 0.011851873 ubox
85 92 0.024368959 ubox
85 93 0.013156774 ubox
85 94 0.010633101 ubox
85 97 0.004015714 ubox
85 100 0.003187185 ubox
86 90 0.010765119 ubox
86 91 0.025673426 ubox
86 92 0.016139196 ubox
86 93 0.016317417 ubox
86 94 0.006231845 ubox
86 96 0.006101514 ubox
86 97 0.004107889 ubox
86 99 0.004853431 ubox
86 100 0.003257413 ubox
86 102 0.004308048 ubox
86 105 0.003480997 ubox
91 95 0.042235246 ubox
91 98 0.101844131 ubox
91 101 0.044684555 ubox
91 104 0.034578694 ubox
91 107 0.010230187 ubox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
