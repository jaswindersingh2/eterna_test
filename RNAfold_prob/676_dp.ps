%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (676)
} def

/sequence { (\
GGAAAGCAUAAUAUAAAAAAAAAAAAUAUAAACAUAAAAAAAAAAAAUAUGAAAUGCAAAAAAAAAAACAUUCAGUUCGCUGAAUGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.068947686 ubox
1 9 0.006581579 ubox
1 12 0.003994838 ubox
1 14 0.003531869 ubox
1 33 0.014145433 ubox
1 55 0.003717743 ubox
1 57 0.075411038 ubox
1 95 0.065706220 ubox
1 98 0.066237931 ubox
1 101 0.067666046 ubox
1 104 0.067971868 ubox
1 107 0.017161955 ubox
2 7 0.029159035 ubox
2 9 0.005256773 ubox
2 33 0.004020410 ubox
2 55 0.003759059 ubox
2 57 0.023070643 ubox
2 95 0.034662512 ubox
2 98 0.034751308 ubox
2 101 0.035500625 ubox
2 104 0.035371005 ubox
2 107 0.011542422 ubox
3 9 0.006253859 ubox
3 12 0.007175210 ubox
3 14 0.004616678 ubox
3 55 0.058028758 ubox
4 9 0.006294421 ubox
4 12 0.004479390 ubox
4 14 0.003553966 ubox
4 55 0.003567006 ubox
5 9 0.003866234 ubox
5 12 0.015078495 ubox
5 14 0.013409753 ubox
5 27 0.003353844 ubox
5 29 0.003511077 ubox
5 35 0.005710674 ubox
5 55 0.005052485 ubox
6 12 0.004820615 ubox
6 14 0.003745091 ubox
6 33 0.010686796 ubox
6 57 0.944004604 ubox
6 95 0.009410357 ubox
6 98 0.009322375 ubox
6 101 0.009369508 ubox
6 104 0.009200689 ubox
6 107 0.003209856 ubox
7 51 0.101204498 ubox
7 56 0.944981761 ubox
7 91 0.011708805 ubox
8 12 0.003665433 ubox
8 14 0.009694688 ubox
8 27 0.006062865 ubox
8 29 0.015453555 ubox
8 35 0.005568264 ubox
8 50 0.101331181 ubox
8 55 0.938810831 ubox
9 13 0.009336955 ubox
9 15 0.013802270 ubox
9 16 0.009603649 ubox
9 17 0.005897379 ubox
9 18 0.008843475 ubox
9 19 0.004317609 ubox
9 20 0.004062654 ubox
9 21 0.003766115 ubox
9 22 0.003559961 ubox
9 23 0.003267973 ubox
9 24 0.003370645 ubox
9 25 0.003360709 ubox
9 26 0.006414789 ubox
9 28 0.016997624 ubox
9 30 0.015859384 ubox
9 31 0.016159062 ubox
9 32 0.005067622 ubox
9 34 0.005846407 ubox
9 36 0.006318159 ubox
9 49 0.101074638 ubox
9 51 0.021905100 ubox
9 52 0.044569917 ubox
9 53 0.057861260 ubox
9 54 0.872465994 ubox
10 14 0.015301714 ubox
10 27 0.017149347 ubox
10 29 0.015159652 ubox
10 35 0.007308269 ubox
10 48 0.095961494 ubox
10 50 0.025387896 ubox
10 55 0.004200641 ubox
11 27 0.020709475 ubox
11 29 0.157845971 ubox
11 35 0.006616192 ubox
11 48 0.018314174 ubox
11 50 0.484732450 ubox
11 55 0.005261062 ubox
12 16 0.009197453 ubox
12 17 0.017591158 ubox
12 18 0.016217329 ubox
12 19 0.020695643 ubox
12 20 0.012945683 ubox
12 21 0.019462210 ubox
12 22 0.010055178 ubox
12 23 0.009825784 ubox
12 24 0.008625330 ubox
12 25 0.010359860 ubox
12 26 0.020981410 ubox
12 28 0.165055539 ubox
12 30 0.134832607 ubox
12 31 0.008289207 ubox
12 32 0.005684916 ubox
12 34 0.006352814 ubox
12 36 0.014979224 ubox
12 44 0.006516790 ubox
12 45 0.006526894 ubox
12 46 0.025317073 ubox
12 47 0.022055056 ubox
12 49 0.493354187 ubox
12 51 0.610197783 ubox
12 52 0.042767756 ubox
12 53 0.026533714 ubox
12 54 0.007899161 ubox
12 56 0.003946189 ubox
13 27 0.165454466 ubox
13 29 0.142858686 ubox
13 35 0.015799183 ubox
13 48 0.491088973 ubox
13 50 0.663735388 ubox
13 55 0.004881795 ubox
14 18 0.009711445 ubox
14 19 0.018646776 ubox
14 20 0.017236598 ubox
14 21 0.022174872 ubox
14 22 0.013861571 ubox
14 23 0.021608918 ubox
14 24 0.011941986 ubox
14 25 0.012255382 ubox
14 26 0.160309608 ubox
14 28 0.143317643 ubox
14 30 0.018704695 ubox
14 31 0.006273890 ubox
14 32 0.005195323 ubox
14 34 0.015211189 ubox
14 36 0.008506626 ubox
14 37 0.003316768 ubox
14 39 0.003329641 ubox
14 40 0.003336668 ubox
14 41 0.003967693 ubox
14 42 0.005713524 ubox
14 43 0.007672402 ubox
14 44 0.012912960 ubox
14 45 0.012558981 ubox
14 46 0.023035111 ubox
14 47 0.469857497 ubox
14 49 0.664960299 ubox
14 51 0.029583921 ubox
14 52 0.009774870 ubox
14 53 0.011074334 ubox
14 54 0.005606386 ubox
15 27 0.137451639 ubox
15 29 0.019370640 ubox
15 35 0.009668761 ubox
15 48 0.632008430 ubox
15 50 0.028732438 ubox
16 27 0.012443388 ubox
16 29 0.010785628 ubox
16 35 0.006526601 ubox
16 48 0.029106930 ubox
16 50 0.011124814 ubox
17 27 0.011410263 ubox
17 29 0.008896511 ubox
17 35 0.003841610 ubox
17 48 0.013750379 ubox
17 50 0.006821786 ubox
18 27 0.020955061 ubox
18 29 0.009935983 ubox
18 35 0.003911159 ubox
18 48 0.008503006 ubox
18 50 0.003951249 ubox
19 27 0.013723162 ubox
19 29 0.010362195 ubox
19 35 0.004182145 ubox
19 48 0.005831599 ubox
19 50 0.003559180 ubox
20 27 0.021942259 ubox
20 29 0.019741606 ubox
20 35 0.004081083 ubox
20 48 0.004294150 ubox
20 50 0.003534067 ubox
21 27 0.017201972 ubox
21 29 0.013195370 ubox
21 35 0.004408002 ubox
21 48 0.003355109 ubox
21 50 0.003336237 ubox
21 55 0.004164942 ubox
22 27 0.018589277 ubox
22 29 0.020796802 ubox
22 35 0.006040648 ubox
22 50 0.003663074 ubox
22 55 0.003242898 ubox
23 27 0.011335135 ubox
23 29 0.016254354 ubox
23 35 0.008627771 ubox
23 50 0.003592739 ubox
24 29 0.017632607 ubox
24 35 0.011762058 ubox
24 50 0.004311891 ubox
25 29 0.010746710 ubox
25 35 0.018996180 ubox
25 50 0.005231500 ubox
26 35 0.155340324 ubox
26 48 0.009357382 ubox
26 50 0.080462551 ubox
26 55 0.007949756 ubox
27 31 0.010907065 ubox
27 32 0.025921133 ubox
27 34 0.158283107 ubox
27 36 0.455220900 ubox
27 37 0.030830471 ubox
27 38 0.022607151 ubox
27 39 0.010411381 ubox
27 40 0.008055979 ubox
27 41 0.004926979 ubox
27 42 0.004783421 ubox
27 43 0.004924792 ubox
27 44 0.004617876 ubox
27 45 0.004537136 ubox
27 46 0.006888289 ubox
27 47 0.011765268 ubox
27 49 0.082396509 ubox
27 51 0.030040145 ubox
27 52 0.004548396 ubox
27 53 0.005470119 ubox
27 54 0.008276720 ubox
27 56 0.026249396 ubox
27 58 0.004349629 ubox
28 35 0.473707826 ubox
28 48 0.082394799 ubox
28 50 0.033652179 ubox
28 55 0.029654978 ubox
29 34 0.441948347 ubox
29 36 0.071026954 ubox
29 37 0.013813347 ubox
29 38 0.014692447 ubox
29 39 0.005881583 ubox
29 40 0.005362181 ubox
29 41 0.005179250 ubox
29 42 0.005245450 ubox
29 43 0.004976347 ubox
29 44 0.005089195 ubox
29 45 0.006070743 ubox
29 46 0.007559226 ubox
29 47 0.079581872 ubox
29 49 0.034052190 ubox
29 51 0.004605303 ubox
29 52 0.007173498 ubox
29 53 0.018806638 ubox
29 54 0.028590420 ubox
29 56 0.011144507 ubox
30 35 0.069517991 ubox
30 48 0.032524189 ubox
30 50 0.004897831 ubox
30 55 0.011735019 ubox
31 35 0.010009356 ubox
31 48 0.004159649 ubox
31 50 0.004219084 ubox
31 55 0.009251704 ubox
32 48 0.003681767 ubox
32 50 0.005342293 ubox
32 55 0.005432789 ubox
33 51 0.287168276 ubox
33 56 0.043340832 ubox
34 48 0.013302410 ubox
34 50 0.288074532 ubox
34 55 0.043158864 ubox
35 39 0.006483759 ubox
35 40 0.013860746 ubox
35 41 0.015666309 ubox
35 42 0.017463193 ubox
35 43 0.010777722 ubox
35 44 0.014987228 ubox
35 45 0.007165735 ubox
35 46 0.008291219 ubox
35 47 0.015344006 ubox
35 49 0.287004530 ubox
35 51 0.006209488 ubox
35 52 0.003760510 ubox
35 53 0.004745660 ubox
35 54 0.041498506 ubox
36 48 0.274817716 ubox
36 50 0.006874101 ubox
36 55 0.003174674 ubox
37 48 0.014818978 ubox
37 50 0.006888785 ubox
38 48 0.008330946 ubox
38 50 0.007748178 ubox
39 48 0.014970556 ubox
39 50 0.010998723 ubox
40 48 0.009491205 ubox
40 50 0.008235899 ubox
41 48 0.015667641 ubox
41 50 0.013274686 ubox
42 48 0.011048177 ubox
42 50 0.008321695 ubox
43 48 0.011551934 ubox
43 50 0.012967234 ubox
44 48 0.006968841 ubox
44 50 0.010079212 ubox
45 50 0.010948798 ubox
46 50 0.006729287 ubox
46 55 0.006500544 ubox
47 55 0.015782645 ubox
48 52 0.005255110 ubox
48 53 0.010187055 ubox
48 54 0.016072582 ubox
48 56 0.014425303 ubox
48 59 0.005425984 ubox
48 60 0.011076541 ubox
48 61 0.004337146 ubox
48 62 0.003533374 ubox
49 55 0.016139975 ubox
50 54 0.014564253 ubox
50 56 0.004017692 ubox
50 58 0.051614748 ubox
50 59 0.013183278 ubox
50 60 0.006283159 ubox
50 61 0.005788446 ubox
50 62 0.005335349 ubox
50 63 0.004966163 ubox
50 64 0.004678375 ubox
50 65 0.004539558 ubox
50 66 0.004548650 ubox
50 67 0.004239524 ubox
50 68 0.003277460 ubox
50 96 0.004562785 ubox
50 99 0.005519917 ubox
50 102 0.014420745 ubox
50 105 0.014316951 ubox
51 55 0.003457359 ubox
51 57 0.057157770 ubox
51 95 0.005053653 ubox
51 98 0.006117403 ubox
51 101 0.016030210 ubox
51 104 0.015898330 ubox
55 59 0.003379537 ubox
55 60 0.014552811 ubox
55 61 0.013411068 ubox
55 62 0.017085696 ubox
55 63 0.010476886 ubox
55 64 0.015663507 ubox
55 65 0.007537638 ubox
55 66 0.006941240 ubox
55 67 0.006402765 ubox
55 68 0.005018076 ubox
55 70 0.003422519 ubox
55 96 0.009603418 ubox
55 99 0.037950483 ubox
55 100 0.012250185 ubox
55 102 0.020791398 ubox
55 105 0.004697192 ubox
56 69 0.003626973 ubox
56 95 0.010427599 ubox
56 98 0.041211677 ubox
56 101 0.022674095 ubox
56 104 0.005206018 ubox
57 91 0.003409464 ubox
69 86 0.994410300 ubox
69 91 0.005214507 ubox
70 85 0.998556197 ubox
71 84 0.998620094 ubox
71 88 0.008791531 ubox
71 93 0.009728527 ubox
72 83 0.999451904 ubox
72 87 0.010088052 ubox
72 92 0.011189453 ubox
73 82 0.999830738 ubox
73 86 0.010215338 ubox
73 91 0.011329300 ubox
74 81 0.998395318 ubox
74 85 0.008945527 ubox
75 80 0.990106006 ubox
75 85 0.005698920 ubox
75 95 0.003487371 ubox
76 84 0.008738474 ubox
76 88 0.011374705 ubox
77 83 0.009385619 ubox
77 87 0.011603265 ubox
78 82 0.009338227 ubox
78 86 0.011621247 ubox
78 91 0.003297975 ubox
79 85 0.009146509 ubox
80 91 0.004053346 ubox
81 90 0.004063969 ubox
85 96 0.008232454 ubox
85 99 0.003324924 ubox
86 95 0.012936881 ubox
86 98 0.005233275 ubox
86 101 0.004187277 ubox
86 104 0.003609144 ubox
91 95 0.043048249 ubox
91 98 0.103754079 ubox
91 101 0.045500875 ubox
91 104 0.035202362 ubox
91 107 0.010414431 ubox
6 57 0.9500000 lbox
7 56 0.9500000 lbox
8 55 0.9500000 lbox
9 54 0.9500000 lbox
11 50 0.9500000 lbox
12 49 0.9500000 lbox
13 48 0.9500000 lbox
14 47 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
