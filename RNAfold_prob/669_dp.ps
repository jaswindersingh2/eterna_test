%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (669)
} def

/sequence { (\
GGAAAGGCGAAGAGCAAAAAAAAAAAGCUCAAGACCAAAAAAAAAAAGGUCAACGCCAUAUAUAUAUAGCUAAAAUUCGUUUUAGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.004598090 ubox
1 57 0.012821183 ubox
1 59 0.008608985 ubox
1 61 0.049647131 ubox
1 63 0.040987634 ubox
1 65 0.013713033 ubox
1 67 0.004635853 ubox
1 86 0.038259377 ubox
1 95 0.070893989 ubox
1 98 0.071383267 ubox
1 101 0.073000139 ubox
1 104 0.073325949 ubox
1 107 0.018512648 ubox
2 56 0.012428538 ubox
2 57 0.003427813 ubox
2 59 0.040249860 ubox
2 61 0.063674153 ubox
2 63 0.020900511 ubox
2 65 0.006583325 ubox
2 67 0.003180886 ubox
2 86 0.005035448 ubox
2 95 0.037319104 ubox
2 98 0.037473174 ubox
2 101 0.038267327 ubox
2 104 0.038120413 ubox
2 107 0.012438684 ubox
3 59 0.041194821 ubox
3 61 0.044243561 ubox
3 63 0.015306357 ubox
3 65 0.005647813 ubox
3 67 0.003833028 ubox
4 59 0.166656665 ubox
4 61 0.039979173 ubox
4 63 0.008174927 ubox
4 65 0.004066687 ubox
4 83 0.043181726 ubox
5 59 0.111495607 ubox
5 61 0.021915801 ubox
5 63 0.011406455 ubox
5 65 0.006923462 ubox
5 67 0.005659060 ubox
5 82 0.044397638 ubox
6 36 0.008967399 ubox
6 57 0.997591994 ubox
6 81 0.044769539 ubox
6 95 0.003538669 ubox
6 98 0.003764995 ubox
6 101 0.003752389 ubox
6 104 0.003683650 ubox
7 35 0.008971628 ubox
7 56 0.998668112 ubox
7 80 0.045176275 ubox
8 33 0.007318124 ubox
8 55 0.998631047 ubox
8 79 0.045265935 ubox
9 54 0.979738549 ubox
9 78 0.045258595 ubox
10 77 0.044671353 ubox
11 76 0.038863591 ubox
12 30 0.998581685 ubox
12 51 0.004302541 ubox
13 29 0.999665711 ubox
13 50 0.004068833 ubox
14 28 0.999951898 ubox
15 27 0.999204230 ubox
15 48 0.003925488 ubox
33 51 0.998543871 ubox
34 50 0.999650149 ubox
35 49 0.999912795 ubox
36 48 0.999165723 ubox
48 57 0.009346970 ubox
49 56 0.009353105 ubox
50 55 0.008828489 ubox
53 71 0.005228532 ubox
55 70 0.043334980 ubox
56 69 0.043308114 ubox
58 63 0.014533462 ubox
58 65 0.045079613 ubox
58 67 0.118708585 ubox
59 64 0.044186145 ubox
59 66 0.124354240 ubox
59 68 0.128608519 ubox
59 87 0.004801330 ubox
59 92 0.006306484 ubox
59 93 0.006293310 ubox
59 94 0.008025817 ubox
59 96 0.018403992 ubox
59 97 0.008875568 ubox
59 99 0.004086754 ubox
60 65 0.113059678 ubox
60 67 0.135100522 ubox
61 66 0.125945790 ubox
61 68 0.046476085 ubox
61 87 0.005918463 ubox
61 88 0.003533311 ubox
61 89 0.004485993 ubox
61 90 0.005246736 ubox
61 91 0.005296021 ubox
61 92 0.019478279 ubox
61 93 0.016722807 ubox
61 94 0.021610389 ubox
61 96 0.009024284 ubox
61 97 0.004265642 ubox
62 67 0.044366897 ubox
63 68 0.017251002 ubox
63 87 0.009730628 ubox
63 88 0.006999872 ubox
63 89 0.012191081 ubox
63 90 0.016976539 ubox
63 91 0.015260096 ubox
63 92 0.056931605 ubox
63 93 0.018683469 ubox
63 94 0.010419133 ubox
63 96 0.003720502 ubox
65 84 0.004971293 ubox
65 87 0.018685187 ubox
65 88 0.034297795 ubox
65 89 0.035264704 ubox
65 90 0.052916141 ubox
65 91 0.018166751 ubox
65 92 0.025743094 ubox
65 93 0.008534407 ubox
65 94 0.004025682 ubox
66 83 0.005119690 ubox
67 87 0.094939131 ubox
67 88 0.143059825 ubox
67 89 0.032852098 ubox
67 90 0.033570831 ubox
67 91 0.006755861 ubox
67 92 0.005930792 ubox
67 93 0.003290711 ubox
68 81 0.006175409 ubox
69 80 0.007277738 ubox
69 86 0.997420919 ubox
70 79 0.007342958 ubox
70 85 0.998463971 ubox
71 84 0.998122748 ubox
72 81 0.004624473 ubox
72 82 0.020512727 ubox
72 83 0.996568155 ubox
73 80 0.007050046 ubox
73 81 0.028517908 ubox
73 82 0.993370252 ubox
73 83 0.038720039 ubox
74 80 0.032036857 ubox
74 81 0.957766597 ubox
74 82 0.054773376 ubox
74 83 0.008793652 ubox
75 80 0.754810601 ubox
75 81 0.066083435 ubox
75 82 0.014641684 ubox
76 93 0.007584348 ubox
76 97 0.004455317 ubox
77 92 0.008712195 ubox
77 96 0.005247054 ubox
77 97 0.003395460 ubox
78 91 0.008814729 ubox
79 86 0.003377229 ubox
79 95 0.026470547 ubox
79 98 0.003829477 ubox
80 85 0.003216166 ubox
80 89 0.004293009 ubox
80 90 0.004662271 ubox
80 94 0.026432754 ubox
80 97 0.003793905 ubox
81 88 0.004898298 ubox
81 89 0.005011622 ubox
81 92 0.003649588 ubox
81 93 0.026349944 ubox
81 96 0.003404935 ubox
82 87 0.004218400 ubox
82 88 0.004966116 ubox
82 91 0.004059399 ubox
82 92 0.026221913 ubox
83 87 0.004153761 ubox
83 90 0.004000924 ubox
83 91 0.025664410 ubox
86 91 0.006530631 ubox
91 95 0.043038371 ubox
91 98 0.103620454 ubox
91 101 0.045392212 ubox
91 104 0.035074797 ubox
91 107 0.010373527 ubox
6 57 0.9500000 lbox
7 56 0.9500000 lbox
8 55 0.9500000 lbox
9 54 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
