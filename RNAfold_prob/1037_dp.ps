%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1037)
} def

/sequence { (\
GGAAAAGUCAAAGACAAGCUCAAAGAGCAAGAUCCAAAGGAUCAAGAUCAAAGAUCAAGCCAAAGGCACUCAAGCUUCGGCUUGAGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.004915937 ubox
1 9 0.041671062 ubox
1 15 0.021350716 ubox
1 20 0.003969394 ubox
1 21 0.006476079 ubox
1 35 0.019286838 ubox
1 49 0.020544313 ubox
1 56 0.010640290 ubox
1 60 0.003436210 ubox
1 61 0.094652383 ubox
1 67 0.009842882 ubox
1 69 0.013216330 ubox
1 70 0.004013197 ubox
1 95 0.352730781 ubox
1 98 0.369545427 ubox
1 101 0.369909868 ubox
1 104 0.367999741 ubox
1 107 0.092970223 ubox
2 8 0.035964098 ubox
2 9 0.141829616 ubox
2 15 0.014282713 ubox
2 19 0.005754660 ubox
2 20 0.005432288 ubox
2 21 0.008594907 ubox
2 34 0.019299321 ubox
2 48 0.013166628 ubox
2 49 0.034819876 ubox
2 55 0.006589675 ubox
2 56 0.017162952 ubox
2 60 0.094412637 ubox
2 61 0.006004569 ubox
2 67 0.007055986 ubox
2 69 0.008448394 ubox
2 95 0.183707608 ubox
2 98 0.195027936 ubox
2 101 0.188240338 ubox
2 104 0.187222683 ubox
2 107 0.061088356 ubox
3 8 0.129859205 ubox
3 20 0.008427956 ubox
3 33 0.018040708 ubox
3 48 0.032589605 ubox
3 55 0.015831839 ubox
4 8 0.006076630 ubox
5 83 0.005578669 ubox
6 20 0.004685004 ubox
6 70 0.004939718 ubox
6 82 0.005884607 ubox
7 15 0.837988361 ubox
7 19 0.005065573 ubox
7 48 0.028489796 ubox
7 49 0.007031524 ubox
7 55 0.021089250 ubox
7 56 0.004134930 ubox
7 60 0.003419193 ubox
7 67 0.045676043 ubox
7 69 0.007397149 ubox
7 81 0.005922145 ubox
7 95 0.174882142 ubox
7 98 0.170385031 ubox
7 101 0.165782456 ubox
7 104 0.164152739 ubox
7 107 0.057298504 ubox
8 12 0.005817485 ubox
8 13 0.010877292 ubox
8 14 0.838843384 ubox
8 16 0.005589215 ubox
8 17 0.009059727 ubox
8 18 0.004312033 ubox
8 47 0.031690494 ubox
8 54 0.023683964 ubox
8 59 0.003209995 ubox
8 66 0.045651428 ubox
8 68 0.007773951 ubox
8 80 0.005918544 ubox
8 85 0.007906164 ubox
8 87 0.033294505 ubox
8 88 0.012633221 ubox
8 89 0.011571768 ubox
8 90 0.011956500 ubox
8 91 0.012818827 ubox
8 92 0.236530903 ubox
8 93 0.018179595 ubox
8 94 0.161137251 ubox
8 96 0.012549487 ubox
8 97 0.160262073 ubox
8 99 0.011953129 ubox
8 100 0.156316022 ubox
8 102 0.011186175 ubox
8 103 0.154813547 ubox
8 105 0.009315804 ubox
8 106 0.054615612 ubox
9 13 0.832541475 ubox
9 18 0.003572580 ubox
9 25 0.003186961 ubox
9 46 0.032112438 ubox
9 53 0.024056750 ubox
9 65 0.045438975 ubox
9 79 0.005879788 ubox
9 84 0.008418513 ubox
9 86 0.033472617 ubox
9 91 0.249887941 ubox
10 83 0.006595042 ubox
11 77 0.005482407 ubox
11 82 0.003735872 ubox
12 20 0.004139103 ubox
12 76 0.005676469 ubox
13 19 0.004398625 ubox
13 21 0.006749281 ubox
13 34 0.004662228 ubox
13 49 0.017791202 ubox
13 56 0.006531984 ubox
13 60 0.005668138 ubox
13 61 0.010675488 ubox
13 75 0.005670930 ubox
13 95 0.063750282 ubox
13 98 0.062149675 ubox
13 101 0.057652285 ubox
13 104 0.056429414 ubox
13 107 0.019676769 ubox
14 20 0.006435192 ubox
14 33 0.004656854 ubox
14 48 0.016858650 ubox
14 55 0.006101380 ubox
15 31 0.009221626 ubox
15 46 0.011844416 ubox
15 53 0.004881879 ubox
15 59 0.009205598 ubox
15 74 0.003656726 ubox
15 84 0.004147200 ubox
15 86 0.009352599 ubox
15 91 0.061119397 ubox
16 83 0.003912286 ubox
17 82 0.003577128 ubox
18 28 0.998278835 ubox
18 67 0.005849601 ubox
18 81 0.003405283 ubox
18 95 0.005753344 ubox
18 98 0.005459118 ubox
18 101 0.005570212 ubox
18 104 0.005561658 ubox
19 25 0.005932060 ubox
19 27 0.999381560 ubox
19 66 0.005845174 ubox
19 80 0.003398636 ubox
19 86 0.004039101 ubox
19 91 0.005104688 ubox
20 24 0.005499492 ubox
20 25 0.006521018 ubox
20 26 0.998603531 ubox
20 54 0.006210801 ubox
20 65 0.005297997 ubox
20 85 0.004036462 ubox
20 90 0.004810596 ubox
20 92 0.009149243 ubox
21 25 0.990220440 ubox
21 53 0.006590102 ubox
21 84 0.004020556 ubox
21 91 0.009637136 ubox
22 83 0.003173146 ubox
25 49 0.013675278 ubox
25 61 0.004541611 ubox
26 48 0.013218229 ubox
26 76 0.003277458 ubox
27 60 0.005490921 ubox
27 75 0.003387667 ubox
28 46 0.009949735 ubox
28 59 0.005491459 ubox
28 74 0.003386303 ubox
28 91 0.004105363 ubox
31 43 0.998002382 ubox
31 49 0.010830302 ubox
31 56 0.016060947 ubox
32 42 0.999031581 ubox
32 48 0.010831541 ubox
32 55 0.016080981 ubox
33 40 0.003888680 ubox
33 41 0.999213834 ubox
33 47 0.010792284 ubox
33 54 0.016081543 ubox
34 39 0.007374030 ubox
34 40 0.999419163 ubox
34 46 0.010734795 ubox
34 53 0.015989799 ubox
35 39 0.992151966 ubox
35 40 0.008588774 ubox
39 95 0.007780509 ubox
40 49 0.015757297 ubox
40 56 0.017024030 ubox
41 48 0.015568416 ubox
41 55 0.017087365 ubox
42 47 0.014229594 ubox
42 54 0.017128763 ubox
42 92 0.008422175 ubox
43 53 0.017149211 ubox
43 91 0.008800701 ubox
45 55 0.004002469 ubox
46 55 0.003897946 ubox
46 56 0.964637703 ubox
46 95 0.041719339 ubox
46 98 0.008084156 ubox
46 101 0.004811554 ubox
46 104 0.004072420 ubox
47 55 0.965713912 ubox
48 52 0.003903197 ubox
48 53 0.008600580 ubox
48 54 0.965358458 ubox
48 87 0.024180406 ubox
48 89 0.003228756 ubox
48 90 0.004806292 ubox
48 91 0.004924142 ubox
48 92 0.156907000 ubox
48 93 0.012756505 ubox
48 94 0.004149262 ubox
49 53 0.957426962 ubox
49 86 0.025900068 ubox
49 91 0.167541843 ubox
50 55 0.003185499 ubox
53 95 0.004477200 ubox
53 98 0.003375649 ubox
53 101 0.003198366 ubox
55 85 0.222743051 ubox
55 92 0.011133717 ubox
56 84 0.230811043 ubox
56 91 0.011973733 ubox
57 83 0.232274963 ubox
58 82 0.232691616 ubox
59 67 0.963973143 ubox
59 81 0.232922144 ubox
59 95 0.003459466 ubox
60 65 0.009502778 ubox
60 66 0.964950741 ubox
60 80 0.232883932 ubox
61 65 0.957940024 ubox
61 66 0.009926890 ubox
61 79 0.232531402 ubox
61 80 0.004274825 ubox
62 77 0.018678055 ubox
63 76 0.009144854 ubox
63 77 0.092910750 ubox
64 76 0.087843326 ubox
64 77 0.188885280 ubox
65 75 0.072832724 ubox
65 76 0.213325014 ubox
65 77 0.005371462 ubox
65 95 0.003673582 ubox
66 75 0.221184206 ubox
67 74 0.226432615 ubox
67 91 0.006377045 ubox
69 86 0.965080325 ubox
69 91 0.005547134 ubox
70 85 0.971598467 ubox
70 90 0.003436062 ubox
71 84 0.972442941 ubox
72 83 0.971919474 ubox
73 82 0.971923246 ubox
74 81 0.972450817 ubox
75 79 0.011230269 ubox
75 80 0.971652359 ubox
76 80 0.003602621 ubox
86 95 0.025691451 ubox
86 98 0.009149531 ubox
86 101 0.006097668 ubox
86 104 0.003848797 ubox
91 95 0.067621554 ubox
91 98 0.136747602 ubox
91 101 0.045141574 ubox
91 104 0.015604227 ubox
91 107 0.003774351 ubox
1 95 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
