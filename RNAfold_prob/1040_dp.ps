%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1040)
} def

/sequence { (\
GGAAACGCGAAACGCACGAUCAAAGAUCACGUCUCAAAGAGACACGCAGAAACUGCACGCCAAAGGCAGAACGACUUCGGUCGUUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.113766044 ubox
1 8 0.029302492 ubox
1 13 0.012054877 ubox
1 15 0.007069806 ubox
1 17 0.014821384 ubox
1 21 0.028850867 ubox
1 30 0.020970807 ubox
1 43 0.003609080 ubox
1 45 0.043273694 ubox
1 53 0.004453322 ubox
1 54 0.003745086 ubox
1 56 0.005087986 ubox
1 58 0.089528484 ubox
1 60 0.004243596 ubox
1 61 0.104598789 ubox
1 67 0.016381925 ubox
1 86 0.027597028 ubox
1 95 0.390200441 ubox
1 98 0.386136821 ubox
1 101 0.392986313 ubox
1 104 0.394766879 ubox
1 107 0.099661981 ubox
2 6 0.075999940 ubox
2 8 0.019661039 ubox
2 13 0.008465010 ubox
2 15 0.010015777 ubox
2 17 0.043834306 ubox
2 20 0.026575461 ubox
2 21 0.045921274 ubox
2 28 0.005656208 ubox
2 30 0.020250496 ubox
2 35 0.003577925 ubox
2 45 0.030829532 ubox
2 53 0.004095187 ubox
2 56 0.003940715 ubox
2 58 0.056866839 ubox
2 60 0.104303372 ubox
2 61 0.007319879 ubox
2 67 0.010091447 ubox
2 85 0.018299671 ubox
2 86 0.031358241 ubox
2 95 0.206196804 ubox
2 98 0.200903167 ubox
2 101 0.204996474 ubox
2 104 0.204226807 ubox
2 107 0.066633404 ubox
3 20 0.045062834 ubox
3 27 0.005296247 ubox
3 34 0.003503798 ubox
3 84 0.011655794 ubox
3 85 0.026886272 ubox
4 20 0.004903934 ubox
4 84 0.013848433 ubox
4 85 0.003968715 ubox
5 32 0.004088660 ubox
5 84 0.004576088 ubox
6 14 0.080604706 ubox
6 18 0.026352471 ubox
6 31 0.004507527 ubox
6 49 0.005189431 ubox
6 59 0.012363697 ubox
6 65 0.008071748 ubox
6 66 0.007098991 ubox
6 69 0.005647106 ubox
6 83 0.005055760 ubox
6 91 0.222034792 ubox
7 13 0.081395361 ubox
7 15 0.979291962 ubox
7 17 0.036407750 ubox
7 30 0.005272560 ubox
7 45 0.003633993 ubox
7 47 0.020807544 ubox
7 56 0.007835421 ubox
7 58 0.008657039 ubox
7 60 0.045355194 ubox
7 67 0.055891843 ubox
7 95 0.026751609 ubox
7 98 0.027281043 ubox
7 101 0.026367884 ubox
7 104 0.026047910 ubox
7 107 0.009857656 ubox
8 14 0.980536348 ubox
8 18 0.011383450 ubox
8 46 0.020844626 ubox
8 55 0.007835417 ubox
8 59 0.045615562 ubox
8 66 0.055899936 ubox
8 91 0.030111364 ubox
9 13 0.917348222 ubox
9 15 0.040112077 ubox
9 17 0.018513561 ubox
9 21 0.005703224 ubox
9 28 0.005801543 ubox
9 35 0.013197026 ubox
9 45 0.020684862 ubox
9 54 0.006527171 ubox
9 58 0.045060064 ubox
9 86 0.004212659 ubox
9 95 0.024566299 ubox
9 98 0.023998384 ubox
9 101 0.023939062 ubox
9 104 0.023768198 ubox
9 107 0.008986006 ubox
10 20 0.005430459 ubox
10 27 0.005499568 ubox
10 34 0.012931560 ubox
10 85 0.003657334 ubox
12 32 0.015536010 ubox
13 18 0.003970220 ubox
13 25 0.003686196 ubox
13 31 0.017164746 ubox
13 49 0.003486526 ubox
13 59 0.007552238 ubox
13 91 0.022325350 ubox
14 30 0.028249200 ubox
14 45 0.003783267 ubox
14 47 0.007077098 ubox
14 56 0.007094052 ubox
14 58 0.009433691 ubox
14 60 0.054023725 ubox
14 67 0.015298395 ubox
14 86 0.004178953 ubox
14 95 0.023456035 ubox
14 98 0.023193568 ubox
14 101 0.023508292 ubox
14 104 0.023521548 ubox
14 107 0.008902600 ubox
15 46 0.007084923 ubox
15 55 0.007096782 ubox
15 59 0.054073760 ubox
15 66 0.015280475 ubox
15 91 0.030921068 ubox
16 27 0.003165235 ubox
16 32 0.006964855 ubox
16 54 0.006287823 ubox
16 84 0.018357741 ubox
17 25 0.024143075 ubox
17 31 0.009194190 ubox
17 59 0.004415339 ubox
17 65 0.008429689 ubox
17 66 0.003590427 ubox
17 69 0.003176271 ubox
17 83 0.020155826 ubox
17 91 0.102982593 ubox
18 27 0.003422418 ubox
18 28 0.987562710 ubox
18 30 0.014828101 ubox
18 58 0.004076817 ubox
18 82 0.020255167 ubox
18 95 0.015599709 ubox
18 98 0.012648005 ubox
18 101 0.013838523 ubox
18 104 0.012803604 ubox
18 107 0.004825541 ubox
19 27 0.988629517 ubox
19 81 0.020252155 ubox
20 25 0.008512319 ubox
20 26 0.988079669 ubox
20 29 0.003771436 ubox
20 80 0.020235878 ubox
20 92 0.040649252 ubox
20 93 0.003824486 ubox
20 99 0.003335293 ubox
21 25 0.979922169 ubox
21 79 0.020103663 ubox
21 91 0.043380297 ubox
22 27 0.003642044 ubox
23 77 0.019088036 ubox
24 76 0.019777452 ubox
25 30 0.018857723 ubox
25 45 0.003759574 ubox
25 58 0.003202599 ubox
25 75 0.019788660 ubox
25 95 0.016502787 ubox
25 98 0.012569192 ubox
25 101 0.012640026 ubox
25 104 0.012637915 ubox
25 107 0.004410358 ubox
27 74 0.018425686 ubox
27 92 0.046298561 ubox
27 93 0.004329569 ubox
28 73 0.018463119 ubox
28 91 0.049524701 ubox
30 41 0.003537831 ubox
30 46 0.008120448 ubox
30 69 0.003207818 ubox
30 91 0.052465007 ubox
31 43 0.997621927 ubox
31 45 0.022697035 ubox
31 95 0.007512543 ubox
31 98 0.005338876 ubox
31 101 0.005382116 ubox
31 104 0.005346685 ubox
32 40 0.007645675 ubox
32 42 0.999075134 ubox
32 44 0.018622496 ubox
32 92 0.003314799 ubox
32 94 0.006610563 ubox
32 97 0.004141271 ubox
32 100 0.004171690 ubox
32 103 0.004145050 ubox
33 39 0.008308669 ubox
33 41 0.999627163 ubox
33 91 0.003630413 ubox
34 38 0.007581905 ubox
34 39 0.006488018 ubox
34 40 0.998844552 ubox
34 42 0.016236607 ubox
34 90 0.003361557 ubox
34 92 0.005522905 ubox
35 39 0.990458446 ubox
35 41 0.016552199 ubox
35 91 0.005664787 ubox
45 55 0.004237364 ubox
45 59 0.010718455 ubox
45 91 0.028591710 ubox
46 53 0.006337890 ubox
46 54 0.003408132 ubox
46 56 0.997772926 ubox
46 58 0.008271344 ubox
47 55 0.998876358 ubox
48 54 0.996399567 ubox
49 53 0.974562955 ubox
49 54 0.005991362 ubox
49 56 0.006430379 ubox
49 58 0.004641624 ubox
53 69 0.014479039 ubox
54 68 0.027998483 ubox
55 67 0.029734922 ubox
56 66 0.029706101 ubox
58 65 0.043017925 ubox
58 66 0.014076620 ubox
58 69 0.017359092 ubox
58 91 0.019193096 ubox
59 67 0.987655170 ubox
60 65 0.010957657 ubox
60 66 0.988674221 ubox
61 65 0.981494625 ubox
61 66 0.010549967 ubox
67 91 0.005484488 ubox
69 78 0.003499627 ubox
69 85 0.004992841 ubox
69 86 0.996837264 ubox
70 77 0.003453266 ubox
70 84 0.004135674 ubox
70 85 0.998194435 ubox
71 84 0.998943247 ubox
72 79 0.003169935 ubox
72 83 0.999708938 ubox
73 78 0.003195334 ubox
73 82 0.999746559 ubox
74 81 0.999470511 ubox
75 79 0.011785386 ubox
75 80 0.998475880 ubox
76 80 0.004028446 ubox
83 95 0.003462917 ubox
84 93 0.011992485 ubox
85 92 0.023223665 ubox
86 91 0.026813140 ubox
91 95 0.068354010 ubox
91 98 0.138738656 ubox
91 101 0.045885731 ubox
91 104 0.016018659 ubox
91 107 0.003980200 ubox
1 95 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
