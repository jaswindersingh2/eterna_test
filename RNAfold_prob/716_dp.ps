%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (716)
} def

/sequence { (\
GGAAAGCCGGAGCAAAGGUCGGGCAAGAGAGCACGAAAAGAGCACUCAGAGAGAAGGAAACAUCACUCGGUAUAUUUCGAUAUACCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.017308983 ubox
1 24 0.007845269 ubox
1 47 0.006291035 ubox
1 61 0.004737472 ubox
1 64 0.006127791 ubox
1 66 0.008632869 ubox
1 67 0.006322612 ubox
1 68 0.018651211 ubox
1 78 0.005080296 ubox
1 86 0.019992650 ubox
1 95 0.241956786 ubox
1 98 0.243463126 ubox
1 101 0.249003937 ubox
1 104 0.250123560 ubox
1 107 0.063150117 ubox
2 7 0.017255121 ubox
2 24 0.005796593 ubox
2 46 0.004559932 ubox
2 47 0.008491288 ubox
2 63 0.003945613 ubox
2 64 0.011773145 ubox
2 66 0.008409089 ubox
2 67 0.013663243 ubox
2 68 0.028575021 ubox
2 77 0.005050504 ubox
2 78 0.007019351 ubox
2 85 0.017068768 ubox
2 86 0.008183633 ubox
2 95 0.127724140 ubox
2 98 0.128170500 ubox
2 101 0.130902504 ubox
2 104 0.130404907 ubox
2 107 0.042552061 ubox
3 46 0.007816349 ubox
3 63 0.011023569 ubox
3 67 0.026354527 ubox
3 76 0.004979557 ubox
3 77 0.007013854 ubox
4 75 0.004344807 ubox
4 76 0.006822129 ubox
5 75 0.005948334 ubox
6 19 0.016699221 ubox
6 20 0.004719561 ubox
6 24 0.998090053 ubox
6 95 0.007691524 ubox
6 98 0.007719799 ubox
6 101 0.007701208 ubox
6 104 0.007544326 ubox
7 18 0.018411737 ubox
7 22 0.033336152 ubox
7 23 0.999040680 ubox
8 17 0.018423820 ubox
8 21 0.038856616 ubox
8 22 0.998393348 ubox
9 20 0.042308741 ubox
9 45 0.005446151 ubox
9 46 0.009400516 ubox
9 47 0.005019834 ubox
10 19 0.036977597 ubox
10 20 0.996692044 ubox
10 45 0.010691801 ubox
10 46 0.003299524 ubox
10 47 0.009178689 ubox
11 19 0.986262253 ubox
11 46 0.009058828 ubox
12 19 0.128666228 ubox
12 20 0.004288337 ubox
12 43 0.017870385 ubox
12 45 0.007504804 ubox
13 17 0.871815541 ubox
13 18 0.240145341 ubox
13 42 0.018059521 ubox
19 36 0.019945107 ubox
20 35 0.020733573 ubox
21 34 0.020562404 ubox
23 32 0.020505491 ubox
24 31 0.020833097 ubox
24 91 0.004350019 ubox
26 46 0.017276934 ubox
27 32 0.003816711 ubox
27 34 0.003401501 ubox
27 45 0.018315708 ubox
27 47 0.991376951 ubox
27 68 0.010024623 ubox
27 95 0.008248231 ubox
27 98 0.008267020 ubox
27 101 0.008423901 ubox
27 104 0.008435806 ubox
28 46 0.992427917 ubox
28 67 0.010013419 ubox
29 43 0.010933813 ubox
29 45 0.988941229 ubox
29 47 0.095843004 ubox
29 66 0.009888538 ubox
29 68 0.006942683 ubox
29 95 0.003947394 ubox
29 98 0.003945607 ubox
29 101 0.004022094 ubox
29 104 0.003998536 ubox
30 46 0.095587661 ubox
30 67 0.006935674 ubox
31 43 0.992378637 ubox
31 45 0.091875347 ubox
31 66 0.006830689 ubox
32 40 0.018754673 ubox
32 42 0.992542984 ubox
34 40 0.847579988 ubox
34 42 0.082386330 ubox
35 43 0.012919323 ubox
35 47 0.006267144 ubox
35 64 0.005245951 ubox
36 46 0.005991298 ubox
36 63 0.005114371 ubox
39 46 0.005391244 ubox
40 45 0.005757333 ubox
40 47 0.012613037 ubox
41 46 0.011814485 ubox
43 57 0.003420446 ubox
45 53 0.013684609 ubox
45 56 0.004361664 ubox
45 91 0.004265397 ubox
46 52 0.013873149 ubox
46 54 0.005189522 ubox
46 55 0.003697224 ubox
46 90 0.004051012 ubox
46 92 0.009499223 ubox
47 51 0.013785574 ubox
47 53 0.005870430 ubox
47 91 0.010280176 ubox
48 67 0.027744085 ubox
49 61 0.003532166 ubox
49 64 0.024437449 ubox
49 66 0.029924624 ubox
49 68 0.968732618 ubox
49 95 0.007634300 ubox
49 98 0.007590874 ubox
49 101 0.007672324 ubox
49 104 0.007723980 ubox
50 63 0.024205776 ubox
50 67 0.969966432 ubox
51 61 0.007788890 ubox
51 64 0.041165702 ubox
51 66 0.966537379 ubox
51 68 0.182720747 ubox
51 95 0.004205904 ubox
51 98 0.004181881 ubox
51 101 0.004397131 ubox
51 104 0.005342775 ubox
52 63 0.041802310 ubox
52 67 0.182691753 ubox
53 61 0.017272967 ubox
53 63 0.006291058 ubox
53 64 0.961267523 ubox
53 66 0.180192652 ubox
53 68 0.088163498 ubox
53 101 0.004962527 ubox
53 104 0.003915840 ubox
54 63 0.950105136 ubox
54 67 0.082129981 ubox
55 63 0.045995561 ubox
55 67 0.048630601 ubox
56 61 0.873825034 ubox
56 63 0.044404862 ubox
56 64 0.045917913 ubox
56 66 0.059752081 ubox
56 67 0.013051282 ubox
56 68 0.008331112 ubox
56 95 0.003586118 ubox
56 98 0.009857798 ubox
56 101 0.007669854 ubox
57 61 0.081030928 ubox
57 63 0.033947426 ubox
57 64 0.165121193 ubox
57 66 0.014924292 ubox
57 67 0.006118468 ubox
57 68 0.031240766 ubox
57 98 0.006750525 ubox
58 63 0.151057955 ubox
58 67 0.030968804 ubox
59 63 0.009150124 ubox
63 92 0.031624154 ubox
64 91 0.033604042 ubox
66 91 0.033853935 ubox
67 80 0.007525555 ubox
67 87 0.011636935 ubox
67 88 0.023507442 ubox
67 89 0.004401632 ubox
67 90 0.033605882 ubox
67 92 0.016468204 ubox
68 79 0.008369437 ubox
68 91 0.017713062 ubox
69 78 0.009581605 ubox
69 86 0.998566434 ubox
70 77 0.008872120 ubox
70 83 0.009055844 ubox
70 85 0.999724320 ubox
70 98 0.003824276 ubox
71 82 0.009567571 ubox
71 84 0.999510198 ubox
71 97 0.003717393 ubox
72 81 0.010161174 ubox
72 83 0.999232415 ubox
73 80 0.010543703 ubox
73 82 0.998930836 ubox
73 84 0.004123609 ubox
74 81 0.987469396 ubox
74 83 0.006241473 ubox
75 79 0.035419720 ubox
75 80 0.901946273 ubox
75 82 0.008145753 ubox
75 94 0.006605244 ubox
76 80 0.028610621 ubox
76 93 0.007619638 ubox
77 92 0.007820196 ubox
78 91 0.007843488 ubox
86 91 0.008047716 ubox
91 95 0.054485852 ubox
91 98 0.119383506 ubox
91 101 0.046211862 ubox
91 104 0.029956672 ubox
91 107 0.008721157 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
