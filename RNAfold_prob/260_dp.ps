%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (260)
} def

/sequence { (\
GGAAAAAAGAUCAACUAGAAAACUAGACUCAAGUGAAACUGAGAAAACACAGACACAAGAGAAGAUCAUAGACCUUUCGAGGUCUAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.023719289 ubox
1 15 0.003350413 ubox
1 67 0.013748868 ubox
1 95 0.070745687 ubox
1 98 0.071218734 ubox
1 101 0.073395476 ubox
1 104 0.073334559 ubox
1 107 0.018470770 ubox
2 11 0.021045432 ubox
2 12 0.041491974 ubox
2 66 0.008465738 ubox
2 67 0.021920871 ubox
2 95 0.036931428 ubox
2 98 0.037094407 ubox
2 101 0.038295030 ubox
2 104 0.037732766 ubox
2 107 0.012306585 ubox
3 11 0.040031860 ubox
3 66 0.020507282 ubox
4 11 0.004862993 ubox
4 69 0.003919389 ubox
5 69 0.013107371 ubox
6 11 0.003259692 ubox
6 69 0.013127866 ubox
7 69 0.056467734 ubox
8 16 0.007700828 ubox
8 24 0.005971277 ubox
8 69 0.037672240 ubox
8 85 0.004120056 ubox
9 15 0.008056926 ubox
9 23 0.006188368 ubox
9 30 0.008400698 ubox
9 67 0.980936797 ubox
9 84 0.004107311 ubox
9 95 0.017551311 ubox
9 98 0.013520804 ubox
9 101 0.013566404 ubox
9 104 0.013595543 ubox
9 107 0.004745577 ubox
10 29 0.008257577 ubox
10 66 0.981888401 ubox
10 83 0.004088421 ubox
11 19 0.011917341 ubox
11 27 0.007314595 ubox
11 60 0.003467060 ubox
11 62 0.004806610 ubox
11 65 0.981906672 ubox
11 82 0.004064431 ubox
11 92 0.048469221 ubox
11 93 0.004526833 ubox
12 18 0.012640334 ubox
12 26 0.006724583 ubox
12 59 0.003669157 ubox
12 61 0.005024473 ubox
12 64 0.980967877 ubox
12 81 0.003979285 ubox
12 91 0.051595846 ubox
13 29 0.004012386 ubox
14 29 0.003430209 ubox
14 34 0.003769163 ubox
15 26 0.991653359 ubox
15 33 0.004073339 ubox
15 61 0.011608149 ubox
15 91 0.003913786 ubox
16 21 0.004374055 ubox
16 22 0.003303228 ubox
16 25 0.997581836 ubox
16 26 0.004718724 ubox
16 32 0.004035397 ubox
16 60 0.010131449 ubox
16 62 0.004744980 ubox
16 90 0.003663611 ubox
17 24 0.997507147 ubox
18 23 0.989334450 ubox
18 24 0.005532446 ubox
18 30 0.006292724 ubox
18 67 0.012602383 ubox
19 24 0.005347868 ubox
19 29 0.006053198 ubox
19 66 0.012489268 ubox
23 52 0.003606153 ubox
23 64 0.020264907 ubox
23 91 0.003226583 ubox
24 51 0.003496830 ubox
24 63 0.020607617 ubox
24 65 0.003886297 ubox
26 67 0.013426115 ubox
27 34 0.008037459 ubox
27 66 0.013690916 ubox
28 33 0.008290146 ubox
28 35 0.005077963 ubox
28 43 0.087642978 ubox
28 59 0.033275910 ubox
28 61 0.983398801 ubox
28 64 0.004538448 ubox
29 36 0.011462058 ubox
29 42 0.088219557 ubox
29 44 0.004629162 ubox
29 58 0.033079098 ubox
29 60 0.989356741 ubox
29 61 0.003640387 ubox
29 62 0.026184391 ubox
29 63 0.003743409 ubox
29 92 0.004383751 ubox
30 35 0.012031854 ubox
30 41 0.088233918 ubox
30 43 0.004856097 ubox
30 52 0.003265625 ubox
30 59 0.989254800 ubox
30 61 0.027539130 ubox
30 91 0.004603760 ubox
31 40 0.074124063 ubox
32 40 0.046898444 ubox
33 39 0.066139443 ubox
33 50 0.008741211 ubox
33 54 0.010153551 ubox
33 56 0.992834946 ubox
34 38 0.059602102 ubox
34 49 0.008756263 ubox
34 53 0.010104615 ubox
34 55 0.993792040 ubox
34 57 0.051714965 ubox
34 58 0.003395747 ubox
35 48 0.008738700 ubox
35 54 0.992813454 ubox
35 56 0.052327827 ubox
39 52 0.987623275 ubox
40 46 0.003879206 ubox
40 47 0.008503450 ubox
40 49 0.102152190 ubox
40 51 0.988443052 ubox
40 53 0.006586220 ubox
41 48 0.106262588 ubox
41 50 0.987423008 ubox
43 48 0.402146782 ubox
43 50 0.015098355 ubox
48 52 0.005433062 ubox
48 59 0.007022064 ubox
48 61 0.009619780 ubox
50 59 0.017494243 ubox
50 61 0.007316961 ubox
52 56 0.007210122 ubox
52 67 0.003481739 ubox
53 66 0.003384037 ubox
54 59 0.015245515 ubox
54 61 0.017633284 ubox
56 61 0.015071135 ubox
59 67 0.018885621 ubox
60 66 0.018722938 ubox
61 67 0.009368118 ubox
62 66 0.008454403 ubox
63 85 0.003947357 ubox
64 84 0.004092660 ubox
64 95 0.008606378 ubox
65 83 0.004089472 ubox
66 82 0.004072500 ubox
66 87 0.008193666 ubox
66 88 0.008638128 ubox
66 89 0.026140855 ubox
66 90 0.006999877 ubox
66 92 0.032191709 ubox
67 81 0.004040947 ubox
67 91 0.034472362 ubox
68 85 0.004101872 ubox
69 86 0.935612877 ubox
69 87 0.043443370 ubox
69 88 0.015903909 ubox
69 89 0.012162147 ubox
69 90 0.008335935 ubox
69 91 0.003743359 ubox
69 92 0.004062789 ubox
69 93 0.003460083 ubox
70 85 0.993895195 ubox
71 78 0.003838482 ubox
71 84 0.999912497 ubox
72 77 0.003460705 ubox
72 83 0.999837773 ubox
73 82 0.999953835 ubox
74 79 0.003362668 ubox
74 81 0.999651550 ubox
74 82 0.004243353 ubox
75 79 0.028244323 ubox
75 80 0.924307249 ubox
75 81 0.005883756 ubox
76 80 0.028597813 ubox
84 91 0.004057905 ubox
85 90 0.004707436 ubox
91 95 0.043090172 ubox
91 98 0.103748460 ubox
91 101 0.045449916 ubox
91 104 0.035120381 ubox
91 107 0.010389283 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
