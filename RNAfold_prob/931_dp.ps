%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (931)
} def

/sequence { (\
GGAAAGCUGCCGAGCAGACGCUCCGUCGUCCGGCGUAGAACCGGACGACUCCACAGUUGUGGUGCAGCAGAUGGGUUCGCCCAUCUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.010933784 ubox
1 24 0.139547658 ubox
1 52 0.027304778 ubox
1 86 0.004429764 ubox
1 95 0.066716814 ubox
1 98 0.067134163 ubox
1 101 0.068662584 ubox
1 104 0.068983181 ubox
1 107 0.017416975 ubox
2 10 0.010925155 ubox
2 23 0.139654393 ubox
2 51 0.027317352 ubox
2 85 0.003872905 ubox
2 86 0.003464798 ubox
2 95 0.035220255 ubox
2 98 0.035342819 ubox
2 101 0.036097024 ubox
2 104 0.035963902 ubox
2 107 0.011735468 ubox
3 22 0.138215294 ubox
3 50 0.025976715 ubox
3 86 0.003464208 ubox
4 22 0.003167138 ubox
4 86 0.003196726 ubox
5 22 0.004984660 ubox
5 86 0.003197776 ubox
6 15 0.006284524 ubox
6 19 0.131744947 ubox
6 21 0.007121978 ubox
6 65 0.003209903 ubox
6 68 0.988605310 ubox
7 14 0.006299973 ubox
7 17 0.139922866 ubox
7 20 0.006485409 ubox
7 64 0.003204291 ubox
7 67 0.989655425 ubox
8 13 0.006237593 ubox
8 16 0.140048188 ubox
8 66 0.989433190 ubox
9 15 0.140083010 ubox
9 24 0.003889608 ubox
9 65 0.989633924 ubox
9 68 0.003617101 ubox
10 14 0.139064703 ubox
10 25 0.006334622 ubox
10 62 0.004354721 ubox
10 64 0.983294909 ubox
10 67 0.003603371 ubox
11 17 0.004251036 ubox
11 20 0.006976346 ubox
11 25 0.026187281 ubox
11 61 0.005491409 ubox
11 62 0.165665128 ubox
11 64 0.078665822 ubox
12 19 0.007136358 ubox
12 23 0.984664148 ubox
12 24 0.065353787 ubox
12 63 0.010007600 ubox
13 22 0.989024068 ubox
13 60 0.008694797 ubox
13 63 0.004361444 ubox
14 21 0.989453431 ubox
14 60 0.030482583 ubox
15 20 0.988030292 ubox
15 59 0.031590059 ubox
15 61 0.005420882 ubox
16 58 0.029782393 ubox
16 60 0.005084531 ubox
17 23 0.003306143 ubox
17 57 0.025593110 ubox
17 58 0.012315125 ubox
18 57 0.018059613 ubox
19 56 0.022270200 ubox
20 54 0.008433258 ubox
20 57 0.005183906 ubox
21 56 0.005480787 ubox
22 55 0.005316590 ubox
25 49 0.997510015 ubox
25 50 0.008364033 ubox
26 48 0.999455900 ubox
27 47 0.999960601 ubox
28 46 0.999958157 ubox
29 45 0.999871633 ubox
30 44 0.999992698 ubox
31 43 0.999977946 ubox
32 41 0.014670518 ubox
32 42 0.999800662 ubox
33 41 0.997237622 ubox
33 42 0.007048527 ubox
34 38 0.068748355 ubox
35 41 0.022073072 ubox
36 40 0.036406168 ubox
49 64 0.010161838 ubox
50 61 0.003209415 ubox
50 62 0.012985668 ubox
50 64 0.008823336 ubox
51 61 0.017141362 ubox
51 62 0.967114329 ubox
52 59 0.015580846 ubox
52 61 0.988685073 ubox
52 62 0.008303259 ubox
52 64 0.004305446 ubox
53 58 0.013322136 ubox
53 60 0.988135225 ubox
53 63 0.007630947 ubox
54 59 0.986372148 ubox
54 61 0.029084681 ubox
54 62 0.007609807 ubox
55 60 0.028055833 ubox
56 68 0.018024378 ubox
56 98 0.059664931 ubox
56 101 0.114888026 ubox
56 104 0.044342259 ubox
56 107 0.007990421 ubox
57 67 0.018032063 ubox
57 97 0.059725764 ubox
57 100 0.115003609 ubox
57 103 0.044374138 ubox
57 106 0.008079774 ubox
58 66 0.018036143 ubox
58 96 0.059766733 ubox
58 99 0.115079003 ubox
58 102 0.044358588 ubox
58 105 0.008113710 ubox
59 65 0.018049107 ubox
59 95 0.059803859 ubox
59 98 0.115143457 ubox
59 101 0.044366920 ubox
59 104 0.008122115 ubox
60 64 0.016884914 ubox
60 94 0.059375911 ubox
60 96 0.030003117 ubox
60 97 0.104391691 ubox
60 99 0.015949965 ubox
60 100 0.038922177 ubox
60 103 0.007271919 ubox
61 68 0.005642165 ubox
61 95 0.042329135 ubox
61 98 0.022483797 ubox
61 101 0.003341206 ubox
62 68 0.005625953 ubox
62 95 0.101159834 ubox
62 98 0.033610776 ubox
62 101 0.006368032 ubox
63 67 0.005283379 ubox
63 89 0.004074506 ubox
63 90 0.009075162 ubox
63 91 0.021822926 ubox
63 92 0.021446316 ubox
63 93 0.015044478 ubox
63 94 0.101011810 ubox
63 96 0.023065793 ubox
63 97 0.031236133 ubox
63 99 0.003804001 ubox
63 100 0.006110291 ubox
64 95 0.027963412 ubox
64 98 0.004433441 ubox
65 91 0.052934270 ubox
67 95 0.003312908 ubox
68 91 0.038601279 ubox
69 86 0.951908054 ubox
70 85 0.999636793 ubox
70 86 0.003882044 ubox
71 84 0.999681333 ubox
72 83 0.999579073 ubox
73 81 0.007142050 ubox
73 82 0.999957561 ubox
74 80 0.010032249 ubox
74 81 0.999911453 ubox
75 80 0.993717666 ubox
75 81 0.003891650 ubox
84 92 0.004659462 ubox
85 91 0.006409055 ubox
86 90 0.007001377 ubox
86 91 0.007510347 ubox
86 92 0.006925041 ubox
86 93 0.008833106 ubox
86 94 0.004254030 ubox
86 96 0.003300782 ubox
91 95 0.042659665 ubox
91 98 0.102799032 ubox
91 101 0.045097103 ubox
91 104 0.034902877 ubox
91 107 0.010326514 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
