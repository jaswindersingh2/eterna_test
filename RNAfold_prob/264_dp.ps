%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (264)
} def

/sequence { (\
GGAAAAAAGUACAAGUAGGAAACUACAGUGGACACGAGGUCGGGAAACGGACAGUGGACACAAGUACACUGAAAAUUCGUUUUCAGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.006459101 ubox
1 12 0.029854371 ubox
1 41 0.009730779 ubox
1 67 0.012528780 ubox
1 78 0.014676447 ubox
1 84 0.015363925 ubox
1 95 0.070580132 ubox
1 98 0.071342987 ubox
1 101 0.073386400 ubox
1 104 0.074166298 ubox
1 107 0.018732775 ubox
2 10 0.003789772 ubox
2 12 0.010548052 ubox
2 40 0.009497503 ubox
2 41 0.013122655 ubox
2 67 0.007000062 ubox
2 69 0.003194437 ubox
2 77 0.014561996 ubox
2 78 0.013975417 ubox
2 83 0.015293834 ubox
2 84 0.016976991 ubox
2 95 0.037230099 ubox
2 98 0.037513779 ubox
2 101 0.038588146 ubox
2 104 0.038456655 ubox
2 107 0.012555196 ubox
3 10 0.008379710 ubox
3 40 0.013057960 ubox
3 76 0.013920377 ubox
3 77 0.013918617 ubox
3 82 0.015231193 ubox
3 83 0.016957225 ubox
4 10 0.005838152 ubox
4 76 0.012728161 ubox
4 81 0.014868555 ubox
4 82 0.016795122 ubox
5 10 0.004935905 ubox
5 80 0.013423909 ubox
5 81 0.016351747 ubox
6 70 0.011125608 ubox
6 80 0.014472502 ubox
7 70 0.005321055 ubox
8 24 0.003504731 ubox
8 65 0.003689558 ubox
8 70 0.014122008 ubox
8 77 0.005907118 ubox
9 23 0.003717204 ubox
9 26 0.004367022 ubox
9 33 0.044789022 ubox
9 35 0.009017877 ubox
9 67 0.967136855 ubox
9 69 0.013495907 ubox
9 76 0.005707859 ubox
9 78 0.003274832 ubox
9 95 0.058559231 ubox
9 98 0.057647776 ubox
9 101 0.058713677 ubox
9 104 0.059030248 ubox
9 107 0.020639079 ubox
10 22 0.003593357 ubox
10 25 0.004306116 ubox
10 27 0.003281785 ubox
10 30 0.043939243 ubox
10 32 0.036124768 ubox
10 34 0.008463907 ubox
10 63 0.003707427 ubox
10 66 0.968304285 ubox
10 68 0.012055160 ubox
10 75 0.005572461 ubox
10 87 0.004341283 ubox
10 88 0.003967890 ubox
10 89 0.004265274 ubox
10 90 0.004187926 ubox
10 91 0.003884795 ubox
10 92 0.005587195 ubox
10 93 0.006148912 ubox
10 94 0.056385851 ubox
10 96 0.004007392 ubox
10 97 0.055538446 ubox
10 99 0.003811726 ubox
10 100 0.056565391 ubox
10 102 0.003780580 ubox
10 103 0.056868792 ubox
10 105 0.003168071 ubox
10 106 0.020090768 ubox
11 24 0.003242124 ubox
11 29 0.049973920 ubox
11 65 0.968353313 ubox
12 28 0.050519931 ubox
12 30 0.053237373 ubox
12 31 0.008609366 ubox
12 64 0.967223256 ubox
12 86 0.004452723 ubox
12 91 0.019300018 ubox
13 29 0.051774137 ubox
14 24 0.028938766 ubox
14 29 0.003923627 ubox
15 23 0.030114938 ubox
15 26 0.997572306 ubox
15 67 0.003312558 ubox
15 98 0.003902292 ubox
15 101 0.003530811 ubox
15 104 0.003453572 ubox
16 22 0.029420475 ubox
16 25 0.998776104 ubox
16 66 0.003268196 ubox
16 71 0.005699651 ubox
16 97 0.003690463 ubox
16 100 0.003331459 ubox
16 103 0.003258276 ubox
17 24 0.998902911 ubox
17 70 0.005910837 ubox
18 23 0.998311793 ubox
18 24 0.007098574 ubox
18 26 0.007799926 ubox
18 69 0.005947346 ubox
19 23 0.010022383 ubox
19 26 0.003774480 ubox
22 65 0.012511745 ubox
23 64 0.013074026 ubox
24 63 0.012946427 ubox
24 66 0.008032086 ubox
25 65 0.009143806 ubox
26 64 0.009338008 ubox
27 65 0.004121350 ubox
28 35 0.007550268 ubox
28 61 0.991892343 ubox
28 95 0.010807943 ubox
28 98 0.030969089 ubox
28 101 0.020147761 ubox
28 104 0.010925546 ubox
28 107 0.003706862 ubox
29 34 0.007082002 ubox
29 36 0.009072119 ubox
29 42 0.006359312 ubox
29 43 0.009090291 ubox
29 60 0.993127993 ubox
29 62 0.004156810 ubox
29 85 0.003357844 ubox
29 94 0.010596527 ubox
29 96 0.016228535 ubox
29 97 0.029059531 ubox
29 99 0.017394112 ubox
29 100 0.017167335 ubox
29 102 0.008044956 ubox
29 103 0.009550130 ubox
29 105 0.006447673 ubox
29 106 0.003297651 ubox
30 35 0.012365582 ubox
30 41 0.007807163 ubox
30 59 0.993784093 ubox
30 61 0.004535798 ubox
30 84 0.003747151 ubox
30 95 0.019957747 ubox
30 98 0.021392493 ubox
30 101 0.009873448 ubox
30 104 0.007352449 ubox
31 40 0.005021342 ubox
31 41 0.080320016 ubox
31 59 0.003811507 ubox
31 83 0.003669675 ubox
31 95 0.012247742 ubox
31 98 0.005132077 ubox
32 40 0.080515961 ubox
32 82 0.003639528 ubox
33 38 0.008727789 ubox
33 39 0.080413436 ubox
33 56 0.993668510 ubox
33 57 0.010058195 ubox
33 91 0.003709688 ubox
34 55 0.993254411 ubox
34 80 0.003815702 ubox
35 39 0.003204544 ubox
35 42 0.022303485 ubox
35 54 0.990195219 ubox
35 56 0.015949015 ubox
35 79 0.003921393 ubox
35 91 0.030624430 ubox
36 41 0.022217648 ubox
36 52 0.031566601 ubox
36 55 0.016608445 ubox
36 78 0.003924520 ubox
36 98 0.003348086 ubox
37 77 0.003839693 ubox
38 48 0.004937971 ubox
38 52 0.282889502 ubox
39 48 0.014799114 ubox
39 52 0.910914715 ubox
39 95 0.004400709 ubox
39 98 0.003441690 ubox
40 47 0.014098613 ubox
40 49 0.004145063 ubox
40 50 0.297154283 ubox
40 51 0.920890573 ubox
40 86 0.003271462 ubox
40 87 0.062871070 ubox
40 88 0.003210383 ubox
40 94 0.003369007 ubox
41 49 0.380388566 ubox
41 50 0.916882201 ubox
41 86 0.064922373 ubox
42 48 0.388527273 ubox
42 84 0.008467041 ubox
43 48 0.870473735 ubox
43 83 0.007207823 ubox
43 84 0.108537636 ubox
44 48 0.017780199 ubox
44 82 0.005658571 ubox
44 83 0.109942903 ubox
44 84 0.007707467 ubox
45 81 0.004619650 ubox
45 82 0.110255491 ubox
45 83 0.006709848 ubox
46 80 0.003257912 ubox
46 81 0.110386999 ubox
46 82 0.005455642 ubox
47 80 0.110637564 ubox
47 81 0.003885754 ubox
48 79 0.110813768 ubox
49 78 0.110770111 ubox
50 77 0.110446353 ubox
51 76 0.109224309 ubox
51 77 0.003809400 ubox
52 71 0.110748333 ubox
53 70 0.110880088 ubox
54 69 0.110916972 ubox
55 68 0.110884431 ubox
56 67 0.110501449 ubox
57 67 0.003297161 ubox
58 65 0.079658131 ubox
59 64 0.104054551 ubox
63 70 0.007692714 ubox
64 69 0.008180902 ubox
64 95 0.019880908 ubox
64 98 0.008822276 ubox
64 101 0.007705171 ubox
64 104 0.006561867 ubox
65 87 0.005618988 ubox
65 88 0.009887306 ubox
65 89 0.007774332 ubox
65 90 0.012655498 ubox
65 91 0.007100519 ubox
65 92 0.007352128 ubox
65 93 0.003459830 ubox
65 94 0.019121721 ubox
65 97 0.008470545 ubox
65 100 0.007414421 ubox
65 103 0.006319304 ubox
67 91 0.012656385 ubox
68 80 0.009703863 ubox
69 79 0.010456758 ubox
69 86 0.982995293 ubox
69 91 0.007139111 ubox
70 75 0.003811648 ubox
70 79 0.019716280 ubox
70 85 0.988985316 ubox
70 90 0.005393882 ubox
70 96 0.004296838 ubox
70 99 0.008578842 ubox
70 102 0.007549615 ubox
70 105 0.011017259 ubox
71 77 0.003257351 ubox
71 78 0.036137128 ubox
71 83 0.004217029 ubox
71 84 0.990286500 ubox
71 95 0.004613516 ubox
71 98 0.009248670 ubox
71 101 0.008141883 ubox
71 104 0.011885382 ubox
72 77 0.033820565 ubox
72 81 0.003496019 ubox
72 82 0.020305207 ubox
72 83 0.988832252 ubox
73 80 0.006356715 ubox
73 81 0.028150843 ubox
73 82 0.985318322 ubox
73 83 0.038202218 ubox
74 80 0.031666940 ubox
74 81 0.949982701 ubox
74 82 0.053967108 ubox
74 83 0.005240830 ubox
75 80 0.748675209 ubox
75 81 0.065236076 ubox
75 82 0.012532072 ubox
76 88 0.013942798 ubox
76 93 0.015325669 ubox
76 97 0.009826443 ubox
76 100 0.006606730 ubox
77 87 0.016015293 ubox
77 92 0.017322197 ubox
77 96 0.011255935 ubox
77 97 0.006894442 ubox
77 99 0.007528337 ubox
77 100 0.003829645 ubox
78 86 0.016232154 ubox
78 91 0.017487037 ubox
79 84 0.004616310 ubox
79 95 0.055643674 ubox
79 98 0.031801394 ubox
79 101 0.010797602 ubox
79 104 0.006427960 ubox
80 88 0.004501718 ubox
80 89 0.008706889 ubox
80 90 0.008915773 ubox
80 92 0.003206508 ubox
80 93 0.004839346 ubox
80 94 0.052004422 ubox
80 96 0.003609532 ubox
80 97 0.031137595 ubox
80 100 0.010762939 ubox
80 103 0.006397859 ubox
81 87 0.004786633 ubox
81 88 0.009943054 ubox
81 89 0.009574118 ubox
81 90 0.003566242 ubox
81 91 0.003489921 ubox
81 92 0.005919063 ubox
81 93 0.047838854 ubox
81 94 0.041002308 ubox
81 96 0.022147988 ubox
81 99 0.007834481 ubox
81 102 0.004775351 ubox
82 86 0.004359822 ubox
82 87 0.008735268 ubox
82 88 0.009479576 ubox
82 89 0.003799767 ubox
82 90 0.003685068 ubox
82 91 0.006490755 ubox
82 92 0.043365452 ubox
82 93 0.053964338 ubox
83 87 0.007925157 ubox
83 88 0.003431194 ubox
83 89 0.003582688 ubox
83 90 0.006044108 ubox
83 91 0.037487899 ubox
83 92 0.059279431 ubox
84 91 0.062614998 ubox
86 95 0.016179078 ubox
86 98 0.006283954 ubox
86 101 0.004774982 ubox
86 104 0.003896852 ubox
91 95 0.043629147 ubox
91 98 0.104334873 ubox
91 101 0.045381265 ubox
91 104 0.034805189 ubox
91 107 0.010286408 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
