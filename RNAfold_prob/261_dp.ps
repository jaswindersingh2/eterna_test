%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (261)
} def

/sequence { (\
GGAAAAAAGAAGAAGUUCAAAAGAACACUCAAGUCAAACACAGAAAACAGUGAGACAAGAGAACUUCAGCUAACUUUCGAGUUAGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.012306046 ubox
1 26 0.015986302 ubox
1 64 0.009120171 ubox
1 65 0.008454591 ubox
1 67 0.053676488 ubox
1 78 0.006481830 ubox
1 95 0.089916568 ubox
1 98 0.090348175 ubox
1 101 0.091542526 ubox
1 104 0.092097435 ubox
1 107 0.023267697 ubox
2 17 0.012058329 ubox
2 18 0.016911403 ubox
2 26 0.003978945 ubox
2 64 0.009932685 ubox
2 66 0.052347888 ubox
2 67 0.066022698 ubox
2 77 0.006486886 ubox
2 78 0.005784047 ubox
2 95 0.047392296 ubox
2 98 0.047490767 ubox
2 101 0.048078004 ubox
2 104 0.047862125 ubox
2 107 0.015611481 ubox
3 16 0.011384336 ubox
3 17 0.016790431 ubox
3 65 0.049354557 ubox
3 66 0.065415783 ubox
3 76 0.006454011 ubox
3 77 0.005780408 ubox
4 16 0.015104665 ubox
4 65 0.058611585 ubox
4 66 0.004720656 ubox
4 75 0.006032370 ubox
4 76 0.005701954 ubox
5 65 0.005317665 ubox
5 66 0.003700119 ubox
5 75 0.005222861 ubox
6 65 0.003911587 ubox
6 66 0.004030339 ubox
7 65 0.004004058 ubox
7 66 0.028364211 ubox
8 65 0.032211793 ubox
8 71 0.008903639 ubox
9 18 0.077983104 ubox
9 28 0.003412584 ubox
9 30 0.023045000 ubox
9 64 0.032735757 ubox
9 66 0.005251006 ubox
9 67 0.564357287 ubox
9 70 0.009357305 ubox
9 95 0.046655476 ubox
9 98 0.048222778 ubox
9 101 0.048359113 ubox
9 104 0.048292380 ubox
9 107 0.016836747 ubox
10 17 0.077683851 ubox
10 29 0.019417604 ubox
10 65 0.005213714 ubox
10 66 0.564751385 ubox
11 16 0.073409059 ubox
11 29 0.018574546 ubox
11 65 0.563907558 ubox
11 66 0.004143965 ubox
12 18 0.013036949 ubox
12 26 0.004929665 ubox
12 28 0.023228013 ubox
12 30 0.033305070 ubox
12 64 0.560716344 ubox
12 65 0.004363676 ubox
12 66 0.005466640 ubox
12 67 0.624741405 ubox
12 95 0.041481521 ubox
12 98 0.041975337 ubox
12 101 0.041681765 ubox
12 104 0.039655287 ubox
12 107 0.013718066 ubox
13 17 0.011369958 ubox
13 29 0.032643862 ubox
13 65 0.005589750 ubox
13 66 0.625237324 ubox
14 29 0.005702545 ubox
14 65 0.624648615 ubox
15 26 0.774190478 ubox
15 28 0.006336031 ubox
15 64 0.621870167 ubox
15 95 0.020519456 ubox
15 98 0.015329023 ubox
15 101 0.015135415 ubox
15 104 0.014400482 ubox
15 107 0.004980571 ubox
16 24 0.004931743 ubox
16 25 0.775558261 ubox
16 27 0.005699060 ubox
16 61 0.005116659 ubox
16 62 0.007672870 ubox
16 63 0.620233167 ubox
16 93 0.013041210 ubox
16 94 0.018786824 ubox
16 97 0.014891100 ubox
16 100 0.014725177 ubox
16 103 0.014013239 ubox
16 106 0.004897613 ubox
17 21 0.003242408 ubox
17 22 0.004299137 ubox
17 23 0.005927499 ubox
17 24 0.778384332 ubox
17 25 0.003311335 ubox
17 60 0.010631248 ubox
17 61 0.004422995 ubox
17 62 0.614051214 ubox
17 63 0.003313347 ubox
17 92 0.016147341 ubox
17 93 0.015374537 ubox
17 96 0.012538075 ubox
17 99 0.012481812 ubox
17 102 0.011890346 ubox
17 105 0.004175984 ubox
18 23 0.778614673 ubox
18 59 0.011562152 ubox
18 61 0.539861115 ubox
18 91 0.017856540 ubox
19 29 0.005912770 ubox
20 29 0.013221014 ubox
21 29 0.010075611 ubox
21 66 0.013695085 ubox
22 29 0.109330049 ubox
22 65 0.015303767 ubox
23 28 0.122122235 ubox
23 29 0.011181590 ubox
23 30 0.244250464 ubox
23 35 0.028241690 ubox
23 56 0.079598906 ubox
23 64 0.015515135 ubox
23 66 0.005305604 ubox
23 67 0.050145006 ubox
23 95 0.003449901 ubox
23 98 0.003295049 ubox
23 101 0.003184996 ubox
24 29 0.228755988 ubox
24 34 0.021314366 ubox
24 65 0.005687045 ubox
24 66 0.050002859 ubox
25 29 0.008380006 ubox
25 34 0.027141553 ubox
25 65 0.045732467 ubox
26 33 0.033564742 ubox
26 52 0.254642929 ubox
26 54 0.004595807 ubox
26 59 0.003764891 ubox
26 61 0.007998839 ubox
27 34 0.011018609 ubox
27 51 0.255612086 ubox
27 65 0.004589157 ubox
28 33 0.012043119 ubox
28 50 0.255676539 ubox
28 54 0.045922973 ubox
28 59 0.068299161 ubox
28 61 0.830635404 ubox
29 44 0.008905174 ubox
29 49 0.246387367 ubox
29 53 0.046129401 ubox
29 57 0.003878979 ubox
29 58 0.067775013 ubox
29 59 0.005373430 ubox
29 60 0.913906443 ubox
29 62 0.017736437 ubox
29 92 0.005013374 ubox
30 43 0.011289313 ubox
30 52 0.046048907 ubox
30 59 0.915530729 ubox
30 61 0.018639385 ubox
30 91 0.005266054 ubox
31 51 0.044027334 ubox
32 51 0.003213156 ubox
33 39 0.007419415 ubox
33 41 0.012544921 ubox
33 48 0.030957287 ubox
33 56 0.962867690 ubox
34 38 0.006761724 ubox
34 40 0.012071224 ubox
34 42 0.004394226 ubox
34 43 0.010558790 ubox
34 44 0.249828362 ubox
34 45 0.010631209 ubox
34 46 0.005235035 ubox
34 47 0.028707665 ubox
34 49 0.003849674 ubox
34 53 0.006679730 ubox
34 55 0.963939135 ubox
34 57 0.003464191 ubox
34 60 0.005384017 ubox
35 43 0.251476591 ubox
35 50 0.004015566 ubox
35 52 0.006867177 ubox
35 54 0.963396756 ubox
35 59 0.005710105 ubox
36 51 0.006132806 ubox
37 51 0.007195707 ubox
38 51 0.229955862 ubox
39 43 0.009496045 ubox
39 50 0.230238209 ubox
39 52 0.934913022 ubox
39 54 0.003553739 ubox
40 51 0.935832989 ubox
41 50 0.935541364 ubox
41 52 0.021018756 ubox
42 51 0.020999951 ubox
43 48 0.291978510 ubox
50 56 0.003633169 ubox
51 55 0.003278446 ubox
57 66 0.009723807 ubox
58 65 0.011222985 ubox
59 64 0.011444275 ubox
59 67 0.014247683 ubox
59 95 0.009047192 ubox
59 98 0.004256310 ubox
60 66 0.014015701 ubox
61 65 0.009517250 ubox
61 67 0.009366953 ubox
61 95 0.014036266 ubox
62 66 0.008485861 ubox
64 91 0.479935156 ubox
65 87 0.004330409 ubox
65 88 0.014663714 ubox
65 89 0.018256743 ubox
65 90 0.482196292 ubox
65 91 0.011243560 ubox
65 92 0.010978370 ubox
65 93 0.057606888 ubox
65 94 0.003535179 ubox
66 87 0.014142613 ubox
66 88 0.019837749 ubox
66 89 0.475312705 ubox
66 90 0.011646945 ubox
66 91 0.011080353 ubox
66 92 0.064050486 ubox
66 93 0.003188998 ubox
67 91 0.064625283 ubox
69 86 0.999037816 ubox
70 85 0.999926296 ubox
71 84 0.999620008 ubox
72 83 0.999243659 ubox
73 82 0.999421280 ubox
74 79 0.006063855 ubox
74 81 0.999458196 ubox
75 79 0.028248339 ubox
75 80 0.924139603 ubox
75 81 0.005821587 ubox
76 80 0.028594390 ubox
86 91 0.004697400 ubox
91 95 0.038030650 ubox
91 98 0.091264194 ubox
91 101 0.039842422 ubox
91 104 0.030676941 ubox
91 107 0.009071263 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
