%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (734)
} def

/sequence { (\
GGAAACCAACGUAGGCAAAAGGAAAAAAGCACUGCAGGGCCCUGAAGUGCACCGCCUUCGUUGUUAUGAGCACCUUUCGAGGUGCUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.125063716 ubox
1 7 0.159074216 ubox
1 10 0.057863688 ubox
1 16 0.019390960 ubox
1 41 0.018785920 ubox
1 42 0.053550428 ubox
1 43 0.011312512 ubox
1 53 0.016307345 ubox
1 56 0.012984860 ubox
1 59 0.018129574 ubox
1 64 0.006264227 ubox
1 65 0.022344325 ubox
1 67 0.050966366 ubox
1 95 0.063952536 ubox
1 98 0.064359054 ubox
1 101 0.068949992 ubox
1 104 0.069575561 ubox
1 107 0.017647146 ubox
2 6 0.158284596 ubox
2 7 0.024991048 ubox
2 10 0.011664540 ubox
2 16 0.013427172 ubox
2 40 0.018844249 ubox
2 41 0.053567926 ubox
2 42 0.011960125 ubox
2 52 0.016245721 ubox
2 55 0.012964243 ubox
2 58 0.015694193 ubox
2 59 0.028706817 ubox
2 64 0.025090644 ubox
2 65 0.078768373 ubox
2 67 0.077435361 ubox
2 95 0.033578639 ubox
2 98 0.033543558 ubox
2 101 0.035912081 ubox
2 104 0.035930530 ubox
2 107 0.011777616 ubox
3 57 0.011198171 ubox
3 58 0.027489143 ubox
3 64 0.079285076 ubox
3 65 0.095224957 ubox
3 67 0.089978200 ubox
4 57 0.016079137 ubox
4 64 0.084906064 ubox
4 65 0.411763484 ubox
4 67 0.041552437 ubox
5 12 0.033276557 ubox
5 64 0.438173661 ubox
5 65 0.193822912 ubox
5 67 0.045603931 ubox
6 11 0.034368210 ubox
6 14 0.005970536 ubox
6 15 0.136840698 ubox
6 22 0.010364986 ubox
6 38 0.052356103 ubox
6 39 0.030795172 ubox
6 63 0.315177829 ubox
6 68 0.041991418 ubox
6 91 0.021893046 ubox
7 14 0.137362626 ubox
7 15 0.003897676 ubox
7 21 0.010407263 ubox
7 37 0.052370094 ubox
7 38 0.030776372 ubox
7 63 0.892792691 ubox
7 68 0.011241363 ubox
7 91 0.005919765 ubox
8 12 0.007116159 ubox
8 61 0.011148280 ubox
8 62 0.952683362 ubox
8 65 0.005166702 ubox
8 67 0.009834261 ubox
9 58 0.003849926 ubox
9 61 0.958414036 ubox
9 62 0.004080027 ubox
9 64 0.005531283 ubox
10 14 0.005234326 ubox
10 15 0.020478998 ubox
10 37 0.006399697 ubox
10 60 0.960213955 ubox
10 63 0.005525497 ubox
10 68 0.073355543 ubox
11 16 0.010383367 ubox
11 35 0.064124229 ubox
11 58 0.016115639 ubox
11 59 0.964731774 ubox
11 62 0.004587048 ubox
11 67 0.074376732 ubox
11 95 0.003722610 ubox
11 98 0.004754458 ubox
11 101 0.021950979 ubox
11 104 0.027312530 ubox
11 107 0.010781138 ubox
12 34 0.064198497 ubox
12 66 0.074297412 ubox
12 68 0.004455290 ubox
12 94 0.003585823 ubox
12 97 0.004587367 ubox
12 100 0.021186380 ubox
12 103 0.026531374 ubox
12 106 0.010563856 ubox
13 33 0.064195726 ubox
13 57 0.913328153 ubox
13 58 0.037211558 ubox
13 65 0.065992631 ubox
13 67 0.004811131 ubox
14 32 0.064120783 ubox
14 41 0.003417266 ubox
14 53 0.004906771 ubox
14 56 0.976524902 ubox
14 57 0.011070300 ubox
14 59 0.014835760 ubox
14 62 0.007656603 ubox
14 64 0.047373567 ubox
14 65 0.039843093 ubox
14 101 0.015429369 ubox
14 104 0.008624854 ubox
15 30 0.063451791 ubox
15 40 0.003477036 ubox
15 52 0.004901643 ubox
15 55 0.976582123 ubox
15 56 0.010090818 ubox
15 58 0.010984637 ubox
15 59 0.017187159 ubox
15 61 0.011929978 ubox
15 64 0.062181454 ubox
15 101 0.006518450 ubox
15 104 0.004479896 ubox
16 21 0.019307567 ubox
16 22 0.015070505 ubox
16 29 0.063451762 ubox
16 39 0.003513440 ubox
16 54 0.975525450 ubox
16 60 0.012304442 ubox
16 63 0.077156166 ubox
17 58 0.005187795 ubox
17 62 0.076938994 ubox
18 58 0.011289087 ubox
18 61 0.069639281 ubox
19 57 0.008870064 ubox
19 58 0.176675024 ubox
20 33 0.005512256 ubox
20 57 0.196644078 ubox
20 58 0.008513955 ubox
20 61 0.003536417 ubox
21 30 0.005005935 ubox
21 32 0.005682783 ubox
21 50 0.010325375 ubox
21 52 0.040606668 ubox
21 53 0.810021435 ubox
21 56 0.199442411 ubox
21 57 0.008816595 ubox
21 59 0.014176946 ubox
22 50 0.011425507 ubox
22 52 0.809368997 ubox
22 53 0.055622585 ubox
22 55 0.199367496 ubox
22 56 0.008980055 ubox
22 58 0.014080592 ubox
22 59 0.014937670 ubox
23 57 0.013522701 ubox
23 58 0.014902527 ubox
24 57 0.013797839 ubox
29 35 0.007981004 ubox
29 50 0.996384462 ubox
29 52 0.004001418 ubox
29 53 0.004923467 ubox
30 34 0.007931807 ubox
30 49 0.997823761 ubox
31 48 0.997637013 ubox
32 47 0.997710737 ubox
33 45 0.034342219 ubox
33 46 0.885408854 ubox
33 51 0.003779451 ubox
34 40 0.011295667 ubox
34 50 0.004094084 ubox
35 39 0.011239557 ubox
35 44 0.990733907 ubox
35 49 0.004091962 ubox
36 43 0.995556556 ubox
36 48 0.003965204 ubox
36 58 0.014849689 ubox
37 41 0.016373922 ubox
37 42 0.991262140 ubox
37 43 0.036162928 ubox
37 53 0.010336325 ubox
37 57 0.017973939 ubox
38 42 0.038967297 ubox
38 43 0.004273062 ubox
38 52 0.010340418 ubox
38 56 0.018452388 ubox
39 50 0.010360805 ubox
39 55 0.018467892 ubox
40 49 0.010356879 ubox
40 54 0.018452133 ubox
41 47 0.005043576 ubox
42 47 0.005106440 ubox
43 51 0.017108601 ubox
43 60 0.005201891 ubox
44 50 0.017359735 ubox
44 59 0.061407191 ubox
45 58 0.061461058 ubox
46 57 0.061454217 ubox
47 55 0.006668278 ubox
47 56 0.061134005 ubox
48 54 0.009245054 ubox
49 53 0.008883945 ubox
49 55 0.059675203 ubox
50 54 0.059248025 ubox
54 104 0.004523970 ubox
57 100 0.010636466 ubox
57 103 0.004813187 ubox
57 106 0.003353229 ubox
58 99 0.018087541 ubox
58 100 0.017298904 ubox
58 102 0.008123295 ubox
58 103 0.005152456 ubox
58 105 0.005693445 ubox
58 106 0.005174791 ubox
59 68 0.004680236 ubox
60 67 0.004641841 ubox
60 95 0.025443298 ubox
60 98 0.243947082 ubox
60 101 0.071150933 ubox
60 104 0.073005322 ubox
60 107 0.022989204 ubox
61 66 0.004574661 ubox
61 93 0.008210075 ubox
61 94 0.025571780 ubox
61 97 0.246453937 ubox
61 100 0.071862553 ubox
61 103 0.073769240 ubox
61 106 0.024707142 ubox
62 91 0.004193259 ubox
62 92 0.015089675 ubox
62 93 0.025870005 ubox
62 94 0.003441558 ubox
62 96 0.255573739 ubox
62 99 0.074454482 ubox
62 102 0.076555147 ubox
62 105 0.030104217 ubox
63 95 0.263736293 ubox
63 98 0.076834968 ubox
63 101 0.079066248 ubox
63 104 0.034314754 ubox
63 107 0.004221585 ubox
64 68 0.008125934 ubox
64 87 0.013513556 ubox
64 88 0.050127600 ubox
64 89 0.066952478 ubox
64 90 0.095833305 ubox
64 91 0.132332805 ubox
64 92 0.125781381 ubox
64 93 0.093893334 ubox
64 94 0.260610397 ubox
64 96 0.004468183 ubox
64 97 0.076033901 ubox
64 99 0.006072248 ubox
64 100 0.078659906 ubox
64 102 0.004659340 ubox
64 103 0.034566518 ubox
64 105 0.003738567 ubox
64 106 0.006793834 ubox
65 87 0.056982129 ubox
65 88 0.071063999 ubox
65 89 0.099437678 ubox
65 90 0.151827629 ubox
65 91 0.132853432 ubox
65 92 0.109114763 ubox
65 93 0.239430346 ubox
65 94 0.007842855 ubox
65 96 0.066727527 ubox
65 97 0.006050667 ubox
65 99 0.071317517 ubox
65 100 0.005226260 ubox
65 102 0.031558317 ubox
65 103 0.003950025 ubox
65 105 0.006932183 ubox
65 106 0.003277510 ubox
66 86 0.035536860 ubox
67 87 0.127365250 ubox
67 88 0.174212994 ubox
67 89 0.120075940 ubox
67 90 0.082767081 ubox
67 91 0.041212379 ubox
67 92 0.013880827 ubox
67 93 0.005327952 ubox
67 94 0.012603627 ubox
67 96 0.072787172 ubox
67 97 0.013413251 ubox
67 99 0.048598546 ubox
67 100 0.006311416 ubox
67 102 0.034771349 ubox
67 105 0.029159605 ubox
68 86 0.084837481 ubox
68 95 0.079619774 ubox
68 98 0.053921292 ubox
68 101 0.038678544 ubox
68 104 0.032407313 ubox
68 107 0.003690235 ubox
69 86 0.966716632 ubox
70 85 0.999852706 ubox
70 86 0.003667791 ubox
71 84 0.999988586 ubox
72 83 0.999791660 ubox
73 82 0.999979704 ubox
74 79 0.003342786 ubox
74 81 0.999677248 ubox
74 82 0.004238941 ubox
75 79 0.028245006 ubox
75 80 0.924331012 ubox
75 81 0.005880552 ubox
76 80 0.028598090 ubox
86 90 0.003654047 ubox
86 91 0.005614303 ubox
86 92 0.005174693 ubox
86 93 0.006544999 ubox
91 95 0.041093665 ubox
91 98 0.097937094 ubox
91 101 0.042497707 ubox
91 104 0.032712137 ubox
91 107 0.009675690 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
