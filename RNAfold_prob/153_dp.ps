%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (153)
} def

/sequence { (\
GGAAAAAAGCGCUACAGGGCCGGCGAAAGCGCGAAAGCAGCGCGGCGAGCGCGGGUAGAGGCAAAAAAACGGAGUUUCGACUCCGUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.091249044 ubox
1 12 0.004263191 ubox
1 13 0.004786716 ubox
1 15 0.004977632 ubox
1 62 0.015609666 ubox
1 70 0.013100406 ubox
1 95 0.067312294 ubox
1 98 0.067854900 ubox
1 101 0.069504677 ubox
1 104 0.069747462 ubox
1 107 0.017610473 ubox
2 10 0.028205715 ubox
2 12 0.005097950 ubox
2 62 0.007850717 ubox
2 70 0.003772613 ubox
2 95 0.035474366 ubox
2 98 0.035678155 ubox
2 101 0.036434568 ubox
2 104 0.036291452 ubox
2 107 0.011843618 ubox
3 56 0.005118674 ubox
4 56 0.009098614 ubox
5 56 0.016241081 ubox
6 56 0.005803844 ubox
7 56 0.003265943 ubox
9 15 0.003443039 ubox
9 20 0.009398402 ubox
9 21 0.003615075 ubox
9 32 0.018565981 ubox
9 43 0.004044657 ubox
9 52 0.086195864 ubox
9 56 0.004128589 ubox
9 62 0.923986087 ubox
9 86 0.003336629 ubox
9 95 0.014066673 ubox
9 98 0.013958009 ubox
9 101 0.014146182 ubox
9 104 0.014195215 ubox
9 107 0.004957481 ubox
10 17 0.010762136 ubox
10 18 0.007310406 ubox
10 19 0.010185077 ubox
10 25 0.006891907 ubox
10 31 0.018593868 ubox
10 42 0.004052663 ubox
10 51 0.086307952 ubox
10 53 0.004439859 ubox
10 55 0.004220476 ubox
10 60 0.136191940 ubox
10 61 0.921012863 ubox
10 85 0.003328239 ubox
10 91 0.015181836 ubox
11 20 0.009685647 ubox
11 24 0.007050957 ubox
11 30 0.018631996 ubox
11 38 0.003631658 ubox
11 41 0.004057370 ubox
11 50 0.086369971 ubox
11 52 0.004497302 ubox
11 56 0.008559851 ubox
11 62 0.333740525 ubox
11 95 0.004433400 ubox
11 98 0.004473561 ubox
11 101 0.004592555 ubox
11 104 0.004571604 ubox
12 17 0.009881805 ubox
12 18 0.009088182 ubox
12 19 0.010327465 ubox
12 23 0.007050671 ubox
12 29 0.018630450 ubox
12 37 0.003637775 ubox
12 40 0.004057268 ubox
12 49 0.086354827 ubox
12 51 0.004489914 ubox
12 53 0.003407217 ubox
12 55 0.008692859 ubox
12 58 0.893165712 ubox
12 60 0.273325707 ubox
12 61 0.333373498 ubox
12 91 0.005804409 ubox
13 17 0.008234547 ubox
13 18 0.010048675 ubox
13 22 0.006969068 ubox
13 28 0.018048081 ubox
13 36 0.003524516 ubox
13 39 0.003967211 ubox
13 47 0.003397235 ubox
13 48 0.082202993 ubox
13 54 0.008075481 ubox
13 57 0.893994633 ubox
13 58 0.009232073 ubox
13 59 0.272021003 ubox
13 60 0.320771911 ubox
13 61 0.004563999 ubox
13 63 0.003873580 ubox
13 90 0.005606014 ubox
14 56 0.892109988 ubox
15 45 0.004893160 ubox
15 47 0.067701371 ubox
15 53 0.009675820 ubox
15 54 0.065698413 ubox
15 55 0.887561985 ubox
15 58 0.233757907 ubox
15 60 0.036270710 ubox
15 61 0.014103345 ubox
16 56 0.010592669 ubox
17 24 0.016377819 ubox
17 32 0.005369335 ubox
17 38 0.003934460 ubox
17 43 0.010418863 ubox
17 52 0.824589289 ubox
17 56 0.010379417 ubox
18 24 0.007351824 ubox
18 46 0.006040437 ubox
18 50 0.020571776 ubox
18 52 0.224852538 ubox
18 56 0.152899261 ubox
19 30 0.007285578 ubox
19 32 0.004288177 ubox
19 38 0.014761404 ubox
19 41 0.010624983 ubox
19 46 0.086101603 ubox
19 50 0.869613279 ubox
19 52 0.048147413 ubox
19 56 0.406274611 ubox
19 62 0.008674370 ubox
20 29 0.007261705 ubox
20 31 0.004175443 ubox
20 37 0.014786659 ubox
20 40 0.010599977 ubox
20 45 0.086492513 ubox
20 49 0.869563311 ubox
20 51 0.046952695 ubox
20 53 0.003632848 ubox
20 54 0.247985186 ubox
20 55 0.411632334 ubox
20 61 0.008689859 ubox
21 33 0.014656775 ubox
21 44 0.086391270 ubox
21 45 0.014933367 ubox
21 47 0.790156597 ubox
21 49 0.026849836 ubox
21 51 0.014981376 ubox
21 53 0.248192632 ubox
21 54 0.411951876 ubox
21 60 0.008675500 ubox
22 32 0.014495487 ubox
22 38 0.003164429 ubox
22 43 0.067089389 ubox
22 46 0.788481659 ubox
22 50 0.018707705 ubox
22 52 0.240331901 ubox
23 30 0.033390376 ubox
23 32 0.018531782 ubox
23 38 0.006437952 ubox
23 41 0.038285884 ubox
23 43 0.062461159 ubox
23 46 0.355867414 ubox
23 50 0.235367644 ubox
23 52 0.415770212 ubox
24 29 0.033559970 ubox
24 31 0.018798628 ubox
24 37 0.006451672 ubox
24 40 0.038255815 ubox
24 42 0.081016155 ubox
24 44 0.773376578 ubox
24 45 0.357177359 ubox
24 47 0.097126171 ubox
24 49 0.235449885 ubox
24 51 0.419847313 ubox
25 30 0.018845368 ubox
25 41 0.078441946 ubox
25 43 0.629574320 ubox
25 46 0.098121636 ubox
25 50 0.419064929 ubox
29 38 0.193686998 ubox
29 41 0.604781099 ubox
29 43 0.648040052 ubox
29 46 0.307692164 ubox
29 52 0.006505628 ubox
29 62 0.004459752 ubox
30 37 0.194039996 ubox
30 40 0.605458241 ubox
30 42 0.678341135 ubox
30 44 0.261206239 ubox
30 45 0.218809860 ubox
30 47 0.020576896 ubox
30 51 0.006520981 ubox
30 53 0.003336582 ubox
30 61 0.004459679 ubox
31 38 0.614115251 ubox
31 41 0.678700245 ubox
31 43 0.339394283 ubox
31 46 0.020586337 ubox
31 50 0.006549519 ubox
31 52 0.003729498 ubox
31 62 0.007390355 ubox
32 37 0.615841400 ubox
32 40 0.678591755 ubox
32 42 0.339852486 ubox
32 44 0.021164100 ubox
32 45 0.020312617 ubox
32 49 0.006549180 ubox
32 51 0.003742190 ubox
32 60 0.003448875 ubox
32 61 0.007389472 ubox
33 38 0.133364742 ubox
33 41 0.337350977 ubox
33 43 0.021171401 ubox
33 50 0.003746756 ubox
36 56 0.008832845 ubox
37 41 0.005315215 ubox
37 43 0.006962213 ubox
37 46 0.007371948 ubox
37 56 0.014054578 ubox
37 62 0.003400576 ubox
38 42 0.007018048 ubox
38 45 0.007366031 ubox
38 53 0.004692491 ubox
38 54 0.012629971 ubox
38 55 0.014323216 ubox
38 61 0.003389530 ubox
40 52 0.036410189 ubox
41 51 0.036771618 ubox
41 53 0.012782424 ubox
42 50 0.036922224 ubox
42 52 0.013083821 ubox
43 49 0.036929662 ubox
43 51 0.013090363 ubox
44 50 0.013327368 ubox
51 62 0.006414972 ubox
52 61 0.006456275 ubox
53 62 0.016105900 ubox
53 83 0.005896014 ubox
53 84 0.004769457 ubox
53 101 0.008750372 ubox
53 104 0.008752699 ubox
54 62 0.011577614 ubox
54 82 0.006010432 ubox
54 83 0.004757353 ubox
54 98 0.003588621 ubox
54 101 0.011027135 ubox
55 62 0.029980418 ubox
55 81 0.007522566 ubox
55 98 0.013957058 ubox
55 101 0.020273589 ubox
55 104 0.004579211 ubox
56 60 0.005777941 ubox
56 61 0.029259672 ubox
56 80 0.006986660 ubox
56 97 0.013709807 ubox
56 100 0.019829868 ubox
56 103 0.004466987 ubox
58 62 0.003986494 ubox
58 78 0.007762144 ubox
58 95 0.008093575 ubox
58 98 0.017240241 ubox
58 101 0.003640980 ubox
59 77 0.007803070 ubox
60 76 0.007777925 ubox
60 95 0.034414256 ubox
60 98 0.006806607 ubox
61 75 0.007800820 ubox
61 95 0.018364093 ubox
61 98 0.003504466 ubox
62 74 0.007799497 ubox
62 91 0.011302716 ubox
64 86 0.004196352 ubox
65 86 0.005808901 ubox
66 86 0.008043663 ubox
67 86 0.011284853 ubox
68 86 0.044117180 ubox
69 86 0.961907587 ubox
70 85 0.998273402 ubox
71 84 0.999895061 ubox
71 98 0.007638229 ubox
72 83 0.999912884 ubox
73 82 0.999754011 ubox
74 81 0.999122055 ubox
74 95 0.009758494 ubox
75 79 0.036000781 ubox
75 80 0.923596698 ubox
75 94 0.009763097 ubox
76 80 0.028229995 ubox
76 93 0.009759241 ubox
77 92 0.009769699 ubox
78 91 0.009766869 ubox
85 95 0.013019088 ubox
85 98 0.008626630 ubox
85 101 0.006870115 ubox
85 104 0.006363593 ubox
86 91 0.005633061 ubox
86 92 0.005195975 ubox
86 93 0.006691741 ubox
86 94 0.013198578 ubox
86 97 0.008698358 ubox
86 100 0.006896138 ubox
86 103 0.006388449 ubox
91 95 0.043051513 ubox
91 98 0.103748819 ubox
91 101 0.045479145 ubox
91 104 0.035175861 ubox
91 107 0.010406521 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
