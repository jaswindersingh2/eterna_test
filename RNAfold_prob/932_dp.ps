%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (932)
} def

/sequence { (\
GGAAAGCAUCAGCACGUGCGUGCCGGAGAGUCCAUAUCCAGGACUCUCCUGACUGAUAAGUCGGAUGCGAAUUCAUUCGUGAAUUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 24 0.038944619 ubox
1 68 0.003842188 ubox
1 74 0.039604902 ubox
1 78 0.004501518 ubox
1 86 0.005601811 ubox
1 95 0.067374986 ubox
1 98 0.067808270 ubox
1 101 0.069382122 ubox
1 104 0.069679928 ubox
1 107 0.017592149 ubox
2 10 0.004183667 ubox
2 23 0.038960616 ubox
2 68 0.004192467 ubox
2 73 0.039429973 ubox
2 74 0.026541602 ubox
2 77 0.003821459 ubox
2 78 0.003336405 ubox
2 85 0.004298350 ubox
2 86 0.007381308 ubox
2 95 0.035554301 ubox
2 98 0.035683310 ubox
2 101 0.036447929 ubox
2 104 0.036307635 ubox
2 107 0.011847272 ubox
3 9 0.004017930 ubox
3 21 0.003279199 ubox
3 72 0.037861050 ubox
3 73 0.026487175 ubox
3 76 0.003622594 ubox
3 77 0.003296224 ubox
3 84 0.003390917 ubox
3 85 0.006842017 ubox
4 21 0.006494627 ubox
4 72 0.023515790 ubox
4 84 0.005301011 ubox
6 13 0.009307283 ubox
6 19 0.039287838 ubox
6 23 0.007840533 ubox
6 68 0.997747925 ubox
6 95 0.004057988 ubox
7 12 0.009304964 ubox
7 18 0.039299307 ubox
7 22 0.007895252 ubox
7 67 0.998992472 ubox
7 81 0.003783053 ubox
8 17 0.039164800 ubox
8 21 0.007827848 ubox
8 66 0.998510593 ubox
8 80 0.003276047 ubox
9 16 0.036792187 ubox
9 20 0.006960564 ubox
9 64 0.018222868 ubox
9 65 0.998185867 ubox
9 92 0.006371520 ubox
10 16 0.008036890 ubox
10 18 0.003309428 ubox
10 25 0.029644130 ubox
10 63 0.034289288 ubox
10 64 0.995829708 ubox
10 91 0.006698918 ubox
11 17 0.003344159 ubox
11 21 0.004776111 ubox
12 19 0.042979425 ubox
12 21 0.007631112 ubox
12 23 0.993708489 ubox
12 24 0.062988558 ubox
12 61 0.006019240 ubox
12 62 0.005443078 ubox
13 18 0.042972080 ubox
13 20 0.008024644 ubox
13 22 0.998032930 ubox
13 60 0.006308801 ubox
14 21 0.997313587 ubox
14 61 0.005460443 ubox
15 20 0.995524195 ubox
15 22 0.003301084 ubox
15 60 0.005525259 ubox
16 23 0.006287825 ubox
16 57 0.006213663 ubox
17 22 0.006053897 ubox
17 56 0.006342631 ubox
18 68 0.010690896 ubox
19 55 0.005275608 ubox
19 67 0.010703294 ubox
20 24 0.003845439 ubox
20 53 0.006988207 ubox
20 54 0.004231960 ubox
20 66 0.010690954 ubox
21 52 0.006978088 ubox
21 65 0.010657187 ubox
22 53 0.003225124 ubox
23 51 0.007963787 ubox
23 63 0.004608559 ubox
23 64 0.009831799 ubox
24 51 0.012482984 ubox
24 63 0.018062195 ubox
25 48 0.003376410 ubox
25 49 0.997642360 ubox
25 50 0.006559407 ubox
26 48 0.999956845 ubox
26 49 0.005178169 ubox
27 47 0.999845731 ubox
28 46 0.999983191 ubox
29 45 0.999848831 ubox
30 44 0.999977290 ubox
31 43 0.999869517 ubox
32 41 0.003675925 ubox
32 42 0.999973803 ubox
33 41 0.999409114 ubox
33 42 0.004399882 ubox
35 40 0.130600395 ubox
49 63 0.009471431 ubox
49 64 0.045604924 ubox
50 63 0.809569098 ubox
51 62 0.999238231 ubox
52 61 0.999619262 ubox
53 60 0.999727212 ubox
53 64 0.005900378 ubox
54 58 0.010540073 ubox
54 59 0.989669308 ubox
54 63 0.011135424 ubox
55 62 0.013268822 ubox
56 61 0.011764636 ubox
63 68 0.005006454 ubox
63 78 0.004473679 ubox
63 86 0.007756057 ubox
64 77 0.004532584 ubox
64 85 0.007865724 ubox
65 76 0.004552523 ubox
65 84 0.007842900 ubox
66 75 0.004561157 ubox
66 81 0.004331400 ubox
66 83 0.006907192 ubox
66 88 0.003239779 ubox
66 89 0.005277252 ubox
67 74 0.004516938 ubox
67 80 0.010862971 ubox
68 79 0.011370865 ubox
69 78 0.017139575 ubox
69 85 0.004222175 ubox
69 86 0.996764701 ubox
70 77 0.016853770 ubox
70 84 0.003408108 ubox
70 85 0.997659716 ubox
71 76 0.013270527 ubox
71 84 0.997376876 ubox
72 83 0.997453039 ubox
72 93 0.003877214 ubox
73 82 0.998096293 ubox
73 92 0.004447412 ubox
74 79 0.005660664 ubox
74 81 0.998121972 ubox
74 91 0.004500666 ubox
75 80 0.830545128 ubox
76 93 0.014561064 ubox
76 100 0.006232419 ubox
77 92 0.016731302 ubox
77 99 0.007320151 ubox
77 100 0.004673834 ubox
78 91 0.016936485 ubox
79 86 0.004721494 ubox
79 95 0.010722137 ubox
79 98 0.037430461 ubox
79 101 0.008747877 ubox
79 104 0.004755786 ubox
80 87 0.010285593 ubox
80 89 0.006765588 ubox
80 94 0.010641223 ubox
80 96 0.009913788 ubox
80 97 0.036840073 ubox
80 99 0.004941279 ubox
80 100 0.008183281 ubox
80 103 0.004608738 ubox
81 86 0.011033445 ubox
81 95 0.012105784 ubox
81 98 0.006031612 ubox
84 90 0.003195427 ubox
84 93 0.040835118 ubox
85 92 0.045160309 ubox
86 91 0.045869219 ubox
91 95 0.042983944 ubox
91 98 0.103642283 ubox
91 101 0.045473073 ubox
91 104 0.035195216 ubox
91 107 0.010413109 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
50 63 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
