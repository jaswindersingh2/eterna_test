%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (934)
} def

/sequence { (\
GGAAAAGUAGGAGAUGAAAAGGAAAAAAGUAAGAGAGAAAACUCACUUACGCCCAUCACCUACAAAAAAAAGCUCUUCGGAGCUUUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 63 0.003707614 ubox
1 86 0.004401299 ubox
1 95 0.067455822 ubox
1 98 0.067879518 ubox
1 101 0.069434351 ubox
1 104 0.069747432 ubox
1 107 0.017609747 ubox
2 63 0.004034064 ubox
2 85 0.003613963 ubox
2 86 0.008305179 ubox
2 95 0.035610537 ubox
2 98 0.035737319 ubox
2 101 0.036499082 ubox
2 104 0.036360583 ubox
2 107 0.011864784 ubox
3 85 0.007231137 ubox
3 86 0.006741498 ubox
4 84 0.004111401 ubox
4 85 0.005374963 ubox
4 86 0.006219468 ubox
5 85 0.005004487 ubox
5 86 0.005626591 ubox
6 85 0.004130137 ubox
6 86 0.004100712 ubox
7 63 0.998206975 ubox
7 95 0.004296418 ubox
7 98 0.004343646 ubox
7 101 0.004214345 ubox
7 104 0.004229656 ubox
8 62 0.999435414 ubox
8 94 0.003554551 ubox
8 97 0.003608013 ubox
8 100 0.003504153 ubox
8 103 0.003532434 ubox
9 61 0.999659868 ubox
10 59 0.003481708 ubox
10 60 0.999962240 ubox
11 59 0.997985390 ubox
13 57 0.989847924 ubox
13 59 0.005069302 ubox
14 56 0.992299381 ubox
15 20 0.004153550 ubox
15 55 0.991634665 ubox
15 58 0.117648858 ubox
16 52 0.005348214 ubox
16 53 0.035606612 ubox
16 54 0.978405183 ubox
16 57 0.119281127 ubox
17 56 0.117862549 ubox
18 56 0.007211689 ubox
19 48 0.004269865 ubox
19 56 0.006001438 ubox
20 47 0.004545981 ubox
20 56 0.003182110 ubox
21 46 0.004558742 ubox
21 50 0.031778045 ubox
21 52 0.028754859 ubox
21 53 0.602585653 ubox
21 54 0.181892569 ubox
21 57 0.003766603 ubox
22 48 0.005667277 ubox
22 50 0.019409192 ubox
22 52 0.599707307 ubox
22 53 0.198382812 ubox
22 54 0.011290945 ubox
22 56 0.003540956 ubox
22 57 0.011864642 ubox
23 47 0.004052562 ubox
23 48 0.006282793 ubox
23 56 0.011710952 ubox
24 47 0.005608345 ubox
24 48 0.006064171 ubox
25 47 0.003463631 ubox
25 48 0.005145733 ubox
26 47 0.003360078 ubox
26 48 0.032943756 ubox
27 47 0.024883463 ubox
27 48 0.281243404 ubox
28 43 0.006895586 ubox
28 47 0.301622428 ubox
28 48 0.005202410 ubox
29 42 0.007189987 ubox
29 46 0.304206321 ubox
29 47 0.003573012 ubox
29 48 0.003181909 ubox
29 50 0.948158866 ubox
29 52 0.011270786 ubox
29 53 0.005630094 ubox
30 41 0.006994984 ubox
30 45 0.288301032 ubox
30 49 0.951627963 ubox
30 51 0.010300488 ubox
31 43 0.004071086 ubox
31 48 0.951545031 ubox
32 43 0.103047116 ubox
32 47 0.951400197 ubox
33 42 0.104579421 ubox
33 44 0.264495327 ubox
33 46 0.947898355 ubox
33 48 0.006405381 ubox
34 43 0.266616891 ubox
34 47 0.007135766 ubox
35 42 0.265430351 ubox
35 44 0.954240678 ubox
35 46 0.007191042 ubox
36 43 0.955994773 ubox
37 42 0.948025585 ubox
37 44 0.037272042 ubox
38 43 0.034903082 ubox
46 51 0.003551963 ubox
63 91 0.004826235 ubox
64 86 0.010004436 ubox
65 85 0.008207687 ubox
65 86 0.016333596 ubox
66 84 0.004107484 ubox
66 85 0.013078702 ubox
66 86 0.022681815 ubox
67 84 0.006507952 ubox
67 85 0.018134931 ubox
67 86 0.033513573 ubox
68 84 0.009012016 ubox
68 85 0.026063326 ubox
68 86 0.073784821 ubox
69 84 0.012504497 ubox
69 85 0.063903375 ubox
69 86 0.916067159 ubox
70 84 0.045660166 ubox
70 85 0.979501863 ubox
70 86 0.028905154 ubox
71 84 0.996105448 ubox
71 85 0.021842915 ubox
72 83 0.999972343 ubox
72 84 0.003171450 ubox
73 82 0.999988705 ubox
74 80 0.005758587 ubox
74 81 0.999739613 ubox
75 79 0.012834598 ubox
75 80 0.998926809 ubox
76 80 0.003170534 ubox
84 92 0.004675623 ubox
84 93 0.009072298 ubox
84 94 0.004711388 ubox
85 90 0.003902908 ubox
85 91 0.006694141 ubox
85 92 0.015918456 ubox
85 93 0.009887525 ubox
85 94 0.008842642 ubox
85 97 0.003341411 ubox
86 90 0.007193633 ubox
86 91 0.017956873 ubox
86 92 0.012964073 ubox
86 93 0.014046662 ubox
86 94 0.005458836 ubox
86 96 0.005253595 ubox
86 97 0.003598527 ubox
86 99 0.004179076 ubox
86 102 0.003709488 ubox
91 95 0.043027523 ubox
91 98 0.103750893 ubox
91 101 0.045520510 ubox
91 104 0.035226726 ubox
91 107 0.010422044 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
