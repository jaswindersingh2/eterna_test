%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1038)
} def

/sequence { (\
GGAAAAGCCAAAGGCAAGCUCAAAGAGCAACCAUCAAAGAUGGAAGACCAAAGGUCAACGCAAAGCGACCUAGACUUCGGUCUAGGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.008851684 ubox
1 9 0.097513734 ubox
1 15 0.003292952 ubox
1 20 0.003817389 ubox
1 21 0.006198595 ubox
1 32 0.009846978 ubox
1 49 0.018858602 ubox
1 56 0.005904810 ubox
1 59 0.033134349 ubox
1 61 0.026343347 ubox
1 66 0.024286180 ubox
1 69 0.009024308 ubox
1 70 0.010508220 ubox
1 95 0.402820083 ubox
1 98 0.405491322 ubox
1 101 0.414703251 ubox
1 104 0.416573111 ubox
1 107 0.105177433 ubox
2 8 0.097549876 ubox
2 9 0.013666064 ubox
2 15 0.004091242 ubox
2 19 0.005705661 ubox
2 20 0.005214387 ubox
2 21 0.008961512 ubox
2 31 0.009895865 ubox
2 48 0.018789328 ubox
2 56 0.006582291 ubox
2 59 0.024071772 ubox
2 61 0.017066985 ubox
2 66 0.021047281 ubox
2 69 0.012668278 ubox
2 95 0.212617401 ubox
2 98 0.213429661 ubox
2 101 0.217973976 ubox
2 104 0.217150606 ubox
2 107 0.070857584 ubox
3 20 0.008802043 ubox
3 55 0.005088457 ubox
6 20 0.003186273 ubox
7 15 0.989679094 ubox
7 19 0.003434767 ubox
7 55 0.009089433 ubox
7 61 0.013421665 ubox
7 66 0.029544831 ubox
7 95 0.016924893 ubox
7 98 0.016883862 ubox
7 101 0.016485641 ubox
7 104 0.016350746 ubox
7 107 0.005709854 ubox
8 13 0.010647037 ubox
8 14 0.990915008 ubox
8 18 0.003397290 ubox
8 54 0.009775569 ubox
8 60 0.013360986 ubox
8 65 0.029423447 ubox
8 67 0.004344675 ubox
8 91 0.011151483 ubox
9 13 0.983720380 ubox
9 14 0.010879265 ubox
9 53 0.009765058 ubox
9 65 0.003837115 ubox
9 67 0.003516747 ubox
9 91 0.016397459 ubox
13 32 0.005636038 ubox
13 49 0.009472281 ubox
13 56 0.003490125 ubox
13 59 0.004257202 ubox
13 61 0.003396060 ubox
13 95 0.032992750 ubox
13 98 0.032858329 ubox
13 101 0.033527388 ubox
13 104 0.033656467 ubox
13 107 0.011754388 ubox
14 28 0.003825353 ubox
14 31 0.005697428 ubox
14 48 0.009463948 ubox
14 55 0.003482287 ubox
14 59 0.004077817 ubox
14 61 0.040897816 ubox
14 66 0.034699929 ubox
14 95 0.020324131 ubox
14 98 0.020273648 ubox
14 101 0.020637931 ubox
14 104 0.020589008 ubox
14 107 0.006715947 ubox
15 27 0.003815084 ubox
15 46 0.006716186 ubox
15 54 0.003475495 ubox
15 60 0.040937727 ubox
15 65 0.034719684 ubox
15 91 0.026990953 ubox
18 28 0.998383318 ubox
18 61 0.003420040 ubox
18 66 0.007443497 ubox
18 95 0.006005346 ubox
18 98 0.005710343 ubox
18 101 0.005828336 ubox
18 104 0.005816879 ubox
19 25 0.006150195 ubox
19 27 0.999482826 ubox
19 60 0.003396517 ubox
19 65 0.007442846 ubox
19 91 0.005158709 ubox
20 24 0.005689970 ubox
20 25 0.006524178 ubox
20 26 0.998705652 ubox
20 64 0.007052846 ubox
20 90 0.004867400 ubox
20 92 0.009444206 ubox
21 25 0.990321801 ubox
21 91 0.009948178 ubox
27 61 0.005368863 ubox
27 66 0.003670224 ubox
28 60 0.005374664 ubox
28 65 0.003676530 ubox
28 91 0.004372138 ubox
31 42 0.004876227 ubox
31 43 0.995084663 ubox
31 91 0.003856919 ubox
32 39 0.003626790 ubox
32 42 0.999632231 ubox
32 43 0.004827664 ubox
33 41 0.999161070 ubox
34 39 0.008312949 ubox
34 40 0.998543006 ubox
34 43 0.006051150 ubox
34 44 0.005435778 ubox
34 87 0.011144377 ubox
35 39 0.990257639 ubox
35 42 0.009455145 ubox
35 43 0.005737475 ubox
35 86 0.011895933 ubox
35 91 0.003184196 ubox
36 41 0.008295548 ubox
38 83 0.012636248 ubox
39 82 0.012834540 ubox
40 81 0.012833484 ubox
41 80 0.012786353 ubox
41 96 0.003530862 ubox
41 99 0.003524723 ubox
41 102 0.003568423 ubox
42 95 0.003756060 ubox
42 98 0.003748113 ubox
42 101 0.003794171 ubox
43 59 0.009819320 ubox
43 78 0.012836685 ubox
44 77 0.012835284 ubox
45 76 0.012827437 ubox
45 83 0.011752068 ubox
46 56 0.997891916 ubox
46 75 0.012794487 ubox
46 82 0.012203598 ubox
47 55 0.999017710 ubox
47 81 0.012205623 ubox
48 53 0.007124258 ubox
48 54 0.999220216 ubox
48 73 0.010001463 ubox
48 80 0.012206465 ubox
49 53 0.991957690 ubox
49 54 0.008824786 ubox
49 79 0.012189650 ubox
50 77 0.004271184 ubox
51 76 0.004189172 ubox
51 77 0.004981642 ubox
52 71 0.013904597 ubox
52 76 0.004281557 ubox
52 77 0.008817979 ubox
53 70 0.014501064 ubox
53 75 0.003390891 ubox
53 76 0.009958380 ubox
54 69 0.014648109 ubox
54 75 0.010325152 ubox
55 68 0.014747386 ubox
55 74 0.010577708 ubox
55 92 0.004041246 ubox
56 67 0.013762860 ubox
56 73 0.010572845 ubox
56 91 0.004571302 ubox
57 71 0.004483368 ubox
58 71 0.003873203 ubox
59 65 0.046001653 ubox
59 67 0.962961840 ubox
59 91 0.004979523 ubox
60 66 0.981674911 ubox
60 95 0.018207974 ubox
60 98 0.005452854 ubox
61 65 0.974588275 ubox
61 67 0.027210644 ubox
61 91 0.005315441 ubox
65 95 0.003496127 ubox
66 91 0.034424410 ubox
67 95 0.004110458 ubox
68 81 0.003266285 ubox
69 80 0.003322554 ubox
69 85 0.004802384 ubox
69 86 0.995025271 ubox
70 79 0.003322547 ubox
70 85 0.999696060 ubox
70 86 0.005608586 ubox
71 84 0.999518934 ubox
71 85 0.003501438 ubox
72 83 0.999536675 ubox
73 82 0.999819411 ubox
74 81 0.999529937 ubox
75 79 0.011784326 ubox
75 80 0.998535335 ubox
76 80 0.004028582 ubox
85 95 0.003444188 ubox
86 95 0.014311088 ubox
86 98 0.004890850 ubox
91 95 0.071722896 ubox
91 98 0.145141762 ubox
91 101 0.047622563 ubox
91 104 0.015368922 ubox
91 107 0.003648705 ubox
1 95 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
