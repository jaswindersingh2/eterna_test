%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (291)
} def

/sequence { (\
GGAAAAAAGCACGAGUACGAAAGUACACUCAGCUGAAAGAUGCUACGGAGUCGCAGAGGAGAAGUGCACCUGGACUUCGGUUCGGGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.021415866 ubox
1 12 0.011183981 ubox
1 41 0.003736038 ubox
1 43 0.006660643 ubox
1 44 0.006608021 ubox
1 67 0.004040756 ubox
1 83 0.011331231 ubox
1 95 0.070091862 ubox
1 98 0.068727199 ubox
1 101 0.070259780 ubox
1 104 0.070629432 ubox
1 107 0.017842221 ubox
2 10 0.007483496 ubox
2 12 0.004117476 ubox
2 43 0.007008425 ubox
2 82 0.010963118 ubox
2 83 0.016459319 ubox
2 95 0.036043369 ubox
2 98 0.036125609 ubox
2 101 0.036911088 ubox
2 104 0.036802455 ubox
2 107 0.012015351 ubox
3 41 0.005181788 ubox
3 81 0.010100108 ubox
3 82 0.016253608 ubox
4 81 0.013965194 ubox
8 34 0.036377497 ubox
8 44 0.015097003 ubox
8 82 0.008957490 ubox
9 16 0.012935759 ubox
9 30 0.003347435 ubox
9 33 0.037540732 ubox
9 43 0.015668613 ubox
9 54 0.003403523 ubox
9 65 0.004703584 ubox
9 67 0.993306828 ubox
9 81 0.011064334 ubox
9 83 0.005035232 ubox
9 95 0.006038134 ubox
9 98 0.006934332 ubox
9 101 0.007156828 ubox
9 104 0.007348783 ubox
10 15 0.013242062 ubox
10 19 0.003554256 ubox
10 32 0.037501306 ubox
10 35 0.003250758 ubox
10 42 0.015667627 ubox
10 53 0.003396969 ubox
10 64 0.004961440 ubox
10 66 0.994350658 ubox
10 80 0.011314835 ubox
10 85 0.021329919 ubox
10 86 0.021294720 ubox
10 91 0.005611839 ubox
11 34 0.003244482 ubox
11 41 0.014567068 ubox
11 65 0.993614432 ubox
11 81 0.007379064 ubox
12 19 0.015118676 ubox
12 32 0.004971958 ubox
12 39 0.008345888 ubox
12 64 0.992123309 ubox
12 80 0.007895820 ubox
12 84 0.049881259 ubox
12 85 0.003652202 ubox
12 91 0.004249873 ubox
13 18 0.015489424 ubox
13 26 0.012729610 ubox
13 28 0.060542739 ubox
13 29 0.003917662 ubox
13 30 0.056665125 ubox
13 52 0.003473665 ubox
13 83 0.050197179 ubox
13 95 0.004967035 ubox
13 98 0.005647847 ubox
13 101 0.005840085 ubox
13 104 0.005945162 ubox
14 29 0.056073720 ubox
14 82 0.047771177 ubox
15 26 0.995770750 ubox
15 28 0.048641942 ubox
15 67 0.006031158 ubox
15 81 0.003936370 ubox
15 95 0.004807884 ubox
15 98 0.004811505 ubox
15 101 0.004892927 ubox
15 104 0.004874506 ubox
16 25 0.997380491 ubox
16 27 0.039540281 ubox
16 60 0.008380762 ubox
16 66 0.006033393 ubox
16 94 0.004628850 ubox
16 97 0.004633834 ubox
16 100 0.004712148 ubox
16 103 0.004693758 ubox
17 24 0.998256027 ubox
17 65 0.006030365 ubox
18 23 0.998052787 ubox
18 58 0.015199245 ubox
18 59 0.008206164 ubox
18 64 0.006028076 ubox
19 26 0.006225452 ubox
23 52 0.004540424 ubox
23 54 0.017071401 ubox
23 67 0.039358725 ubox
24 53 0.016792964 ubox
24 66 0.039384429 ubox
25 51 0.004550084 ubox
25 65 0.039371742 ubox
26 50 0.004602124 ubox
26 53 0.004655889 ubox
26 64 0.039244368 ubox
26 66 0.003550479 ubox
27 51 0.102280258 ubox
27 65 0.006149574 ubox
28 35 0.004215729 ubox
28 39 0.004085050 ubox
28 47 0.010833220 ubox
28 48 0.011512711 ubox
28 50 0.125200640 ubox
28 58 0.063618670 ubox
28 59 0.007830668 ubox
28 61 0.975791932 ubox
28 64 0.006329782 ubox
28 86 0.010034918 ubox
28 91 0.003501276 ubox
29 36 0.010437215 ubox
29 38 0.003965229 ubox
29 40 0.008104871 ubox
29 45 0.008079846 ubox
29 47 0.011071259 ubox
29 48 0.007618567 ubox
29 49 0.125416420 ubox
29 57 0.063839396 ubox
29 58 0.007117373 ubox
29 59 0.006495331 ubox
29 60 0.982919950 ubox
29 62 0.045921112 ubox
29 63 0.005209421 ubox
29 85 0.010090441 ubox
29 90 0.003391367 ubox
29 92 0.003240928 ubox
30 35 0.010974261 ubox
30 39 0.008636125 ubox
30 47 0.012192387 ubox
30 48 0.125059918 ubox
30 56 0.063375613 ubox
30 58 0.009140724 ubox
30 59 0.983654212 ubox
30 61 0.048379557 ubox
30 84 0.010094462 ubox
30 86 0.003204188 ubox
30 91 0.003402274 ubox
31 44 0.147081075 ubox
32 43 0.150723757 ubox
32 46 0.007181372 ubox
32 51 0.003185310 ubox
32 54 0.061065769 ubox
33 39 0.005217536 ubox
33 42 0.150751647 ubox
33 48 0.003795398 ubox
33 50 0.003665901 ubox
33 53 0.060812427 ubox
33 56 0.983307547 ubox
33 58 0.057381887 ubox
33 59 0.008954476 ubox
33 61 0.006157433 ubox
33 85 0.008958489 ubox
34 38 0.004900970 ubox
34 39 0.003814305 ubox
34 40 0.019729026 ubox
34 45 0.003933453 ubox
34 47 0.004225644 ubox
34 49 0.003731727 ubox
34 53 0.007437595 ubox
34 55 0.982932623 ubox
34 56 0.004437362 ubox
34 57 0.057110496 ubox
34 58 0.009029472 ubox
34 60 0.006133041 ubox
34 84 0.009037098 ubox
35 43 0.007597948 ubox
35 44 0.004053761 ubox
35 46 0.004258913 ubox
35 51 0.004439744 ubox
35 52 0.029799123 ubox
35 54 0.977226154 ubox
35 83 0.009427768 ubox
36 41 0.003647430 ubox
36 51 0.029072276 ubox
36 82 0.009311096 ubox
37 51 0.007530699 ubox
37 81 0.005935539 ubox
38 44 0.007980041 ubox
38 51 0.100913713 ubox
39 43 0.008146767 ubox
39 46 0.020840288 ubox
39 51 0.006053819 ubox
39 52 0.966723106 ubox
39 54 0.009230458 ubox
39 83 0.010148216 ubox
40 51 0.967828651 ubox
40 82 0.009928098 ubox
41 47 0.049918057 ubox
41 48 0.038512798 ubox
41 49 0.076972311 ubox
41 50 0.888912629 ubox
41 53 0.027990144 ubox
41 55 0.015328346 ubox
41 68 0.010987585 ubox
41 84 0.006293975 ubox
41 87 0.003183367 ubox
42 46 0.050012871 ubox
42 51 0.093132049 ubox
42 52 0.028352277 ubox
42 54 0.017730680 ubox
42 67 0.012630377 ubox
42 81 0.009268268 ubox
42 83 0.008698770 ubox
43 47 0.074067335 ubox
43 48 0.881509004 ubox
43 50 0.106112568 ubox
43 53 0.018161837 ubox
43 56 0.004098838 ubox
43 66 0.012408496 ubox
43 80 0.009817470 ubox
43 85 0.004037933 ubox
44 48 0.017708093 ubox
44 49 0.101892179 ubox
44 50 0.003885079 ubox
44 55 0.004246369 ubox
44 79 0.004553719 ubox
44 84 0.003535629 ubox
45 51 0.016438375 ubox
45 65 0.012370552 ubox
45 81 0.007526817 ubox
46 50 0.016772350 ubox
46 53 0.031656861 ubox
46 64 0.012617556 ubox
46 79 0.081777965 ubox
46 80 0.006130224 ubox
47 52 0.031568449 ubox
47 54 0.007999853 ubox
47 78 0.082999459 ubox
48 77 0.082974043 ubox
49 76 0.083048222 ubox
50 75 0.083097457 ubox
51 57 0.007216482 ubox
51 59 0.017317765 ubox
51 60 0.049408466 ubox
51 62 0.045174603 ubox
51 74 0.083086532 ubox
51 87 0.003778391 ubox
52 56 0.009760698 ubox
52 58 0.037846868 ubox
52 59 0.067891245 ubox
52 61 0.062934198 ubox
52 73 0.083008665 ubox
52 86 0.005049131 ubox
53 65 0.003272764 ubox
53 67 0.017971397 ubox
54 58 0.009708237 ubox
54 59 0.031314136 ubox
54 61 0.019444725 ubox
54 64 0.003317233 ubox
54 66 0.017991689 ubox
54 72 0.082793858 ubox
54 84 0.004813205 ubox
55 65 0.017580053 ubox
55 71 0.082769728 ubox
56 69 0.003468943 ubox
56 70 0.082572689 ubox
56 83 0.005622105 ubox
57 71 0.005125779 ubox
57 82 0.005609809 ubox
58 67 0.021300993 ubox
58 69 0.037767653 ubox
58 70 0.007241137 ubox
58 81 0.005133194 ubox
59 67 0.069310103 ubox
59 69 0.007656194 ubox
60 65 0.029587240 ubox
61 65 0.011399187 ubox
61 67 0.013827161 ubox
61 78 0.006900170 ubox
62 77 0.007033898 ubox
63 76 0.007154432 ubox
64 75 0.007175749 ubox
64 95 0.009111049 ubox
64 98 0.004272400 ubox
64 101 0.003586621 ubox
65 74 0.007156837 ubox
65 89 0.003848420 ubox
65 90 0.005791552 ubox
65 91 0.003265455 ubox
65 94 0.009007924 ubox
65 97 0.004103081 ubox
65 100 0.003464462 ubox
67 72 0.006754432 ubox
67 91 0.004921285 ubox
69 85 0.028589127 ubox
69 86 0.991479786 ubox
70 84 0.028254297 ubox
70 85 0.995995371 ubox
70 86 0.007995638 ubox
71 84 0.995295964 ubox
71 85 0.006685586 ubox
72 83 0.996255091 ubox
73 82 0.995660426 ubox
73 83 0.005690939 ubox
74 81 0.995982534 ubox
74 82 0.004715405 ubox
75 79 0.011990211 ubox
75 80 0.995149172 ubox
76 80 0.004066065 ubox
79 95 0.005981607 ubox
80 95 0.031598051 ubox
80 98 0.013485711 ubox
80 101 0.013673019 ubox
80 104 0.009840445 ubox
81 93 0.033059668 ubox
81 94 0.026100928 ubox
81 97 0.013265082 ubox
81 100 0.013602034 ubox
81 103 0.009785656 ubox
82 92 0.041511761 ubox
82 93 0.018904145 ubox
82 96 0.012084996 ubox
82 99 0.012735259 ubox
82 102 0.009162700 ubox
83 91 0.045572291 ubox
84 95 0.012370237 ubox
84 98 0.010047939 ubox
84 101 0.007547086 ubox
84 104 0.003483792 ubox
85 95 0.009797083 ubox
85 98 0.007452130 ubox
85 101 0.005420375 ubox
85 104 0.004273908 ubox
86 95 0.012832506 ubox
86 98 0.005116741 ubox
86 101 0.003481938 ubox
91 95 0.043002874 ubox
91 98 0.103651381 ubox
91 101 0.045458944 ubox
91 104 0.035173718 ubox
91 107 0.010406437 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
