%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (677)
} def

/sequence { (\
GGAAACAACAAGAAGGAAAAAAAAAACUUCAAGUAGGAAAAAAAAAACUACAAGUUGAAAAAAAAAAACUUGAACUUCGGUUUAAGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.273181032 ubox
1 9 0.196213181 ubox
1 27 0.004862248 ubox
1 30 0.013664007 ubox
1 51 0.005446713 ubox
1 78 0.007751487 ubox
1 95 0.033999244 ubox
1 98 0.034489724 ubox
1 101 0.047408097 ubox
1 104 0.122935116 ubox
1 107 0.031656521 ubox
2 6 0.035088908 ubox
2 9 0.084449420 ubox
2 29 0.013317901 ubox
2 30 0.016832051 ubox
2 56 0.003324659 ubox
2 77 0.007412548 ubox
2 78 0.013219006 ubox
2 95 0.017849703 ubox
2 98 0.017953503 ubox
2 101 0.024544119 ubox
2 104 0.062892134 ubox
2 107 0.020893289 ubox
3 28 0.012555421 ubox
3 29 0.016655891 ubox
3 56 0.004564719 ubox
3 76 0.006939049 ubox
3 77 0.013052312 ubox
3 83 0.012659976 ubox
4 28 0.014895255 ubox
4 55 0.003826266 ubox
4 56 0.042706633 ubox
4 76 0.011806860 ubox
4 82 0.013396630 ubox
5 34 0.008949480 ubox
5 55 0.045392559 ubox
5 81 0.013571998 ubox
6 12 0.011385513 ubox
6 15 0.018223654 ubox
6 16 0.005236812 ubox
6 33 0.009346499 ubox
6 36 0.071871210 ubox
6 37 0.027723315 ubox
6 54 0.045776489 ubox
6 57 0.350557948 ubox
6 80 0.013575250 ubox
6 86 0.003652834 ubox
6 91 0.014606510 ubox
7 34 0.006009483 ubox
7 56 0.352082567 ubox
7 82 0.012983251 ubox
8 34 0.111604264 ubox
8 55 0.352252548 ubox
8 81 0.014688406 ubox
9 15 0.016337154 ubox
9 16 0.012141700 ubox
9 33 0.115351714 ubox
9 36 0.004521062 ubox
9 54 0.351962201 ubox
9 57 0.027387214 ubox
9 72 0.012557658 ubox
9 79 0.003181315 ubox
9 80 0.014885276 ubox
9 86 0.003529014 ubox
9 91 0.013946816 ubox
10 29 0.011526906 ubox
10 34 0.003569066 ubox
10 56 0.026940961 ubox
10 71 0.012550800 ubox
11 28 0.013116247 ubox
11 55 0.023459588 ubox
11 70 0.012496409 ubox
12 27 0.013303912 ubox
12 29 0.004876525 ubox
12 30 0.987529001 ubox
12 51 0.008781799 ubox
12 69 0.012377857 ubox
12 78 0.019410154 ubox
12 95 0.003592899 ubox
12 98 0.004047565 ubox
12 101 0.004512466 ubox
12 104 0.007766868 ubox
13 28 0.004079308 ubox
13 29 0.988336524 ubox
13 77 0.019414241 ubox
14 28 0.988277601 ubox
14 29 0.018448404 ubox
14 49 0.010382706 ubox
14 76 0.019394970 ubox
15 27 0.988307847 ubox
15 28 0.023906767 ubox
15 30 0.027229128 ubox
15 48 0.010608025 ubox
15 75 0.019354301 ubox
15 95 0.005366506 ubox
15 98 0.005417997 ubox
15 101 0.005923822 ubox
15 104 0.008887229 ubox
16 27 0.028945130 ubox
16 29 0.026907014 ubox
16 30 0.043515930 ubox
16 95 0.003219155 ubox
16 98 0.003238858 ubox
16 101 0.003436020 ubox
16 104 0.004695217 ubox
17 28 0.025803859 ubox
17 29 0.043194299 ubox
18 28 0.039819932 ubox
18 29 0.006080850 ubox
19 28 0.007536830 ubox
19 29 0.003269476 ubox
20 28 0.003711899 ubox
20 29 0.005419017 ubox
21 28 0.005777036 ubox
21 29 0.004126086 ubox
22 28 0.004428168 ubox
22 29 0.004790673 ubox
23 28 0.004742814 ubox
24 56 0.003585280 ubox
24 83 0.004321224 ubox
25 56 0.055337950 ubox
25 82 0.004621778 ubox
26 34 0.005051839 ubox
26 55 0.058776945 ubox
26 81 0.004700497 ubox
27 33 0.005339314 ubox
27 36 0.011205152 ubox
27 37 0.003273445 ubox
27 54 0.059339294 ubox
27 57 0.007168679 ubox
27 80 0.004714911 ubox
27 91 0.004391509 ubox
28 32 0.004991129 ubox
28 35 0.011038767 ubox
28 36 0.003253455 ubox
28 38 0.005086898 ubox
28 39 0.008688084 ubox
28 53 0.059285811 ubox
28 59 0.058880539 ubox
28 60 0.003870701 ubox
28 74 0.015772577 ubox
28 79 0.004132686 ubox
28 90 0.004045949 ubox
28 93 0.006102189 ubox
29 37 0.005397720 ubox
29 38 0.009702459 ubox
29 52 0.057540819 ubox
29 53 0.004596319 ubox
29 58 0.065871788 ubox
29 73 0.016979583 ubox
29 92 0.006809154 ubox
30 36 0.005558029 ubox
30 37 0.009818411 ubox
30 54 0.007948552 ubox
30 57 0.066840669 ubox
30 72 0.017139042 ubox
30 91 0.006892579 ubox
31 55 0.005088168 ubox
31 56 0.066861977 ubox
31 71 0.017142196 ubox
32 49 0.030062516 ubox
32 55 0.064952860 ubox
32 70 0.017140260 ubox
33 48 0.031145341 ubox
33 51 0.986974402 ubox
33 69 0.017134908 ubox
33 95 0.003541870 ubox
33 98 0.003783630 ubox
33 101 0.003992336 ubox
33 104 0.005809767 ubox
34 47 0.030299944 ubox
34 50 0.988297323 ubox
34 53 0.009726906 ubox
34 68 0.016519525 ubox
34 94 0.003384313 ubox
34 97 0.003643334 ubox
34 100 0.003812726 ubox
34 103 0.005315867 ubox
35 49 0.988629095 ubox
36 48 0.988386005 ubox
36 49 0.017975087 ubox
36 51 0.013942150 ubox
37 48 0.024279506 ubox
37 51 0.005059931 ubox
40 49 0.003962773 ubox
42 49 0.004126625 ubox
43 49 0.003228074 ubox
44 49 0.003499270 ubox
45 83 0.012490780 ubox
46 56 0.028939427 ubox
46 82 0.013369075 ubox
47 55 0.030379598 ubox
47 81 0.013597909 ubox
48 54 0.030603746 ubox
48 57 0.003583821 ubox
48 80 0.013642839 ubox
49 53 0.027628809 ubox
49 73 0.004026305 ubox
49 74 0.004015293 ubox
49 79 0.013121139 ubox
49 105 0.003619882 ubox
49 106 0.003881557 ubox
51 57 0.003792753 ubox
51 72 0.025411790 ubox
52 56 0.003596415 ubox
52 71 0.032798649 ubox
52 77 0.019886265 ubox
53 70 0.036794226 ubox
53 76 0.022370731 ubox
54 69 0.038571528 ubox
54 75 0.022833237 ubox
54 95 0.025214655 ubox
54 98 0.237539701 ubox
54 101 0.860120346 ubox
54 104 0.187864446 ubox
54 107 0.027562433 ubox
55 61 0.004639720 ubox
55 62 0.016949867 ubox
55 63 0.015483961 ubox
55 64 0.019809805 ubox
55 65 0.012155778 ubox
55 66 0.018109822 ubox
55 67 0.009025811 ubox
55 68 0.039051683 ubox
55 74 0.022806007 ubox
55 94 0.025133618 ubox
55 97 0.237763436 ubox
55 100 0.860949271 ubox
55 103 0.187898649 ubox
55 106 0.027849948 ubox
56 60 0.004481972 ubox
56 61 0.019305536 ubox
56 62 0.017806161 ubox
56 63 0.022726920 ubox
56 64 0.013985552 ubox
56 65 0.021028578 ubox
56 66 0.010421667 ubox
56 67 0.038835757 ubox
56 68 0.003482984 ubox
56 73 0.022553466 ubox
56 93 0.024634957 ubox
56 96 0.237721481 ubox
56 97 0.003377965 ubox
56 99 0.860677876 ubox
56 100 0.005172783 ubox
56 102 0.187314369 ubox
56 105 0.027893947 ubox
57 95 0.236826804 ubox
57 98 0.857438454 ubox
57 101 0.186441973 ubox
57 104 0.027787873 ubox
58 71 0.021007847 ubox
59 70 0.019582337 ubox
66 83 0.019269761 ubox
67 82 0.020754531 ubox
68 81 0.021113839 ubox
69 80 0.021125687 ubox
69 86 0.992296078 ubox
69 91 0.008775208 ubox
70 79 0.017950630 ubox
70 85 0.996561786 ubox
70 86 0.004277868 ubox
70 90 0.008347821 ubox
70 97 0.003423577 ubox
71 79 0.011786527 ubox
71 84 0.997144108 ubox
71 85 0.003832994 ubox
71 89 0.006711733 ubox
71 96 0.003939296 ubox
72 77 0.003875875 ubox
72 78 0.016701852 ubox
72 83 0.997882688 ubox
72 95 0.004101213 ubox
72 104 0.003314450 ubox
73 77 0.014542296 ubox
73 82 0.997938923 ubox
74 81 0.997792191 ubox
75 79 0.012461009 ubox
75 80 0.997151938 ubox
75 86 0.006096680 ubox
75 91 0.003984621 ubox
76 80 0.004075081 ubox
76 85 0.006108345 ubox
76 88 0.012972101 ubox
76 90 0.003601865 ubox
76 93 0.010123381 ubox
77 84 0.005425537 ubox
77 87 0.014766957 ubox
77 92 0.011234399 ubox
78 86 0.015059535 ubox
78 91 0.011391810 ubox
79 95 0.003764249 ubox
79 98 0.003255619 ubox
80 95 0.026604121 ubox
80 98 0.003750574 ubox
80 101 0.003761382 ubox
81 88 0.006182471 ubox
81 94 0.026639297 ubox
81 97 0.003713021 ubox
81 100 0.003737122 ubox
82 87 0.005477946 ubox
82 88 0.003342398 ubox
82 92 0.003776278 ubox
82 93 0.026557607 ubox
82 96 0.003329563 ubox
82 99 0.003415350 ubox
83 91 0.003913819 ubox
83 92 0.026207702 ubox
86 95 0.009886978 ubox
86 98 0.003481118 ubox
91 95 0.029413689 ubox
91 98 0.059285474 ubox
91 101 0.019417764 ubox
91 104 0.014083347 ubox
91 107 0.004161445 ubox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
54 101 0.9500000 lbox
55 100 0.9500000 lbox
56 99 0.9500000 lbox
57 98 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
