%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (259)
} def

/sequence { (\
GGAAAAAACUACAACAACAAAAGUUGAGUCAAGAGAAACACACAAAAGAGUGACUCAAGACAAGUAGAUCAAUUGUUCGCAAUUGAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.059774724 ubox
1 10 0.073579102 ubox
1 12 0.051609944 ubox
1 15 0.026369733 ubox
1 18 0.021186478 ubox
1 30 0.005396123 ubox
1 61 0.005783965 ubox
1 70 0.004043990 ubox
1 78 0.006959946 ubox
1 80 0.005235291 ubox
1 95 0.075988276 ubox
1 98 0.077861861 ubox
1 101 0.078839643 ubox
1 104 0.078830741 ubox
1 107 0.019911791 ubox
2 9 0.079009612 ubox
2 10 0.008099324 ubox
2 12 0.017826812 ubox
2 15 0.007344089 ubox
2 18 0.005829148 ubox
2 29 0.003724049 ubox
2 30 0.010925509 ubox
2 69 0.003711169 ubox
2 70 0.009947718 ubox
2 77 0.006907643 ubox
2 78 0.008679074 ubox
2 95 0.039943073 ubox
2 98 0.041049434 ubox
2 101 0.041087193 ubox
2 104 0.040871885 ubox
2 107 0.013344811 ubox
3 10 0.017258269 ubox
3 29 0.010020851 ubox
3 69 0.010037706 ubox
3 76 0.006709192 ubox
3 77 0.008634133 ubox
4 10 0.012024081 ubox
4 69 0.004610752 ubox
4 76 0.008005474 ubox
5 10 0.010634340 ubox
5 69 0.013633132 ubox
5 74 0.003956093 ubox
6 10 0.005579334 ubox
6 69 0.013687116 ubox
6 73 0.004056321 ubox
6 74 0.003804155 ubox
7 25 0.036536883 ubox
7 65 0.005740966 ubox
7 69 0.058440712 ubox
7 73 0.003804846 ubox
8 24 0.039645918 ubox
8 29 0.067282291 ubox
8 65 0.108112267 ubox
8 69 0.042283236 ubox
9 23 0.040403177 ubox
9 26 0.005062817 ubox
9 28 0.073765115 ubox
9 64 0.112203959 ubox
9 67 0.895666643 ubox
9 91 0.063643226 ubox
10 14 0.003688345 ubox
10 16 0.004157924 ubox
10 17 0.004720376 ubox
10 19 0.004712785 ubox
10 22 0.039360430 ubox
10 27 0.082340204 ubox
10 62 0.005103376 ubox
10 63 0.108159041 ubox
10 66 0.901086501 ubox
10 67 0.004941039 ubox
10 68 0.004171301 ubox
10 87 0.006917595 ubox
10 88 0.006880958 ubox
10 89 0.007552432 ubox
10 90 0.061625169 ubox
10 91 0.006814140 ubox
10 92 0.008629376 ubox
10 93 0.008363370 ubox
10 94 0.005507933 ubox
10 96 0.005876111 ubox
10 97 0.005375954 ubox
10 99 0.005897257 ubox
10 100 0.005423519 ubox
10 102 0.005914133 ubox
10 103 0.005444421 ubox
10 105 0.005939098 ubox
10 106 0.005457321 ubox
11 24 0.007506194 ubox
11 29 0.006784215 ubox
11 65 0.901293651 ubox
12 23 0.008485665 ubox
12 26 0.221682973 ubox
12 28 0.007582521 ubox
12 64 0.899573031 ubox
12 67 0.013084328 ubox
12 91 0.021751016 ubox
13 25 0.231323919 ubox
14 24 0.233921494 ubox
14 25 0.003701546 ubox
14 29 0.003925585 ubox
14 65 0.014815533 ubox
15 23 0.234478769 ubox
15 26 0.930848142 ubox
15 28 0.003565046 ubox
15 59 0.010596669 ubox
15 64 0.015217126 ubox
15 67 0.039807499 ubox
15 91 0.004701464 ubox
16 24 0.003276148 ubox
16 25 0.934859659 ubox
16 65 0.005858540 ubox
17 24 0.935540153 ubox
17 25 0.003769057 ubox
17 65 0.072264884 ubox
17 76 0.003434869 ubox
18 23 0.934423549 ubox
18 26 0.048618300 ubox
18 59 0.020402142 ubox
18 64 0.074482771 ubox
18 67 0.004650955 ubox
18 75 0.003516105 ubox
19 24 0.003474884 ubox
19 25 0.047778027 ubox
19 65 0.004710572 ubox
19 74 0.003315660 ubox
20 24 0.036475225 ubox
20 25 0.004501779 ubox
20 65 0.003513779 ubox
22 65 0.008022406 ubox
22 74 0.004137590 ubox
23 61 0.032144674 ubox
23 73 0.005460205 ubox
23 95 0.015510308 ubox
23 98 0.113276605 ubox
23 101 0.112659462 ubox
23 104 0.115339833 ubox
23 107 0.040409390 ubox
24 58 0.130552180 ubox
24 59 0.006256944 ubox
24 60 0.029082828 ubox
24 63 0.011378546 ubox
24 64 0.005746950 ubox
24 67 0.005520499 ubox
24 68 0.003679749 ubox
24 72 0.005846895 ubox
24 94 0.015231255 ubox
24 97 0.113356656 ubox
24 100 0.112732029 ubox
24 103 0.115411594 ubox
24 106 0.040865350 ubox
25 57 0.142605158 ubox
25 58 0.005420936 ubox
25 59 0.017358612 ubox
25 62 0.011003291 ubox
25 63 0.010760770 ubox
25 64 0.009945273 ubox
25 66 0.006997334 ubox
25 67 0.003759710 ubox
25 71 0.005916480 ubox
25 93 0.014011150 ubox
25 96 0.113289356 ubox
25 99 0.112640013 ubox
25 102 0.115308830 ubox
25 105 0.041048921 ubox
26 56 0.149117506 ubox
26 61 0.008147753 ubox
26 65 0.007242790 ubox
26 70 0.005942205 ubox
26 95 0.112831349 ubox
26 98 0.112156073 ubox
26 101 0.114829224 ubox
26 104 0.040948357 ubox
27 55 0.149737065 ubox
27 65 0.009368426 ubox
27 69 0.005951802 ubox
28 39 0.004950156 ubox
28 54 0.149834254 ubox
28 61 0.981661857 ubox
28 95 0.004589665 ubox
28 98 0.004445776 ubox
29 36 0.008214325 ubox
29 38 0.004789689 ubox
29 53 0.149759983 ubox
29 58 0.003338862 ubox
29 60 0.983109918 ubox
29 92 0.020897109 ubox
29 94 0.004142887 ubox
29 97 0.004081270 ubox
30 35 0.009479555 ubox
30 52 0.148121422 ubox
30 59 0.982936929 ubox
30 91 0.021313207 ubox
31 51 0.132596317 ubox
32 51 0.012244134 ubox
32 55 0.006889290 ubox
33 39 0.007493022 ubox
33 41 0.005478746 ubox
33 43 0.004915653 ubox
33 54 0.006945137 ubox
33 56 0.986158088 ubox
34 55 0.986837305 ubox
35 39 0.005310730 ubox
35 41 0.009991450 ubox
35 43 0.013077338 ubox
35 54 0.985690706 ubox
35 56 0.048559010 ubox
36 51 0.004339912 ubox
36 55 0.048170726 ubox
37 51 0.009744056 ubox
38 51 0.287039612 ubox
39 48 0.021754064 ubox
39 50 0.287770593 ubox
39 52 0.928561386 ubox
40 51 0.929613768 ubox
41 48 0.217533159 ubox
41 50 0.929327727 ubox
41 52 0.169306820 ubox
42 51 0.171192271 ubox
43 48 0.383191311 ubox
43 50 0.172288252 ubox
43 52 0.005774679 ubox
44 51 0.005406089 ubox
48 56 0.006723168 ubox
49 55 0.006722996 ubox
50 54 0.006576859 ubox
50 61 0.003164679 ubox
51 60 0.003163402 ubox
53 65 0.008187898 ubox
54 64 0.008447685 ubox
55 63 0.008184620 ubox
56 67 0.003407126 ubox
58 65 0.005247323 ubox
59 77 0.005680104 ubox
59 95 0.007152348 ubox
59 98 0.003895588 ubox
60 76 0.006432790 ubox
61 67 0.010630610 ubox
61 75 0.006773647 ubox
61 85 0.003284758 ubox
61 91 0.003480228 ubox
62 69 0.003642501 ubox
62 74 0.006712970 ubox
62 84 0.003488358 ubox
63 69 0.006426771 ubox
63 73 0.006452483 ubox
63 83 0.003433460 ubox
64 70 0.004273050 ubox
64 80 0.006753627 ubox
64 95 0.035806047 ubox
64 98 0.022590792 ubox
64 101 0.018064011 ubox
64 104 0.016298867 ubox
64 107 0.005314617 ubox
65 79 0.006420791 ubox
65 87 0.012682020 ubox
65 88 0.018982952 ubox
65 89 0.015247106 ubox
65 90 0.024331516 ubox
65 91 0.013689459 ubox
65 92 0.013886719 ubox
65 93 0.004905753 ubox
65 94 0.034480356 ubox
65 97 0.021945645 ubox
65 100 0.017539487 ubox
65 103 0.015836388 ubox
65 106 0.005218571 ubox
67 77 0.003209198 ubox
67 78 0.008517262 ubox
67 95 0.016947023 ubox
67 98 0.012586604 ubox
67 101 0.011419573 ubox
67 104 0.005725632 ubox
68 76 0.003373482 ubox
68 77 0.008454503 ubox
69 86 0.929766131 ubox
69 87 0.042703107 ubox
69 88 0.009270879 ubox
69 89 0.006766519 ubox
69 90 0.006364974 ubox
69 92 0.009658871 ubox
69 93 0.003357037 ubox
69 99 0.003202751 ubox
70 75 0.004975632 ubox
70 85 0.997450798 ubox
70 91 0.009857705 ubox
71 84 0.997218645 ubox
72 83 0.996855740 ubox
73 82 0.996829640 ubox
73 89 0.004156894 ubox
73 90 0.009715005 ubox
73 97 0.033903046 ubox
73 100 0.021417944 ubox
73 103 0.014557948 ubox
73 106 0.016234944 ubox
74 81 0.996225984 ubox
74 82 0.004434994 ubox
74 88 0.004555202 ubox
74 89 0.010085677 ubox
74 96 0.040648952 ubox
74 99 0.025717239 ubox
74 102 0.017496880 ubox
74 105 0.019520092 ubox
75 80 0.990617185 ubox
75 95 0.041745440 ubox
75 98 0.026418760 ubox
75 101 0.017976106 ubox
75 104 0.020057233 ubox
76 87 0.019989056 ubox
76 93 0.023574746 ubox
76 94 0.035031564 ubox
76 97 0.026040791 ubox
76 100 0.017761553 ubox
76 103 0.019892569 ubox
77 86 0.023847630 ubox
77 92 0.033398683 ubox
77 93 0.025967263 ubox
77 96 0.023513022 ubox
77 99 0.016312236 ubox
77 102 0.018628233 ubox
78 85 0.024321698 ubox
78 91 0.040325549 ubox
79 84 0.016492614 ubox
79 95 0.011689587 ubox
79 98 0.010026995 ubox
79 101 0.012547641 ubox
80 85 0.003807528 ubox
80 91 0.006167360 ubox
83 90 0.021797458 ubox
83 91 0.006228409 ubox
83 92 0.008066433 ubox
83 93 0.007543575 ubox
83 94 0.009530951 ubox
83 97 0.016802413 ubox
83 100 0.005442555 ubox
84 89 0.021799760 ubox
84 90 0.007112349 ubox
84 91 0.008285746 ubox
84 92 0.008070479 ubox
84 93 0.010276194 ubox
84 96 0.018155684 ubox
84 99 0.006036518 ubox
85 95 0.018277885 ubox
85 98 0.006178215 ubox
91 95 0.044850386 ubox
91 98 0.105035714 ubox
91 101 0.044615288 ubox
91 104 0.034196238 ubox
91 107 0.010110575 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
