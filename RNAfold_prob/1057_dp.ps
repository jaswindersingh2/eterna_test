%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1057)
} def

/sequence { (\
GGAAAAUCGAACUGACCUGCGCCGCCCUGCGAGCGCCUAAGACGCGUCAAUGACCGUCGGGUCCGUUCAUGAUGUUUCGACAUCAUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.014691397 ubox
1 8 0.190618959 ubox
1 68 0.005106291 ubox
1 78 0.069753665 ubox
1 81 0.005039761 ubox
1 95 0.061737147 ubox
1 98 0.082308157 ubox
1 101 0.073445756 ubox
1 104 0.073158728 ubox
1 107 0.018460395 ubox
2 7 0.111985795 ubox
2 8 0.234255721 ubox
2 67 0.004443988 ubox
2 68 0.007335942 ubox
2 77 0.069887073 ubox
2 78 0.043026100 ubox
2 95 0.029882673 ubox
2 98 0.031926827 ubox
2 101 0.034268704 ubox
2 104 0.034070918 ubox
2 107 0.011112067 ubox
3 7 0.204255625 ubox
3 66 0.003641640 ubox
3 67 0.007044376 ubox
3 73 0.008319005 ubox
3 76 0.069666595 ubox
3 77 0.043017363 ubox
4 66 0.005327207 ubox
4 70 0.004513243 ubox
4 73 0.005595125 ubox
4 75 0.060521688 ubox
4 76 0.042198491 ubox
5 70 0.014582823 ubox
5 73 0.005463974 ubox
5 75 0.036352354 ubox
6 70 0.098480958 ubox
6 73 0.114708135 ubox
6 86 0.003455219 ubox
7 69 0.108439537 ubox
7 71 0.005102546 ubox
7 72 0.128314749 ubox
7 87 0.004708096 ubox
7 88 0.005705816 ubox
7 89 0.006202865 ubox
7 90 0.007703640 ubox
7 91 0.004255586 ubox
7 92 0.116211535 ubox
7 93 0.007795651 ubox
7 94 0.005249804 ubox
7 96 0.005570031 ubox
7 97 0.005398085 ubox
7 99 0.005937683 ubox
7 100 0.005986763 ubox
7 102 0.006169188 ubox
7 103 0.005718704 ubox
7 105 0.006128370 ubox
7 106 0.005656929 ubox
8 65 0.006596375 ubox
8 71 0.129622385 ubox
8 91 0.122816836 ubox
9 64 0.006881361 ubox
9 67 0.004488729 ubox
9 68 0.997593906 ubox
9 70 0.028107603 ubox
10 66 0.003690146 ubox
10 67 0.998881519 ubox
11 66 0.999083695 ubox
12 65 0.997903175 ubox
13 65 0.007566986 ubox
14 63 0.997995991 ubox
14 64 0.022815557 ubox
15 62 0.999819322 ubox
16 60 0.020264696 ubox
16 61 0.999767962 ubox
17 59 0.028041635 ubox
17 60 0.999303903 ubox
17 61 0.003242322 ubox
18 35 0.003349300 ubox
18 39 0.016942240 ubox
18 40 0.012004928 ubox
18 59 0.950898055 ubox
18 60 0.004287236 ubox
19 34 0.010498321 ubox
19 36 0.994400620 ubox
19 37 0.063133095 ubox
19 38 0.003859526 ubox
19 58 0.017446102 ubox
20 33 0.010501217 ubox
20 35 0.999766024 ubox
20 56 0.004106776 ubox
21 34 0.999898846 ubox
21 36 0.003461646 ubox
21 55 0.003844396 ubox
22 33 0.999804358 ubox
23 29 0.003446237 ubox
23 31 0.999326897 ubox
23 35 0.003403716 ubox
24 30 0.999686997 ubox
24 34 0.004051026 ubox
25 29 0.992429178 ubox
25 31 0.004201572 ubox
25 33 0.004045448 ubox
26 31 0.005104544 ubox
33 45 0.003500072 ubox
34 44 0.003509931 ubox
35 43 0.003494772 ubox
36 41 0.003336316 ubox
37 41 0.005407283 ubox
37 59 0.024774513 ubox
37 60 0.009480722 ubox
38 59 0.013442743 ubox
38 60 0.003217869 ubox
41 57 0.003286961 ubox
41 58 0.998130989 ubox
42 57 0.999584738 ubox
43 56 0.999864152 ubox
43 59 0.005861411 ubox
44 54 0.005592022 ubox
44 55 0.999321588 ubox
44 57 0.008312317 ubox
44 58 0.006246715 ubox
45 52 0.017435521 ubox
45 56 0.010550561 ubox
46 51 0.011656523 ubox
46 54 0.999177952 ubox
46 55 0.008845564 ubox
47 52 0.008294306 ubox
47 53 0.998659815 ubox
48 52 0.990261672 ubox
64 91 0.006167452 ubox
65 95 0.005356266 ubox
65 104 0.015957820 ubox
66 88 0.003256496 ubox
66 89 0.006413820 ubox
66 93 0.006217439 ubox
66 94 0.004456495 ubox
66 103 0.015953365 ubox
67 87 0.004649571 ubox
67 88 0.008614621 ubox
67 92 0.009357224 ubox
67 93 0.003255004 ubox
67 102 0.015335081 ubox
68 91 0.010671230 ubox
69 86 0.768702181 ubox
70 79 0.003493892 ubox
70 85 0.814017236 ubox
70 87 0.004102779 ubox
70 97 0.008575173 ubox
70 99 0.432900829 ubox
70 100 0.024282696 ubox
70 102 0.033953480 ubox
70 103 0.004064734 ubox
70 105 0.016642585 ubox
71 78 0.005892964 ubox
71 84 0.829553057 ubox
71 98 0.483905565 ubox
71 101 0.037604684 ubox
71 104 0.018509571 ubox
72 77 0.005768732 ubox
72 83 0.829397915 ubox
73 82 0.829264810 ubox
73 96 0.530731088 ubox
73 97 0.019042555 ubox
73 99 0.015734313 ubox
73 102 0.016887478 ubox
74 81 0.829128090 ubox
74 84 0.003190556 ubox
74 95 0.551493516 ubox
74 98 0.015573919 ubox
74 101 0.017445940 ubox
74 104 0.003171392 ubox
75 79 0.029876639 ubox
75 80 0.766453781 ubox
75 94 0.551313130 ubox
75 97 0.014773766 ubox
75 100 0.017249255 ubox
76 80 0.023428195 ubox
76 93 0.550960485 ubox
76 96 0.011248666 ubox
76 99 0.015657564 ubox
77 92 0.551521237 ubox
78 91 0.551594722 ubox
79 84 0.021826480 ubox
79 86 0.007541298 ubox
79 95 0.006965566 ubox
79 98 0.003624355 ubox
80 86 0.005629058 ubox
81 91 0.005342640 ubox
82 86 0.023249539 ubox
83 87 0.023250317 ubox
83 88 0.023272020 ubox
83 89 0.006121680 ubox
83 90 0.010578402 ubox
83 92 0.033986237 ubox
84 91 0.035960066 ubox
86 90 0.004893510 ubox
86 91 0.004496832 ubox
86 92 0.006170085 ubox
86 93 0.007861922 ubox
86 94 0.004113857 ubox
91 95 0.035544484 ubox
91 98 0.085615408 ubox
91 101 0.037521935 ubox
91 104 0.029005033 ubox
91 107 0.008579709 ubox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
18 59 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
