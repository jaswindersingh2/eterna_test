%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (43)
} def

/sequence { (\
GGAAAAAGGACCAGGGCGAAAGCCCUGCAAGGGCUCGAAAGAGCACCACGAAAGUGGCCGGGCGGUCCUUGCGUUUUCGAACGCAAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.004286015 ubox
1 68 0.010289688 ubox
1 70 0.004237547 ubox
1 72 0.004958721 ubox
1 78 0.036291741 ubox
1 95 0.067303265 ubox
1 98 0.067735564 ubox
1 101 0.069283963 ubox
1 104 0.069595409 ubox
1 107 0.017570915 ubox
2 11 0.004320680 ubox
2 67 0.010266666 ubox
2 69 0.003249094 ubox
2 70 0.007547446 ubox
2 72 0.006524826 ubox
2 74 0.003821415 ubox
2 75 0.003384197 ubox
2 76 0.003905507 ubox
2 77 0.036340651 ubox
2 78 0.023694724 ubox
2 95 0.035527625 ubox
2 98 0.035658951 ubox
2 101 0.036423254 ubox
2 104 0.036284467 ubox
2 107 0.011839739 ubox
3 66 0.009843757 ubox
3 69 0.006071571 ubox
3 70 0.013772337 ubox
3 74 0.003482560 ubox
3 75 0.004261616 ubox
3 76 0.036287900 ubox
3 77 0.023702182 ubox
4 69 0.008659046 ubox
4 70 0.017423720 ubox
4 74 0.004104871 ubox
4 75 0.035524645 ubox
4 76 0.023526643 ubox
5 69 0.011167824 ubox
5 70 0.042689554 ubox
5 74 0.034672514 ubox
5 75 0.023307597 ubox
6 69 0.040725924 ubox
6 70 0.655200255 ubox
6 74 0.016447820 ubox
7 69 0.889128783 ubox
7 70 0.014721385 ubox
8 59 0.007563467 ubox
8 68 0.999369542 ubox
8 69 0.003564366 ubox
9 58 0.007541761 ubox
9 67 0.999882900 ubox
10 66 0.999760152 ubox
11 65 0.999825373 ubox
12 27 0.045105357 ubox
12 64 0.997703777 ubox
13 26 0.951772293 ubox
14 25 0.999737258 ubox
14 26 0.004229410 ubox
15 24 0.999970287 ubox
15 25 0.003807745 ubox
16 23 0.999973297 ubox
17 22 0.999584797 ubox
22 63 0.003760659 ubox
23 62 0.003764743 ubox
24 61 0.003765770 ubox
25 60 0.003762574 ubox
26 64 0.019461032 ubox
27 58 0.004629528 ubox
27 63 0.991242657 ubox
27 72 0.004009948 ubox
28 32 0.009040174 ubox
28 33 0.003218528 ubox
28 50 0.004253034 ubox
28 57 0.004408267 ubox
28 60 0.004720436 ubox
28 61 0.018100208 ubox
28 62 0.992211079 ubox
28 71 0.004185780 ubox
29 70 0.004442758 ubox
30 69 0.004774413 ubox
31 46 0.009473728 ubox
31 47 0.029313474 ubox
31 58 0.007677467 ubox
31 59 0.992085549 ubox
31 68 0.004956496 ubox
32 44 0.006367495 ubox
32 46 0.030923397 ubox
32 58 0.989434515 ubox
32 59 0.015681331 ubox
32 67 0.004951021 ubox
33 44 0.998508086 ubox
33 58 0.007709583 ubox
33 63 0.018072682 ubox
33 66 0.003501826 ubox
34 43 0.999783612 ubox
34 62 0.018107889 ubox
34 65 0.003497217 ubox
35 42 0.999614790 ubox
35 61 0.018096050 ubox
36 41 0.999301040 ubox
36 60 0.018104018 ubox
36 64 0.003349970 ubox
37 59 0.017885652 ubox
37 63 0.003396286 ubox
41 58 0.005005944 ubox
43 58 0.008121948 ubox
44 57 0.006139043 ubox
46 56 0.005297298 ubox
46 57 0.994736109 ubox
46 62 0.008818300 ubox
47 56 0.999449519 ubox
47 61 0.008871219 ubox
48 55 0.999249475 ubox
49 54 0.998922751 ubox
49 56 0.006530793 ubox
49 60 0.017465312 ubox
50 55 0.004666771 ubox
50 59 0.017572592 ubox
53 69 0.004247743 ubox
54 63 0.010723964 ubox
54 68 0.004695886 ubox
55 62 0.010652283 ubox
56 63 0.005735131 ubox
56 67 0.005867221 ubox
57 63 0.025027098 ubox
57 66 0.006404522 ubox
58 62 0.025794071 ubox
58 64 0.005367726 ubox
58 65 0.012440085 ubox
59 64 0.015186313 ubox
60 68 0.003514628 ubox
61 67 0.003515778 ubox
68 91 0.005221563 ubox
69 85 0.008878744 ubox
69 86 0.402189151 ubox
69 87 0.026256222 ubox
69 88 0.010704494 ubox
69 89 0.007456738 ubox
69 90 0.007110317 ubox
69 91 0.003663399 ubox
70 85 0.712636699 ubox
70 86 0.032709173 ubox
70 87 0.008952039 ubox
70 88 0.006456016 ubox
70 89 0.005190520 ubox
70 99 0.004802798 ubox
71 84 0.997886242 ubox
71 98 0.006733420 ubox
71 101 0.003223033 ubox
72 79 0.008620036 ubox
72 83 0.998398661 ubox
73 78 0.008805955 ubox
73 82 0.998299375 ubox
73 84 0.003616234 ubox
73 95 0.022221494 ubox
73 98 0.014181713 ubox
73 101 0.005416996 ubox
74 79 0.004462822 ubox
74 80 0.040175983 ubox
74 81 0.984414842 ubox
74 83 0.003584378 ubox
74 94 0.020476739 ubox
74 97 0.013886289 ubox
74 100 0.005396417 ubox
75 79 0.051320214 ubox
75 80 0.855963159 ubox
75 81 0.031446101 ubox
75 88 0.003522536 ubox
75 93 0.018449647 ubox
75 94 0.017751964 ubox
75 96 0.009913184 ubox
75 99 0.004159007 ubox
76 80 0.037206979 ubox
76 81 0.004897103 ubox
76 87 0.003607808 ubox
76 92 0.016213577 ubox
76 93 0.023419230 ubox
77 86 0.003534297 ubox
77 91 0.012973856 ubox
77 92 0.025734302 ubox
78 91 0.027200661 ubox
79 84 0.005444105 ubox
82 91 0.008671096 ubox
84 91 0.007226923 ubox
91 95 0.043010605 ubox
91 98 0.103713122 ubox
91 101 0.045506511 ubox
91 104 0.035222827 ubox
91 107 0.010421260 ubox
6 70 0.9500000 lbox
7 69 0.9500000 lbox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
