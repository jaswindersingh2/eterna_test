%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (941)
} def

/sequence { (\
GGAAAUUAACAGUCGAAAACGACACUUGCAUUCAAAAAAAGAAUGCAAGACUUCAAAAGAAGAGUUAAUACAGACUUCGGUCUGUAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.007970092 ubox
1 7 0.006176270 ubox
1 10 0.083704273 ubox
1 54 0.009860344 ubox
1 66 0.006088701 ubox
1 69 0.005815327 ubox
1 71 0.005873504 ubox
1 95 0.097966084 ubox
1 98 0.097579912 ubox
1 101 0.098568811 ubox
1 104 0.098927727 ubox
1 107 0.025012018 ubox
2 6 0.006784750 ubox
2 7 0.010463611 ubox
2 10 0.022135779 ubox
2 53 0.009632434 ubox
2 54 0.012241454 ubox
2 65 0.005650176 ubox
2 66 0.013770348 ubox
2 69 0.009924719 ubox
2 71 0.004509252 ubox
2 95 0.050179165 ubox
2 98 0.050622451 ubox
2 101 0.051493704 ubox
2 104 0.051377637 ubox
2 107 0.016790038 ubox
3 7 0.006123082 ubox
3 52 0.009102458 ubox
3 53 0.012150068 ubox
3 65 0.013014962 ubox
3 66 0.011570408 ubox
3 69 0.015132636 ubox
4 52 0.010973397 ubox
4 65 0.010304380 ubox
4 66 0.058972014 ubox
4 69 0.030629073 ubox
5 65 0.062949849 ubox
5 66 0.005130048 ubox
5 69 0.651112062 ubox
6 11 0.006087112 ubox
6 63 0.005133159 ubox
6 64 0.062928941 ubox
6 67 0.015668334 ubox
6 68 0.859751809 ubox
6 87 0.010186925 ubox
6 88 0.019628185 ubox
6 89 0.020421650 ubox
6 90 0.033944155 ubox
6 91 0.013879231 ubox
6 92 0.029547302 ubox
6 93 0.026119528 ubox
6 94 0.020908158 ubox
6 96 0.008794578 ubox
6 97 0.018606943 ubox
6 99 0.008838593 ubox
6 100 0.018649282 ubox
6 102 0.007663092 ubox
6 103 0.016292940 ubox
6 105 0.007434327 ubox
6 106 0.015889595 ubox
7 11 0.005348430 ubox
7 24 0.003655668 ubox
7 63 0.057827030 ubox
7 64 0.004338283 ubox
7 67 0.937375696 ubox
7 68 0.015425917 ubox
7 86 0.008240684 ubox
7 87 0.020883302 ubox
7 88 0.021620746 ubox
7 89 0.033314153 ubox
7 90 0.016483345 ubox
7 91 0.030424694 ubox
7 92 0.027516268 ubox
7 93 0.022476312 ubox
7 94 0.009840838 ubox
7 96 0.019521127 ubox
7 97 0.009433948 ubox
7 99 0.019611524 ubox
7 100 0.009247091 ubox
7 102 0.017569365 ubox
7 103 0.008924893 ubox
7 105 0.017253055 ubox
7 106 0.008820443 ubox
8 65 0.003902302 ubox
8 66 0.944011802 ubox
8 85 0.005532858 ubox
9 65 0.944979018 ubox
9 66 0.005116815 ubox
9 85 0.005855492 ubox
10 62 0.003723980 ubox
10 64 0.944231755 ubox
10 84 0.006118494 ubox
10 91 0.039691425 ubox
11 65 0.003524693 ubox
11 66 0.004404811 ubox
11 83 0.005649098 ubox
12 20 0.008502706 ubox
12 23 0.997899502 ubox
12 82 0.005325494 ubox
12 95 0.004423877 ubox
12 98 0.004839323 ubox
12 101 0.004961035 ubox
12 104 0.005006616 ubox
13 19 0.008207106 ubox
13 22 0.999232534 ubox
13 60 0.004198794 ubox
13 61 0.003393158 ubox
13 63 0.003276311 ubox
13 80 0.005137349 ubox
13 94 0.003604090 ubox
13 97 0.004078475 ubox
13 100 0.004182741 ubox
13 103 0.004226781 ubox
14 21 0.999585513 ubox
14 59 0.004885906 ubox
14 62 0.003345854 ubox
14 79 0.005299088 ubox
14 91 0.003177472 ubox
15 20 0.973723045 ubox
15 78 0.005306728 ubox
16 77 0.005137442 ubox
17 76 0.003500294 ubox
21 54 0.003751416 ubox
21 66 0.003353820 ubox
22 53 0.003630407 ubox
22 65 0.003597513 ubox
23 64 0.003663928 ubox
24 65 0.003693578 ubox
25 49 0.991586518 ubox
25 64 0.003705568 ubox
25 91 0.005032553 ubox
26 48 0.997599552 ubox
26 49 0.005700430 ubox
26 90 0.004583042 ubox
27 47 0.999144248 ubox
27 48 0.004834836 ubox
27 89 0.003534046 ubox
28 46 0.999988168 ubox
29 45 0.999989599 ubox
30 44 0.999581369 ubox
31 42 0.004929362 ubox
31 43 0.999032655 ubox
32 41 0.006746625 ubox
32 42 0.999483959 ubox
33 41 0.999206735 ubox
47 66 0.005200152 ubox
48 65 0.007768719 ubox
49 66 0.031035971 ubox
50 65 0.075176159 ubox
50 66 0.010953330 ubox
51 59 0.039614404 ubox
51 62 0.984353383 ubox
51 64 0.078624245 ubox
52 58 0.039370470 ubox
52 59 0.005328490 ubox
52 60 0.008259331 ubox
52 61 0.990002998 ubox
52 62 0.007041543 ubox
52 63 0.076370119 ubox
52 64 0.016580227 ubox
52 93 0.003301516 ubox
53 57 0.032830516 ubox
53 58 0.005334209 ubox
53 59 0.008469051 ubox
53 60 0.991542967 ubox
53 61 0.006814574 ubox
53 62 0.070973350 ubox
53 63 0.044263385 ubox
53 92 0.003662664 ubox
54 59 0.990463441 ubox
54 62 0.048301060 ubox
54 91 0.003694408 ubox
57 66 0.004355377 ubox
58 65 0.004505081 ubox
59 95 0.003879174 ubox
62 95 0.004774701 ubox
63 69 0.006033408 ubox
63 76 0.004412430 ubox
64 71 0.003747643 ubox
64 75 0.005330001 ubox
64 95 0.070095622 ubox
64 98 0.030703653 ubox
64 101 0.024262453 ubox
64 104 0.020101961 ubox
64 107 0.006119064 ubox
65 70 0.003813781 ubox
65 74 0.005330140 ubox
65 87 0.011821770 ubox
65 88 0.029889551 ubox
65 89 0.030092608 ubox
65 90 0.059953365 ubox
65 91 0.019837126 ubox
65 92 0.019439751 ubox
65 93 0.017795128 ubox
65 94 0.068766824 ubox
65 97 0.030382944 ubox
65 100 0.024021180 ubox
65 103 0.019911373 ubox
65 106 0.006124504 ubox
66 73 0.005170247 ubox
66 86 0.009171423 ubox
66 87 0.031342138 ubox
66 88 0.032982770 ubox
66 89 0.067651245 ubox
66 90 0.022519937 ubox
66 91 0.020882489 ubox
66 92 0.021926699 ubox
66 93 0.062294675 ubox
66 96 0.027576159 ubox
66 99 0.021664286 ubox
66 102 0.018000715 ubox
66 105 0.005568980 ubox
67 85 0.005441303 ubox
69 86 0.711045812 ubox
69 87 0.033085610 ubox
69 88 0.012471017 ubox
69 89 0.009363866 ubox
69 90 0.021175241 ubox
69 91 0.003982582 ubox
69 92 0.003812003 ubox
69 93 0.004042095 ubox
70 85 0.976147922 ubox
71 84 0.999614910 ubox
72 83 0.999664101 ubox
73 82 0.999947248 ubox
74 81 0.999657662 ubox
75 79 0.011787680 ubox
75 80 0.998663038 ubox
76 80 0.004029354 ubox
81 92 0.004637600 ubox
82 91 0.004963896 ubox
83 90 0.004953743 ubox
83 96 0.006625371 ubox
84 95 0.010489022 ubox
84 98 0.004310929 ubox
84 101 0.003352645 ubox
85 90 0.004628259 ubox
85 91 0.004210892 ubox
85 92 0.005370132 ubox
85 93 0.003312101 ubox
85 94 0.011224070 ubox
85 97 0.004524826 ubox
85 100 0.003507136 ubox
91 95 0.044139622 ubox
91 98 0.105012623 ubox
91 101 0.045422037 ubox
91 104 0.034635598 ubox
91 107 0.010225847 ubox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
