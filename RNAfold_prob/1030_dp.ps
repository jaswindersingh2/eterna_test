%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1030)
} def

/sequence { (\
GGAAAAGGCAAAGCCAACCUCAAAGAGGAAUCGAGAAACUCGAAACGUGAAACACGAACGCAAAGCGAGCGCGACUUCGGUCGCGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.008754510 ubox
1 15 0.026941502 ubox
1 19 0.025532773 ubox
1 20 0.003290089 ubox
1 21 0.009515288 ubox
1 46 0.011785798 ubox
1 53 0.006661947 ubox
1 55 0.007659800 ubox
1 59 0.032842742 ubox
1 61 0.026815710 ubox
1 66 0.025515609 ubox
1 86 0.016237846 ubox
1 95 0.403529909 ubox
1 98 0.406111217 ubox
1 101 0.415433449 ubox
1 104 0.417320997 ubox
1 107 0.105363360 ubox
2 9 0.010914063 ubox
2 14 0.027012348 ubox
2 15 0.004862904 ubox
2 18 0.025965917 ubox
2 19 0.005149271 ubox
2 20 0.008517137 ubox
2 21 0.014143475 ubox
2 32 0.004959451 ubox
2 46 0.008058401 ubox
2 53 0.004583730 ubox
2 55 0.004501518 ubox
2 59 0.023859184 ubox
2 61 0.017514532 ubox
2 66 0.022341053 ubox
2 86 0.011745599 ubox
2 95 0.212984484 ubox
2 98 0.213773385 ubox
2 101 0.218336191 ubox
2 104 0.217510869 ubox
2 107 0.070975863 ubox
3 20 0.013894656 ubox
3 31 0.004849642 ubox
6 20 0.005014286 ubox
7 14 0.017469988 ubox
7 15 0.993145938 ubox
7 19 0.005519703 ubox
7 66 0.003237501 ubox
7 95 0.025296851 ubox
7 98 0.025888738 ubox
7 101 0.024693716 ubox
7 104 0.024458495 ubox
7 107 0.008539413 ubox
8 14 0.994741951 ubox
8 15 0.009399943 ubox
8 18 0.005509536 ubox
8 61 0.017206517 ubox
8 66 0.045339992 ubox
8 95 0.012080298 ubox
8 98 0.012076339 ubox
8 101 0.011058631 ubox
8 104 0.010841288 ubox
8 107 0.003534060 ubox
9 13 0.987522663 ubox
9 60 0.017226089 ubox
9 65 0.045360043 ubox
9 91 0.015172809 ubox
13 61 0.043049881 ubox
13 66 0.011170028 ubox
13 95 0.012479868 ubox
13 98 0.012168946 ubox
13 101 0.011974618 ubox
13 104 0.011888001 ubox
13 107 0.004148229 ubox
14 28 0.003695048 ubox
14 60 0.042924073 ubox
14 65 0.011129372 ubox
14 91 0.011392678 ubox
15 27 0.003696554 ubox
15 60 0.003331246 ubox
15 91 0.018258350 ubox
16 31 0.013836655 ubox
17 31 0.011792103 ubox
18 25 0.004203226 ubox
18 27 0.010318128 ubox
18 28 0.993354472 ubox
18 91 0.007904153 ubox
19 25 0.012646989 ubox
19 27 0.997960664 ubox
19 28 0.017792363 ubox
19 35 0.003256376 ubox
19 91 0.009932780 ubox
20 24 0.011488870 ubox
20 25 0.006654017 ubox
20 26 0.997226744 ubox
20 27 0.015981447 ubox
20 28 0.010195639 ubox
20 29 0.024848578 ubox
20 34 0.003271993 ubox
20 90 0.009049795 ubox
20 92 0.017973806 ubox
21 25 0.988859799 ubox
21 27 0.013245019 ubox
21 28 0.026201555 ubox
21 33 0.003270503 ubox
21 91 0.018888968 ubox
25 32 0.003553448 ubox
25 41 0.006093860 ubox
25 95 0.004528194 ubox
25 98 0.006448051 ubox
25 101 0.006518901 ubox
25 104 0.006590891 ubox
26 31 0.003613233 ubox
26 40 0.006102314 ubox
26 48 0.003749598 ubox
27 39 0.006100928 ubox
27 46 0.004754314 ubox
27 95 0.006947389 ubox
27 98 0.006962189 ubox
27 101 0.007099240 ubox
27 104 0.007065377 ubox
28 46 0.012098070 ubox
28 95 0.007916261 ubox
28 98 0.007866180 ubox
28 101 0.007982441 ubox
28 104 0.006696897 ubox
31 43 0.932829444 ubox
31 44 0.042783296 ubox
31 45 0.007929886 ubox
31 57 0.004764544 ubox
31 68 0.007258460 ubox
31 87 0.003401350 ubox
31 88 0.003689045 ubox
31 89 0.003689831 ubox
31 90 0.003701387 ubox
31 92 0.010789040 ubox
31 93 0.003692335 ubox
31 96 0.003353063 ubox
31 99 0.003388081 ubox
31 102 0.003358466 ubox
31 105 0.003323032 ubox
32 42 0.998333824 ubox
32 56 0.004865709 ubox
32 67 0.007447635 ubox
32 91 0.010854166 ubox
33 41 0.999665413 ubox
33 55 0.004759065 ubox
33 66 0.007260252 ubox
34 40 0.998156965 ubox
35 39 0.976188680 ubox
35 40 0.005056308 ubox
35 41 0.006942116 ubox
36 40 0.006162364 ubox
40 68 0.005615782 ubox
40 92 0.003452172 ubox
41 47 0.003860401 ubox
41 60 0.006861701 ubox
41 67 0.005859038 ubox
41 91 0.003623530 ubox
42 46 0.003753049 ubox
42 59 0.007271162 ubox
42 66 0.005858565 ubox
46 56 0.975062233 ubox
46 60 0.045199096 ubox
46 67 0.031990079 ubox
46 91 0.005997076 ubox
47 53 0.025960658 ubox
47 55 0.994004006 ubox
47 59 0.047197302 ubox
47 61 0.025170492 ubox
47 66 0.032586867 ubox
47 95 0.008516378 ubox
47 98 0.009358685 ubox
47 101 0.008824714 ubox
47 104 0.008529615 ubox
47 107 0.003225901 ubox
48 52 0.023463056 ubox
48 54 0.992891197 ubox
48 56 0.013374891 ubox
48 57 0.008241824 ubox
48 58 0.046739758 ubox
48 60 0.025175029 ubox
48 65 0.032303943 ubox
48 94 0.008253848 ubox
48 96 0.005273249 ubox
48 97 0.008636054 ubox
48 99 0.004905497 ubox
48 100 0.008136156 ubox
48 102 0.004761009 ubox
48 103 0.007864324 ubox
48 105 0.003884892 ubox
49 53 0.977063989 ubox
49 55 0.018152482 ubox
49 59 0.025004581 ubox
49 61 0.003653335 ubox
49 95 0.006410222 ubox
49 98 0.005957568 ubox
49 101 0.005774195 ubox
49 104 0.004390022 ubox
53 60 0.024226120 ubox
53 91 0.003604615 ubox
55 60 0.007040938 ubox
55 65 0.003525242 ubox
55 67 0.007231042 ubox
56 61 0.006813664 ubox
56 66 0.007930986 ubox
56 95 0.004557489 ubox
56 98 0.004199338 ubox
56 101 0.003741149 ubox
56 104 0.003164802 ubox
59 65 0.045356529 ubox
59 67 0.961793038 ubox
59 91 0.004508509 ubox
60 66 0.980472458 ubox
60 70 0.004310789 ubox
60 95 0.013201849 ubox
60 98 0.003970225 ubox
61 65 0.973396785 ubox
61 67 0.028088960 ubox
61 69 0.004415626 ubox
61 91 0.003989602 ubox
65 84 0.003498533 ubox
66 83 0.003502698 ubox
66 91 0.025668626 ubox
67 82 0.003503639 ubox
68 81 0.003487025 ubox
69 86 0.998630629 ubox
70 79 0.003466672 ubox
70 85 0.999902810 ubox
71 78 0.003324331 ubox
71 84 0.999973535 ubox
72 83 0.999974489 ubox
73 82 0.999961942 ubox
74 81 0.999685655 ubox
75 79 0.011787548 ubox
75 80 0.998690791 ubox
76 80 0.004029287 ubox
86 91 0.009434499 ubox
91 95 0.071736749 ubox
91 98 0.145164295 ubox
91 101 0.047631737 ubox
91 104 0.015384365 ubox
91 107 0.003655395 ubox
1 95 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
