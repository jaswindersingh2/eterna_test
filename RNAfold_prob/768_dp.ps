%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (768)
} def

/sequence { (\
GGAAACCUAACCCGGGAUUUCCGUUUAUAGUUCAAUCUCACGAUCGAACUCGGCCCGCGUUAGCCAAGAAAUGGGUUCGCCCAUUUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.077575765 ubox
1 7 0.039764145 ubox
1 8 0.006177006 ubox
1 12 0.005961860 ubox
1 13 0.003988401 ubox
1 21 0.007312678 ubox
1 22 0.226978881 ubox
1 64 0.020239625 ubox
1 65 0.822980194 ubox
1 82 0.004349118 ubox
1 95 0.035080203 ubox
1 98 0.035021796 ubox
1 101 0.035653056 ubox
1 104 0.035799896 ubox
1 107 0.009036845 ubox
2 6 0.041803595 ubox
2 7 0.009208413 ubox
2 11 0.005990791 ubox
2 12 0.003988267 ubox
2 20 0.007468953 ubox
2 21 0.227167243 ubox
2 64 0.823118225 ubox
2 65 0.038551063 ubox
2 81 0.004337777 ubox
2 86 0.003824383 ubox
2 95 0.018453860 ubox
2 98 0.018260638 ubox
2 101 0.018597634 ubox
2 104 0.018520411 ubox
2 107 0.006042167 ubox
3 19 0.010395192 ubox
3 20 0.226931214 ubox
3 85 0.003362345 ubox
4 18 0.012258235 ubox
4 19 0.226047325 ubox
4 77 0.003612149 ubox
5 18 0.222759859 ubox
5 61 0.006458443 ubox
5 76 0.003810205 ubox
6 15 0.037033895 ubox
6 16 0.221334424 ubox
6 63 0.061750698 ubox
6 68 0.034887559 ubox
6 75 0.003907307 ubox
6 91 0.013686104 ubox
7 14 0.037511495 ubox
7 15 0.221304850 ubox
7 16 0.035356163 ubox
7 63 0.965976714 ubox
7 68 0.007063116 ubox
7 91 0.004643845 ubox
8 14 0.214611544 ubox
8 15 0.034485810 ubox
8 62 0.972565857 ubox
8 63 0.003702730 ubox
8 67 0.005598688 ubox
8 90 0.003660735 ubox
9 61 0.972877018 ubox
10 60 0.973123339 ubox
11 59 0.970307913 ubox
12 57 0.044656793 ubox
12 59 0.045173686 ubox
13 23 0.004340605 ubox
13 57 0.971552610 ubox
14 22 0.004746339 ubox
14 55 0.005271961 ubox
14 56 0.973756589 ubox
15 21 0.004741241 ubox
15 54 0.005709566 ubox
15 55 0.973768066 ubox
15 56 0.004082638 ubox
16 54 0.973117612 ubox
16 55 0.004849910 ubox
17 24 0.004708069 ubox
17 26 0.004973573 ubox
17 28 0.009497778 ubox
18 23 0.004587915 ubox
18 27 0.009800838 ubox
18 52 0.007394217 ubox
18 53 0.027246006 ubox
19 52 0.014610799 ubox
19 53 0.007097983 ubox
20 52 0.004360901 ubox
20 53 0.016359584 ubox
21 52 0.013841624 ubox
21 53 0.970221356 ubox
22 52 0.971123771 ubox
22 53 0.008170070 ubox
23 49 0.006350686 ubox
23 51 0.970012089 ubox
23 54 0.025061148 ubox
23 56 0.004348620 ubox
23 58 0.004360329 ubox
23 95 0.166666013 ubox
23 98 0.056359440 ubox
23 101 0.057269425 ubox
23 104 0.057422945 ubox
23 107 0.021742242 ubox
24 29 0.004098691 ubox
24 48 0.006924722 ubox
24 53 0.026469019 ubox
24 57 0.004284641 ubox
24 88 0.003249423 ubox
24 89 0.011426049 ubox
24 90 0.009570368 ubox
24 91 0.007686179 ubox
24 92 0.011011260 ubox
24 93 0.015901691 ubox
24 94 0.166282019 ubox
24 97 0.055596985 ubox
24 100 0.056519296 ubox
24 103 0.056670304 ubox
24 106 0.021643780 ubox
25 47 0.006997294 ubox
25 48 0.003598082 ubox
25 52 0.025360904 ubox
25 53 0.009066947 ubox
25 67 0.003757798 ubox
25 87 0.003262531 ubox
25 88 0.013128865 ubox
25 89 0.010992659 ubox
25 90 0.009635744 ubox
25 91 0.012125973 ubox
25 92 0.019849479 ubox
25 93 0.164003731 ubox
25 94 0.006622611 ubox
25 96 0.049244805 ubox
25 97 0.005762293 ubox
25 99 0.050133023 ubox
25 100 0.005790011 ubox
25 102 0.050261326 ubox
25 103 0.005010648 ubox
25 105 0.019268685 ubox
25 106 0.003987327 ubox
26 46 0.006812685 ubox
26 47 0.003324697 ubox
26 48 0.007006471 ubox
26 52 0.008771958 ubox
26 53 0.007227057 ubox
26 66 0.003605513 ubox
26 87 0.013052867 ubox
26 88 0.010740307 ubox
26 89 0.009708531 ubox
26 90 0.011858734 ubox
26 91 0.021380326 ubox
26 92 0.153162213 ubox
26 93 0.008294401 ubox
26 94 0.007220284 ubox
26 96 0.007042508 ubox
26 97 0.007039782 ubox
26 99 0.007060715 ubox
26 100 0.007021264 ubox
26 102 0.005887033 ubox
26 103 0.003264888 ubox
26 105 0.004360277 ubox
27 44 0.003736356 ubox
27 50 0.023523653 ubox
27 86 0.009549840 ubox
28 43 0.003358908 ubox
28 47 0.003224267 ubox
28 52 0.006471110 ubox
28 53 0.004173150 ubox
28 87 0.003860578 ubox
28 88 0.007857796 ubox
28 89 0.017569199 ubox
28 90 0.040136884 ubox
28 91 0.018508531 ubox
28 92 0.005623077 ubox
28 93 0.007563641 ubox
28 94 0.004646451 ubox
28 96 0.006563768 ubox
28 97 0.004712837 ubox
28 99 0.006608475 ubox
28 100 0.004398936 ubox
29 38 0.003291373 ubox
29 50 0.989255161 ubox
30 37 0.003438394 ubox
30 41 0.006429419 ubox
30 44 0.003663799 ubox
30 45 0.015755909 ubox
30 49 0.999479844 ubox
30 50 0.003284292 ubox
30 95 0.003699114 ubox
30 98 0.003363886 ubox
31 40 0.006352265 ubox
31 43 0.003340963 ubox
31 48 0.999189525 ubox
31 93 0.004271361 ubox
31 94 0.003311167 ubox
31 97 0.003233782 ubox
32 43 0.018194378 ubox
32 47 0.999312194 ubox
32 92 0.004625797 ubox
33 42 0.018699583 ubox
33 46 0.996507895 ubox
33 91 0.004829142 ubox
34 44 0.031157600 ubox
35 44 0.977795700 ubox
36 42 0.004973715 ubox
36 43 0.996550960 ubox
37 42 0.995227392 ubox
38 42 0.005352021 ubox
39 46 0.003382809 ubox
49 68 0.014150416 ubox
50 66 0.009386990 ubox
50 67 0.019853247 ubox
50 68 0.003262499 ubox
50 69 0.010338011 ubox
50 92 0.007016674 ubox
51 59 0.008567647 ubox
51 68 0.025488670 ubox
51 91 0.009813584 ubox
52 56 0.003288846 ubox
52 58 0.009077976 ubox
52 61 0.004516170 ubox
52 65 0.222711297 ubox
52 81 0.003246340 ubox
52 82 0.004877520 ubox
53 60 0.005351282 ubox
53 64 0.222961476 ubox
53 65 0.003260844 ubox
53 80 0.003253343 ubox
53 81 0.004873810 ubox
54 59 0.005453567 ubox
54 63 0.222697940 ubox
54 68 0.004233770 ubox
54 79 0.003243194 ubox
55 59 0.008011738 ubox
55 63 0.006939077 ubox
55 68 0.007504415 ubox
56 63 0.005134633 ubox
56 68 0.003949727 ubox
57 61 0.006398570 ubox
57 64 0.038438648 ubox
57 80 0.006917001 ubox
58 63 0.038645482 ubox
58 73 0.003169908 ubox
58 79 0.006934609 ubox
59 72 0.003221158 ubox
59 78 0.006903000 ubox
59 95 0.013073207 ubox
59 98 0.008033868 ubox
60 71 0.003244397 ubox
60 94 0.012979004 ubox
60 97 0.008004264 ubox
61 70 0.003206441 ubox
61 93 0.011953145 ubox
61 96 0.007413541 ubox
62 76 0.004192009 ubox
62 77 0.003717928 ubox
63 76 0.004750996 ubox
63 95 0.006399392 ubox
64 68 0.018024482 ubox
64 74 0.007929153 ubox
64 75 0.005133186 ubox
64 91 0.135350658 ubox
65 73 0.007976814 ubox
65 74 0.005114968 ubox
65 91 0.115287025 ubox
66 72 0.007462884 ubox
66 85 0.004477483 ubox
66 86 0.018198056 ubox
67 84 0.003267256 ubox
67 85 0.015199735 ubox
67 86 0.032042698 ubox
68 84 0.008643881 ubox
68 85 0.026780535 ubox
68 86 0.093658417 ubox
68 95 0.027838743 ubox
68 98 0.021856075 ubox
68 101 0.017638653 ubox
68 104 0.015218527 ubox
68 107 0.004606156 ubox
69 84 0.020309776 ubox
69 85 0.079283731 ubox
69 86 0.926283270 ubox
70 84 0.056238842 ubox
70 85 0.980211232 ubox
70 86 0.027139905 ubox
71 84 0.994476322 ubox
71 85 0.020717509 ubox
71 86 0.003871914 ubox
72 83 0.998866750 ubox
73 81 0.008226055 ubox
73 82 0.999874703 ubox
74 80 0.010833370 ubox
74 81 0.999829993 ubox
74 82 0.003916605 ubox
75 80 0.993636807 ubox
75 81 0.004724658 ubox
77 92 0.003739434 ubox
78 91 0.004015363 ubox
84 92 0.004530850 ubox
84 93 0.008723005 ubox
84 94 0.004905146 ubox
85 90 0.003584588 ubox
85 91 0.006502569 ubox
85 92 0.014955810 ubox
85 93 0.009400662 ubox
85 94 0.008153116 ubox
86 90 0.006915687 ubox
86 91 0.016922556 ubox
86 92 0.012062174 ubox
86 93 0.012761861 ubox
86 94 0.004912966 ubox
86 96 0.004778061 ubox
86 97 0.003242354 ubox
86 99 0.003805350 ubox
86 102 0.003382621 ubox
91 95 0.041637541 ubox
91 98 0.100549566 ubox
91 101 0.044186116 ubox
91 104 0.034258328 ubox
91 107 0.010130795 ubox
1 65 0.9500000 lbox
2 64 0.9500000 lbox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
23 51 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
