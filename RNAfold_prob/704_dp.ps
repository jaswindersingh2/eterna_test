%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (704)
} def

/sequence { (\
GGAAAAUGACCAGAAACAGGACAUAAGUCAGCACAAAAAGAGCAGACAGUCACGACAAAAGACGAGACGAAGGUAUUCGUACCUUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.007684128 ubox
1 10 0.033770188 ubox
1 11 0.215328415 ubox
1 17 0.021872313 ubox
1 22 0.024453746 ubox
1 24 0.008155382 ubox
1 29 0.052798821 ubox
1 32 0.004307498 ubox
1 34 0.009041753 ubox
1 47 0.007148324 ubox
1 51 0.006337112 ubox
1 53 0.007638452 ubox
1 56 0.005088523 ubox
1 63 0.004585688 ubox
1 68 0.020137609 ubox
1 83 0.013749955 ubox
1 86 0.018831989 ubox
1 95 0.228759896 ubox
1 98 0.230146773 ubox
1 101 0.236584359 ubox
1 104 0.237873072 ubox
1 107 0.060080673 ubox
2 7 0.004765694 ubox
2 10 0.215055881 ubox
2 11 0.028217072 ubox
2 17 0.006927143 ubox
2 22 0.015235784 ubox
2 24 0.009607566 ubox
2 28 0.051858702 ubox
2 29 0.037202769 ubox
2 34 0.006030266 ubox
2 47 0.003670840 ubox
2 50 0.005016570 ubox
2 51 0.010871321 ubox
2 68 0.012508234 ubox
2 82 0.013701266 ubox
2 85 0.014442044 ubox
2 86 0.021725845 ubox
2 95 0.120584297 ubox
2 98 0.121025316 ubox
2 101 0.124494959 ubox
2 104 0.124040505 ubox
2 107 0.040489269 ubox
3 7 0.009254585 ubox
3 24 0.013298501 ubox
3 28 0.036594394 ubox
3 50 0.010193836 ubox
3 84 0.011563055 ubox
3 85 0.019589718 ubox
4 24 0.017749242 ubox
4 84 0.013615517 ubox
5 24 0.040657152 ubox
6 24 0.862282568 ubox
7 12 0.005292000 ubox
7 13 0.004375988 ubox
7 14 0.013030686 ubox
7 15 0.008049554 ubox
7 16 0.011102360 ubox
7 18 0.052296129 ubox
7 21 0.007210605 ubox
7 23 0.900342299 ubox
7 25 0.021499593 ubox
7 26 0.007089460 ubox
7 30 0.032861635 ubox
7 44 0.009332099 ubox
7 48 0.004726190 ubox
7 52 0.014933498 ubox
7 64 0.003800255 ubox
7 87 0.011433678 ubox
7 88 0.010086240 ubox
7 89 0.010957014 ubox
7 90 0.013607863 ubox
7 91 0.004621804 ubox
7 92 0.012008499 ubox
7 93 0.010616119 ubox
7 94 0.009504821 ubox
7 96 0.074209959 ubox
7 97 0.009630188 ubox
7 99 0.073258147 ubox
7 100 0.009362874 ubox
7 102 0.069793534 ubox
7 103 0.008958171 ubox
7 105 0.069464728 ubox
7 106 0.008892116 ubox
8 17 0.057009378 ubox
8 22 0.910663251 ubox
8 24 0.022663735 ubox
8 29 0.036195345 ubox
8 43 0.010188693 ubox
8 47 0.004849754 ubox
8 51 0.017026029 ubox
8 63 0.005817563 ubox
8 68 0.003188980 ubox
8 86 0.009406665 ubox
8 95 0.081050287 ubox
8 98 0.080087463 ubox
8 101 0.076969616 ubox
8 104 0.076674560 ubox
8 107 0.010032376 ubox
9 24 0.008447067 ubox
9 28 0.036181575 ubox
9 50 0.016952536 ubox
9 85 0.007243548 ubox
10 19 0.054946001 ubox
10 20 0.940741783 ubox
10 27 0.035718252 ubox
10 42 0.003567982 ubox
10 49 0.016525144 ubox
10 61 0.004691420 ubox
10 91 0.013295249 ubox
11 19 0.941615323 ubox
11 20 0.041119358 ubox
11 40 0.007182161 ubox
11 61 0.004585161 ubox
11 91 0.024319506 ubox
12 24 0.008093975 ubox
13 17 0.214173842 ubox
13 22 0.032676487 ubox
13 24 0.005547290 ubox
13 29 0.003269356 ubox
13 32 0.004777766 ubox
13 34 0.005842937 ubox
13 47 0.003252295 ubox
13 56 0.005609530 ubox
13 86 0.006078128 ubox
13 95 0.024937818 ubox
13 98 0.024224483 ubox
13 101 0.025224584 ubox
13 104 0.025107258 ubox
13 107 0.008776160 ubox
14 24 0.005068917 ubox
14 85 0.005748501 ubox
15 24 0.007958583 ubox
15 84 0.003645319 ubox
16 24 0.004337143 ubox
17 27 0.003357660 ubox
17 31 0.017058799 ubox
17 54 0.017990977 ubox
17 91 0.024730443 ubox
18 24 0.011562618 ubox
18 84 0.006243694 ubox
19 24 0.012626330 ubox
19 29 0.006380659 ubox
19 32 0.006184126 ubox
19 34 0.004360700 ubox
19 47 0.004080415 ubox
19 53 0.024786265 ubox
19 56 0.003222863 ubox
19 68 0.003394041 ubox
19 83 0.006961719 ubox
19 95 0.037905487 ubox
19 98 0.036468112 ubox
19 101 0.036982728 ubox
19 104 0.037002994 ubox
19 107 0.012921129 ubox
20 24 0.005183632 ubox
20 28 0.003855073 ubox
20 29 0.106162974 ubox
20 51 0.051759826 ubox
20 82 0.006914558 ubox
20 95 0.020639479 ubox
20 98 0.020073572 ubox
20 101 0.020279007 ubox
20 104 0.020182847 ubox
20 107 0.006583142 ubox
21 28 0.106593366 ubox
21 50 0.051887440 ubox
21 80 0.004120099 ubox
22 27 0.106517212 ubox
22 31 0.003439899 ubox
22 49 0.051729080 ubox
22 79 0.004127193 ubox
22 91 0.027949670 ubox
23 50 0.003288149 ubox
24 48 0.022344367 ubox
24 49 0.003561606 ubox
24 87 0.006468356 ubox
24 88 0.007649038 ubox
24 89 0.008936137 ubox
24 90 0.010266042 ubox
24 91 0.005553853 ubox
24 92 0.008401218 ubox
24 93 0.008019117 ubox
24 94 0.006847397 ubox
24 96 0.006859214 ubox
24 97 0.006849583 ubox
24 99 0.006933665 ubox
24 100 0.006922068 ubox
24 102 0.006589944 ubox
24 103 0.006566734 ubox
24 105 0.006476447 ubox
24 106 0.006473021 ubox
27 32 0.003422445 ubox
27 34 0.009788690 ubox
27 43 0.007355548 ubox
27 47 0.987249507 ubox
27 56 0.005243446 ubox
27 63 0.004199159 ubox
27 68 0.015968867 ubox
27 95 0.012676300 ubox
27 98 0.012360205 ubox
27 101 0.012514528 ubox
27 104 0.012524329 ubox
27 107 0.004376411 ubox
28 33 0.008959308 ubox
28 41 0.007380503 ubox
28 42 0.005716240 ubox
28 46 0.988563708 ubox
28 55 0.005248325 ubox
28 62 0.004204246 ubox
28 67 0.015986577 ubox
28 92 0.013423979 ubox
28 94 0.011262529 ubox
28 97 0.011154803 ubox
28 100 0.011305539 ubox
28 103 0.011317199 ubox
28 106 0.003997238 ubox
29 40 0.008200561 ubox
29 45 0.985275765 ubox
29 54 0.005241021 ubox
29 61 0.004196613 ubox
29 66 0.015965963 ubox
29 91 0.014486572 ubox
31 43 0.992262439 ubox
31 47 0.004545259 ubox
32 40 0.021947776 ubox
32 42 0.992690942 ubox
32 45 0.005404375 ubox
32 91 0.003670475 ubox
34 40 0.644415573 ubox
34 42 0.013759325 ubox
34 45 0.004170291 ubox
40 47 0.010007946 ubox
40 51 0.005959184 ubox
41 50 0.005845443 ubox
42 47 0.008752566 ubox
42 101 0.003185830 ubox
42 104 0.003169206 ubox
43 49 0.003718370 ubox
43 91 0.003492908 ubox
45 51 0.004341050 ubox
45 68 0.007688713 ubox
45 95 0.004978325 ubox
45 98 0.004834935 ubox
45 101 0.004874181 ubox
45 104 0.004701918 ubox
46 50 0.003782170 ubox
47 64 0.007418609 ubox
47 66 0.009434356 ubox
47 91 0.005293346 ubox
49 56 0.019252409 ubox
49 63 0.163493606 ubox
49 68 0.979756739 ubox
49 95 0.006350016 ubox
49 98 0.005653880 ubox
49 101 0.005448831 ubox
49 104 0.005753300 ubox
50 55 0.017831015 ubox
50 62 0.163743145 ubox
50 65 0.010448138 ubox
50 67 0.981295811 ubox
50 92 0.005480998 ubox
50 94 0.005700364 ubox
50 97 0.005024789 ubox
50 100 0.004806922 ubox
50 103 0.005146604 ubox
51 61 0.163621298 ubox
51 64 0.011168435 ubox
51 66 0.979081133 ubox
51 91 0.005920627 ubox
53 61 0.022793585 ubox
53 64 0.972677422 ubox
53 66 0.006511559 ubox
54 63 0.972598492 ubox
54 68 0.004199577 ubox
54 101 0.004170019 ubox
56 61 0.542811254 ubox
56 64 0.011705723 ubox
56 66 0.004875734 ubox
59 85 0.003936277 ubox
60 84 0.004463843 ubox
61 68 0.008448892 ubox
61 82 0.003967041 ubox
61 83 0.004451579 ubox
61 86 0.008821041 ubox
61 95 0.004985963 ubox
62 80 0.011622415 ubox
62 85 0.008687492 ubox
63 79 0.012007887 ubox
63 91 0.011450828 ubox
64 68 0.010495594 ubox
64 78 0.012188189 ubox
64 82 0.004550218 ubox
64 83 0.015346823 ubox
64 85 0.005046110 ubox
64 86 0.006105582 ubox
64 95 0.003376726 ubox
65 77 0.012147681 ubox
65 84 0.005906977 ubox
65 85 0.005779370 ubox
66 76 0.010563650 ubox
66 82 0.009241498 ubox
66 83 0.006136335 ubox
66 84 0.004804513 ubox
66 86 0.003301248 ubox
67 74 0.012088591 ubox
67 80 0.027114538 ubox
68 73 0.012159118 ubox
68 79 0.027745126 ubox
68 91 0.007872594 ubox
69 78 0.028607461 ubox
69 85 0.004348986 ubox
69 86 0.997389037 ubox
70 77 0.028480733 ubox
70 84 0.003563757 ubox
70 85 0.998419496 ubox
71 76 0.027124994 ubox
71 84 0.998750532 ubox
72 83 0.999489565 ubox
73 82 0.999477965 ubox
74 79 0.004239234 ubox
74 81 0.991103143 ubox
75 80 0.893077852 ubox
76 81 0.006895015 ubox
83 91 0.005051556 ubox
84 90 0.005038470 ubox
84 93 0.017108254 ubox
85 89 0.004226522 ubox
85 92 0.022998102 ubox
86 91 0.025030227 ubox
91 95 0.054491420 ubox
91 98 0.119247967 ubox
91 101 0.046143703 ubox
91 104 0.029902936 ubox
91 107 0.008705719 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
