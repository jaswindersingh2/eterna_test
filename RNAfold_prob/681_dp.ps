%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (681)
} def

/sequence { (\
GGAAACUACAACUACAAAAAAAAAAAGUAGAACUACAAAAAAAAAAAGUAGAAGUAGAAAAAAAAAAAGAAAUUGUUCGCAAUUUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.035288243 ubox
1 7 0.010184861 ubox
1 9 0.027433000 ubox
1 12 0.003682529 ubox
1 15 0.004060245 ubox
1 33 0.003421598 ubox
1 34 0.005359038 ubox
1 36 0.005403143 ubox
1 80 0.003200563 ubox
1 86 0.008961930 ubox
1 95 0.068852901 ubox
1 98 0.068914530 ubox
1 101 0.070428048 ubox
1 104 0.071370356 ubox
1 107 0.018050595 ubox
2 6 0.011190073 ubox
2 7 0.003792439 ubox
2 9 0.012794198 ubox
2 33 0.005741079 ubox
2 78 0.003928803 ubox
2 85 0.008169883 ubox
2 86 0.010093118 ubox
2 95 0.036422547 ubox
2 98 0.036193211 ubox
2 101 0.036981888 ubox
2 104 0.037170874 ubox
2 107 0.012149968 ubox
3 77 0.003829602 ubox
3 84 0.007673124 ubox
3 85 0.009690710 ubox
4 76 0.003282185 ubox
4 83 0.006108226 ubox
4 84 0.008549822 ubox
5 28 0.007569351 ubox
5 55 0.037125270 ubox
5 83 0.006594407 ubox
6 27 0.007877917 ubox
6 30 0.076201711 ubox
6 51 0.018428374 ubox
6 54 0.038513460 ubox
6 57 0.980100768 ubox
6 91 0.024446659 ubox
7 26 0.007632055 ubox
7 29 0.076676273 ubox
7 35 0.004041640 ubox
7 50 0.018548403 ubox
7 53 0.037163616 ubox
7 56 0.986223483 ubox
7 57 0.004274180 ubox
7 90 0.023499187 ubox
7 92 0.003421367 ubox
7 93 0.003310769 ubox
8 28 0.076653802 ubox
8 34 0.004203871 ubox
8 49 0.018541386 ubox
8 55 0.986724502 ubox
9 27 0.076549316 ubox
9 30 0.007289190 ubox
9 48 0.018477830 ubox
9 51 0.012407564 ubox
9 54 0.985597457 ubox
9 57 0.004525130 ubox
9 91 0.009439300 ubox
11 28 0.031406441 ubox
11 49 0.015519177 ubox
11 55 0.004202381 ubox
12 27 0.032622108 ubox
12 30 0.337732366 ubox
12 48 0.015904699 ubox
12 51 0.933739719 ubox
12 54 0.004132135 ubox
12 57 0.018201386 ubox
12 91 0.003346319 ubox
13 20 0.004030905 ubox
13 21 0.003292988 ubox
13 22 0.008278807 ubox
13 23 0.006774436 ubox
13 24 0.003975144 ubox
13 25 0.004821070 ubox
13 26 0.031825915 ubox
13 29 0.339747876 ubox
13 47 0.015182374 ubox
13 50 0.935031279 ubox
13 53 0.003672329 ubox
13 56 0.018307991 ubox
13 90 0.003178941 ubox
14 28 0.339907739 ubox
14 49 0.934778332 ubox
14 55 0.018308707 ubox
15 27 0.339659093 ubox
15 30 0.003164027 ubox
15 48 0.931671590 ubox
15 54 0.018254606 ubox
19 28 0.004046867 ubox
21 28 0.004275990 ubox
22 28 0.003356441 ubox
23 28 0.003636258 ubox
25 34 0.005467731 ubox
26 34 0.121006734 ubox
27 33 0.126298353 ubox
27 34 0.009535097 ubox
27 36 0.875326538 ubox
27 95 0.004389285 ubox
27 98 0.005129589 ubox
27 101 0.005239177 ubox
27 104 0.005382186 ubox
28 32 0.113832444 ubox
28 35 0.874360668 ubox
28 37 0.019657526 ubox
28 38 0.010143605 ubox
28 39 0.004051402 ubox
28 56 0.009654997 ubox
28 94 0.004221200 ubox
28 97 0.004965640 ubox
28 100 0.005070605 ubox
28 103 0.005208177 ubox
29 34 0.826158312 ubox
29 55 0.010305911 ubox
30 34 0.017352366 ubox
30 36 0.019060786 ubox
31 55 0.006879671 ubox
32 49 0.030662184 ubox
32 55 0.013063067 ubox
33 48 0.031893864 ubox
33 51 0.337452058 ubox
33 54 0.013056400 ubox
33 57 0.077961461 ubox
34 39 0.004542045 ubox
34 40 0.004184431 ubox
34 41 0.005344957 ubox
34 42 0.003349248 ubox
34 43 0.005034228 ubox
34 47 0.031151610 ubox
34 50 0.339499562 ubox
34 53 0.012210064 ubox
34 56 0.078431307 ubox
35 49 0.339701382 ubox
35 55 0.078465118 ubox
36 48 0.339454647 ubox
36 51 0.008621722 ubox
36 54 0.078385188 ubox
40 49 0.007259084 ubox
41 49 0.006475932 ubox
42 49 0.006310401 ubox
43 49 0.003227789 ubox
49 56 0.003358630 ubox
50 55 0.003525750 ubox
51 104 0.003847357 ubox
54 98 0.008113757 ubox
54 101 0.030004039 ubox
54 104 0.006480789 ubox
55 62 0.003589812 ubox
55 64 0.003308623 ubox
55 97 0.007889838 ubox
55 100 0.029170444 ubox
55 103 0.006390230 ubox
57 95 0.005777997 ubox
57 98 0.020512455 ubox
57 101 0.004547776 ubox
62 85 0.003570058 ubox
63 84 0.003974900 ubox
64 73 0.003171790 ubox
64 83 0.003832539 ubox
66 73 0.003210694 ubox
67 74 0.004900949 ubox
68 73 0.005657382 ubox
69 78 0.021603714 ubox
69 85 0.005595421 ubox
69 86 0.985816143 ubox
69 98 0.005854694 ubox
69 101 0.014411141 ubox
69 104 0.021819255 ubox
69 107 0.013260900 ubox
70 77 0.021330385 ubox
70 84 0.005127161 ubox
70 85 0.986675330 ubox
71 76 0.017756552 ubox
71 83 0.003878447 ubox
71 84 0.986043757 ubox
72 83 0.986490368 ubox
73 82 0.986570302 ubox
73 88 0.003649378 ubox
73 97 0.036938180 ubox
73 100 0.042178430 ubox
73 103 0.101851072 ubox
73 106 0.044769779 ubox
74 81 0.985987901 ubox
74 82 0.004496837 ubox
74 87 0.004196748 ubox
74 96 0.043776632 ubox
74 99 0.049992437 ubox
74 102 0.121868195 ubox
74 105 0.053738307 ubox
75 80 0.980439083 ubox
75 86 0.004283263 ubox
75 95 0.044853366 ubox
75 98 0.051229473 ubox
75 101 0.125076233 ubox
75 104 0.055168512 ubox
76 93 0.024987138 ubox
76 94 0.037692577 ubox
76 97 0.050966676 ubox
76 100 0.124605278 ubox
76 103 0.054872952 ubox
77 92 0.035469614 ubox
77 93 0.027849709 ubox
77 96 0.048760050 ubox
77 99 0.118870237 ubox
77 100 0.005732813 ubox
77 102 0.051540025 ubox
78 91 0.042872480 ubox
79 95 0.040694461 ubox
79 98 0.089237505 ubox
79 101 0.014898119 ubox
80 91 0.006293274 ubox
83 90 0.009252316 ubox
83 91 0.004291289 ubox
83 92 0.008255372 ubox
83 93 0.011607441 ubox
83 94 0.134295785 ubox
83 96 0.003939958 ubox
84 89 0.008194432 ubox
84 90 0.004771988 ubox
84 91 0.008452792 ubox
84 92 0.011861766 ubox
84 93 0.144762408 ubox
84 94 0.003685426 ubox
85 89 0.004080931 ubox
85 90 0.006974431 ubox
85 91 0.010929143 ubox
85 92 0.147158546 ubox
86 91 0.147298003 ubox
91 95 0.042558641 ubox
91 98 0.102528935 ubox
91 101 0.044944089 ubox
91 104 0.034754662 ubox
91 107 0.010281825 ubox
6 57 0.9500000 lbox
7 56 0.9500000 lbox
8 55 0.9500000 lbox
9 54 0.9500000 lbox
12 51 0.9500000 lbox
13 50 0.9500000 lbox
14 49 0.9500000 lbox
15 48 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
