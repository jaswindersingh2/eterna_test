%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1064)
} def

/sequence { (\
GGAAAAAACAUGACUAGACAGUUUCAAAGAAAACUGAAAACACGACAGAAACUGCGUGACUAGACAUGUAGACUUUUCGAAGUCUAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.015430601 ubox
1 77 0.003598697 ubox
1 78 0.061817635 ubox
1 85 0.004646648 ubox
1 95 0.067215165 ubox
1 98 0.067631157 ubox
1 101 0.069167251 ubox
1 104 0.069477136 ubox
1 107 0.017541221 ubox
2 9 0.006594991 ubox
2 75 0.003755423 ubox
2 76 0.005740743 ubox
2 77 0.061885369 ubox
2 78 0.055040635 ubox
2 84 0.004415496 ubox
2 95 0.035451683 ubox
2 98 0.035577479 ubox
2 101 0.036333549 ubox
2 104 0.036195203 ubox
2 107 0.011810679 ubox
3 69 0.003680164 ubox
3 74 0.003817350 ubox
3 75 0.006259304 ubox
3 76 0.061822684 ubox
3 77 0.054983369 ubox
3 83 0.003815521 ubox
4 69 0.004697663 ubox
4 74 0.006251004 ubox
4 75 0.061128956 ubox
4 76 0.054701805 ubox
4 77 0.005518073 ubox
5 69 0.006506276 ubox
5 74 0.057223924 ubox
5 75 0.053970945 ubox
5 76 0.006932792 ubox
6 69 0.009095074 ubox
6 74 0.049408739 ubox
6 75 0.008026888 ubox
7 69 0.035888234 ubox
7 74 0.008844911 ubox
8 69 0.781829619 ubox
9 68 0.997562089 ubox
10 67 0.999028926 ubox
11 66 0.999155642 ubox
12 65 0.997632771 ubox
12 84 0.003771900 ubox
13 83 0.003779697 ubox
14 63 0.997235052 ubox
14 82 0.003780654 ubox
15 62 0.999234562 ubox
15 81 0.003643452 ubox
16 61 0.998765481 ubox
17 60 0.992871657 ubox
17 61 0.004133781 ubox
18 57 0.006445456 ubox
19 36 0.985921281 ubox
19 54 0.024535584 ubox
19 56 0.005222909 ubox
19 58 0.019964660 ubox
20 35 0.990152721 ubox
20 53 0.025221053 ubox
20 57 0.010588291 ubox
21 34 0.990801346 ubox
21 41 0.021716746 ubox
21 52 0.025474560 ubox
22 30 0.005832329 ubox
22 31 0.012575157 ubox
22 32 0.222261112 ubox
22 33 0.964089752 ubox
22 38 0.003766179 ubox
22 39 0.109120908 ubox
22 40 0.020519131 ubox
22 51 0.025458015 ubox
23 28 0.004237207 ubox
23 29 0.009519397 ubox
23 30 0.026933560 ubox
23 31 0.315432829 ubox
23 32 0.932612746 ubox
23 33 0.011893464 ubox
23 37 0.003314103 ubox
23 38 0.125677708 ubox
23 39 0.017466741 ubox
23 50 0.025422973 ubox
24 28 0.010436741 ubox
24 29 0.030223171 ubox
24 30 0.389205834 ubox
24 31 0.833259965 ubox
24 32 0.015587814 ubox
24 37 0.129778275 ubox
24 38 0.012939418 ubox
24 49 0.025419413 ubox
25 29 0.445114610 ubox
25 36 0.130721568 ubox
25 48 0.025312371 ubox
26 35 0.127785718 ubox
27 35 0.004855185 ubox
28 35 0.016671307 ubox
29 34 0.022001265 ubox
29 43 0.006809606 ubox
29 46 0.004116813 ubox
35 40 0.003925822 ubox
35 42 0.004455015 ubox
35 47 0.003490526 ubox
36 41 0.005173727 ubox
36 46 0.003529309 ubox
38 61 0.005029668 ubox
40 57 0.005563146 ubox
41 56 0.005554526 ubox
41 58 0.994324942 ubox
42 57 0.998852101 ubox
43 54 0.005151447 ubox
43 56 0.999549615 ubox
43 79 0.004273143 ubox
44 53 0.004907036 ubox
44 55 0.999116418 ubox
44 78 0.004354899 ubox
45 53 0.010448581 ubox
45 77 0.004264881 ubox
46 54 0.997907506 ubox
47 53 0.995656205 ubox
47 76 0.003243029 ubox
48 52 0.973849136 ubox
48 53 0.007750262 ubox
48 75 0.003399605 ubox
49 74 0.003354489 ubox
52 71 0.005130720 ubox
53 70 0.005149172 ubox
54 69 0.005165619 ubox
55 68 0.005237036 ubox
56 67 0.005235859 ubox
57 66 0.005239017 ubox
58 65 0.005222265 ubox
65 91 0.004476745 ubox
67 88 0.006724826 ubox
67 89 0.003982732 ubox
67 96 0.003966376 ubox
68 95 0.005809057 ubox
68 98 0.004553408 ubox
68 101 0.003659974 ubox
69 86 0.583277705 ubox
69 87 0.026923039 ubox
69 88 0.009857845 ubox
69 89 0.006797689 ubox
69 90 0.004918377 ubox
69 91 0.003504487 ubox
69 94 0.004994932 ubox
69 97 0.003922121 ubox
69 100 0.003168906 ubox
70 85 0.964355222 ubox
71 78 0.007010413 ubox
71 84 0.995577450 ubox
71 95 0.004513317 ubox
71 98 0.005566984 ubox
72 77 0.006322582 ubox
72 83 0.995657822 ubox
73 82 0.995771109 ubox
73 91 0.017420887 ubox
74 79 0.004796097 ubox
74 80 0.040060605 ubox
74 81 0.981837317 ubox
74 82 0.005143228 ubox
74 89 0.004343079 ubox
74 90 0.017427326 ubox
75 79 0.051207043 ubox
75 80 0.853792473 ubox
75 81 0.031742659 ubox
75 88 0.005041169 ubox
75 89 0.017313395 ubox
75 94 0.017037174 ubox
76 80 0.037370661 ubox
76 81 0.005316903 ubox
76 87 0.005393246 ubox
76 88 0.017057395 ubox
76 93 0.019832193 ubox
77 86 0.005432816 ubox
77 87 0.015860295 ubox
77 92 0.020486489 ubox
78 91 0.020582715 ubox
79 84 0.010640248 ubox
79 85 0.006617854 ubox
79 95 0.009767794 ubox
79 98 0.010395585 ubox
79 101 0.003523060 ubox
80 85 0.004396859 ubox
82 95 0.016787596 ubox
82 98 0.008340657 ubox
82 101 0.006289801 ubox
82 104 0.005112331 ubox
83 92 0.054102311 ubox
83 93 0.003213325 ubox
83 94 0.012869379 ubox
83 97 0.007177602 ubox
83 100 0.005673834 ubox
83 103 0.004657073 ubox
84 91 0.058705718 ubox
85 89 0.003584902 ubox
85 90 0.056249267 ubox
85 91 0.005895944 ubox
85 92 0.009174632 ubox
85 93 0.004837192 ubox
85 94 0.005497305 ubox
91 95 0.042944411 ubox
91 98 0.103536239 ubox
91 101 0.045427212 ubox
91 104 0.035161311 ubox
91 107 0.010403073 ubox
8 69 0.9500000 lbox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 32 0.9500000 lbox
24 31 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
