%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1083)
} def

/sequence { (\
GGAAAAAAGAUGCCAUCAGUAGACGAAACGUACUACACAAGUACAUGCAAAGCAGUACAGAUGACAUCCUGCUUGUUCGCGAGUAGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.006062928 ubox
1 69 0.008101449 ubox
1 78 0.003829875 ubox
1 95 0.067367199 ubox
1 98 0.067798342 ubox
1 101 0.069349640 ubox
1 104 0.069666341 ubox
1 107 0.017590073 ubox
2 13 0.006127174 ubox
2 68 0.009210354 ubox
2 69 0.003768573 ubox
2 77 0.003818994 ubox
2 78 0.004322008 ubox
2 95 0.035563396 ubox
2 98 0.035693832 ubox
2 101 0.036459862 ubox
2 104 0.036323053 ubox
2 107 0.011852697 ubox
3 67 0.008161994 ubox
3 76 0.003722261 ubox
3 77 0.004314839 ubox
4 76 0.004090154 ubox
7 70 0.009923238 ubox
8 70 0.009760165 ubox
9 17 0.004078926 ubox
9 67 0.004420216 ubox
9 68 0.996163310 ubox
9 69 0.008082941 ubox
9 95 0.003425062 ubox
9 98 0.004148989 ubox
9 101 0.004118586 ubox
9 104 0.004137590 ubox
10 16 0.004031643 ubox
10 67 0.998750413 ubox
11 15 0.003574890 ubox
11 66 0.998991517 ubox
11 96 0.003412360 ubox
11 99 0.003249990 ubox
11 102 0.003276549 ubox
12 65 0.997534365 ubox
12 95 0.003595838 ubox
12 98 0.003425446 ubox
12 101 0.003454284 ubox
13 63 0.050391968 ubox
14 63 0.996731812 ubox
15 62 0.999197757 ubox
16 61 0.999268473 ubox
16 64 0.012950579 ubox
17 60 0.998269670 ubox
17 63 0.013085107 ubox
18 34 0.041291238 ubox
18 62 0.011786702 ubox
19 29 0.006394390 ubox
19 33 0.043372988 ubox
19 36 0.996045190 ubox
19 38 0.021848920 ubox
19 58 0.040424252 ubox
20 28 0.006267270 ubox
20 32 0.042881283 ubox
20 35 0.997296165 ubox
20 37 0.017829253 ubox
20 57 0.040335161 ubox
21 31 0.036970306 ubox
21 34 0.997567526 ubox
21 56 0.038187349 ubox
22 29 0.018672360 ubox
22 31 0.003480047 ubox
22 33 0.995536319 ubox
22 53 0.009850871 ubox
23 31 0.992599672 ubox
23 56 0.007373255 ubox
24 30 0.995832491 ubox
24 52 0.013285362 ubox
24 55 0.008947990 ubox
25 29 0.931665160 ubox
25 31 0.006089760 ubox
25 48 0.005308588 ubox
25 53 0.004649681 ubox
26 31 0.006641933 ubox
28 46 0.014060158 ubox
29 47 0.008473749 ubox
30 36 0.003692458 ubox
30 38 0.005124831 ubox
30 44 0.041308425 ubox
30 46 0.003912015 ubox
30 48 0.005031033 ubox
31 35 0.003332414 ubox
31 37 0.004978139 ubox
31 43 0.041453311 ubox
31 45 0.003369839 ubox
31 47 0.005008885 ubox
32 42 0.041550840 ubox
32 46 0.004669579 ubox
33 41 0.041570032 ubox
34 40 0.040630391 ubox
34 43 0.006317875 ubox
35 42 0.006678499 ubox
36 41 0.006748082 ubox
38 60 0.006480592 ubox
38 63 0.005059703 ubox
39 62 0.005041188 ubox
41 48 0.003950444 ubox
41 58 0.997198891 ubox
42 47 0.003791581 ubox
42 57 0.998379258 ubox
43 56 0.998380064 ubox
44 55 0.995422197 ubox
45 56 0.003374661 ubox
46 51 0.011437313 ubox
46 52 0.006448401 ubox
46 54 0.991180119 ubox
46 57 0.009556814 ubox
47 53 0.997417423 ubox
47 56 0.011172252 ubox
48 52 0.990181434 ubox
48 55 0.011446239 ubox
60 68 0.004098231 ubox
61 67 0.004056973 ubox
62 66 0.003598207 ubox
67 87 0.007217276 ubox
67 88 0.005993960 ubox
67 92 0.005922382 ubox
68 86 0.006481820 ubox
68 91 0.007476466 ubox
69 83 0.005405515 ubox
69 86 0.995690417 ubox
69 91 0.009099586 ubox
70 81 0.007934462 ubox
70 82 0.004731398 ubox
70 85 0.998572642 ubox
70 90 0.007775634 ubox
70 96 0.003794366 ubox
70 99 0.013312600 ubox
70 102 0.006883632 ubox
70 105 0.004938556 ubox
71 80 0.011090640 ubox
71 84 0.999370257 ubox
71 95 0.004129083 ubox
71 98 0.014541710 ubox
71 101 0.007514260 ubox
71 104 0.005390970 ubox
72 79 0.011086300 ubox
72 83 0.999646780 ubox
72 91 0.007717260 ubox
73 82 0.999303247 ubox
73 90 0.007725106 ubox
73 93 0.003722761 ubox
73 97 0.016737834 ubox
73 100 0.006738451 ubox
73 103 0.005570303 ubox
74 81 0.997089771 ubox
74 82 0.005186606 ubox
74 89 0.007532657 ubox
74 92 0.003888833 ubox
74 96 0.017533871 ubox
74 99 0.007052673 ubox
74 102 0.005839713 ubox
74 105 0.003243720 ubox
75 80 0.979104815 ubox
75 95 0.017670653 ubox
75 98 0.007106535 ubox
75 101 0.005887452 ubox
75 104 0.003325941 ubox
76 88 0.007434505 ubox
76 90 0.003868395 ubox
76 93 0.009701193 ubox
76 94 0.014831537 ubox
76 97 0.006902017 ubox
76 100 0.005795988 ubox
76 103 0.003289438 ubox
77 87 0.009096769 ubox
77 89 0.003878461 ubox
77 92 0.013826066 ubox
77 93 0.010998052 ubox
77 96 0.005870060 ubox
77 99 0.005259627 ubox
78 86 0.009259759 ubox
78 91 0.016778871 ubox
80 86 0.004904158 ubox
80 91 0.004604778 ubox
83 95 0.003661328 ubox
83 98 0.003926851 ubox
84 94 0.003562104 ubox
84 97 0.003862109 ubox
86 95 0.009239523 ubox
86 98 0.003641032 ubox
91 95 0.043025238 ubox
91 98 0.103743280 ubox
91 101 0.045516195 ubox
91 104 0.035228159 ubox
91 107 0.010422854 ubox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
