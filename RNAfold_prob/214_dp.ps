%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (214)
} def

/sequence { (\
GGAAAUGCGAACAUAAGGGCGCGUAAACGCAGCCCAAAAGCGCAGCGUAAACGCGCGCAUAUGAACGCGUAUAUAUUCGUAUAUACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.026740187 ubox
1 8 0.007058102 ubox
1 72 0.006466142 ubox
1 74 0.017041705 ubox
1 78 0.041026277 ubox
1 80 0.005916920 ubox
1 86 0.031912892 ubox
1 95 0.067976547 ubox
1 98 0.067478206 ubox
1 101 0.068827839 ubox
1 104 0.069146051 ubox
1 107 0.017459214 ubox
2 6 0.010519079 ubox
2 72 0.008857175 ubox
2 74 0.008321896 ubox
2 77 0.040709330 ubox
2 78 0.077293763 ubox
2 86 0.011878257 ubox
2 95 0.035404051 ubox
2 98 0.035418941 ubox
2 101 0.036148609 ubox
2 104 0.036015706 ubox
2 107 0.011752703 ubox
3 70 0.004420470 ubox
3 72 0.037352813 ubox
3 74 0.009719317 ubox
3 76 0.039186274 ubox
3 77 0.077350376 ubox
3 84 0.013364571 ubox
4 70 0.011429423 ubox
4 72 0.019008127 ubox
4 74 0.012342965 ubox
4 76 0.076300317 ubox
4 84 0.005242792 ubox
5 70 0.251213822 ubox
5 72 0.035641141 ubox
5 74 0.010087994 ubox
5 82 0.047215977 ubox
6 69 0.264066641 ubox
6 71 0.036808457 ubox
6 73 0.007857305 ubox
6 81 0.049326796 ubox
6 87 0.007380022 ubox
6 88 0.009510315 ubox
6 89 0.009905316 ubox
6 90 0.016342181 ubox
6 91 0.004953183 ubox
6 92 0.011201208 ubox
6 93 0.011201826 ubox
6 94 0.009541347 ubox
6 96 0.010075896 ubox
6 97 0.009572492 ubox
6 99 0.010216816 ubox
6 100 0.009603368 ubox
6 102 0.008869517 ubox
6 103 0.008362020 ubox
6 105 0.008587479 ubox
6 106 0.008133677 ubox
7 68 0.996698144 ubox
7 70 0.036960884 ubox
7 80 0.049798757 ubox
7 95 0.005316335 ubox
7 98 0.005322542 ubox
7 101 0.004758291 ubox
7 104 0.004632841 ubox
8 67 0.997690544 ubox
8 69 0.037026624 ubox
8 79 0.049837877 ubox
9 66 0.993254711 ubox
9 68 0.037215070 ubox
9 78 0.049830003 ubox
10 77 0.049381133 ubox
11 76 0.044399031 ubox
12 63 0.995929570 ubox
13 62 0.997806826 ubox
13 74 0.026451309 ubox
13 76 0.005474288 ubox
14 61 0.997006884 ubox
14 73 0.026823631 ubox
14 75 0.007395247 ubox
15 60 0.980228015 ubox
15 72 0.020093538 ubox
15 74 0.007133166 ubox
16 60 0.031367318 ubox
17 35 0.114793536 ubox
17 58 0.984838467 ubox
18 34 0.114917335 ubox
18 56 0.005704683 ubox
18 58 0.062738982 ubox
19 33 0.114918522 ubox
19 56 0.993169794 ubox
19 58 0.012093760 ubox
20 32 0.114866425 ubox
20 55 0.993280185 ubox
20 57 0.012169541 ubox
21 30 0.114368263 ubox
21 54 0.993280815 ubox
21 56 0.012155497 ubox
22 29 0.114734154 ubox
22 53 0.993280215 ubox
22 55 0.012152483 ubox
23 28 0.111767400 ubox
23 30 0.005326627 ubox
23 52 0.993052939 ubox
23 54 0.012134466 ubox
24 29 0.005114937 ubox
24 49 0.006486249 ubox
24 50 0.022212050 ubox
24 51 0.976451013 ubox
24 53 0.011926414 ubox
25 48 0.006557320 ubox
26 48 0.022218910 ubox
27 48 0.976517211 ubox
28 47 0.993121241 ubox
29 43 0.005442020 ubox
29 46 0.993328610 ubox
30 42 0.005847460 ubox
30 45 0.991864309 ubox
32 41 0.220239693 ubox
32 43 0.966089533 ubox
33 40 0.219797250 ubox
33 42 0.966343968 ubox
34 40 0.357644851 ubox
34 42 0.035812474 ubox
35 40 0.583027263 ubox
35 42 0.012088008 ubox
38 60 0.007255912 ubox
39 60 0.004845481 ubox
40 58 0.114618279 ubox
41 57 0.114737019 ubox
42 56 0.114734682 ubox
42 58 0.004417730 ubox
43 55 0.114363047 ubox
43 57 0.004409460 ubox
45 54 0.114688587 ubox
45 56 0.004667496 ubox
46 53 0.114734779 ubox
46 55 0.004690941 ubox
47 52 0.111765142 ubox
47 54 0.004785561 ubox
48 53 0.004589047 ubox
57 68 0.003599066 ubox
58 67 0.003603131 ubox
59 72 0.035428319 ubox
59 74 0.009631537 ubox
60 71 0.040920319 ubox
60 73 0.010217701 ubox
60 75 0.003568965 ubox
61 70 0.041816335 ubox
61 72 0.010331069 ubox
61 74 0.003666435 ubox
62 69 0.041832899 ubox
62 71 0.010339008 ubox
62 73 0.003660916 ubox
63 68 0.041370729 ubox
63 70 0.009563246 ubox
63 72 0.003506507 ubox
69 78 0.004758113 ubox
69 82 0.015344481 ubox
69 84 0.093439198 ubox
69 86 0.954274938 ubox
69 95 0.007247498 ubox
69 98 0.006689459 ubox
69 101 0.007237199 ubox
69 104 0.003661290 ubox
70 81 0.016451172 ubox
70 83 0.100293071 ubox
70 85 0.956779478 ubox
70 87 0.011548748 ubox
70 94 0.006756686 ubox
70 97 0.006268189 ubox
70 100 0.006879405 ubox
70 103 0.003318433 ubox
71 77 0.003466701 ubox
71 80 0.018194043 ubox
71 82 0.111200900 ubox
71 84 0.961284017 ubox
72 79 0.017779014 ubox
72 81 0.112795594 ubox
72 83 0.961698556 ubox
72 85 0.145195633 ubox
72 87 0.006815725 ubox
72 96 0.003415200 ubox
72 97 0.003916383 ubox
73 80 0.112591944 ubox
73 82 0.961425130 ubox
73 84 0.157971867 ubox
74 79 0.107478725 ubox
74 81 0.952272440 ubox
74 83 0.159831485 ubox
74 85 0.025616860 ubox
74 94 0.005969384 ubox
74 96 0.003932410 ubox
75 80 0.858292262 ubox
75 82 0.159737277 ubox
75 84 0.027608951 ubox
76 81 0.155414062 ubox
76 83 0.027338467 ubox
76 85 0.003367015 ubox
76 88 0.007972532 ubox
76 89 0.011726078 ubox
76 90 0.003613374 ubox
76 92 0.003209141 ubox
76 93 0.068993347 ubox
76 94 0.004540403 ubox
76 97 0.003533289 ubox
77 81 0.004381754 ubox
77 87 0.008916982 ubox
77 88 0.012925144 ubox
77 89 0.003786301 ubox
77 92 0.079175323 ubox
77 93 0.004174671 ubox
77 96 0.004014620 ubox
77 99 0.003642422 ubox
78 91 0.080212942 ubox
79 86 0.047973667 ubox
79 95 0.022023185 ubox
79 98 0.018922639 ubox
79 101 0.013883377 ubox
79 104 0.012597141 ubox
79 107 0.004043070 ubox
80 85 0.044949052 ubox
80 87 0.005011251 ubox
80 88 0.007113530 ubox
80 89 0.018242692 ubox
80 90 0.006734706 ubox
80 94 0.021408131 ubox
80 97 0.018367921 ubox
80 100 0.013469970 ubox
80 103 0.012223945 ubox
80 106 0.003937026 ubox
82 87 0.010054827 ubox
82 88 0.007740330 ubox
82 89 0.006024529 ubox
82 90 0.003438651 ubox
82 91 0.003756823 ubox
82 92 0.006621158 ubox
82 93 0.003646181 ubox
84 89 0.004387142 ubox
84 90 0.007839489 ubox
84 91 0.004424206 ubox
84 92 0.004870135 ubox
84 93 0.006943853 ubox
86 91 0.027165685 ubox
91 95 0.042872387 ubox
91 98 0.103349115 ubox
91 101 0.045338723 ubox
91 104 0.035090106 ubox
91 107 0.010379493 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 58 0.9500000 lbox
19 56 0.9500000 lbox
20 55 0.9500000 lbox
21 54 0.9500000 lbox
22 53 0.9500000 lbox
23 52 0.9500000 lbox
24 51 0.9500000 lbox
27 48 0.9500000 lbox
28 47 0.9500000 lbox
29 46 0.9500000 lbox
30 45 0.9500000 lbox
32 43 0.9500000 lbox
33 42 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
