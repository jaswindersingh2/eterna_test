%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (907)
} def

/sequence { (\
GGAAAGCAAGAUCAGAGCCAAGCGAAAGCAGGGAAACCAAAGGACUCAAAGAUCAAGGAAAACCAAGCGUGCUACUUCGGUAGUACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.136272882 ubox
1 63 0.066221095 ubox
1 64 0.659496791 ubox
1 68 0.029518188 ubox
1 86 0.004713423 ubox
1 95 0.077654744 ubox
1 98 0.079569747 ubox
1 101 0.079314246 ubox
1 104 0.079645842 ubox
1 107 0.020110593 ubox
2 7 0.062854481 ubox
2 13 0.012266614 ubox
2 63 0.658881927 ubox
2 64 0.020654134 ubox
2 68 0.024385891 ubox
2 78 0.003430806 ubox
2 95 0.040853969 ubox
2 98 0.040078034 ubox
2 101 0.040739447 ubox
2 104 0.040591776 ubox
2 107 0.013245904 ubox
3 12 0.012127071 ubox
3 77 0.003430470 ubox
5 73 0.005019415 ubox
6 18 0.003654639 ubox
6 54 0.003622178 ubox
6 63 0.006087748 ubox
6 64 0.006757565 ubox
6 68 0.366984677 ubox
6 72 0.005330051 ubox
6 95 0.042246943 ubox
6 98 0.042232269 ubox
6 101 0.042129706 ubox
6 104 0.041262927 ubox
6 107 0.014382008 ubox
7 17 0.003700473 ubox
7 57 0.471643608 ubox
7 58 0.332530051 ubox
7 67 0.367047588 ubox
7 71 0.005338903 ubox
7 91 0.054892238 ubox
8 70 0.004798575 ubox
9 53 0.004663930 ubox
10 54 0.996964885 ubox
10 64 0.004240436 ubox
10 95 0.004036755 ubox
10 98 0.003366528 ubox
10 101 0.003409492 ubox
10 104 0.003399481 ubox
11 53 0.998405079 ubox
12 50 0.008602580 ubox
12 51 0.003836408 ubox
12 52 0.998527337 ubox
12 92 0.009232214 ubox
13 51 0.998043441 ubox
13 91 0.009818621 ubox
14 46 0.008907876 ubox
15 45 0.008957447 ubox
15 47 0.998481193 ubox
16 46 0.999072449 ubox
17 23 0.004123596 ubox
17 29 0.003952538 ubox
17 45 0.998933820 ubox
17 47 0.004871562 ubox
18 22 0.004146892 ubox
18 28 0.003956299 ubox
18 32 0.024708829 ubox
18 33 0.127235275 ubox
18 42 0.007066366 ubox
18 43 0.987052636 ubox
19 31 0.024837859 ubox
19 32 0.127603391 ubox
19 42 0.986103901 ubox
19 43 0.058139961 ubox
22 29 0.996713214 ubox
22 37 0.003371533 ubox
22 38 0.005648710 ubox
23 28 0.997355003 ubox
23 31 0.007906251 ubox
23 32 0.008087117 ubox
23 33 0.003643253 ubox
24 29 0.027887777 ubox
24 37 0.008034432 ubox
24 38 0.006909442 ubox
28 68 0.003952113 ubox
29 33 0.005803087 ubox
29 67 0.003954808 ubox
31 37 0.041345783 ubox
31 38 0.977234083 ubox
31 47 0.008348522 ubox
31 64 0.003454166 ubox
32 37 0.977609546 ubox
32 38 0.142213682 ubox
32 46 0.008380160 ubox
32 63 0.003456790 ubox
32 64 0.003544106 ubox
33 37 0.140263796 ubox
33 38 0.028036215 ubox
33 45 0.008412817 ubox
33 47 0.008173679 ubox
33 63 0.003540527 ubox
34 46 0.008303700 ubox
37 42 0.016740570 ubox
37 43 0.084744732 ubox
37 58 0.005832375 ubox
38 42 0.084509420 ubox
38 43 0.021047036 ubox
38 57 0.005840558 ubox
42 47 0.006825490 ubox
43 54 0.007731448 ubox
44 53 0.007676642 ubox
45 51 0.005825540 ubox
46 50 0.005327179 ubox
46 52 0.004041881 ubox
47 51 0.004088568 ubox
51 68 0.003803662 ubox
53 59 0.003973001 ubox
53 92 0.004354473 ubox
54 58 0.004370125 ubox
54 67 0.007121448 ubox
54 91 0.004824687 ubox
57 63 0.081531258 ubox
57 64 0.617418053 ubox
57 68 0.037178623 ubox
57 95 0.015758568 ubox
57 98 0.054310208 ubox
57 101 0.012815586 ubox
57 104 0.006017055 ubox
58 63 0.614304509 ubox
58 64 0.051719782 ubox
58 68 0.024175012 ubox
58 95 0.011962617 ubox
58 98 0.015756347 ubox
58 101 0.004561550 ubox
63 67 0.012874230 ubox
63 69 0.003314201 ubox
63 91 0.026039754 ubox
64 91 0.064439732 ubox
67 86 0.012267827 ubox
67 95 0.011990575 ubox
67 98 0.009146206 ubox
67 101 0.008552300 ubox
67 104 0.007678621 ubox
68 91 0.042440319 ubox
69 86 0.997930800 ubox
69 95 0.004683775 ubox
69 98 0.003746559 ubox
70 85 0.999082621 ubox
70 87 0.003492599 ubox
70 94 0.004073048 ubox
70 97 0.003253232 ubox
71 84 0.999687444 ubox
71 86 0.003575556 ubox
72 83 0.999957024 ubox
73 82 0.999670600 ubox
73 85 0.003233635 ubox
74 81 0.999560081 ubox
74 84 0.003576314 ubox
75 79 0.011974743 ubox
75 80 0.998692074 ubox
75 83 0.003611473 ubox
76 80 0.004044546 ubox
76 82 0.003575007 ubox
86 91 0.005782145 ubox
91 95 0.043476382 ubox
91 98 0.104053280 ubox
91 101 0.045300870 ubox
91 104 0.034779591 ubox
91 107 0.010281612 ubox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
17 45 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
57 64 0.9500000 lbox
58 63 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
