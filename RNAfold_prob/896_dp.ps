%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (896)
} def

/sequence { (\
GGAAAGGAAGCAGACAGGCAACGAACACGAGGAACACCACAGCACUGACACUGCAAGCAAAAGCAACCGUGGUCAUUCGUGACUACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.006953506 ubox
1 15 0.006267243 ubox
1 19 0.005054142 ubox
1 22 0.005156857 ubox
1 26 0.004046398 ubox
1 28 0.005075463 ubox
1 38 0.003587544 ubox
1 58 0.009760353 ubox
1 64 0.063104976 ubox
1 67 0.022495136 ubox
1 68 0.440178573 ubox
1 83 0.004459300 ubox
1 84 0.007316255 ubox
1 86 0.009815149 ubox
1 95 0.099306253 ubox
1 98 0.101867379 ubox
1 101 0.111834012 ubox
1 104 0.112645089 ubox
1 107 0.028525610 ubox
2 11 0.005839946 ubox
2 19 0.004879711 ubox
2 26 0.003434499 ubox
2 37 0.003577282 ubox
2 58 0.011577974 ubox
2 64 0.028514893 ubox
2 67 0.438542877 ubox
2 68 0.038821781 ubox
2 83 0.007713456 ubox
2 86 0.005688505 ubox
2 95 0.052383092 ubox
2 98 0.053849566 ubox
2 101 0.055777601 ubox
2 104 0.055635560 ubox
2 107 0.018169001 ubox
5 46 0.004524420 ubox
5 52 0.003744082 ubox
5 84 0.013598450 ubox
6 11 0.015309686 ubox
6 15 0.016296278 ubox
6 19 0.004568476 ubox
6 22 0.028642124 ubox
6 38 0.004384686 ubox
6 45 0.004619667 ubox
6 49 0.003308230 ubox
6 51 0.004152239 ubox
6 54 0.004470541 ubox
6 58 0.161390313 ubox
6 64 0.018338235 ubox
6 67 0.026428335 ubox
6 68 0.348901405 ubox
6 83 0.014087026 ubox
6 84 0.008428494 ubox
6 86 0.007584641 ubox
6 95 0.085807534 ubox
6 98 0.086257823 ubox
6 101 0.086066134 ubox
6 104 0.084317092 ubox
6 107 0.029392091 ubox
7 15 0.003515230 ubox
7 22 0.036466394 ubox
7 37 0.004372101 ubox
7 54 0.005840978 ubox
7 58 0.054332663 ubox
7 64 0.018660389 ubox
7 67 0.347787929 ubox
7 68 0.039010972 ubox
7 83 0.008693362 ubox
7 86 0.004833381 ubox
7 95 0.064403182 ubox
7 98 0.064282897 ubox
7 101 0.054368648 ubox
7 104 0.051701650 ubox
7 107 0.016819920 ubox
9 46 0.003270217 ubox
9 52 0.008037568 ubox
10 15 0.005234138 ubox
10 19 0.112154944 ubox
10 43 0.006441021 ubox
10 49 0.004273502 ubox
10 51 0.009019600 ubox
10 54 0.989938696 ubox
10 58 0.011558050 ubox
10 64 0.020987664 ubox
10 95 0.004309856 ubox
10 98 0.004147303 ubox
10 101 0.004037081 ubox
10 104 0.003721242 ubox
11 17 0.007952534 ubox
11 18 0.112073727 ubox
11 42 0.006452491 ubox
11 47 0.007222936 ubox
11 53 0.991028868 ubox
11 57 0.011427601 ubox
11 63 0.020877877 ubox
11 91 0.003985588 ubox
12 46 0.007220513 ubox
12 52 0.990605181 ubox
12 84 0.003611473 ubox
13 19 0.005712364 ubox
13 22 0.004839608 ubox
13 40 0.004033919 ubox
13 45 0.007153475 ubox
13 49 0.050172474 ubox
13 51 0.988744092 ubox
13 54 0.006654844 ubox
13 83 0.003732153 ubox
13 95 0.003382672 ubox
15 23 0.005384826 ubox
15 47 0.989923854 ubox
15 53 0.011923301 ubox
15 57 0.004520117 ubox
15 81 0.003406038 ubox
16 46 0.990867728 ubox
16 52 0.011969714 ubox
16 80 0.003393513 ubox
16 84 0.004086542 ubox
17 22 0.017259386 ubox
17 26 0.012408025 ubox
17 28 0.005515574 ubox
17 35 0.004239505 ubox
17 38 0.011287987 ubox
17 45 0.989475358 ubox
17 46 0.012652373 ubox
17 49 0.011005056 ubox
17 51 0.011972304 ubox
17 68 0.006054778 ubox
17 83 0.004264539 ubox
17 84 0.005382943 ubox
18 22 0.008598464 ubox
18 26 0.010500602 ubox
18 28 0.008577784 ubox
18 35 0.005966408 ubox
18 37 0.011586401 ubox
18 40 0.004705692 ubox
18 43 0.979682972 ubox
18 45 0.012709914 ubox
18 49 0.007034507 ubox
18 54 0.007740934 ubox
18 58 0.013434203 ubox
18 67 0.006031484 ubox
18 78 0.003357793 ubox
18 83 0.005579531 ubox
19 29 0.009179264 ubox
19 31 0.003758107 ubox
19 32 0.023272541 ubox
19 42 0.979143044 ubox
19 47 0.013945874 ubox
19 53 0.007736863 ubox
19 57 0.013435886 ubox
19 81 0.003180216 ubox
20 46 0.013384977 ubox
20 52 0.007276703 ubox
21 80 0.007164906 ubox
21 84 0.003454854 ubox
22 29 0.662020494 ubox
22 31 0.118308751 ubox
22 32 0.028386526 ubox
22 42 0.026176313 ubox
22 47 0.005888510 ubox
22 79 0.007577511 ubox
23 28 0.660118824 ubox
23 35 0.041482714 ubox
23 37 0.081032624 ubox
23 38 0.170988615 ubox
23 40 0.107412802 ubox
23 43 0.009539722 ubox
23 45 0.005090541 ubox
23 46 0.005263506 ubox
23 74 0.003902882 ubox
23 78 0.007574835 ubox
23 83 0.021160700 ubox
23 84 0.007918384 ubox
23 86 0.012236129 ubox
24 73 0.003174886 ubox
24 77 0.007520658 ubox
24 84 0.007468700 ubox
25 76 0.007046642 ubox
25 84 0.005921204 ubox
26 31 0.083381239 ubox
26 32 0.055214183 ubox
26 42 0.011760488 ubox
26 47 0.003387325 ubox
26 71 0.007858981 ubox
26 81 0.113271109 ubox
27 46 0.003265459 ubox
27 70 0.007930208 ubox
27 80 0.113805303 ubox
28 32 0.046657026 ubox
28 42 0.023968597 ubox
28 69 0.007942726 ubox
28 79 0.113885718 ubox
29 35 0.046010839 ubox
29 37 0.019069880 ubox
29 38 0.050915694 ubox
29 40 0.156710227 ubox
29 43 0.004462234 ubox
29 68 0.007924521 ubox
29 78 0.113851280 ubox
30 46 0.006999862 ubox
30 77 0.113545299 ubox
31 35 0.023242857 ubox
31 37 0.105528581 ubox
31 38 0.694759084 ubox
31 40 0.163622362 ubox
31 43 0.005768600 ubox
31 45 0.007278992 ubox
31 68 0.004272605 ubox
31 74 0.003535340 ubox
31 76 0.109137482 ubox
31 78 0.004106769 ubox
32 37 0.691575391 ubox
32 38 0.082561612 ubox
32 40 0.036929849 ubox
32 43 0.004058487 ubox
32 45 0.003184969 ubox
32 67 0.004262866 ubox
32 74 0.044651456 ubox
32 76 0.003759782 ubox
32 77 0.005355139 ubox
33 73 0.034343765 ubox
33 76 0.007677930 ubox
34 73 0.007106195 ubox
34 76 0.003186398 ubox
35 42 0.011912648 ubox
35 71 0.020409013 ubox
35 72 0.004795165 ubox
36 70 0.020484598 ubox
36 73 0.104645118 ubox
37 42 0.006448163 ubox
37 69 0.020400271 ubox
37 72 0.111744458 ubox
38 47 0.008462193 ubox
38 71 0.111813987 ubox
39 46 0.007706586 ubox
39 70 0.111716913 ubox
40 47 0.013741631 ubox
40 53 0.028913698 ubox
40 69 0.111456308 ubox
41 46 0.012638797 ubox
41 52 0.031014203 ubox
42 49 0.013217457 ubox
42 51 0.031823047 ubox
42 54 0.110327925 ubox
42 58 0.008054822 ubox
42 64 0.015791716 ubox
42 67 0.025048302 ubox
42 68 0.010574862 ubox
43 47 0.006232812 ubox
43 53 0.110459865 ubox
43 57 0.008061885 ubox
43 63 0.015813449 ubox
44 52 0.103520560 ubox
45 53 0.005083839 ubox
45 57 0.004524807 ubox
45 63 0.013250411 ubox
46 50 0.020213492 ubox
46 55 0.014559703 ubox
46 56 0.004413061 ubox
46 59 0.009483341 ubox
46 60 0.004908986 ubox
46 62 0.013222692 ubox
46 65 0.014168290 ubox
46 66 0.003579023 ubox
46 75 0.008024720 ubox
47 51 0.011294076 ubox
47 54 0.015679431 ubox
47 58 0.010030029 ubox
47 64 0.014409024 ubox
47 68 0.005191535 ubox
47 74 0.008596558 ubox
48 73 0.008517543 ubox
49 53 0.004329201 ubox
49 57 0.009398527 ubox
49 63 0.006211477 ubox
49 71 0.006119396 ubox
49 72 0.006633344 ubox
50 70 0.008137048 ubox
51 57 0.009479183 ubox
51 63 0.004481890 ubox
51 69 0.008260535 ubox
52 56 0.008598183 ubox
52 59 0.013268387 ubox
52 62 0.004499321 ubox
52 65 0.049816941 ubox
53 58 0.013773167 ubox
53 64 0.054357581 ubox
53 68 0.004510466 ubox
54 63 0.054418013 ubox
57 64 0.913287494 ubox
57 67 0.011781057 ubox
57 68 0.010838600 ubox
57 95 0.006981282 ubox
57 98 0.024422108 ubox
57 101 0.005862935 ubox
58 63 0.912956220 ubox
63 67 0.011701487 ubox
63 68 0.024097293 ubox
63 70 0.003468411 ubox
63 95 0.010907757 ubox
63 98 0.003592001 ubox
63 101 0.003178778 ubox
64 69 0.004171153 ubox
64 91 0.051637271 ubox
67 91 0.026996520 ubox
68 91 0.043553764 ubox
69 86 0.991427483 ubox
69 95 0.004639253 ubox
69 98 0.004196800 ubox
69 101 0.003456536 ubox
70 85 0.992518452 ubox
70 87 0.003311538 ubox
70 94 0.004047364 ubox
70 97 0.003703359 ubox
71 84 0.992884954 ubox
71 86 0.003343390 ubox
72 83 0.993398063 ubox
73 82 0.993285225 ubox
74 79 0.004982621 ubox
74 81 0.993068304 ubox
75 80 0.826338587 ubox
77 92 0.003345631 ubox
78 91 0.003372928 ubox
83 91 0.022716692 ubox
84 90 0.022333872 ubox
84 91 0.003229347 ubox
84 93 0.003786783 ubox
86 91 0.012316782 ubox
91 95 0.045995080 ubox
91 98 0.107252586 ubox
91 101 0.045475963 ubox
91 104 0.033915919 ubox
91 107 0.009995843 ubox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
17 45 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
57 64 0.9500000 lbox
58 63 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
