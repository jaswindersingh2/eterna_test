%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (506)
} def

/sequence { (\
GGAAACUAGGUCAAGGGAAGGCCAAAGUGUGGACAGUUUGGCGCAUUAAAGCAGACCCUUGUACCUAGUUACCGGUUCGCCGGUAAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.011779251 ubox
1 70 0.007228475 ubox
1 72 0.004947190 ubox
1 73 0.057876858 ubox
1 95 0.067268530 ubox
1 98 0.067683757 ubox
1 101 0.069222233 ubox
1 104 0.069532780 ubox
1 107 0.017555241 ubox
2 69 0.006278301 ubox
2 70 0.016625517 ubox
2 72 0.058674590 ubox
2 95 0.035505987 ubox
2 98 0.035626394 ubox
2 101 0.036385799 ubox
2 104 0.036247081 ubox
2 107 0.011827611 ubox
3 69 0.012392985 ubox
3 70 0.038418596 ubox
4 69 0.041614124 ubox
4 70 0.544470460 ubox
5 69 0.878812895 ubox
5 70 0.011964839 ubox
6 68 0.998352273 ubox
7 67 0.999554117 ubox
8 66 0.999687027 ubox
9 64 0.005586722 ubox
9 65 0.999972283 ubox
10 64 0.999959170 ubox
11 63 0.988190055 ubox
12 61 0.999486851 ubox
13 60 0.999329342 ubox
14 59 0.999382275 ubox
14 60 0.009364216 ubox
15 57 0.004868840 ubox
15 58 0.999918607 ubox
15 59 0.009737643 ubox
16 56 0.006817484 ubox
16 57 0.999884837 ubox
16 58 0.010676025 ubox
17 47 0.007801061 ubox
17 56 0.995504736 ubox
17 57 0.011472325 ubox
18 46 0.039025804 ubox
18 47 0.060669891 ubox
19 46 0.059692691 ubox
19 47 0.006919412 ubox
20 42 0.038686882 ubox
20 44 0.090799652 ubox
20 46 0.006569444 ubox
20 52 0.026285143 ubox
20 56 0.007558923 ubox
21 42 0.986906581 ubox
21 52 0.149805435 ubox
22 41 0.988603683 ubox
22 51 0.149545574 ubox
23 40 0.988638229 ubox
23 51 0.004704555 ubox
24 39 0.988044137 ubox
24 47 0.040857906 ubox
25 37 0.003210355 ubox
25 38 0.987163892 ubox
25 39 0.003791047 ubox
25 46 0.040108861 ubox
25 47 0.021480244 ubox
26 37 0.979341444 ubox
26 38 0.005141089 ubox
26 46 0.022884268 ubox
26 47 0.124669476 ubox
27 34 0.067692298 ubox
27 37 0.005467622 ubox
27 44 0.055471789 ubox
27 46 0.138285279 ubox
28 33 0.067381175 ubox
28 35 0.983055138 ubox
28 36 0.009273364 ubox
28 43 0.055516656 ubox
28 45 0.139402927 ubox
29 34 0.978907767 ubox
29 42 0.055561553 ubox
29 44 0.139512990 ubox
30 41 0.055485540 ubox
30 43 0.139398117 ubox
31 42 0.138459136 ubox
32 38 0.006120733 ubox
32 39 0.055370168 ubox
32 42 0.008818121 ubox
33 37 0.005503827 ubox
33 38 0.049394739 ubox
33 39 0.008934735 ubox
34 40 0.083865606 ubox
34 41 0.015830033 ubox
35 39 0.068074135 ubox
41 52 0.006652376 ubox
42 51 0.007613192 ubox
42 54 0.011332544 ubox
43 47 0.004612162 ubox
43 52 0.965836728 ubox
44 51 0.966010712 ubox
44 54 0.023635787 ubox
46 50 0.048335831 ubox
46 51 0.007121802 ubox
46 53 0.009731680 ubox
46 54 0.009523123 ubox
46 55 0.030302896 ubox
47 51 0.005338717 ubox
47 53 0.012925400 ubox
47 54 0.032638033 ubox
47 55 0.006850403 ubox
68 95 0.004853356 ubox
68 98 0.003795091 ubox
69 85 0.009185364 ubox
69 86 0.407089137 ubox
69 87 0.026674997 ubox
69 88 0.011819389 ubox
69 89 0.008120490 ubox
69 90 0.005853148 ubox
69 91 0.003900131 ubox
69 92 0.003472159 ubox
69 94 0.004886991 ubox
69 97 0.003822490 ubox
70 85 0.807518802 ubox
70 86 0.037231463 ubox
70 87 0.013536814 ubox
70 88 0.009397136 ubox
70 89 0.006776404 ubox
70 90 0.004636031 ubox
70 91 0.003897067 ubox
70 93 0.003714485 ubox
71 84 0.981713679 ubox
72 83 0.998087753 ubox
73 82 0.998288508 ubox
74 80 0.008101810 ubox
74 81 0.998793977 ubox
74 95 0.022491790 ubox
75 80 0.992624742 ubox
75 81 0.003510441 ubox
75 95 0.017289899 ubox
75 98 0.006888493 ubox
75 101 0.007472450 ubox
75 104 0.007936928 ubox
76 93 0.021670842 ubox
76 94 0.014547384 ubox
76 97 0.006755797 ubox
76 100 0.007437106 ubox
76 103 0.007905450 ubox
77 92 0.030606045 ubox
77 93 0.010950552 ubox
77 96 0.005956899 ubox
77 99 0.006972993 ubox
77 102 0.007399296 ubox
78 83 0.004528622 ubox
78 91 0.032152566 ubox
79 95 0.003375757 ubox
79 98 0.004725193 ubox
79 101 0.003990387 ubox
81 91 0.005724709 ubox
82 95 0.006490271 ubox
82 98 0.005357411 ubox
82 101 0.003847521 ubox
83 95 0.010435681 ubox
83 98 0.007155817 ubox
83 101 0.005290230 ubox
83 104 0.004401691 ubox
84 89 0.004205355 ubox
84 90 0.003887664 ubox
84 91 0.004769280 ubox
84 93 0.004696384 ubox
84 94 0.010279244 ubox
84 97 0.007100655 ubox
84 100 0.005276837 ubox
84 103 0.004376278 ubox
91 95 0.043004522 ubox
91 98 0.103692381 ubox
91 101 0.045495888 ubox
91 104 0.035214733 ubox
91 107 0.010418872 ubox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 61 0.9500000 lbox
13 60 0.9500000 lbox
14 59 0.9500000 lbox
15 58 0.9500000 lbox
16 57 0.9500000 lbox
17 56 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
