%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (184)
} def

/sequence { (\
GGAAAAAGGCAGAGCAUGUCCGGUGGAGUCCCGAAAGGAGAACAGCGAGAGAGGGCUCGGGCAAAAAGGUCUGUCUUCGGGCAGGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.037560153 ubox
1 21 0.041666311 ubox
1 62 0.007798104 ubox
1 78 0.008469443 ubox
1 82 0.026839474 ubox
1 86 0.004813391 ubox
1 95 0.066913205 ubox
1 98 0.067547000 ubox
1 101 0.069682912 ubox
1 104 0.070138202 ubox
1 107 0.017717850 ubox
2 10 0.009842533 ubox
2 20 0.041671932 ubox
2 62 0.005758768 ubox
2 71 0.004053787 ubox
2 77 0.006803759 ubox
2 78 0.017591804 ubox
2 82 0.012841752 ubox
2 95 0.035303666 ubox
2 98 0.035575588 ubox
2 101 0.036749610 ubox
2 104 0.036631402 ubox
2 107 0.011960408 ubox
3 19 0.040863932 ubox
3 70 0.004191341 ubox
3 76 0.004198624 ubox
3 77 0.016355117 ubox
4 19 0.003497730 ubox
4 76 0.008027594 ubox
5 17 0.006559028 ubox
6 17 0.009480139 ubox
6 77 0.050368525 ubox
7 17 0.006234305 ubox
7 76 0.057833045 ubox
8 15 0.016084179 ubox
8 20 0.032632550 ubox
8 21 0.018439790 ubox
8 62 0.583950208 ubox
8 75 0.059356338 ubox
8 95 0.047322492 ubox
8 98 0.047418407 ubox
8 101 0.047332274 ubox
8 104 0.047338910 ubox
8 107 0.016530615 ubox
9 15 0.040937915 ubox
9 19 0.033388980 ubox
9 20 0.018347856 ubox
9 62 0.787569163 ubox
9 74 0.059380718 ubox
9 86 0.006036502 ubox
9 95 0.006277575 ubox
9 98 0.006387759 ubox
9 101 0.006316714 ubox
9 104 0.006274597 ubox
10 14 0.040711626 ubox
10 18 0.038299460 ubox
10 59 0.046126557 ubox
10 60 0.576645220 ubox
10 61 0.786473739 ubox
10 73 0.059426094 ubox
10 85 0.006030203 ubox
10 91 0.006669148 ubox
11 17 0.037683749 ubox
11 72 0.059355785 ubox
12 58 0.992478095 ubox
12 71 0.059328219 ubox
13 57 0.995614988 ubox
13 70 0.059118567 ubox
14 56 0.995835693 ubox
14 86 0.024094574 ubox
15 53 0.006712712 ubox
15 54 0.079397592 ubox
15 55 0.991736092 ubox
15 68 0.056806498 ubox
15 69 0.005066588 ubox
15 85 0.023993507 ubox
17 50 0.009759337 ubox
17 51 0.018358349 ubox
17 52 0.795459462 ubox
17 53 0.099207859 ubox
17 54 0.113137800 ubox
17 63 0.060190310 ubox
17 64 0.008184655 ubox
17 66 0.010095709 ubox
17 67 0.007879323 ubox
17 83 0.023247141 ubox
18 62 0.064638363 ubox
18 82 0.024243797 ubox
19 39 0.003945275 ubox
19 48 0.019478578 ubox
19 49 0.021513589 ubox
19 50 0.984231938 ubox
19 51 0.025549233 ubox
19 52 0.118577035 ubox
19 61 0.064613010 ubox
19 81 0.024233952 ubox
20 38 0.004069012 ubox
20 47 0.014009714 ubox
20 49 0.987085184 ubox
20 51 0.118434923 ubox
20 53 0.003194018 ubox
20 54 0.003294278 ubox
20 60 0.064625801 ubox
20 80 0.024237286 ubox
21 37 0.004067371 ubox
21 47 0.990721303 ubox
21 49 0.029007709 ubox
21 53 0.003203112 ubox
21 59 0.064561936 ubox
21 79 0.024111385 ubox
22 46 0.991132280 ubox
22 58 0.043027575 ubox
22 62 0.056134321 ubox
22 78 0.022456344 ubox
23 43 0.011200987 ubox
23 46 0.089748446 ubox
23 56 0.010155610 ubox
23 57 0.021710894 ubox
23 62 0.010696278 ubox
23 77 0.016803007 ubox
24 33 0.005030202 ubox
24 42 0.011209036 ubox
24 44 0.989638923 ubox
24 45 0.086133698 ubox
24 47 0.021708709 ubox
24 48 0.003983911 ubox
24 55 0.009977101 ubox
24 60 0.056752510 ubox
24 61 0.008870233 ubox
25 32 0.006374407 ubox
25 43 0.990084635 ubox
25 46 0.022962579 ubox
25 56 0.004089577 ubox
25 58 0.003522339 ubox
25 75 0.009444744 ubox
25 76 0.007576850 ubox
26 31 0.006382695 ubox
26 43 0.028114997 ubox
26 46 0.004706503 ubox
26 58 0.076903794 ubox
26 74 0.004104696 ubox
26 75 0.008023163 ubox
27 57 0.083072668 ubox
27 74 0.007368961 ubox
28 43 0.031848397 ubox
28 56 0.085408007 ubox
29 38 0.018739691 ubox
29 39 0.928569025 ubox
29 40 0.050418466 ubox
29 41 0.305347742 ubox
29 42 0.024821642 ubox
29 50 0.008720547 ubox
29 52 0.003887516 ubox
29 55 0.082329328 ubox
30 37 0.019289831 ubox
30 38 0.922998035 ubox
30 40 0.316557766 ubox
30 49 0.008740015 ubox
30 51 0.003900918 ubox
30 54 0.082317537 ubox
30 55 0.023045932 ubox
31 37 0.912462873 ubox
31 38 0.372888022 ubox
31 40 0.004387404 ubox
31 49 0.003196250 ubox
31 53 0.082215236 ubox
31 54 0.023190814 ubox
32 37 0.394966773 ubox
32 38 0.026586739 ubox
32 47 0.012851688 ubox
32 49 0.006135957 ubox
32 51 0.076432537 ubox
32 53 0.023318207 ubox
33 46 0.012827872 ubox
37 43 0.010206330 ubox
37 46 0.074861635 ubox
38 43 0.009331068 ubox
38 46 0.018055739 ubox
40 46 0.010133108 ubox
44 57 0.017638112 ubox
45 56 0.021255907 ubox
45 62 0.005484631 ubox
46 51 0.004006977 ubox
46 55 0.021263580 ubox
46 59 0.004758753 ubox
46 61 0.005479422 ubox
47 58 0.010451359 ubox
47 77 0.004716682 ubox
48 57 0.010537520 ubox
48 76 0.005250037 ubox
49 56 0.010514771 ubox
49 58 0.010326426 ubox
49 75 0.005344191 ubox
50 57 0.010387598 ubox
50 74 0.005331308 ubox
51 56 0.010337880 ubox
51 78 0.008576807 ubox
52 72 0.005223608 ubox
52 77 0.008670789 ubox
53 71 0.005204954 ubox
53 76 0.008723276 ubox
54 70 0.005111301 ubox
54 75 0.008736682 ubox
55 74 0.008515217 ubox
56 68 0.005096012 ubox
56 73 0.007974342 ubox
57 67 0.004865386 ubox
58 73 0.009966004 ubox
59 72 0.016641566 ubox
59 76 0.014692420 ubox
59 95 0.029257956 ubox
59 98 0.017146493 ubox
59 101 0.004313690 ubox
59 104 0.003558413 ubox
60 70 0.003344559 ubox
60 71 0.017770661 ubox
60 75 0.015926763 ubox
60 95 0.049638534 ubox
60 98 0.009889125 ubox
60 101 0.003373895 ubox
61 70 0.018194232 ubox
61 74 0.016017673 ubox
61 86 0.004071701 ubox
61 95 0.018353269 ubox
61 98 0.003681809 ubox
62 68 0.018247084 ubox
62 69 0.018229978 ubox
62 73 0.016053302 ubox
62 85 0.004066892 ubox
62 91 0.014808317 ubox
63 72 0.015784253 ubox
68 86 0.052248482 ubox
68 95 0.023554168 ubox
68 98 0.018549029 ubox
68 101 0.015685264 ubox
68 104 0.013933417 ubox
68 107 0.004369456 ubox
69 82 0.018310217 ubox
69 86 0.994333485 ubox
69 95 0.003833129 ubox
69 98 0.003407654 ubox
70 81 0.018345543 ubox
70 85 0.996279830 ubox
70 94 0.003336188 ubox
71 80 0.018371413 ubox
71 84 0.997634713 ubox
72 79 0.018345876 ubox
72 83 0.997472639 ubox
72 87 0.006738762 ubox
73 78 0.018206774 ubox
73 82 0.997708078 ubox
73 86 0.008157049 ubox
74 80 0.011900523 ubox
74 81 0.996663817 ubox
74 85 0.008150796 ubox
74 92 0.003464961 ubox
75 79 0.016289169 ubox
75 80 0.993117550 ubox
75 81 0.028630322 ubox
75 84 0.008157399 ubox
75 91 0.004022308 ubox
76 80 0.026020966 ubox
76 83 0.007702561 ubox
76 90 0.004080797 ubox
76 93 0.004273788 ubox
77 85 0.004779423 ubox
77 89 0.004132203 ubox
77 92 0.007208118 ubox
78 84 0.010086613 ubox
78 85 0.005568011 ubox
78 91 0.008292551 ubox
79 86 0.011382883 ubox
79 95 0.004677518 ubox
79 98 0.004657243 ubox
79 101 0.003797056 ubox
79 104 0.003320798 ubox
80 86 0.009120313 ubox
80 95 0.004187586 ubox
80 98 0.004120423 ubox
80 101 0.003535745 ubox
81 86 0.004316841 ubox
82 91 0.005431436 ubox
84 95 0.008193536 ubox
84 98 0.006340015 ubox
84 101 0.005290242 ubox
84 104 0.004277483 ubox
85 95 0.003513347 ubox
86 91 0.009826394 ubox
91 95 0.043531537 ubox
91 98 0.104345267 ubox
91 101 0.045503914 ubox
91 104 0.034995809 ubox
91 107 0.010345869 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
31 37 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
