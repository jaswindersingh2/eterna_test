%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (126)
} def

/sequence { (\
GGAAACGAGGAAUGCAGAGCCCACCAAAGCCGUAAACGAGCAGGAGGAGCACGAGCAUGGCCAAAAAUAGACGCUUUCGAGCGUCUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.298953360 ubox
1 22 0.004341912 ubox
1 25 0.004096367 ubox
1 61 0.004681690 ubox
1 62 0.135155329 ubox
1 68 0.006986584 ubox
1 95 0.064978560 ubox
1 98 0.064415534 ubox
1 101 0.066769228 ubox
1 104 0.067200265 ubox
1 107 0.016981322 ubox
2 6 0.044409211 ubox
2 21 0.004333067 ubox
2 24 0.004087819 ubox
2 61 0.135072435 ubox
2 62 0.007110273 ubox
2 68 0.007237104 ubox
2 95 0.034438676 ubox
2 98 0.033662820 ubox
2 101 0.034486239 ubox
2 104 0.034371163 ubox
2 107 0.011217842 ubox
3 68 0.011457936 ubox
4 58 0.004303314 ubox
4 68 0.007063566 ubox
5 58 0.027480001 ubox
5 68 0.004708342 ubox
6 10 0.006011106 ubox
6 59 0.028676713 ubox
6 60 0.015743879 ubox
6 91 0.037230118 ubox
7 22 0.003703088 ubox
7 58 0.018815304 ubox
7 61 0.040742404 ubox
7 62 0.124752478 ubox
7 95 0.039792210 ubox
7 98 0.040430765 ubox
7 101 0.039334208 ubox
7 104 0.039100578 ubox
7 107 0.014801206 ubox
8 58 0.014338150 ubox
8 68 0.004238894 ubox
9 15 0.003637388 ubox
9 21 0.005073974 ubox
9 22 0.008820717 ubox
9 25 0.010204916 ubox
9 56 0.003176600 ubox
9 58 0.004215551 ubox
9 61 0.165562978 ubox
9 62 0.959607111 ubox
9 95 0.009634064 ubox
9 98 0.009879943 ubox
9 101 0.010076133 ubox
9 104 0.010037427 ubox
9 107 0.003501530 ubox
10 20 0.005072918 ubox
10 21 0.008820497 ubox
10 24 0.010199662 ubox
10 58 0.004773483 ubox
10 61 0.959266015 ubox
10 62 0.025313140 ubox
10 95 0.008817703 ubox
10 98 0.008542341 ubox
10 101 0.008647506 ubox
10 104 0.006337114 ubox
11 58 0.018050919 ubox
12 58 0.986315072 ubox
13 18 0.006566677 ubox
13 57 0.996409108 ubox
13 59 0.004997822 ubox
14 20 0.011064704 ubox
14 56 0.999703333 ubox
15 19 0.011005106 ubox
15 53 0.006668033 ubox
15 55 0.998611201 ubox
17 50 0.018689784 ubox
17 52 0.869457504 ubox
19 50 0.997959320 ubox
19 52 0.011125115 ubox
20 47 0.022013529 ubox
20 49 0.999103204 ubox
21 46 0.022067296 ubox
21 47 0.995929301 ubox
21 49 0.004899491 ubox
22 46 0.994835392 ubox
22 47 0.076273664 ubox
22 49 0.003368019 ubox
24 43 0.022701937 ubox
24 44 0.995276351 ubox
24 46 0.011798335 ubox
24 47 0.024719637 ubox
25 43 0.996711808 ubox
25 44 0.040960560 ubox
25 46 0.024713644 ubox
29 37 0.008135792 ubox
29 41 0.996956037 ubox
29 61 0.016248401 ubox
30 38 0.019940259 ubox
30 40 0.996913707 ubox
30 44 0.006941028 ubox
30 60 0.016340706 ubox
31 38 0.992902993 ubox
31 40 0.029821408 ubox
31 43 0.006963190 ubox
31 59 0.016340050 ubox
32 37 0.967763583 ubox
32 41 0.009941058 ubox
32 58 0.016184947 ubox
33 38 0.011432747 ubox
33 39 0.008298878 ubox
33 40 0.009783370 ubox
33 57 0.015706442 ubox
37 53 0.015942620 ubox
38 52 0.015991812 ubox
40 50 0.016277145 ubox
41 49 0.016287562 ubox
49 56 0.004014286 ubox
50 55 0.004014409 ubox
53 62 0.004099482 ubox
55 61 0.005635748 ubox
56 60 0.005613765 ubox
58 96 0.018985668 ubox
58 99 0.009901644 ubox
59 95 0.035579896 ubox
59 98 0.018561147 ubox
59 101 0.004033040 ubox
59 104 0.003403478 ubox
60 95 0.020376331 ubox
60 98 0.004039899 ubox
61 91 0.006684201 ubox
62 91 0.018348574 ubox
63 68 0.006224855 ubox
64 68 0.004499854 ubox
66 86 0.003477479 ubox
67 86 0.004834276 ubox
68 87 0.937825115 ubox
68 88 0.043272532 ubox
68 89 0.015858182 ubox
68 90 0.010977906 ubox
68 91 0.005209152 ubox
68 92 0.005632637 ubox
68 93 0.004076044 ubox
69 86 0.994105580 ubox
70 85 0.999944208 ubox
71 84 0.999865821 ubox
72 83 0.999958067 ubox
73 82 0.999979138 ubox
74 81 0.999682108 ubox
75 79 0.028243619 ubox
75 80 0.924333946 ubox
75 81 0.005292102 ubox
76 80 0.028529940 ubox
91 95 0.043148981 ubox
91 98 0.103807725 ubox
91 101 0.045452834 ubox
91 104 0.035108114 ubox
91 107 0.010383305 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
68 87 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
