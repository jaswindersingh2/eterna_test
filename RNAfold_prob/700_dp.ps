%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (700)
} def

/sequence { (\
GGAAAUACAGCACAAAGAGCAGUAAAGUCAGCACAAAAAGAGCAGACACACAGGAGAAAACACCAGUGACCGUUAUUCGUAACGGUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.012065646 ubox
1 8 0.128223867 ubox
1 11 0.026729353 ubox
1 13 0.032755106 ubox
1 20 0.014490313 ubox
1 29 0.063225595 ubox
1 32 0.004855746 ubox
1 47 0.004784681 ubox
1 49 0.008367692 ubox
1 51 0.006846032 ubox
1 61 0.003712995 ubox
1 64 0.036754233 ubox
1 71 0.006528097 ubox
1 86 0.005908342 ubox
1 95 0.232907197 ubox
1 98 0.234398563 ubox
1 101 0.239164459 ubox
1 104 0.240163351 ubox
1 107 0.060647343 ubox
2 6 0.008561565 ubox
2 8 0.034229448 ubox
2 11 0.029553890 ubox
2 13 0.008521777 ubox
2 20 0.007101653 ubox
2 23 0.003280062 ubox
2 28 0.062109356 ubox
2 29 0.043365041 ubox
2 49 0.005293267 ubox
2 51 0.003364376 ubox
2 63 0.036608187 ubox
2 70 0.006587642 ubox
2 86 0.008165188 ubox
2 95 0.122393896 ubox
2 98 0.122770977 ubox
2 101 0.125344428 ubox
2 104 0.124889012 ubox
2 107 0.040761754 ubox
3 23 0.004498196 ubox
3 28 0.042603612 ubox
3 86 0.008163704 ubox
4 23 0.006973647 ubox
4 28 0.003675791 ubox
4 86 0.007533487 ubox
5 23 0.034352914 ubox
5 86 0.006530058 ubox
6 15 0.005728538 ubox
6 16 0.004067197 ubox
6 18 0.004302285 ubox
6 21 0.006643231 ubox
6 22 0.034623115 ubox
6 24 0.853500366 ubox
6 25 0.040439981 ubox
6 26 0.014944340 ubox
6 68 0.009785748 ubox
6 87 0.015265200 ubox
6 88 0.014138611 ubox
6 89 0.014723110 ubox
6 90 0.024289262 ubox
6 91 0.011977261 ubox
6 92 0.018326856 ubox
6 93 0.019302602 ubox
6 94 0.014325595 ubox
6 96 0.014334041 ubox
6 97 0.014278256 ubox
6 99 0.014524217 ubox
6 100 0.014316882 ubox
6 102 0.012566880 ubox
6 103 0.012479704 ubox
6 105 0.012183821 ubox
6 106 0.012153946 ubox
7 23 0.905492466 ubox
7 67 0.011747132 ubox
7 86 0.010198312 ubox
8 17 0.022042127 ubox
8 19 0.010214699 ubox
8 22 0.907384491 ubox
8 66 0.011928146 ubox
8 68 0.005664287 ubox
8 85 0.008660939 ubox
8 91 0.046572641 ubox
9 23 0.008487823 ubox
9 67 0.004734949 ubox
10 20 0.965871595 ubox
10 23 0.042338401 ubox
10 32 0.005116120 ubox
10 43 0.009069180 ubox
10 95 0.017629618 ubox
10 98 0.017103293 ubox
10 101 0.017691923 ubox
10 104 0.017586773 ubox
10 107 0.006271926 ubox
11 17 0.033148907 ubox
11 19 0.966601265 ubox
11 22 0.043358099 ubox
11 31 0.005114397 ubox
11 42 0.009064944 ubox
11 68 0.026077180 ubox
11 91 0.021793009 ubox
12 23 0.064949082 ubox
12 67 0.026122188 ubox
13 17 0.219183390 ubox
13 19 0.027134588 ubox
13 22 0.068212767 ubox
13 40 0.004746437 ubox
13 66 0.026092440 ubox
13 91 0.014364810 ubox
14 23 0.004288912 ubox
15 23 0.003367480 ubox
16 23 0.010476265 ubox
17 23 0.004299049 ubox
17 29 0.006680611 ubox
17 34 0.007020634 ubox
17 95 0.014382862 ubox
17 98 0.014897639 ubox
17 101 0.016026740 ubox
17 104 0.016143810 ubox
17 107 0.005651152 ubox
18 23 0.010174754 ubox
18 28 0.006165198 ubox
19 28 0.006655225 ubox
19 32 0.015342861 ubox
19 43 0.005055153 ubox
19 95 0.014511305 ubox
19 98 0.026241663 ubox
19 101 0.026610494 ubox
19 104 0.026791328 ubox
19 107 0.009359375 ubox
20 27 0.008242759 ubox
20 31 0.015344362 ubox
20 42 0.005056283 ubox
20 54 0.003670302 ubox
20 68 0.003478623 ubox
20 91 0.017371286 ubox
21 67 0.003282087 ubox
22 29 0.012904427 ubox
22 32 0.004801200 ubox
22 47 0.007649793 ubox
22 49 0.017993917 ubox
22 51 0.020595179 ubox
22 95 0.093942326 ubox
22 98 0.094449060 ubox
22 101 0.095934772 ubox
22 104 0.093744919 ubox
22 107 0.032616517 ubox
23 31 0.004744918 ubox
23 46 0.007437511 ubox
23 48 0.018723067 ubox
23 50 0.019903902 ubox
23 87 0.006129870 ubox
23 88 0.006414624 ubox
23 89 0.006060704 ubox
23 90 0.006135982 ubox
23 91 0.006228486 ubox
23 92 0.006618847 ubox
23 93 0.007324304 ubox
23 94 0.090665912 ubox
23 96 0.006249751 ubox
23 97 0.091191987 ubox
23 99 0.006352180 ubox
23 100 0.092623298 ubox
23 102 0.006201282 ubox
23 103 0.090508335 ubox
23 105 0.005195988 ubox
23 106 0.031842841 ubox
24 86 0.003882810 ubox
25 86 0.003776918 ubox
26 86 0.003766916 ubox
27 32 0.003632460 ubox
27 34 0.010596208 ubox
27 43 0.007856448 ubox
27 47 0.992247001 ubox
27 49 0.003198114 ubox
27 95 0.013556494 ubox
27 98 0.013219744 ubox
27 101 0.013270054 ubox
27 104 0.013052984 ubox
27 107 0.004551297 ubox
28 33 0.009699454 ubox
28 41 0.010464825 ubox
28 42 0.006106164 ubox
28 46 0.993708009 ubox
28 92 0.015883072 ubox
28 94 0.012043049 ubox
28 97 0.011928891 ubox
28 100 0.011986263 ubox
28 103 0.011793238 ubox
28 106 0.004156383 ubox
29 40 0.011145457 ubox
29 45 0.990437684 ubox
29 91 0.016892642 ubox
31 43 0.993680357 ubox
32 40 0.021432974 ubox
32 42 0.994111486 ubox
32 45 0.003732703 ubox
34 40 0.645318377 ubox
34 42 0.013073334 ubox
40 47 0.006900977 ubox
42 47 0.006066854 ubox
45 95 0.003868375 ubox
45 98 0.003780808 ubox
45 101 0.003834608 ubox
45 104 0.003720596 ubox
47 68 0.038064588 ubox
47 91 0.004121935 ubox
48 67 0.048965849 ubox
49 53 0.004727927 ubox
49 54 0.008166363 ubox
49 56 0.010206018 ubox
49 66 0.049948895 ubox
49 68 0.985748997 ubox
49 91 0.004628871 ubox
50 67 0.990009741 ubox
51 56 0.008753531 ubox
51 66 0.986955077 ubox
51 68 0.027808895 ubox
52 67 0.026120505 ubox
53 61 0.022783337 ubox
53 63 0.035472284 ubox
53 64 0.991159733 ubox
53 98 0.003307051 ubox
53 101 0.010359052 ubox
53 104 0.004253069 ubox
54 61 0.027980198 ubox
54 63 0.991719924 ubox
54 64 0.052584933 ubox
54 101 0.005722541 ubox
56 61 0.404166233 ubox
56 63 0.040956658 ubox
56 64 0.008253082 ubox
56 98 0.007852577 ubox
56 101 0.004364768 ubox
60 67 0.021032397 ubox
61 66 0.021722584 ubox
61 68 0.011177924 ubox
62 67 0.009348130 ubox
63 91 0.008515972 ubox
64 91 0.020041904 ubox
66 95 0.007010277 ubox
66 98 0.008314951 ubox
66 101 0.006647778 ubox
66 104 0.005416936 ubox
67 87 0.016899099 ubox
67 88 0.021843091 ubox
67 89 0.010997137 ubox
67 90 0.004691851 ubox
67 94 0.006347384 ubox
67 96 0.008135057 ubox
67 97 0.006618857 ubox
67 99 0.006172275 ubox
67 100 0.005358600 ubox
67 102 0.004779521 ubox
67 103 0.004439161 ubox
67 105 0.003395145 ubox
68 86 0.013792450 ubox
68 95 0.010292424 ubox
68 98 0.007800119 ubox
68 101 0.006026788 ubox
68 104 0.004061660 ubox
69 86 0.968963446 ubox
70 85 0.999591804 ubox
71 84 0.999929187 ubox
72 83 0.999913450 ubox
72 98 0.003329836 ubox
73 81 0.009533650 ubox
73 82 0.999037458 ubox
73 97 0.003314753 ubox
74 79 0.008485405 ubox
74 81 0.983445531 ubox
74 82 0.006992219 ubox
74 87 0.003216184 ubox
75 80 0.886549442 ubox
75 86 0.003242052 ubox
76 81 0.013750140 ubox
76 93 0.003665986 ubox
77 81 0.004053628 ubox
77 92 0.004238631 ubox
78 91 0.004316550 ubox
85 95 0.006920704 ubox
85 98 0.004154276 ubox
86 90 0.003786830 ubox
86 91 0.007125675 ubox
86 92 0.006567651 ubox
86 93 0.008390034 ubox
86 94 0.008039772 ubox
86 97 0.004825143 ubox
86 100 0.003377533 ubox
91 95 0.055020671 ubox
91 98 0.120096341 ubox
91 101 0.046202432 ubox
91 104 0.029645397 ubox
91 107 0.008600247 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
