%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:31 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (823)
} def

/sequence { (\
GGAAAAGAUUCACCUGAAAAGGAAAAAAGAAAGAGACAAAAGUCACUUUCACCCAGGAGAAUCAAAAAAUGCGAAUUCGUUCGCAUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.006159612 ubox
1 53 0.003496412 ubox
1 54 0.009919895 ubox
1 63 0.004550718 ubox
1 70 0.005210736 ubox
1 95 0.067448473 ubox
1 98 0.067880400 ubox
1 101 0.069522754 ubox
1 104 0.069736058 ubox
1 107 0.017605609 ubox
2 10 0.006102616 ubox
2 11 0.010589314 ubox
2 52 0.003475928 ubox
2 53 0.009851373 ubox
2 63 0.007720032 ubox
2 95 0.035580293 ubox
2 98 0.035712111 ubox
2 101 0.036477339 ubox
2 104 0.036328003 ubox
2 107 0.011853889 ubox
3 9 0.005826804 ubox
3 10 0.010502834 ubox
3 62 0.006883167 ubox
4 9 0.008757913 ubox
7 63 0.998113731 ubox
7 95 0.008010515 ubox
8 62 0.999110840 ubox
9 26 0.004088069 ubox
9 61 0.998641044 ubox
9 93 0.010472416 ubox
10 25 0.004626007 ubox
10 58 0.003843741 ubox
10 60 0.999174343 ubox
10 92 0.011397263 ubox
11 57 0.004015381 ubox
11 59 0.996812569 ubox
11 91 0.011470613 ubox
13 22 0.125431159 ubox
13 56 0.005816246 ubox
13 57 0.989979397 ubox
14 21 0.126104689 ubox
14 22 0.007425066 ubox
14 56 0.991937681 ubox
14 57 0.004497779 ubox
15 20 0.124920854 ubox
15 21 0.007711233 ubox
15 22 0.003645611 ubox
15 24 0.004650148 ubox
15 51 0.003509422 ubox
15 55 0.991438155 ubox
15 56 0.004395965 ubox
16 50 0.004863418 ubox
16 52 0.007990482 ubox
16 53 0.025362626 ubox
16 54 0.984187971 ubox
17 49 0.005268178 ubox
18 48 0.004540302 ubox
18 49 0.011061000 ubox
19 47 0.003596643 ubox
19 48 0.012100474 ubox
19 49 0.006852631 ubox
20 47 0.012294860 ubox
20 48 0.007125058 ubox
20 49 0.003303426 ubox
21 46 0.012367962 ubox
21 47 0.007061512 ubox
21 49 0.005295060 ubox
21 50 0.038113818 ubox
21 52 0.045320754 ubox
21 53 0.815815689 ubox
21 54 0.099570477 ubox
22 44 0.009004989 ubox
22 46 0.007018890 ubox
22 48 0.004388640 ubox
22 49 0.034669278 ubox
22 50 0.067826081 ubox
22 52 0.815161235 ubox
22 53 0.114042928 ubox
22 54 0.007426936 ubox
23 43 0.008634398 ubox
23 47 0.003174859 ubox
23 48 0.029998550 ubox
23 49 0.065398679 ubox
24 47 0.017700685 ubox
24 48 0.050896996 ubox
24 49 0.009661899 ubox
25 47 0.029992023 ubox
25 48 0.008404043 ubox
25 49 0.026747174 ubox
26 47 0.005576903 ubox
26 48 0.021300182 ubox
26 49 0.038767300 ubox
27 47 0.012603243 ubox
27 48 0.043312451 ubox
27 49 0.008188705 ubox
28 47 0.044897500 ubox
28 48 0.006982013 ubox
28 49 0.007495782 ubox
29 37 0.005265703 ubox
29 44 0.007357103 ubox
29 46 0.045503702 ubox
29 47 0.004029882 ubox
29 48 0.007175307 ubox
29 49 0.012263084 ubox
29 50 0.992682476 ubox
29 52 0.007269283 ubox
29 53 0.007696298 ubox
30 43 0.006991023 ubox
30 47 0.006055595 ubox
30 48 0.011505634 ubox
30 49 0.994709294 ubox
31 47 0.009213645 ubox
31 48 0.995240328 ubox
31 49 0.003461981 ubox
32 47 0.997131286 ubox
32 48 0.003798021 ubox
33 44 0.027352220 ubox
33 46 0.994377303 ubox
33 47 0.003356681 ubox
33 48 0.003970363 ubox
34 43 0.027315942 ubox
34 47 0.004245049 ubox
35 44 0.996516389 ubox
35 46 0.003202460 ubox
36 43 0.998809255 ubox
37 42 0.996987574 ubox
49 58 0.003169373 ubox
50 57 0.003705787 ubox
52 56 0.011289376 ubox
52 57 0.037946591 ubox
53 57 0.010378753 ubox
54 59 0.003556564 ubox
56 63 0.004660883 ubox
56 98 0.004260433 ubox
57 63 0.005568110 ubox
58 62 0.004859000 ubox
59 95 0.004348886 ubox
62 92 0.009948631 ubox
63 91 0.011896106 ubox
64 86 0.005727164 ubox
65 70 0.003658196 ubox
65 86 0.009346905 ubox
66 86 0.012957397 ubox
67 86 0.018788846 ubox
68 86 0.043751227 ubox
69 86 0.945266344 ubox
70 85 0.986801699 ubox
70 87 0.004176136 ubox
71 80 0.005202541 ubox
71 84 0.999925164 ubox
72 79 0.005811018 ubox
72 83 0.999944238 ubox
73 78 0.005909038 ubox
73 81 0.003547018 ubox
73 82 0.999860158 ubox
74 80 0.018836256 ubox
74 81 0.982511604 ubox
75 80 0.773482736 ubox
75 81 0.038459765 ubox
79 95 0.003841284 ubox
80 93 0.004322832 ubox
81 92 0.006103530 ubox
82 91 0.006605607 ubox
86 90 0.003562694 ubox
86 91 0.004503028 ubox
86 92 0.006229009 ubox
86 93 0.007944478 ubox
86 94 0.004151735 ubox
91 95 0.043030248 ubox
91 98 0.103758096 ubox
91 101 0.045524811 ubox
91 104 0.035233616 ubox
91 107 0.010424351 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
