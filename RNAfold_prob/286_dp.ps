%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (286)
} def

/sequence { (\
GGAAAAAACUAGAAGUGCAAAAGCACAGACAAGUGAAACCGACGGAAGACGGACACAAGUCAACUAGACAUCGACUUCGGUCGAUGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.067732766 ubox
1 10 0.084397713 ubox
1 40 0.026757783 ubox
1 61 0.003326371 ubox
1 64 0.016539569 ubox
1 65 0.026617074 ubox
1 69 0.003241135 ubox
1 95 0.084962532 ubox
1 98 0.087014076 ubox
1 101 0.087539820 ubox
1 104 0.087451713 ubox
1 107 0.022092369 ubox
2 9 0.090902061 ubox
2 10 0.009302696 ubox
2 39 0.026756031 ubox
2 61 0.004316654 ubox
2 64 0.028057542 ubox
2 65 0.004138146 ubox
2 95 0.044638747 ubox
2 98 0.045884645 ubox
2 101 0.045559905 ubox
2 104 0.045343319 ubox
2 107 0.014793523 ubox
3 10 0.015776436 ubox
3 60 0.003892688 ubox
3 65 0.004159710 ubox
4 10 0.011407415 ubox
4 65 0.003824667 ubox
5 10 0.012372889 ubox
5 65 0.003818294 ubox
6 10 0.006466392 ubox
6 65 0.003816018 ubox
7 65 0.003842390 ubox
8 16 0.008694717 ubox
8 34 0.028573732 ubox
8 60 0.007999032 ubox
9 15 0.009599471 ubox
9 28 0.006382478 ubox
9 33 0.028982229 ubox
9 59 0.008520005 ubox
9 67 0.876190704 ubox
9 91 0.075548661 ubox
10 14 0.010817459 ubox
10 27 0.009546843 ubox
10 32 0.028144335 ubox
10 58 0.008221492 ubox
10 62 0.003950538 ubox
10 63 0.003754735 ubox
10 66 0.881507246 ubox
10 67 0.005370704 ubox
10 68 0.003845071 ubox
10 87 0.008876254 ubox
10 88 0.008168932 ubox
10 89 0.008968076 ubox
10 90 0.073202768 ubox
10 91 0.008098491 ubox
10 92 0.010627328 ubox
10 93 0.009632924 ubox
10 94 0.007625320 ubox
10 96 0.009071594 ubox
10 97 0.008787386 ubox
10 99 0.009093157 ubox
10 100 0.008769006 ubox
10 102 0.009112449 ubox
10 103 0.008806602 ubox
10 105 0.009132167 ubox
10 106 0.008809821 ubox
11 65 0.881543015 ubox
12 26 0.004117109 ubox
12 30 0.020108417 ubox
12 61 0.005162821 ubox
12 64 0.876387824 ubox
12 65 0.005389509 ubox
12 95 0.035560015 ubox
12 98 0.035564917 ubox
12 101 0.036122988 ubox
12 104 0.036198633 ubox
12 107 0.012455916 ubox
13 60 0.004908640 ubox
13 65 0.004853315 ubox
14 65 0.006532931 ubox
15 24 0.010744362 ubox
15 26 0.997855629 ubox
15 64 0.005361517 ubox
15 95 0.005221257 ubox
15 98 0.005259374 ubox
15 101 0.005347104 ubox
15 104 0.005083364 ubox
16 23 0.010633513 ubox
16 25 0.999124979 ubox
16 27 0.003297641 ubox
16 63 0.004862946 ubox
16 94 0.004680945 ubox
16 97 0.004700147 ubox
16 100 0.004779332 ubox
16 103 0.004542222 ubox
17 24 0.999866238 ubox
17 26 0.003604404 ubox
18 23 0.998428033 ubox
27 65 0.009689981 ubox
28 60 0.003948269 ubox
28 61 0.995313301 ubox
28 64 0.006538724 ubox
29 60 0.996399148 ubox
30 35 0.004189481 ubox
30 45 0.003679399 ubox
30 59 0.995445100 ubox
32 65 0.004462901 ubox
33 39 0.004989550 ubox
33 40 0.003244411 ubox
33 43 0.010254845 ubox
33 50 0.004346793 ubox
33 54 0.008899835 ubox
33 56 0.996280039 ubox
33 64 0.004611369 ubox
34 38 0.004527199 ubox
34 41 0.005800089 ubox
34 42 0.009986373 ubox
34 49 0.004326745 ubox
34 53 0.008859389 ubox
34 55 0.997242344 ubox
34 57 0.050037218 ubox
34 58 0.003401107 ubox
34 62 0.004298882 ubox
34 63 0.003614464 ubox
35 40 0.007983101 ubox
35 54 0.996294996 ubox
35 56 0.050573437 ubox
35 61 0.005420340 ubox
36 60 0.005364968 ubox
39 45 0.009772520 ubox
39 51 0.009655133 ubox
39 52 0.998276238 ubox
40 44 0.009743521 ubox
40 45 0.005560170 ubox
40 48 0.006655777 ubox
40 51 0.998803943 ubox
40 52 0.004327146 ubox
40 83 0.009006326 ubox
41 50 0.995784876 ubox
41 61 0.006761357 ubox
41 82 0.009801115 ubox
42 60 0.006768500 ubox
42 81 0.009802058 ubox
43 48 0.785543659 ubox
43 51 0.031576233 ubox
43 59 0.006757450 ubox
43 67 0.003951493 ubox
43 80 0.009793040 ubox
44 50 0.036225418 ubox
44 64 0.004508503 ubox
44 65 0.011092416 ubox
45 50 0.004999107 ubox
45 64 0.011714702 ubox
45 78 0.009792764 ubox
46 77 0.009799532 ubox
47 65 0.003409262 ubox
47 76 0.009794596 ubox
48 61 0.026702882 ubox
48 64 0.003501018 ubox
48 75 0.009772678 ubox
49 60 0.026736368 ubox
50 59 0.026738948 ubox
50 73 0.009592629 ubox
51 56 0.003328811 ubox
51 72 0.009527422 ubox
52 61 0.026777628 ubox
52 71 0.007551467 ubox
53 60 0.027254739 ubox
54 59 0.027269639 ubox
56 67 0.003560771 ubox
58 65 0.008486057 ubox
59 64 0.008740925 ubox
59 69 0.017339444 ubox
59 95 0.011928267 ubox
59 98 0.005870996 ubox
60 68 0.019327640 ubox
60 94 0.011520689 ubox
60 97 0.005674866 ubox
61 67 0.019902393 ubox
61 91 0.003389226 ubox
64 91 0.244353270 ubox
65 87 0.012150935 ubox
65 88 0.021465181 ubox
65 89 0.018079968 ubox
65 90 0.238360001 ubox
65 91 0.015034829 ubox
65 92 0.015048805 ubox
65 93 0.004455575 ubox
67 95 0.006954120 ubox
67 98 0.005409069 ubox
67 101 0.004809301 ubox
67 104 0.004178934 ubox
69 86 0.994644817 ubox
69 91 0.004571712 ubox
70 85 0.998841091 ubox
71 84 0.999583336 ubox
72 83 0.999916461 ubox
73 82 0.999919232 ubox
74 81 0.999643053 ubox
75 79 0.011787056 ubox
75 80 0.998648237 ubox
76 80 0.004029117 ubox
85 96 0.007568038 ubox
86 95 0.012425951 ubox
86 98 0.004992865 ubox
86 101 0.003955733 ubox
86 104 0.003365041 ubox
91 95 0.042274615 ubox
91 98 0.101188218 ubox
91 101 0.044048521 ubox
91 104 0.033808687 ubox
91 107 0.009993559 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
