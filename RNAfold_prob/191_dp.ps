%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (191)
} def

/sequence { (\
GGAAACGGGUGUCCCAGCUCAGCGGCCGCUCGAGCCACGGACCACUGCUGACAGGGUCAGGGAGUCCCAACACGCUUCGGCGUGUUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.301643078 ubox
1 14 0.004294692 ubox
1 36 0.011623557 ubox
1 52 0.009327007 ubox
1 67 0.014317251 ubox
1 68 0.011459147 ubox
1 86 0.003660724 ubox
1 95 0.066298720 ubox
1 98 0.065583568 ubox
1 101 0.066799406 ubox
1 104 0.067111357 ubox
1 107 0.016943945 ubox
2 6 0.044836320 ubox
2 13 0.004340350 ubox
2 35 0.011584950 ubox
2 66 0.014424809 ubox
2 67 0.010844899 ubox
2 68 0.003697955 ubox
2 86 0.005980024 ubox
2 95 0.035138664 ubox
2 98 0.034249089 ubox
2 101 0.034956106 ubox
2 104 0.034829584 ubox
2 107 0.011364779 ubox
3 12 0.004245270 ubox
3 65 0.013686276 ubox
3 85 0.003870769 ubox
3 86 0.005391770 ubox
4 49 0.008526860 ubox
4 86 0.006197108 ubox
5 65 0.004236388 ubox
5 85 0.004784016 ubox
5 86 0.003365330 ubox
6 32 0.012972168 ubox
6 47 0.025587430 ubox
6 62 0.004976505 ubox
6 64 0.004756454 ubox
6 84 0.004248205 ubox
6 91 0.037876584 ubox
7 15 0.020324658 ubox
7 31 0.013368678 ubox
7 46 0.025874595 ubox
7 67 0.038720412 ubox
7 68 0.997218376 ubox
7 95 0.003573387 ubox
7 98 0.003842993 ubox
7 101 0.003769442 ubox
7 104 0.003691604 ubox
8 14 0.020352513 ubox
8 30 0.013367992 ubox
8 45 0.025854619 ubox
8 46 0.010093601 ubox
8 66 0.038863800 ubox
8 67 0.998284358 ubox
8 68 0.016277885 ubox
9 13 0.020023997 ubox
9 29 0.013377802 ubox
9 38 0.003724353 ubox
9 43 0.010980688 ubox
9 45 0.011366287 ubox
9 65 0.037274175 ubox
9 66 0.997832721 ubox
9 67 0.016012278 ubox
10 28 0.013369146 ubox
10 37 0.003738183 ubox
10 44 0.011627992 ubox
10 59 0.008928549 ubox
10 64 0.050143097 ubox
10 96 0.003174175 ubox
11 27 0.013208547 ubox
11 36 0.003739614 ubox
11 42 0.028640371 ubox
11 43 0.008475051 ubox
11 58 0.009236233 ubox
11 65 0.039408340 ubox
11 66 0.005617772 ubox
11 95 0.003700247 ubox
12 41 0.029795855 ubox
12 62 0.004751898 ubox
12 63 0.995667939 ubox
12 64 0.007020648 ubox
12 94 0.003497490 ubox
13 25 0.011874053 ubox
13 40 0.029775509 ubox
13 56 0.009386381 ubox
13 61 0.006305263 ubox
13 62 0.999105530 ubox
14 24 0.011817502 ubox
14 25 0.005517553 ubox
14 39 0.029685458 ubox
14 40 0.003432968 ubox
14 55 0.009395462 ubox
14 60 0.006627587 ubox
14 61 0.999096224 ubox
14 62 0.006052705 ubox
15 22 0.009026451 ubox
15 24 0.005615747 ubox
15 39 0.011441026 ubox
15 54 0.009379841 ubox
15 60 0.997299512 ubox
15 61 0.007107418 ubox
16 57 0.008178105 ubox
17 23 0.028544364 ubox
17 26 0.006174379 ubox
17 35 0.993683446 ubox
17 36 0.068397253 ubox
17 38 0.006526149 ubox
17 52 0.008594257 ubox
17 57 0.019779295 ubox
17 58 0.011034119 ubox
18 22 0.028376714 ubox
18 25 0.006196167 ubox
18 34 0.998402691 ubox
18 54 0.005450220 ubox
18 55 0.010384359 ubox
18 56 0.022565376 ubox
19 24 0.005622940 ubox
19 32 0.005683776 ubox
19 33 0.998250504 ubox
19 51 0.021205681 ubox
19 53 0.003352149 ubox
19 54 0.006493013 ubox
19 55 0.015829005 ubox
20 32 0.997976790 ubox
20 39 0.009794610 ubox
20 47 0.005871726 ubox
20 50 0.025813722 ubox
20 54 0.009303055 ubox
21 30 0.991511798 ubox
21 46 0.006502382 ubox
21 49 0.026949669 ubox
22 29 0.997694577 ubox
22 30 0.009792704 ubox
22 31 0.027193013 ubox
22 38 0.028791875 ubox
22 45 0.006572425 ubox
22 48 0.026982292 ubox
22 52 0.004574922 ubox
23 28 0.996289313 ubox
23 32 0.004043187 ubox
23 39 0.003553401 ubox
23 47 0.026978140 ubox
23 50 0.004870633 ubox
24 29 0.028521884 ubox
24 30 0.008966675 ubox
24 31 0.006977675 ubox
24 36 0.045139681 ubox
24 43 0.012603941 ubox
24 46 0.024656871 ubox
24 49 0.004873583 ubox
25 29 0.008944985 ubox
25 30 0.004916885 ubox
25 35 0.045184274 ubox
25 42 0.012708258 ubox
25 45 0.024576745 ubox
25 48 0.004877762 ubox
26 34 0.044811977 ubox
26 40 0.017934184 ubox
26 47 0.004864436 ubox
27 32 0.036327464 ubox
27 34 0.005749523 ubox
27 39 0.018027781 ubox
28 35 0.007256180 ubox
28 38 0.017151288 ubox
28 42 0.015768340 ubox
28 43 0.009180396 ubox
29 34 0.007564191 ubox
29 40 0.006848045 ubox
30 37 0.004553660 ubox
30 39 0.003649500 ubox
30 40 0.014057028 ubox
30 41 0.013666507 ubox
31 39 0.017093497 ubox
31 40 0.013764317 ubox
32 38 0.016996949 ubox
35 39 0.005572642 ubox
35 62 0.004364270 ubox
36 40 0.005000079 ubox
36 60 0.007903060 ubox
36 61 0.005220721 ubox
36 62 0.003506977 ubox
38 47 0.012295176 ubox
38 60 0.036916640 ubox
39 45 0.003514927 ubox
39 46 0.012415242 ubox
39 58 0.058265698 ubox
39 67 0.015258961 ubox
40 45 0.012340031 ubox
40 57 0.030639093 ubox
40 58 0.995567811 ubox
40 66 0.015360171 ubox
41 57 0.998134572 ubox
41 65 0.015379393 ubox
42 55 0.003748993 ubox
42 56 0.998891962 ubox
42 64 0.015295876 ubox
43 54 0.004189172 ubox
43 55 0.998011699 ubox
43 56 0.003460635 ubox
43 62 0.003888038 ubox
44 65 0.007741755 ubox
45 50 0.005330299 ubox
45 54 0.996736357 ubox
45 60 0.004101857 ubox
45 61 0.007872887 ubox
45 62 0.005841720 ubox
45 64 0.008346828 ubox
46 51 0.007821715 ubox
46 53 0.997651830 ubox
46 59 0.004267581 ubox
46 60 0.003474009 ubox
46 61 0.005300864 ubox
46 62 0.011830336 ubox
46 63 0.007347651 ubox
47 52 0.991748893 ubox
47 58 0.004224152 ubox
48 54 0.005248080 ubox
48 56 0.004745545 ubox
48 60 0.029599520 ubox
48 61 0.004587626 ubox
49 53 0.004765827 ubox
49 55 0.004703877 ubox
49 59 0.033550344 ubox
50 58 0.034302301 ubox
51 57 0.034266209 ubox
52 56 0.033929625 ubox
54 68 0.012240896 ubox
55 67 0.012254469 ubox
56 66 0.012245039 ubox
58 64 0.011347149 ubox
60 68 0.021384473 ubox
61 66 0.003217266 ubox
61 67 0.021813966 ubox
61 68 0.016739099 ubox
62 66 0.021470193 ubox
62 67 0.016705501 ubox
65 92 0.003758569 ubox
66 91 0.003999750 ubox
68 91 0.006134651 ubox
69 85 0.017001575 ubox
69 86 0.903963064 ubox
70 85 0.988969676 ubox
70 86 0.023481953 ubox
71 84 0.999726407 ubox
72 83 0.999725095 ubox
73 82 0.999948679 ubox
74 81 0.999950408 ubox
75 79 0.011567530 ubox
75 80 0.999137119 ubox
76 80 0.003707113 ubox
83 96 0.007979293 ubox
84 95 0.014452287 ubox
84 98 0.005486732 ubox
84 101 0.004354181 ubox
84 104 0.003838658 ubox
85 91 0.003281231 ubox
85 92 0.008870660 ubox
85 93 0.005902563 ubox
85 94 0.015799681 ubox
85 97 0.005973788 ubox
85 100 0.004739606 ubox
85 103 0.004185216 ubox
86 90 0.006076779 ubox
86 91 0.013461621 ubox
86 92 0.011199724 ubox
86 93 0.019344930 ubox
86 94 0.005944987 ubox
86 96 0.007240124 ubox
86 97 0.003922213 ubox
86 99 0.005759673 ubox
86 102 0.005095290 ubox
91 95 0.042920356 ubox
91 98 0.103580198 ubox
91 101 0.045483077 ubox
91 104 0.035230218 ubox
91 107 0.010423830 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
