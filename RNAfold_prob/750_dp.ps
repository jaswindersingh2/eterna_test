%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (750)
} def

/sequence { (\
GGAAAGACGCGGCAAAGGCGGGUCAAGAGGCGGCGAAAAGGCGGCUCAGAGGCGACGAAAGACGGCUCGAUGGCCUUCGGGCCAUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.005244250 ubox
1 24 0.012635740 ubox
1 47 0.010901350 ubox
1 68 0.007412276 ubox
1 86 0.012948978 ubox
1 95 0.242587098 ubox
1 98 0.244098606 ubox
1 101 0.249654203 ubox
1 104 0.250772787 ubox
1 107 0.063313605 ubox
2 23 0.011568893 ubox
2 24 0.038836698 ubox
2 46 0.004854327 ubox
2 47 0.011434535 ubox
2 67 0.003378073 ubox
2 68 0.008940203 ubox
2 85 0.004176111 ubox
2 86 0.013990716 ubox
2 95 0.127958527 ubox
2 98 0.128406938 ubox
2 101 0.131143092 ubox
2 104 0.130642583 ubox
2 107 0.042629316 ubox
3 23 0.038340449 ubox
3 46 0.008225680 ubox
3 67 0.006517136 ubox
3 85 0.010196089 ubox
5 23 0.015242212 ubox
6 23 0.003918215 ubox
6 24 0.996456963 ubox
6 47 0.005197577 ubox
6 95 0.009453236 ubox
6 98 0.009527049 ubox
6 101 0.009507995 ubox
6 104 0.009320488 ubox
6 107 0.003251377 ubox
7 23 0.997675578 ubox
7 46 0.005152500 ubox
8 20 0.062432985 ubox
8 21 0.007105434 ubox
8 22 0.997481005 ubox
9 19 0.066338427 ubox
9 23 0.003549876 ubox
9 45 0.005898901 ubox
10 17 0.004788794 ubox
10 18 0.066204817 ubox
10 20 0.963499113 ubox
10 21 0.253990805 ubox
10 22 0.003700400 ubox
10 44 0.005896545 ubox
11 19 0.934482806 ubox
11 24 0.006196390 ubox
12 19 0.348021444 ubox
12 23 0.006229856 ubox
12 42 0.005894562 ubox
13 17 0.787481405 ubox
13 18 0.418493191 ubox
13 22 0.006233626 ubox
13 41 0.005892402 ubox
18 34 0.004522680 ubox
19 33 0.004522773 ubox
19 35 0.003848541 ubox
20 34 0.003843997 ubox
20 95 0.006178838 ubox
21 95 0.006006900 ubox
21 98 0.003581077 ubox
21 101 0.003633946 ubox
21 104 0.003623191 ubox
22 31 0.005631016 ubox
22 95 0.007557259 ubox
22 98 0.007284609 ubox
22 101 0.007384391 ubox
22 104 0.007330677 ubox
23 30 0.005799436 ubox
23 92 0.013064081 ubox
23 94 0.006984907 ubox
23 97 0.006873839 ubox
23 100 0.006983153 ubox
23 103 0.006934294 ubox
24 29 0.005838741 ubox
24 91 0.014594297 ubox
27 47 0.979945921 ubox
27 68 0.009614486 ubox
27 86 0.005052509 ubox
27 95 0.013093551 ubox
27 98 0.013135068 ubox
27 101 0.013388082 ubox
27 104 0.013403845 ubox
27 107 0.004679943 ubox
28 46 0.978064305 ubox
28 67 0.009610971 ubox
28 85 0.004928277 ubox
29 45 0.965611604 ubox
29 46 0.186877628 ubox
29 47 0.059824001 ubox
29 66 0.009586685 ubox
29 83 0.005578122 ubox
29 95 0.006028436 ubox
29 98 0.006038175 ubox
29 101 0.006150433 ubox
29 104 0.006111980 ubox
30 42 0.004130411 ubox
30 45 0.258535109 ubox
30 46 0.007033444 ubox
30 82 0.005586542 ubox
31 41 0.004126102 ubox
31 43 0.952660870 ubox
31 44 0.301829481 ubox
31 64 0.009556772 ubox
31 81 0.005582874 ubox
32 42 0.941796535 ubox
32 45 0.003610591 ubox
32 63 0.009479785 ubox
32 83 0.003188176 ubox
33 42 0.335151385 ubox
33 82 0.003189771 ubox
34 40 0.928023219 ubox
34 41 0.364504242 ubox
34 43 0.004174502 ubox
34 61 0.006085602 ubox
34 79 0.005547127 ubox
34 81 0.003185742 ubox
35 42 0.004276958 ubox
35 78 0.005557725 ubox
36 77 0.005081664 ubox
38 77 0.003518438 ubox
39 76 0.005690746 ubox
40 56 0.005725441 ubox
40 75 0.006364708 ubox
41 56 0.004345222 ubox
41 74 0.006368244 ubox
42 54 0.007776280 ubox
42 73 0.006365617 ubox
43 53 0.007844091 ubox
44 53 0.005186473 ubox
44 71 0.005962223 ubox
45 51 0.007708151 ubox
45 52 0.005337205 ubox
46 50 0.006947572 ubox
46 51 0.004906674 ubox
46 70 0.006117109 ubox
46 92 0.009033688 ubox
47 69 0.007258981 ubox
47 91 0.012532526 ubox
49 68 0.997952989 ubox
50 67 0.999263254 ubox
51 66 0.999261852 ubox
51 67 0.020358543 ubox
51 68 0.006457040 ubox
52 66 0.027478673 ubox
53 64 0.999105858 ubox
53 65 0.029998501 ubox
54 63 0.996437313 ubox
56 61 0.786183572 ubox
56 64 0.013660778 ubox
56 65 0.003582694 ubox
57 63 0.014889273 ubox
57 68 0.003446577 ubox
58 67 0.003394166 ubox
61 86 0.004720199 ubox
62 85 0.004692934 ubox
64 83 0.005182167 ubox
65 82 0.005189326 ubox
66 81 0.005189379 ubox
67 80 0.005186091 ubox
67 88 0.003534887 ubox
67 92 0.003888834 ubox
68 79 0.005188841 ubox
68 91 0.005066926 ubox
69 78 0.005189312 ubox
69 86 0.998203631 ubox
70 77 0.005117015 ubox
70 85 0.999334680 ubox
71 84 0.999464935 ubox
72 83 0.999945788 ubox
73 82 0.999953656 ubox
74 80 0.011626951 ubox
74 81 0.999877982 ubox
75 79 0.016314577 ubox
75 80 0.999053358 ubox
75 81 0.003222607 ubox
76 80 0.004105973 ubox
85 92 0.009971548 ubox
86 91 0.013656655 ubox
91 95 0.054608106 ubox
91 98 0.119606721 ubox
91 101 0.046270013 ubox
91 104 0.029959153 ubox
91 107 0.008720638 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
