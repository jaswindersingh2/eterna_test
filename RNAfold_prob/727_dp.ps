%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (727)
} def

/sequence { (\
GGAAAGCAGUGGCAAGGGCAGUGCAACAGGCUGGAAAAACGAGGCUGAGAGGCAGGGAAACGUGGCUCUGAAUGCUUCGGCAUUCAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.006063088 ubox
1 24 0.005940060 ubox
1 27 0.025449375 ubox
1 31 0.008179476 ubox
1 32 0.008438502 ubox
1 68 0.003388451 ubox
1 69 0.004932950 ubox
1 85 0.016739152 ubox
1 95 0.241385269 ubox
1 98 0.242887002 ubox
1 101 0.248410866 ubox
1 104 0.249537719 ubox
1 107 0.063002430 ubox
2 24 0.003318019 ubox
2 27 0.015667203 ubox
2 31 0.009317788 ubox
2 68 0.005519180 ubox
2 84 0.012483544 ubox
2 85 0.020767788 ubox
2 95 0.127420606 ubox
2 98 0.127864188 ubox
2 101 0.130589492 ubox
2 104 0.130097534 ubox
2 107 0.042451381 ubox
3 22 0.005215456 ubox
3 67 0.003991144 ubox
3 69 0.004284363 ubox
3 83 0.009527176 ubox
3 84 0.018874662 ubox
4 69 0.003950733 ubox
4 83 0.013402044 ubox
5 32 0.034148173 ubox
5 46 0.005522496 ubox
5 69 0.004059141 ubox
6 13 0.012682934 ubox
6 19 0.008512065 ubox
6 24 0.997547032 ubox
6 31 0.036059566 ubox
6 45 0.005696311 ubox
6 81 0.008256729 ubox
6 95 0.006964771 ubox
6 98 0.007925384 ubox
6 101 0.008155018 ubox
6 104 0.008034312 ubox
7 12 0.012674330 ubox
7 18 0.008514866 ubox
7 23 0.998687509 ubox
7 30 0.036010692 ubox
7 33 0.005822442 ubox
7 44 0.005691514 ubox
7 47 0.004883065 ubox
7 80 0.008237362 ubox
8 22 0.996475715 ubox
8 32 0.005854309 ubox
8 46 0.004896841 ubox
9 19 0.011475989 ubox
9 22 0.005719746 ubox
9 24 0.005698085 ubox
9 27 0.034268633 ubox
9 31 0.005839678 ubox
9 45 0.004897617 ubox
9 78 0.003289071 ubox
9 95 0.009305799 ubox
9 98 0.009779839 ubox
9 101 0.009906585 ubox
9 104 0.009472183 ubox
9 107 0.003319666 ubox
10 15 0.006825321 ubox
10 18 0.011433080 ubox
10 20 0.991178345 ubox
10 21 0.029653503 ubox
10 23 0.005574072 ubox
10 25 0.003742499 ubox
10 26 0.031757540 ubox
10 28 0.004679070 ubox
10 30 0.005647519 ubox
10 33 0.003354477 ubox
10 41 0.004696370 ubox
10 44 0.004840240 ubox
10 94 0.009098318 ubox
10 96 0.007597064 ubox
10 97 0.008619129 ubox
10 99 0.007158255 ubox
10 100 0.008746838 ubox
10 102 0.006972019 ubox
10 103 0.008338360 ubox
10 105 0.005778807 ubox
11 19 0.963317591 ubox
11 24 0.003754446 ubox
11 27 0.004861440 ubox
11 32 0.005674489 ubox
11 40 0.004885786 ubox
11 76 0.004326642 ubox
11 95 0.009064307 ubox
11 98 0.008684233 ubox
11 101 0.008479497 ubox
11 104 0.006522783 ubox
12 19 0.262577811 ubox
12 22 0.003285329 ubox
12 24 0.042167069 ubox
12 31 0.005970598 ubox
12 75 0.004424382 ubox
13 17 0.811759318 ubox
13 18 0.355700847 ubox
13 21 0.003607305 ubox
13 23 0.042340414 ubox
13 30 0.005971404 ubox
13 74 0.004423688 ubox
13 91 0.005199722 ubox
14 22 0.039600687 ubox
14 73 0.004003704 ubox
15 22 0.005760967 ubox
16 27 0.004577240 ubox
17 24 0.004346120 ubox
18 24 0.011528342 ubox
19 23 0.011469152 ubox
19 33 0.011494746 ubox
20 32 0.011606062 ubox
21 31 0.011615206 ubox
21 95 0.003823184 ubox
21 98 0.003902364 ubox
21 101 0.003780948 ubox
21 104 0.003597592 ubox
22 30 0.011481700 ubox
22 94 0.003724593 ubox
22 97 0.003604869 ubox
22 100 0.003487510 ubox
22 103 0.003311898 ubox
24 29 0.003519318 ubox
24 91 0.004105083 ubox
27 33 0.014642249 ubox
27 47 0.988190809 ubox
27 91 0.013346221 ubox
28 32 0.011895890 ubox
28 46 0.992555625 ubox
29 45 0.992833505 ubox
29 46 0.036386988 ubox
29 95 0.004626400 ubox
29 98 0.003993857 ubox
29 101 0.003720549 ubox
29 104 0.003409367 ubox
30 45 0.044429019 ubox
30 81 0.009437609 ubox
30 98 0.003632210 ubox
31 43 0.992563282 ubox
31 44 0.047550630 ubox
31 80 0.009456691 ubox
31 91 0.012682046 ubox
32 38 0.003245301 ubox
32 39 0.005137437 ubox
32 41 0.165470187 ubox
32 42 0.975569350 ubox
32 43 0.043193287 ubox
32 79 0.005646990 ubox
32 86 0.063693680 ubox
32 87 0.012324391 ubox
32 88 0.006845410 ubox
32 89 0.003209844 ubox
32 90 0.010765687 ubox
32 96 0.005751466 ubox
32 99 0.004931707 ubox
32 102 0.004485611 ubox
32 105 0.003362318 ubox
33 40 0.336318033 ubox
33 78 0.003663191 ubox
33 85 0.069545975 ubox
33 95 0.006096609 ubox
33 98 0.005226488 ubox
33 101 0.004756923 ubox
33 104 0.003665563 ubox
34 40 0.906371536 ubox
34 84 0.068552915 ubox
34 85 0.075416994 ubox
35 83 0.065981859 ubox
35 84 0.075752762 ubox
36 83 0.071088260 ubox
36 84 0.004338846 ubox
37 83 0.005179773 ubox
40 79 0.107634036 ubox
41 78 0.107957873 ubox
42 77 0.107913738 ubox
43 76 0.107904542 ubox
44 75 0.108019226 ubox
45 74 0.107858853 ubox
46 71 0.065768833 ubox
46 72 0.016981537 ubox
47 69 0.003281729 ubox
47 95 0.004656154 ubox
47 98 0.004618819 ubox
47 101 0.004648922 ubox
47 104 0.004570545 ubox
48 69 0.853908283 ubox
49 68 0.999045035 ubox
50 67 0.999669676 ubox
51 66 0.999663624 ubox
51 67 0.007770478 ubox
51 68 0.003233234 ubox
52 63 0.003257880 ubox
52 66 0.011787097 ubox
53 62 0.003357329 ubox
53 64 0.999709773 ubox
53 65 0.010770483 ubox
54 63 0.998174969 ubox
55 61 0.077113195 ubox
55 63 0.005750381 ubox
56 61 0.990690529 ubox
57 61 0.011799334 ubox
66 91 0.003382236 ubox
67 90 0.003396144 ubox
67 92 0.004935854 ubox
68 91 0.006622359 ubox
69 86 0.480691796 ubox
69 87 0.022091451 ubox
69 88 0.006060747 ubox
69 89 0.004367010 ubox
69 90 0.005616352 ubox
70 84 0.003498223 ubox
70 85 0.992512057 ubox
71 84 0.993193139 ubox
72 83 0.993015304 ubox
73 82 0.993670609 ubox
74 81 0.994109118 ubox
75 79 0.011480866 ubox
75 80 0.993292786 ubox
76 80 0.003682917 ubox
80 95 0.003506232 ubox
83 93 0.017960428 ubox
84 92 0.023040246 ubox
85 91 0.024500717 ubox
91 95 0.054475204 ubox
91 98 0.119402219 ubox
91 101 0.046246810 ubox
91 104 0.030018572 ubox
91 107 0.008740685 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
48 69 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
