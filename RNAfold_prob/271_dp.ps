%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (271)
} def

/sequence { (\
GGAAAAAAGAUCAAGAUCGAAAGAUCAGAGAAGACGAGCAGGCGAAAGGCUGAGUCGGCUCAAGAUCAAAGCUAGUUCGCUAGCUUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.027547928 ubox
1 18 0.006349154 ubox
1 67 0.013953243 ubox
1 86 0.003600106 ubox
1 95 0.071488572 ubox
1 98 0.071962245 ubox
1 101 0.074173763 ubox
1 104 0.074107642 ubox
1 107 0.018669370 ubox
2 11 0.024434608 ubox
2 12 0.046602987 ubox
2 17 0.004247177 ubox
2 18 0.014426819 ubox
2 66 0.008603630 ubox
2 67 0.022276937 ubox
2 86 0.006099877 ubox
2 95 0.037297717 ubox
2 98 0.037463158 ubox
2 101 0.038684765 ubox
2 104 0.038109692 ubox
2 107 0.012434027 ubox
3 11 0.044966367 ubox
3 17 0.013636839 ubox
3 66 0.020837242 ubox
3 85 0.004325909 ubox
3 86 0.005365355 ubox
4 11 0.005461207 ubox
4 85 0.003215487 ubox
4 86 0.004950732 ubox
5 11 0.003374444 ubox
5 86 0.004948826 ubox
6 11 0.003648325 ubox
6 86 0.004952345 ubox
7 86 0.005058771 ubox
8 17 0.003771863 ubox
8 85 0.003185313 ubox
8 86 0.004172334 ubox
9 18 0.077241090 ubox
9 26 0.041252051 ubox
9 67 0.971069727 ubox
9 95 0.018142643 ubox
9 98 0.014121660 ubox
9 101 0.014220734 ubox
9 104 0.014197200 ubox
9 107 0.004955749 ubox
10 17 0.076293930 ubox
10 25 0.041292377 ubox
10 66 0.972006769 ubox
11 16 0.069711481 ubox
11 20 0.039847579 ubox
11 24 0.041277217 ubox
11 29 0.012715506 ubox
11 31 0.008964859 ubox
11 65 0.972026177 ubox
11 92 0.049433703 ubox
11 93 0.004618088 ubox
11 96 0.003164233 ubox
11 99 0.003208723 ubox
11 102 0.003178334 ubox
12 19 0.042609164 ubox
12 23 0.041248197 ubox
12 28 0.013652018 ubox
12 30 0.009564500 ubox
12 64 0.971106954 ubox
12 91 0.052622221 ubox
15 26 0.987585373 ubox
15 61 0.003344769 ubox
15 67 0.020304699 ubox
15 95 0.005305773 ubox
15 98 0.004289240 ubox
15 101 0.004324688 ubox
15 104 0.004327022 ubox
16 25 0.988558161 ubox
16 66 0.020317921 ubox
17 24 0.988682662 ubox
17 65 0.020310754 ubox
17 92 0.013895981 ubox
18 23 0.988506367 ubox
18 64 0.020293392 ubox
18 91 0.014815108 ubox
19 26 0.017477590 ubox
19 95 0.005029330 ubox
19 98 0.005041516 ubox
19 101 0.005134736 ubox
19 104 0.005098129 ubox
20 25 0.015987045 ubox
23 67 0.139161515 ubox
24 66 0.139307500 ubox
25 65 0.139300065 ubox
26 64 0.139069685 ubox
27 60 0.009791827 ubox
28 35 0.014067016 ubox
28 59 0.010432289 ubox
28 61 0.991195994 ubox
28 67 0.008933753 ubox
29 60 0.992249134 ubox
29 66 0.008890689 ubox
30 35 0.012003618 ubox
30 59 0.991992000 ubox
30 61 0.068289929 ubox
30 67 0.009074737 ubox
31 60 0.055673611 ubox
31 66 0.008880963 ubox
32 60 0.057493159 ubox
33 56 0.990774816 ubox
33 59 0.068872437 ubox
33 61 0.016700481 ubox
33 67 0.003933355 ubox
34 55 0.990695402 ubox
34 60 0.015976163 ubox
34 66 0.003884818 ubox
35 54 0.987457596 ubox
35 57 0.105145223 ubox
35 58 0.007559158 ubox
35 64 0.003190897 ubox
36 55 0.007187627 ubox
36 56 0.106937234 ubox
36 61 0.073943547 ubox
36 86 0.025775433 ubox
37 51 0.145394742 ubox
37 55 0.106392357 ubox
37 60 0.074028405 ubox
37 85 0.027079515 ubox
38 50 0.149878789 ubox
38 51 0.034741771 ubox
38 55 0.008977064 ubox
38 59 0.074052071 ubox
38 84 0.027252570 ubox
39 48 0.015667432 ubox
39 49 0.149060923 ubox
39 52 0.925569599 ubox
39 54 0.014346415 ubox
39 58 0.073707849 ubox
39 83 0.027111605 ubox
40 51 0.929205441 ubox
41 50 0.924152793 ubox
41 51 0.322626779 ubox
41 56 0.071962391 ubox
41 81 0.024841498 ubox
42 50 0.341635759 ubox
42 55 0.073231515 ubox
42 80 0.027208885 ubox
43 48 0.909126157 ubox
43 49 0.356039972 ubox
43 54 0.073256374 ubox
43 57 0.003362854 ubox
43 79 0.027264535 ubox
44 50 0.004235314 ubox
44 51 0.003246819 ubox
44 56 0.003370001 ubox
44 78 0.027259804 ubox
45 51 0.006234657 ubox
45 55 0.003188296 ubox
45 77 0.027031889 ubox
46 51 0.031490549 ubox
46 76 0.025230228 ubox
47 51 0.006747019 ubox
48 73 0.026306712 ubox
49 72 0.027189840 ubox
50 71 0.027223715 ubox
51 62 0.004812125 ubox
51 68 0.005144416 ubox
51 70 0.026143143 ubox
52 61 0.006819818 ubox
52 67 0.007580872 ubox
53 60 0.006858637 ubox
53 66 0.006576899 ubox
54 59 0.006807163 ubox
54 66 0.022979619 ubox
54 67 0.010224716 ubox
55 65 0.026498463 ubox
56 64 0.026621404 ubox
64 95 0.007376116 ubox
66 87 0.007371337 ubox
66 88 0.007768437 ubox
66 89 0.022146931 ubox
66 90 0.006038072 ubox
66 92 0.027576166 ubox
67 91 0.029530688 ubox
68 85 0.004071067 ubox
68 86 0.051451103 ubox
69 85 0.039545319 ubox
69 86 0.926194819 ubox
70 81 0.008063543 ubox
70 85 0.990432449 ubox
70 86 0.020663587 ubox
71 80 0.008369021 ubox
71 84 0.999529668 ubox
71 85 0.003245551 ubox
72 79 0.008361873 ubox
72 83 0.999573915 ubox
73 82 0.999273811 ubox
74 81 0.998641194 ubox
75 80 0.990402177 ubox
85 90 0.003470434 ubox
85 91 0.003384351 ubox
85 92 0.009145482 ubox
85 93 0.006075284 ubox
85 94 0.006159037 ubox
86 90 0.005517018 ubox
86 91 0.012665502 ubox
86 92 0.010277985 ubox
86 93 0.012272576 ubox
86 94 0.005212420 ubox
86 96 0.004581965 ubox
86 97 0.003430134 ubox
86 99 0.003638157 ubox
86 102 0.003223180 ubox
91 95 0.043123656 ubox
91 98 0.103790629 ubox
91 101 0.045449955 ubox
91 104 0.035101389 ubox
91 107 0.010383026 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
