%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (856)
} def

/sequence { (\
GGAAAACAUUGACAUCAAAAGGAAAAAACAAAGAGUCAAAAGACACUUUGACCGAUGACAAUGAAAAAUUGCCGAUUCGUCGGCAAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.031344221 ubox
1 13 0.004529433 ubox
1 53 0.004996494 ubox
1 69 0.025521784 ubox
1 70 0.008049752 ubox
1 95 0.067373673 ubox
1 98 0.067795523 ubox
1 101 0.069326884 ubox
1 104 0.069648792 ubox
1 107 0.017584850 ubox
2 7 0.008930833 ubox
2 52 0.004975645 ubox
2 69 0.014250752 ubox
2 70 0.010193282 ubox
2 95 0.035557224 ubox
2 98 0.035677423 ubox
2 101 0.036437314 ubox
2 104 0.036306653 ubox
2 107 0.011846647 ubox
3 69 0.012823959 ubox
3 70 0.007575137 ubox
4 10 0.003703699 ubox
4 69 0.009284764 ubox
4 70 0.004666097 ubox
5 69 0.005918055 ubox
5 70 0.007156823 ubox
6 69 0.009590740 ubox
7 21 0.003180825 ubox
7 57 0.017422762 ubox
7 63 0.993482721 ubox
7 91 0.004493783 ubox
8 56 0.017500443 ubox
8 62 0.997978223 ubox
9 18 0.009787561 ubox
9 39 0.009653638 ubox
9 55 0.017501882 ubox
9 61 0.998050279 ubox
9 97 0.004411954 ubox
9 100 0.003920126 ubox
9 103 0.003914860 ubox
9 106 0.003941270 ubox
10 17 0.011243256 ubox
10 38 0.011064546 ubox
10 54 0.017471134 ubox
10 60 0.998505041 ubox
10 96 0.005238075 ubox
10 99 0.004689660 ubox
10 102 0.004690606 ubox
10 105 0.004724606 ubox
11 16 0.011493190 ubox
11 37 0.011304502 ubox
11 53 0.017292248 ubox
11 59 0.997123545 ubox
11 95 0.005340717 ubox
11 98 0.004786404 ubox
11 101 0.004789103 ubox
11 104 0.004824223 ubox
12 36 0.011302732 ubox
13 21 0.006738833 ubox
13 22 0.005658777 ubox
13 35 0.011270473 ubox
13 57 0.991754753 ubox
13 63 0.004650896 ubox
14 56 0.993264882 ubox
14 62 0.004633425 ubox
15 22 0.008770422 ubox
15 23 0.022986371 ubox
15 34 0.010616616 ubox
15 51 0.006672562 ubox
15 54 0.004305184 ubox
15 55 0.992970886 ubox
15 58 0.102552286 ubox
15 61 0.003183681 ubox
15 64 0.008044338 ubox
15 92 0.003246485 ubox
16 21 0.020663424 ubox
16 22 0.027899023 ubox
16 33 0.010736454 ubox
16 50 0.007002713 ubox
16 54 0.991667213 ubox
16 57 0.103478430 ubox
16 63 0.008594777 ubox
16 91 0.003405213 ubox
17 49 0.007083612 ubox
17 56 0.099142110 ubox
17 62 0.008232003 ubox
18 48 0.005823384 ubox
18 49 0.011070018 ubox
18 56 0.012867048 ubox
19 47 0.004071727 ubox
19 48 0.012108474 ubox
19 49 0.019236170 ubox
20 47 0.012332575 ubox
20 48 0.018936369 ubox
20 49 0.009456809 ubox
21 29 0.148949443 ubox
21 46 0.012439654 ubox
21 47 0.018467774 ubox
21 48 0.006331385 ubox
21 49 0.014856866 ubox
21 52 0.042459990 ubox
21 53 0.809459978 ubox
21 59 0.003816057 ubox
22 29 0.071993282 ubox
22 46 0.018311412 ubox
22 48 0.010937022 ubox
22 49 0.012588158 ubox
22 52 0.808717691 ubox
22 53 0.056008351 ubox
23 47 0.007793529 ubox
23 48 0.011069524 ubox
23 49 0.008230025 ubox
24 47 0.006555193 ubox
24 48 0.006960973 ubox
24 49 0.022505298 ubox
25 47 0.004127523 ubox
25 48 0.017554874 ubox
25 49 0.049996905 ubox
26 47 0.010123434 ubox
26 48 0.038583572 ubox
26 49 0.028897092 ubox
27 47 0.021133947 ubox
27 48 0.022762663 ubox
27 49 0.020696459 ubox
28 36 0.006734297 ubox
28 47 0.012989219 ubox
28 48 0.014972438 ubox
28 49 0.012967511 ubox
29 33 0.016312750 ubox
29 35 0.008077334 ubox
29 50 0.966524737 ubox
29 57 0.007862639 ubox
30 48 0.006234626 ubox
30 49 0.970679976 ubox
30 56 0.007793445 ubox
31 47 0.005890048 ubox
31 48 0.971853576 ubox
31 49 0.008274717 ubox
32 47 0.973590387 ubox
32 48 0.007390561 ubox
32 49 0.020930945 ubox
33 46 0.970808058 ubox
33 47 0.005563644 ubox
33 48 0.022454523 ubox
33 53 0.158925843 ubox
34 47 0.022857630 ubox
35 44 0.972394763 ubox
35 46 0.022388453 ubox
35 52 0.217577508 ubox
35 53 0.010554481 ubox
36 43 0.974797416 ubox
36 45 0.021531310 ubox
36 51 0.219024503 ubox
37 42 0.973316566 ubox
37 50 0.219162900 ubox
38 49 0.216378582 ubox
39 47 0.003683385 ubox
39 48 0.212802939 ubox
39 49 0.032968622 ubox
40 47 0.192765866 ubox
40 48 0.046722978 ubox
41 47 0.057478872 ubox
41 48 0.004234835 ubox
42 46 0.064906620 ubox
42 47 0.005301438 ubox
46 91 0.003270494 ubox
47 87 0.010105535 ubox
47 90 0.003164049 ubox
48 86 0.011450821 ubox
49 85 0.011954309 ubox
50 84 0.012165494 ubox
52 83 0.020062516 ubox
53 82 0.020123271 ubox
54 81 0.020124894 ubox
55 80 0.020122146 ubox
56 61 0.003288919 ubox
56 79 0.020105342 ubox
56 99 0.003659906 ubox
57 78 0.020102402 ubox
57 98 0.003874548 ubox
58 77 0.019926373 ubox
59 71 0.019368000 ubox
60 70 0.019427465 ubox
61 69 0.019510192 ubox
62 68 0.019501705 ubox
62 93 0.003851622 ubox
62 96 0.003651131 ubox
63 95 0.005237974 ubox
64 69 0.008756703 ubox
64 70 0.008312735 ubox
65 69 0.008268739 ubox
65 70 0.005474342 ubox
69 85 0.018762261 ubox
69 86 0.849906887 ubox
69 87 0.055483599 ubox
69 88 0.022619971 ubox
69 89 0.015746397 ubox
69 90 0.011370490 ubox
69 91 0.005161637 ubox
69 92 0.006499307 ubox
69 93 0.005006748 ubox
69 94 0.003923039 ubox
69 96 0.003412499 ubox
69 97 0.003173513 ubox
70 85 0.977993946 ubox
70 86 0.044886669 ubox
70 87 0.012280223 ubox
70 88 0.008855069 ubox
70 89 0.006400892 ubox
70 91 0.004313751 ubox
71 84 0.999738838 ubox
72 83 0.999792226 ubox
73 82 0.999774460 ubox
74 81 0.997916644 ubox
75 80 0.884465552 ubox
91 95 0.043036996 ubox
91 98 0.103769813 ubox
91 101 0.045528130 ubox
91 104 0.035236899 ubox
91 107 0.010425303 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
