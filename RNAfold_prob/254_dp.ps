%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (254)
} def

/sequence { (\
GGAAAAAAGUAGAAGAACAAAAGUUCAGAGAAGACAAAGUGACAAAAGACACAGUCAACUCAACUACAAGGACUGUUCGCAGUCCUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.009921237 ubox
1 18 0.007143025 ubox
1 26 0.018104204 ubox
1 64 0.011471708 ubox
1 65 0.018632446 ubox
1 67 0.018140506 ubox
1 95 0.074873897 ubox
1 98 0.075465260 ubox
1 101 0.077714398 ubox
1 104 0.079358188 ubox
1 107 0.020165742 ubox
2 10 0.005565757 ubox
2 25 0.018075091 ubox
2 26 0.015753948 ubox
2 61 0.003972089 ubox
2 64 0.019675306 ubox
2 67 0.010293241 ubox
2 86 0.003207891 ubox
2 95 0.039509447 ubox
2 98 0.039681922 ubox
2 101 0.040924782 ubox
2 104 0.041023712 ubox
2 107 0.013403851 ubox
3 10 0.009438684 ubox
3 24 0.017826260 ubox
3 25 0.015742093 ubox
3 60 0.003675956 ubox
3 65 0.004397308 ubox
3 86 0.003206221 ubox
4 10 0.006827695 ubox
4 24 0.015216725 ubox
4 65 0.003813566 ubox
5 10 0.007407169 ubox
6 10 0.004553437 ubox
7 65 0.005046442 ubox
8 60 0.007499103 ubox
8 65 0.092656172 ubox
9 18 0.036348449 ubox
9 59 0.007944484 ubox
9 64 0.096165707 ubox
9 67 0.918656307 ubox
9 95 0.090056349 ubox
9 98 0.104039262 ubox
9 101 0.104614952 ubox
9 104 0.105192148 ubox
9 107 0.036746885 ubox
10 14 0.004024554 ubox
10 17 0.035302197 ubox
10 27 0.004622552 ubox
10 58 0.007678386 ubox
10 62 0.004306130 ubox
10 63 0.092821310 ubox
10 66 0.919720994 ubox
10 87 0.007165240 ubox
10 88 0.005276039 ubox
10 89 0.005815901 ubox
10 90 0.005701645 ubox
10 91 0.005297296 ubox
10 92 0.007342030 ubox
10 93 0.007413905 ubox
10 94 0.086894124 ubox
10 96 0.006885535 ubox
10 97 0.100959962 ubox
10 99 0.006549796 ubox
10 100 0.101502291 ubox
10 102 0.006487358 ubox
10 103 0.102069214 ubox
10 105 0.005431674 ubox
10 106 0.036028271 ubox
11 60 0.003771535 ubox
11 65 0.919399202 ubox
11 86 0.005802081 ubox
12 18 0.007371535 ubox
12 26 0.026044450 ubox
12 59 0.003951666 ubox
12 61 0.021627121 ubox
12 64 0.913953595 ubox
12 65 0.004638920 ubox
12 67 0.010792750 ubox
12 85 0.003933240 ubox
12 95 0.058546303 ubox
12 98 0.058287843 ubox
12 101 0.059086463 ubox
12 104 0.030548343 ubox
12 107 0.008277983 ubox
13 25 0.026021498 ubox
13 60 0.020213398 ubox
13 65 0.004079733 ubox
14 24 0.024555336 ubox
14 25 0.003237833 ubox
14 60 0.004735077 ubox
14 65 0.004395354 ubox
15 24 0.003445451 ubox
15 25 0.005519657 ubox
15 26 0.994332615 ubox
15 61 0.006609100 ubox
15 95 0.004242536 ubox
15 98 0.004220018 ubox
15 101 0.003629558 ubox
16 24 0.004938662 ubox
16 25 0.995207598 ubox
16 60 0.005626616 ubox
17 24 0.994645626 ubox
18 23 0.993179576 ubox
22 65 0.066843640 ubox
23 35 0.003535599 ubox
23 64 0.069541418 ubox
23 67 0.016828718 ubox
23 95 0.012181279 ubox
23 98 0.007377619 ubox
23 101 0.007331368 ubox
23 104 0.007331904 ubox
24 32 0.003363731 ubox
24 34 0.003212875 ubox
24 63 0.069459228 ubox
24 66 0.016678067 ubox
24 93 0.009649771 ubox
24 94 0.010817274 ubox
24 97 0.007255333 ubox
24 100 0.007235636 ubox
24 103 0.007238337 ubox
25 31 0.004008147 ubox
25 62 0.059356315 ubox
25 92 0.012060163 ubox
25 93 0.008730261 ubox
25 96 0.006323391 ubox
25 99 0.006394660 ubox
25 102 0.006404583 ubox
26 30 0.004072121 ubox
26 91 0.013350640 ubox
27 60 0.011491046 ubox
27 65 0.008888040 ubox
28 35 0.008078207 ubox
28 59 0.012106989 ubox
28 61 0.993486230 ubox
28 64 0.006878411 ubox
29 60 0.994534817 ubox
29 65 0.003738583 ubox
30 35 0.006888310 ubox
30 59 0.993145608 ubox
30 61 0.046299871 ubox
30 64 0.003799821 ubox
30 67 0.005238558 ubox
31 60 0.045938867 ubox
32 60 0.003479405 ubox
32 65 0.007742930 ubox
33 56 0.997721431 ubox
33 59 0.003639785 ubox
33 61 0.009592256 ubox
33 64 0.007948282 ubox
34 40 0.003199475 ubox
34 55 0.998594369 ubox
34 60 0.008882510 ubox
35 39 0.003472987 ubox
35 54 0.997612398 ubox
36 55 0.005957598 ubox
37 60 0.003182406 ubox
38 60 0.031379369 ubox
38 65 0.003252350 ubox
39 50 0.258226294 ubox
39 52 0.961714981 ubox
39 59 0.033678061 ubox
39 64 0.003387174 ubox
40 45 0.003891832 ubox
40 46 0.006057706 ubox
40 47 0.015465861 ubox
40 48 0.010540066 ubox
40 49 0.258402986 ubox
40 51 0.962461643 ubox
40 53 0.015242239 ubox
40 57 0.032257344 ubox
40 58 0.023832459 ubox
40 62 0.003237176 ubox
41 50 0.961537058 ubox
41 52 0.015345372 ubox
41 56 0.041101543 ubox
41 61 0.003895130 ubox
42 55 0.041126828 ubox
42 60 0.003799687 ubox
43 48 0.534798412 ubox
43 54 0.041090848 ubox
48 56 0.008273588 ubox
49 55 0.008278245 ubox
50 54 0.008198855 ubox
53 60 0.003738765 ubox
54 59 0.003990829 ubox
54 61 0.003683406 ubox
60 92 0.003202437 ubox
61 91 0.003414730 ubox
64 91 0.183652280 ubox
65 87 0.013217983 ubox
65 88 0.015709903 ubox
65 89 0.013681018 ubox
65 90 0.179107112 ubox
65 91 0.011349305 ubox
65 92 0.011715344 ubox
65 93 0.004609297 ubox
66 86 0.008538498 ubox
67 91 0.015147519 ubox
68 86 0.037305411 ubox
69 86 0.963806181 ubox
70 85 0.999795535 ubox
70 86 0.004252833 ubox
71 84 0.999984085 ubox
72 83 0.999869606 ubox
73 82 0.999975264 ubox
74 81 0.999214012 ubox
75 80 0.993262182 ubox
85 91 0.003408572 ubox
86 90 0.004708859 ubox
86 91 0.006763195 ubox
86 92 0.006235551 ubox
86 93 0.007952623 ubox
86 94 0.003791435 ubox
91 95 0.043949352 ubox
91 98 0.103988611 ubox
91 101 0.044705346 ubox
91 104 0.033987034 ubox
91 107 0.010034200 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
