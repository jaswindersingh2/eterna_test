%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAACGAUUGAUAUACUAAAUGGAAACGUAUUAGAAAAGUGUAUUGGAAACAAAUACAGUGUUGAUCCAUUUACUUCGGUGGGUGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

/coor [
[131.87782288 225.07490540]
[138.65615845 211.69380188]
[148.00485229 199.96342468]
[159.53619385 190.37028503]
[172.77191162 183.31224060]
[187.16307068 179.08204651]
[202.11195374 177.85510254]
[189.82467651 169.25146484]
[177.53738403 160.64781189]
[165.25010681 152.04415894]
[152.96282959 143.44052124]
[140.67555237 134.83686829]
[128.38827515 126.23322296]
[116.10099030 117.62957764]
[103.81370544 109.02593231]
[95.19226837 123.67633057]
[72.35506439 126.82509613]
[57.38044357 127.69726562]
[42.40581894 128.56944275]
[27.43119621 129.44161987]
[12.47084332 130.53147888]
[-2.47207713 131.83882141]
[-17.41499710 133.14614868]
[-30.53072548 142.99043274]
[-45.50572968 136.30601501]
[-46.93500900 119.96927643]
[-33.34824371 110.78604126]
[-18.72233391 118.20323181]
[-3.77941322 116.89589691]
[11.16350746 115.58856201]
[17.65275192 111.81196594]
[26.55902481 114.46698761]
[41.53364563 113.59481812]
[56.50827026 112.72264862]
[71.48289490 111.85047150]
[75.96157837 105.83454895]
[61.75064087 101.03359985]
[61.92521667 86.03461456]
[76.24405670 81.56572723]
[84.91896057 93.80270386]
[89.39765167 87.78678131]
[85.93840790 73.19110870]
[82.47917175 58.59543228]
[79.01993561 43.99975967]
[75.56069946 29.40408516]
[72.10145569 14.80841255]
[58.04693604 7.95243406]
[51.73474884 -6.35456753]
[56.14532089 -21.35726357]
[69.19610596 -29.97183990]
[84.72492981 -28.13075638]
[95.39955902 -16.70331764]
[96.17975616 -1.08520913]
[86.69713593 11.34917450]
[90.15637207 25.94484711]
[93.61560822 40.54051971]
[97.07484436 55.13619232]
[100.53408813 69.73186493]
[103.99332428 84.32753754]
[112.41735077 96.73865509]
[124.70463562 105.34230042]
[136.99191284 113.94594574]
[149.27919006 122.54959106]
[161.56648254 131.15324402]
[173.85375977 139.75688171]
[186.14103699 148.36053467]
[198.42831421 156.96417236]
[210.71560669 165.56782532]
[225.40571594 168.60108948]
[240.09582520 165.56782532]
[254.78593445 162.53456116]
[269.47604370 159.50129700]
[284.16613770 156.46803284]
[298.85626221 153.43476868]
[313.54635620 150.40150452]
[325.43057251 139.10115051]
[341.08032227 144.00187683]
[344.39651489 160.06222534]
[331.96771240 170.76069641]
[316.57962036 165.09161377]
[301.88952637 168.12487793]
[287.19940186 171.15814209]
[272.50930786 174.19140625]
[257.81918335 177.22467041]
[243.12907410 180.25793457]
[228.43896484 183.29119873]
[241.68002319 190.33921814]
[253.21861267 199.92362976]
[262.57617188 211.64694214]
[269.36462402 225.02291870]
[273.30242920 239.49682617]
[274.22622681 254.46835327]
[272.09777832 269.31655884]
[267.00527954 283.42565918]
[259.15997314 296.21047974]
[248.88725281 307.14074707]
[236.61314392 315.76318359]
[222.84672546 321.72015381]
[208.15893555 324.76461792]
[193.15893555 324.77029419]
[178.46884155 321.73693848]
[164.69790649 315.79037476]
[152.41729736 307.17724609]
[142.13630676 296.25473022]
[134.28134155 283.47586060]
[129.17817688 269.37060547]
[127.03848267 254.52400208]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 68]
[8 67]
[9 66]
[10 65]
[11 64]
[12 63]
[13 62]
[14 61]
[15 60]
[17 35]
[18 34]
[19 33]
[20 32]
[21 30]
[22 29]
[23 28]
[41 59]
[42 58]
[43 57]
[44 56]
[45 55]
[46 54]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
