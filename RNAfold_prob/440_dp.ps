%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (440)
} def

/sequence { (\
GGAAAUGUACUGGGCAGGCGAAAGCCCUCUAACGAGGCCAUAACCGCGGUUGGCCGCGGCAGUACGUGAGCUCUGUUCGCAGAGCUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.005924453 ubox
1 39 0.005517866 ubox
1 67 0.005351523 ubox
1 95 0.067336609 ubox
1 98 0.067758192 ubox
1 101 0.069341166 ubox
1 104 0.069675323 ubox
1 107 0.017595829 ubox
2 38 0.005520373 ubox
2 67 0.008175160 ubox
2 95 0.035525074 ubox
2 98 0.035672642 ubox
2 101 0.036450702 ubox
2 104 0.036323779 ubox
2 107 0.011855429 ubox
3 67 0.017858839 ubox
4 67 0.044480579 ubox
5 67 0.952770386 ubox
6 34 0.004661177 ubox
6 66 0.976178086 ubox
6 68 0.003564888 ubox
6 90 0.003568232 ubox
6 96 0.003770255 ubox
6 99 0.003848685 ubox
6 102 0.003462976 ubox
6 105 0.003379298 ubox
7 33 0.005137940 ubox
7 65 0.999794045 ubox
7 95 0.003522750 ubox
7 98 0.003594536 ubox
7 101 0.003327174 ubox
7 104 0.003266999 ubox
8 32 0.004548137 ubox
8 64 0.999688100 ubox
8 97 0.003233877 ubox
9 30 0.003580155 ubox
9 63 0.999708401 ubox
10 62 0.999938486 ubox
11 40 0.006466197 ubox
11 42 0.006818079 ubox
11 61 0.999318188 ubox
12 27 0.032891170 ubox
12 29 0.006005363 ubox
12 30 0.003592302 ubox
12 39 0.011077800 ubox
12 41 0.010058533 ubox
12 60 0.996154125 ubox
13 19 0.020476338 ubox
13 25 0.003666686 ubox
13 26 0.113792577 ubox
13 27 0.004833369 ubox
13 28 0.012442142 ubox
13 29 0.011391590 ubox
13 30 0.056524874 ubox
13 33 0.004052855 ubox
13 38 0.011287778 ubox
13 39 0.962343815 ubox
13 60 0.011537940 ubox
14 19 0.009107202 ubox
14 25 0.126844470 ubox
14 26 0.003590053 ubox
14 27 0.013282482 ubox
14 28 0.010390850 ubox
14 29 0.058252495 ubox
14 38 0.963528528 ubox
14 39 0.004213968 ubox
14 57 0.033480560 ubox
14 60 0.007431658 ubox
15 20 0.009880280 ubox
15 24 0.126910151 ubox
15 36 0.008627102 ubox
15 37 0.961979898 ubox
15 56 0.033437781 ubox
15 58 0.003991196 ubox
15 59 0.007928170 ubox
16 28 0.051980061 ubox
16 30 0.008198850 ubox
17 25 0.007578425 ubox
17 26 0.981192212 ubox
17 27 0.044315855 ubox
17 29 0.004942661 ubox
17 33 0.003976822 ubox
17 39 0.023819124 ubox
17 54 0.004189110 ubox
17 55 0.022237573 ubox
18 25 0.989165804 ubox
18 26 0.033155806 ubox
18 33 0.003510735 ubox
18 38 0.023658515 ubox
18 54 0.022247075 ubox
19 24 0.989278750 ubox
19 34 0.010800128 ubox
19 37 0.019625492 ubox
19 52 0.005482382 ubox
19 53 0.021959453 ubox
20 25 0.013155851 ubox
20 26 0.004237767 ubox
20 29 0.005532876 ubox
20 33 0.010880175 ubox
20 39 0.004376878 ubox
20 51 0.006494476 ubox
21 28 0.005326682 ubox
21 41 0.006037545 ubox
21 50 0.006688210 ubox
21 51 0.019719252 ubox
22 41 0.005619281 ubox
22 50 0.018424310 ubox
23 30 0.009533741 ubox
23 41 0.004803720 ubox
24 29 0.009530837 ubox
24 33 0.007375636 ubox
24 38 0.037654601 ubox
24 39 0.028844292 ubox
24 47 0.020844032 ubox
24 50 0.003305676 ubox
25 37 0.031523628 ubox
25 46 0.020836629 ubox
25 49 0.003478611 ubox
26 36 0.023786535 ubox
26 37 0.126193031 ubox
26 48 0.003263292 ubox
27 34 0.031792732 ubox
27 36 0.985533472 ubox
27 37 0.009393094 ubox
28 34 0.004503659 ubox
28 35 0.988783848 ubox
28 36 0.006416072 ubox
28 37 0.022455913 ubox
29 34 0.987307585 ubox
29 36 0.076654540 ubox
29 37 0.007903495 ubox
30 34 0.005953864 ubox
30 35 0.073201069 ubox
30 36 0.009318326 ubox
33 58 0.056085478 ubox
34 38 0.003174920 ubox
34 39 0.012506768 ubox
34 57 0.056445969 ubox
35 41 0.004363571 ubox
36 41 0.004029679 ubox
36 55 0.062070301 ubox
37 41 0.006292928 ubox
37 44 0.004362173 ubox
37 54 0.062788017 ubox
38 49 0.004936496 ubox
38 53 0.062792585 ubox
39 48 0.005007123 ubox
39 52 0.062670193 ubox
40 50 0.004879778 ubox
40 51 0.056146207 ubox
41 49 0.006808335 ubox
41 52 0.005564306 ubox
42 50 0.004907551 ubox
42 51 0.023267895 ubox
43 50 0.047865017 ubox
44 48 0.008074712 ubox
44 49 0.049678669 ubox
44 58 0.004708024 ubox
44 59 0.993146148 ubox
45 58 0.997628350 ubox
46 57 0.997745804 ubox
47 56 0.997745954 ubox
48 54 0.007035693 ubox
48 55 0.997608185 ubox
49 54 0.991444918 ubox
65 91 0.005982525 ubox
66 80 0.004145743 ubox
66 95 0.013735580 ubox
66 98 0.016737813 ubox
66 101 0.013816866 ubox
66 104 0.011640581 ubox
66 107 0.003873781 ubox
67 79 0.004151569 ubox
67 87 0.036842617 ubox
67 88 0.050781112 ubox
67 89 0.027494671 ubox
67 90 0.011585512 ubox
67 91 0.003874762 ubox
67 94 0.012486492 ubox
67 96 0.019944285 ubox
67 97 0.013386771 ubox
67 99 0.015624879 ubox
67 100 0.011187310 ubox
67 102 0.012519313 ubox
67 103 0.009575868 ubox
67 105 0.009781534 ubox
67 106 0.003266442 ubox
68 78 0.004274797 ubox
68 86 0.041462892 ubox
68 95 0.036730107 ubox
68 98 0.028775086 ubox
68 101 0.023068495 ubox
68 104 0.018802372 ubox
68 107 0.004157066 ubox
69 77 0.004272108 ubox
69 86 0.968561585 ubox
70 76 0.004260953 ubox
70 85 0.999822005 ubox
70 86 0.003595986 ubox
71 75 0.004236596 ubox
71 84 0.999975174 ubox
72 83 0.999837564 ubox
73 82 0.999971419 ubox
74 81 0.999204230 ubox
75 80 0.993252461 ubox
86 90 0.003988499 ubox
86 91 0.006050023 ubox
86 92 0.005578462 ubox
86 93 0.007116564 ubox
86 94 0.003427398 ubox
91 95 0.043164877 ubox
91 98 0.103924407 ubox
91 101 0.045525568 ubox
91 104 0.035180835 ubox
91 107 0.010407131 ubox
5 67 0.9500000 lbox
6 66 0.9500000 lbox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
