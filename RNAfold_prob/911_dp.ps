%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (911)
} def

/sequence { (\
GGAAAGCAAGUAGGGACCCAACGGAAACGAGCGAAAGCAAAGGAGUCAAACUACAAGCGAAAGCAAGCGUUCAGCUUCGGCUGAACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.132271718 ubox
1 19 0.006242697 ubox
1 58 0.004213994 ubox
1 64 0.332154902 ubox
1 68 0.044433803 ubox
1 86 0.008661944 ubox
1 95 0.096351210 ubox
1 98 0.098472531 ubox
1 101 0.098440024 ubox
1 104 0.098891109 ubox
1 107 0.024985706 ubox
2 7 0.063157553 ubox
2 18 0.006241062 ubox
2 58 0.005730310 ubox
2 64 0.149718554 ubox
2 68 0.036591887 ubox
2 86 0.003645496 ubox
2 95 0.050478111 ubox
2 98 0.049696072 ubox
2 101 0.050504474 ubox
2 104 0.050327965 ubox
2 107 0.016425811 ubox
5 82 0.006956244 ubox
6 38 0.005339331 ubox
6 54 0.014597228 ubox
6 58 0.710728709 ubox
6 64 0.023148957 ubox
6 68 0.313393436 ubox
6 70 0.003421233 ubox
6 81 0.007065736 ubox
6 95 0.047694327 ubox
6 98 0.047654715 ubox
6 101 0.047553778 ubox
6 104 0.046585295 ubox
6 107 0.016237633 ubox
7 13 0.006321275 ubox
7 14 0.006632416 ubox
7 37 0.005338776 ubox
7 57 0.711091371 ubox
7 59 0.008960627 ubox
7 63 0.023085948 ubox
7 67 0.313455801 ubox
7 69 0.003720950 ubox
7 80 0.007049627 ubox
7 91 0.062651261 ubox
8 52 0.004342594 ubox
9 52 0.080948614 ubox
10 17 0.003932847 ubox
10 22 0.009704616 ubox
10 32 0.005983632 ubox
10 51 0.083997684 ubox
10 52 0.003765804 ubox
10 54 0.992706163 ubox
10 58 0.005737562 ubox
10 64 0.004377841 ubox
10 68 0.005566793 ubox
10 95 0.014441745 ubox
10 98 0.019014009 ubox
10 101 0.019379312 ubox
10 104 0.019476996 ubox
10 107 0.006807014 ubox
11 16 0.003764144 ubox
11 21 0.009629876 ubox
11 31 0.005962453 ubox
11 49 0.003595741 ubox
11 50 0.079547672 ubox
11 53 0.993810003 ubox
11 57 0.005308864 ubox
11 63 0.004097366 ubox
11 67 0.005375540 ubox
11 94 0.013706707 ubox
11 97 0.018368510 ubox
11 100 0.018717470 ubox
11 103 0.018816530 ubox
11 106 0.006645049 ubox
12 52 0.993501379 ubox
13 19 0.017037584 ubox
13 28 0.004488861 ubox
13 47 0.003858793 ubox
13 51 0.989144502 ubox
13 52 0.020182332 ubox
13 95 0.012128170 ubox
13 98 0.012185920 ubox
13 101 0.012346801 ubox
13 104 0.006383633 ubox
14 18 0.016820630 ubox
14 19 0.005453527 ubox
14 22 0.004602473 ubox
14 28 0.009097434 ubox
14 46 0.004459050 ubox
14 47 0.036754678 ubox
14 51 0.029965225 ubox
14 54 0.003368268 ubox
14 95 0.008114219 ubox
14 98 0.008024087 ubox
14 101 0.007761625 ubox
14 104 0.005017595 ubox
15 28 0.003422098 ubox
15 46 0.024756926 ubox
15 47 0.994497299 ubox
16 46 0.998466180 ubox
17 24 0.018891546 ubox
17 43 0.015242554 ubox
17 45 0.998578820 ubox
18 23 0.019429263 ubox
18 24 0.011407875 ubox
18 42 0.016804188 ubox
18 43 0.993468171 ubox
18 45 0.005381564 ubox
19 23 0.010709050 ubox
19 29 0.004045542 ubox
19 42 0.992511756 ubox
19 43 0.077289350 ubox
19 45 0.005572208 ubox
21 46 0.004688984 ubox
22 29 0.962770033 ubox
22 31 0.011175432 ubox
22 33 0.066572213 ubox
22 37 0.021856736 ubox
22 42 0.010029826 ubox
22 43 0.003363833 ubox
22 45 0.004884031 ubox
23 28 0.978611437 ubox
23 32 0.067245797 ubox
23 38 0.060120320 ubox
23 47 0.003918573 ubox
24 28 0.032625618 ubox
24 32 0.006111056 ubox
24 38 0.038933758 ubox
24 46 0.003846704 ubox
24 47 0.005733094 ubox
25 46 0.005681891 ubox
28 33 0.051564386 ubox
28 37 0.022896873 ubox
28 42 0.015021884 ubox
28 43 0.004585397 ubox
28 67 0.003386479 ubox
29 38 0.007260822 ubox
31 38 0.985020986 ubox
31 64 0.010503418 ubox
32 37 0.985706337 ubox
32 42 0.003710219 ubox
32 63 0.010511652 ubox
33 38 0.028356227 ubox
37 46 0.003369462 ubox
37 58 0.010621010 ubox
38 45 0.003644401 ubox
38 57 0.010609513 ubox
41 52 0.014678059 ubox
42 47 0.006242645 ubox
42 51 0.015253253 ubox
42 52 0.003359304 ubox
42 54 0.010773465 ubox
43 51 0.003481468 ubox
43 54 0.006767720 ubox
44 52 0.015922443 ubox
45 51 0.017539620 ubox
45 54 0.005351843 ubox
46 50 0.015810681 ubox
46 53 0.005017004 ubox
51 67 0.004130823 ubox
51 91 0.004129175 ubox
52 66 0.003993109 ubox
52 90 0.004009058 ubox
54 67 0.018828275 ubox
54 91 0.003391658 ubox
56 71 0.004754436 ubox
56 82 0.008396501 ubox
57 64 0.537253399 ubox
57 68 0.434772213 ubox
57 70 0.010603171 ubox
57 81 0.008688564 ubox
57 98 0.008114486 ubox
58 63 0.537642447 ubox
58 67 0.435323068 ubox
58 69 0.011598152 ubox
58 79 0.003238316 ubox
58 80 0.008536796 ubox
59 64 0.068128670 ubox
59 68 0.071140602 ubox
59 78 0.003718240 ubox
59 86 0.004281658 ubox
59 95 0.035787311 ubox
59 98 0.018191996 ubox
59 101 0.005911546 ubox
59 104 0.004883551 ubox
61 77 0.008501306 ubox
62 71 0.004014515 ubox
62 76 0.008776557 ubox
62 82 0.012379527 ubox
63 68 0.050902552 ubox
63 70 0.008760397 ubox
63 75 0.009003629 ubox
63 81 0.012759489 ubox
63 95 0.017487385 ubox
63 98 0.006304542 ubox
63 101 0.005189586 ubox
63 104 0.004662053 ubox
64 69 0.009514025 ubox
64 74 0.008996122 ubox
64 80 0.012602837 ubox
64 91 0.082317788 ubox
65 77 0.012364988 ubox
66 76 0.014354998 ubox
67 75 0.014570353 ubox
67 86 0.011271839 ubox
67 95 0.010842369 ubox
67 98 0.008272867 ubox
67 101 0.007718693 ubox
67 104 0.006899767 ubox
68 74 0.014569308 ubox
68 91 0.038880410 ubox
69 86 0.997396776 ubox
69 95 0.005299753 ubox
69 98 0.004136605 ubox
69 101 0.003275183 ubox
70 85 0.998478567 ubox
70 94 0.004765588 ubox
70 97 0.003721146 ubox
71 84 0.999387136 ubox
72 83 0.999829009 ubox
73 82 0.999604475 ubox
74 81 0.999831662 ubox
75 79 0.011545509 ubox
75 80 0.999009924 ubox
76 80 0.003703894 ubox
86 91 0.006645545 ubox
91 95 0.044369917 ubox
91 98 0.105204476 ubox
91 101 0.045335511 ubox
91 104 0.034427570 ubox
91 107 0.010168095 ubox
6 58 0.9500000 lbox
7 57 0.9500000 lbox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
17 45 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
