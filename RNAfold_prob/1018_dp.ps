%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1018)
} def

/sequence { (\
GGAAAAGACAAAGUCAAGAUCAAAGAUCAAGAUACAAAGUAUCAAGUACAAAGUACAAGCCAAAGGCACCCUGGUUUCGACCAGGGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.100626465 ubox
1 15 0.015879679 ubox
1 21 0.025988243 ubox
1 43 0.006382231 ubox
1 49 0.009761115 ubox
1 56 0.010925692 ubox
1 60 0.003509224 ubox
1 61 0.097292054 ubox
1 67 0.010060703 ubox
1 69 0.007963271 ubox
1 70 0.005479767 ubox
1 95 0.355839421 ubox
1 98 0.358381744 ubox
1 101 0.367157204 ubox
1 104 0.373161418 ubox
1 107 0.093702766 ubox
2 9 0.056180945 ubox
2 14 0.013464781 ubox
2 15 0.063622501 ubox
2 20 0.023847314 ubox
2 21 0.039851556 ubox
2 28 0.005830689 ubox
2 42 0.005375828 ubox
2 43 0.016365962 ubox
2 49 0.005370708 ubox
2 56 0.005974567 ubox
2 60 0.097047477 ubox
2 61 0.006217036 ubox
2 67 0.007284599 ubox
2 69 0.008308235 ubox
2 95 0.186780104 ubox
2 98 0.187674987 ubox
2 101 0.191777414 ubox
2 104 0.193629279 ubox
2 107 0.062370160 ubox
3 14 0.060562380 ubox
3 20 0.039152768 ubox
3 27 0.005470316 ubox
3 42 0.015829128 ubox
4 14 0.005023200 ubox
5 14 0.008432986 ubox
5 40 0.007284870 ubox
6 14 0.010689139 ubox
6 40 0.006127953 ubox
7 14 0.009383084 ubox
7 15 0.846853940 ubox
7 21 0.016444343 ubox
7 28 0.007739102 ubox
7 40 0.003421451 ubox
7 43 0.006367165 ubox
7 49 0.004326959 ubox
7 56 0.005416450 ubox
7 95 0.061061003 ubox
7 98 0.073557676 ubox
7 101 0.064240118 ubox
7 104 0.060529741 ubox
7 107 0.021152714 ubox
8 14 0.847050323 ubox
8 20 0.016205050 ubox
8 27 0.007282059 ubox
8 40 0.014055386 ubox
8 42 0.005940675 ubox
8 47 0.007396379 ubox
8 54 0.010991674 ubox
9 13 0.838852870 ubox
9 18 0.016147741 ubox
9 25 0.005137902 ubox
9 39 0.014655410 ubox
9 46 0.007567004 ubox
9 53 0.011169796 ubox
9 86 0.004824336 ubox
9 91 0.057271179 ubox
10 14 0.005101113 ubox
12 33 0.003657479 ubox
13 20 0.003354176 ubox
13 21 0.006603379 ubox
13 27 0.028298100 ubox
13 28 0.007696143 ubox
13 33 0.090132178 ubox
13 35 0.008314926 ubox
13 49 0.007639201 ubox
13 56 0.005786558 ubox
13 60 0.003638946 ubox
13 67 0.046754028 ubox
13 69 0.004792881 ubox
13 95 0.172770837 ubox
13 98 0.166988423 ubox
13 101 0.168628373 ubox
13 104 0.168864209 ubox
13 107 0.058953034 ubox
14 19 0.003437721 ubox
14 26 0.030788728 ubox
14 29 0.005975377 ubox
14 30 0.010546925 ubox
14 32 0.093212549 ubox
14 34 0.006573267 ubox
14 48 0.007333191 ubox
14 55 0.005493444 ubox
14 59 0.003410799 ubox
14 66 0.046729074 ubox
14 68 0.005876810 ubox
14 87 0.022087037 ubox
14 88 0.011569346 ubox
14 89 0.010876003 ubox
14 90 0.011097724 ubox
14 91 0.011446296 ubox
14 92 0.218524186 ubox
14 93 0.017134618 ubox
14 94 0.159401552 ubox
14 96 0.011556290 ubox
14 97 0.157293406 ubox
14 99 0.011606987 ubox
14 100 0.159164762 ubox
14 102 0.011507720 ubox
14 103 0.159439483 ubox
14 105 0.009634026 ubox
14 106 0.056256856 ubox
15 25 0.031326599 ubox
15 31 0.094377607 ubox
15 46 0.005699707 ubox
15 53 0.004180148 ubox
15 65 0.046526773 ubox
15 86 0.020386330 ubox
15 91 0.233971869 ubox
17 27 0.003816570 ubox
18 27 0.003702700 ubox
18 28 0.988336313 ubox
18 35 0.004023486 ubox
18 95 0.015830465 ubox
18 98 0.012848540 ubox
18 101 0.013866980 ubox
18 104 0.012419555 ubox
18 107 0.004301631 ubox
19 27 0.989307399 ubox
19 33 0.007440291 ubox
20 24 0.003258781 ubox
20 25 0.008515469 ubox
20 26 0.988736195 ubox
20 29 0.003246426 ubox
20 32 0.007691914 ubox
20 87 0.004016144 ubox
20 92 0.039956675 ubox
20 93 0.003823601 ubox
20 99 0.003294321 ubox
21 25 0.980571696 ubox
21 31 0.007758449 ubox
21 86 0.003720295 ubox
21 91 0.042525176 ubox
22 27 0.003501548 ubox
25 43 0.004419004 ubox
25 49 0.004517994 ubox
25 95 0.015603126 ubox
25 98 0.011941599 ubox
25 101 0.012037178 ubox
25 104 0.012038808 ubox
25 107 0.004201996 ubox
26 42 0.004393781 ubox
27 41 0.004173487 ubox
27 45 0.004331467 ubox
27 87 0.004484472 ubox
27 92 0.044038402 ubox
27 93 0.004063357 ubox
28 39 0.003348725 ubox
28 46 0.006049906 ubox
28 86 0.004185692 ubox
28 91 0.047225149 ubox
29 47 0.004386417 ubox
31 35 0.004052041 ubox
31 43 0.991835674 ubox
31 56 0.015488248 ubox
31 95 0.004051624 ubox
31 98 0.003962009 ubox
31 101 0.004191887 ubox
31 104 0.004323497 ubox
32 40 0.006437080 ubox
32 42 0.992856078 ubox
33 39 0.006613257 ubox
33 41 0.992754496 ubox
33 48 0.004599157 ubox
33 55 0.024675440 ubox
34 40 0.992040608 ubox
34 47 0.005192704 ubox
34 54 0.027710715 ubox
35 39 0.982359897 ubox
35 46 0.005252471 ubox
35 53 0.027932736 ubox
35 91 0.004957934 ubox
39 43 0.005174317 ubox
39 49 0.040275955 ubox
39 56 0.019948950 ubox
39 95 0.057934441 ubox
39 98 0.017120981 ubox
39 101 0.016960279 ubox
39 104 0.016921775 ubox
39 107 0.005904377 ubox
40 48 0.040335011 ubox
40 55 0.019965833 ubox
40 94 0.057108350 ubox
40 97 0.016514132 ubox
40 100 0.016372506 ubox
40 103 0.016335301 ubox
40 106 0.005759372 ubox
41 47 0.040050822 ubox
41 54 0.019867051 ubox
42 46 0.037073119 ubox
42 53 0.018604794 ubox
42 92 0.057571433 ubox
43 53 0.005251843 ubox
43 91 0.058527323 ubox
45 54 0.013655766 ubox
46 54 0.003454405 ubox
46 56 0.988020339 ubox
46 67 0.006330984 ubox
46 95 0.013066034 ubox
46 98 0.012457562 ubox
46 101 0.012735212 ubox
46 104 0.012196242 ubox
46 107 0.004249346 ubox
47 52 0.010860000 ubox
47 53 0.004198990 ubox
47 55 0.989170413 ubox
47 66 0.006285720 ubox
47 94 0.012512142 ubox
47 97 0.011935673 ubox
47 100 0.012215026 ubox
47 103 0.011698044 ubox
47 106 0.004118372 ubox
48 54 0.988413474 ubox
49 53 0.978775355 ubox
49 91 0.004340240 ubox
53 60 0.007856758 ubox
53 67 0.003530561 ubox
53 95 0.013847501 ubox
53 98 0.013047937 ubox
53 101 0.012489650 ubox
53 104 0.011853577 ubox
53 107 0.004114170 ubox
54 59 0.007655052 ubox
54 66 0.003415643 ubox
54 94 0.013362305 ubox
54 97 0.012598462 ubox
54 100 0.012058644 ubox
54 103 0.011445326 ubox
54 106 0.004013371 ubox
56 91 0.005059653 ubox
59 67 0.991211479 ubox
59 95 0.003622349 ubox
60 65 0.009773055 ubox
60 66 0.992216545 ubox
61 65 0.985007794 ubox
61 66 0.010214722 ubox
65 95 0.003772568 ubox
67 91 0.006576026 ubox
69 85 0.006937559 ubox
69 86 0.995007869 ubox
70 84 0.004932817 ubox
70 85 0.999905373 ubox
70 86 0.006686230 ubox
71 84 0.999960273 ubox
71 85 0.005081215 ubox
72 83 0.999749540 ubox
73 82 0.999982387 ubox
74 81 0.999434102 ubox
75 79 0.036005065 ubox
75 80 0.923873610 ubox
76 80 0.028229827 ubox
86 95 0.013682150 ubox
86 98 0.004673612 ubox
91 95 0.069066751 ubox
91 98 0.139921788 ubox
91 101 0.046119018 ubox
91 104 0.015609943 ubox
91 107 0.003716336 ubox
1 95 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
