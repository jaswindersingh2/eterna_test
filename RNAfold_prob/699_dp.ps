%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (699)
} def

/sequence { (\
GGAAAUACACCAGAAACAGGAGUAAAGAGACCACAAAAAGAGGACUCAGACAGCACAAAAGAGCAGUCGCGUAGAUUCGUCUACGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.011414286 ubox
1 8 0.119060439 ubox
1 10 0.042686231 ubox
1 11 0.268763804 ubox
1 17 0.027396871 ubox
1 31 0.003428031 ubox
1 32 0.030541616 ubox
1 47 0.004577231 ubox
1 51 0.003238201 ubox
1 68 0.010941926 ubox
1 86 0.008914617 ubox
1 95 0.223693023 ubox
1 98 0.224973615 ubox
1 101 0.229645536 ubox
1 104 0.230634937 ubox
1 107 0.058244171 ubox
2 6 0.007873732 ubox
2 8 0.030684775 ubox
2 10 0.268384609 ubox
2 11 0.033666026 ubox
2 17 0.008028383 ubox
2 31 0.030516178 ubox
2 47 0.005951794 ubox
2 67 0.007490584 ubox
2 68 0.016244345 ubox
2 86 0.006440034 ubox
2 95 0.117696396 ubox
2 98 0.118042978 ubox
2 101 0.120513070 ubox
2 104 0.120064173 ubox
2 107 0.039182896 ubox
3 23 0.004505002 ubox
3 46 0.005340458 ubox
3 67 0.014471032 ubox
4 23 0.007140690 ubox
5 23 0.034182736 ubox
6 12 0.007090898 ubox
6 13 0.005437939 ubox
6 14 0.006122659 ubox
6 15 0.008088931 ubox
6 21 0.006820049 ubox
6 22 0.034434819 ubox
6 24 0.831320087 ubox
6 25 0.038981173 ubox
6 26 0.015507505 ubox
6 87 0.010588802 ubox
6 88 0.012624365 ubox
6 89 0.013149312 ubox
6 90 0.021694322 ubox
6 91 0.010697870 ubox
6 92 0.016045223 ubox
6 93 0.016744974 ubox
6 94 0.012765416 ubox
6 96 0.012745989 ubox
6 97 0.012722196 ubox
6 99 0.012937014 ubox
6 100 0.012762420 ubox
6 102 0.011203801 ubox
6 103 0.011122313 ubox
6 105 0.010847951 ubox
6 106 0.010825843 ubox
7 23 0.881864866 ubox
8 13 0.026019131 ubox
8 19 0.015839083 ubox
8 20 0.014582551 ubox
8 22 0.884650857 ubox
8 91 0.036588806 ubox
9 23 0.044749101 ubox
10 19 0.069394218 ubox
10 20 0.910936897 ubox
10 22 0.046307541 ubox
10 43 0.007137991 ubox
10 91 0.012659067 ubox
11 19 0.912386376 ubox
11 20 0.058310284 ubox
11 22 0.008733618 ubox
11 42 0.007159488 ubox
11 91 0.025599123 ubox
12 23 0.004649401 ubox
13 17 0.207792000 ubox
13 23 0.003176632 ubox
13 95 0.026255546 ubox
13 98 0.025807125 ubox
13 101 0.027275163 ubox
13 104 0.031175435 ubox
13 107 0.010948864 ubox
14 23 0.007378782 ubox
15 23 0.006324973 ubox
16 23 0.097807352 ubox
17 22 0.101310206 ubox
17 91 0.022065779 ubox
18 23 0.010214532 ubox
19 23 0.003858700 ubox
19 32 0.011691351 ubox
19 34 0.011111239 ubox
19 47 0.003364999 ubox
19 54 0.006185302 ubox
19 95 0.033165999 ubox
19 98 0.106476403 ubox
19 101 0.106471806 ubox
19 104 0.108489037 ubox
19 107 0.037947947 ubox
20 31 0.011670607 ubox
20 32 0.004948600 ubox
20 47 0.060274013 ubox
20 68 0.004963310 ubox
20 95 0.020083997 ubox
20 98 0.022059003 ubox
20 101 0.022299371 ubox
20 104 0.022310372 ubox
20 107 0.007284672 ubox
21 46 0.060467485 ubox
21 67 0.004785282 ubox
22 31 0.012881450 ubox
22 45 0.060493201 ubox
22 51 0.015353724 ubox
22 95 0.139592873 ubox
22 98 0.139301723 ubox
22 101 0.141997973 ubox
22 104 0.104041545 ubox
22 107 0.034065818 ubox
23 28 0.007905879 ubox
23 30 0.012538400 ubox
23 44 0.059435422 ubox
23 48 0.006986448 ubox
23 50 0.015113585 ubox
23 65 0.003913435 ubox
23 87 0.005276355 ubox
23 88 0.006324633 ubox
23 89 0.006465675 ubox
23 90 0.007590275 ubox
23 91 0.008909547 ubox
23 92 0.008388086 ubox
23 93 0.009571622 ubox
23 94 0.134661199 ubox
23 96 0.008113180 ubox
23 97 0.134424760 ubox
23 99 0.008234364 ubox
23 100 0.137024905 ubox
23 102 0.006767594 ubox
23 103 0.100438876 ubox
23 105 0.005426021 ubox
23 106 0.033256523 ubox
26 46 0.014961179 ubox
27 32 0.007106553 ubox
27 34 0.006000597 ubox
27 45 0.015861407 ubox
27 47 0.993927909 ubox
27 95 0.005217690 ubox
27 98 0.005172342 ubox
27 101 0.005106661 ubox
27 104 0.005002701 ubox
28 46 0.994990916 ubox
29 34 0.005609566 ubox
29 45 0.992950326 ubox
29 47 0.026629641 ubox
30 46 0.025448026 ubox
31 40 0.008247519 ubox
31 42 0.046648170 ubox
31 43 0.993145878 ubox
32 40 0.040051743 ubox
32 42 0.993367072 ubox
32 43 0.022964546 ubox
34 40 0.645036996 ubox
34 42 0.029535207 ubox
34 43 0.010835180 ubox
39 46 0.008940842 ubox
40 45 0.009426442 ubox
40 47 0.021254029 ubox
40 68 0.003712207 ubox
40 98 0.004433311 ubox
41 46 0.019907460 ubox
41 67 0.003697452 ubox
42 47 0.006538009 ubox
42 95 0.004425982 ubox
43 68 0.013221636 ubox
43 95 0.005216838 ubox
44 67 0.013251452 ubox
45 63 0.004582917 ubox
45 66 0.013236482 ubox
45 91 0.004739125 ubox
46 62 0.004667574 ubox
46 65 0.013048801 ubox
46 90 0.004498253 ubox
46 92 0.011129838 ubox
47 61 0.004708824 ubox
47 63 0.003896555 ubox
47 91 0.011826713 ubox
49 54 0.003519858 ubox
49 56 0.003452772 ubox
49 67 0.003427486 ubox
49 68 0.996019189 ubox
50 67 0.997330111 ubox
51 66 0.993862600 ubox
53 64 0.997017346 ubox
53 67 0.003818841 ubox
54 61 0.019939007 ubox
54 63 0.998037529 ubox
54 66 0.004106883 ubox
55 67 0.004132383 ubox
56 61 0.406092907 ubox
56 63 0.012080834 ubox
56 66 0.004322581 ubox
61 68 0.014900360 ubox
62 67 0.014536684 ubox
64 91 0.003843672 ubox
66 95 0.003413941 ubox
67 87 0.005956877 ubox
67 88 0.009254778 ubox
67 92 0.009046892 ubox
68 91 0.010171115 ubox
69 86 0.998816774 ubox
70 85 0.999933896 ubox
71 84 0.999956309 ubox
72 83 0.999741849 ubox
73 82 0.999687891 ubox
74 81 0.999375178 ubox
75 80 0.885746595 ubox
86 91 0.006978837 ubox
91 95 0.055488173 ubox
91 98 0.120165342 ubox
91 101 0.045619398 ubox
91 104 0.029290207 ubox
91 107 0.008498559 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
