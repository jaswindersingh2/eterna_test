%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (972)
} def

/sequence { (\
GGAAAGCUCGACGUCGAAAGACGAGCUCGUAGUAAAAAAAGCUACGAGCAGCCGGAAACGGCACGAGCACUUUAUUUCGAUAAAGUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 70 0.006498182 ubox
1 71 0.021324919 ubox
1 73 0.030653037 ubox
1 78 0.016045233 ubox
1 95 0.067150503 ubox
1 98 0.067624013 ubox
1 101 0.069141451 ubox
1 104 0.069451323 ubox
1 107 0.017535068 ubox
2 68 0.003169429 ubox
2 70 0.028319300 ubox
2 71 0.003502375 ubox
2 72 0.037668004 ubox
2 73 0.023679469 ubox
2 77 0.015849828 ubox
2 78 0.035127761 ubox
2 95 0.035428595 ubox
2 98 0.035579882 ubox
2 101 0.036326835 ubox
2 104 0.036188186 ubox
2 107 0.011808559 ubox
3 71 0.038419084 ubox
3 72 0.024352233 ubox
3 73 0.016540498 ubox
3 76 0.015377956 ubox
3 77 0.035167523 ubox
4 71 0.023124860 ubox
4 72 0.018084273 ubox
4 73 0.005666396 ubox
4 75 0.013581797 ubox
4 76 0.034951085 ubox
5 71 0.016726355 ubox
5 72 0.006841283 ubox
5 73 0.005208492 ubox
5 75 0.034255526 ubox
6 68 0.998867645 ubox
6 70 0.007883467 ubox
7 67 0.999958485 ubox
8 66 0.999826208 ubox
9 65 0.999902870 ubox
10 64 0.981001295 ubox
12 23 0.980433247 ubox
13 22 0.999312164 ubox
13 62 0.003519584 ubox
14 21 0.999229820 ubox
14 24 0.030298916 ubox
14 61 0.003515079 ubox
15 20 0.998902464 ubox
15 23 0.032389857 ubox
15 60 0.003516471 ubox
16 22 0.032050713 ubox
16 59 0.003490904 ubox
22 54 0.003343378 ubox
23 53 0.003336116 ubox
25 49 0.998935520 ubox
26 48 0.999975562 ubox
27 47 0.999847818 ubox
28 46 0.999969571 ubox
29 45 0.999958067 ubox
30 44 0.999743697 ubox
31 43 0.999693794 ubox
32 42 0.999861201 ubox
33 37 0.003375374 ubox
33 38 0.008941520 ubox
33 39 0.011490847 ubox
33 40 0.057857101 ubox
33 41 0.986358763 ubox
51 62 0.998933671 ubox
52 61 0.999978959 ubox
53 60 0.999966293 ubox
54 59 0.997194408 ubox
55 59 0.007105385 ubox
68 91 0.003660048 ubox
69 86 0.927745939 ubox
70 79 0.004967555 ubox
70 85 0.974511702 ubox
70 91 0.112078688 ubox
71 83 0.003857016 ubox
71 84 0.974578704 ubox
71 88 0.007043302 ubox
71 89 0.141270224 ubox
71 90 0.098902070 ubox
71 91 0.005996038 ubox
71 92 0.010698952 ubox
71 93 0.014368140 ubox
71 94 0.006815484 ubox
71 96 0.003791571 ubox
71 97 0.006907269 ubox
71 99 0.004549841 ubox
71 100 0.003840658 ubox
72 79 0.003203324 ubox
72 80 0.003987771 ubox
72 82 0.004650491 ubox
72 83 0.973898527 ubox
72 84 0.004161447 ubox
72 87 0.007175388 ubox
72 88 0.164203436 ubox
72 89 0.082069212 ubox
72 90 0.006002852 ubox
72 91 0.011070878 ubox
72 92 0.015871606 ubox
72 93 0.007876340 ubox
72 96 0.007476606 ubox
72 97 0.028643425 ubox
72 99 0.003949507 ubox
73 79 0.004527583 ubox
73 80 0.005012876 ubox
73 82 0.974040750 ubox
73 83 0.004369381 ubox
73 87 0.176208036 ubox
73 88 0.060350312 ubox
73 89 0.005217871 ubox
73 90 0.010207385 ubox
73 91 0.015500235 ubox
73 92 0.007325937 ubox
73 96 0.031472089 ubox
73 97 0.003385596 ubox
74 81 0.963107257 ubox
74 86 0.184742045 ubox
75 79 0.034560952 ubox
75 80 0.879728416 ubox
75 82 0.007133504 ubox
75 83 0.006242883 ubox
75 84 0.015799320 ubox
75 85 0.184213546 ubox
75 87 0.005643203 ubox
75 88 0.012170050 ubox
75 89 0.018461452 ubox
75 90 0.006237559 ubox
75 93 0.003682266 ubox
75 94 0.068568910 ubox
76 80 0.027968540 ubox
76 82 0.008506892 ubox
76 83 0.018061064 ubox
76 84 0.181573968 ubox
76 85 0.008647021 ubox
76 87 0.011845954 ubox
76 88 0.020037909 ubox
76 89 0.006747844 ubox
76 90 0.004052436 ubox
76 92 0.003761401 ubox
76 93 0.079802250 ubox
77 82 0.016928810 ubox
77 83 0.170092858 ubox
77 84 0.009614193 ubox
77 87 0.019796438 ubox
77 88 0.006177297 ubox
77 89 0.004092269 ubox
77 91 0.003194557 ubox
77 92 0.082224207 ubox
78 85 0.033401573 ubox
78 91 0.082503585 ubox
79 86 0.003544221 ubox
80 86 0.005910898 ubox
81 85 0.005671502 ubox
81 87 0.012874580 ubox
81 88 0.023141394 ubox
81 89 0.006918550 ubox
81 90 0.003728903 ubox
82 86 0.011983730 ubox
85 95 0.019603665 ubox
85 98 0.013077477 ubox
85 101 0.010420785 ubox
85 104 0.009700905 ubox
86 90 0.003447163 ubox
86 91 0.006509138 ubox
86 92 0.005996748 ubox
86 93 0.007771446 ubox
86 94 0.019588641 ubox
86 97 0.012993909 ubox
86 100 0.010307556 ubox
86 103 0.009595036 ubox
91 95 0.042628031 ubox
91 98 0.102793514 ubox
91 101 0.045067344 ubox
91 104 0.034875692 ubox
91 107 0.010318422 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
