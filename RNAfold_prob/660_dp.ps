%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (660)
} def

/sequence { (\
GGAAACUGCUAGCCCACACUAAAACCGGGCCCGCGCCCUAUAUCCCAGCGCACGCAGCUUUAUCUACCUCGAUGUUUCGACAUCGAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.018496182 ubox
1 7 0.005125163 ubox
1 9 0.004184097 ubox
1 10 0.006916227 ubox
1 15 0.006068977 ubox
1 26 0.003810737 ubox
1 32 0.014818730 ubox
1 37 0.021390327 ubox
1 38 0.026186967 ubox
1 39 0.006286189 ubox
1 45 0.032984138 ubox
1 46 0.010416868 ubox
1 58 0.027198598 ubox
1 59 0.055851733 ubox
1 60 0.018847309 ubox
1 61 0.089571826 ubox
1 63 0.025378194 ubox
1 64 0.133684681 ubox
1 65 0.169915561 ubox
1 67 0.011889498 ubox
1 68 0.109858907 ubox
1 95 0.065373927 ubox
1 98 0.065732129 ubox
1 101 0.066050358 ubox
1 104 0.066114201 ubox
1 107 0.016656094 ubox
2 6 0.005661721 ubox
2 9 0.007473002 ubox
2 14 0.006060636 ubox
2 25 0.003806160 ubox
2 31 0.014820238 ubox
2 36 0.021496968 ubox
2 37 0.026160237 ubox
2 38 0.006662047 ubox
2 44 0.033245065 ubox
2 45 0.009926411 ubox
2 58 0.064479411 ubox
2 59 0.026325199 ubox
2 60 0.103225382 ubox
2 61 0.705065106 ubox
2 63 0.118694631 ubox
2 64 0.180112988 ubox
2 65 0.006120082 ubox
2 67 0.109504976 ubox
2 68 0.005672383 ubox
2 95 0.023270047 ubox
2 98 0.023438395 ubox
2 101 0.023536246 ubox
2 104 0.023368145 ubox
2 107 0.007609341 ubox
3 39 0.003557462 ubox
3 43 0.032659165 ubox
3 59 0.099944029 ubox
3 60 0.729087258 ubox
3 61 0.388098673 ubox
3 63 0.170371923 ubox
3 65 0.018424471 ubox
4 39 0.006207213 ubox
4 41 0.006477996 ubox
4 59 0.701499310 ubox
4 60 0.420286632 ubox
4 61 0.081731088 ubox
4 63 0.007244719 ubox
4 65 0.011282907 ubox
5 39 0.011118477 ubox
5 41 0.009291590 ubox
5 59 0.424107613 ubox
5 60 0.072455238 ubox
5 61 0.052030587 ubox
5 63 0.008684998 ubox
5 65 0.004551458 ubox
6 35 0.015088464 ubox
6 57 0.991281862 ubox
6 91 0.004771259 ubox
7 35 0.049211527 ubox
7 56 0.993881102 ubox
7 90 0.004579872 ubox
7 96 0.006766589 ubox
7 99 0.006781568 ubox
7 102 0.006589982 ubox
7 105 0.006608376 ubox
8 32 0.007796212 ubox
8 34 0.060904768 ubox
8 36 0.009593653 ubox
8 55 0.994409341 ubox
8 58 0.073590265 ubox
8 95 0.007215249 ubox
8 98 0.007233383 ubox
8 101 0.007058646 ubox
8 104 0.007081407 ubox
9 33 0.060919043 ubox
9 35 0.009622961 ubox
9 54 0.993131684 ubox
9 57 0.073647516 ubox
9 91 0.003527507 ubox
10 21 0.028896998 ubox
10 33 0.003832094 ubox
10 52 0.104273286 ubox
10 54 0.008918450 ubox
10 56 0.070424881 ubox
10 90 0.003402991 ubox
11 20 0.030260148 ubox
12 17 0.003738865 ubox
12 19 0.030241626 ubox
12 30 0.984422319 ubox
12 31 0.045174740 ubox
12 32 0.008992789 ubox
12 49 0.022990781 ubox
12 51 0.147281904 ubox
12 53 0.009022023 ubox
12 55 0.024261517 ubox
13 28 0.004689916 ubox
13 29 0.987815084 ubox
13 48 0.022876816 ubox
13 50 0.146840286 ubox
13 54 0.024127311 ubox
14 27 0.005133302 ubox
14 28 0.987831586 ubox
14 29 0.006707467 ubox
14 48 0.051101988 ubox
14 50 0.009993684 ubox
15 27 0.987036211 ubox
15 28 0.007639829 ubox
15 48 0.078122067 ubox
15 50 0.013199767 ubox
16 20 0.010030504 ubox
17 27 0.009834587 ubox
17 48 0.055641046 ubox
17 50 0.017272737 ubox
18 43 0.004355819 ubox
19 27 0.005772112 ubox
19 28 0.003778113 ubox
19 48 0.024194021 ubox
20 24 0.021971449 ubox
20 27 0.004055682 ubox
20 40 0.009425521 ubox
20 42 0.024801459 ubox
20 47 0.023485267 ubox
21 39 0.009764401 ubox
21 41 0.024875222 ubox
21 43 0.012416167 ubox
22 39 0.006968980 ubox
22 41 0.013668021 ubox
22 43 0.015317470 ubox
23 39 0.014624390 ubox
23 41 0.012569427 ubox
23 43 0.006381050 ubox
24 39 0.017246673 ubox
24 41 0.027655208 ubox
24 43 0.003712638 ubox
27 38 0.154585978 ubox
28 37 0.154907497 ubox
29 36 0.154912211 ubox
29 55 0.003388815 ubox
30 35 0.154452143 ubox
30 54 0.003565678 ubox
31 35 0.003471193 ubox
31 50 0.003690866 ubox
31 54 0.007319779 ubox
32 50 0.079398974 ubox
32 54 0.016009248 ubox
33 49 0.082420580 ubox
33 51 0.979724373 ubox
33 53 0.047573063 ubox
33 55 0.007724586 ubox
34 48 0.082404641 ubox
34 50 0.980761298 ubox
34 54 0.007721375 ubox
35 44 0.004523174 ubox
35 45 0.003357793 ubox
35 46 0.009221987 ubox
35 49 0.980736137 ubox
35 51 0.058070892 ubox
35 53 0.006415307 ubox
36 48 0.977247440 ubox
36 50 0.058019771 ubox
37 48 0.050987385 ubox
37 50 0.004164689 ubox
38 48 0.064658845 ubox
38 50 0.003448434 ubox
39 47 0.089119987 ubox
39 48 0.006618874 ubox
40 63 0.003751049 ubox
41 47 0.041556828 ubox
41 48 0.004584272 ubox
41 62 0.004825006 ubox
42 61 0.004848065 ubox
43 47 0.014653681 ubox
44 48 0.003609676 ubox
45 50 0.003388165 ubox
46 57 0.005663486 ubox
47 59 0.050546254 ubox
47 60 0.003413751 ubox
47 61 0.005206414 ubox
48 53 0.005768765 ubox
48 55 0.023499156 ubox
48 58 0.054174963 ubox
48 60 0.005707775 ubox
49 54 0.023493723 ubox
49 57 0.054184403 ubox
50 55 0.009043299 ubox
50 58 0.019638392 ubox
51 57 0.019654033 ubox
54 101 0.005253414 ubox
56 65 0.004324216 ubox
57 64 0.004571633 ubox
57 95 0.008054613 ubox
57 98 0.014741953 ubox
57 101 0.003381720 ubox
58 91 0.057993641 ubox
59 66 0.006668675 ubox
59 88 0.004162342 ubox
59 89 0.009486877 ubox
59 90 0.058034469 ubox
59 91 0.004056893 ubox
59 92 0.007414053 ubox
59 93 0.020707501 ubox
59 94 0.046262666 ubox
59 96 0.037877097 ubox
59 97 0.037127614 ubox
59 99 0.007742566 ubox
59 100 0.007961200 ubox
59 103 0.003700871 ubox
60 66 0.005364955 ubox
60 87 0.004678432 ubox
60 88 0.011151657 ubox
60 89 0.057461559 ubox
60 90 0.004881220 ubox
60 91 0.007407334 ubox
60 92 0.015492310 ubox
60 93 0.050248260 ubox
60 94 0.077085512 ubox
60 96 0.040462039 ubox
60 97 0.040208115 ubox
60 99 0.008504446 ubox
60 100 0.004791997 ubox
60 102 0.003965408 ubox
60 103 0.003395382 ubox
61 66 0.003990784 ubox
61 74 0.007513433 ubox
61 87 0.011917161 ubox
61 88 0.053643249 ubox
61 89 0.004880980 ubox
61 90 0.006822855 ubox
61 91 0.013163272 ubox
61 92 0.028251893 ubox
61 93 0.090276742 ubox
61 94 0.093616261 ubox
61 96 0.047069434 ubox
61 97 0.006692266 ubox
61 99 0.005094190 ubox
61 102 0.003661893 ubox
62 73 0.014396666 ubox
63 72 0.016685402 ubox
63 86 0.038186611 ubox
63 87 0.015186712 ubox
63 88 0.004327594 ubox
63 89 0.007153473 ubox
63 90 0.008967791 ubox
63 91 0.007545490 ubox
63 92 0.822416097 ubox
63 93 0.038360631 ubox
63 94 0.008515893 ubox
63 96 0.004763237 ubox
64 71 0.017085193 ubox
64 85 0.038269861 ubox
64 91 0.878741643 ubox
65 87 0.017344085 ubox
65 88 0.023387466 ubox
65 89 0.029343758 ubox
65 90 0.852009892 ubox
65 91 0.014889872 ubox
65 92 0.015309263 ubox
65 93 0.006177644 ubox
65 94 0.004034117 ubox
66 83 0.020735720 ubox
67 91 0.019634520 ubox
68 91 0.044304219 ubox
69 80 0.039615671 ubox
69 86 0.971360565 ubox
69 87 0.032414402 ubox
69 88 0.008029928 ubox
69 89 0.005162386 ubox
69 90 0.027333153 ubox
69 92 0.012263745 ubox
69 99 0.003494681 ubox
69 100 0.004119401 ubox
70 79 0.040543356 ubox
70 85 0.997486293 ubox
70 91 0.012825294 ubox
71 78 0.040543455 ubox
71 84 0.997947345 ubox
71 98 0.028717262 ubox
72 77 0.039642974 ubox
72 83 0.997727733 ubox
73 82 0.997559669 ubox
73 96 0.040937183 ubox
74 81 0.997391039 ubox
74 95 0.044591557 ubox
74 101 0.003289883 ubox
75 79 0.035939452 ubox
75 80 0.921997612 ubox
75 88 0.017462792 ubox
75 94 0.044565991 ubox
75 100 0.003188358 ubox
76 80 0.028182047 ubox
76 87 0.019293811 ubox
76 93 0.044473156 ubox
77 86 0.019951461 ubox
77 92 0.044448054 ubox
78 85 0.020043840 ubox
78 91 0.044440177 ubox
79 84 0.019833303 ubox
83 92 0.007923257 ubox
84 91 0.008451013 ubox
91 95 0.019928758 ubox
91 98 0.048247941 ubox
91 101 0.021258185 ubox
91 104 0.016525621 ubox
91 107 0.004890458 ubox
2 61 0.9500000 lbox
3 60 0.9500000 lbox
4 59 0.9500000 lbox
6 57 0.9500000 lbox
7 56 0.9500000 lbox
8 55 0.9500000 lbox
9 54 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
63 92 0.9500000 lbox
64 91 0.9500000 lbox
65 90 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
