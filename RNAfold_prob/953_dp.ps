%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (953)
} def

/sequence { (\
GGAAAGUGACAGAUGGAAACAUCAGUAGUACUGGAAAAAACAGUACUACAGAAGGAAACUUCAGUCACUCUUCCUUUCGAGGAAGAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 68 0.003679138 ubox
1 69 0.003231655 ubox
1 70 0.007409835 ubox
1 71 0.010520913 ubox
1 73 0.036046789 ubox
1 74 0.429215415 ubox
1 95 0.060822714 ubox
1 98 0.061221470 ubox
1 101 0.062656040 ubox
1 104 0.062939100 ubox
1 107 0.015890884 ubox
2 68 0.004672304 ubox
2 69 0.006593261 ubox
2 70 0.016328422 ubox
2 72 0.036927269 ubox
2 73 0.430167831 ubox
2 95 0.032087296 ubox
2 98 0.032212231 ubox
2 101 0.032914184 ubox
2 104 0.032788768 ubox
2 107 0.010699352 ubox
3 69 0.014493355 ubox
3 71 0.042196653 ubox
3 72 0.428979533 ubox
4 69 0.027708169 ubox
4 71 0.415681140 ubox
4 72 0.005879043 ubox
5 69 0.730674103 ubox
5 71 0.005039376 ubox
6 68 0.997753959 ubox
6 69 0.004940966 ubox
6 70 0.004349355 ubox
6 95 0.008403287 ubox
6 98 0.007958141 ubox
6 101 0.007906987 ubox
6 104 0.007761768 ubox
7 67 0.999119848 ubox
7 94 0.007922326 ubox
7 96 0.003715151 ubox
7 97 0.007216793 ubox
7 99 0.003598711 ubox
7 100 0.007171549 ubox
7 103 0.007034063 ubox
8 66 0.999847699 ubox
8 95 0.004302552 ubox
8 98 0.004177100 ubox
8 101 0.003770647 ubox
9 65 0.999452053 ubox
10 64 0.998125734 ubox
10 91 0.004216104 ubox
12 23 0.997355063 ubox
12 62 0.040046347 ubox
13 22 0.998337078 ubox
13 61 0.039220847 ubox
14 21 0.998295971 ubox
14 24 0.010599266 ubox
14 63 0.003838150 ubox
15 20 0.998085394 ubox
15 23 0.011666809 ubox
15 59 0.034154568 ubox
15 60 0.009838325 ubox
15 62 0.003857559 ubox
16 20 0.007663304 ubox
16 22 0.008525606 ubox
16 23 0.012686761 ubox
16 59 0.010457213 ubox
16 61 0.003798939 ubox
17 22 0.011681663 ubox
17 60 0.003651849 ubox
20 54 0.035669008 ubox
20 55 0.007526890 ubox
22 52 0.039596152 ubox
23 51 0.040151995 ubox
25 49 0.998276029 ubox
26 48 0.999476057 ubox
27 47 0.999675877 ubox
28 46 0.999976456 ubox
29 45 0.999745903 ubox
30 44 0.999745963 ubox
31 43 0.999977052 ubox
32 42 0.999710965 ubox
33 41 0.999425067 ubox
34 41 0.024959387 ubox
50 60 0.005131977 ubox
51 59 0.005469301 ubox
51 61 0.004822347 ubox
51 62 0.997039496 ubox
52 60 0.003994689 ubox
52 61 0.997899562 ubox
53 60 0.997789682 ubox
53 61 0.008535329 ubox
54 59 0.997478883 ubox
54 60 0.010825629 ubox
54 62 0.015205365 ubox
55 59 0.012860855 ubox
55 61 0.014712229 ubox
55 62 0.017066140 ubox
56 60 0.012561176 ubox
56 61 0.015999910 ubox
65 92 0.003578052 ubox
66 91 0.003857935 ubox
68 91 0.004990445 ubox
69 83 0.011268659 ubox
69 86 0.644171250 ubox
69 87 0.029537622 ubox
69 88 0.006382562 ubox
69 89 0.004584921 ubox
69 90 0.004510369 ubox
69 92 0.013553864 ubox
70 82 0.015733576 ubox
70 85 0.899446269 ubox
70 91 0.018771736 ubox
71 81 0.015745444 ubox
71 84 0.900472013 ubox
71 90 0.018475737 ubox
71 93 0.011900591 ubox
72 80 0.015764916 ubox
72 83 0.901095001 ubox
72 89 0.016101792 ubox
72 92 0.013424010 ubox
73 79 0.015725787 ubox
73 82 0.901462108 ubox
73 91 0.013538610 ubox
74 79 0.003525146 ubox
74 81 0.901191107 ubox
74 82 0.005023207 ubox
74 85 0.015480584 ubox
74 91 0.017199415 ubox
75 79 0.025491980 ubox
75 80 0.833269872 ubox
75 81 0.006704729 ubox
75 82 0.003434540 ubox
75 83 0.007248584 ubox
75 84 0.019470348 ubox
75 85 0.042987226 ubox
75 86 0.012427801 ubox
75 87 0.013768115 ubox
75 88 0.350912956 ubox
75 89 0.028865728 ubox
75 90 0.020632947 ubox
75 91 0.008031504 ubox
75 92 0.008200243 ubox
75 93 0.007278933 ubox
75 94 0.094948258 ubox
75 96 0.003518147 ubox
76 80 0.025998745 ubox
76 81 0.003342538 ubox
76 82 0.007545049 ubox
76 83 0.019906593 ubox
76 84 0.050501913 ubox
76 85 0.012794161 ubox
76 86 0.012463194 ubox
76 87 0.389623407 ubox
76 88 0.026079670 ubox
76 89 0.015911820 ubox
76 90 0.006599293 ubox
76 91 0.007481569 ubox
76 92 0.006716843 ubox
76 93 0.111337858 ubox
76 94 0.003281803 ubox
77 81 0.005724678 ubox
77 82 0.018425237 ubox
77 83 0.052240331 ubox
77 84 0.011169439 ubox
77 85 0.008751461 ubox
77 86 0.399114128 ubox
77 87 0.019055709 ubox
77 88 0.008460173 ubox
77 89 0.004023778 ubox
77 90 0.004244199 ubox
77 91 0.004931719 ubox
77 92 0.114936958 ubox
78 82 0.052109299 ubox
78 85 0.400601662 ubox
78 91 0.115365923 ubox
79 98 0.004580251 ubox
79 101 0.004266521 ubox
79 104 0.003659459 ubox
81 95 0.009970846 ubox
81 98 0.008602859 ubox
81 101 0.007321230 ubox
81 104 0.006656224 ubox
82 95 0.004803951 ubox
82 98 0.004606443 ubox
82 101 0.003834302 ubox
85 95 0.006084691 ubox
85 98 0.004751906 ubox
85 101 0.003962785 ubox
85 104 0.003478641 ubox
91 95 0.042547776 ubox
91 98 0.102782496 ubox
91 101 0.045183276 ubox
91 104 0.035045637 ubox
91 107 0.010370419 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
