%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (942)
} def

/sequence { (\
GGAAAUAUCGAGUACAAAAGUACACUAGUAUUGAAAAAAACAAUACUAGACACGAAAACGUGACGAUAUUUCCAGUUCGCUGGAAAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 73 0.992616966 ubox
1 95 0.008179057 ubox
1 98 0.008348718 ubox
1 101 0.008531618 ubox
1 104 0.008597498 ubox
2 9 0.003452333 ubox
2 71 0.004917437 ubox
2 72 0.994006225 ubox
2 95 0.003965086 ubox
2 98 0.004013259 ubox
2 101 0.004058632 ubox
2 104 0.004042294 ubox
3 70 0.005841264 ubox
3 71 0.994372717 ubox
4 69 0.005190239 ubox
4 70 0.995232573 ubox
5 69 0.997688752 ubox
6 68 0.999217055 ubox
7 67 0.999415167 ubox
8 66 0.999693943 ubox
8 92 0.003164050 ubox
9 65 0.999878131 ubox
9 91 0.003352305 ubox
10 25 0.012048780 ubox
10 64 0.980790864 ubox
11 21 0.003899664 ubox
12 23 0.997449005 ubox
13 19 0.003762157 ubox
13 22 0.998642835 ubox
13 62 0.007194462 ubox
13 63 0.003447233 ubox
14 21 0.998604456 ubox
14 61 0.007626917 ubox
15 20 0.996881181 ubox
15 60 0.007635195 ubox
20 53 0.007064602 ubox
21 52 0.006820316 ubox
25 49 0.993012273 ubox
26 48 0.999080026 ubox
26 49 0.004052491 ubox
27 47 0.999643262 ubox
28 46 0.999976158 ubox
29 45 0.999732816 ubox
30 44 0.999470332 ubox
31 39 0.003197286 ubox
31 40 0.005677167 ubox
31 43 0.998975288 ubox
32 37 0.003837855 ubox
32 38 0.004908358 ubox
32 39 0.008692576 ubox
32 40 0.006095967 ubox
32 42 0.998973170 ubox
32 43 0.003967454 ubox
33 41 0.997189297 ubox
49 64 0.016408266 ubox
50 61 0.027377313 ubox
51 60 0.028054751 ubox
51 62 0.994016239 ubox
52 61 0.998291971 ubox
53 60 0.998858486 ubox
53 62 0.010283746 ubox
54 59 0.973038931 ubox
54 61 0.008189727 ubox
69 86 0.042515031 ubox
69 87 0.003414527 ubox
70 85 0.075459222 ubox
70 86 0.004908994 ubox
71 84 0.099699709 ubox
71 85 0.004569103 ubox
72 83 0.109078841 ubox
73 82 0.114722416 ubox
74 81 0.130619598 ubox
75 80 0.131369415 ubox
75 81 0.004289648 ubox
75 95 0.412280983 ubox
75 98 0.288538045 ubox
75 101 0.287642522 ubox
75 104 0.265668964 ubox
75 107 0.079121675 ubox
76 82 0.008742614 ubox
76 83 0.009346009 ubox
76 84 0.055074652 ubox
76 85 0.465522991 ubox
76 86 0.031493610 ubox
76 87 0.017007261 ubox
76 88 0.010443834 ubox
76 89 0.008557288 ubox
76 90 0.007322653 ubox
76 91 0.005709088 ubox
76 92 0.010623040 ubox
76 93 0.275655632 ubox
76 94 0.371564647 ubox
76 96 0.016941605 ubox
76 97 0.285966363 ubox
76 99 0.005618777 ubox
76 100 0.286913617 ubox
76 102 0.005802528 ubox
76 103 0.264996360 ubox
76 105 0.004178873 ubox
76 106 0.079744878 ubox
77 82 0.008767152 ubox
77 83 0.058461366 ubox
77 84 0.537557547 ubox
77 85 0.026360408 ubox
77 86 0.014962847 ubox
77 87 0.007882272 ubox
77 88 0.007193664 ubox
77 89 0.006742795 ubox
77 90 0.005712795 ubox
77 91 0.008324686 ubox
77 92 0.347042646 ubox
77 93 0.316639979 ubox
77 94 0.102793564 ubox
77 96 0.258851760 ubox
77 97 0.008703922 ubox
77 99 0.276108111 ubox
77 100 0.017856962 ubox
77 102 0.255038291 ubox
77 103 0.013133359 ubox
77 105 0.077075178 ubox
77 106 0.008884382 ubox
78 82 0.058473501 ubox
78 83 0.545259897 ubox
78 91 0.385294111 ubox
79 95 0.078544012 ubox
79 98 0.277814197 ubox
79 101 0.226146678 ubox
79 104 0.086714005 ubox
79 107 0.018682720 ubox
80 91 0.458498304 ubox
81 85 0.006568538 ubox
81 86 0.041728226 ubox
81 87 0.062994195 ubox
81 88 0.220942309 ubox
81 89 0.067570673 ubox
81 90 0.459646535 ubox
81 91 0.012554248 ubox
81 92 0.021413494 ubox
81 93 0.027460303 ubox
81 94 0.022066173 ubox
81 96 0.312865342 ubox
81 97 0.023365035 ubox
81 99 0.253355868 ubox
81 100 0.017742914 ubox
81 102 0.112900571 ubox
81 103 0.007474353 ubox
81 105 0.059897352 ubox
81 106 0.004241847 ubox
82 95 0.320015793 ubox
82 98 0.259220196 ubox
82 101 0.117752988 ubox
82 104 0.064538992 ubox
82 107 0.006796135 ubox
83 95 0.027948898 ubox
83 98 0.017137688 ubox
83 101 0.010052680 ubox
83 104 0.007927361 ubox
91 95 0.029221763 ubox
91 98 0.067990514 ubox
91 101 0.029973997 ubox
91 104 0.023376731 ubox
91 107 0.006918942 ubox
1 73 0.9500000 lbox
2 72 0.9500000 lbox
3 71 0.9500000 lbox
4 70 0.9500000 lbox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
76 85 0.9500000 lbox
77 84 0.9500000 lbox
78 83 0.9500000 lbox
showpage
end
%%EOF
