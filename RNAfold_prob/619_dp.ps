%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (619)
} def

/sequence { (\
GGAAAAGAUGGUGGUGGUGGUAUAUAUAUAGAAAAAAAAAAAAUAUAUAUAUAUUAUUAUUAUUAUAGGGUGGUGUUCGCAUUAUUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.003491897 ubox
1 71 0.010231294 ubox
1 74 0.005462285 ubox
1 78 0.017495996 ubox
1 80 0.017365598 ubox
1 86 0.004228264 ubox
1 95 0.052734828 ubox
1 98 0.053782368 ubox
1 101 0.059703108 ubox
1 104 0.067482181 ubox
1 107 0.017736896 ubox
2 66 0.004936451 ubox
2 71 0.016723966 ubox
2 74 0.003647170 ubox
2 77 0.017419077 ubox
2 78 0.028537351 ubox
2 80 0.003252101 ubox
2 83 0.005955416 ubox
2 86 0.009643408 ubox
2 95 0.027831066 ubox
2 98 0.028328593 ubox
2 101 0.031031284 ubox
2 104 0.034791610 ubox
2 107 0.011803920 ubox
3 9 0.003939105 ubox
3 66 0.006935965 ubox
3 71 0.040862181 ubox
3 74 0.003659337 ubox
3 76 0.016995318 ubox
3 77 0.028488116 ubox
3 82 0.005632553 ubox
3 83 0.004672997 ubox
3 85 0.008601172 ubox
3 86 0.007561871 ubox
4 9 0.003941610 ubox
4 66 0.008813391 ubox
4 71 0.027631545 ubox
4 74 0.004282776 ubox
4 76 0.027561066 ubox
4 77 0.004104729 ubox
4 82 0.004244911 ubox
4 83 0.004632233 ubox
4 85 0.006165658 ubox
4 86 0.007161128 ubox
5 66 0.013536008 ubox
5 71 0.018976552 ubox
5 74 0.006044265 ubox
5 76 0.004243860 ubox
5 82 0.004226826 ubox
5 83 0.005196745 ubox
5 85 0.005962284 ubox
5 86 0.006821165 ubox
6 64 0.003461826 ubox
6 66 0.019197449 ubox
6 71 0.005145116 ubox
6 74 0.003579448 ubox
6 82 0.004741154 ubox
6 83 0.003359521 ubox
6 85 0.005543086 ubox
6 86 0.005198044 ubox
7 64 0.030006605 ubox
7 66 0.051531197 ubox
7 71 0.008407406 ubox
7 74 0.003403151 ubox
7 83 0.005425540 ubox
7 86 0.008819007 ubox
7 95 0.032005067 ubox
7 98 0.033947212 ubox
7 101 0.034973642 ubox
7 104 0.038924387 ubox
7 107 0.014182335 ubox
8 63 0.030897985 ubox
8 64 0.006207482 ubox
8 66 0.946040953 ubox
8 71 0.006338579 ubox
8 82 0.005001858 ubox
8 85 0.007910463 ubox
9 62 0.030853105 ubox
9 65 0.982762515 ubox
9 67 0.012712015 ubox
9 68 0.004300576 ubox
9 70 0.005248480 ubox
9 81 0.004768791 ubox
9 84 0.007656167 ubox
9 96 0.014347338 ubox
9 99 0.014133515 ubox
9 102 0.015034580 ubox
9 105 0.012425407 ubox
10 61 0.030574919 ubox
10 63 0.004232036 ubox
10 64 0.992068006 ubox
10 66 0.011018530 ubox
10 80 0.004090096 ubox
10 83 0.007151666 ubox
10 95 0.015050620 ubox
10 98 0.014871040 ubox
10 101 0.015820244 ubox
10 104 0.013574351 ubox
11 60 0.030017634 ubox
11 63 0.997600149 ubox
11 64 0.006394763 ubox
11 66 0.010315658 ubox
11 82 0.006387198 ubox
12 59 0.029891457 ubox
12 62 0.998691955 ubox
12 65 0.010526883 ubox
12 81 0.006285856 ubox
12 96 0.003352668 ubox
12 99 0.003479776 ubox
13 58 0.029550360 ubox
13 61 0.997248889 ubox
13 64 0.010411153 ubox
13 80 0.005712840 ubox
13 95 0.003922218 ubox
13 98 0.004069112 ubox
13 101 0.003496901 ubox
14 57 0.028947973 ubox
14 60 0.998307644 ubox
14 63 0.010073473 ubox
15 56 0.028812342 ubox
15 59 0.998951810 ubox
15 62 0.009988421 ubox
16 55 0.028438712 ubox
16 58 0.997381029 ubox
16 61 0.009780826 ubox
17 54 0.027722085 ubox
17 57 0.998364900 ubox
17 60 0.009370494 ubox
18 53 0.026748412 ubox
18 56 0.999001362 ubox
18 59 0.009273096 ubox
19 52 0.019323958 ubox
19 55 0.997423787 ubox
19 58 0.009045734 ubox
20 50 0.004720875 ubox
20 52 0.020381482 ubox
20 54 0.998390751 ubox
20 57 0.008580316 ubox
21 49 0.005172335 ubox
21 51 0.027442992 ubox
21 53 0.999217204 ubox
21 56 0.008393078 ubox
22 48 0.005207923 ubox
22 50 0.028156090 ubox
22 52 0.999041217 ubox
22 54 0.006662623 ubox
22 55 0.006122122 ubox
23 47 0.005218147 ubox
23 49 0.028498196 ubox
23 51 0.999006881 ubox
23 53 0.008990638 ubox
24 46 0.005222896 ubox
24 48 0.028720958 ubox
24 50 0.998997812 ubox
24 52 0.009392099 ubox
25 45 0.005227361 ubox
25 47 0.029007069 ubox
25 49 0.998985789 ubox
25 51 0.009771628 ubox
26 44 0.005211334 ubox
26 46 0.029219789 ubox
26 48 0.998974692 ubox
26 50 0.010044345 ubox
27 43 0.005053736 ubox
27 45 0.029487837 ubox
27 47 0.998947842 ubox
27 49 0.010392013 ubox
28 44 0.029573667 ubox
28 46 0.998793321 ubox
28 48 0.010645941 ubox
29 42 0.003283805 ubox
29 43 0.028753551 ubox
29 45 0.997785530 ubox
29 47 0.010962653 ubox
30 44 0.986293135 ubox
30 46 0.011083591 ubox
31 44 0.012599799 ubox
32 44 0.009971047 ubox
33 44 0.007180501 ubox
34 44 0.005573648 ubox
35 44 0.008302619 ubox
36 44 0.004012258 ubox
37 44 0.005559510 ubox
38 44 0.004018512 ubox
39 44 0.004018681 ubox
59 74 0.003282410 ubox
60 73 0.003357503 ubox
61 72 0.003784561 ubox
61 75 0.003567584 ubox
62 71 0.003879615 ubox
62 74 0.004087077 ubox
63 70 0.003865446 ubox
63 73 0.004148014 ubox
63 87 0.003688722 ubox
63 88 0.006566704 ubox
63 92 0.005044573 ubox
63 93 0.003848335 ubox
64 69 0.003786242 ubox
64 72 0.004541011 ubox
64 84 0.003183126 ubox
64 87 0.012433175 ubox
64 88 0.003499297 ubox
64 89 0.004578003 ubox
64 90 0.004766700 ubox
64 91 0.007545005 ubox
64 92 0.007232586 ubox
65 71 0.004704398 ubox
65 83 0.003639889 ubox
65 85 0.054863534 ubox
65 86 0.010959698 ubox
66 70 0.004464238 ubox
66 75 0.003386030 ubox
66 84 0.071086894 ubox
66 87 0.027948275 ubox
66 88 0.019930263 ubox
66 89 0.014637773 ubox
66 90 0.010133993 ubox
66 91 0.005057255 ubox
66 92 0.008320197 ubox
66 102 0.007681129 ubox
66 103 0.009842902 ubox
66 105 0.011599120 ubox
66 106 0.009306309 ubox
67 74 0.004835117 ubox
67 76 0.003420675 ubox
67 82 0.013100187 ubox
67 83 0.091979732 ubox
67 85 0.025490476 ubox
67 86 0.039563370 ubox
68 77 0.003418098 ubox
68 78 0.013009326 ubox
68 80 0.036482439 ubox
68 82 0.077019149 ubox
68 83 0.039558929 ubox
68 85 0.030155586 ubox
68 86 0.042690790 ubox
68 95 0.022161065 ubox
68 98 0.029752026 ubox
68 101 0.157288693 ubox
68 104 0.190147004 ubox
68 107 0.032496406 ubox
69 74 0.004204289 ubox
69 76 0.004037316 ubox
69 77 0.012548750 ubox
69 78 0.025894509 ubox
69 80 0.011978609 ubox
69 82 0.038798677 ubox
69 83 0.130051339 ubox
69 85 0.035171656 ubox
69 86 0.652577524 ubox
69 95 0.012672284 ubox
69 98 0.037319804 ubox
69 101 0.248393035 ubox
69 104 0.112995894 ubox
69 107 0.025156327 ubox
70 76 0.010322060 ubox
70 77 0.024080175 ubox
70 78 0.034139925 ubox
70 80 0.213762197 ubox
70 82 0.145884066 ubox
70 83 0.006299620 ubox
70 85 0.724732792 ubox
70 86 0.020799135 ubox
70 95 0.019656998 ubox
70 98 0.174100314 ubox
70 101 0.346973134 ubox
70 104 0.144111249 ubox
70 107 0.032778255 ubox
71 79 0.214050119 ubox
71 81 0.147402291 ubox
71 84 0.732143787 ubox
71 87 0.031509307 ubox
71 92 0.003837087 ubox
71 94 0.019159934 ubox
71 96 0.035460753 ubox
71 97 0.164488319 ubox
71 99 0.364497824 ubox
71 100 0.297336458 ubox
71 102 0.145464667 ubox
71 103 0.124477251 ubox
71 105 0.068084440 ubox
71 106 0.028786746 ubox
72 76 0.005774422 ubox
72 77 0.003873465 ubox
72 78 0.213613455 ubox
72 80 0.147108522 ubox
72 82 0.003198219 ubox
72 83 0.732909302 ubox
72 86 0.034730734 ubox
72 95 0.040260029 ubox
72 98 0.428442921 ubox
72 101 0.171257177 ubox
72 104 0.076872356 ubox
72 107 0.008043290 ubox
73 77 0.138409777 ubox
73 78 0.073645442 ubox
73 80 0.028133887 ubox
73 82 0.734266801 ubox
73 85 0.035805339 ubox
73 95 0.155448551 ubox
73 98 0.255939704 ubox
73 101 0.099869720 ubox
73 104 0.034599414 ubox
73 107 0.007521824 ubox
74 79 0.030055180 ubox
74 81 0.734699178 ubox
74 84 0.035869447 ubox
74 90 0.003238444 ubox
74 92 0.007124285 ubox
74 93 0.005692691 ubox
74 94 0.155262617 ubox
74 96 0.442952915 ubox
74 97 0.191730672 ubox
74 99 0.171763655 ubox
74 100 0.074075344 ubox
74 102 0.075686618 ubox
74 103 0.026045183 ubox
74 105 0.024243847 ubox
74 106 0.005696785 ubox
75 80 0.730352994 ubox
75 82 0.005178501 ubox
75 83 0.035128667 ubox
75 85 0.004411209 ubox
75 95 0.527078633 ubox
75 98 0.203996586 ubox
75 101 0.089160493 ubox
75 104 0.027346235 ubox
76 81 0.006035243 ubox
76 84 0.004611314 ubox
76 89 0.004977057 ubox
76 90 0.008334421 ubox
76 91 0.006220494 ubox
76 92 0.014227184 ubox
76 93 0.348481795 ubox
76 94 0.441520744 ubox
76 96 0.007001757 ubox
76 97 0.199787152 ubox
76 100 0.088103009 ubox
76 103 0.027036474 ubox
77 81 0.006707696 ubox
77 87 0.003321671 ubox
77 88 0.005327170 ubox
77 89 0.008166959 ubox
77 90 0.006616204 ubox
77 91 0.012547558 ubox
77 92 0.466048643 ubox
77 93 0.329867132 ubox
77 94 0.022155611 ubox
77 96 0.176076440 ubox
77 97 0.006416435 ubox
77 99 0.080409023 ubox
77 102 0.024608463 ubox
78 91 0.548086459 ubox
79 85 0.005878344 ubox
79 86 0.011060076 ubox
79 95 0.099219921 ubox
79 98 0.042922839 ubox
79 101 0.011675245 ubox
80 91 0.098300876 ubox
81 85 0.009023284 ubox
81 86 0.052270946 ubox
82 87 0.106475992 ubox
82 88 0.074436133 ubox
82 89 0.094773517 ubox
82 90 0.098371556 ubox
82 91 0.057068191 ubox
82 92 0.072550361 ubox
82 93 0.045033919 ubox
82 94 0.027847638 ubox
82 96 0.004696419 ubox
82 97 0.014559494 ubox
82 100 0.003618391 ubox
83 87 0.067006352 ubox
83 88 0.094161546 ubox
83 89 0.095936030 ubox
83 90 0.060925427 ubox
83 91 0.072639430 ubox
83 92 0.048108784 ubox
83 93 0.029382949 ubox
83 94 0.012192365 ubox
83 96 0.015458439 ubox
83 97 0.003175191 ubox
83 99 0.004082520 ubox
85 89 0.014735876 ubox
85 90 0.024003231 ubox
85 91 0.018817007 ubox
85 92 0.040541016 ubox
85 93 0.018918318 ubox
85 94 0.024827268 ubox
85 97 0.006205358 ubox
85 100 0.004345303 ubox
85 103 0.003779882 ubox
86 90 0.017274541 ubox
86 91 0.041127201 ubox
86 92 0.021886123 ubox
86 93 0.027608564 ubox
86 94 0.007037374 ubox
86 96 0.007598307 ubox
86 97 0.004162284 ubox
86 99 0.005556732 ubox
86 100 0.003192443 ubox
86 102 0.004844535 ubox
86 105 0.003733435 ubox
91 95 0.034422951 ubox
91 98 0.082185212 ubox
91 101 0.035780258 ubox
91 104 0.027521902 ubox
91 107 0.008136633 ubox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 59 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
18 56 0.9500000 lbox
19 55 0.9500000 lbox
20 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
23 51 0.9500000 lbox
24 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
