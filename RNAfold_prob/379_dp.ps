%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (379)
} def

/sequence { (\
GGAAAAGUAAAUAUUUAUAAAAACUUAAUAUAUAUAUGAAAAUAUAUAUAUUAAUUAUAAAUAUUUACGUAAUUAUUCGUAAUUACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 68 0.004077511 ubox
1 73 0.003306793 ubox
1 74 0.007164344 ubox
1 78 0.019333226 ubox
1 86 0.004558629 ubox
1 95 0.067264318 ubox
1 98 0.067688824 ubox
1 101 0.069250588 ubox
1 104 0.069566833 ubox
1 107 0.017564166 ubox
2 68 0.005163841 ubox
2 73 0.007512849 ubox
2 74 0.012669973 ubox
2 77 0.019179034 ubox
2 78 0.017340676 ubox
2 95 0.035509905 ubox
2 98 0.035634832 ubox
2 101 0.036398433 ubox
2 104 0.036262399 ubox
2 107 0.011832735 ubox
3 73 0.012657167 ubox
3 74 0.006779660 ubox
3 76 0.018495629 ubox
3 77 0.017297112 ubox
4 70 0.006856714 ubox
4 73 0.007346703 ubox
4 74 0.005390433 ubox
4 76 0.016147886 ubox
5 70 0.012861491 ubox
5 73 0.004204901 ubox
5 74 0.011673537 ubox
6 70 0.008698021 ubox
6 73 0.011944369 ubox
6 74 0.004979054 ubox
7 68 0.997836544 ubox
7 86 0.003629444 ubox
7 95 0.004896058 ubox
7 98 0.004906085 ubox
7 101 0.004746193 ubox
7 104 0.004710015 ubox
8 67 0.999291437 ubox
8 85 0.003622199 ubox
8 94 0.004126336 ubox
8 97 0.004136115 ubox
8 100 0.004000572 ubox
8 103 0.003969817 ubox
9 66 0.999127723 ubox
9 84 0.003546091 ubox
10 65 0.998559600 ubox
11 64 0.998970903 ubox
12 63 0.999452411 ubox
13 62 0.999453127 ubox
14 61 0.998975975 ubox
15 60 0.998589116 ubox
16 59 0.999182844 ubox
17 58 0.999392772 ubox
18 57 0.998969769 ubox
19 55 0.015947088 ubox
19 56 0.992285446 ubox
19 58 0.003263088 ubox
20 55 0.969538890 ubox
20 56 0.064632902 ubox
21 55 0.088890424 ubox
21 56 0.040192136 ubox
22 52 0.004007421 ubox
22 55 0.060901926 ubox
22 56 0.054931153 ubox
23 52 0.008487350 ubox
23 55 0.091381737 ubox
23 56 0.036437356 ubox
25 53 0.015884715 ubox
25 54 0.979645098 ubox
26 53 0.997282060 ubox
26 54 0.015779892 ubox
27 51 0.003213137 ubox
27 52 0.998824263 ubox
28 49 0.004594115 ubox
28 51 0.998964578 ubox
29 48 0.005342839 ubox
29 50 0.999427632 ubox
30 47 0.005529913 ubox
30 49 0.999450085 ubox
30 51 0.003191273 ubox
31 46 0.005739782 ubox
31 48 0.999448326 ubox
31 50 0.003916540 ubox
32 45 0.005890955 ubox
32 47 0.999445851 ubox
32 49 0.004319034 ubox
33 44 0.006083568 ubox
33 46 0.999442124 ubox
33 48 0.004793672 ubox
34 43 0.006218485 ubox
34 45 0.999434967 ubox
34 47 0.005122896 ubox
35 42 0.006173792 ubox
35 44 0.999395068 ubox
35 46 0.005526944 ubox
36 43 0.997754407 ubox
36 45 0.005810454 ubox
37 41 0.010633524 ubox
37 42 0.986463330 ubox
37 44 0.006050951 ubox
38 43 0.005082940 ubox
65 82 0.004530221 ubox
66 81 0.006675630 ubox
67 80 0.007318105 ubox
68 79 0.007632464 ubox
69 78 0.010375294 ubox
69 86 0.995769253 ubox
69 95 0.010042774 ubox
69 98 0.010668532 ubox
69 101 0.012769620 ubox
69 104 0.005440336 ubox
70 85 0.996955798 ubox
70 94 0.009629018 ubox
70 97 0.010242052 ubox
70 100 0.012362051 ubox
70 103 0.005149860 ubox
71 84 0.996774658 ubox
72 80 0.003934360 ubox
72 83 0.996387244 ubox
73 79 0.004301122 ubox
73 81 0.009773902 ubox
73 82 0.995901860 ubox
73 92 0.004245273 ubox
73 94 0.004473014 ubox
73 96 0.003711850 ubox
73 97 0.006834369 ubox
74 79 0.008945135 ubox
74 81 0.980855007 ubox
74 82 0.007513587 ubox
74 85 0.004930861 ubox
74 91 0.004372011 ubox
74 93 0.003608965 ubox
74 96 0.006760077 ubox
75 80 0.884235956 ubox
75 83 0.005136564 ubox
75 84 0.005309454 ubox
76 81 0.014414834 ubox
76 82 0.006388744 ubox
76 88 0.003987480 ubox
76 89 0.006407139 ubox
76 93 0.030215396 ubox
77 81 0.006467739 ubox
77 87 0.004339990 ubox
77 88 0.006805161 ubox
77 92 0.034205565 ubox
78 91 0.034616775 ubox
79 86 0.018984460 ubox
79 95 0.009552333 ubox
79 98 0.009981767 ubox
79 101 0.005441059 ubox
79 104 0.004792319 ubox
80 85 0.017790466 ubox
80 89 0.007812354 ubox
80 94 0.009239577 ubox
80 97 0.009783739 ubox
80 100 0.005292151 ubox
80 103 0.004659214 ubox
83 90 0.005536731 ubox
83 92 0.005316252 ubox
83 93 0.003497879 ubox
83 94 0.007491454 ubox
84 89 0.005302455 ubox
84 91 0.005475572 ubox
84 92 0.003861453 ubox
84 93 0.007726605 ubox
86 91 0.009767824 ubox
91 95 0.043002828 ubox
91 98 0.103689839 ubox
91 101 0.045494985 ubox
91 104 0.035213034 ubox
91 107 0.010418382 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
10 65 0.9500000 lbox
11 64 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
16 59 0.9500000 lbox
17 58 0.9500000 lbox
18 57 0.9500000 lbox
19 56 0.9500000 lbox
20 55 0.9500000 lbox
25 54 0.9500000 lbox
26 53 0.9500000 lbox
27 52 0.9500000 lbox
28 51 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
34 45 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
