%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (995)
} def

/sequence { (\
GGAAACGGCCAGGCCAACCUCAAAGAGGAAGCAUCAAAGAUGCACGGAGAAACUCCACGCGAAACGCAAGCCUCGUUCGCGAGGCUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.105776831 ubox
1 9 0.007957141 ubox
1 10 0.185997005 ubox
1 15 0.032453841 ubox
1 19 0.023428558 ubox
1 21 0.008718896 ubox
1 45 0.043403894 ubox
1 56 0.093793586 ubox
1 58 0.089674209 ubox
1 60 0.017589043 ubox
1 65 0.018880761 ubox
1 67 0.023822607 ubox
1 85 0.004369471 ubox
1 86 0.015648164 ubox
1 95 0.387203452 ubox
1 98 0.382861582 ubox
1 101 0.389804130 ubox
1 104 0.391538715 ubox
1 107 0.098853714 ubox
2 6 0.075512237 ubox
2 9 0.185743910 ubox
2 10 0.009783663 ubox
2 14 0.032558557 ubox
2 15 0.007935748 ubox
2 18 0.023845750 ubox
2 19 0.004746988 ubox
2 20 0.007808826 ubox
2 21 0.013114997 ubox
2 45 0.030896632 ubox
2 55 0.093769265 ubox
2 56 0.004619612 ubox
2 58 0.057569258 ubox
2 60 0.013425961 ubox
2 65 0.014325765 ubox
2 67 0.015848302 ubox
2 85 0.010366115 ubox
2 86 0.016833588 ubox
2 95 0.205103128 ubox
2 98 0.199757390 ubox
2 101 0.203843561 ubox
2 104 0.203066341 ubox
2 107 0.066260620 ubox
3 20 0.012891800 ubox
3 54 0.088881921 ubox
3 86 0.016869485 ubox
4 54 0.004079193 ubox
4 86 0.015548479 ubox
5 76 0.003294493 ubox
5 86 0.012208245 ubox
6 12 0.030155837 ubox
6 13 0.024281565 ubox
6 25 0.003518321 ubox
6 46 0.004343218 ubox
6 49 0.007127857 ubox
6 59 0.012786716 ubox
6 61 0.013950569 ubox
6 66 0.021791849 ubox
6 75 0.003485804 ubox
6 91 0.221979434 ubox
7 14 0.018475163 ubox
7 15 0.969440399 ubox
7 45 0.003781108 ubox
7 58 0.008225605 ubox
7 60 0.006362318 ubox
7 65 0.019519603 ubox
7 67 0.004020164 ubox
7 74 0.003462345 ubox
7 86 0.064009374 ubox
7 95 0.025612741 ubox
7 98 0.025709832 ubox
7 101 0.025453723 ubox
7 104 0.025218816 ubox
7 107 0.009558373 ubox
8 14 0.971033359 ubox
8 15 0.009277921 ubox
8 58 0.003798707 ubox
8 60 0.012127128 ubox
8 65 0.003808428 ubox
8 67 0.018209265 ubox
8 85 0.067230671 ubox
8 95 0.012245982 ubox
8 98 0.012250784 ubox
8 101 0.011434401 ubox
8 104 0.011230675 ubox
8 107 0.003662667 ubox
9 13 0.963986808 ubox
9 28 0.007021320 ubox
9 47 0.010996289 ubox
9 59 0.012301952 ubox
9 66 0.018202633 ubox
9 84 0.067257246 ubox
9 91 0.012025192 ubox
10 27 0.007041844 ubox
10 46 0.010988199 ubox
10 83 0.067185174 ubox
10 91 0.017580636 ubox
11 20 0.019915467 ubox
11 73 0.005412466 ubox
11 86 0.009625912 ubox
12 18 0.003885431 ubox
12 19 0.021838769 ubox
12 45 0.005947400 ubox
12 58 0.008548501 ubox
12 60 0.003978158 ubox
12 72 0.006506576 ubox
12 85 0.007392145 ubox
12 86 0.161145302 ubox
12 95 0.039054233 ubox
12 98 0.037523305 ubox
12 101 0.038183012 ubox
12 104 0.038183067 ubox
12 107 0.013327170 ubox
13 18 0.021769955 ubox
13 32 0.005510628 ubox
13 45 0.004065649 ubox
13 58 0.007076872 ubox
13 60 0.032201447 ubox
13 67 0.017468804 ubox
13 71 0.006514711 ubox
13 80 0.013192626 ubox
13 85 0.167247009 ubox
13 95 0.024680669 ubox
13 98 0.024079785 ubox
13 101 0.023786777 ubox
13 104 0.023497093 ubox
13 107 0.007659134 ubox
14 28 0.006831747 ubox
14 31 0.005533657 ubox
14 47 0.004316679 ubox
14 59 0.032138976 ubox
14 61 0.003448798 ubox
14 66 0.017410369 ubox
14 70 0.006485859 ubox
14 79 0.013153976 ubox
14 84 0.167405676 ubox
14 91 0.020892273 ubox
15 27 0.006821878 ubox
15 46 0.004328445 ubox
15 59 0.003432233 ubox
15 83 0.167222511 ubox
15 91 0.037331846 ubox
16 77 0.009894641 ubox
16 86 0.007004765 ubox
17 76 0.010139008 ubox
17 86 0.006447712 ubox
18 25 0.004452927 ubox
18 27 0.010369064 ubox
18 28 0.993079378 ubox
18 75 0.009989948 ubox
18 84 0.004474982 ubox
18 91 0.007959957 ubox
19 25 0.012986520 ubox
19 27 0.997737351 ubox
19 28 0.017795095 ubox
19 83 0.004497918 ubox
19 91 0.009961836 ubox
20 24 0.011794838 ubox
20 25 0.006657973 ubox
20 26 0.997005659 ubox
20 27 0.015985481 ubox
20 28 0.010286327 ubox
20 29 0.025086725 ubox
20 82 0.004493615 ubox
20 90 0.009075806 ubox
20 92 0.017714470 ubox
21 25 0.988641424 ubox
21 27 0.013691931 ubox
21 28 0.026680408 ubox
21 81 0.004410233 ubox
21 91 0.018734396 ubox
25 74 0.010515845 ubox
25 95 0.004728851 ubox
25 98 0.006686437 ubox
25 101 0.006778825 ubox
25 104 0.006854742 ubox
26 73 0.010523866 ubox
27 45 0.007125848 ubox
27 72 0.010526005 ubox
27 95 0.007208988 ubox
27 98 0.007241320 ubox
27 101 0.007387972 ubox
27 104 0.007354018 ubox
28 45 0.015535940 ubox
28 71 0.010488568 ubox
28 95 0.008049485 ubox
28 98 0.008040733 ubox
28 101 0.008166110 ubox
28 104 0.006824891 ubox
29 86 0.004439855 ubox
30 86 0.004104972 ubox
31 43 0.998807912 ubox
31 45 0.006126397 ubox
32 42 0.999886834 ubox
33 41 0.999383170 ubox
34 39 0.008311378 ubox
34 40 0.998762289 ubox
35 39 0.990474785 ubox
41 61 0.004289082 ubox
42 60 0.006911747 ubox
43 59 0.006955967 ubox
45 49 0.005116371 ubox
45 59 0.016271712 ubox
45 61 0.005823379 ubox
45 91 0.028219255 ubox
46 53 0.049613046 ubox
46 54 0.009259029 ubox
46 55 0.008084833 ubox
46 56 0.993722164 ubox
46 58 0.023227381 ubox
46 60 0.003698651 ubox
47 53 0.013016484 ubox
47 54 0.006660837 ubox
47 55 0.994819784 ubox
47 56 0.010746605 ubox
47 58 0.004155335 ubox
48 54 0.993317569 ubox
49 53 0.971467329 ubox
49 54 0.005257752 ubox
49 55 0.021791769 ubox
49 56 0.007680392 ubox
49 58 0.003706614 ubox
50 54 0.019015243 ubox
58 66 0.081689631 ubox
58 81 0.176779150 ubox
58 91 0.019235074 ubox
59 65 0.082381452 ubox
59 67 0.969982501 ubox
59 76 0.006297617 ubox
59 80 0.180226223 ubox
59 95 0.006774011 ubox
59 98 0.004158371 ubox
60 66 0.970970777 ubox
60 75 0.006621627 ubox
60 79 0.180234140 ubox
60 91 0.004344395 ubox
61 65 0.908383161 ubox
61 67 0.018920218 ubox
61 74 0.006642274 ubox
61 78 0.180190481 ubox
61 95 0.010496960 ubox
62 73 0.006569287 ubox
62 77 0.148115046 ubox
63 76 0.105192653 ubox
63 77 0.101674119 ubox
64 73 0.003814783 ubox
64 76 0.144286135 ubox
65 70 0.007850992 ubox
65 75 0.177190977 ubox
65 91 0.027558859 ubox
66 71 0.009838717 ubox
66 72 0.006495662 ubox
66 73 0.007698992 ubox
66 74 0.173262721 ubox
66 76 0.013312287 ubox
67 75 0.014440466 ubox
67 91 0.007594430 ubox
68 73 0.070430964 ubox
68 86 0.036907497 ubox
69 73 0.008224542 ubox
69 86 0.946964900 ubox
70 76 0.003754860 ubox
70 85 0.983240564 ubox
70 86 0.003808525 ubox
71 75 0.003843652 ubox
71 84 0.983486683 ubox
72 83 0.983483592 ubox
73 82 0.983354372 ubox
74 81 0.983423773 ubox
75 80 0.957973281 ubox
85 91 0.005589198 ubox
86 90 0.008138934 ubox
86 91 0.011681280 ubox
86 92 0.010795350 ubox
86 93 0.013744029 ubox
86 94 0.006622193 ubox
86 96 0.004553183 ubox
86 97 0.003866735 ubox
91 95 0.068317953 ubox
91 98 0.138968433 ubox
91 101 0.046226745 ubox
91 104 0.016962412 ubox
91 107 0.004318826 ubox
1 95 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
