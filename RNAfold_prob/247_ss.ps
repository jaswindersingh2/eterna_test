%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAUUCGACCUCGAGCAGUUGCUCUGACCAGCCGAGUCGCCGUAAGCCGAGGGCCAGUCUCGGUCCGGGCGAAUUCGUUCGCCCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

/coor [
[41.86199570 125.23426819]
[27.49215317 129.53631592]
[19.95132828 143.16619873]
[5.31698084 147.32438660]
[-7.63055897 140.05137634]
[-22.00040245 144.35342407]
[-36.37024307 148.65547180]
[-50.74008560 152.95751953]
[-65.10993195 157.25956726]
[-76.11126709 168.62974548]
[-90.52294159 164.86772156]
[-103.49520874 180.16192627]
[-122.11066437 175.28363037]
[-136.20605469 180.41392517]
[-150.22534180 185.74868774]
[-164.16554260 191.28678894]
[-178.10575867 196.82487488]
[-192.04597473 202.36296082]
[-201.78733826 215.55531311]
[-218.05033875 213.44659424]
[-224.10501099 198.20608521]
[-213.72280884 185.51191711]
[-197.58406067 188.42276001]
[-183.64385986 182.88465881]
[-169.70364380 177.34657288]
[-155.76342773 171.80847168]
[-150.62994385 166.32939148]
[-141.33634949 166.31854248]
[-127.24096680 161.18823242]
[-123.68358612 151.40754700]
[-115.10120392 145.13699341]
[-104.25930023 144.70251465]
[-94.82498932 150.49787903]
[-84.85147858 139.43540955]
[-69.41197968 142.88972473]
[-55.04213715 138.58767700]
[-40.67229462 134.28562927]
[-26.30245018 129.98358154]
[-11.93260765 125.68152618]
[-5.11168528 112.49021912]
[9.40009403 107.92262268]
[23.19010353 115.16648102]
[37.55994797 110.86442566]
[37.73289871 88.18457794]
[45.88000488 67.01785278]
[60.95791626 50.07493973]
[81.03569794 39.52561569]
[103.54212189 36.72085953]
[106.14684296 21.94874382]
[108.75156403 7.17662811]
[111.35628510 -7.59548807]
[113.96101379 -22.36760521]
[116.56573486 -37.13972092]
[119.17045593 -51.91183853]
[111.18340302 -65.82537842]
[117.21536255 -80.69127655]
[132.63912964 -85.10569763]
[145.62290955 -75.68226624]
[146.20664978 -59.64983368]
[133.94256592 -49.30711365]
[131.33784485 -34.53499603]
[128.73312378 -19.76288223]
[126.12840271 -4.99076509]
[123.52368164 9.78135109]
[120.91896057 24.55346680]
[118.31423950 39.32558441]
[136.39134216 48.11101913]
[150.80859375 62.11487961]
[160.11608887 79.92881012]
[174.80619812 76.89554596]
[189.49630737 73.86228943]
[204.18641663 70.82902527]
[218.87652588 67.79576111]
[233.56663513 64.76249695]
[248.25674438 61.72923279]
[260.14093018 50.42887878]
[275.79067993 55.32959747]
[279.10690308 71.38994598]
[266.67810059 82.08841705]
[251.29000854 76.41934204]
[236.59989929 79.45260620]
[221.90979004 82.48587036]
[207.21968079 85.51913452]
[192.52957153 88.55239868]
[177.83946228 91.58565521]
[163.14935303 94.61891937]
[163.33369446 102.37459564]
[162.56910706 110.09468842]
[160.86703491 117.66353607]
[158.25297546 124.96772003]
[154.76609802 131.89781189]
[150.45864868 138.34997559]
[145.39517212 144.22752380]
[139.65153503 149.44241333]
[133.31378174 153.91648865]
[126.47688293 157.58273315]
[119.24327850 160.38619995]
[111.72135162 162.28488159]
[104.02379608 163.25033569]
[96.26595306 163.26809692]
[88.56405640 162.33790588]
[81.03350830 160.47369385]
[73.78713226 157.70339966]
[66.93351746 154.06851196]
[60.57534027 149.62350464]
[54.80787277 144.43498230]
[49.71752930 138.58068848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 43]
[2 42]
[5 39]
[6 38]
[7 37]
[8 36]
[9 35]
[11 33]
[13 29]
[14 28]
[15 26]
[16 25]
[17 24]
[18 23]
[48 66]
[49 65]
[50 64]
[51 63]
[52 62]
[53 61]
[54 60]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
