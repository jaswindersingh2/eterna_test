%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (697)
} def

/sequence { (\
GGAAAGCGGUCACAAAGCGAGCGCAAGGGCGAGCAAAAAGGUCACCCAGCCACAGGAAUUCGUGCGGCUCGACAGUUCGCUGUCGAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.003855669 ubox
1 22 0.004415412 ubox
1 24 0.006240668 ubox
1 47 0.005858697 ubox
1 68 0.003638947 ubox
1 70 0.011810385 ubox
1 95 0.242765283 ubox
1 98 0.244266340 ubox
1 101 0.249843161 ubox
1 104 0.250957919 ubox
1 107 0.063359924 ubox
2 11 0.005314277 ubox
2 22 0.008303715 ubox
2 24 0.004558730 ubox
2 46 0.005282369 ubox
2 68 0.003274636 ubox
2 69 0.006523278 ubox
2 70 0.014447142 ubox
2 84 0.003959517 ubox
2 95 0.128144404 ubox
2 98 0.128591956 ubox
2 101 0.131339119 ubox
2 104 0.130837040 ubox
2 107 0.042692981 ubox
3 10 0.005026311 ubox
3 69 0.011253787 ubox
3 83 0.003629889 ubox
4 69 0.003499235 ubox
5 69 0.003946571 ubox
5 81 0.003886826 ubox
6 18 0.012460857 ubox
6 22 0.011709152 ubox
6 24 0.998369825 ubox
6 47 0.003724326 ubox
6 80 0.004009558 ubox
6 95 0.006991121 ubox
6 98 0.010417018 ubox
6 101 0.009257838 ubox
6 104 0.009112038 ubox
6 107 0.003177584 ubox
7 17 0.012466181 ubox
7 19 0.005392034 ubox
7 21 0.011709111 ubox
7 23 0.999503340 ubox
7 79 0.004009066 ubox
7 85 0.003694501 ubox
7 91 0.003453097 ubox
8 13 0.004450010 ubox
8 18 0.005528989 ubox
8 22 0.999152808 ubox
8 46 0.005646643 ubox
8 78 0.003995721 ubox
8 84 0.003732275 ubox
9 18 0.016189021 ubox
9 22 0.006332396 ubox
9 45 0.005662698 ubox
9 83 0.003243039 ubox
9 95 0.008832399 ubox
9 98 0.006973346 ubox
9 101 0.006890589 ubox
9 104 0.003895297 ubox
10 16 0.004106274 ubox
10 17 0.015393880 ubox
10 19 0.004289255 ubox
10 20 0.996404472 ubox
10 21 0.006230759 ubox
10 44 0.005580508 ubox
10 86 0.005915839 ubox
10 92 0.005927498 ubox
10 94 0.008323344 ubox
10 97 0.006553707 ubox
10 100 0.006490629 ubox
10 103 0.003676037 ubox
11 17 0.014049158 ubox
11 19 0.998040574 ubox
11 21 0.004073034 ubox
11 85 0.006189064 ubox
11 91 0.006350000 ubox
12 42 0.005438498 ubox
12 83 0.005089134 ubox
13 17 0.553888740 ubox
13 19 0.013634853 ubox
13 41 0.005505049 ubox
13 82 0.005234805 ubox
13 91 0.005016392 ubox
14 81 0.003540024 ubox
16 81 0.009005631 ubox
17 24 0.017947135 ubox
17 34 0.005507039 ubox
17 80 0.010234118 ubox
18 23 0.017940637 ubox
18 33 0.005513518 ubox
18 79 0.010239841 ubox
19 70 0.003173926 ubox
19 78 0.010240408 ubox
20 77 0.010233857 ubox
21 30 0.005385400 ubox
21 76 0.010222336 ubox
22 29 0.005381456 ubox
22 31 0.003514175 ubox
22 75 0.010214374 ubox
23 30 0.003546104 ubox
23 73 0.003384627 ubox
24 29 0.003539884 ubox
24 91 0.003959087 ubox
27 46 0.013973278 ubox
27 47 0.998695446 ubox
27 95 0.004715935 ubox
27 98 0.004721491 ubox
27 101 0.004812594 ubox
27 104 0.004818858 ubox
28 43 0.005713709 ubox
28 45 0.013892622 ubox
28 46 0.999789812 ubox
28 47 0.008263937 ubox
28 81 0.003930029 ubox
29 42 0.005885956 ubox
29 45 0.999680379 ubox
29 46 0.007722531 ubox
29 80 0.004052349 ubox
30 41 0.006510294 ubox
30 79 0.004054214 ubox
31 43 0.999066811 ubox
31 78 0.004054183 ubox
32 42 0.995114911 ubox
32 77 0.004050982 ubox
33 42 0.065500783 ubox
33 43 0.004614766 ubox
33 76 0.004043303 ubox
34 40 0.983875844 ubox
34 41 0.120958021 ubox
34 75 0.004033724 ubox
40 47 0.004098066 ubox
41 46 0.004072657 ubox
48 69 0.631382893 ubox
49 65 0.007810319 ubox
49 68 0.998462090 ubox
50 64 0.005643569 ubox
50 66 0.005995435 ubox
50 67 0.999901856 ubox
51 64 0.014492952 ubox
51 66 0.999611869 ubox
52 63 0.025061403 ubox
53 62 0.026119386 ubox
53 64 0.999167453 ubox
54 60 0.003533838 ubox
54 63 0.997218944 ubox
55 59 0.003428353 ubox
55 60 0.007527313 ubox
55 61 0.099428204 ubox
55 63 0.006118799 ubox
55 65 0.004358166 ubox
56 60 0.065000217 ubox
56 61 0.964158251 ubox
57 63 0.003541130 ubox
68 91 0.004551227 ubox
69 86 0.736665401 ubox
69 87 0.033786918 ubox
69 88 0.007346690 ubox
69 89 0.005242165 ubox
69 90 0.004704421 ubox
69 92 0.003618167 ubox
70 85 0.995111318 ubox
70 91 0.004109583 ubox
71 84 0.999870530 ubox
72 83 0.999786503 ubox
73 82 0.999895120 ubox
74 81 0.998463911 ubox
75 80 0.990173940 ubox
83 92 0.005027770 ubox
84 91 0.005883891 ubox
85 95 0.005816217 ubox
85 98 0.004098403 ubox
91 95 0.054601461 ubox
91 98 0.119602660 ubox
91 101 0.046274131 ubox
91 104 0.029973022 ubox
91 107 0.008725357 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
