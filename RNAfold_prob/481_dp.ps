%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (481)
} def

/sequence { (\
GGAAAAGAUAUCGGCACUCGAAAGAGGUCGAAAGACGCCAAAACUAGGGAAAACCCUAGGAUAUCAAACUUCUGCUUCGGCAGAAGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.003682935 ubox
1 39 0.114090704 ubox
1 65 0.006655522 ubox
1 69 0.012765732 ubox
1 70 0.007376878 ubox
1 73 0.004311858 ubox
1 95 0.067450980 ubox
1 98 0.067908579 ubox
1 101 0.069487038 ubox
1 104 0.069788727 ubox
1 107 0.017619376 ubox
2 11 0.003299249 ubox
2 12 0.007430755 ubox
2 38 0.114118638 ubox
2 39 0.005600182 ubox
2 64 0.004421588 ubox
2 65 0.011220339 ubox
2 69 0.011866726 ubox
2 72 0.004635019 ubox
2 95 0.035585876 ubox
2 98 0.035728219 ubox
2 101 0.036498239 ubox
2 104 0.036351252 ubox
2 107 0.011861630 ubox
3 11 0.007179927 ubox
3 64 0.010287481 ubox
3 71 0.004652883 ubox
4 70 0.004430489 ubox
7 12 0.003342367 ubox
7 36 0.014439682 ubox
7 38 0.003730153 ubox
7 65 0.989339782 ubox
7 95 0.006464931 ubox
7 98 0.006301099 ubox
7 101 0.006041904 ubox
7 104 0.005993500 ubox
8 64 0.990351533 ubox
9 32 0.019104259 ubox
9 33 0.063486326 ubox
9 34 0.005176596 ubox
9 35 0.004615742 ubox
9 63 0.990304858 ubox
10 62 0.990144805 ubox
11 31 0.134411727 ubox
11 32 0.004754165 ubox
11 41 0.004310948 ubox
11 60 0.003967674 ubox
11 61 0.989387014 ubox
11 92 0.006564046 ubox
12 30 0.144577683 ubox
12 59 0.003548382 ubox
12 60 0.987840758 ubox
12 91 0.006950085 ubox
13 19 0.005635056 ubox
13 29 0.191999916 ubox
13 36 0.003946416 ubox
13 38 0.003922371 ubox
13 39 0.966506884 ubox
14 18 0.003667438 ubox
14 28 0.192549609 ubox
14 29 0.009566654 ubox
14 36 0.003238464 ubox
14 38 0.967508043 ubox
14 39 0.003474692 ubox
15 20 0.003430196 ubox
15 27 0.192570126 ubox
15 34 0.006153186 ubox
15 37 0.966495290 ubox
16 28 0.010695412 ubox
17 24 0.018783890 ubox
17 26 0.990885834 ubox
17 27 0.008721585 ubox
17 34 0.048501088 ubox
18 23 0.017489208 ubox
18 25 0.993486530 ubox
18 26 0.004820925 ubox
18 31 0.090192321 ubox
18 32 0.009030373 ubox
18 33 0.029254477 ubox
18 35 0.013671517 ubox
19 24 0.993458182 ubox
19 26 0.027644251 ubox
19 30 0.097210424 ubox
19 34 0.013841171 ubox
20 29 0.097381778 ubox
21 28 0.091902003 ubox
22 28 0.003325618 ubox
24 29 0.010838603 ubox
24 39 0.012568599 ubox
26 36 0.003652691 ubox
26 38 0.007376819 ubox
26 39 0.012249228 ubox
27 36 0.974403834 ubox
27 38 0.013431213 ubox
27 39 0.005558206 ubox
28 35 0.975455336 ubox
28 37 0.008511636 ubox
29 34 0.975389524 ubox
29 37 0.013726055 ubox
30 36 0.025150453 ubox
30 38 0.013131677 ubox
30 39 0.032060464 ubox
34 38 0.007985246 ubox
34 39 0.034215108 ubox
34 65 0.008554148 ubox
35 64 0.008357155 ubox
37 44 0.003273708 ubox
37 62 0.003286303 ubox
37 65 0.008805054 ubox
38 60 0.005857425 ubox
39 59 0.005197975 ubox
39 60 0.004805073 ubox
40 62 0.008092338 ubox
40 64 0.005833671 ubox
41 62 0.046848782 ubox
41 64 0.003576524 ubox
42 62 0.011029751 ubox
43 62 0.003653386 ubox
44 59 0.996917414 ubox
44 60 0.005892814 ubox
45 58 0.999420028 ubox
45 59 0.004593642 ubox
46 57 0.999666546 ubox
47 55 0.009168212 ubox
47 56 0.999929724 ubox
47 57 0.003988348 ubox
48 54 0.012839603 ubox
48 55 0.999863347 ubox
48 56 0.005706622 ubox
49 54 0.993669859 ubox
49 55 0.006956564 ubox
60 65 0.013324167 ubox
60 95 0.016955188 ubox
60 98 0.005439606 ubox
62 92 0.004996019 ubox
62 93 0.007867864 ubox
62 94 0.011014061 ubox
62 96 0.003233928 ubox
64 87 0.003824217 ubox
64 90 0.004359879 ubox
64 91 0.004260195 ubox
64 92 0.051537696 ubox
65 86 0.003271164 ubox
65 91 0.055334235 ubox
69 86 0.991770379 ubox
69 91 0.010963232 ubox
70 85 0.997577056 ubox
70 86 0.005732478 ubox
70 90 0.009917086 ubox
70 93 0.013355934 ubox
71 84 0.999322065 ubox
71 85 0.004884921 ubox
71 89 0.005017232 ubox
71 92 0.014845092 ubox
72 83 0.999837296 ubox
72 91 0.015004858 ubox
73 82 0.999613002 ubox
73 90 0.014307248 ubox
74 81 0.999842989 ubox
75 79 0.011545594 ubox
75 80 0.999021469 ubox
75 86 0.016391825 ubox
76 80 0.003703950 ubox
76 85 0.016474010 ubox
77 84 0.016497779 ubox
78 83 0.016497689 ubox
86 95 0.012141429 ubox
86 98 0.004929877 ubox
86 101 0.003950405 ubox
86 104 0.003409005 ubox
91 95 0.042965948 ubox
91 98 0.103593163 ubox
91 101 0.045446261 ubox
91 104 0.035170431 ubox
91 107 0.010405587 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
