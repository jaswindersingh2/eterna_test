%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (300)
} def

/sequence { (\
GGAAAAAAGUACAAGAUCUUCGGAUCGGUCUGGACGAGCAGGCUUCGGGCUGAGUCUGGACAAGUACAGGUACUCUUCGGAGUACCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.005335923 ubox
1 12 0.024881704 ubox
1 18 0.003663429 ubox
1 19 0.006455672 ubox
1 67 0.009747650 ubox
1 86 0.004022602 ubox
1 95 0.068906265 ubox
1 98 0.069395215 ubox
1 101 0.071158037 ubox
1 104 0.071709218 ubox
1 107 0.018117387 ubox
2 12 0.008507877 ubox
2 18 0.010151768 ubox
2 21 0.004940903 ubox
2 26 0.003529994 ubox
2 67 0.005561555 ubox
2 95 0.036355542 ubox
2 98 0.036506831 ubox
2 101 0.037410054 ubox
2 104 0.037270710 ubox
2 107 0.012174298 ubox
3 10 0.006778286 ubox
3 17 0.009595956 ubox
3 20 0.004867304 ubox
3 25 0.003457471 ubox
4 10 0.004698198 ubox
4 19 0.004178327 ubox
5 10 0.003930026 ubox
7 20 0.016046572 ubox
8 17 0.003625184 ubox
8 19 0.020448308 ubox
9 17 0.005256352 ubox
9 18 0.022334481 ubox
9 61 0.014080152 ubox
9 67 0.979807566 ubox
9 95 0.042354534 ubox
9 98 0.041711793 ubox
9 101 0.042625138 ubox
9 104 0.042147933 ubox
9 107 0.014718137 ubox
10 16 0.005828266 ubox
10 60 0.012496317 ubox
10 66 0.980979300 ubox
10 92 0.004051671 ubox
10 93 0.004474913 ubox
10 94 0.040815819 ubox
10 97 0.040222525 ubox
10 100 0.041098559 ubox
10 103 0.040636663 ubox
10 106 0.014338469 ubox
11 29 0.004077065 ubox
11 65 0.980990571 ubox
12 27 0.019133985 ubox
12 28 0.005237709 ubox
12 58 0.009221931 ubox
12 59 0.007068304 ubox
12 64 0.979417001 ubox
12 91 0.014062121 ubox
13 17 0.004471292 ubox
13 19 0.003782825 ubox
13 20 0.005693771 ubox
13 57 0.006597083 ubox
13 65 0.006439608 ubox
14 19 0.006657492 ubox
14 20 0.003257853 ubox
14 31 0.004915575 ubox
14 57 0.014284556 ubox
14 65 0.017129501 ubox
15 19 0.003208143 ubox
15 21 0.009227611 ubox
15 26 0.702126727 ubox
15 30 0.005278186 ubox
15 56 0.016137154 ubox
15 61 0.501703074 ubox
15 65 0.007989504 ubox
15 67 0.016597677 ubox
15 95 0.007225173 ubox
15 98 0.004484183 ubox
15 101 0.003989323 ubox
15 104 0.003880461 ubox
16 20 0.008147739 ubox
16 25 0.702976381 ubox
16 29 0.005298180 ubox
16 55 0.016003548 ubox
16 65 0.022324829 ubox
17 23 0.005402288 ubox
17 24 0.703033950 ubox
17 28 0.005298531 ubox
17 37 0.003522781 ubox
17 54 0.012097113 ubox
17 59 0.023198521 ubox
17 60 0.302522770 ubox
17 62 0.128094145 ubox
17 63 0.042810452 ubox
17 64 0.022265862 ubox
17 66 0.003388579 ubox
17 92 0.023266776 ubox
18 22 0.009824064 ubox
18 23 0.702564037 ubox
18 27 0.006986510 ubox
18 36 0.003767798 ubox
18 54 0.007863684 ubox
18 58 0.020766732 ubox
18 59 0.300639813 ubox
18 64 0.018338993 ubox
18 91 0.024696602 ubox
19 34 0.004797190 ubox
19 53 0.005714969 ubox
19 54 0.009031874 ubox
19 58 0.212446616 ubox
19 59 0.017354790 ubox
19 60 0.616564327 ubox
19 62 0.005025917 ubox
19 63 0.017392478 ubox
19 90 0.022579866 ubox
19 93 0.004313853 ubox
20 33 0.005007306 ubox
20 53 0.019421233 ubox
20 58 0.014000680 ubox
20 59 0.636492051 ubox
20 60 0.021981289 ubox
20 62 0.011631614 ubox
20 89 0.017699955 ubox
20 92 0.004776154 ubox
21 27 0.012583728 ubox
21 32 0.005128234 ubox
21 52 0.020461634 ubox
21 54 0.003185972 ubox
21 58 0.673955048 ubox
21 59 0.017118467 ubox
21 91 0.004807140 ubox
22 26 0.011917385 ubox
22 31 0.005137334 ubox
22 51 0.020448804 ubox
22 55 0.008657815 ubox
22 56 0.110175444 ubox
22 57 0.694821881 ubox
22 67 0.010128063 ubox
23 30 0.005140848 ubox
23 50 0.020440609 ubox
23 55 0.084678603 ubox
23 56 0.697528181 ubox
23 57 0.003447778 ubox
23 67 0.005581479 ubox
24 29 0.004556407 ubox
24 55 0.679495466 ubox
24 65 0.011335872 ubox
25 48 0.012505858 ubox
25 49 0.004867540 ubox
25 53 0.610677306 ubox
25 54 0.355645503 ubox
25 64 0.011931405 ubox
25 92 0.003173688 ubox
26 47 0.019173907 ubox
26 48 0.004867753 ubox
26 52 0.708883609 ubox
26 54 0.004870716 ubox
26 64 0.004470653 ubox
26 91 0.003229855 ubox
27 43 0.003985687 ubox
27 44 0.075494755 ubox
27 46 0.016830540 ubox
27 51 0.709394268 ubox
27 61 0.035362054 ubox
27 67 0.006594378 ubox
27 95 0.007530423 ubox
27 98 0.007478066 ubox
27 101 0.007548944 ubox
27 104 0.007482783 ubox
28 43 0.097519158 ubox
28 45 0.003713979 ubox
28 50 0.709990279 ubox
28 61 0.694963689 ubox
29 42 0.097706010 ubox
29 49 0.709687696 ubox
29 60 0.696922795 ubox
30 41 0.097866428 ubox
30 48 0.709873199 ubox
30 49 0.010118076 ubox
30 59 0.697273938 ubox
31 40 0.097853381 ubox
31 47 0.709228600 ubox
31 48 0.010128667 ubox
31 58 0.694535861 ubox
32 39 0.097805772 ubox
32 44 0.017916770 ubox
32 46 0.709119674 ubox
32 57 0.694540388 ubox
33 43 0.028489468 ubox
33 44 0.015358874 ubox
33 45 0.703714717 ubox
33 46 0.020680364 ubox
33 56 0.697276503 ubox
34 44 0.694142718 ubox
34 45 0.024885465 ubox
34 55 0.697097715 ubox
35 41 0.127933866 ubox
35 42 0.625214588 ubox
35 47 0.010200738 ubox
35 52 0.003341262 ubox
35 54 0.694899233 ubox
36 43 0.237007041 ubox
36 44 0.006455270 ubox
36 45 0.055369379 ubox
36 46 0.011573389 ubox
36 51 0.003490456 ubox
36 55 0.004164451 ubox
36 61 0.005358463 ubox
37 44 0.071461420 ubox
37 45 0.011268536 ubox
37 51 0.196590344 ubox
38 43 0.078837159 ubox
38 44 0.009566875 ubox
38 50 0.202714900 ubox
38 51 0.024378778 ubox
39 48 0.016289042 ubox
39 49 0.202030359 ubox
39 52 0.626527993 ubox
39 54 0.003828453 ubox
39 58 0.008641181 ubox
40 45 0.006166296 ubox
40 51 0.628972020 ubox
40 57 0.008732709 ubox
41 45 0.005679718 ubox
41 46 0.113596810 ubox
41 50 0.625458621 ubox
41 51 0.218286423 ubox
41 56 0.008744883 ubox
42 46 0.096218038 ubox
42 50 0.231419276 ubox
42 55 0.008747263 ubox
43 47 0.017901909 ubox
43 48 0.608640644 ubox
43 49 0.241382731 ubox
43 54 0.008753370 ubox
44 48 0.217496011 ubox
44 53 0.008295364 ubox
44 60 0.052564918 ubox
45 52 0.007322326 ubox
45 53 0.003714362 ubox
45 59 0.084022245 ubox
45 60 0.010168824 ubox
46 52 0.004683209 ubox
46 58 0.094885948 ubox
46 59 0.009631799 ubox
47 57 0.095125484 ubox
48 56 0.095247014 ubox
48 57 0.007520837 ubox
49 55 0.094917945 ubox
49 56 0.007454484 ubox
50 54 0.094417081 ubox
57 68 0.003450214 ubox
58 67 0.004457039 ubox
64 95 0.012405315 ubox
64 98 0.005562752 ubox
64 101 0.005180244 ubox
64 104 0.004558428 ubox
65 87 0.003585472 ubox
65 88 0.006209283 ubox
65 89 0.004872016 ubox
65 90 0.007894432 ubox
65 91 0.004422430 ubox
65 92 0.004580182 ubox
65 94 0.011931814 ubox
65 97 0.005340828 ubox
65 100 0.004985787 ubox
65 103 0.004390401 ubox
67 91 0.007984563 ubox
69 86 0.998901181 ubox
70 85 0.999968171 ubox
71 84 0.999741223 ubox
72 83 0.999742773 ubox
73 82 0.999973684 ubox
74 80 0.005760139 ubox
74 81 0.999737139 ubox
75 79 0.012835388 ubox
75 80 0.998924720 ubox
76 80 0.003170630 ubox
86 91 0.005881548 ubox
91 95 0.043427782 ubox
91 98 0.104266752 ubox
91 101 0.045544477 ubox
91 104 0.035086024 ubox
91 107 0.010374833 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
31 58 0.9500000 lbox
32 57 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
