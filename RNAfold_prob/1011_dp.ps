%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1011)
} def

/sequence { (\
GGAAAACUGAAACAGAAGUCGAAACGACAAGUAUGAAACAUACAACAUCAAAGAUGAAGCCAAAGGCACCUUAUCUUCGGAUAAGGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.108831225 ubox
1 8 0.060378236 ubox
1 13 0.043212425 ubox
1 20 0.014745340 ubox
1 25 0.012291784 ubox
1 28 0.005033897 ubox
1 43 0.003766669 ubox
1 46 0.016154538 ubox
1 49 0.014800572 ubox
1 60 0.003207638 ubox
1 61 0.088790488 ubox
1 67 0.009266811 ubox
1 69 0.007188896 ubox
1 70 0.009482674 ubox
1 95 0.322425525 ubox
1 98 0.326666064 ubox
1 101 0.330437651 ubox
1 104 0.334947169 ubox
1 107 0.084535484 ubox
2 7 0.077501644 ubox
2 8 0.013310998 ubox
2 13 0.026510245 ubox
2 19 0.013831758 ubox
2 20 0.067871523 ubox
2 25 0.005095429 ubox
2 46 0.009207285 ubox
2 48 0.009584468 ubox
2 49 0.025821661 ubox
2 60 0.088569515 ubox
2 61 0.005658776 ubox
2 67 0.006823214 ubox
2 69 0.011004935 ubox
2 95 0.170436589 ubox
2 98 0.168747378 ubox
2 101 0.173176358 ubox
2 104 0.172715376 ubox
2 107 0.056385223 ubox
3 8 0.022100278 ubox
3 19 0.067240059 ubox
3 48 0.024226338 ubox
4 8 0.010858364 ubox
5 55 0.003873124 ubox
6 19 0.059489760 ubox
6 32 0.003935567 ubox
6 55 0.003434886 ubox
7 15 0.695420439 ubox
7 18 0.067131996 ubox
7 31 0.004125954 ubox
7 53 0.011396839 ubox
7 56 0.003919757 ubox
7 59 0.009237678 ubox
7 65 0.009181095 ubox
7 66 0.004069670 ubox
7 80 0.012071952 ubox
7 85 0.005528690 ubox
7 86 0.006146581 ubox
7 91 0.239221266 ubox
8 12 0.007717864 ubox
8 14 0.699280507 ubox
8 15 0.029446236 ubox
8 16 0.029438763 ubox
8 17 0.080160003 ubox
8 21 0.017186389 ubox
8 29 0.004326030 ubox
8 30 0.004167544 ubox
8 40 0.006017041 ubox
8 44 0.003516389 ubox
8 47 0.009971504 ubox
8 50 0.032064643 ubox
8 52 0.010391391 ubox
8 57 0.006698746 ubox
8 58 0.010848857 ubox
8 62 0.007351305 ubox
8 64 0.008858926 ubox
8 65 0.003776712 ubox
8 68 0.009953331 ubox
8 79 0.012132533 ubox
8 84 0.005337264 ubox
8 87 0.027659530 ubox
8 88 0.026764352 ubox
8 89 0.028099815 ubox
8 90 0.232639283 ubox
8 91 0.016383559 ubox
8 92 0.028181958 ubox
8 93 0.025722545 ubox
8 94 0.022261655 ubox
8 96 0.219289073 ubox
8 97 0.023982486 ubox
8 99 0.208567828 ubox
8 100 0.021787535 ubox
8 102 0.210894766 ubox
8 103 0.021662584 ubox
8 105 0.211417500 ubox
8 106 0.021615962 ubox
9 13 0.689274427 ubox
9 20 0.022713944 ubox
9 28 0.003855443 ubox
9 39 0.006738756 ubox
9 46 0.011114406 ubox
9 49 0.035049372 ubox
9 61 0.008032065 ubox
9 67 0.007488595 ubox
9 78 0.012170412 ubox
9 95 0.235854028 ubox
9 98 0.224550256 ubox
9 101 0.227431612 ubox
9 104 0.228015524 ubox
9 107 0.026333591 ubox
10 19 0.022173790 ubox
10 34 0.003473625 ubox
10 48 0.032768165 ubox
10 77 0.010989983 ubox
11 76 0.007385723 ubox
12 19 0.016128054 ubox
12 32 0.009928859 ubox
13 18 0.018565507 ubox
13 21 0.003891291 ubox
13 31 0.010434546 ubox
13 35 0.013998960 ubox
13 53 0.004371953 ubox
13 56 0.009090701 ubox
13 59 0.004473274 ubox
13 65 0.003390378 ubox
13 85 0.004278439 ubox
13 86 0.009964790 ubox
13 91 0.106434034 ubox
14 32 0.004708518 ubox
14 34 0.013922144 ubox
14 55 0.008025684 ubox
15 20 0.006549714 ubox
15 28 0.017672128 ubox
15 46 0.006224524 ubox
15 49 0.015115003 ubox
15 61 0.003476219 ubox
15 67 0.003516258 ubox
15 75 0.003212065 ubox
15 95 0.090853024 ubox
15 98 0.091120531 ubox
15 101 0.088340398 ubox
15 104 0.088104375 ubox
15 107 0.030766725 ubox
16 32 0.004569159 ubox
16 48 0.014169260 ubox
18 25 0.025289748 ubox
18 28 0.990758813 ubox
18 55 0.007756710 ubox
18 67 0.003851991 ubox
18 95 0.018062197 ubox
18 98 0.020367912 ubox
18 101 0.020495103 ubox
18 104 0.019955035 ubox
18 107 0.006941069 ubox
19 24 0.023422681 ubox
19 27 0.992415184 ubox
19 36 0.003284543 ubox
19 54 0.008316690 ubox
19 66 0.003842117 ubox
19 92 0.016922431 ubox
19 94 0.015687575 ubox
19 97 0.018509391 ubox
19 100 0.018600023 ubox
19 103 0.018113179 ubox
19 106 0.006376214 ubox
20 26 0.993303977 ubox
20 35 0.003797096 ubox
20 53 0.008532055 ubox
20 65 0.003818858 ubox
20 91 0.019116526 ubox
21 25 0.929275133 ubox
21 28 0.018342094 ubox
21 34 0.003298679 ubox
21 95 0.014123451 ubox
21 98 0.013907486 ubox
21 101 0.013848007 ubox
21 104 0.010316745 ubox
21 107 0.003674697 ubox
24 32 0.008075275 ubox
25 31 0.008521197 ubox
25 91 0.009852385 ubox
26 46 0.003252882 ubox
26 49 0.011986441 ubox
26 95 0.010167040 ubox
26 98 0.009888505 ubox
26 101 0.010001111 ubox
26 104 0.009986793 ubox
26 107 0.003780497 ubox
27 48 0.011779946 ubox
28 91 0.011151197 ubox
29 41 0.004469120 ubox
30 41 0.004042326 ubox
31 39 0.031274628 ubox
31 41 0.004857217 ubox
31 43 0.994966385 ubox
31 46 0.010149913 ubox
31 49 0.003689330 ubox
31 95 0.013298289 ubox
31 98 0.016015112 ubox
31 101 0.016613986 ubox
31 104 0.016526187 ubox
31 107 0.005773482 ubox
32 38 0.030591578 ubox
32 40 0.004875807 ubox
32 42 0.996184551 ubox
32 45 0.009699616 ubox
32 94 0.012489018 ubox
32 97 0.015303943 ubox
32 100 0.015905567 ubox
32 103 0.015821702 ubox
32 106 0.005585600 ubox
33 41 0.996164746 ubox
33 48 0.005261657 ubox
34 40 0.995114582 ubox
34 44 0.017078055 ubox
34 47 0.005985169 ubox
34 50 0.006744622 ubox
34 96 0.012234710 ubox
34 99 0.011744713 ubox
34 102 0.010985514 ubox
34 105 0.006841188 ubox
35 39 0.979436049 ubox
35 43 0.018649124 ubox
35 46 0.006186726 ubox
35 49 0.007443583 ubox
35 95 0.012679370 ubox
35 98 0.012167849 ubox
35 101 0.011429402 ubox
35 104 0.007430608 ubox
36 41 0.005228403 ubox
36 48 0.007079783 ubox
37 41 0.003427953 ubox
39 56 0.006661328 ubox
39 91 0.004774345 ubox
40 55 0.006662159 ubox
41 54 0.006525889 ubox
43 53 0.004626513 ubox
43 56 0.007678169 ubox
43 59 0.003600173 ubox
43 91 0.004098381 ubox
44 48 0.003445576 ubox
44 55 0.010422903 ubox
45 55 0.007384767 ubox
46 53 0.035469451 ubox
46 56 0.937670438 ubox
46 59 0.021297228 ubox
46 85 0.004842030 ubox
46 91 0.010355068 ubox
47 55 0.941434741 ubox
47 82 0.023417703 ubox
48 52 0.004573860 ubox
48 53 0.008576220 ubox
48 54 0.941368071 ubox
48 57 0.249318998 ubox
48 58 0.011783750 ubox
48 80 0.005595215 ubox
48 81 0.024830589 ubox
48 92 0.018410552 ubox
49 53 0.933658358 ubox
49 56 0.266620244 ubox
49 79 0.008698733 ubox
49 80 0.025001499 ubox
49 91 0.019667946 ubox
50 55 0.231965153 ubox
51 55 0.008045077 ubox
51 77 0.026968687 ubox
52 76 0.028962912 ubox
53 75 0.029805806 ubox
53 95 0.005415627 ubox
53 98 0.011669321 ubox
53 101 0.011503815 ubox
53 104 0.011207020 ubox
53 107 0.003898767 ubox
54 74 0.029802997 ubox
55 62 0.005301922 ubox
55 68 0.004005705 ubox
55 73 0.029767469 ubox
55 96 0.015134955 ubox
55 99 0.014846974 ubox
55 102 0.014499707 ubox
55 105 0.010700812 ubox
56 61 0.005983029 ubox
56 72 0.029666971 ubox
56 95 0.016118192 ubox
56 98 0.015797516 ubox
56 101 0.015419079 ubox
56 104 0.011792298 ubox
57 71 0.029261775 ubox
59 67 0.992833836 ubox
59 95 0.003830718 ubox
60 65 0.009901935 ubox
60 66 0.993888448 ubox
61 65 0.986667809 ubox
61 66 0.010307488 ubox
65 95 0.003580872 ubox
67 91 0.006329301 ubox
69 85 0.004875070 ubox
69 86 0.994638405 ubox
70 85 0.999342076 ubox
70 86 0.006631500 ubox
70 91 0.009317230 ubox
71 84 0.998871106 ubox
71 85 0.004971923 ubox
71 90 0.009364204 ubox
72 83 0.998720364 ubox
72 84 0.003648791 ubox
72 89 0.008859821 ubox
73 82 0.998913562 ubox
74 80 0.007397207 ubox
74 81 0.999078863 ubox
74 87 0.009274114 ubox
75 79 0.013616144 ubox
75 80 0.998371557 ubox
75 86 0.009398318 ubox
76 80 0.003186173 ubox
76 85 0.009343241 ubox
77 84 0.008133446 ubox
77 86 0.003462375 ubox
77 87 0.003907282 ubox
78 85 0.004306918 ubox
78 86 0.004268939 ubox
85 95 0.005294641 ubox
85 98 0.003802496 ubox
86 95 0.013864544 ubox
86 98 0.004755820 ubox
91 95 0.068249280 ubox
91 98 0.138087161 ubox
91 101 0.045540816 ubox
91 104 0.015553392 ubox
91 107 0.003938625 ubox
1 95 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
