%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (894)
} def

/sequence { (\
GGAAAGCAACGACACAGACAACGAACACGAGCAACAGCAAAGUACUGAAAGUCGAACGAACACGAAGCCGUCAUCUUCGGAUGACGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.196661231 ubox
1 10 0.075181161 ubox
1 13 0.019852824 ubox
1 15 0.017344504 ubox
1 19 0.011704662 ubox
1 22 0.009590726 ubox
1 26 0.010178524 ubox
1 28 0.003794614 ubox
1 53 0.003366622 ubox
1 57 0.032630943 ubox
1 61 0.131471158 ubox
1 63 0.259913109 ubox
1 68 0.017542359 ubox
1 69 0.066831834 ubox
1 95 0.080447797 ubox
1 98 0.082552570 ubox
1 101 0.082141258 ubox
1 104 0.082470569 ubox
1 107 0.020826694 ubox
2 7 0.086472340 ubox
2 10 0.016092100 ubox
2 13 0.007615647 ubox
2 15 0.005395527 ubox
2 19 0.004017430 ubox
2 22 0.003907937 ubox
2 26 0.003486229 ubox
2 53 0.005222794 ubox
2 57 0.014772289 ubox
2 61 0.105937090 ubox
2 63 0.078718399 ubox
2 68 0.069137268 ubox
2 69 0.005332775 ubox
2 95 0.042121643 ubox
2 98 0.041311129 ubox
2 101 0.041936910 ubox
2 104 0.041795552 ubox
2 107 0.013638933 ubox
3 52 0.005023981 ubox
5 46 0.003259212 ubox
6 10 0.011299609 ubox
6 13 0.016548661 ubox
6 15 0.014620540 ubox
6 19 0.009540069 ubox
6 22 0.005834273 ubox
6 26 0.004884431 ubox
6 32 0.022845222 ubox
6 38 0.007387488 ubox
6 43 0.004048234 ubox
6 45 0.003346590 ubox
6 53 0.003744719 ubox
6 57 0.172899390 ubox
6 61 0.038692211 ubox
6 63 0.024795065 ubox
6 68 0.235169225 ubox
6 95 0.044726509 ubox
6 98 0.044630166 ubox
6 101 0.044504803 ubox
6 104 0.043593140 ubox
6 107 0.015195136 ubox
7 17 0.010164006 ubox
7 23 0.004808710 ubox
7 31 0.022838192 ubox
7 37 0.007388029 ubox
7 42 0.004143319 ubox
7 47 0.005414472 ubox
7 51 0.003216801 ubox
7 54 0.018646498 ubox
7 58 0.133763081 ubox
7 64 0.018184531 ubox
7 67 0.235475792 ubox
7 86 0.007255336 ubox
7 91 0.058025323 ubox
8 46 0.005068882 ubox
9 43 0.005512378 ubox
9 52 0.023122968 ubox
10 17 0.034365224 ubox
10 23 0.031025243 ubox
10 29 0.021623130 ubox
10 42 0.005729138 ubox
10 51 0.025747052 ubox
10 54 0.959496573 ubox
10 58 0.046850861 ubox
10 64 0.071032005 ubox
10 67 0.006239309 ubox
10 91 0.011517595 ubox
11 15 0.008633398 ubox
11 19 0.011773261 ubox
11 22 0.031248475 ubox
11 26 0.005529702 ubox
11 28 0.021674381 ubox
11 53 0.978885695 ubox
11 57 0.046983343 ubox
11 61 0.008223135 ubox
11 63 0.069592558 ubox
11 68 0.007960605 ubox
11 95 0.009225710 ubox
11 98 0.008770934 ubox
11 101 0.008968819 ubox
11 104 0.008981170 ubox
11 107 0.003407574 ubox
12 43 0.004917660 ubox
12 52 0.978845415 ubox
13 17 0.007616617 ubox
13 23 0.008452498 ubox
13 42 0.005017882 ubox
13 47 0.003641431 ubox
13 51 0.977937752 ubox
13 54 0.006076319 ubox
13 58 0.022482100 ubox
13 64 0.003948388 ubox
13 67 0.008093743 ubox
13 91 0.008914337 ubox
14 43 0.009157339 ubox
14 46 0.003802549 ubox
14 52 0.003590905 ubox
15 23 0.021131469 ubox
15 29 0.008078105 ubox
15 31 0.004677233 ubox
15 42 0.009261764 ubox
15 47 0.969658272 ubox
15 51 0.004526841 ubox
15 54 0.023224537 ubox
15 58 0.010521555 ubox
15 64 0.005137541 ubox
15 67 0.006291707 ubox
15 91 0.008375299 ubox
16 46 0.970466539 ubox
17 22 0.030735965 ubox
17 26 0.029068144 ubox
17 28 0.009563061 ubox
17 32 0.016223424 ubox
17 35 0.003478777 ubox
17 45 0.968075764 ubox
17 46 0.009729076 ubox
17 53 0.108102304 ubox
17 57 0.022188222 ubox
17 61 0.006707596 ubox
17 63 0.011762521 ubox
17 68 0.005991968 ubox
17 95 0.007494919 ubox
17 98 0.007340273 ubox
17 101 0.007497371 ubox
17 104 0.007510521 ubox
18 43 0.822256455 ubox
18 46 0.023811301 ubox
18 52 0.108234884 ubox
19 23 0.007507069 ubox
19 29 0.027738151 ubox
19 31 0.017367968 ubox
19 37 0.005116201 ubox
19 42 0.823271112 ubox
19 47 0.038610054 ubox
19 51 0.107904348 ubox
19 54 0.007102682 ubox
19 58 0.004883038 ubox
19 64 0.005263194 ubox
19 67 0.007081269 ubox
19 91 0.007485980 ubox
20 43 0.026890976 ubox
20 46 0.036424340 ubox
21 43 0.363735633 ubox
21 46 0.010610191 ubox
21 52 0.010743471 ubox
22 29 0.701652405 ubox
22 31 0.050681498 ubox
22 37 0.086801837 ubox
22 42 0.367719751 ubox
22 47 0.038259744 ubox
22 51 0.011350243 ubox
22 54 0.044868360 ubox
22 58 0.052308304 ubox
22 64 0.016114455 ubox
22 91 0.005821228 ubox
23 28 0.697399415 ubox
23 32 0.028207288 ubox
23 35 0.024276488 ubox
23 38 0.110044800 ubox
23 43 0.009333480 ubox
23 45 0.038237638 ubox
23 46 0.032698522 ubox
23 53 0.045455387 ubox
23 57 0.052947292 ubox
23 61 0.008980252 ubox
23 63 0.016242238 ubox
23 95 0.006348339 ubox
23 98 0.006285345 ubox
23 101 0.006394978 ubox
23 104 0.006412077 ubox
24 43 0.010609949 ubox
24 46 0.037784550 ubox
24 52 0.043024554 ubox
25 43 0.084450926 ubox
25 46 0.009657742 ubox
25 52 0.012804934 ubox
26 31 0.037531026 ubox
26 37 0.076396291 ubox
26 42 0.087355113 ubox
26 47 0.012546444 ubox
26 51 0.017942420 ubox
26 54 0.006690797 ubox
26 58 0.018286335 ubox
26 91 0.006308352 ubox
27 43 0.189026776 ubox
27 46 0.010903267 ubox
27 52 0.010252328 ubox
28 37 0.204575522 ubox
28 42 0.196058651 ubox
28 47 0.011407953 ubox
28 51 0.012511876 ubox
28 54 0.126358540 ubox
28 58 0.010030673 ubox
28 64 0.003332784 ubox
28 91 0.003196449 ubox
29 35 0.088771166 ubox
29 38 0.037440964 ubox
29 45 0.009323228 ubox
29 46 0.008064300 ubox
29 53 0.128584409 ubox
29 57 0.010042370 ubox
29 63 0.003319797 ubox
29 95 0.003334225 ubox
29 98 0.003353485 ubox
29 101 0.003409855 ubox
29 104 0.003425446 ubox
30 43 0.007065206 ubox
30 46 0.038383556 ubox
30 52 0.127323498 ubox
31 35 0.025748455 ubox
31 38 0.794818468 ubox
31 43 0.035873493 ubox
31 45 0.038711482 ubox
31 46 0.003990436 ubox
31 52 0.015870225 ubox
31 68 0.015969502 ubox
32 37 0.794765823 ubox
32 42 0.036953681 ubox
32 47 0.019241445 ubox
32 51 0.027244486 ubox
32 54 0.008685370 ubox
32 67 0.015989956 ubox
33 43 0.008472127 ubox
33 46 0.018281360 ubox
34 43 0.075492131 ubox
34 52 0.008050994 ubox
35 42 0.078463026 ubox
35 47 0.150752709 ubox
35 51 0.008084621 ubox
35 64 0.003771109 ubox
36 43 0.008469045 ubox
36 46 0.151282010 ubox
37 43 0.026150559 ubox
37 45 0.150756904 ubox
37 68 0.007610130 ubox
38 42 0.028587657 ubox
38 47 0.023346463 ubox
38 67 0.007614506 ubox
39 43 0.026372583 ubox
39 46 0.022679627 ubox
40 46 0.006330362 ubox
41 46 0.006698624 ubox
42 53 0.010775446 ubox
42 57 0.014724633 ubox
42 61 0.006118801 ubox
42 63 0.006789357 ubox
42 68 0.006555807 ubox
42 95 0.007840152 ubox
42 98 0.006548725 ubox
42 101 0.006907002 ubox
42 104 0.006901071 ubox
43 48 0.005224988 ubox
43 49 0.004818482 ubox
43 50 0.006380354 ubox
43 56 0.014476690 ubox
43 60 0.005999273 ubox
43 62 0.006515144 ubox
43 67 0.006351907 ubox
43 94 0.007543594 ubox
43 97 0.006315634 ubox
43 100 0.006659297 ubox
43 103 0.006653126 ubox
44 52 0.020205755 ubox
45 51 0.023600657 ubox
45 54 0.010998761 ubox
45 58 0.004663033 ubox
45 64 0.003238316 ubox
45 67 0.014253351 ubox
45 91 0.009173004 ubox
46 50 0.021595091 ubox
46 54 0.014805843 ubox
46 62 0.006834348 ubox
46 64 0.006355425 ubox
46 66 0.014262237 ubox
46 90 0.009066530 ubox
46 96 0.005016787 ubox
46 99 0.005100970 ubox
46 102 0.004765059 ubox
46 105 0.004239861 ubox
47 53 0.018844637 ubox
47 57 0.003712560 ubox
47 61 0.007627115 ubox
47 63 0.007438085 ubox
47 68 0.009991286 ubox
47 95 0.005360207 ubox
47 98 0.005449643 ubox
47 101 0.005105604 ubox
47 104 0.004568645 ubox
48 52 0.016415624 ubox
51 57 0.011550529 ubox
51 61 0.020625212 ubox
51 63 0.008979059 ubox
51 68 0.013156673 ubox
51 85 0.008932675 ubox
51 95 0.004049807 ubox
51 98 0.004163399 ubox
51 101 0.004490372 ubox
51 104 0.005539129 ubox
52 56 0.010423485 ubox
52 59 0.023855606 ubox
52 60 0.016087252 ubox
52 62 0.008618356 ubox
52 65 0.073820810 ubox
52 66 0.003619654 ubox
52 67 0.009849171 ubox
52 84 0.008939503 ubox
52 97 0.003368959 ubox
52 100 0.003760638 ubox
52 103 0.004975275 ubox
53 58 0.028034367 ubox
53 64 0.081019834 ubox
53 67 0.005248185 ubox
53 83 0.008937149 ubox
53 91 0.003335624 ubox
54 61 0.024088286 ubox
54 63 0.083171268 ubox
54 68 0.011877334 ubox
54 82 0.008648515 ubox
54 95 0.003730595 ubox
54 98 0.004666045 ubox
54 101 0.010770726 ubox
54 104 0.003573281 ubox
56 71 0.003968454 ubox
57 64 0.429403870 ubox
57 67 0.073443559 ubox
57 70 0.004750892 ubox
57 79 0.009142436 ubox
57 86 0.006467904 ubox
57 91 0.011308539 ubox
58 63 0.426582265 ubox
58 68 0.033479692 ubox
58 69 0.008721607 ubox
58 75 0.008421779 ubox
58 78 0.009146792 ubox
58 85 0.006364927 ubox
58 95 0.030157533 ubox
58 98 0.034224780 ubox
58 101 0.010676403 ubox
58 104 0.006418593 ubox
59 74 0.008332370 ubox
59 77 0.009109093 ubox
60 76 0.008379786 ubox
60 82 0.005036111 ubox
61 67 0.069864675 ubox
61 91 0.016730114 ubox
62 71 0.013485950 ubox
63 67 0.026763223 ubox
63 70 0.014758261 ubox
63 79 0.008430622 ubox
63 86 0.004075338 ubox
63 91 0.118848380 ubox
64 68 0.027949363 ubox
64 69 0.021567582 ubox
64 72 0.004220607 ubox
64 78 0.008476414 ubox
64 85 0.003291442 ubox
64 95 0.022279406 ubox
64 98 0.008853252 ubox
64 101 0.007804611 ubox
64 104 0.007153026 ubox
65 71 0.004039010 ubox
65 77 0.008472975 ubox
66 76 0.008459738 ubox
67 75 0.008387219 ubox
67 95 0.012992308 ubox
67 98 0.009898827 ubox
67 101 0.009231779 ubox
67 104 0.007956225 ubox
68 80 0.003324203 ubox
68 86 0.041439570 ubox
68 91 0.047308713 ubox
69 79 0.003329798 ubox
69 86 0.986376559 ubox
69 91 0.005488071 ubox
70 78 0.003313966 ubox
70 85 0.999709266 ubox
71 84 0.999676294 ubox
72 83 0.999814314 ubox
73 82 0.999421161 ubox
74 80 0.007384055 ubox
74 81 0.999439887 ubox
74 92 0.005900104 ubox
75 79 0.013611497 ubox
75 80 0.998726421 ubox
75 91 0.006262788 ubox
76 80 0.003186174 ubox
76 88 0.010134216 ubox
76 90 0.005380317 ubox
77 87 0.012255262 ubox
78 86 0.012624860 ubox
79 85 0.012618764 ubox
86 95 0.015375274 ubox
86 98 0.006199916 ubox
86 101 0.004929725 ubox
86 104 0.004217247 ubox
91 95 0.043549283 ubox
91 98 0.103950733 ubox
91 101 0.045124243 ubox
91 104 0.034538184 ubox
91 107 0.010206647 ubox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
17 45 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
