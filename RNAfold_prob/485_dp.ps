%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (485)
} def

/sequence { (\
GGAAAAGCAUUCGUCAGCCGAAAGGCGCCGAAAGGCGACAAAAGAUGUCGAAAGACAUCGAAUGCAAAGUAUUAUUUCGAUAAUACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.003327338 ubox
1 12 0.004962384 ubox
1 78 0.007388974 ubox
1 86 0.004303401 ubox
1 95 0.067337837 ubox
1 98 0.067776868 ubox
1 101 0.069339755 ubox
1 104 0.069666708 ubox
1 107 0.017587826 ubox
2 11 0.004953323 ubox
2 12 0.006842195 ubox
2 70 0.005246847 ubox
2 77 0.007360188 ubox
2 78 0.009072240 ubox
2 95 0.035532558 ubox
2 98 0.035665821 ubox
2 101 0.036437822 ubox
2 104 0.036305242 ubox
2 107 0.011845870 ubox
3 10 0.004641832 ubox
3 11 0.006811419 ubox
3 70 0.003870138 ubox
3 76 0.007298250 ubox
3 77 0.009034850 ubox
4 10 0.006224437 ubox
4 75 0.006802466 ubox
4 76 0.008836870 ubox
5 73 0.003616655 ubox
5 75 0.008069873 ubox
6 72 0.003834023 ubox
6 73 0.003507437 ubox
7 36 0.009570982 ubox
7 65 0.998756828 ubox
8 35 0.009548689 ubox
8 64 0.999816013 ubox
9 63 0.999404163 ubox
10 22 0.004840218 ubox
10 32 0.009617010 ubox
10 61 0.003292146 ubox
10 62 0.998822890 ubox
10 93 0.005689412 ubox
11 21 0.007181907 ubox
11 31 0.010071014 ubox
11 41 0.004161125 ubox
11 60 0.004127940 ubox
11 61 0.999030657 ubox
11 92 0.006486850 ubox
12 20 0.008039256 ubox
12 30 0.010196608 ubox
12 60 0.998171715 ubox
12 91 0.006560110 ubox
13 18 0.008306101 ubox
13 19 0.011931838 ubox
13 26 0.044886907 ubox
13 28 0.005291236 ubox
13 29 0.010488328 ubox
13 39 0.709276922 ubox
13 56 0.026064363 ubox
13 59 0.154735130 ubox
14 21 0.039409278 ubox
14 25 0.046299114 ubox
14 27 0.004790513 ubox
14 31 0.003302510 ubox
14 38 0.710147083 ubox
14 45 0.003927139 ubox
14 51 0.006332264 ubox
14 55 0.033125858 ubox
14 57 0.007460892 ubox
14 61 0.011182039 ubox
14 92 0.003519486 ubox
15 20 0.042100813 ubox
15 24 0.048217225 ubox
15 27 0.008353017 ubox
15 30 0.003534694 ubox
15 37 0.709479881 ubox
15 44 0.005558760 ubox
15 50 0.006383944 ubox
15 54 0.033216640 ubox
15 60 0.012255061 ubox
15 91 0.003791526 ubox
16 58 0.003381778 ubox
17 26 0.973547745 ubox
17 36 0.047179724 ubox
17 39 0.003848497 ubox
18 24 0.007273435 ubox
18 25 0.994538593 ubox
18 35 0.047199499 ubox
19 24 0.994450159 ubox
19 25 0.010669518 ubox
19 34 0.047165954 ubox
19 44 0.006019525 ubox
24 29 0.035358592 ubox
24 39 0.039627157 ubox
25 29 0.006979843 ubox
25 39 0.042119291 ubox
26 37 0.213007151 ubox
27 36 0.997606214 ubox
27 39 0.006698307 ubox
28 35 0.998688822 ubox
29 34 0.998307942 ubox
29 35 0.004548051 ubox
29 37 0.010917689 ubox
30 36 0.011002229 ubox
34 39 0.004506130 ubox
36 50 0.012584010 ubox
37 49 0.047489291 ubox
37 59 0.003523746 ubox
37 65 0.009137422 ubox
38 48 0.047549242 ubox
38 58 0.003169511 ubox
39 44 0.027689431 ubox
39 47 0.047561560 ubox
39 64 0.012703944 ubox
40 46 0.044456819 ubox
40 63 0.012384687 ubox
44 58 0.008518877 ubox
44 59 0.985803385 ubox
45 58 0.996494945 ubox
46 57 0.997941909 ubox
47 56 0.998838406 ubox
48 55 0.998687210 ubox
49 54 0.998349885 ubox
50 56 0.005199306 ubox
50 59 0.006726443 ubox
51 58 0.006466858 ubox
65 91 0.004547672 ubox
66 77 0.005745261 ubox
67 76 0.006558273 ubox
67 77 0.004155382 ubox
68 75 0.006632915 ubox
68 76 0.004646026 ubox
68 84 0.003344240 ubox
69 75 0.004782041 ubox
69 78 0.005017103 ubox
69 84 0.003205837 ubox
69 86 0.995543025 ubox
69 95 0.010873867 ubox
69 98 0.019235460 ubox
69 101 0.026699576 ubox
69 104 0.006050294 ubox
70 74 0.004474992 ubox
70 82 0.012364095 ubox
70 85 0.996746343 ubox
70 94 0.010142559 ubox
70 97 0.018304371 ubox
70 99 0.005968694 ubox
70 100 0.025722387 ubox
70 103 0.005717447 ubox
71 81 0.013442891 ubox
71 84 0.996738958 ubox
72 80 0.013720876 ubox
72 83 0.996260745 ubox
72 92 0.005931880 ubox
72 93 0.003907003 ubox
72 96 0.004258638 ubox
72 97 0.024021857 ubox
73 79 0.013490827 ubox
73 80 0.004816471 ubox
73 82 0.996024814 ubox
73 85 0.013122647 ubox
73 91 0.005722342 ubox
73 92 0.003392775 ubox
73 96 0.026156867 ubox
73 97 0.004634049 ubox
74 81 0.984802063 ubox
74 84 0.014248832 ubox
75 79 0.035333999 ubox
75 80 0.899544109 ubox
75 82 0.006590933 ubox
75 83 0.014607278 ubox
75 89 0.005395352 ubox
75 90 0.006228401 ubox
75 94 0.049896579 ubox
76 80 0.028566035 ubox
76 82 0.014730429 ubox
76 88 0.005735558 ubox
76 89 0.006595367 ubox
76 93 0.056362284 ubox
77 87 0.005537427 ubox
77 88 0.006368395 ubox
77 92 0.057684592 ubox
78 91 0.057840746 ubox
79 86 0.009149725 ubox
81 87 0.004176575 ubox
81 88 0.016319689 ubox
81 89 0.004872041 ubox
86 91 0.006691417 ubox
91 95 0.042960776 ubox
91 98 0.103589639 ubox
91 101 0.045450754 ubox
91 104 0.035178370 ubox
91 107 0.010408132 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
