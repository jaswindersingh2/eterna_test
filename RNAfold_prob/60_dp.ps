%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (60)
} def

/sequence { (\
GGAAAAACACAGGAUAGGAAACUAUCGGGACGGAUGGAAACAUCACUAGGAAACUAGCGGACCCUGUGUGAUACUUUCGAGUAUCAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.027408523 ubox
1 10 0.018705017 ubox
1 74 0.009870931 ubox
1 75 0.010613837 ubox
1 78 0.029254435 ubox
1 85 0.003307326 ubox
1 95 0.067589112 ubox
1 98 0.068035380 ubox
1 101 0.069564945 ubox
1 104 0.069877874 ubox
1 107 0.017643274 ubox
2 8 0.006841525 ubox
2 10 0.003564020 ubox
2 74 0.012806302 ubox
2 77 0.029276593 ubox
2 78 0.015715041 ubox
2 85 0.003651561 ubox
2 95 0.035671440 ubox
2 98 0.035804122 ubox
2 101 0.036561009 ubox
2 104 0.036422650 ubox
2 107 0.011885053 ubox
3 69 0.005639366 ubox
3 72 0.003335468 ubox
3 76 0.029131053 ubox
3 77 0.015665658 ubox
4 69 0.007202616 ubox
4 72 0.009208072 ubox
4 75 0.027038574 ubox
4 76 0.015045727 ubox
5 69 0.010046405 ubox
5 72 0.006647583 ubox
5 75 0.011531095 ubox
6 69 0.039500621 ubox
6 72 0.003959264 ubox
7 67 0.006209736 ubox
7 69 0.861616022 ubox
8 66 0.006383222 ubox
8 68 0.996564716 ubox
9 65 0.005619230 ubox
9 67 0.997678207 ubox
9 69 0.003298497 ubox
10 66 0.998007130 ubox
10 68 0.003728017 ubox
11 65 0.996732858 ubox
11 67 0.003342763 ubox
12 26 0.006214920 ubox
12 63 0.004959657 ubox
12 64 0.990684753 ubox
12 65 0.003227971 ubox
12 95 0.006922811 ubox
12 98 0.006930014 ubox
12 101 0.007000809 ubox
12 104 0.007037414 ubox
13 25 0.004223273 ubox
13 26 0.995040307 ubox
13 62 0.003437115 ubox
13 63 0.085664622 ubox
14 25 0.998276119 ubox
15 24 0.998546199 ubox
15 61 0.007236286 ubox
16 23 0.998742356 ubox
17 22 0.998144365 ubox
17 23 0.006293263 ubox
17 26 0.003533993 ubox
17 41 0.012322113 ubox
17 58 0.003803830 ubox
18 22 0.009449084 ubox
18 26 0.007199073 ubox
18 41 0.008845365 ubox
18 58 0.004918396 ubox
19 25 0.006908707 ubox
22 29 0.003435122 ubox
22 37 0.038420037 ubox
23 28 0.003315746 ubox
23 36 0.038664367 ubox
24 35 0.038779776 ubox
25 34 0.038870312 ubox
25 61 0.003481046 ubox
26 32 0.032394569 ubox
26 33 0.039093370 ubox
26 59 0.008723292 ubox
26 60 0.005245722 ubox
27 31 0.031249209 ubox
27 58 0.008853058 ubox
27 62 0.008821262 ubox
27 63 0.986875718 ubox
27 64 0.086509494 ubox
28 58 0.005299569 ubox
28 62 0.989897691 ubox
28 63 0.098842398 ubox
28 64 0.003610198 ubox
29 62 0.098793531 ubox
29 63 0.003964430 ubox
31 59 0.994166616 ubox
31 60 0.022698754 ubox
32 41 0.004780532 ubox
32 44 0.010452864 ubox
32 46 0.014284351 ubox
32 58 0.982414352 ubox
33 43 0.006359331 ubox
33 44 0.996976364 ubox
33 58 0.004553392 ubox
34 43 0.998280865 ubox
35 42 0.998305136 ubox
35 45 0.009817977 ubox
35 56 0.006513207 ubox
36 41 0.998111312 ubox
36 44 0.011183923 ubox
36 54 0.004056085 ubox
36 55 0.006719505 ubox
37 41 0.007716369 ubox
37 43 0.008175885 ubox
37 44 0.013840754 ubox
37 54 0.006722281 ubox
38 43 0.012756409 ubox
41 49 0.004343376 ubox
41 50 0.003557511 ubox
43 60 0.021294619 ubox
43 61 0.016705661 ubox
44 59 0.034758929 ubox
44 60 0.018367483 ubox
46 57 0.992863492 ubox
47 56 0.998840047 ubox
47 57 0.003418242 ubox
48 55 0.999309063 ubox
49 54 0.998746474 ubox
49 55 0.008488244 ubox
50 54 0.011071913 ubox
59 63 0.004297118 ubox
64 91 0.056182078 ubox
65 90 0.056141118 ubox
65 91 0.003637884 ubox
65 96 0.004179636 ubox
65 99 0.006444480 ubox
65 102 0.005182388 ubox
65 105 0.004393731 ubox
66 95 0.004521122 ubox
66 98 0.006972514 ubox
66 101 0.005606770 ubox
66 104 0.004753433 ubox
67 87 0.003625540 ubox
67 88 0.011398183 ubox
67 89 0.004020635 ubox
67 94 0.004115636 ubox
67 96 0.005196275 ubox
67 97 0.005316487 ubox
67 99 0.004055268 ubox
67 100 0.004306441 ubox
67 102 0.003396099 ubox
67 103 0.003668655 ubox
68 95 0.007400030 ubox
68 98 0.005780704 ubox
68 101 0.004844636 ubox
69 79 0.003286655 ubox
69 86 0.455573324 ubox
69 87 0.020799695 ubox
69 88 0.005698817 ubox
69 89 0.004100162 ubox
69 94 0.005522625 ubox
69 97 0.004340108 ubox
69 100 0.003819669 ubox
70 78 0.012035939 ubox
70 85 0.997684839 ubox
70 95 0.003544399 ubox
70 98 0.003596992 ubox
71 77 0.011914614 ubox
71 84 0.998432690 ubox
72 83 0.998348183 ubox
73 82 0.998593145 ubox
74 79 0.005882614 ubox
74 81 0.998412929 ubox
74 91 0.007567605 ubox
75 79 0.028218841 ubox
75 80 0.923172216 ubox
75 81 0.005783303 ubox
75 90 0.007534136 ubox
75 94 0.015166329 ubox
76 80 0.028560983 ubox
76 88 0.003189153 ubox
76 89 0.007372500 ubox
76 93 0.018118013 ubox
77 87 0.003285585 ubox
77 88 0.006801312 ubox
77 92 0.018761579 ubox
78 91 0.018838048 ubox
79 85 0.009174795 ubox
79 98 0.004084795 ubox
80 84 0.007995712 ubox
81 95 0.029311155 ubox
81 98 0.003920203 ubox
82 87 0.004947205 ubox
82 94 0.028942365 ubox
82 97 0.003782033 ubox
84 92 0.030529512 ubox
85 91 0.031490117 ubox
91 95 0.042943901 ubox
91 98 0.103540184 ubox
91 101 0.045425671 ubox
91 104 0.035157699 ubox
91 107 0.010402005 ubox
7 69 0.9500000 lbox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
