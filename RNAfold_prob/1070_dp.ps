%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1070)
} def

/sequence { (\
GGAAAAAAGAUGACAACAGAUAAUCAAAGAUAUAUCAAAAGUACACUGAAACAGGUACAGUUGACAUCACUCGCGUUCGCGCGAGUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.009519690 ubox
1 17 0.005770748 ubox
1 68 0.003780020 ubox
1 95 0.067548483 ubox
1 98 0.068029052 ubox
1 101 0.069709223 ubox
1 104 0.070048256 ubox
1 107 0.017689076 ubox
2 25 0.005964885 ubox
2 68 0.005360956 ubox
2 95 0.035656039 ubox
2 98 0.035812591 ubox
2 101 0.036645663 ubox
2 104 0.036519040 ubox
2 107 0.011918004 ubox
3 24 0.005774652 ubox
3 67 0.004816262 ubox
4 11 0.006881859 ubox
8 21 0.007351514 ubox
9 14 0.004853128 ubox
9 17 0.004142328 ubox
9 25 0.040118524 ubox
9 36 0.005354656 ubox
9 68 0.995669824 ubox
9 95 0.003295730 ubox
9 98 0.005381571 ubox
9 101 0.006357871 ubox
9 104 0.007747162 ubox
10 21 0.006654883 ubox
10 24 0.040114392 ubox
10 35 0.005355796 ubox
10 67 0.996668272 ubox
11 18 0.013624268 ubox
11 20 0.006972094 ubox
11 22 0.003492417 ubox
11 23 0.039517926 ubox
11 26 0.012447932 ubox
11 34 0.005275753 ubox
11 66 0.996603772 ubox
11 69 0.003978011 ubox
11 96 0.005750724 ubox
11 99 0.006702663 ubox
11 102 0.009043465 ubox
11 105 0.007064080 ubox
12 17 0.014544699 ubox
12 21 0.004507529 ubox
12 25 0.013847902 ubox
12 33 0.004709021 ubox
12 62 0.004124246 ubox
12 65 0.995063518 ubox
12 68 0.008306604 ubox
12 95 0.006052983 ubox
12 98 0.007045562 ubox
12 101 0.009542779 ubox
12 104 0.007733910 ubox
13 21 0.007273822 ubox
13 24 0.013045779 ubox
13 61 0.009277869 ubox
13 67 0.008221044 ubox
14 19 0.017081089 ubox
14 60 0.009372492 ubox
14 63 0.994347691 ubox
15 62 0.995669854 ubox
16 21 0.003645060 ubox
16 61 0.995274794 ubox
17 29 0.003185230 ubox
17 60 0.994313223 ubox
17 63 0.003660261 ubox
18 24 0.009118215 ubox
18 31 0.006526398 ubox
18 33 0.005430382 ubox
18 35 0.012283607 ubox
18 62 0.003410386 ubox
19 24 0.003447637 ubox
19 25 0.073268638 ubox
19 33 0.006214257 ubox
19 35 0.008102700 ubox
19 36 0.982802240 ubox
19 58 0.004653321 ubox
19 68 0.003213069 ubox
20 24 0.063823358 ubox
20 31 0.019229005 ubox
20 33 0.065080150 ubox
20 35 0.983584950 ubox
20 67 0.003178062 ubox
21 26 0.005658504 ubox
21 27 0.006167613 ubox
21 28 0.009416123 ubox
21 29 0.003253360 ubox
21 30 0.019975871 ubox
21 32 0.069718237 ubox
21 34 0.981455272 ubox
22 31 0.062394689 ubox
22 33 0.962063479 ubox
23 31 0.917215891 ubox
23 33 0.042823901 ubox
23 35 0.005206989 ubox
24 28 0.008654301 ubox
24 29 0.030206071 ubox
24 30 0.938825275 ubox
24 32 0.056123828 ubox
24 34 0.005361105 ubox
24 92 0.005828101 ubox
25 29 0.931961740 ubox
25 91 0.006208252 ubox
26 31 0.032858466 ubox
26 33 0.008659142 ubox
26 35 0.005213263 ubox
27 31 0.007422471 ubox
27 33 0.006538040 ubox
27 35 0.003635565 ubox
28 33 0.013921416 ubox
28 35 0.011447465 ubox
29 33 0.004039888 ubox
29 36 0.089830356 ubox
29 68 0.053994501 ubox
30 35 0.079715247 ubox
30 67 0.053946665 ubox
31 37 0.004745598 ubox
31 38 0.007125715 ubox
31 39 0.004465562 ubox
31 40 0.006715423 ubox
31 66 0.052755758 ubox
32 67 0.010798746 ubox
33 37 0.003804315 ubox
33 38 0.007273816 ubox
33 39 0.006603811 ubox
33 40 0.008404327 ubox
33 66 0.012261321 ubox
35 39 0.004046048 ubox
35 40 0.006034962 ubox
35 64 0.067261372 ubox
36 63 0.069370906 ubox
37 62 0.069595054 ubox
38 61 0.068848035 ubox
41 52 0.004015502 ubox
41 58 0.998029675 ubox
42 51 0.003989251 ubox
42 57 0.999227345 ubox
43 56 0.999299132 ubox
44 54 0.003706228 ubox
44 55 0.998104564 ubox
45 56 0.015941997 ubox
46 54 0.996123399 ubox
46 55 0.017847185 ubox
47 51 0.003681086 ubox
47 53 0.996574884 ubox
47 54 0.018789370 ubox
48 52 0.980745102 ubox
60 95 0.019468038 ubox
60 98 0.030680250 ubox
60 101 0.011063028 ubox
60 104 0.005158694 ubox
61 94 0.019455112 ubox
61 97 0.030712336 ubox
61 100 0.011071490 ubox
61 103 0.005161737 ubox
62 93 0.019155566 ubox
62 96 0.030715056 ubox
62 99 0.011059516 ubox
62 102 0.005152286 ubox
63 95 0.030621574 ubox
63 98 0.011017834 ubox
63 101 0.005127470 ubox
65 91 0.013865305 ubox
67 87 0.005744324 ubox
67 88 0.011266000 ubox
67 89 0.004625047 ubox
67 90 0.008931779 ubox
67 92 0.023778233 ubox
68 91 0.024990141 ubox
69 86 0.951325860 ubox
70 85 0.999254485 ubox
71 84 0.999776636 ubox
72 83 0.999963968 ubox
73 80 0.004022843 ubox
73 82 0.999972880 ubox
74 79 0.004217881 ubox
74 81 0.999927399 ubox
75 80 0.974038058 ubox
85 95 0.008700157 ubox
85 98 0.005763102 ubox
85 101 0.004588100 ubox
85 104 0.004248750 ubox
86 90 0.003404214 ubox
86 91 0.006457428 ubox
86 92 0.005955022 ubox
86 93 0.007620875 ubox
86 94 0.009391127 ubox
86 97 0.006187680 ubox
86 100 0.004904377 ubox
86 103 0.004542426 ubox
91 95 0.043031764 ubox
91 98 0.103731955 ubox
91 101 0.045493150 ubox
91 104 0.035203042 ubox
91 107 0.010415218 ubox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
