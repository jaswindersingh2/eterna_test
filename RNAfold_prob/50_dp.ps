%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (50)
} def

/sequence { (\
GGAAAAAGGACCCAAGCAAAAGCUUGGCAGCUGUUGAAAACAACAGUCGAAAACGACAGAAGCGGUCCGCAUGGAUUCGUCCAUGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.003264324 ubox
1 68 0.075257171 ubox
1 95 0.067589560 ubox
1 98 0.068011557 ubox
1 101 0.069582661 ubox
1 104 0.069904401 ubox
1 107 0.017649380 ubox
2 11 0.004217588 ubox
2 67 0.075208217 ubox
2 68 0.003913462 ubox
2 95 0.035677173 ubox
2 98 0.035803057 ubox
2 101 0.036581006 ubox
2 104 0.036442277 ubox
2 107 0.011891572 ubox
3 66 0.070182544 ubox
4 66 0.003312910 ubox
7 32 0.024589412 ubox
8 28 0.008810980 ubox
8 31 0.029448657 ubox
8 32 0.004908635 ubox
8 63 0.019026201 ubox
8 67 0.003245767 ubox
8 68 0.995127130 ubox
8 82 0.005548101 ubox
8 95 0.007303164 ubox
8 98 0.007210892 ubox
8 101 0.007200812 ubox
8 104 0.007207884 ubox
9 28 0.013035925 ubox
9 31 0.007485041 ubox
9 63 0.011057384 ubox
9 67 0.996370913 ubox
9 68 0.004815147 ubox
9 81 0.005553703 ubox
9 95 0.004260964 ubox
9 98 0.004056541 ubox
9 101 0.004002996 ubox
9 104 0.003979120 ubox
10 66 0.996082680 ubox
10 80 0.005471761 ubox
11 27 0.009625231 ubox
11 30 0.007485013 ubox
11 59 0.005722095 ubox
11 62 0.006341335 ubox
11 64 0.018262350 ubox
11 65 0.995226464 ubox
11 79 0.005427315 ubox
11 91 0.003216017 ubox
12 26 0.007606341 ubox
12 27 0.487572866 ubox
12 62 0.004772378 ubox
12 64 0.870060809 ubox
12 65 0.005915357 ubox
13 26 0.995183671 ubox
13 27 0.019053489 ubox
13 59 0.004249418 ubox
13 62 0.053840085 ubox
13 64 0.006989829 ubox
14 25 0.997703747 ubox
15 24 0.998333168 ubox
15 32 0.004706367 ubox
16 23 0.998961625 ubox
16 28 0.010112980 ubox
16 31 0.005642505 ubox
16 63 0.030288843 ubox
17 22 0.997524505 ubox
17 26 0.007215210 ubox
17 27 0.009293675 ubox
17 30 0.005636805 ubox
17 36 0.008263834 ubox
17 59 0.009248341 ubox
17 62 0.030273326 ubox
18 25 0.008138626 ubox
18 35 0.008297771 ubox
19 24 0.007224186 ubox
19 25 0.003569476 ubox
19 34 0.007150783 ubox
20 24 0.003441506 ubox
21 32 0.030722298 ubox
22 28 0.008545043 ubox
22 31 0.036515645 ubox
22 54 0.010735382 ubox
22 57 0.006920358 ubox
22 63 0.009886031 ubox
23 27 0.008493593 ubox
23 30 0.036535314 ubox
23 55 0.008877505 ubox
23 62 0.009891557 ubox
24 29 0.033375857 ubox
24 50 0.003959999 ubox
24 51 0.004091762 ubox
24 52 0.003919291 ubox
24 53 0.014389149 ubox
24 56 0.005504368 ubox
24 61 0.009741713 ubox
25 49 0.005033390 ubox
25 50 0.005561558 ubox
25 51 0.004425356 ubox
25 52 0.016310237 ubox
25 55 0.006161316 ubox
25 60 0.009118563 ubox
26 31 0.016014893 ubox
26 32 0.003264363 ubox
26 48 0.007244275 ubox
26 54 0.007388667 ubox
26 57 0.003294278 ubox
27 31 0.026068344 ubox
27 32 0.005589811 ubox
27 34 0.011298594 ubox
27 47 0.006748527 ubox
27 48 0.064477035 ubox
27 54 0.019527379 ubox
27 57 0.010962369 ubox
27 63 0.456335598 ubox
28 33 0.011950711 ubox
28 36 0.010824253 ubox
28 46 0.006211286 ubox
28 49 0.324984909 ubox
28 55 0.006948675 ubox
28 59 0.015161753 ubox
28 62 0.456476217 ubox
28 64 0.032617538 ubox
28 65 0.008913069 ubox
29 35 0.010553046 ubox
29 47 0.023350691 ubox
30 34 0.007171625 ubox
30 44 0.029823869 ubox
30 47 0.656296978 ubox
30 48 0.102286828 ubox
30 54 0.003927289 ubox
30 57 0.006445288 ubox
30 63 0.226486900 ubox
30 66 0.004199727 ubox
31 36 0.006153651 ubox
31 46 0.726449896 ubox
31 59 0.367620071 ubox
31 62 0.226545884 ubox
31 64 0.004817191 ubox
31 65 0.004867312 ubox
32 42 0.048276303 ubox
32 45 0.888042789 ubox
32 58 0.355350097 ubox
32 60 0.010135607 ubox
32 61 0.188869709 ubox
32 64 0.005024495 ubox
32 99 0.003972352 ubox
32 102 0.003969918 ubox
32 105 0.003365526 ubox
33 41 0.053515989 ubox
33 44 0.938971509 ubox
33 54 0.003166051 ubox
33 57 0.337265672 ubox
33 63 0.005516269 ubox
33 98 0.004871668 ubox
33 101 0.004872913 ubox
33 104 0.004416897 ubox
34 40 0.052734349 ubox
34 43 0.938682224 ubox
34 50 0.005969611 ubox
34 53 0.003658340 ubox
34 56 0.336924102 ubox
34 59 0.008038055 ubox
34 62 0.005463469 ubox
34 97 0.004870976 ubox
34 100 0.004871959 ubox
34 103 0.004416454 ubox
35 39 0.043916511 ubox
35 40 0.007403245 ubox
35 42 0.937725390 ubox
35 43 0.004375317 ubox
35 45 0.009926158 ubox
35 49 0.010190266 ubox
35 52 0.005019002 ubox
35 53 0.003291269 ubox
35 55 0.336059193 ubox
35 58 0.009811285 ubox
35 61 0.005080387 ubox
35 96 0.004865891 ubox
35 99 0.004865823 ubox
35 102 0.004410871 ubox
36 41 0.932454999 ubox
36 44 0.010987696 ubox
36 48 0.015397967 ubox
36 54 0.332036534 ubox
36 57 0.007076730 ubox
36 95 0.004842517 ubox
36 98 0.004841232 ubox
36 101 0.004389401 ubox
37 47 0.015105773 ubox
38 47 0.004893798 ubox
39 47 0.006018471 ubox
40 47 0.139318871 ubox
41 46 0.143502557 ubox
41 49 0.141046495 ubox
41 62 0.003861778 ubox
42 47 0.026953611 ubox
43 47 0.024852444 ubox
44 49 0.035002781 ubox
44 59 0.018560582 ubox
46 54 0.011536980 ubox
46 57 0.597323506 ubox
46 63 0.003458284 ubox
47 51 0.003914535 ubox
47 52 0.004571241 ubox
47 53 0.012496848 ubox
47 56 0.644748674 ubox
47 58 0.003184181 ubox
47 60 0.050174759 ubox
47 65 0.005418412 ubox
48 55 0.761870071 ubox
48 59 0.087230695 ubox
48 62 0.023394746 ubox
48 64 0.115227444 ubox
49 54 0.744618860 ubox
49 57 0.044535494 ubox
49 63 0.120993973 ubox
49 67 0.003909079 ubox
50 66 0.003818246 ubox
53 66 0.010117877 ubox
54 59 0.166036352 ubox
54 62 0.095683558 ubox
54 64 0.296569253 ubox
54 65 0.012949550 ubox
55 63 0.309065699 ubox
55 67 0.029741362 ubox
56 66 0.030312319 ubox
57 62 0.257680642 ubox
57 64 0.080590811 ubox
57 65 0.030609582 ubox
59 63 0.062256450 ubox
59 67 0.005291119 ubox
59 68 0.003163942 ubox
60 66 0.005121849 ubox
63 91 0.003206349 ubox
64 77 0.003609250 ubox
65 76 0.005308236 ubox
66 75 0.005759231 ubox
67 74 0.005788153 ubox
67 91 0.003229182 ubox
68 73 0.005780177 ubox
68 91 0.003501974 ubox
69 86 0.998902434 ubox
70 85 0.999960243 ubox
71 84 0.999579908 ubox
72 83 0.999581041 ubox
73 82 0.999967694 ubox
74 81 0.999542221 ubox
75 80 0.885886184 ubox
86 91 0.004953271 ubox
91 95 0.043054886 ubox
91 98 0.103793706 ubox
91 101 0.045530483 ubox
91 104 0.035233603 ubox
91 107 0.010424290 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
