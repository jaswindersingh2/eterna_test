%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (795)
} def

/sequence { (\
GGAAAAAGGAUACUGCAUUAUAUUAAUAAGAUUACGAAAAGAUAACUUCAUUAAAUAAUCACGUACCAGACGAACUUCGGUUCGUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 67 0.064428813 ubox
1 86 0.003588629 ubox
1 95 0.067272680 ubox
1 98 0.067692563 ubox
1 101 0.069252982 ubox
1 104 0.069574476 ubox
1 107 0.017565631 ubox
2 19 0.003413167 ubox
2 66 0.064404256 ubox
2 86 0.003458165 ubox
2 95 0.035513002 ubox
2 98 0.035638239 ubox
2 101 0.036413392 ubox
2 104 0.036274396 ubox
2 107 0.011836607 ubox
3 18 0.003456247 ubox
3 64 0.003325694 ubox
4 64 0.004929906 ubox
7 14 0.018773142 ubox
7 64 0.004006472 ubox
8 13 0.019990822 ubox
8 16 0.003846138 ubox
8 62 0.005227511 ubox
8 66 0.013537465 ubox
8 67 0.988340504 ubox
8 95 0.008198187 ubox
8 98 0.008040998 ubox
8 101 0.008024201 ubox
8 104 0.008025982 ubox
9 24 0.005185256 ubox
9 60 0.006883115 ubox
9 62 0.005273488 ubox
9 66 0.989131426 ubox
9 67 0.088424397 ubox
9 95 0.003668698 ubox
9 98 0.003448623 ubox
9 101 0.003411109 ubox
9 104 0.003386607 ubox
10 23 0.005392582 ubox
10 59 0.006642457 ubox
10 64 0.043893991 ubox
11 22 0.005420478 ubox
11 58 0.005578201 ubox
11 63 0.042461095 ubox
11 65 0.988051527 ubox
12 21 0.005341694 ubox
12 64 0.994589893 ubox
13 63 0.994392498 ubox
14 61 0.957669633 ubox
14 63 0.016933294 ubox
14 65 0.018757568 ubox
15 59 0.004286344 ubox
15 60 0.963551695 ubox
15 62 0.067434305 ubox
15 64 0.020168287 ubox
16 63 0.020260615 ubox
17 27 0.006884143 ubox
17 56 0.006592872 ubox
17 59 0.988381302 ubox
18 26 0.007278715 ubox
18 29 0.011914862 ubox
18 55 0.006673132 ubox
18 57 0.010006894 ubox
18 58 0.996407314 ubox
19 25 0.007356271 ubox
19 28 0.013656236 ubox
19 54 0.004909760 ubox
19 55 0.003414631 ubox
19 57 0.997409057 ubox
19 58 0.009375060 ubox
20 24 0.006538283 ubox
20 27 0.013712201 ubox
20 56 0.995827134 ubox
20 59 0.005754190 ubox
21 26 0.012973912 ubox
21 53 0.006854488 ubox
21 54 0.011496100 ubox
21 55 0.971955319 ubox
21 57 0.026135075 ubox
21 58 0.005311204 ubox
22 32 0.005796030 ubox
22 43 0.003283128 ubox
22 51 0.004862037 ubox
22 52 0.008656620 ubox
22 56 0.030361214 ubox
23 31 0.006284770 ubox
23 42 0.003287929 ubox
23 50 0.004675343 ubox
23 53 0.070297889 ubox
23 54 0.956304967 ubox
23 55 0.028451001 ubox
24 30 0.006253288 ubox
24 34 0.008378938 ubox
24 41 0.003170929 ubox
24 50 0.006678834 ubox
24 53 0.987456268 ubox
24 54 0.023698200 ubox
25 33 0.008968724 ubox
25 51 0.039596658 ubox
25 52 0.990939309 ubox
26 32 0.008865946 ubox
26 51 0.989277093 ubox
26 52 0.006567559 ubox
26 64 0.003946376 ubox
27 31 0.007896296 ubox
27 34 0.004297406 ubox
27 50 0.973926527 ubox
27 53 0.008448522 ubox
27 63 0.004012867 ubox
28 33 0.005062235 ubox
28 47 0.011744755 ubox
28 48 0.942768236 ubox
28 51 0.006117723 ubox
28 52 0.009031066 ubox
29 47 0.959652421 ubox
29 48 0.185751511 ubox
29 51 0.009187230 ubox
30 35 0.011786386 ubox
30 46 0.960778603 ubox
30 47 0.175232970 ubox
30 48 0.038541330 ubox
30 49 0.103402116 ubox
30 52 0.003489151 ubox
30 60 0.021970007 ubox
31 43 0.146916572 ubox
31 47 0.040133567 ubox
31 48 0.101544741 ubox
31 51 0.004068161 ubox
31 59 0.022021656 ubox
32 38 0.005058598 ubox
32 39 0.009837073 ubox
32 40 0.014596014 ubox
32 41 0.023667005 ubox
32 42 0.163505050 ubox
32 44 0.159875094 ubox
32 45 0.889222731 ubox
32 50 0.004291997 ubox
32 54 0.007450324 ubox
32 58 0.021989173 ubox
33 37 0.004823419 ubox
33 38 0.010466495 ubox
33 39 0.015692779 ubox
33 40 0.026761197 ubox
33 41 0.159439618 ubox
33 42 0.064610466 ubox
33 44 0.899714085 ubox
33 45 0.019211481 ubox
33 53 0.007601059 ubox
33 57 0.021841406 ubox
33 65 0.003654838 ubox
34 43 0.892831278 ubox
34 51 0.004403725 ubox
34 52 0.007252038 ubox
34 56 0.020970703 ubox
34 64 0.003927103 ubox
35 41 0.781288299 ubox
35 63 0.003955484 ubox
36 43 0.013369163 ubox
36 46 0.004879325 ubox
36 49 0.064753192 ubox
36 52 0.004578201 ubox
36 62 0.003891160 ubox
37 43 0.014397865 ubox
37 48 0.064364177 ubox
37 51 0.004571499 ubox
37 52 0.004471407 ubox
38 43 0.006729184 ubox
38 47 0.061876324 ubox
38 48 0.003312736 ubox
38 51 0.004276664 ubox
38 52 0.012567716 ubox
39 43 0.003162743 ubox
39 47 0.003902602 ubox
39 48 0.019681965 ubox
39 51 0.012953011 ubox
39 52 0.005145381 ubox
40 47 0.027608345 ubox
40 51 0.005519242 ubox
41 46 0.028710662 ubox
41 49 0.037493610 ubox
42 48 0.037160501 ubox
42 51 0.003329175 ubox
43 50 0.003254153 ubox
63 95 0.003975490 ubox
64 94 0.003861205 ubox
66 91 0.005222798 ubox
67 91 0.005221702 ubox
69 86 0.998549602 ubox
70 85 0.999686132 ubox
71 84 0.999949633 ubox
72 83 0.999966651 ubox
73 82 0.999634467 ubox
74 81 0.999103860 ubox
75 79 0.012351222 ubox
75 80 0.998463643 ubox
76 80 0.004071898 ubox
85 92 0.005884805 ubox
86 91 0.008856557 ubox
91 95 0.043043208 ubox
91 98 0.103778887 ubox
91 101 0.045529736 ubox
91 104 0.035236251 ubox
91 107 0.010425120 ubox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 41 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
