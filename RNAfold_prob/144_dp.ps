%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (144)
} def

/sequence { (\
GGAAAAAAGCAGUGUAGGACCUGUCGAGCAGCGAAAGCAUGAGAGAGAGUGCGGACACAAGCAAAAAAUUAUCGUUUCGACGAUAAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.102763344 ubox
1 62 0.009428430 ubox
1 69 0.009222041 ubox
1 70 0.008703022 ubox
1 73 0.014024955 ubox
1 95 0.065747248 ubox
1 98 0.067649080 ubox
1 101 0.069258761 ubox
1 104 0.069443928 ubox
1 107 0.017566752 ubox
2 10 0.026975946 ubox
2 62 0.006800821 ubox
2 69 0.013364233 ubox
2 70 0.014151836 ubox
2 72 0.012767218 ubox
2 73 0.015772269 ubox
2 78 0.003720963 ubox
2 95 0.034654835 ubox
2 98 0.035575162 ubox
2 101 0.036275928 ubox
2 104 0.036127743 ubox
2 107 0.011815453 ubox
3 69 0.015522612 ubox
3 70 0.009658588 ubox
3 72 0.015455307 ubox
3 77 0.003714896 ubox
4 69 0.010414011 ubox
4 70 0.009743316 ubox
4 76 0.003669908 ubox
5 69 0.009753938 ubox
5 70 0.008911857 ubox
5 75 0.003549672 ubox
6 69 0.008940822 ubox
7 70 0.005083283 ubox
8 69 0.006053981 ubox
9 15 0.003826628 ubox
9 24 0.011330044 ubox
9 52 0.010896357 ubox
9 58 0.004812045 ubox
9 62 0.916405568 ubox
9 95 0.014732232 ubox
9 98 0.015478148 ubox
9 101 0.017209620 ubox
9 104 0.018543858 ubox
9 107 0.006520861 ubox
10 14 0.003898047 ubox
10 17 0.003386486 ubox
10 23 0.012800385 ubox
10 51 0.010908764 ubox
10 61 0.916245714 ubox
10 91 0.018108053 ubox
11 22 0.012851890 ubox
11 50 0.010834347 ubox
12 20 0.011679164 ubox
12 21 0.012620201 ubox
12 56 0.022627719 ubox
12 58 0.994527865 ubox
12 62 0.005283401 ubox
12 95 0.008081804 ubox
12 98 0.016304661 ubox
12 101 0.022038379 ubox
12 104 0.021140346 ubox
12 107 0.007400562 ubox
13 19 0.011920964 ubox
13 30 0.003714531 ubox
13 48 0.010183898 ubox
13 53 0.008117325 ubox
13 55 0.022484650 ubox
13 57 0.996879896 ubox
13 59 0.021528058 ubox
13 61 0.004549812 ubox
13 63 0.003251593 ubox
13 94 0.007787042 ubox
13 96 0.017123410 ubox
13 97 0.012700297 ubox
13 99 0.023883863 ubox
13 100 0.016797750 ubox
13 102 0.023147314 ubox
13 103 0.016093756 ubox
13 105 0.019222481 ubox
13 106 0.005688646 ubox
14 20 0.010870964 ubox
14 29 0.004190485 ubox
14 52 0.010929416 ubox
14 56 0.997194766 ubox
14 58 0.022380870 ubox
14 62 0.003632964 ubox
14 95 0.020846774 ubox
14 98 0.029119788 ubox
14 101 0.028209655 ubox
14 104 0.021736436 ubox
15 19 0.009804578 ubox
15 28 0.004182360 ubox
15 46 0.009236038 ubox
15 51 0.011102375 ubox
15 53 0.015729024 ubox
15 54 0.086410141 ubox
15 55 0.972760543 ubox
15 57 0.021391528 ubox
15 61 0.003553570 ubox
15 94 0.020106115 ubox
15 97 0.028372290 ubox
15 100 0.027479977 ubox
15 103 0.021167882 ubox
16 50 0.011425625 ubox
17 50 0.003863506 ubox
17 52 0.830938490 ubox
17 56 0.016935702 ubox
17 95 0.019083740 ubox
17 98 0.018254248 ubox
17 101 0.014226372 ubox
18 25 0.004365702 ubox
18 50 0.015027362 ubox
18 52 0.489686059 ubox
18 95 0.008593704 ubox
18 98 0.008101464 ubox
18 101 0.005595755 ubox
19 24 0.003870879 ubox
19 50 0.872248991 ubox
20 33 0.006582519 ubox
20 47 0.035697253 ubox
20 49 0.850452399 ubox
20 51 0.273489157 ubox
20 53 0.016630812 ubox
20 54 0.006807066 ubox
20 91 0.004248198 ubox
21 31 0.010456400 ubox
21 45 0.210748915 ubox
21 47 0.799065664 ubox
21 49 0.519524452 ubox
21 51 0.004465826 ubox
21 53 0.006424004 ubox
22 30 0.010735661 ubox
22 44 0.211597443 ubox
22 45 0.006949434 ubox
22 46 0.795426567 ubox
22 47 0.016198106 ubox
22 48 0.556261569 ubox
22 57 0.003588275 ubox
22 82 0.005184748 ubox
23 29 0.010860827 ubox
23 56 0.003924237 ubox
23 81 0.006647025 ubox
24 28 0.010160711 ubox
24 34 0.005859525 ubox
24 42 0.219121804 ubox
24 43 0.003343514 ubox
24 44 0.794298532 ubox
24 45 0.005635403 ubox
24 46 0.560577445 ubox
24 48 0.008538288 ubox
24 55 0.003927843 ubox
24 80 0.006672912 ubox
25 33 0.006584547 ubox
25 41 0.220717058 ubox
25 43 0.794521484 ubox
25 45 0.561830148 ubox
25 47 0.008798884 ubox
25 54 0.003926138 ubox
25 79 0.006736302 ubox
26 32 0.006669580 ubox
26 40 0.221547285 ubox
26 78 0.006733682 ubox
27 40 0.069385930 ubox
27 77 0.006554069 ubox
28 38 0.276460760 ubox
28 40 0.276120821 ubox
28 52 0.003968960 ubox
28 62 0.005860600 ubox
28 76 0.004500900 ubox
29 37 0.276478169 ubox
29 41 0.771043444 ubox
29 43 0.004017260 ubox
29 51 0.003969163 ubox
29 61 0.005858889 ubox
30 40 0.768874067 ubox
30 50 0.003715750 ubox
30 76 0.003720888 ubox
31 38 0.957001168 ubox
31 40 0.007435990 ubox
31 58 0.003839505 ubox
31 62 0.003164790 ubox
31 75 0.005628478 ubox
32 37 0.958001373 ubox
32 41 0.003789939 ubox
32 61 0.003168343 ubox
32 74 0.005717188 ubox
32 79 0.003954791 ubox
33 38 0.020186201 ubox
33 56 0.004298234 ubox
33 73 0.005711877 ubox
33 78 0.004000668 ubox
34 72 0.005386014 ubox
34 77 0.003952947 ubox
35 76 0.003891579 ubox
36 75 0.003716149 ubox
37 52 0.014985774 ubox
38 51 0.015018171 ubox
39 50 0.015010546 ubox
39 72 0.004091357 ubox
40 49 0.014959959 ubox
40 71 0.004796639 ubox
41 70 0.004796702 ubox
41 73 0.003869694 ubox
42 69 0.004757908 ubox
42 72 0.003843194 ubox
49 56 0.004074205 ubox
49 58 0.014244345 ubox
49 62 0.004359771 ubox
50 55 0.004053194 ubox
50 57 0.014273456 ubox
50 61 0.004349133 ubox
50 63 0.050162895 ubox
51 56 0.014206147 ubox
51 62 0.057501199 ubox
52 61 0.057512287 ubox
53 58 0.010387615 ubox
53 62 0.005563818 ubox
54 58 0.004078602 ubox
59 70 0.008346314 ubox
60 69 0.011486040 ubox
61 95 0.031250423 ubox
61 98 0.006493860 ubox
61 101 0.003778068 ubox
61 104 0.003467201 ubox
62 91 0.022751545 ubox
63 69 0.007607518 ubox
63 70 0.011238601 ubox
63 72 0.003611507 ubox
64 69 0.012960789 ubox
64 70 0.008960438 ubox
65 69 0.008782949 ubox
65 70 0.006295425 ubox
65 72 0.003820508 ubox
66 70 0.003293190 ubox
67 72 0.003238962 ubox
68 84 0.017969922 ubox
69 83 0.018594304 ubox
69 85 0.019212587 ubox
69 86 0.839510794 ubox
69 87 0.055235978 ubox
69 88 0.024748793 ubox
69 89 0.016808403 ubox
69 90 0.012197050 ubox
69 91 0.005374668 ubox
69 92 0.007189700 ubox
69 93 0.005363131 ubox
69 94 0.004222993 ubox
69 96 0.004280744 ubox
69 97 0.007407583 ubox
69 99 0.005852732 ubox
69 100 0.019281503 ubox
69 102 0.003276175 ubox
69 103 0.003699194 ubox
70 82 0.017977158 ubox
70 85 0.965528238 ubox
70 86 0.044810455 ubox
70 87 0.016882988 ubox
70 88 0.011336581 ubox
70 89 0.008202516 ubox
70 90 0.003933375 ubox
70 91 0.005501023 ubox
70 92 0.003634283 ubox
70 96 0.008041903 ubox
70 97 0.006228338 ubox
70 99 0.021487631 ubox
70 100 0.004647034 ubox
70 102 0.003629680 ubox
71 84 0.977360880 ubox
72 80 0.020430160 ubox
72 83 0.978940860 ubox
72 92 0.003277953 ubox
72 96 0.018781863 ubox
72 97 0.027142099 ubox
72 99 0.006542079 ubox
73 79 0.020975656 ubox
73 82 0.979408420 ubox
73 91 0.003485949 ubox
74 78 0.019696358 ubox
74 81 0.977088359 ubox
74 95 0.199415446 ubox
74 98 0.005489237 ubox
75 79 0.035217631 ubox
75 80 0.903245781 ubox
75 94 0.199619461 ubox
75 97 0.005203126 ubox
76 80 0.027620936 ubox
76 93 0.199610540 ubox
76 96 0.003924499 ubox
77 92 0.199850604 ubox
78 91 0.199876858 ubox
84 88 0.003272181 ubox
91 95 0.042275564 ubox
91 98 0.101704649 ubox
91 101 0.044537737 ubox
91 104 0.034431614 ubox
91 107 0.010186134 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
