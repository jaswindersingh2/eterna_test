%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (421)
} def

/sequence { (\
GGAAAAGUAAAUACGAUUUACAAAGUAAAUCCCAUCAAAGAUGGCUAUUCAAAGAAUAGGUAUUUACAGUAAAAUUUCGAUUUUACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 67 0.003876713 ubox
1 78 0.013179318 ubox
1 86 0.006367508 ubox
1 95 0.067178090 ubox
1 98 0.067617808 ubox
1 101 0.069196473 ubox
1 104 0.069549045 ubox
1 107 0.017560068 ubox
2 67 0.004086888 ubox
2 70 0.004008509 ubox
2 77 0.013145991 ubox
2 78 0.018654216 ubox
2 95 0.035461775 ubox
2 98 0.035597486 ubox
2 101 0.036369649 ubox
2 104 0.036252158 ubox
2 107 0.011829646 ubox
3 70 0.003464031 ubox
3 76 0.013044841 ubox
3 77 0.018600841 ubox
3 84 0.003898864 ubox
4 70 0.015417165 ubox
4 75 0.011473202 ubox
4 76 0.018186334 ubox
4 83 0.005574540 ubox
5 70 0.005428593 ubox
5 75 0.016741599 ubox
5 82 0.005549537 ubox
6 70 0.005109785 ubox
6 75 0.003379816 ubox
6 81 0.005332130 ubox
7 67 0.998120837 ubox
7 86 0.006579233 ubox
7 95 0.005088226 ubox
7 98 0.005311183 ubox
7 101 0.005123968 ubox
7 104 0.005085551 ubox
8 66 0.999311896 ubox
8 85 0.006582738 ubox
8 94 0.004429504 ubox
8 97 0.004667149 ubox
8 100 0.004498660 ubox
8 103 0.004464282 ubox
9 65 0.999097447 ubox
9 84 0.006524167 ubox
10 64 0.998507787 ubox
10 83 0.006442893 ubox
11 63 0.998894229 ubox
11 82 0.006256788 ubox
12 62 0.999369452 ubox
13 61 0.999421101 ubox
14 59 0.003865110 ubox
14 60 0.998444719 ubox
14 79 0.006482726 ubox
15 30 0.003775221 ubox
15 31 0.996969190 ubox
15 32 0.006109233 ubox
15 78 0.006480599 ubox
16 26 0.004573138 ubox
16 30 0.999078922 ubox
16 77 0.006395931 ubox
17 25 0.004673653 ubox
17 28 0.003467615 ubox
17 29 0.998673006 ubox
17 73 0.006111826 ubox
18 24 0.004612930 ubox
18 27 0.004324555 ubox
18 28 0.998403915 ubox
18 72 0.006270111 ubox
19 23 0.003886660 ubox
19 27 0.998971589 ubox
19 28 0.003329723 ubox
19 71 0.006369774 ubox
20 26 0.998433346 ubox
20 70 0.006409489 ubox
21 25 0.988703400 ubox
21 69 0.006405450 ubox
25 67 0.006635261 ubox
26 66 0.006640479 ubox
27 65 0.006630835 ubox
28 64 0.006579883 ubox
29 63 0.006416157 ubox
30 62 0.006000967 ubox
31 44 0.004299527 ubox
31 60 0.003614500 ubox
32 43 0.006883700 ubox
32 44 0.991108856 ubox
33 40 0.004694452 ubox
33 43 0.999662402 ubox
33 44 0.003476178 ubox
34 42 0.999214102 ubox
35 40 0.008316556 ubox
35 41 0.998597383 ubox
35 44 0.010229981 ubox
36 40 0.990311900 ubox
36 43 0.013913260 ubox
37 42 0.012129400 ubox
39 65 0.004830614 ubox
40 64 0.005420075 ubox
41 63 0.005532641 ubox
42 62 0.005565610 ubox
43 61 0.005580330 ubox
45 54 0.013798995 ubox
45 59 0.995410760 ubox
46 53 0.013433124 ubox
46 58 0.998930836 ubox
46 59 0.003644318 ubox
47 57 0.999042977 ubox
48 55 0.010091210 ubox
48 56 0.998505101 ubox
49 54 0.012999422 ubox
49 55 0.997865545 ubox
49 56 0.004044054 ubox
50 54 0.989704118 ubox
50 59 0.006013520 ubox
60 95 0.003638128 ubox
61 94 0.003577090 ubox
63 92 0.003353399 ubox
64 91 0.003412128 ubox
68 75 0.003208810 ubox
68 76 0.003718293 ubox
68 77 0.003651929 ubox
69 75 0.004657028 ubox
69 76 0.004180614 ubox
69 78 0.009184826 ubox
69 81 0.003498120 ubox
69 86 0.991438636 ubox
69 95 0.013846519 ubox
69 98 0.030065610 ubox
69 101 0.035614617 ubox
69 104 0.011244958 ubox
70 74 0.004455599 ubox
70 80 0.003503580 ubox
70 85 0.992616396 ubox
70 94 0.012616444 ubox
70 97 0.029247684 ubox
70 99 0.004714997 ubox
70 100 0.034454790 ubox
70 103 0.010809385 ubox
71 83 0.007806703 ubox
71 84 0.992259616 ubox
72 81 0.003651710 ubox
72 82 0.010502711 ubox
72 83 0.991250053 ubox
72 84 0.015630225 ubox
73 81 0.011713376 ubox
73 82 0.989907476 ubox
73 83 0.020830550 ubox
73 84 0.006444857 ubox
74 81 0.961130635 ubox
74 82 0.024482954 ubox
74 83 0.008267983 ubox
75 79 0.034819201 ubox
75 80 0.878311940 ubox
75 89 0.004151213 ubox
75 90 0.007375681 ubox
75 93 0.004336179 ubox
75 94 0.074172435 ubox
76 80 0.029104809 ubox
76 88 0.004629487 ubox
76 89 0.007783619 ubox
76 91 0.003224943 ubox
76 92 0.004287176 ubox
76 93 0.086566525 ubox
76 94 0.003325873 ubox
76 97 0.005346550 ubox
77 87 0.004538799 ubox
77 88 0.007539726 ubox
77 91 0.003573898 ubox
77 92 0.089113643 ubox
77 96 0.005904455 ubox
78 91 0.089395493 ubox
79 86 0.011161195 ubox
79 95 0.019786083 ubox
79 98 0.005522285 ubox
81 87 0.004915914 ubox
81 88 0.033745963 ubox
81 89 0.025788869 ubox
81 90 0.013332449 ubox
81 91 0.004461118 ubox
81 92 0.014817152 ubox
81 93 0.017591461 ubox
81 94 0.022083641 ubox
82 87 0.029813832 ubox
82 88 0.026979489 ubox
82 89 0.015060557 ubox
82 90 0.008509115 ubox
82 91 0.015911180 ubox
82 92 0.019090600 ubox
82 93 0.024591004 ubox
82 94 0.005530690 ubox
83 87 0.022739428 ubox
83 88 0.013564678 ubox
83 89 0.008693891 ubox
83 90 0.016290183 ubox
83 91 0.019142878 ubox
83 92 0.025098137 ubox
83 93 0.006418684 ubox
83 94 0.003884564 ubox
84 88 0.007417407 ubox
84 89 0.015044363 ubox
84 90 0.018007844 ubox
84 91 0.024398077 ubox
84 92 0.006463760 ubox
84 93 0.004341280 ubox
86 91 0.009508663 ubox
91 95 0.042830983 ubox
91 98 0.103277053 ubox
91 101 0.045313812 ubox
91 104 0.035072834 ubox
91 107 0.010376895 ubox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
45 59 0.9500000 lbox
46 58 0.9500000 lbox
47 57 0.9500000 lbox
48 56 0.9500000 lbox
49 55 0.9500000 lbox
50 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
