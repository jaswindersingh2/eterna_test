%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1042)
} def

/sequence { (\
GGAAAAGGCAAAGCCAAGGACAAAGUCCAAGUCUGAAACAGACAAGCUCAAAGAGCAACCCAAAGGGAGGUAUUGUUCGCAAUACCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.008160260 ubox
1 15 0.025632360 ubox
1 21 0.006719707 ubox
1 28 0.015405107 ubox
1 56 0.004030243 ubox
1 59 0.013190522 ubox
1 60 0.064542113 ubox
1 61 0.182675684 ubox
1 80 0.005439862 ubox
1 86 0.032214197 ubox
1 95 0.398587554 ubox
1 98 0.401104899 ubox
1 101 0.410303671 ubox
1 104 0.412163392 ubox
1 107 0.104058699 ubox
2 9 0.010607775 ubox
2 14 0.025708854 ubox
2 15 0.004772901 ubox
2 27 0.015405969 ubox
2 49 0.004367097 ubox
2 59 0.065413615 ubox
2 60 0.182290443 ubox
2 61 0.009917611 ubox
2 78 0.007513269 ubox
2 80 0.003621690 ubox
2 85 0.027157218 ubox
2 86 0.013604910 ubox
2 95 0.210401428 ubox
2 98 0.211163470 ubox
2 101 0.215666626 ubox
2 104 0.214849143 ubox
2 107 0.070105642 ubox
3 26 0.015219502 ubox
3 48 0.004161972 ubox
3 77 0.007214763 ubox
3 83 0.006871717 ubox
4 76 0.003508975 ubox
4 83 0.005947296 ubox
7 14 0.017457120 ubox
7 15 0.994136458 ubox
7 60 0.003831024 ubox
7 61 0.004134474 ubox
7 77 0.019524636 ubox
7 78 0.013965158 ubox
7 80 0.004301095 ubox
7 95 0.024800456 ubox
7 98 0.025387728 ubox
7 101 0.024209288 ubox
7 104 0.023977247 ubox
7 107 0.008371504 ubox
8 14 0.995716757 ubox
8 15 0.009358334 ubox
8 59 0.003854651 ubox
8 60 0.004065884 ubox
8 76 0.026302472 ubox
8 77 0.009866759 ubox
8 95 0.011911792 ubox
8 98 0.011907968 ubox
8 101 0.010903080 ubox
8 104 0.010688630 ubox
8 107 0.003484386 ubox
9 13 0.988490237 ubox
9 75 0.028565752 ubox
9 91 0.014962281 ubox
10 74 0.028549977 ubox
11 73 0.026986876 ubox
13 71 0.028524979 ubox
13 95 0.012323498 ubox
13 98 0.012015013 ubox
13 101 0.011824314 ubox
13 104 0.011739030 ubox
13 107 0.004096136 ubox
14 66 0.007398923 ubox
14 67 0.006554500 ubox
14 70 0.028770956 ubox
14 91 0.011257941 ubox
15 65 0.007422769 ubox
15 66 0.006500155 ubox
15 69 0.028743395 ubox
15 91 0.018041958 ubox
18 27 0.006281921 ubox
18 28 0.998232472 ubox
18 78 0.004089650 ubox
18 95 0.008347319 ubox
18 98 0.008422098 ubox
18 101 0.008763294 ubox
18 104 0.008564128 ubox
19 26 0.004934840 ubox
19 27 0.999399989 ubox
19 28 0.005809236 ubox
19 77 0.004112727 ubox
20 26 0.998088589 ubox
20 76 0.004123057 ubox
21 25 0.988207999 ubox
21 75 0.004127128 ubox
22 74 0.003876756 ubox
23 73 0.003248735 ubox
25 95 0.007118965 ubox
25 98 0.006799740 ubox
25 101 0.006801528 ubox
25 104 0.006784324 ubox
26 68 0.004066896 ubox
26 92 0.006078931 ubox
26 94 0.006660949 ubox
26 97 0.006415107 ubox
26 100 0.006422372 ubox
26 103 0.006406883 ubox
27 67 0.004344793 ubox
27 70 0.003902610 ubox
27 91 0.006468276 ubox
28 66 0.004294666 ubox
28 69 0.003902821 ubox
28 91 0.005080886 ubox
31 39 0.004504247 ubox
31 43 0.998099160 ubox
31 95 0.005402207 ubox
31 98 0.005455862 ubox
31 101 0.005533683 ubox
31 104 0.005493087 ubox
32 38 0.004346333 ubox
32 42 0.999444360 ubox
32 92 0.005136497 ubox
32 94 0.004181849 ubox
32 97 0.004360714 ubox
32 100 0.004442355 ubox
32 103 0.004413325 ubox
33 41 0.999872736 ubox
33 91 0.005551098 ubox
34 40 0.998639791 ubox
34 90 0.005354698 ubox
35 39 0.982737860 ubox
35 43 0.003432700 ubox
46 56 0.998624601 ubox
47 53 0.005739378 ubox
47 55 0.999677368 ubox
48 52 0.005327366 ubox
48 53 0.006519605 ubox
48 54 0.998898018 ubox
49 53 0.990512124 ubox
53 78 0.004105533 ubox
54 77 0.004108683 ubox
55 76 0.004110412 ubox
56 75 0.004113417 ubox
57 74 0.004022672 ubox
58 71 0.006521948 ubox
59 65 0.011597317 ubox
59 66 0.182360984 ubox
59 67 0.927145520 ubox
59 69 0.009342465 ubox
59 70 0.007340556 ubox
59 91 0.003615611 ubox
60 65 0.182171374 ubox
60 66 0.931275014 ubox
60 67 0.232781877 ubox
60 69 0.007345549 ubox
61 65 0.924543302 ubox
61 66 0.233136976 ubox
61 67 0.016772981 ubox
65 80 0.004338687 ubox
65 95 0.004919799 ubox
65 98 0.004021663 ubox
65 101 0.003590635 ubox
65 104 0.003196890 ubox
66 95 0.004968713 ubox
66 98 0.003898404 ubox
66 101 0.003476408 ubox
66 104 0.003174779 ubox
67 78 0.004854807 ubox
67 95 0.003314866 ubox
68 77 0.004867168 ubox
69 76 0.004605002 ubox
69 86 0.997958185 ubox
70 85 0.999330058 ubox
71 84 0.999205333 ubox
72 83 0.998972872 ubox
73 82 0.998514115 ubox
73 97 0.005886155 ubox
74 81 0.997862827 ubox
74 82 0.004272945 ubox
74 96 0.006929400 ubox
75 80 0.992243337 ubox
75 95 0.007085472 ubox
76 93 0.004363784 ubox
76 94 0.005899874 ubox
77 92 0.006628439 ubox
77 93 0.004359544 ubox
78 91 0.007875431 ubox
86 91 0.011257422 ubox
91 95 0.071183401 ubox
91 98 0.144337240 ubox
91 101 0.047613994 ubox
91 104 0.016227585 ubox
91 107 0.003985618 ubox
1 95 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
