%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (884)
} def

/sequence { (\
GGAAAUCAACAACAGUUGCAAGGAAAACCAGCAAAAGCAAAGCAAACAAAGUUGAACCAAAAGGAAGAAUGCUUGUUCGCAAGCAUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.003255579 ubox
1 7 0.020781831 ubox
1 10 0.035887387 ubox
1 13 0.014232995 ubox
1 19 0.004785775 ubox
1 29 0.013366042 ubox
1 43 0.004002689 ubox
1 47 0.009176137 ubox
1 57 0.010177055 ubox
1 58 0.900345013 ubox
1 95 0.048799044 ubox
1 98 0.049183250 ubox
1 101 0.050167098 ubox
1 104 0.050683170 ubox
1 107 0.012989129 ubox
2 6 0.013615822 ubox
2 7 0.014276487 ubox
2 10 0.006219333 ubox
2 13 0.003989129 ubox
2 19 0.005083567 ubox
2 28 0.013349106 ubox
2 47 0.005072293 ubox
2 57 0.900565935 ubox
2 58 0.039202523 ubox
2 95 0.025660943 ubox
2 98 0.025609404 ubox
2 101 0.026253442 ubox
2 104 0.026306743 ubox
2 107 0.008710681 ubox
5 16 0.003883935 ubox
6 15 0.003981476 ubox
6 20 0.012534915 ubox
6 21 0.003738873 ubox
6 22 0.003513950 ubox
6 24 0.008014215 ubox
6 55 0.972633821 ubox
6 56 0.028035855 ubox
6 65 0.003516449 ubox
6 68 0.008426902 ubox
6 90 0.003611341 ubox
6 92 0.020117585 ubox
7 15 0.003429178 ubox
7 18 0.048133496 ubox
7 23 0.007707058 ubox
7 42 0.004097055 ubox
7 54 0.989653167 ubox
7 64 0.003595954 ubox
7 67 0.008947372 ubox
7 91 0.021206460 ubox
8 17 0.049599989 ubox
8 53 0.989139591 ubox
9 16 0.050724553 ubox
9 52 0.988650619 ubox
10 15 0.051158460 ubox
10 18 0.007491271 ubox
10 37 0.004057675 ubox
10 42 0.004645307 ubox
10 51 0.985995760 ubox
10 54 0.066904266 ubox
11 16 0.003778718 ubox
11 17 0.008230823 ubox
11 53 0.067403959 ubox
12 16 0.006759444 ubox
12 52 0.068114329 ubox
13 18 0.008198850 ubox
13 22 0.004713426 ubox
13 37 0.041453531 ubox
13 42 0.004838178 ubox
13 51 0.068234527 ubox
15 19 0.003872282 ubox
15 28 0.034746360 ubox
15 32 0.025101405 ubox
15 38 0.022492032 ubox
15 43 0.020261558 ubox
15 47 0.342584922 ubox
15 95 0.008680085 ubox
15 98 0.036735095 ubox
15 101 0.037270455 ubox
15 104 0.043783813 ubox
15 107 0.017316877 ubox
16 25 0.003724374 ubox
16 27 0.034894687 ubox
16 31 0.025108486 ubox
16 33 0.003696101 ubox
16 34 0.173755802 ubox
16 35 0.011283557 ubox
16 36 0.005069141 ubox
16 37 0.021048787 ubox
16 40 0.022644067 ubox
16 42 0.018996957 ubox
16 44 0.012117613 ubox
16 45 0.909974862 ubox
16 46 0.281094071 ubox
16 48 0.006541780 ubox
16 49 0.007067520 ubox
16 94 0.008363953 ubox
16 97 0.036698468 ubox
16 100 0.037196629 ubox
16 103 0.043698897 ubox
16 106 0.017450594 ubox
17 24 0.004339134 ubox
17 26 0.034840893 ubox
17 30 0.025199733 ubox
17 33 0.199290216 ubox
17 34 0.009379772 ubox
17 36 0.009385234 ubox
17 39 0.027826372 ubox
17 41 0.009851979 ubox
17 44 0.949731257 ubox
17 45 0.198236043 ubox
17 48 0.007377717 ubox
17 85 0.003204136 ubox
17 93 0.006663816 ubox
17 96 0.036532721 ubox
17 99 0.036936795 ubox
17 102 0.043400083 ubox
17 105 0.017378614 ubox
18 29 0.024456501 ubox
18 32 0.205361325 ubox
18 38 0.029216531 ubox
18 43 0.971835943 ubox
18 47 0.007342024 ubox
18 84 0.003637766 ubox
18 95 0.036278311 ubox
18 98 0.036562197 ubox
18 101 0.042983374 ubox
18 104 0.017184984 ubox
19 23 0.004117728 ubox
19 31 0.205194395 ubox
19 37 0.029203378 ubox
19 42 0.970871939 ubox
19 54 0.005553219 ubox
19 83 0.003644110 ubox
19 91 0.006733872 ubox
20 53 0.005426651 ubox
21 52 0.004972633 ubox
22 28 0.153019616 ubox
22 29 0.944065533 ubox
22 32 0.010216509 ubox
22 38 0.063083189 ubox
22 47 0.004893478 ubox
22 58 0.005588018 ubox
22 95 0.003217053 ubox
23 28 0.939225992 ubox
23 29 0.076969322 ubox
23 32 0.021318831 ubox
23 38 0.095617236 ubox
23 57 0.005582783 ubox
23 95 0.003258890 ubox
26 53 0.003635480 ubox
27 52 0.003726074 ubox
28 37 0.016069230 ubox
28 42 0.003598497 ubox
28 51 0.003719087 ubox
29 37 0.011215899 ubox
29 42 0.004578783 ubox
29 54 0.016568501 ubox
30 53 0.016792485 ubox
31 38 0.941683305 ubox
31 43 0.039241156 ubox
31 52 0.016847129 ubox
32 37 0.941342997 ubox
32 42 0.039278773 ubox
32 51 0.016844045 ubox
36 53 0.007078153 ubox
37 43 0.176915704 ubox
37 47 0.012017334 ubox
37 52 0.007934600 ubox
37 84 0.011573470 ubox
38 42 0.175864205 ubox
38 51 0.008042261 ubox
38 54 0.006864424 ubox
38 83 0.011568764 ubox
39 53 0.006639448 ubox
40 52 0.005066262 ubox
40 53 0.003466127 ubox
41 52 0.003275168 ubox
41 53 0.032309462 ubox
42 47 0.029206720 ubox
42 52 0.035788664 ubox
42 80 0.016264752 ubox
43 51 0.036140404 ubox
43 54 0.038339362 ubox
43 79 0.016264881 ubox
44 53 0.037717727 ubox
45 52 0.033045225 ubox
45 53 0.020267528 ubox
45 77 0.015736930 ubox
46 52 0.022523030 ubox
46 76 0.016321281 ubox
47 51 0.023536345 ubox
47 54 0.017645188 ubox
47 75 0.016344495 ubox
48 53 0.015964942 ubox
48 74 0.015200877 ubox
49 73 0.013297573 ubox
49 74 0.005780893 ubox
50 73 0.008190459 ubox
51 57 0.003790221 ubox
51 70 0.013136619 ubox
51 72 0.010035960 ubox
51 95 0.007076111 ubox
51 98 0.048225388 ubox
51 101 0.045050372 ubox
51 104 0.070479876 ubox
51 107 0.014901080 ubox
52 56 0.003490888 ubox
52 60 0.005920386 ubox
52 61 0.003522392 ubox
52 68 0.009310346 ubox
52 69 0.013509057 ubox
52 71 0.009866132 ubox
52 94 0.007024816 ubox
52 97 0.048283397 ubox
52 100 0.045106865 ubox
52 103 0.070551341 ubox
52 106 0.015070178 ubox
53 59 0.006765878 ubox
53 60 0.004005629 ubox
53 66 0.003675597 ubox
53 67 0.010162308 ubox
53 68 0.014814468 ubox
53 93 0.006637274 ubox
53 96 0.048283173 ubox
53 99 0.045102534 ubox
53 102 0.070573165 ubox
53 105 0.015136936 ubox
54 58 0.006909561 ubox
54 95 0.048105033 ubox
54 98 0.044927511 ubox
54 101 0.070332577 ubox
54 104 0.015097611 ubox
57 63 0.021756771 ubox
57 64 0.342784284 ubox
57 67 0.008624329 ubox
58 63 0.343868181 ubox
58 64 0.028020998 ubox
58 67 0.035595347 ubox
58 91 0.003464412 ubox
60 86 0.003297608 ubox
61 70 0.003577038 ubox
61 74 0.004332027 ubox
61 86 0.003584586 ubox
62 70 0.004950183 ubox
62 73 0.005057693 ubox
62 86 0.003903104 ubox
63 70 0.004219076 ubox
63 72 0.005245624 ubox
63 86 0.004618485 ubox
63 95 0.064659712 ubox
63 98 0.021593519 ubox
63 101 0.019242284 ubox
63 104 0.016966671 ubox
63 107 0.005590921 ubox
64 78 0.004702684 ubox
64 86 0.006907813 ubox
64 95 0.017664372 ubox
64 98 0.010526492 ubox
64 101 0.009512562 ubox
64 104 0.008634474 ubox
65 70 0.004838145 ubox
65 77 0.004704909 ubox
65 86 0.010375814 ubox
66 73 0.003374816 ubox
66 76 0.004645574 ubox
66 86 0.013017792 ubox
67 72 0.003417134 ubox
67 78 0.004173681 ubox
67 84 0.012079252 ubox
67 86 0.018714302 ubox
67 95 0.017369783 ubox
67 98 0.013699129 ubox
67 101 0.012527765 ubox
67 104 0.010241374 ubox
68 74 0.004362196 ubox
68 77 0.004176786 ubox
68 86 0.047606114 ubox
69 73 0.003369843 ubox
69 76 0.004106288 ubox
69 86 0.944582886 ubox
70 75 0.003912370 ubox
70 81 0.014421027 ubox
70 85 0.986529490 ubox
70 87 0.004259052 ubox
70 88 0.003182695 ubox
70 99 0.008660777 ubox
70 102 0.004303581 ubox
71 80 0.014999213 ubox
71 84 0.999574422 ubox
71 98 0.009526271 ubox
71 101 0.004726731 ubox
71 104 0.003222649 ubox
72 79 0.014984793 ubox
72 83 0.999601344 ubox
73 82 0.999018575 ubox
73 97 0.011106818 ubox
73 100 0.004255325 ubox
73 103 0.003389614 ubox
74 81 0.997988794 ubox
74 82 0.004157273 ubox
74 85 0.003247677 ubox
74 96 0.011780493 ubox
74 99 0.004515003 ubox
74 102 0.003610512 ubox
75 80 0.992357645 ubox
75 84 0.004072992 ubox
75 95 0.012058104 ubox
75 98 0.004623285 ubox
75 101 0.003704650 ubox
76 83 0.004024489 ubox
76 93 0.007002170 ubox
76 94 0.010040295 ubox
76 97 0.004515585 ubox
76 100 0.003662910 ubox
77 82 0.003275088 ubox
77 92 0.009896360 ubox
77 93 0.007416475 ubox
77 96 0.003949538 ubox
77 99 0.003336180 ubox
78 91 0.011949845 ubox
84 91 0.004374515 ubox
86 90 0.003633357 ubox
86 91 0.004556682 ubox
86 92 0.006296731 ubox
86 93 0.008025272 ubox
86 94 0.004193258 ubox
91 95 0.043075978 ubox
91 98 0.103443778 ubox
91 101 0.045204968 ubox
91 104 0.035064555 ubox
91 107 0.010375185 ubox
1 58 0.9500000 lbox
2 57 0.9500000 lbox
6 55 0.9500000 lbox
7 54 0.9500000 lbox
8 53 0.9500000 lbox
9 52 0.9500000 lbox
10 51 0.9500000 lbox
16 45 0.9500000 lbox
17 44 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
