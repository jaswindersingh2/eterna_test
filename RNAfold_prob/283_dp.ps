%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (283)
} def

/sequence { (\
GGAAAAAAGUACAAGUUCGAAAGAACAGCGGAGUGAAAGACGCGAAAGGGUCGCACGACGCAAGUACAGUUACAGUUCGCUGUAACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.005990412 ubox
1 12 0.028107213 ubox
1 67 0.012603835 ubox
1 86 0.005584214 ubox
1 95 0.070444057 ubox
1 98 0.070979970 ubox
1 101 0.072915988 ubox
1 104 0.073636911 ubox
1 107 0.018593537 ubox
2 10 0.003550522 ubox
2 12 0.010024928 ubox
2 18 0.003905100 ubox
2 67 0.007017864 ubox
2 95 0.037159884 ubox
2 98 0.037331434 ubox
2 101 0.038345138 ubox
2 104 0.038197164 ubox
2 107 0.012467997 ubox
3 10 0.007887116 ubox
3 17 0.003874166 ubox
4 10 0.005499673 ubox
4 16 0.003485114 ubox
5 10 0.004626464 ubox
5 71 0.003757476 ubox
6 70 0.005589500 ubox
8 65 0.003712342 ubox
9 67 0.972926673 ubox
9 86 0.007011284 ubox
9 95 0.056599051 ubox
9 98 0.055282395 ubox
9 101 0.056110893 ubox
9 104 0.056215723 ubox
9 107 0.019637681 ubox
10 63 0.003735086 ubox
10 66 0.974085788 ubox
10 85 0.006711686 ubox
10 87 0.003257189 ubox
10 88 0.003745272 ubox
10 89 0.004130663 ubox
10 90 0.004054742 ubox
10 91 0.003764030 ubox
10 92 0.005433445 ubox
10 93 0.005988469 ubox
10 94 0.054571828 ubox
10 96 0.003850610 ubox
10 97 0.053332524 ubox
10 99 0.003659890 ubox
10 100 0.054131592 ubox
10 102 0.003606426 ubox
10 103 0.054230058 ubox
10 106 0.019141642 ubox
11 65 0.974108764 ubox
12 64 0.972969893 ubox
12 91 0.018967948 ubox
15 26 0.997658103 ubox
15 95 0.006093986 ubox
15 98 0.004215032 ubox
15 101 0.003857488 ubox
15 104 0.003770455 ubox
16 24 0.003198122 ubox
16 25 0.998624183 ubox
16 93 0.005157226 ubox
16 94 0.005365188 ubox
16 97 0.004021421 ubox
16 100 0.003688463 ubox
16 103 0.003605960 ubox
17 24 0.999317413 ubox
17 92 0.006133324 ubox
17 93 0.004031450 ubox
17 96 0.003170111 ubox
18 23 0.999276376 ubox
18 91 0.006700211 ubox
19 26 0.005400503 ubox
23 67 0.004694419 ubox
25 65 0.007861046 ubox
25 83 0.003294158 ubox
26 64 0.008203966 ubox
26 82 0.003436697 ubox
27 65 0.004133329 ubox
27 81 0.003524206 ubox
28 43 0.006447355 ubox
28 61 0.998873971 ubox
28 80 0.003546938 ubox
29 42 0.006455328 ubox
29 60 0.999905612 ubox
29 79 0.003547022 ubox
30 41 0.006436441 ubox
30 59 0.999826923 ubox
30 78 0.003546372 ubox
31 59 0.004533870 ubox
31 77 0.003542085 ubox
32 76 0.003530566 ubox
33 54 0.003253142 ubox
33 56 0.999836551 ubox
34 53 0.003312101 ubox
34 55 0.999356719 ubox
34 57 0.006116320 ubox
34 74 0.003496554 ubox
35 54 0.993351411 ubox
35 56 0.007116331 ubox
35 73 0.003490834 ubox
38 51 0.031361799 ubox
39 51 0.003784973 ubox
39 52 0.996265800 ubox
40 51 0.998866721 ubox
41 48 0.034001787 ubox
41 49 0.013283868 ubox
41 50 0.998855472 ubox
41 53 0.006634851 ubox
42 51 0.006554590 ubox
42 52 0.006493977 ubox
42 54 0.011006577 ubox
43 48 0.974435122 ubox
43 49 0.109179949 ubox
43 50 0.009597424 ubox
43 53 0.012355555 ubox
44 52 0.012360572 ubox
45 51 0.011838921 ubox
48 61 0.006960571 ubox
50 59 0.007169548 ubox
51 58 0.007170442 ubox
52 57 0.007159292 ubox
64 86 0.025738778 ubox
64 95 0.014631455 ubox
64 98 0.006582493 ubox
64 101 0.006055933 ubox
64 104 0.005263553 ubox
65 84 0.031748249 ubox
65 85 0.018255988 ubox
65 87 0.004115985 ubox
65 88 0.007246047 ubox
65 89 0.005704437 ubox
65 90 0.009285814 ubox
65 91 0.005209125 ubox
65 92 0.005393691 ubox
65 94 0.014055332 ubox
65 97 0.006299715 ubox
65 100 0.005813569 ubox
65 103 0.005058386 ubox
66 83 0.037734237 ubox
67 82 0.037919050 ubox
67 91 0.009275636 ubox
68 81 0.037932770 ubox
69 80 0.037941871 ubox
69 86 0.996984076 ubox
69 95 0.005950591 ubox
69 98 0.005236605 ubox
69 101 0.005655256 ubox
69 104 0.004499586 ubox
70 79 0.037573999 ubox
70 85 0.997976431 ubox
70 94 0.005474541 ubox
70 97 0.004906089 ubox
70 100 0.005453543 ubox
70 103 0.004291093 ubox
71 84 0.998445554 ubox
71 93 0.003246218 ubox
71 96 0.003413019 ubox
71 99 0.004471474 ubox
71 102 0.003351210 ubox
72 77 0.007962999 ubox
72 83 0.998942800 ubox
73 82 0.999211060 ubox
74 81 0.997781020 ubox
75 80 0.989496743 ubox
75 95 0.004352962 ubox
75 101 0.003670357 ubox
76 93 0.003814419 ubox
76 94 0.003915175 ubox
76 100 0.003666583 ubox
77 92 0.004355357 ubox
77 93 0.003333091 ubox
77 99 0.003560475 ubox
78 91 0.004703160 ubox
79 98 0.003573394 ubox
80 91 0.004578629 ubox
81 90 0.004590544 ubox
81 96 0.004073108 ubox
82 95 0.004185448 ubox
83 94 0.004090548 ubox
86 91 0.007524294 ubox
91 95 0.043731972 ubox
91 98 0.104671970 ubox
91 101 0.045572161 ubox
91 104 0.034984665 ubox
91 107 0.010340527 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
