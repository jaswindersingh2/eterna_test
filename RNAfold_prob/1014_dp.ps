%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1014)
} def

/sequence { (\
GGAAAAGCGAAACGCAAGAUCAAAGAUCAAGUAACAAAGUUACAAGCUCAAAGAGCAAGGCAAAGCCAGAUGCAUUUCGAUGCAUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.029801213 ubox
1 13 0.012304676 ubox
1 15 0.006725281 ubox
1 21 0.029729021 ubox
1 35 0.004248756 ubox
1 43 0.004492734 ubox
1 49 0.003184570 ubox
1 56 0.004025109 ubox
1 61 0.008119994 ubox
1 66 0.004186863 ubox
1 67 0.127232428 ubox
1 83 0.009561450 ubox
1 86 0.037801226 ubox
1 95 0.398084746 ubox
1 98 0.400890782 ubox
1 101 0.409800530 ubox
1 104 0.411697598 ubox
1 107 0.103939314 ubox
2 8 0.020115423 ubox
2 13 0.008717818 ubox
2 15 0.007136728 ubox
2 20 0.027316510 ubox
2 21 0.045582289 ubox
2 28 0.004641388 ubox
2 43 0.003685648 ubox
2 49 0.004496990 ubox
2 61 0.005931361 ubox
2 66 0.126701480 ubox
2 67 0.009962434 ubox
2 78 0.006373469 ubox
2 83 0.010038805 ubox
2 85 0.029482839 ubox
2 86 0.041827467 ubox
2 95 0.209931669 ubox
2 98 0.210699778 ubox
2 101 0.215180982 ubox
2 104 0.214385524 ubox
2 107 0.069951289 ubox
3 20 0.044808969 ubox
3 27 0.004328575 ubox
3 48 0.004262059 ubox
3 77 0.006375465 ubox
3 81 0.004770231 ubox
3 85 0.038187690 ubox
4 76 0.006312911 ubox
5 75 0.005917249 ubox
5 81 0.003201031 ubox
6 41 0.014071330 ubox
6 48 0.004214397 ubox
6 81 0.018143930 ubox
7 13 0.015281237 ubox
7 15 0.981873224 ubox
7 40 0.015640034 ubox
7 47 0.004526562 ubox
7 56 0.004044425 ubox
7 61 0.065354158 ubox
7 66 0.017326186 ubox
7 73 0.005564940 ubox
7 81 0.017008766 ubox
7 83 0.010610904 ubox
7 95 0.026457174 ubox
7 98 0.026999530 ubox
7 101 0.025872455 ubox
7 104 0.025619986 ubox
7 107 0.008941343 ubox
8 14 0.983077178 ubox
8 39 0.015784092 ubox
8 46 0.004523289 ubox
8 55 0.004035956 ubox
8 59 0.004569880 ubox
8 60 0.065327850 ubox
8 65 0.017432131 ubox
8 72 0.005564220 ubox
8 79 0.067772189 ubox
8 82 0.009746007 ubox
8 91 0.030046213 ubox
9 13 0.919738589 ubox
9 15 0.025335439 ubox
9 21 0.007123633 ubox
9 28 0.003614953 ubox
9 35 0.003379216 ubox
9 66 0.003244612 ubox
9 71 0.003528222 ubox
9 78 0.069107495 ubox
9 95 0.024479754 ubox
9 98 0.023830467 ubox
9 101 0.023799955 ubox
9 104 0.023645755 ubox
9 107 0.008942662 ubox
10 20 0.006807592 ubox
10 27 0.003428440 ubox
10 77 0.069102950 ubox
11 41 0.004320907 ubox
11 76 0.068887641 ubox
12 32 0.007577282 ubox
12 40 0.004588316 ubox
12 75 0.067439563 ubox
13 18 0.007679945 ubox
13 31 0.007893893 ubox
13 39 0.004615086 ubox
13 59 0.004436546 ubox
13 60 0.003517408 ubox
13 91 0.022285997 ubox
14 32 0.022233498 ubox
14 47 0.004194898 ubox
14 56 0.003683893 ubox
14 61 0.019183939 ubox
14 66 0.008978910 ubox
14 73 0.069045129 ubox
14 95 0.023354491 ubox
14 98 0.023353802 ubox
14 101 0.023679969 ubox
14 104 0.023696003 ubox
14 107 0.008969010 ubox
15 31 0.022953924 ubox
15 46 0.004201260 ubox
15 55 0.003666061 ubox
15 59 0.004050563 ubox
15 60 0.019162710 ubox
15 65 0.009008739 ubox
15 72 0.069102691 ubox
15 91 0.029512300 ubox
16 71 0.062169396 ubox
17 27 0.003815459 ubox
18 27 0.003713586 ubox
18 28 0.988572873 ubox
18 95 0.015407783 ubox
18 98 0.012504514 ubox
18 101 0.013694308 ubox
18 104 0.012641416 ubox
18 107 0.004396777 ubox
19 27 0.989545534 ubox
20 24 0.003224049 ubox
20 25 0.008519261 ubox
20 26 0.988974920 ubox
20 29 0.003261466 ubox
20 70 0.004448957 ubox
20 92 0.039577047 ubox
20 93 0.003746147 ubox
20 99 0.003278054 ubox
21 25 0.980808761 ubox
21 53 0.003209582 ubox
21 69 0.004483086 ubox
21 91 0.042232309 ubox
22 27 0.003520345 ubox
25 49 0.005184262 ubox
25 95 0.016251842 ubox
25 98 0.012446435 ubox
25 101 0.012549086 ubox
25 104 0.012546972 ubox
25 107 0.004379539 ubox
26 48 0.005108722 ubox
27 45 0.004361538 ubox
27 92 0.045713628 ubox
27 93 0.004223685 ubox
28 46 0.004630327 ubox
28 91 0.048900786 ubox
29 41 0.008723115 ubox
30 40 0.009413629 ubox
30 41 0.004139667 ubox
31 35 0.005215894 ubox
31 40 0.004272194 ubox
31 43 0.994229056 ubox
31 95 0.013740204 ubox
31 98 0.013136165 ubox
31 101 0.014306053 ubox
31 104 0.015086052 ubox
31 107 0.004974035 ubox
32 38 0.008698890 ubox
32 39 0.003207583 ubox
32 42 0.995413395 ubox
32 94 0.012964229 ubox
32 97 0.012345154 ubox
32 100 0.013506514 ubox
32 103 0.014266711 ubox
32 106 0.004742394 ubox
33 40 0.005260798 ubox
33 41 0.995154083 ubox
34 40 0.992738796 ubox
34 41 0.005222246 ubox
35 39 0.983267903 ubox
35 91 0.005607618 ubox
39 61 0.004479989 ubox
39 95 0.034128415 ubox
39 98 0.022376464 ubox
39 101 0.022245317 ubox
39 104 0.022015425 ubox
39 107 0.007679812 ubox
40 60 0.004426040 ubox
40 94 0.033965905 ubox
40 97 0.022169419 ubox
40 100 0.022039607 ubox
40 103 0.021811102 ubox
40 106 0.007688068 ubox
41 59 0.003692591 ubox
41 92 0.003419345 ubox
41 93 0.032010396 ubox
41 96 0.020268766 ubox
41 99 0.020155045 ubox
41 102 0.019943866 ubox
41 105 0.007062644 ubox
43 59 0.006111219 ubox
43 91 0.022271440 ubox
46 56 0.998517636 ubox
46 61 0.009688044 ubox
46 83 0.004019131 ubox
47 53 0.005976374 ubox
47 55 0.999570158 ubox
47 60 0.009674158 ubox
47 82 0.004022520 ubox
48 52 0.005536611 ubox
48 53 0.006523107 ubox
48 54 0.998792336 ubox
48 59 0.008743643 ubox
48 80 0.003916775 ubox
49 53 0.990407594 ubox
49 55 0.003183343 ubox
49 59 0.003263217 ubox
49 79 0.003964332 ubox
51 77 0.003644597 ubox
52 76 0.003769160 ubox
53 67 0.003328482 ubox
53 75 0.003694631 ubox
55 61 0.003754481 ubox
55 66 0.004891047 ubox
55 73 0.004149321 ubox
56 60 0.003747895 ubox
56 65 0.005039648 ubox
56 72 0.004151317 ubox
57 71 0.004258532 ubox
59 66 0.017577278 ubox
59 67 0.988456258 ubox
59 95 0.005939668 ubox
59 98 0.003448807 ubox
60 66 0.989511892 ubox
60 67 0.007538346 ubox
60 95 0.004206913 ubox
61 65 0.982348642 ubox
66 91 0.004243375 ubox
67 91 0.003678488 ubox
69 85 0.003290209 ubox
69 86 0.995431747 ubox
70 85 0.996758482 ubox
71 84 0.997028406 ubox
72 83 0.997556024 ubox
73 82 0.997547390 ubox
74 81 0.975533821 ubox
75 79 0.034919916 ubox
75 80 0.890946146 ubox
76 80 0.028203370 ubox
79 98 0.003568091 ubox
81 87 0.003721096 ubox
81 96 0.016127617 ubox
81 99 0.003201970 ubox
82 86 0.004081054 ubox
82 95 0.017914494 ubox
82 98 0.003547047 ubox
83 91 0.003338242 ubox
85 92 0.026406841 ubox
86 91 0.029871509 ubox
91 95 0.071200934 ubox
91 98 0.144239492 ubox
91 101 0.047468624 ubox
91 104 0.015806944 ubox
91 107 0.003823130 ubox
1 95 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
