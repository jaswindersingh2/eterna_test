%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (496)
} def

/sequence { (\
GGAAAAGUCAUCGCCAUCCUAAUGGAGACUAAUGUCGGCAAAACAUGAGAAAUCUCAUGGAUGACAAAGUAGUUGUUCGCGACUACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 65 0.003777214 ubox
1 70 0.004744279 ubox
1 86 0.003823028 ubox
1 95 0.064487242 ubox
1 98 0.064896776 ubox
1 101 0.066757166 ubox
1 104 0.069019054 ubox
1 107 0.017559104 ubox
2 65 0.004043500 ubox
2 70 0.009888385 ubox
2 95 0.034041892 ubox
2 98 0.034166574 ubox
2 101 0.035089200 ubox
2 104 0.035983987 ubox
2 107 0.011830713 ubox
3 70 0.007153184 ubox
4 70 0.004396782 ubox
6 30 0.007214745 ubox
7 29 0.007488250 ubox
7 65 0.998145739 ubox
7 95 0.004063360 ubox
7 98 0.003923233 ubox
7 101 0.003775533 ubox
7 104 0.003855304 ubox
8 28 0.007420800 ubox
8 64 0.999499673 ubox
8 94 0.003275361 ubox
9 27 0.007334377 ubox
9 63 0.999914285 ubox
10 62 0.999471495 ubox
11 26 0.003234252 ubox
11 28 0.003447457 ubox
11 60 0.003243062 ubox
11 61 0.999466426 ubox
12 27 0.003928408 ubox
12 59 0.003457350 ubox
12 60 0.998657995 ubox
13 19 0.003663746 ubox
13 29 0.006414985 ubox
13 39 0.972063826 ubox
14 25 0.157737228 ubox
14 37 0.003631621 ubox
14 38 0.973064046 ubox
14 59 0.004798084 ubox
15 24 0.158386307 ubox
15 27 0.011005642 ubox
15 37 0.972035559 ubox
15 38 0.003483394 ubox
16 23 0.154986482 ubox
16 30 0.003767638 ubox
16 33 0.005267764 ubox
16 35 0.019186433 ubox
17 21 0.004613587 ubox
17 22 0.141649942 ubox
17 25 0.006675098 ubox
17 26 0.921485237 ubox
17 34 0.012278878 ubox
18 24 0.010187968 ubox
18 25 0.984994905 ubox
18 34 0.018193443 ubox
19 24 0.984754731 ubox
19 25 0.021112685 ubox
19 27 0.003247547 ubox
19 34 0.005322780 ubox
20 24 0.019236084 ubox
20 25 0.003188297 ubox
20 26 0.004158910 ubox
20 31 0.007975145 ubox
20 32 0.005434190 ubox
20 34 0.003614474 ubox
21 30 0.008102247 ubox
21 33 0.004670501 ubox
22 30 0.003563151 ubox
22 33 0.006796511 ubox
23 28 0.004131281 ubox
23 31 0.009669334 ubox
23 32 0.006808076 ubox
23 40 0.028211035 ubox
24 29 0.015421082 ubox
24 30 0.010211795 ubox
24 39 0.031310907 ubox
25 29 0.010039494 ubox
25 36 0.006246990 ubox
25 39 0.006842165 ubox
26 35 0.006538334 ubox
27 35 0.003490644 ubox
27 36 0.996899328 ubox
27 39 0.007198810 ubox
28 33 0.004696175 ubox
28 35 0.998111939 ubox
29 34 0.997659955 ubox
29 37 0.003381589 ubox
29 38 0.009904285 ubox
30 34 0.003704895 ubox
30 37 0.009536664 ubox
33 40 0.006478360 ubox
33 66 0.007662093 ubox
34 39 0.007151394 ubox
34 65 0.008523458 ubox
35 64 0.008524945 ubox
36 63 0.008519872 ubox
37 44 0.010788195 ubox
37 62 0.008061460 ubox
41 62 0.005014441 ubox
44 59 0.997591546 ubox
45 58 0.999262836 ubox
46 57 0.999513597 ubox
47 56 0.999976277 ubox
48 55 0.999449787 ubox
49 53 0.003179701 ubox
49 54 0.995104070 ubox
65 91 0.004601402 ubox
68 84 0.003704173 ubox
69 83 0.003836447 ubox
69 86 0.955176350 ubox
69 95 0.004219885 ubox
69 98 0.005423665 ubox
69 101 0.232703823 ubox
69 104 0.120283636 ubox
69 107 0.027696030 ubox
70 82 0.003556092 ubox
70 85 0.956344576 ubox
70 94 0.003575754 ubox
70 97 0.005015499 ubox
70 99 0.011979583 ubox
70 100 0.229181607 ubox
70 102 0.007392143 ubox
70 103 0.118371730 ubox
70 105 0.003834187 ubox
70 106 0.027543447 ubox
71 84 0.956552908 ubox
72 80 0.003790830 ubox
72 83 0.956840683 ubox
72 95 0.004463527 ubox
72 98 0.254921892 ubox
72 101 0.130245148 ubox
72 104 0.044499338 ubox
72 107 0.008416886 ubox
73 79 0.003710225 ubox
73 82 0.956562192 ubox
73 88 0.005083022 ubox
73 94 0.004362668 ubox
73 97 0.255230706 ubox
73 100 0.130380359 ubox
73 103 0.044541709 ubox
73 106 0.008511991 ubox
74 81 0.954402786 ubox
74 82 0.004961593 ubox
74 87 0.005897180 ubox
74 93 0.003510360 ubox
74 96 0.255286792 ubox
74 99 0.130332069 ubox
74 102 0.044539187 ubox
74 105 0.008551550 ubox
75 80 0.937185521 ubox
75 83 0.003208048 ubox
75 86 0.006063620 ubox
75 95 0.255393456 ubox
75 98 0.130378323 ubox
75 101 0.044557051 ubox
75 104 0.008561612 ubox
76 82 0.003355393 ubox
76 85 0.006061688 ubox
76 93 0.138592509 ubox
76 94 0.213708130 ubox
76 97 0.128409585 ubox
76 100 0.044087264 ubox
76 103 0.008451401 ubox
77 81 0.003282692 ubox
77 92 0.199349192 ubox
77 93 0.159639438 ubox
77 94 0.012809168 ubox
77 96 0.116556359 ubox
77 97 0.003883846 ubox
77 99 0.040555749 ubox
77 102 0.007673539 ubox
78 91 0.243220602 ubox
79 83 0.003247617 ubox
79 86 0.015350983 ubox
79 95 0.073518945 ubox
79 98 0.019318490 ubox
79 101 0.003725013 ubox
80 91 0.066062211 ubox
81 86 0.038217222 ubox
81 95 0.021189015 ubox
81 98 0.004170624 ubox
83 91 0.097133103 ubox
84 88 0.006021414 ubox
84 89 0.011793088 ubox
84 90 0.095266587 ubox
84 91 0.007830421 ubox
84 92 0.008194854 ubox
84 93 0.007370406 ubox
86 91 0.018360573 ubox
91 95 0.041232696 ubox
91 98 0.099330779 ubox
91 101 0.043569354 ubox
91 104 0.033721347 ubox
91 107 0.009977051 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
