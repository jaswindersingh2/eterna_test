%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (863)
} def

/sequence { (\
GGAAAGCAAGGAGGAAAAACCCAAAAGCCCGGCGAAAGACCGAAGGCAGGCGAAAGACCAAGCAAAAAGGAUACCUUCGGGUGUCCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.116178765 ubox
1 20 0.007481592 ubox
1 21 0.033298389 ubox
1 22 0.074581661 ubox
1 29 0.027078987 ubox
1 30 0.018946193 ubox
1 41 0.010987008 ubox
1 51 0.008519870 ubox
1 58 0.016514456 ubox
1 59 0.177161572 ubox
1 63 0.046434350 ubox
1 86 0.108753598 ubox
1 95 0.143712249 ubox
1 98 0.147321534 ubox
1 101 0.146760153 ubox
1 104 0.148463366 ubox
1 107 0.037557658 ubox
2 7 0.070966123 ubox
2 20 0.033495828 ubox
2 21 0.074290335 ubox
2 22 0.006245086 ubox
2 28 0.027134908 ubox
2 29 0.019353851 ubox
2 40 0.010976854 ubox
2 51 0.007386946 ubox
2 58 0.176732530 ubox
2 59 0.010090069 ubox
2 63 0.033223009 ubox
2 85 0.108659139 ubox
2 86 0.005019574 ubox
2 95 0.075685113 ubox
2 98 0.074294544 ubox
2 101 0.075500920 ubox
2 104 0.075578229 ubox
2 107 0.024679950 ubox
3 84 0.105911359 ubox
4 84 0.008548360 ubox
5 82 0.020306763 ubox
6 20 0.005671802 ubox
6 22 0.015325945 ubox
6 28 0.055198987 ubox
6 29 0.003226878 ubox
6 33 0.014839144 ubox
6 47 0.016984918 ubox
6 51 0.172519888 ubox
6 58 0.007108816 ubox
6 59 0.005705732 ubox
6 63 0.732626762 ubox
6 82 0.104433235 ubox
6 95 0.077015482 ubox
6 98 0.077595040 ubox
6 101 0.077808035 ubox
6 104 0.076279744 ubox
6 107 0.026599098 ubox
7 11 0.017888279 ubox
7 13 0.023477188 ubox
7 14 0.035404695 ubox
7 27 0.055365853 ubox
7 32 0.014852056 ubox
7 46 0.016936938 ubox
7 49 0.016997105 ubox
7 50 0.172208327 ubox
7 52 0.024632646 ubox
7 56 0.011388941 ubox
7 62 0.732707789 ubox
7 79 0.003641536 ubox
7 80 0.022501639 ubox
7 81 0.104945483 ubox
7 91 0.100948740 ubox
8 77 0.004652971 ubox
9 76 0.004964137 ubox
10 20 0.022301676 ubox
10 21 0.203976944 ubox
10 22 0.713019205 ubox
10 29 0.017196240 ubox
10 30 0.007194859 ubox
10 47 0.005962462 ubox
10 51 0.010726786 ubox
10 58 0.011660333 ubox
10 59 0.323377034 ubox
10 63 0.025032189 ubox
10 75 0.005001412 ubox
10 78 0.107803529 ubox
10 86 0.007330198 ubox
10 95 0.067823651 ubox
10 98 0.069044282 ubox
10 101 0.070272023 ubox
10 104 0.070131636 ubox
10 107 0.024466841 ubox
11 20 0.204764954 ubox
11 21 0.713006206 ubox
11 22 0.174976110 ubox
11 28 0.017191405 ubox
11 29 0.007215165 ubox
11 51 0.006660713 ubox
11 58 0.321735536 ubox
11 59 0.020807669 ubox
11 63 0.019996220 ubox
11 74 0.004974094 ubox
11 77 0.107746215 ubox
11 85 0.006730083 ubox
11 95 0.041320582 ubox
11 98 0.040711635 ubox
11 101 0.040766530 ubox
11 104 0.040182430 ubox
11 107 0.013091046 ubox
12 76 0.107781636 ubox
12 84 0.005664774 ubox
13 20 0.687965387 ubox
13 21 0.271136205 ubox
13 22 0.555144243 ubox
13 28 0.005099263 ubox
13 29 0.007170561 ubox
13 41 0.005217231 ubox
13 58 0.014502480 ubox
13 59 0.051012873 ubox
13 63 0.005542669 ubox
13 75 0.107764858 ubox
13 86 0.025138650 ubox
13 95 0.022413458 ubox
13 98 0.022789505 ubox
13 101 0.022900079 ubox
13 104 0.015399190 ubox
13 107 0.004912076 ubox
14 20 0.272561386 ubox
14 21 0.554517505 ubox
14 22 0.022972884 ubox
14 28 0.007185569 ubox
14 40 0.005210469 ubox
14 51 0.004575437 ubox
14 58 0.051001027 ubox
14 59 0.003217177 ubox
14 63 0.005050363 ubox
14 74 0.107441155 ubox
14 82 0.003659511 ubox
14 85 0.025157787 ubox
14 95 0.012836233 ubox
14 98 0.012811395 ubox
14 101 0.012584269 ubox
14 104 0.008900489 ubox
15 72 0.014891463 ubox
15 84 0.024160936 ubox
16 72 0.033901089 ubox
17 72 0.012974624 ubox
18 72 0.030189025 ubox
19 72 0.013765491 ubox
19 82 0.024452493 ubox
20 34 0.004573103 ubox
20 49 0.009527873 ubox
20 50 0.073951812 ubox
20 52 0.051819807 ubox
20 56 0.003908791 ubox
20 69 0.013141025 ubox
20 70 0.065270504 ubox
20 81 0.025748136 ubox
20 91 0.007109769 ubox
21 32 0.006259149 ubox
21 49 0.073815161 ubox
21 50 0.090144359 ubox
21 52 0.010412679 ubox
21 56 0.006286601 ubox
21 69 0.065053545 ubox
21 70 0.047483711 ubox
21 80 0.025750967 ubox
21 91 0.008813386 ubox
22 27 0.003967204 ubox
22 31 0.006299433 ubox
22 49 0.090683141 ubox
22 50 0.020305916 ubox
22 52 0.020139565 ubox
22 56 0.022262867 ubox
22 62 0.005097049 ubox
22 69 0.047711628 ubox
22 79 0.025719018 ubox
22 91 0.020071564 ubox
27 33 0.004822903 ubox
27 47 0.979688478 ubox
27 51 0.162534644 ubox
27 63 0.034161035 ubox
27 95 0.004153847 ubox
27 98 0.004117124 ubox
27 101 0.004193147 ubox
27 104 0.004195283 ubox
28 32 0.004798280 ubox
28 45 0.010666427 ubox
28 46 0.980102683 ubox
28 50 0.162521522 ubox
28 52 0.007188990 ubox
28 62 0.034136252 ubox
28 81 0.003239642 ubox
29 42 0.004726786 ubox
29 45 0.974530846 ubox
29 46 0.050515855 ubox
29 49 0.161103171 ubox
29 50 0.013837950 ubox
29 80 0.003246413 ubox
29 91 0.004493250 ubox
30 42 0.963996979 ubox
30 45 0.064813919 ubox
30 46 0.004761459 ubox
30 49 0.016308109 ubox
30 52 0.003954424 ubox
30 79 0.003243575 ubox
31 40 0.009880588 ubox
31 41 0.985471024 ubox
31 47 0.075440685 ubox
31 51 0.003980413 ubox
31 59 0.034180060 ubox
31 78 0.003173313 ubox
32 40 0.985125936 ubox
32 41 0.009984389 ubox
32 47 0.112499905 ubox
32 58 0.034205403 ubox
33 38 0.921716127 ubox
33 42 0.090458771 ubox
33 45 0.074890600 ubox
33 46 0.112626965 ubox
33 49 0.003818836 ubox
33 56 0.032198666 ubox
34 40 0.010691935 ubox
34 41 0.090809032 ubox
38 47 0.004303870 ubox
38 51 0.032354203 ubox
40 46 0.006083016 ubox
40 50 0.034594401 ubox
40 70 0.003549180 ubox
40 80 0.004746416 ubox
41 45 0.006169919 ubox
41 49 0.034604797 ubox
41 69 0.003562202 ubox
41 79 0.004789322 ubox
42 47 0.007275583 ubox
42 78 0.004881974 ubox
43 77 0.004884950 ubox
44 76 0.004884178 ubox
45 51 0.005699741 ubox
45 59 0.024542454 ubox
45 63 0.014173288 ubox
45 75 0.004886102 ubox
45 95 0.003981598 ubox
45 98 0.003956572 ubox
45 101 0.003998869 ubox
45 104 0.003947895 ubox
46 58 0.024550705 ubox
46 63 0.072816777 ubox
46 74 0.004825482 ubox
47 52 0.005031230 ubox
47 56 0.023211559 ubox
47 62 0.072991294 ubox
49 58 0.072119778 ubox
49 59 0.823882048 ubox
49 63 0.023425936 ubox
49 95 0.015172091 ubox
49 98 0.014996772 ubox
49 101 0.015037185 ubox
49 104 0.015248047 ubox
49 107 0.005199139 ubox
50 58 0.824466975 ubox
50 59 0.029589042 ubox
50 63 0.321657845 ubox
51 56 0.783251830 ubox
51 62 0.322371390 ubox
52 58 0.033087074 ubox
52 59 0.067236403 ubox
52 63 0.011991998 ubox
52 101 0.005189882 ubox
56 63 0.030408974 ubox
56 98 0.008701881 ubox
56 101 0.004558095 ubox
57 72 0.003510599 ubox
58 62 0.010769337 ubox
58 70 0.019582261 ubox
59 69 0.019680608 ubox
60 72 0.003331951 ubox
61 72 0.003594262 ubox
62 95 0.019887147 ubox
62 98 0.004010393 ubox
62 101 0.003798794 ubox
62 104 0.003500665 ubox
63 69 0.013434988 ubox
63 70 0.013621382 ubox
63 91 0.042798409 ubox
65 72 0.003206116 ubox
67 77 0.021741107 ubox
68 76 0.024326611 ubox
68 77 0.003353423 ubox
69 74 0.003326319 ubox
69 75 0.024786169 ubox
69 76 0.003934730 ubox
69 78 0.004073909 ubox
69 86 0.992585861 ubox
70 74 0.024391068 ubox
70 75 0.004029701 ubox
70 77 0.003951969 ubox
70 78 0.005884951 ubox
70 85 0.993700211 ubox
71 76 0.003569042 ubox
71 77 0.005835461 ubox
71 84 0.993588487 ubox
72 83 0.993273254 ubox
73 82 0.993350301 ubox
74 80 0.012298108 ubox
74 81 0.993680147 ubox
75 79 0.016745052 ubox
75 80 0.992866614 ubox
75 81 0.003238947 ubox
76 80 0.004104536 ubox
86 91 0.006894289 ubox
91 95 0.048396083 ubox
91 98 0.110551421 ubox
91 101 0.045544413 ubox
91 104 0.032736289 ubox
91 107 0.009614436 ubox
6 63 0.9500000 lbox
7 62 0.9500000 lbox
10 22 0.9500000 lbox
11 21 0.9500000 lbox
13 20 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 42 0.9500000 lbox
31 41 0.9500000 lbox
32 40 0.9500000 lbox
33 38 0.9500000 lbox
49 59 0.9500000 lbox
50 58 0.9500000 lbox
51 56 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
