%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (642)
} def

/sequence { (\
GGAAAGGCCCAAAAAACAAUCACCAUCACCUCCUCUCACACCCAAUCAAAACCACAUCAAACACGGCCAAUAGUGUUCGCACUAUUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.006435878 ubox
1 9 0.035339321 ubox
1 10 0.110031741 ubox
1 17 0.005035864 ubox
1 23 0.004233407 ubox
1 24 0.022864730 ubox
1 27 0.007626056 ubox
1 29 0.008755664 ubox
1 30 0.032081364 ubox
1 33 0.117192348 ubox
1 34 0.008442895 ubox
1 35 0.026119114 ubox
1 36 0.033696454 ubox
1 37 0.026477412 ubox
1 39 0.055180425 ubox
1 41 0.003651733 ubox
1 42 0.009811124 ubox
1 43 0.018152102 ubox
1 47 0.005283708 ubox
1 53 0.008869411 ubox
1 68 0.019600004 ubox
1 86 0.003696375 ubox
1 95 0.066355332 ubox
1 98 0.066788251 ubox
1 101 0.068323170 ubox
1 104 0.068635821 ubox
1 107 0.017329464 ubox
2 8 0.035548052 ubox
2 9 0.109847521 ubox
2 10 0.003717113 ubox
2 21 0.009903159 ubox
2 23 0.022787188 ubox
2 26 0.007209111 ubox
2 27 0.014831070 ubox
2 29 0.032071519 ubox
2 32 0.117279069 ubox
2 33 0.010451821 ubox
2 34 0.025051377 ubox
2 35 0.045042702 ubox
2 36 0.012523194 ubox
2 37 0.084447444 ubox
2 39 0.003339077 ubox
2 41 0.009640039 ubox
2 42 0.017818633 ubox
2 46 0.004544110 ubox
2 47 0.009707314 ubox
2 52 0.008785192 ubox
2 58 0.003319525 ubox
2 67 0.019184158 ubox
2 68 0.003541362 ubox
2 86 0.006676275 ubox
2 95 0.034855356 ubox
2 98 0.034987793 ubox
2 101 0.035740231 ubox
2 104 0.035607516 ubox
2 107 0.011619325 ubox
3 20 0.009836817 ubox
3 26 0.014479038 ubox
3 31 0.095173318 ubox
3 34 0.043955521 ubox
3 36 0.082954263 ubox
3 46 0.009604113 ubox
3 57 0.003221183 ubox
3 71 0.006854586 ubox
3 85 0.004741703 ubox
3 86 0.005837981 ubox
4 26 0.017444792 ubox
4 31 0.014235092 ubox
4 34 0.006048153 ubox
4 36 0.007681178 ubox
4 85 0.003467401 ubox
4 86 0.005373414 ubox
5 20 0.006875874 ubox
5 26 0.016073468 ubox
5 31 0.086174808 ubox
5 34 0.085714873 ubox
5 36 0.007003302 ubox
5 85 0.003205419 ubox
5 86 0.004456647 ubox
6 17 0.012800224 ubox
6 21 0.009009862 ubox
6 23 0.007806475 ubox
6 24 0.047959391 ubox
6 27 0.013726457 ubox
6 29 0.022302274 ubox
6 30 0.120396642 ubox
6 31 0.005963958 ubox
6 33 0.087746682 ubox
6 35 0.007343003 ubox
6 37 0.004256521 ubox
6 39 0.005409374 ubox
6 42 0.009060457 ubox
6 43 0.011172142 ubox
6 53 0.007649072 ubox
6 62 0.003429752 ubox
6 64 0.004606481 ubox
6 68 0.976442192 ubox
6 95 0.003222390 ubox
7 17 0.007178516 ubox
7 20 0.007108348 ubox
7 23 0.047875632 ubox
7 24 0.004595115 ubox
7 26 0.010646559 ubox
7 27 0.012149257 ubox
7 29 0.120140015 ubox
7 30 0.006714698 ubox
7 32 0.086890576 ubox
7 33 0.003163444 ubox
7 34 0.005638291 ubox
7 36 0.003314818 ubox
7 41 0.009089350 ubox
7 42 0.011076572 ubox
7 52 0.007627576 ubox
7 67 0.977496075 ubox
7 68 0.004670525 ubox
8 65 0.003278001 ubox
8 66 0.975484390 ubox
9 65 0.971621472 ubox
9 66 0.062922429 ubox
10 65 0.088719276 ubox
11 20 0.008375344 ubox
11 26 0.007268082 ubox
11 31 0.005251636 ubox
11 36 0.003614238 ubox
11 57 0.004723861 ubox
12 20 0.005271504 ubox
12 26 0.007396863 ubox
12 31 0.004310557 ubox
12 36 0.003671739 ubox
12 57 0.004424899 ubox
13 20 0.009028886 ubox
13 26 0.010095132 ubox
13 31 0.003383702 ubox
13 57 0.006759220 ubox
14 20 0.008195990 ubox
14 26 0.006462630 ubox
14 57 0.010387631 ubox
15 20 0.010586863 ubox
15 26 0.004485962 ubox
15 57 0.015828225 ubox
16 20 0.008593855 ubox
16 57 0.020672241 ubox
18 26 0.003826567 ubox
18 57 0.023682012 ubox
19 26 0.012582374 ubox
19 46 0.007323109 ubox
19 57 0.032117984 ubox
20 25 0.012148889 ubox
20 28 0.003563106 ubox
20 45 0.007397175 ubox
20 50 0.004263056 ubox
20 51 0.006973815 ubox
20 54 0.026766444 ubox
20 56 0.032087581 ubox
20 61 0.003254325 ubox
20 63 0.003352530 ubox
20 92 0.009385467 ubox
21 91 0.010029111 ubox
22 26 0.003494478 ubox
22 31 0.005587809 ubox
23 66 0.016009820 ubox
24 65 0.016140303 ubox
24 91 0.003499995 ubox
25 31 0.004984804 ubox
25 34 0.004979145 ubox
25 46 0.003946936 ubox
25 57 0.006772543 ubox
26 45 0.004012820 ubox
26 50 0.011273311 ubox
26 51 0.006945915 ubox
26 56 0.006815687 ubox
26 63 0.003336744 ubox
26 92 0.009412966 ubox
27 91 0.010058072 ubox
28 34 0.004515296 ubox
28 36 0.003433771 ubox
29 66 0.018033708 ubox
30 65 0.018141304 ubox
30 91 0.007088461 ubox
31 38 0.005472666 ubox
31 40 0.005242282 ubox
31 90 0.006721629 ubox
31 92 0.007638766 ubox
32 66 0.012968378 ubox
32 91 0.007947075 ubox
33 65 0.013174926 ubox
33 91 0.007638544 ubox
34 38 0.003817670 ubox
34 40 0.005614461 ubox
34 44 0.003493777 ubox
34 66 0.003439895 ubox
34 90 0.007334118 ubox
34 92 0.030163348 ubox
35 65 0.004781053 ubox
35 91 0.031715433 ubox
36 40 0.004656319 ubox
36 44 0.004911418 ubox
36 45 0.006684933 ubox
36 66 0.004176586 ubox
36 90 0.029921647 ubox
36 92 0.015473095 ubox
37 65 0.005893299 ubox
37 91 0.016253182 ubox
38 46 0.003741028 ubox
39 65 0.004731291 ubox
39 66 0.003196361 ubox
39 91 0.003882867 ubox
40 46 0.004721820 ubox
41 65 0.003931745 ubox
41 66 0.037868003 ubox
42 65 0.037902784 ubox
42 66 0.037342286 ubox
42 91 0.003488038 ubox
43 65 0.037710556 ubox
43 91 0.005171542 ubox
45 57 0.007011651 ubox
46 50 0.004472658 ubox
46 51 0.005693080 ubox
46 54 0.003616695 ubox
46 56 0.007127791 ubox
46 60 0.003317259 ubox
46 61 0.003697861 ubox
46 66 0.006314938 ubox
46 92 0.017694615 ubox
47 65 0.008589118 ubox
47 91 0.018893639 ubox
48 57 0.007013156 ubox
49 57 0.005335855 ubox
50 57 0.009409268 ubox
50 86 0.004378216 ubox
51 57 0.006018690 ubox
51 85 0.004297473 ubox
52 65 0.006425511 ubox
52 66 0.092620070 ubox
53 65 0.092971079 ubox
53 66 0.005418488 ubox
54 83 0.004029415 ubox
55 65 0.012210173 ubox
55 66 0.006710706 ubox
55 79 0.003492901 ubox
57 61 0.006606075 ubox
57 63 0.007700860 ubox
57 66 0.025404249 ubox
57 81 0.007512099 ubox
57 92 0.005469367 ubox
58 65 0.034679967 ubox
58 66 0.005884458 ubox
58 79 0.030506370 ubox
58 91 0.005796779 ubox
59 77 0.003844268 ubox
60 77 0.064983376 ubox
61 76 0.071609860 ubox
62 66 0.005054052 ubox
62 75 0.072582844 ubox
62 91 0.007759733 ubox
63 74 0.072580316 ubox
64 73 0.072592034 ubox
64 79 0.003554315 ubox
64 91 0.054163603 ubox
65 78 0.003615739 ubox
65 95 0.006785576 ubox
65 98 0.004189837 ubox
65 101 0.003655522 ubox
65 104 0.003313816 ubox
66 71 0.004244157 ubox
66 77 0.003258377 ubox
67 91 0.010682133 ubox
68 75 0.003361627 ubox
68 91 0.017012127 ubox
69 85 0.017062479 ubox
69 86 0.897810908 ubox
70 85 0.981746677 ubox
70 86 0.024137901 ubox
71 84 0.994028321 ubox
71 87 0.006459973 ubox
72 83 0.996207197 ubox
72 86 0.006483935 ubox
73 80 0.004325305 ubox
73 82 0.996693659 ubox
73 85 0.006354619 ubox
73 95 0.009967133 ubox
73 98 0.016497920 ubox
73 101 0.011559207 ubox
73 104 0.005365210 ubox
74 79 0.004292713 ubox
74 81 0.995972929 ubox
74 84 0.006295947 ubox
74 94 0.009883028 ubox
74 96 0.018835570 ubox
74 97 0.012262905 ubox
74 99 0.013409131 ubox
74 100 0.008377074 ubox
74 102 0.005720094 ubox
74 103 0.004005729 ubox
74 105 0.003856472 ubox
75 80 0.990004714 ubox
75 82 0.004779779 ubox
75 83 0.004700997 ubox
75 95 0.023059248 ubox
75 98 0.016419254 ubox
75 101 0.006994604 ubox
75 104 0.004366457 ubox
76 81 0.004535463 ubox
76 93 0.017244602 ubox
76 94 0.019347331 ubox
76 97 0.016268656 ubox
76 100 0.006917509 ubox
76 103 0.004315787 ubox
77 92 0.023964770 ubox
77 93 0.014467618 ubox
77 96 0.014881797 ubox
77 99 0.006328819 ubox
77 102 0.003924405 ubox
78 91 0.027727786 ubox
79 95 0.006891167 ubox
79 98 0.003928230 ubox
80 91 0.004988727 ubox
82 91 0.023736084 ubox
83 90 0.023152186 ubox
85 90 0.003235302 ubox
85 92 0.011501057 ubox
85 93 0.007518463 ubox
85 94 0.008419259 ubox
86 90 0.006141120 ubox
86 91 0.015359168 ubox
86 92 0.012251917 ubox
86 93 0.014940770 ubox
86 94 0.006104826 ubox
86 96 0.005556305 ubox
86 97 0.004020369 ubox
86 99 0.004416928 ubox
86 100 0.003188115 ubox
86 102 0.003921763 ubox
86 105 0.003169498 ubox
91 95 0.042855725 ubox
91 98 0.103365060 ubox
91 101 0.045364182 ubox
91 104 0.035115301 ubox
91 107 0.010389123 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
