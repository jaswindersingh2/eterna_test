%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (78)
} def

/sequence { (\
GGAAAAAGACACGUGACAAAGGUCACCCGAGGGAUGGAAGCAUCACAUCGAAAGAUGCCAAGGGUGUCGAUGCACUUCGGUGCAUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.067783354 ubox
1 12 0.030916089 ubox
1 17 0.014851266 ubox
1 27 0.004287398 ubox
1 28 0.011065461 ubox
1 59 0.003883233 ubox
1 68 0.006086204 ubox
1 86 0.004190555 ubox
1 95 0.078508215 ubox
1 98 0.079077655 ubox
1 101 0.081165795 ubox
1 104 0.081386762 ubox
1 107 0.020574050 ubox
2 10 0.018159212 ubox
2 12 0.012989534 ubox
2 17 0.004349453 ubox
2 26 0.003844120 ubox
2 27 0.011417335 ubox
2 58 0.003872017 ubox
2 67 0.004342963 ubox
2 68 0.009587009 ubox
2 86 0.004530422 ubox
2 95 0.041289137 ubox
2 98 0.041495066 ubox
2 101 0.042514879 ubox
2 104 0.042282651 ubox
2 107 0.013805397 ubox
3 67 0.008589944 ubox
3 85 0.003315167 ubox
4 14 0.006867830 ubox
5 14 0.004791324 ubox
7 14 0.006467264 ubox
8 12 0.011162947 ubox
8 17 0.013628116 ubox
8 24 0.033383805 ubox
8 27 0.008393716 ubox
8 68 0.968376857 ubox
8 95 0.026245927 ubox
8 98 0.025041214 ubox
8 101 0.025151010 ubox
8 104 0.025155915 ubox
8 107 0.008789391 ubox
9 23 0.035272266 ubox
9 65 0.003409471 ubox
9 67 0.969678004 ubox
10 15 0.013052419 ubox
10 21 0.006715227 ubox
10 22 0.035443188 ubox
10 29 0.004215713 ubox
10 64 0.003460654 ubox
10 66 0.969960318 ubox
10 91 0.025286861 ubox
11 23 0.023879913 ubox
11 65 0.968294498 ubox
12 21 0.045562031 ubox
12 22 0.025548221 ubox
12 29 0.004159091 ubox
12 62 0.003276326 ubox
12 63 0.014677612 ubox
12 64 0.966216867 ubox
12 66 0.003422532 ubox
12 91 0.024658647 ubox
13 17 0.005704030 ubox
13 26 0.981978512 ubox
13 27 0.016330351 ubox
13 28 0.005037980 ubox
13 95 0.026557431 ubox
13 98 0.023747054 ubox
13 101 0.024158975 ubox
13 104 0.025020237 ubox
13 107 0.009490781 ubox
14 19 0.010636561 ubox
14 20 0.025039192 ubox
14 21 0.004116401 ubox
14 25 0.985986208 ubox
14 62 0.028295328 ubox
14 63 0.003304331 ubox
14 94 0.025947508 ubox
14 96 0.012824869 ubox
14 97 0.021897480 ubox
14 99 0.012542197 ubox
14 100 0.022339465 ubox
14 102 0.012792642 ubox
14 103 0.023166356 ubox
14 105 0.010770940 ubox
14 106 0.008862009 ubox
15 24 0.988570250 ubox
15 59 0.003404963 ubox
15 68 0.012103201 ubox
15 95 0.015545780 ubox
15 98 0.015213103 ubox
15 101 0.015580126 ubox
15 104 0.012161437 ubox
16 23 0.988118034 ubox
16 67 0.012079235 ubox
17 21 0.018636534 ubox
17 22 0.985776358 ubox
17 66 0.010040811 ubox
17 91 0.017129505 ubox
18 65 0.006838311 ubox
21 28 0.004737551 ubox
21 59 0.012746322 ubox
21 68 0.070222890 ubox
21 95 0.007673349 ubox
21 98 0.007010261 ubox
21 101 0.006416767 ubox
21 104 0.006335922 ubox
22 27 0.004710588 ubox
22 56 0.021911146 ubox
22 58 0.012748099 ubox
22 67 0.068560869 ubox
22 68 0.115680880 ubox
22 95 0.006567349 ubox
22 98 0.004495731 ubox
22 101 0.003685752 ubox
22 104 0.003606552 ubox
23 55 0.022465495 ubox
23 57 0.009959491 ubox
23 94 0.006203167 ubox
23 97 0.004252300 ubox
23 100 0.003488427 ubox
23 103 0.003413183 ubox
24 54 0.022675639 ubox
24 57 0.006965400 ubox
24 66 0.143502349 ubox
25 56 0.007014737 ubox
25 65 0.153145010 ubox
26 31 0.003922192 ubox
26 32 0.029836066 ubox
26 33 0.011844725 ubox
26 37 0.003662956 ubox
26 54 0.008554213 ubox
26 63 0.014199466 ubox
26 64 0.161226055 ubox
27 31 0.036015993 ubox
27 32 0.095995796 ubox
27 33 0.037106536 ubox
27 36 0.005285131 ubox
27 37 0.086404569 ubox
27 50 0.011988615 ubox
27 54 0.012294389 ubox
27 62 0.016987048 ubox
27 63 0.922884857 ubox
27 64 0.010468423 ubox
27 91 0.011270702 ubox
28 32 0.042121238 ubox
28 33 0.015237184 ubox
28 36 0.086585705 ubox
28 37 0.018971377 ubox
28 50 0.246227463 ubox
28 54 0.007999272 ubox
28 62 0.924886633 ubox
28 63 0.020705792 ubox
29 35 0.060113436 ubox
29 44 0.010164596 ubox
29 46 0.004694271 ubox
29 49 0.249230684 ubox
29 58 0.006309202 ubox
29 59 0.011983229 ubox
30 35 0.021720443 ubox
30 43 0.009665640 ubox
30 48 0.242490540 ubox
31 44 0.004474798 ubox
31 46 0.108931391 ubox
31 58 0.023220289 ubox
31 59 0.922959546 ubox
32 41 0.009016553 ubox
32 43 0.003260187 ubox
32 44 0.015229802 ubox
32 46 0.164316492 ubox
32 58 0.920941316 ubox
32 59 0.048305711 ubox
33 41 0.004232264 ubox
33 43 0.008569652 ubox
33 44 0.990169576 ubox
33 49 0.042690226 ubox
33 58 0.031359731 ubox
33 59 0.004773756 ubox
34 43 0.992284845 ubox
34 48 0.042797041 ubox
34 56 0.024561078 ubox
35 42 0.992333859 ubox
35 45 0.014091311 ubox
35 47 0.042948738 ubox
35 51 0.004436027 ubox
35 55 0.023594265 ubox
35 60 0.015792226 ubox
35 63 0.003718040 ubox
36 41 0.991737234 ubox
36 44 0.016034410 ubox
36 46 0.042997367 ubox
36 59 0.017550702 ubox
37 41 0.009830022 ubox
37 43 0.011724394 ubox
37 44 0.041391179 ubox
37 49 0.005434737 ubox
37 58 0.014192730 ubox
37 59 0.006333773 ubox
38 43 0.037908723 ubox
38 48 0.005264451 ubox
39 43 0.005737788 ubox
40 44 0.003527085 ubox
40 46 0.004357011 ubox
40 49 0.007915743 ubox
40 58 0.095598241 ubox
40 59 0.006493586 ubox
41 50 0.014079752 ubox
41 57 0.097021237 ubox
41 62 0.005226550 ubox
41 63 0.005254210 ubox
42 48 0.004844135 ubox
42 56 0.096972437 ubox
43 47 0.004418601 ubox
43 51 0.006045731 ubox
43 55 0.096935118 ubox
43 60 0.003950830 ubox
44 50 0.006271035 ubox
44 54 0.096852851 ubox
46 50 0.010124248 ubox
46 54 0.004280104 ubox
46 57 0.956563376 ubox
47 56 0.960797121 ubox
48 52 0.003861653 ubox
48 53 0.003465847 ubox
48 55 0.961454330 ubox
49 54 0.961360280 ubox
49 57 0.003495865 ubox
50 59 0.007163068 ubox
51 56 0.008165593 ubox
52 56 0.004644811 ubox
54 58 0.008268451 ubox
54 59 0.035392504 ubox
54 68 0.189711316 ubox
54 86 0.010285062 ubox
55 67 0.189953850 ubox
55 85 0.010296023 ubox
56 61 0.013470142 ubox
56 62 0.006471192 ubox
56 63 0.009712866 ubox
56 66 0.189269813 ubox
56 84 0.010296316 ubox
57 65 0.190271077 ubox
57 83 0.010299079 ubox
58 62 0.022113238 ubox
58 63 0.120751142 ubox
58 64 0.191194846 ubox
58 82 0.010278004 ubox
59 63 0.191469562 ubox
59 80 0.009797837 ubox
62 77 0.009451704 ubox
63 76 0.010103025 ubox
64 75 0.010294116 ubox
64 95 0.007353810 ubox
65 74 0.010299239 ubox
65 94 0.007153834 ubox
66 73 0.010296789 ubox
66 95 0.004108295 ubox
67 72 0.009580254 ubox
67 87 0.006242288 ubox
67 88 0.009404312 ubox
67 92 0.011589582 ubox
67 94 0.003500322 ubox
68 91 0.012772100 ubox
69 86 0.998390273 ubox
70 85 0.999411380 ubox
71 84 0.999467976 ubox
72 83 0.999932078 ubox
73 82 0.999932525 ubox
74 81 0.999444420 ubox
75 79 0.011943252 ubox
75 80 0.998529366 ubox
76 80 0.004037823 ubox
85 92 0.007473269 ubox
86 91 0.010200684 ubox
91 95 0.043627927 ubox
91 98 0.104484946 ubox
91 101 0.045518075 ubox
91 104 0.034972171 ubox
91 107 0.010340116 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
