%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (170)
} def

/sequence { (\
GGAAAAACGCAGAUCAGAGCCGAGCAAAGGCCGAAAGGACCGGCACGAGCACGGGAUCGGGCAAAAACGCACAACUUCGGUUGUGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.335678622 ubox
1 10 0.042591121 ubox
1 15 0.003453841 ubox
1 21 0.011736719 ubox
1 25 0.003235217 ubox
1 62 0.012378107 ubox
1 68 0.137670833 ubox
1 95 0.064054986 ubox
1 98 0.065698917 ubox
1 101 0.065925654 ubox
1 104 0.066156179 ubox
1 107 0.016700415 ubox
2 8 0.081947806 ubox
2 10 0.011070959 ubox
2 15 0.007210282 ubox
2 20 0.011679075 ubox
2 25 0.003718350 ubox
2 62 0.011829433 ubox
2 68 0.082070889 ubox
2 95 0.033174130 ubox
2 98 0.033377268 ubox
2 101 0.033940661 ubox
2 104 0.033812290 ubox
2 107 0.011030673 ubox
3 14 0.006880870 ubox
8 17 0.009096297 ubox
8 19 0.004752455 ubox
8 22 0.012916910 ubox
8 59 0.015222069 ubox
8 60 0.041569906 ubox
8 61 0.216192865 ubox
8 91 0.035034696 ubox
9 20 0.031629407 ubox
9 21 0.009557390 ubox
9 25 0.026876505 ubox
9 58 0.009553993 ubox
9 62 0.950300127 ubox
9 68 0.006493532 ubox
9 86 0.003626527 ubox
9 95 0.008761899 ubox
9 98 0.008914392 ubox
9 101 0.008934544 ubox
9 104 0.008964252 ubox
9 107 0.003395559 ubox
10 17 0.006697317 ubox
10 19 0.033058204 ubox
10 24 0.026881943 ubox
10 59 0.212466412 ubox
10 60 0.130364271 ubox
10 61 0.947651138 ubox
10 85 0.003595896 ubox
10 91 0.009246208 ubox
12 20 0.004047381 ubox
12 21 0.016841535 ubox
12 25 0.008603110 ubox
12 57 0.003195654 ubox
12 58 0.992265203 ubox
12 62 0.039326006 ubox
12 95 0.004065963 ubox
12 98 0.003386050 ubox
12 101 0.003444838 ubox
12 104 0.003252976 ubox
13 57 0.992823600 ubox
14 23 0.019022226 ubox
14 34 0.005505863 ubox
14 54 0.003662443 ubox
14 55 0.019965086 ubox
14 56 0.992368546 ubox
14 59 0.005000313 ubox
14 60 0.039952893 ubox
14 61 0.038326221 ubox
14 92 0.009439556 ubox
15 22 0.019655402 ubox
15 33 0.006074145 ubox
15 53 0.004717995 ubox
15 54 0.036703334 ubox
15 55 0.991197438 ubox
15 59 0.045548068 ubox
15 60 0.048673346 ubox
15 61 0.006862755 ubox
15 85 0.003262301 ubox
15 91 0.010046796 ubox
16 57 0.009050789 ubox
16 84 0.003324740 ubox
17 32 0.071526208 ubox
17 52 0.269271366 ubox
17 57 0.012866698 ubox
17 58 0.084623274 ubox
17 62 0.003728181 ubox
18 57 0.083842685 ubox
18 82 0.003348768 ubox
19 25 0.020080223 ubox
19 31 0.118082113 ubox
19 32 0.004946894 ubox
19 44 0.005947049 ubox
19 50 0.396471784 ubox
19 52 0.009190399 ubox
19 62 0.015980346 ubox
19 81 0.003619060 ubox
20 24 0.019956415 ubox
20 30 0.122706696 ubox
20 38 0.008057727 ubox
20 43 0.005956646 ubox
20 49 0.396923386 ubox
20 54 0.906271638 ubox
20 55 0.016342873 ubox
20 60 0.011320291 ubox
20 61 0.014709597 ubox
20 80 0.003632678 ubox
21 29 0.122759483 ubox
21 33 0.025169364 ubox
21 37 0.007999620 ubox
21 42 0.005955931 ubox
21 47 0.396230645 ubox
21 49 0.005003117 ubox
21 53 0.906880587 ubox
21 54 0.014712683 ubox
21 59 0.012984085 ubox
21 60 0.013237844 ubox
21 79 0.003640486 ubox
22 32 0.025609675 ubox
22 41 0.004547615 ubox
22 46 0.395116033 ubox
22 50 0.004957507 ubox
22 52 0.903986966 ubox
22 58 0.014408849 ubox
22 78 0.003637307 ubox
23 57 0.013910121 ubox
23 77 0.003524373 ubox
24 31 0.027155574 ubox
24 44 0.394319005 ubox
24 46 0.008765663 ubox
24 50 0.903224730 ubox
24 62 0.003787840 ubox
24 68 0.004250858 ubox
25 30 0.027216446 ubox
25 42 0.010214633 ubox
25 43 0.393814323 ubox
25 47 0.009373999 ubox
25 49 0.903024359 ubox
25 55 0.006494044 ubox
25 61 0.003790190 ubox
29 40 0.029418326 ubox
29 41 0.388592046 ubox
29 44 0.013164422 ubox
29 46 0.502883020 ubox
29 62 0.049628026 ubox
30 40 0.389320274 ubox
30 44 0.906519915 ubox
30 62 0.015088004 ubox
31 37 0.003344102 ubox
31 38 0.398538558 ubox
31 43 0.907076295 ubox
31 60 0.051134968 ubox
31 61 0.014131320 ubox
32 37 0.400221756 ubox
32 38 0.044848504 ubox
32 42 0.907055070 ubox
32 59 0.052069050 ubox
32 60 0.013069935 ubox
33 40 0.048615366 ubox
33 41 0.900986679 ubox
33 58 0.052345834 ubox
34 57 0.050244099 ubox
35 57 0.005762120 ubox
36 57 0.004816368 ubox
37 41 0.003355799 ubox
37 57 0.011121379 ubox
37 58 0.004790963 ubox
38 57 0.004545141 ubox
38 58 0.003437329 ubox
39 57 0.003305962 ubox
40 54 0.137204560 ubox
40 60 0.004170796 ubox
41 53 0.137452053 ubox
41 59 0.004188936 ubox
42 52 0.136957621 ubox
42 58 0.004194099 ubox
43 50 0.136692351 ubox
43 57 0.004052410 ubox
43 62 0.004115645 ubox
44 49 0.136597921 ubox
44 61 0.004055634 ubox
46 53 0.007176434 ubox
46 59 0.009097321 ubox
47 52 0.007080750 ubox
47 58 0.009199304 ubox
48 57 0.009047540 ubox
49 62 0.005069798 ubox
50 55 0.003756609 ubox
50 61 0.004995480 ubox
52 59 0.008142525 ubox
53 58 0.008112811 ubox
59 68 0.044931983 ubox
59 95 0.016199306 ubox
59 98 0.009674778 ubox
59 101 0.003343949 ubox
60 68 0.034397409 ubox
60 95 0.027491126 ubox
60 98 0.005652784 ubox
61 68 0.021750205 ubox
61 70 0.005660024 ubox
61 95 0.010393535 ubox
62 69 0.005844361 ubox
62 91 0.011842371 ubox
68 91 0.038028876 ubox
69 86 0.998867825 ubox
70 85 0.999928233 ubox
71 84 0.999745664 ubox
72 83 0.999931423 ubox
73 82 0.999381053 ubox
74 81 0.999063411 ubox
75 79 0.012377228 ubox
75 80 0.998417078 ubox
76 80 0.004073078 ubox
80 98 0.005812186 ubox
80 101 0.004399611 ubox
80 104 0.003645642 ubox
81 97 0.005826859 ubox
81 100 0.004410431 ubox
81 103 0.003654354 ubox
82 96 0.005835643 ubox
82 99 0.004415995 ubox
82 102 0.003658564 ubox
83 95 0.005842732 ubox
83 98 0.004420975 ubox
83 101 0.003662610 ubox
84 94 0.005786708 ubox
84 97 0.004284745 ubox
84 100 0.003563199 ubox
86 91 0.005394866 ubox
91 95 0.042858015 ubox
91 98 0.103442062 ubox
91 101 0.045432867 ubox
91 104 0.035202726 ubox
91 107 0.010416038 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
20 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
24 50 0.9500000 lbox
25 49 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
