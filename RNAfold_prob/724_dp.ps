%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (724)
} def

/sequence { (\
GGAAAGACGAUGCAAAGGAUGGUCAAGUAGGAGGGAAAACGUCGUACAGUAGUCGUGAAAAGGAGUACUCGUGAAUUCGUUCACGAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.013814566 ubox
1 13 0.004212910 ubox
1 24 0.012920178 ubox
1 47 0.003569166 ubox
1 68 0.005452703 ubox
1 70 0.012034080 ubox
1 84 0.003556594 ubox
1 95 0.241900774 ubox
1 98 0.243432161 ubox
1 101 0.248985998 ubox
1 104 0.250117587 ubox
1 107 0.063153468 ubox
2 8 0.004168121 ubox
2 23 0.012025389 ubox
2 24 0.014200621 ubox
2 28 0.003177746 ubox
2 68 0.003552558 ubox
2 69 0.006610979 ubox
2 70 0.014726586 ubox
2 78 0.004429874 ubox
2 82 0.004718270 ubox
2 95 0.127686043 ubox
2 98 0.128143874 ubox
2 101 0.130883563 ubox
2 104 0.130392244 ubox
2 107 0.042550983 ubox
3 23 0.013303946 ubox
3 69 0.011453919 ubox
3 77 0.004380439 ubox
3 81 0.004660692 ubox
4 69 0.003487827 ubox
4 76 0.003814324 ubox
4 80 0.004045176 ubox
5 20 0.015638394 ubox
5 69 0.003468656 ubox
6 13 0.003573743 ubox
6 20 0.003693054 ubox
6 24 0.997235351 ubox
6 95 0.008809328 ubox
6 98 0.008929900 ubox
6 101 0.009184756 ubox
6 104 0.009015940 ubox
6 107 0.003192646 ubox
7 23 0.998468956 ubox
7 45 0.003487701 ubox
8 17 0.019443879 ubox
8 18 0.004261703 ubox
8 21 0.007397079 ubox
8 22 0.998485909 ubox
8 44 0.003572043 ubox
8 91 0.004203091 ubox
9 20 0.006880154 ubox
9 24 0.028131999 ubox
9 43 0.003574195 ubox
9 98 0.005086727 ubox
9 101 0.005137190 ubox
9 104 0.005198431 ubox
10 20 0.988292800 ubox
10 23 0.028089655 ubox
10 42 0.003572570 ubox
11 16 0.015622638 ubox
11 17 0.014213998 ubox
11 18 0.038148213 ubox
11 19 0.988035209 ubox
11 22 0.026773723 ubox
11 25 0.004584425 ubox
11 41 0.003563995 ubox
11 96 0.005834901 ubox
11 99 0.005866479 ubox
11 102 0.006377897 ubox
11 105 0.006881211 ubox
12 20 0.004174404 ubox
12 23 0.006536937 ubox
12 24 0.005019191 ubox
12 40 0.003502074 ubox
12 95 0.006106416 ubox
12 98 0.006141143 ubox
12 101 0.006723855 ubox
12 104 0.007525417 ubox
13 17 0.807079538 ubox
13 18 0.224525536 ubox
13 21 0.023232071 ubox
13 22 0.008482374 ubox
14 20 0.021863955 ubox
17 24 0.006260176 ubox
17 98 0.007108302 ubox
17 101 0.004824638 ubox
17 104 0.004417256 ubox
18 23 0.004627343 ubox
18 24 0.006745274 ubox
18 98 0.009190530 ubox
18 101 0.004840773 ubox
18 104 0.004754232 ubox
19 23 0.005883793 ubox
20 96 0.013067639 ubox
20 99 0.007105954 ubox
20 102 0.007023929 ubox
20 105 0.005113440 ubox
21 95 0.013765562 ubox
21 98 0.007513194 ubox
21 101 0.007444005 ubox
21 104 0.005643362 ubox
22 95 0.005737263 ubox
22 98 0.005351330 ubox
22 101 0.005054419 ubox
22 104 0.004622529 ubox
23 92 0.014405364 ubox
23 94 0.005348483 ubox
23 97 0.005088677 ubox
23 100 0.004820273 ubox
23 103 0.004397050 ubox
24 91 0.015634353 ubox
27 47 0.997821700 ubox
27 95 0.008574376 ubox
27 98 0.009819659 ubox
27 101 0.010027687 ubox
27 104 0.010103159 ubox
27 107 0.003545343 ubox
28 46 0.999028091 ubox
28 94 0.007514469 ubox
28 97 0.008870959 ubox
28 100 0.009061310 ubox
28 103 0.009139480 ubox
28 106 0.003243426 ubox
29 45 0.996799384 ubox
30 43 0.021090525 ubox
30 45 0.003798042 ubox
30 95 0.005212451 ubox
30 98 0.005309773 ubox
30 101 0.005424120 ubox
31 42 0.020343017 ubox
31 43 0.999303247 ubox
32 42 0.997017675 ubox
33 40 0.107003768 ubox
33 42 0.008357201 ubox
34 40 0.992166474 ubox
35 40 0.025208893 ubox
44 95 0.003542293 ubox
45 94 0.003419005 ubox
48 69 0.628527913 ubox
49 68 0.993707109 ubox
49 95 0.010372659 ubox
49 98 0.012243273 ubox
49 101 0.011206433 ubox
49 104 0.016443741 ubox
49 107 0.007941102 ubox
50 67 0.995427646 ubox
50 87 0.003533147 ubox
50 88 0.003775508 ubox
50 89 0.012538346 ubox
50 91 0.003433346 ubox
50 92 0.003767592 ubox
50 94 0.009764646 ubox
50 97 0.011784430 ubox
50 100 0.010757521 ubox
50 103 0.016016665 ubox
50 106 0.007856385 ubox
51 66 0.992224775 ubox
52 66 0.003897757 ubox
52 68 0.005045908 ubox
52 95 0.009721769 ubox
52 98 0.008986682 ubox
52 101 0.016222989 ubox
52 104 0.012220544 ubox
53 63 0.012431154 ubox
53 64 0.993322639 ubox
53 67 0.004729661 ubox
53 86 0.077529104 ubox
53 87 0.003621806 ubox
53 94 0.006486634 ubox
53 97 0.006940058 ubox
53 100 0.015425883 ubox
53 103 0.011937557 ubox
54 62 0.021233147 ubox
54 63 0.995663000 ubox
54 65 0.004121125 ubox
54 85 0.083020521 ubox
55 68 0.008565711 ubox
55 84 0.083126499 ubox
55 95 0.004579001 ubox
55 98 0.014646624 ubox
55 101 0.012483098 ubox
56 60 0.012958140 ubox
56 61 0.806631093 ubox
56 62 0.037108856 ubox
56 63 0.003841920 ubox
56 67 0.008565105 ubox
56 83 0.083111973 ubox
56 94 0.004525139 ubox
56 97 0.014416705 ubox
56 99 0.005617080 ubox
56 100 0.011841822 ubox
57 66 0.008404814 ubox
57 82 0.083086173 ubox
57 95 0.003474319 ubox
57 98 0.006919095 ubox
58 81 0.079399830 ubox
59 80 0.059648915 ubox
59 81 0.007829106 ubox
60 80 0.009062283 ubox
60 81 0.019224299 ubox
61 69 0.003472526 ubox
61 80 0.048257372 ubox
62 68 0.004957353 ubox
62 78 0.025380431 ubox
63 77 0.024418807 ubox
63 78 0.078743823 ubox
64 76 0.023979433 ubox
64 77 0.079080114 ubox
65 76 0.078968472 ubox
66 73 0.005978364 ubox
66 74 0.007414938 ubox
66 75 0.078586106 ubox
66 87 0.004189606 ubox
66 89 0.006075199 ubox
67 72 0.005588479 ubox
68 73 0.064186683 ubox
68 91 0.005344379 ubox
69 86 0.734596665 ubox
69 87 0.033694803 ubox
69 88 0.007326140 ubox
69 89 0.005228388 ubox
69 90 0.005001361 ubox
69 92 0.004966683 ubox
70 79 0.006191557 ubox
70 85 0.991474135 ubox
70 91 0.006161265 ubox
71 78 0.006402514 ubox
71 84 0.996195739 ubox
71 95 0.005952507 ubox
71 98 0.006030167 ubox
71 101 0.004725606 ubox
71 104 0.003337383 ubox
72 83 0.996043305 ubox
72 94 0.005892872 ubox
72 97 0.005924021 ubox
72 100 0.004618161 ubox
73 81 0.003293708 ubox
73 82 0.996217548 ubox
74 80 0.018722034 ubox
74 81 0.978919275 ubox
75 80 0.770654430 ubox
75 81 0.038306790 ubox
76 87 0.016047327 ubox
76 93 0.006140729 ubox
77 86 0.018263032 ubox
77 92 0.006633922 ubox
78 85 0.018496509 ubox
78 91 0.006666161 ubox
79 84 0.018024984 ubox
79 95 0.006072008 ubox
80 93 0.007309989 ubox
80 94 0.005150899 ubox
81 92 0.008505068 ubox
81 93 0.003929642 ubox
82 91 0.009143360 ubox
84 91 0.003215771 ubox
85 95 0.005727907 ubox
85 98 0.004047062 ubox
91 95 0.054547008 ubox
91 98 0.119496880 ubox
91 101 0.046245040 ubox
91 104 0.029974958 ubox
91 107 0.008726426 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
