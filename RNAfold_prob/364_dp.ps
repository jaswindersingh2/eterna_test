%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (364)
} def

/sequence { (\
GGAAAGCAGCAUCGAAAAAGAUGGACAAAGUCACUGCAGGCACUGGAAAACAGGAUCGAAAGAUCGCCGUCUGUCUUCGGACAGGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.015529316 ubox
1 32 0.031085357 ubox
1 34 0.019490098 ubox
1 35 0.005077602 ubox
1 37 0.007117540 ubox
1 41 0.039487367 ubox
1 43 0.005268378 ubox
1 67 0.005227931 ubox
1 68 0.137492362 ubox
1 86 0.007046047 ubox
1 95 0.138103131 ubox
1 98 0.139025312 ubox
1 101 0.142119139 ubox
1 104 0.142775432 ubox
1 107 0.036049717 ubox
2 7 0.009828506 ubox
2 31 0.030213360 ubox
2 32 0.039197850 ubox
2 34 0.005324726 ubox
2 37 0.004559660 ubox
2 41 0.054397720 ubox
2 67 0.137045110 ubox
2 68 0.011143573 ubox
2 86 0.005073511 ubox
2 95 0.072505447 ubox
2 98 0.072729023 ubox
2 101 0.074279061 ubox
2 104 0.074001669 ubox
2 107 0.024148728 ubox
3 31 0.038997380 ubox
3 35 0.004973324 ubox
4 31 0.003892264 ubox
5 35 0.006191142 ubox
6 26 0.014634418 ubox
6 31 0.005958424 ubox
6 34 0.006362463 ubox
6 37 0.992538961 ubox
6 41 0.013836324 ubox
6 67 0.026750196 ubox
6 86 0.012072128 ubox
6 95 0.011641941 ubox
6 98 0.012461066 ubox
6 101 0.012412276 ubox
6 104 0.012196438 ubox
6 107 0.004256344 ubox
7 24 0.007671119 ubox
7 30 0.006458123 ubox
7 36 0.993610143 ubox
7 40 0.013806665 ubox
7 45 0.003460580 ubox
7 66 0.026933220 ubox
7 85 0.012060882 ubox
7 91 0.014439442 ubox
8 35 0.992395274 ubox
8 44 0.003467358 ubox
9 26 0.009524771 ubox
9 31 0.003169862 ubox
9 32 0.004885353 ubox
9 34 0.986870886 ubox
9 37 0.012712452 ubox
9 43 0.003447771 ubox
9 95 0.011777915 ubox
9 98 0.011667756 ubox
9 101 0.011808544 ubox
9 104 0.011122043 ubox
9 107 0.003851472 ubox
10 23 0.996218206 ubox
10 24 0.016697226 ubox
10 30 0.005106580 ubox
10 36 0.012220527 ubox
11 22 0.998692492 ubox
11 31 0.003274500 ubox
11 35 0.009662930 ubox
12 21 0.999221290 ubox
12 25 0.007073785 ubox
12 80 0.006521998 ubox
13 20 0.999254754 ubox
13 23 0.004157329 ubox
13 24 0.007330257 ubox
13 30 0.014941860 ubox
13 79 0.007253021 ubox
14 32 0.006908409 ubox
14 78 0.007285285 ubox
15 22 0.006093171 ubox
15 31 0.006697728 ubox
15 77 0.007068822 ubox
16 76 0.005658988 ubox
19 72 0.005668537 ubox
19 76 0.004169515 ubox
20 26 0.004695902 ubox
20 32 0.008477825 ubox
20 71 0.005723551 ubox
20 75 0.004692827 ubox
21 31 0.008494882 ubox
21 70 0.005725579 ubox
21 74 0.004692716 ubox
22 30 0.008401943 ubox
22 33 0.012329556 ubox
22 69 0.005722556 ubox
22 73 0.004674850 ubox
23 32 0.016287364 ubox
23 34 0.008246305 ubox
23 68 0.006002229 ubox
23 72 0.004675275 ubox
24 31 0.016859106 ubox
24 32 0.948466061 ubox
24 37 0.006502977 ubox
24 67 0.006051546 ubox
24 71 0.004701994 ubox
25 31 0.948596012 ubox
25 70 0.004703873 ubox
26 30 0.939378795 ubox
26 36 0.009340855 ubox
26 45 0.004981418 ubox
26 66 0.004135456 ubox
26 69 0.004697474 ubox
27 31 0.005332670 ubox
27 35 0.008941190 ubox
27 44 0.004934301 ubox
29 35 0.006091598 ubox
30 34 0.006452277 ubox
30 37 0.012974255 ubox
30 41 0.053256844 ubox
30 95 0.008418478 ubox
30 98 0.004555792 ubox
30 101 0.005077392 ubox
30 104 0.005105389 ubox
31 36 0.012082472 ubox
31 40 0.053273529 ubox
31 92 0.005094825 ubox
31 94 0.008216234 ubox
31 97 0.004331355 ubox
31 100 0.004858696 ubox
31 103 0.004887913 ubox
32 39 0.053101235 ubox
32 91 0.005500931 ubox
34 39 0.004795289 ubox
34 40 0.006070399 ubox
34 53 0.006888199 ubox
34 91 0.011121272 ubox
35 39 0.005509301 ubox
35 42 0.008319632 ubox
35 47 0.005768995 ubox
35 52 0.006895457 ubox
35 87 0.006709241 ubox
35 90 0.010798236 ubox
35 96 0.008247348 ubox
35 99 0.008276762 ubox
35 102 0.007968330 ubox
35 105 0.007761788 ubox
36 41 0.009342965 ubox
36 51 0.006884012 ubox
36 67 0.003872197 ubox
36 70 0.005877975 ubox
36 86 0.007238947 ubox
36 95 0.008826579 ubox
36 98 0.008857440 ubox
36 101 0.008563490 ubox
36 104 0.008361963 ubox
37 45 0.008848402 ubox
37 66 0.003907367 ubox
37 69 0.006273491 ubox
37 85 0.007219949 ubox
37 91 0.004764593 ubox
38 44 0.009207797 ubox
38 70 0.003510523 ubox
39 43 0.009077468 ubox
39 57 0.014050939 ubox
39 67 0.003604666 ubox
39 68 0.971397106 ubox
39 95 0.016649757 ubox
39 98 0.016485223 ubox
39 101 0.016839826 ubox
39 104 0.016802190 ubox
39 107 0.005866980 ubox
40 56 0.014002363 ubox
40 67 0.972610626 ubox
40 68 0.004478787 ubox
40 86 0.005708694 ubox
40 95 0.010066201 ubox
40 98 0.010029425 ubox
40 101 0.010213392 ubox
40 104 0.010159040 ubox
40 107 0.003313328 ubox
41 46 0.004203392 ubox
41 54 0.008646086 ubox
41 66 0.971610491 ubox
41 85 0.005696917 ubox
41 91 0.012962092 ubox
43 53 0.995772097 ubox
43 62 0.003637142 ubox
44 49 0.006586725 ubox
44 50 0.004873653 ubox
44 52 0.998287821 ubox
44 53 0.005607394 ubox
44 61 0.003410880 ubox
45 51 0.998586580 ubox
45 95 0.003252154 ubox
45 98 0.003269484 ubox
46 51 0.019449259 ubox
53 65 0.004342994 ubox
53 67 0.006770967 ubox
53 68 0.003285465 ubox
54 64 0.003525518 ubox
54 65 0.998475910 ubox
55 64 0.999298326 ubox
56 63 0.999402464 ubox
57 62 0.999218665 ubox
57 66 0.008072605 ubox
58 65 0.015258360 ubox
59 64 0.013952214 ubox
64 92 0.005555554 ubox
65 91 0.006104385 ubox
66 86 0.145609769 ubox
67 85 0.145771070 ubox
67 91 0.004345323 ubox
68 84 0.145605867 ubox
68 91 0.006756593 ubox
69 82 0.145675294 ubox
69 86 0.987299496 ubox
69 95 0.003607771 ubox
70 81 0.146553437 ubox
70 85 0.987879977 ubox
71 80 0.146604628 ubox
71 84 0.989036965 ubox
72 79 0.146388569 ubox
72 83 0.988911303 ubox
72 87 0.003346464 ubox
73 78 0.145247758 ubox
73 82 0.989134560 ubox
73 86 0.003766607 ubox
74 80 0.007266961 ubox
74 81 0.988912750 ubox
74 85 0.003763156 ubox
75 79 0.013417155 ubox
75 80 0.988086757 ubox
75 84 0.003764600 ubox
76 83 0.003553587 ubox
86 91 0.007185736 ubox
91 95 0.046502584 ubox
91 98 0.108336663 ubox
91 101 0.045721927 ubox
91 104 0.033858852 ubox
91 107 0.009982625 ubox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
