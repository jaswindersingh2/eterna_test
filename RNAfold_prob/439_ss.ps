%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAGCCGAGCGCCAGCGGAAACGCGCAGAAAUGCGGCAAUACAGCGCCUAAGCGCUGGCUCGGGUCUACGGACUUCGGUCCGUAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

/coor [
[142.07310486 188.51646423]
[152.76568604 177.99655151]
[165.49974060 170.06913757]
[179.65901184 165.11788940]
[194.55700684 163.38241577]
[179.66621399 163.71948242]
[171.58357239 150.11869812]
[158.59318542 142.61869812]
[145.60279846 135.11869812]
[132.61242676 127.61869812]
[119.62203979 120.11869812]
[106.63166046 112.61869812]
[72.79082489 127.62516785]
[57.81620407 128.49734497]
[42.84158325 129.36950684]
[41.88653183 143.68743896]
[28.31923866 156.59155273]
[14.08059978 161.30972290]
[-0.15803970 166.02789307]
[-10.64998531 178.63150024]
[-26.76286697 175.58074951]
[-31.92113113 160.01397705]
[-20.81840134 147.94494629]
[-4.87621117 151.78924561]
[9.36242867 147.07107544]
[23.60106850 142.35290527]
[23.16479683 127.35925293]
[8.67591000 123.47696686]
[-5.81297731 119.59468079]
[-21.50466919 124.35942841]
[-33.29036713 112.95639038]
[-29.04595566 97.11602783]
[-13.13772106 93.13355255]
[-1.93069160 105.10579681]
[12.55819607 108.98808289]
[27.04708290 112.87036896]
[41.96940994 114.39488983]
[56.94403076 113.52272034]
[71.91865540 112.65054321]
[76.65549469 106.83570862]
[65.02597046 97.36183929]
[74.50003052 85.73246765]
[86.12916565 95.20602417]
[90.86600494 89.39118195]
[88.69202423 74.54956055]
[86.51805115 59.70793533]
[84.34407043 44.86631012]
[82.17008972 30.02468681]
[79.99611664 15.18306160]
[69.40588379 2.66191792]
[75.20826721 -12.67641449]
[91.43426514 -15.05317307]
[101.39196777 -2.02335310]
[94.83773804 13.00908375]
[97.01171875 27.85070801]
[99.18569183 42.69233322]
[101.35967255 57.53395844]
[103.53365326 72.37557983]
[105.70762634 87.21720886]
[114.13166046 99.62831879]
[127.12203979 107.12831879]
[140.11242676 114.62831879]
[153.10279846 122.12831879]
[166.09318542 129.62831116]
[179.08357239 137.12831116]
[194.90351868 137.32771301]
[202.05700684 150.39204407]
[208.38658142 149.92684937]
[213.73640442 152.27671814]
[228.42651367 149.24345398]
[243.11662292 146.21018982]
[257.80673218 143.17692566]
[272.49682617 140.14366150]
[287.18695068 137.11039734]
[301.87704468 134.07713318]
[313.76126099 122.77677917]
[329.41101074 127.67749786]
[332.72720337 143.73785400]
[320.29843140 154.43632507]
[304.91030884 148.76724243]
[290.22021484 151.80050659]
[275.53009033 154.83377075]
[260.83999634 157.86703491]
[246.14988708 160.90029907]
[231.45977783 163.93356323]
[216.76966858 166.96682739]
[230.36668396 173.30094910]
[242.24971008 182.45483398]
[251.84367371 193.98548889]
[258.68429565 207.33486938]
[262.44052124 221.85694885]
[262.93054199 236.84893799]
[260.13067627 251.58531189]
[254.17640686 265.35290527]
[245.35589600 277.48544312]
[234.09599304 287.39578247]
[220.94163513 294.60430908]
[206.52941895 298.76217651]
[191.55680847 299.66815186]
[176.74838257 297.27841187]
[162.82081604 291.70861816]
[150.44812012 283.22827148]
[140.22904968 272.24780273]
[132.65817261 259.29861450]
[128.10185242 245.00733948]
[126.78061676 230.06564331]
[128.75839233 215.19660950]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 67]
[7 65]
[8 64]
[9 63]
[10 62]
[11 61]
[12 60]
[13 39]
[14 38]
[15 37]
[17 26]
[18 25]
[19 24]
[27 36]
[28 35]
[29 34]
[44 59]
[45 58]
[46 57]
[47 56]
[48 55]
[49 54]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
