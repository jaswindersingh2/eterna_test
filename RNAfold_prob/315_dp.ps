%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (315)
} def

/sequence { (\
GGAAAGGAGGCCCGAAAAAGGGCGCGAAUCGCACUCCAGCCACCGGAUAACGGCACGGAAACGUGGGCGCCGUCAUUCGUGACGGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 32 0.006212082 ubox
1 37 0.098080966 ubox
1 40 0.008438001 ubox
1 41 0.184120033 ubox
1 44 0.006169563 ubox
1 68 0.011241050 ubox
1 86 0.005262222 ubox
1 95 0.133423305 ubox
1 98 0.134267800 ubox
1 101 0.137388747 ubox
1 104 0.138029828 ubox
1 107 0.034849965 ubox
2 30 0.009189441 ubox
2 32 0.003213145 ubox
2 36 0.098094605 ubox
2 37 0.003778683 ubox
2 40 0.183949461 ubox
2 41 0.018798478 ubox
2 43 0.006175098 ubox
2 68 0.009473238 ubox
2 86 0.003804477 ubox
2 95 0.070379057 ubox
2 98 0.070634420 ubox
2 101 0.072154427 ubox
2 104 0.071882052 ubox
2 107 0.023455744 ubox
3 29 0.009008549 ubox
3 35 0.093194313 ubox
4 35 0.004641587 ubox
5 29 0.003510066 ubox
5 35 0.011679109 ubox
6 30 0.018354658 ubox
6 32 0.029397843 ubox
6 34 0.018953267 ubox
6 35 0.005824481 ubox
6 36 0.004054024 ubox
6 37 0.992646389 ubox
6 95 0.009448892 ubox
6 98 0.013595947 ubox
6 101 0.013456426 ubox
6 104 0.013302824 ubox
6 107 0.004641594 ubox
7 25 0.009782944 ubox
7 29 0.016373599 ubox
7 30 0.035329715 ubox
7 32 0.004789157 ubox
7 34 0.008904586 ubox
7 36 0.993965718 ubox
7 37 0.003793508 ubox
7 95 0.005771981 ubox
7 98 0.005875623 ubox
7 101 0.004969482 ubox
7 104 0.004729834 ubox
8 29 0.034489245 ubox
8 35 0.993562931 ubox
9 23 0.005141355 ubox
9 25 0.037638391 ubox
9 30 0.003822430 ubox
9 34 0.990958917 ubox
9 95 0.012305399 ubox
9 98 0.012094482 ubox
9 101 0.012113042 ubox
9 104 0.008179948 ubox
10 23 0.999042112 ubox
10 25 0.003874735 ubox
10 32 0.005093223 ubox
10 68 0.003324250 ubox
11 22 0.999948470 ubox
11 24 0.003801231 ubox
11 31 0.004094305 ubox
11 67 0.003328230 ubox
12 21 0.999966889 ubox
12 22 0.004963529 ubox
12 66 0.003325074 ubox
13 20 0.999728375 ubox
13 21 0.005386025 ubox
22 32 0.004329322 ubox
22 34 0.003588345 ubox
23 31 0.004953545 ubox
24 30 0.011031791 ubox
24 32 0.995819533 ubox
24 34 0.003271308 ubox
25 31 0.996771578 ubox
26 30 0.932515691 ubox
26 32 0.019284704 ubox
31 40 0.004118781 ubox
32 39 0.004133642 ubox
35 92 0.003992488 ubox
36 91 0.004180398 ubox
39 54 0.007045111 ubox
39 68 0.974793808 ubox
39 86 0.026492486 ubox
39 95 0.007561971 ubox
39 98 0.007401398 ubox
39 101 0.007544394 ubox
39 104 0.007554409 ubox
40 46 0.003943316 ubox
40 53 0.007958635 ubox
40 58 0.004854109 ubox
40 66 0.010690937 ubox
40 67 0.975978371 ubox
40 85 0.026517434 ubox
40 91 0.005641605 ubox
41 45 0.003929437 ubox
41 52 0.007877880 ubox
41 57 0.004868333 ubox
41 65 0.011587104 ubox
41 66 0.974770053 ubox
41 67 0.003943410 ubox
41 81 0.003216931 ubox
41 84 0.026383230 ubox
41 91 0.010098584 ubox
42 64 0.009832472 ubox
42 80 0.005065802 ubox
43 52 0.007287693 ubox
43 53 0.994393097 ubox
43 58 0.006019581 ubox
43 63 0.005895976 ubox
43 65 0.011908381 ubox
43 67 0.003250065 ubox
43 79 0.003614630 ubox
43 81 0.020992684 ubox
44 52 0.998885995 ubox
44 53 0.011056457 ubox
44 57 0.006530384 ubox
44 63 0.018243943 ubox
44 66 0.003224589 ubox
44 79 0.026163896 ubox
45 51 0.997660941 ubox
45 56 0.006522054 ubox
45 62 0.018651972 ubox
45 78 0.026549771 ubox
46 51 0.018496166 ubox
46 77 0.026548094 ubox
47 76 0.026545097 ubox
48 59 0.006667811 ubox
48 60 0.006445102 ubox
48 75 0.025112796 ubox
50 73 0.026268305 ubox
51 57 0.016405625 ubox
51 58 0.004364816 ubox
51 67 0.004100929 ubox
51 72 0.026622996 ubox
52 56 0.015369867 ubox
52 68 0.007491266 ubox
52 71 0.026625023 ubox
53 68 0.007075834 ubox
53 70 0.026619837 ubox
54 65 0.996214706 ubox
54 66 0.011458433 ubox
54 67 0.006770648 ubox
54 69 0.024105194 ubox
55 64 0.999137417 ubox
56 63 0.999607963 ubox
56 65 0.007425378 ubox
56 66 0.004234267 ubox
56 67 0.008974305 ubox
57 62 0.996870180 ubox
57 64 0.006919676 ubox
58 62 0.007218142 ubox
66 95 0.005298336 ubox
66 98 0.003960583 ubox
66 101 0.003528904 ubox
68 91 0.010184910 ubox
69 86 0.998543752 ubox
70 85 0.999627968 ubox
71 84 0.999621767 ubox
72 83 0.999603044 ubox
73 82 0.999506382 ubox
74 79 0.004983251 ubox
74 81 0.999288246 ubox
75 80 0.831514225 ubox
86 91 0.005422511 ubox
91 95 0.046169382 ubox
91 98 0.107895820 ubox
91 101 0.045707949 ubox
91 104 0.034009462 ubox
91 107 0.010031237 ubox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
