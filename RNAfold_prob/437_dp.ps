%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (437)
} def

/sequence { (\
GGAAAUCCGGGCGCCAGCGGAAACGCGCAGAAAUGCGGCAAAACAUAUCAUGAGAUAUGGCCCGGGUUUCGCACCUUCGGGUGCGAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.003544130 ubox
1 8 0.004246157 ubox
1 68 0.004093978 ubox
1 69 0.005073502 ubox
1 70 0.056295604 ubox
1 72 0.005396235 ubox
1 95 0.067270167 ubox
1 98 0.067766490 ubox
1 101 0.069392853 ubox
1 104 0.069774877 ubox
1 107 0.017632401 ubox
2 7 0.004398052 ubox
2 67 0.004702507 ubox
2 68 0.012883335 ubox
2 69 0.050264047 ubox
2 70 0.739293127 ubox
2 95 0.023823101 ubox
2 98 0.023917709 ubox
2 101 0.024432914 ubox
2 104 0.024344006 ubox
2 107 0.007944410 ubox
3 67 0.011308017 ubox
3 68 0.047852903 ubox
3 69 0.777690293 ubox
4 67 0.038639528 ubox
4 68 0.862705436 ubox
4 69 0.007837301 ubox
5 67 0.951550168 ubox
5 68 0.010458108 ubox
6 66 0.977551410 ubox
7 65 0.999827996 ubox
7 66 0.007193834 ubox
8 64 0.999953388 ubox
8 65 0.005161174 ubox
9 63 0.999977976 ubox
10 62 0.999994189 ubox
11 61 0.999984145 ubox
12 60 0.999085903 ubox
13 18 0.006392580 ubox
13 24 0.003764624 ubox
13 26 0.004439790 ubox
13 28 0.017928823 ubox
13 36 0.007200407 ubox
13 39 0.981964187 ubox
14 19 0.005093219 ubox
14 20 0.033030785 ubox
14 25 0.004562163 ubox
14 27 0.017703476 ubox
14 35 0.007095307 ubox
14 37 0.003843800 ubox
14 38 0.982977708 ubox
14 59 0.005038655 ubox
15 19 0.032901997 ubox
15 20 0.007208256 ubox
15 27 0.003806883 ubox
15 30 0.006713159 ubox
15 35 0.003263849 ubox
15 37 0.981813003 ubox
15 38 0.003737309 ubox
16 34 0.005750399 ubox
17 24 0.006688135 ubox
17 26 0.993861941 ubox
17 28 0.031839185 ubox
17 36 0.053203166 ubox
17 39 0.010038020 ubox
18 25 0.996567198 ubox
18 27 0.031972257 ubox
18 35 0.053198444 ubox
18 38 0.009983603 ubox
19 24 0.993998309 ubox
19 26 0.033206254 ubox
19 34 0.050300320 ubox
20 24 0.008682771 ubox
20 26 0.004238641 ubox
24 30 0.037537244 ubox
24 37 0.012814346 ubox
24 38 0.014670402 ubox
25 36 0.014250888 ubox
25 39 0.033511462 ubox
26 30 0.004247338 ubox
26 35 0.014274500 ubox
26 37 0.069191002 ubox
26 38 0.023846552 ubox
27 34 0.010684095 ubox
27 36 0.995966645 ubox
27 39 0.026336390 ubox
28 35 0.996941568 ubox
28 37 0.003254705 ubox
28 38 0.026221371 ubox
29 34 0.961732427 ubox
30 34 0.007604759 ubox
30 36 0.024331600 ubox
30 39 0.004936408 ubox
34 40 0.004065060 ubox
35 39 0.004445893 ubox
37 44 0.008225862 ubox
44 52 0.003673869 ubox
44 59 0.997569677 ubox
45 51 0.003614157 ubox
45 58 0.999213535 ubox
46 50 0.003206367 ubox
46 57 0.999352752 ubox
47 56 0.999383438 ubox
48 55 0.999442392 ubox
49 54 0.997994618 ubox
49 59 0.012030571 ubox
50 58 0.012032142 ubox
51 57 0.011898630 ubox
52 56 0.009909545 ubox
66 95 0.025837379 ubox
66 98 0.016466807 ubox
66 101 0.012984638 ubox
66 104 0.010260648 ubox
67 87 0.007998274 ubox
67 88 0.253287589 ubox
67 89 0.020376690 ubox
67 90 0.008991865 ubox
67 91 0.005404305 ubox
67 92 0.005243222 ubox
67 93 0.003587885 ubox
67 94 0.024584180 ubox
67 97 0.015450252 ubox
67 100 0.012174056 ubox
67 103 0.009609862 ubox
68 86 0.010326659 ubox
68 87 0.460013142 ubox
68 88 0.029968058 ubox
68 89 0.011546665 ubox
68 90 0.007632232 ubox
68 91 0.006405516 ubox
68 92 0.004767528 ubox
68 93 0.019465341 ubox
68 96 0.010971304 ubox
68 99 0.008635913 ubox
68 102 0.006801545 ubox
69 86 0.611450646 ubox
69 87 0.028064159 ubox
69 88 0.006109703 ubox
69 89 0.004218530 ubox
69 92 0.012297159 ubox
70 85 0.669797747 ubox
70 91 0.010294046 ubox
71 84 0.999333815 ubox
72 83 0.999945222 ubox
73 82 0.999750434 ubox
74 80 0.012074698 ubox
74 81 0.999872468 ubox
75 79 0.016633244 ubox
75 80 0.999053358 ubox
75 81 0.003241435 ubox
76 80 0.004118677 ubox
76 87 0.007270453 ubox
77 86 0.008171684 ubox
78 85 0.008282946 ubox
79 84 0.008247448 ubox
84 91 0.008143104 ubox
85 95 0.034362381 ubox
85 98 0.026713938 ubox
85 101 0.023056168 ubox
85 104 0.021393670 ubox
85 107 0.006342098 ubox
91 95 0.043048873 ubox
91 98 0.103926504 ubox
91 101 0.045483753 ubox
91 104 0.035216065 ubox
91 107 0.010420052 ubox
2 70 0.9500000 lbox
3 69 0.9500000 lbox
4 68 0.9500000 lbox
5 67 0.9500000 lbox
6 66 0.9500000 lbox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
