%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (746)
} def

/sequence { (\
GGAAAGAUGCUGCAAAGGAGGAUCACGAUGCUGGGAAAACGAGGAUCAGAUGCUGCGAAAGGAGGAUCGAUCUUGUUCGCAAGAUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.003574238 ubox
1 24 0.003790755 ubox
1 26 0.021918846 ubox
1 68 0.006902401 ubox
1 72 0.004896179 ubox
1 73 0.019289184 ubox
1 86 0.005800846 ubox
1 95 0.102477823 ubox
1 98 0.103025915 ubox
1 101 0.105368191 ubox
1 104 0.105842832 ubox
1 107 0.026722871 ubox
2 23 0.003174291 ubox
2 24 0.013321669 ubox
2 26 0.064485491 ubox
2 67 0.004742938 ubox
2 68 0.015385165 ubox
2 71 0.004427260 ubox
2 72 0.028303364 ubox
2 86 0.006840136 ubox
2 95 0.053551054 ubox
2 98 0.053735829 ubox
2 101 0.054882070 ubox
2 104 0.054674334 ubox
2 107 0.017840481 ubox
3 23 0.012872149 ubox
3 67 0.014066820 ubox
3 71 0.028113143 ubox
3 85 0.005412941 ubox
4 23 0.003950217 ubox
6 24 0.399811191 ubox
6 26 0.004838550 ubox
6 68 0.906001386 ubox
6 86 0.119484117 ubox
6 95 0.004111740 ubox
6 98 0.005459044 ubox
6 101 0.006329846 ubox
6 104 0.006193279 ubox
7 23 0.400258000 ubox
7 67 0.907104090 ubox
7 85 0.119596010 ubox
8 19 0.016576455 ubox
8 22 0.397952664 ubox
8 25 0.003848171 ubox
8 63 0.009624691 ubox
8 65 0.003242733 ubox
8 66 0.901958400 ubox
8 84 0.119339605 ubox
8 96 0.005332414 ubox
8 99 0.006962246 ubox
8 102 0.006789629 ubox
8 105 0.005838574 ubox
9 24 0.004220597 ubox
9 80 0.003449772 ubox
9 95 0.005612034 ubox
9 98 0.007346400 ubox
9 101 0.007176710 ubox
9 104 0.006404679 ubox
10 17 0.019626911 ubox
10 18 0.007096994 ubox
10 20 0.399539135 ubox
10 21 0.025454332 ubox
10 61 0.010957096 ubox
10 62 0.010574768 ubox
10 64 0.907170880 ubox
10 65 0.021566087 ubox
10 79 0.003433406 ubox
10 83 0.033326451 ubox
11 16 0.019663274 ubox
11 17 0.007338062 ubox
11 18 0.011695228 ubox
11 19 0.398096631 ubox
11 20 0.024707768 ubox
11 22 0.004090509 ubox
11 60 0.011015242 ubox
11 61 0.011099243 ubox
11 62 0.019218577 ubox
11 63 0.904015878 ubox
11 64 0.020251929 ubox
11 81 0.116858717 ubox
11 82 0.024026081 ubox
11 96 0.005391169 ubox
11 99 0.005153557 ubox
11 102 0.005333050 ubox
12 31 0.005465661 ubox
12 56 0.004934721 ubox
12 80 0.119878275 ubox
12 95 0.005474253 ubox
12 98 0.005230124 ubox
12 101 0.005446381 ubox
13 17 0.324095910 ubox
13 18 0.089789898 ubox
13 20 0.004930140 ubox
13 30 0.005483102 ubox
13 55 0.004936261 ubox
13 61 0.870375196 ubox
13 62 0.091348282 ubox
13 79 0.119727005 ubox
14 29 0.005383930 ubox
14 54 0.003498980 ubox
14 77 0.012687964 ubox
15 76 0.009950836 ubox
15 77 0.068484808 ubox
16 76 0.068371336 ubox
16 77 0.079440371 ubox
17 26 0.007430389 ubox
17 56 0.891580772 ubox
17 76 0.088897936 ubox
17 77 0.006488203 ubox
17 78 0.008375694 ubox
17 98 0.007174030 ubox
18 24 0.005516919 ubox
18 54 0.003913464 ubox
18 56 0.130007684 ubox
18 74 0.060527297 ubox
18 76 0.005897219 ubox
18 77 0.008116603 ubox
19 23 0.004809053 ubox
19 54 0.904389972 ubox
19 73 0.057675845 ubox
19 74 0.101685069 ubox
19 76 0.006842917 ubox
20 26 0.005494223 ubox
20 53 0.907153961 ubox
20 54 0.026964577 ubox
20 72 0.044402712 ubox
20 73 0.104927569 ubox
20 95 0.010112432 ubox
21 53 0.028675404 ubox
21 71 0.023464049 ubox
21 72 0.111522768 ubox
22 51 0.902018732 ubox
22 71 0.117417519 ubox
23 49 0.004421642 ubox
23 50 0.907107802 ubox
23 70 0.119623640 ubox
23 92 0.010797733 ubox
24 49 0.905348889 ubox
24 52 0.006635129 ubox
24 69 0.119518186 ubox
24 91 0.011042815 ubox
25 51 0.006622869 ubox
26 49 0.022669326 ubox
26 91 0.021855650 ubox
27 46 0.009998455 ubox
27 47 0.975549921 ubox
27 86 0.207545066 ubox
28 46 0.977143046 ubox
28 85 0.207736371 ubox
29 44 0.003557081 ubox
29 45 0.971629601 ubox
29 81 0.005132643 ubox
29 83 0.003689783 ubox
29 84 0.207264544 ubox
29 87 0.003417068 ubox
30 80 0.005749062 ubox
30 86 0.003741103 ubox
31 43 0.977506197 ubox
31 44 0.013064565 ubox
31 79 0.005688624 ubox
31 83 0.062209581 ubox
32 41 0.056767429 ubox
32 42 0.972934423 ubox
32 43 0.011956677 ubox
32 81 0.201457830 ubox
32 82 0.047541710 ubox
32 83 0.004189989 ubox
33 40 0.115125694 ubox
33 78 0.003887823 ubox
33 80 0.206617455 ubox
34 40 0.967620283 ubox
34 78 0.009996280 ubox
34 80 0.011646245 ubox
35 40 0.024917857 ubox
35 77 0.008079416 ubox
35 78 0.206099483 ubox
35 80 0.023566908 ubox
36 76 0.005270838 ubox
36 77 0.189116897 ubox
37 76 0.096069496 ubox
37 77 0.021874376 ubox
38 74 0.004557153 ubox
38 76 0.022369484 ubox
38 77 0.073609581 ubox
39 74 0.012197926 ubox
39 76 0.173447567 ubox
39 77 0.003846341 ubox
40 75 0.197561844 ubox
41 74 0.168472980 ubox
41 76 0.003686789 ubox
42 73 0.159504524 ubox
42 74 0.113709794 ubox
43 72 0.122401574 ubox
43 73 0.133662993 ubox
44 71 0.065785480 ubox
44 72 0.169235454 ubox
45 71 0.197728426 ubox
46 70 0.207688853 ubox
47 69 0.206888978 ubox
49 68 0.408022827 ubox
49 86 0.091962563 ubox
50 67 0.408463008 ubox
50 85 0.092056521 ubox
51 66 0.406115858 ubox
51 84 0.091865960 ubox
53 64 0.408531987 ubox
53 65 0.007737537 ubox
53 83 0.025226267 ubox
54 63 0.407339524 ubox
54 64 0.006990234 ubox
54 81 0.090176371 ubox
54 82 0.017839273 ubox
55 80 0.092547553 ubox
56 61 0.400036613 ubox
56 62 0.041866243 ubox
56 79 0.092553224 ubox
57 78 0.092552846 ubox
58 76 0.003328321 ubox
58 77 0.088686802 ubox
59 74 0.005270514 ubox
59 76 0.074260618 ubox
59 77 0.023800957 ubox
60 73 0.007707067 ubox
60 74 0.068275918 ubox
60 76 0.033576805 ubox
60 77 0.005415242 ubox
61 72 0.007832581 ubox
61 73 0.071072141 ubox
61 74 0.007369216 ubox
61 76 0.016542852 ubox
62 71 0.006914984 ubox
62 72 0.071473419 ubox
62 73 0.003213277 ubox
62 74 0.049292651 ubox
63 71 0.070841209 ubox
63 73 0.049676944 ubox
63 74 0.027429178 ubox
64 68 0.004448209 ubox
64 72 0.049455247 ubox
64 73 0.029886642 ubox
64 95 0.003975405 ubox
65 71 0.036193557 ubox
65 72 0.030556004 ubox
66 71 0.027500033 ubox
67 88 0.004154960 ubox
67 92 0.005743660 ubox
68 91 0.006583037 ubox
69 86 0.964093956 ubox
70 85 0.965084000 ubox
71 84 0.965289951 ubox
71 92 0.009567217 ubox
72 83 0.965557282 ubox
72 91 0.010238898 ubox
73 82 0.965002348 ubox
73 88 0.015984265 ubox
73 90 0.009631715 ubox
73 97 0.009980246 ubox
73 100 0.003730316 ubox
73 103 0.005163023 ubox
73 106 0.003190518 ubox
74 81 0.964009901 ubox
74 82 0.004021239 ubox
74 87 0.021845513 ubox
74 89 0.007853716 ubox
74 96 0.014916296 ubox
74 99 0.005577758 ubox
74 102 0.007778884 ubox
74 105 0.004830287 ubox
75 80 0.958570651 ubox
75 86 0.022798147 ubox
75 95 0.015611592 ubox
75 98 0.005836673 ubox
75 101 0.008146330 ubox
75 104 0.005059461 ubox
76 93 0.009090364 ubox
76 94 0.013118609 ubox
76 97 0.005690395 ubox
76 100 0.008089624 ubox
76 103 0.005009450 ubox
77 84 0.023937995 ubox
77 92 0.012774407 ubox
77 93 0.009718469 ubox
77 96 0.004709422 ubox
77 99 0.007473825 ubox
77 102 0.004465198 ubox
78 83 0.024620165 ubox
78 91 0.015342320 ubox
79 98 0.005209081 ubox
85 92 0.013750074 ubox
86 91 0.015856593 ubox
91 95 0.044419617 ubox
91 98 0.105549644 ubox
91 101 0.045583019 ubox
91 104 0.034682471 ubox
91 107 0.010248162 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
13 61 0.9500000 lbox
17 56 0.9500000 lbox
19 54 0.9500000 lbox
20 53 0.9500000 lbox
22 51 0.9500000 lbox
23 50 0.9500000 lbox
24 49 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
