%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (417)
} def

/sequence { (\
GGAAAACUUAUAGCCCUGUACAAAGUACAGGCCUACAAAGUAGGGCUAUCAAAGAUAGCGCUAUAAGAUGUGUGCUUCGGUAUAUAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.024600334 ubox
1 8 0.005987267 ubox
1 69 0.003249897 ubox
1 71 0.005964927 ubox
1 73 0.005504345 ubox
1 75 0.006318819 ubox
1 78 0.004073137 ubox
1 95 0.066137925 ubox
1 98 0.066629896 ubox
1 101 0.068585621 ubox
1 104 0.069553112 ubox
1 107 0.017575726 ubox
2 7 0.009636720 ubox
2 69 0.005707239 ubox
2 71 0.004992024 ubox
2 75 0.003265229 ubox
2 77 0.004041484 ubox
2 78 0.003975666 ubox
2 95 0.034917636 ubox
2 98 0.035056099 ubox
2 101 0.036052956 ubox
2 104 0.036261023 ubox
2 107 0.011842012 ubox
3 69 0.027156268 ubox
3 71 0.013071665 ubox
3 73 0.005536819 ubox
3 76 0.003895703 ubox
3 77 0.003960860 ubox
4 69 0.024635395 ubox
4 71 0.004880931 ubox
4 76 0.003671371 ubox
5 69 0.105968295 ubox
5 71 0.004927717 ubox
6 41 0.007017717 ubox
6 69 0.076549176 ubox
6 71 0.004194855 ubox
6 73 0.003524060 ubox
7 40 0.008508395 ubox
7 67 0.991529682 ubox
7 70 0.003454166 ubox
7 91 0.009195154 ubox
8 38 0.009168637 ubox
8 39 0.008587561 ubox
8 66 0.997485367 ubox
8 67 0.005857303 ubox
8 68 0.003316140 ubox
8 90 0.008567854 ubox
9 37 0.009559926 ubox
9 38 0.007958916 ubox
9 65 0.998840464 ubox
9 66 0.004958743 ubox
9 89 0.007021223 ubox
10 64 0.999181263 ubox
11 35 0.020016287 ubox
11 63 0.999255141 ubox
12 34 0.021177528 ubox
12 62 0.999448505 ubox
13 32 0.004508904 ubox
13 33 0.021169382 ubox
13 61 0.999721697 ubox
14 31 0.006936561 ubox
14 60 0.997694636 ubox
15 30 0.007768634 ubox
15 31 0.991323681 ubox
15 60 0.005992029 ubox
16 30 0.999884122 ubox
16 31 0.003620347 ubox
17 29 0.999740895 ubox
18 28 0.999973982 ubox
19 27 0.999688010 ubox
20 26 0.998665097 ubox
21 25 0.988900605 ubox
32 43 0.003284745 ubox
32 44 0.996873618 ubox
32 45 0.003829172 ubox
33 40 0.003926487 ubox
33 43 0.999636882 ubox
33 44 0.008188939 ubox
34 39 0.003833232 ubox
34 42 0.999325376 ubox
34 43 0.007232611 ubox
35 41 0.998351646 ubox
36 40 0.988592106 ubox
40 64 0.019398426 ubox
41 63 0.020460175 ubox
42 62 0.021683719 ubox
43 61 0.021815552 ubox
44 59 0.003458449 ubox
45 59 0.999076566 ubox
46 58 0.999970495 ubox
47 57 0.999678918 ubox
48 56 0.999424501 ubox
49 54 0.008322011 ubox
49 55 0.998891902 ubox
50 54 0.990608491 ubox
67 98 0.003515556 ubox
67 101 0.011839621 ubox
67 104 0.016220828 ubox
68 85 0.024137648 ubox
69 84 0.023535302 ubox
69 86 0.879589781 ubox
69 87 0.043426011 ubox
69 88 0.019268211 ubox
69 89 0.013222717 ubox
69 90 0.009485789 ubox
69 91 0.004515435 ubox
69 92 0.005085330 ubox
69 93 0.004221191 ubox
69 94 0.003310024 ubox
69 96 0.022896363 ubox
69 97 0.003404096 ubox
69 99 0.090015956 ubox
69 100 0.008051805 ubox
69 102 0.124629085 ubox
69 103 0.005917764 ubox
69 105 0.034383491 ubox
70 83 0.022079596 ubox
70 85 0.971333811 ubox
70 95 0.025369497 ubox
70 98 0.100733306 ubox
70 101 0.139483768 ubox
70 104 0.038459362 ubox
70 107 0.004111156 ubox
71 82 0.021030867 ubox
71 84 0.977972767 ubox
71 86 0.006824081 ubox
71 94 0.023199821 ubox
71 96 0.042779645 ubox
71 97 0.092939855 ubox
71 99 0.109774456 ubox
71 100 0.103136786 ubox
71 102 0.024247936 ubox
71 103 0.029354712 ubox
71 105 0.011206435 ubox
71 106 0.003209360 ubox
72 78 0.003910943 ubox
72 81 0.018490253 ubox
72 83 0.980225157 ubox
72 85 0.006893833 ubox
72 95 0.057382891 ubox
72 98 0.147225970 ubox
72 101 0.032427609 ubox
72 104 0.012661029 ubox
73 80 0.012031061 ubox
73 82 0.980406679 ubox
73 84 0.006458350 ubox
73 92 0.004659415 ubox
73 93 0.003715689 ubox
73 94 0.055818636 ubox
73 96 0.120356798 ubox
73 97 0.120957463 ubox
73 99 0.011297934 ubox
73 100 0.029330411 ubox
73 102 0.007986580 ubox
73 103 0.011849297 ubox
74 78 0.003329853 ubox
74 81 0.980612634 ubox
74 83 0.005472448 ubox
74 95 0.150841014 ubox
74 98 0.014027709 ubox
74 101 0.009189954 ubox
75 79 0.012176473 ubox
75 80 0.980172983 ubox
75 91 0.032413940 ubox
76 90 0.032212668 ubox
76 91 0.003921377 ubox
76 92 0.005136884 ubox
76 93 0.172991206 ubox
76 94 0.013320024 ubox
76 96 0.003312232 ubox
76 97 0.008621322 ubox
76 100 0.004631983 ubox
77 89 0.029751143 ubox
77 90 0.003838100 ubox
77 91 0.004305044 ubox
77 92 0.183850201 ubox
77 93 0.010338285 ubox
77 96 0.008348702 ubox
77 97 0.003302066 ubox
77 99 0.004494292 ubox
78 91 0.184413227 ubox
79 85 0.006956344 ubox
79 95 0.010528386 ubox
79 98 0.004586304 ubox
80 85 0.004558855 ubox
80 95 0.017073047 ubox
80 98 0.005222896 ubox
81 86 0.015515974 ubox
81 87 0.015604595 ubox
81 88 0.074208949 ubox
81 89 0.015339458 ubox
81 90 0.008765542 ubox
81 94 0.016691170 ubox
81 97 0.005098822 ubox
83 87 0.008138273 ubox
83 88 0.009613706 ubox
83 90 0.007465013 ubox
83 92 0.008173667 ubox
85 90 0.006656259 ubox
85 92 0.004147572 ubox
91 95 0.042251590 ubox
91 98 0.101848493 ubox
91 101 0.044673020 ubox
91 104 0.034566507 ubox
91 107 0.010226937 ubox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
45 59 0.9500000 lbox
46 58 0.9500000 lbox
47 57 0.9500000 lbox
48 56 0.9500000 lbox
49 55 0.9500000 lbox
50 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
