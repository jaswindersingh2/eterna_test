%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (123)
} def

/sequence { (\
GGAAAAACGCACAGCAGAUCCGGGCAAAGCACUUCGGUAGCAGCGCGAGAACGAGCUGAGGCAAAGAGAUCCACCUUCGGGUGGAUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.346904177 ubox
1 10 0.031765389 ubox
1 21 0.017408293 ubox
1 62 0.004351136 ubox
1 95 0.063901972 ubox
1 98 0.065689280 ubox
1 101 0.065863693 ubox
1 104 0.066119430 ubox
1 107 0.016696712 ubox
2 8 0.084167575 ubox
2 10 0.008174219 ubox
2 20 0.017427039 ubox
2 35 0.004628943 ubox
2 62 0.003584763 ubox
2 95 0.033214117 ubox
2 98 0.033459565 ubox
2 101 0.034038061 ubox
2 104 0.033913868 ubox
2 107 0.011068600 ubox
3 19 0.016878987 ubox
3 34 0.004606146 ubox
4 33 0.004281354 ubox
8 14 0.009536637 ubox
8 17 0.004860099 ubox
8 47 0.006980180 ubox
8 60 0.024589355 ubox
8 61 0.040228774 ubox
8 66 0.049759585 ubox
8 68 0.025999256 ubox
8 91 0.035863048 ubox
9 15 0.013127473 ubox
9 25 0.005247342 ubox
9 30 0.020142191 ubox
9 46 0.007132712 ubox
9 62 0.986749752 ubox
9 95 0.005559393 ubox
9 98 0.005845164 ubox
9 101 0.005930096 ubox
9 104 0.005948373 ubox
10 14 0.013051612 ubox
10 24 0.005221107 ubox
10 29 0.020142633 ubox
10 45 0.007131062 ubox
10 58 0.004350196 ubox
10 60 0.093387230 ubox
10 61 0.986202421 ubox
10 91 0.005533546 ubox
12 43 0.006764337 ubox
12 58 0.997898755 ubox
12 60 0.022345408 ubox
13 57 0.998992860 ubox
14 25 0.021343892 ubox
14 41 0.007768458 ubox
14 56 0.999412722 ubox
14 62 0.004074373 ubox
15 24 0.021352823 ubox
15 40 0.007878130 ubox
15 53 0.005733041 ubox
15 55 0.998330093 ubox
15 58 0.009929156 ubox
15 61 0.004065260 ubox
16 57 0.009941173 ubox
17 52 0.921510236 ubox
17 56 0.009846581 ubox
18 38 0.004473242 ubox
19 48 0.032098273 ubox
19 49 0.023244585 ubox
19 50 0.982893753 ubox
19 51 0.046155272 ubox
19 53 0.004103666 ubox
19 54 0.020450899 ubox
20 37 0.012851578 ubox
20 47 0.023128707 ubox
20 49 0.994893117 ubox
20 53 0.019789973 ubox
21 36 0.013299232 ubox
21 45 0.004497895 ubox
21 47 0.997802436 ubox
21 49 0.007426797 ubox
21 53 0.012452076 ubox
22 32 0.003628893 ubox
22 33 0.005858487 ubox
22 35 0.013279734 ubox
22 44 0.004410485 ubox
22 46 0.998388840 ubox
22 52 0.014014066 ubox
23 30 0.003564718 ubox
23 32 0.006995010 ubox
23 34 0.012488495 ubox
23 44 0.007416493 ubox
23 46 0.033956178 ubox
24 30 0.012235513 ubox
24 32 0.003755434 ubox
24 33 0.010456400 ubox
24 41 0.004862333 ubox
24 44 0.999077103 ubox
24 46 0.014660978 ubox
25 29 0.012193231 ubox
25 40 0.004937897 ubox
25 43 0.998714694 ubox
25 45 0.015010335 ubox
25 49 0.013535832 ubox
28 38 0.023186842 ubox
29 35 0.003935408 ubox
29 38 0.100725725 ubox
29 41 0.988179922 ubox
29 46 0.014116954 ubox
30 36 0.030315079 ubox
30 37 0.102266453 ubox
30 40 0.988306792 ubox
30 45 0.014121657 ubox
30 68 0.006057652 ubox
31 38 0.956446411 ubox
32 36 0.038304724 ubox
32 37 0.960615647 ubox
32 40 0.016261956 ubox
32 43 0.014135491 ubox
32 66 0.019136880 ubox
32 68 0.012757938 ubox
33 37 0.016973067 ubox
33 39 0.024104753 ubox
33 42 0.014065492 ubox
33 65 0.019155059 ubox
33 66 0.004712548 ubox
33 67 0.012510621 ubox
33 68 0.008123974 ubox
34 39 0.006853089 ubox
34 48 0.003287022 ubox
34 64 0.018665670 ubox
34 65 0.005963707 ubox
34 66 0.011301288 ubox
34 67 0.009998475 ubox
34 92 0.003358894 ubox
35 40 0.013645488 ubox
35 47 0.003386325 ubox
35 66 0.010329497 ubox
35 91 0.003395404 ubox
36 41 0.004670142 ubox
36 46 0.003372211 ubox
36 62 0.007977959 ubox
37 44 0.003233137 ubox
37 62 0.027051337 ubox
38 60 0.006068264 ubox
38 61 0.026974565 ubox
41 58 0.030583625 ubox
42 57 0.030770767 ubox
43 56 0.030798420 ubox
44 55 0.030738499 ubox
46 53 0.030377412 ubox
47 52 0.029704881 ubox
55 62 0.005374837 ubox
56 61 0.005361714 ubox
58 98 0.003330058 ubox
60 95 0.049240942 ubox
60 98 0.009830346 ubox
60 101 0.003454711 ubox
60 104 0.003186512 ubox
61 95 0.016136520 ubox
61 98 0.003245062 ubox
62 66 0.005631254 ubox
62 68 0.014858762 ubox
62 91 0.013860495 ubox
63 86 0.003838307 ubox
64 86 0.006238155 ubox
65 70 0.003985148 ubox
65 86 0.008650270 ubox
66 86 0.011980192 ubox
66 95 0.024896676 ubox
66 98 0.019961400 ubox
66 101 0.017364052 ubox
66 104 0.014974844 ubox
66 107 0.004541526 ubox
67 86 0.018584779 ubox
68 86 0.051573152 ubox
68 95 0.029553762 ubox
68 98 0.023164576 ubox
68 101 0.018614377 ubox
68 104 0.015921763 ubox
68 107 0.004808037 ubox
69 86 0.956588144 ubox
70 85 0.992956749 ubox
71 84 0.999956637 ubox
72 83 0.999985456 ubox
73 82 0.999785430 ubox
74 80 0.012040585 ubox
74 81 0.999906804 ubox
75 79 0.016609066 ubox
75 80 0.999087663 ubox
75 81 0.003239277 ubox
76 80 0.004117360 ubox
86 90 0.003166062 ubox
86 91 0.003993051 ubox
86 92 0.005525033 ubox
86 93 0.007047970 ubox
86 94 0.003682690 ubox
91 95 0.042952263 ubox
91 98 0.103547667 ubox
91 101 0.045422604 ubox
91 104 0.035147451 ubox
91 107 0.010397929 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
