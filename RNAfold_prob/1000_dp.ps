%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1000)
} def

/sequence { (\
GGAAAACCCAAUGGGAAGCUCAAAGAGCAAGCCUCAACGAGGCACGGUCAAAGACCACGGCAAAGCCAUCGAGCCUUCGGGCUCGAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.022505104 ubox
1 8 0.098318212 ubox
1 9 0.255423065 ubox
1 20 0.004942998 ubox
1 21 0.007709516 ubox
1 45 0.043257432 ubox
1 56 0.017830231 ubox
1 58 0.089548419 ubox
1 61 0.007908307 ubox
1 66 0.004285833 ubox
1 67 0.120034934 ubox
1 69 0.003559162 ubox
1 70 0.011410257 ubox
1 95 0.381620322 ubox
1 98 0.384106260 ubox
1 101 0.392671811 ubox
1 104 0.394437042 ubox
1 107 0.099650879 ubox
2 7 0.101780314 ubox
2 8 0.255252293 ubox
2 9 0.023305802 ubox
2 19 0.007456906 ubox
2 20 0.006442334 ubox
2 21 0.011588281 ubox
2 45 0.031000172 ubox
2 49 0.003635129 ubox
2 55 0.017345908 ubox
2 56 0.004401432 ubox
2 58 0.057200625 ubox
2 61 0.005766045 ubox
2 66 0.119468215 ubox
2 67 0.009912738 ubox
2 69 0.008630277 ubox
2 70 0.022728941 ubox
2 95 0.201238825 ubox
2 98 0.201902987 ubox
2 101 0.206178032 ubox
2 104 0.205404195 ubox
2 107 0.067038729 ubox
3 12 0.004076575 ubox
3 20 0.011389284 ubox
3 48 0.003403575 ubox
3 69 0.022332351 ubox
4 69 0.006946838 ubox
5 12 0.004077612 ubox
5 69 0.006879892 ubox
6 69 0.005847838 ubox
7 13 0.010223526 ubox
7 14 0.154469906 ubox
7 15 0.902200465 ubox
7 42 0.006218177 ubox
7 47 0.003307142 ubox
7 59 0.005305681 ubox
7 60 0.017541346 ubox
7 91 0.040976616 ubox
8 13 0.154136224 ubox
8 14 0.906556965 ubox
8 15 0.230353448 ubox
8 41 0.006245532 ubox
8 46 0.003224182 ubox
8 59 0.017129209 ubox
8 60 0.032666081 ubox
8 91 0.015960596 ubox
9 13 0.900009008 ubox
9 14 0.230720698 ubox
9 15 0.015783624 ubox
9 25 0.003715811 ubox
9 39 0.005320281 ubox
9 59 0.032704163 ubox
9 91 0.027155216 ubox
11 69 0.028884081 ubox
12 17 0.009067977 ubox
12 22 0.010328045 ubox
12 36 0.006918268 ubox
12 57 0.009102811 ubox
12 68 0.042078567 ubox
12 86 0.003498293 ubox
12 87 0.009074564 ubox
12 88 0.009309885 ubox
12 89 0.009035642 ubox
12 90 0.009307483 ubox
12 91 0.003651178 ubox
12 92 0.009593518 ubox
12 93 0.008876184 ubox
12 94 0.007536975 ubox
12 96 0.109124634 ubox
12 97 0.010986949 ubox
12 99 0.113958811 ubox
12 100 0.011402868 ubox
12 102 0.116418641 ubox
12 103 0.011563259 ubox
12 105 0.117095876 ubox
12 106 0.011617055 ubox
13 21 0.011386115 ubox
13 33 0.006517482 ubox
13 34 0.004108286 ubox
13 35 0.007306255 ubox
13 45 0.006455178 ubox
13 56 0.009721016 ubox
13 58 0.013124501 ubox
13 67 0.045286690 ubox
13 95 0.120823289 ubox
13 98 0.126185230 ubox
13 101 0.128918105 ubox
13 104 0.129662485 ubox
13 107 0.016941417 ubox
14 19 0.003391292 ubox
14 20 0.011179421 ubox
14 32 0.006547801 ubox
14 33 0.006563870 ubox
14 34 0.005580401 ubox
14 45 0.010310524 ubox
14 55 0.009595327 ubox
14 56 0.003478919 ubox
14 58 0.015694562 ubox
14 66 0.045028443 ubox
14 67 0.015214578 ubox
14 95 0.050884193 ubox
14 98 0.051100944 ubox
14 101 0.052018071 ubox
14 104 0.050623318 ubox
14 107 0.016294101 ubox
15 19 0.010951334 ubox
15 32 0.006568595 ubox
15 33 0.005551951 ubox
15 45 0.008323761 ubox
15 55 0.003408224 ubox
15 58 0.012176375 ubox
15 66 0.015265228 ubox
15 70 0.004354819 ubox
15 95 0.049728904 ubox
15 98 0.049874838 ubox
15 101 0.050889521 ubox
15 104 0.038227791 ubox
15 107 0.012360899 ubox
16 69 0.005450818 ubox
17 69 0.003631142 ubox
18 28 0.998254265 ubox
18 43 0.003554772 ubox
18 61 0.007469121 ubox
18 95 0.006102212 ubox
18 98 0.005793692 ubox
18 101 0.005825915 ubox
18 104 0.005718299 ubox
19 25 0.005981823 ubox
19 27 0.999356063 ubox
19 41 0.003663988 ubox
19 60 0.007457481 ubox
19 91 0.005581618 ubox
20 24 0.005542838 ubox
20 25 0.006523293 ubox
20 26 0.998578790 ubox
20 40 0.004224402 ubox
20 54 0.003390445 ubox
20 59 0.006537536 ubox
20 90 0.005264078 ubox
20 92 0.009708790 ubox
21 25 0.990196062 ubox
21 39 0.004338891 ubox
21 53 0.003540494 ubox
21 91 0.010229957 ubox
25 35 0.004685349 ubox
25 49 0.006739274 ubox
26 34 0.004692370 ubox
26 48 0.006729048 ubox
27 33 0.004648820 ubox
27 45 0.004710068 ubox
28 46 0.006613969 ubox
28 91 0.004767591 ubox
31 43 0.998809613 ubox
31 45 0.006075301 ubox
32 42 0.999889278 ubox
33 41 0.999877654 ubox
34 39 0.017281822 ubox
34 40 0.994299496 ubox
35 39 0.920220782 ubox
41 67 0.004405967 ubox
42 61 0.003628027 ubox
42 66 0.004410951 ubox
43 60 0.003725931 ubox
43 65 0.004404639 ubox
45 53 0.006662551 ubox
45 59 0.017957357 ubox
45 60 0.007435061 ubox
45 91 0.028317667 ubox
46 55 0.008656109 ubox
46 56 0.998177775 ubox
46 58 0.013039295 ubox
46 67 0.004760540 ubox
47 55 0.999291556 ubox
47 56 0.006157230 ubox
47 58 0.011032690 ubox
47 61 0.008401704 ubox
47 66 0.004761859 ubox
48 53 0.008320085 ubox
48 54 0.998534679 ubox
48 57 0.010894283 ubox
48 60 0.008412555 ubox
48 65 0.004470088 ubox
49 53 0.990131380 ubox
49 59 0.008400456 ubox
53 58 0.003654985 ubox
57 69 0.042447975 ubox
58 65 0.050380166 ubox
58 91 0.019534312 ubox
59 66 0.019064867 ubox
59 67 0.988169215 ubox
59 95 0.008526536 ubox
59 98 0.004872550 ubox
60 66 0.989244557 ubox
60 67 0.007594161 ubox
60 95 0.006168693 ubox
61 65 0.982086155 ubox
66 91 0.006269239 ubox
67 91 0.005360605 ubox
69 86 0.931661514 ubox
69 87 0.042735507 ubox
69 88 0.009296949 ubox
69 89 0.006646776 ubox
69 90 0.004794059 ubox
69 92 0.004432069 ubox
70 85 0.998305733 ubox
70 91 0.003951201 ubox
71 84 0.999958335 ubox
72 83 0.999843734 ubox
73 82 0.999986827 ubox
74 80 0.011631059 ubox
74 81 0.999916729 ubox
75 79 0.016317782 ubox
75 80 0.999092077 ubox
75 81 0.003223177 ubox
76 80 0.004106414 ubox
85 95 0.004102695 ubox
91 95 0.071235225 ubox
91 98 0.144256505 ubox
91 101 0.047419424 ubox
91 104 0.015806998 ubox
91 107 0.003873295 ubox
1 95 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
