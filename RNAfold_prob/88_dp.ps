%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (88)
} def

/sequence { (\
GGAAAAGGCGACGAUAGGAAACUAUCGGUGCGGGUGGAAACACCACUACGAAAGUAGCGUGCCGUCGCGGGCGACUUCGGUCGUCCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 63 0.007183903 ubox
1 68 0.004699906 ubox
1 86 0.010115109 ubox
1 95 0.067191457 ubox
1 98 0.067914633 ubox
1 101 0.072256900 ubox
1 104 0.072682906 ubox
1 107 0.018381218 ubox
2 62 0.007169706 ubox
2 66 0.005110666 ubox
2 68 0.004700792 ubox
2 85 0.009664407 ubox
2 95 0.035470306 ubox
2 98 0.035816652 ubox
2 101 0.036877313 ubox
2 104 0.036754503 ubox
2 107 0.011998164 ubox
3 65 0.004900448 ubox
3 84 0.006425516 ubox
7 58 0.003402623 ubox
7 63 0.009051722 ubox
7 66 0.012726741 ubox
7 68 0.038724738 ubox
7 85 0.003487416 ubox
7 86 0.003325920 ubox
7 95 0.061196062 ubox
7 98 0.061328293 ubox
7 101 0.059350896 ubox
7 104 0.058895378 ubox
7 107 0.020554718 ubox
8 31 0.026999731 ubox
8 62 0.009039058 ubox
8 65 0.012802902 ubox
8 68 0.997793326 ubox
8 84 0.003588387 ubox
9 30 0.027042447 ubox
9 61 0.009022245 ubox
9 64 0.012822959 ubox
9 67 0.999421012 ubox
9 83 0.004214645 ubox
10 29 0.018344845 ubox
10 60 0.006446885 ubox
10 63 0.011824139 ubox
10 66 0.999444032 ubox
10 82 0.004214761 ubox
11 65 0.999020454 ubox
11 81 0.004199738 ubox
12 27 0.037502854 ubox
12 64 0.997493105 ubox
12 80 0.004133404 ubox
13 26 0.985471085 ubox
13 62 0.006651277 ubox
13 63 0.160493066 ubox
14 25 0.986626759 ubox
15 24 0.986587853 ubox
15 61 0.152808611 ubox
16 23 0.986727945 ubox
16 60 0.157689379 ubox
17 22 0.986130496 ubox
17 23 0.005913471 ubox
17 58 0.004689456 ubox
18 22 0.009126360 ubox
18 26 0.004718688 ubox
18 58 0.159284645 ubox
19 25 0.004527778 ubox
21 55 0.158650607 ubox
22 54 0.159666866 ubox
22 57 0.003446918 ubox
23 52 0.003225575 ubox
23 53 0.157060020 ubox
23 56 0.003451786 ubox
24 55 0.003432386 ubox
25 51 0.156797445 ubox
25 52 0.010582215 ubox
26 50 0.158602781 ubox
26 64 0.011827169 ubox
27 47 0.005904728 ubox
27 49 0.149543426 ubox
27 63 0.985145570 ubox
28 46 0.012586177 ubox
28 47 0.006250875 ubox
28 49 0.055265295 ubox
28 62 0.986594740 ubox
28 63 0.005923239 ubox
29 45 0.012583524 ubox
29 48 0.075463526 ubox
29 61 0.984594775 ubox
30 44 0.007302132 ubox
30 46 0.082254268 ubox
30 47 0.071745736 ubox
30 58 0.004740526 ubox
30 60 0.984555304 ubox
30 62 0.005905547 ubox
31 57 0.004521690 ubox
31 59 0.986527013 ubox
31 61 0.005941506 ubox
32 43 0.003223629 ubox
32 44 0.028798635 ubox
32 46 0.057018116 ubox
32 58 0.974786226 ubox
32 60 0.004531866 ubox
33 41 0.003301604 ubox
33 43 0.024756160 ubox
33 44 0.996865635 ubox
33 47 0.041985325 ubox
34 41 0.019299333 ubox
34 43 0.998204348 ubox
34 44 0.003565074 ubox
34 46 0.049317419 ubox
34 68 0.004267612 ubox
35 40 0.019179227 ubox
35 42 0.998079333 ubox
35 45 0.052213859 ubox
35 67 0.004273032 ubox
36 41 0.997629007 ubox
36 44 0.053111970 ubox
36 66 0.004271875 ubox
37 41 0.007352331 ubox
37 43 0.052967086 ubox
37 65 0.004172671 ubox
41 61 0.004918521 ubox
42 60 0.004931271 ubox
43 59 0.004561212 ubox
45 55 0.039236366 ubox
46 54 0.041204564 ubox
46 57 0.977965027 ubox
47 53 0.040269141 ubox
47 56 0.984233846 ubox
47 57 0.003261550 ubox
48 55 0.985164144 ubox
48 60 0.003726988 ubox
49 54 0.984973604 ubox
49 57 0.010054648 ubox
49 59 0.003826463 ubox
49 79 0.003264154 ubox
50 58 0.003963856 ubox
50 78 0.003384752 ubox
53 76 0.003265862 ubox
54 62 0.003180790 ubox
54 75 0.003806051 ubox
55 61 0.003168161 ubox
55 74 0.003524647 ubox
57 68 0.017628393 ubox
57 72 0.003923695 ubox
58 64 0.003390653 ubox
58 67 0.018474185 ubox
58 69 0.004019557 ubox
58 71 0.004196091 ubox
59 63 0.003313784 ubox
59 66 0.018372559 ubox
59 68 0.010085583 ubox
59 95 0.003437065 ubox
59 98 0.006117032 ubox
60 67 0.010064339 ubox
60 69 0.004251866 ubox
60 94 0.003415822 ubox
60 97 0.006053083 ubox
61 66 0.009594289 ubox
61 68 0.010706115 ubox
62 67 0.010684430 ubox
64 75 0.003589139 ubox
64 95 0.003184987 ubox
65 74 0.003608996 ubox
65 92 0.007721697 ubox
66 73 0.003610639 ubox
66 91 0.008013770 ubox
67 72 0.003517238 ubox
68 91 0.003567570 ubox
69 85 0.003277177 ubox
69 86 0.998484775 ubox
70 85 0.999535602 ubox
70 86 0.026173394 ubox
71 84 0.999282073 ubox
71 85 0.026073374 ubox
72 83 0.999953865 ubox
73 82 0.999953120 ubox
74 81 0.999676831 ubox
75 79 0.011787521 ubox
75 80 0.998681958 ubox
76 80 0.004029264 ubox
86 91 0.006028071 ubox
91 95 0.043677583 ubox
91 98 0.104550132 ubox
91 101 0.045554222 ubox
91 104 0.035003990 ubox
91 107 0.010347175 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
29 61 0.9500000 lbox
30 60 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
