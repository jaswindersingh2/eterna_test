%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (204)
} def

/sequence { (\
GGAAAAGUUUGAUUCAGUUACAUGAAAAUGAUAACAAAAUUAGAUAGGAAACUACUAAAGAAUUGAACGUAUUAGUUCGCUAAUACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 52 0.005085636 ubox
1 53 0.003677508 ubox
1 68 0.005125700 ubox
1 78 0.005306879 ubox
1 86 0.004564523 ubox
1 95 0.067416138 ubox
1 98 0.067891221 ubox
1 101 0.069905900 ubox
1 104 0.070724565 ubox
1 107 0.017777535 ubox
2 15 0.006494687 ubox
2 52 0.003888684 ubox
2 68 0.005482244 ubox
2 73 0.005572464 ubox
2 77 0.005292973 ubox
2 78 0.005338151 ubox
2 95 0.035582492 ubox
2 98 0.035745950 ubox
2 101 0.036570998 ubox
2 104 0.036613624 ubox
2 107 0.011880222 ubox
3 14 0.006490181 ubox
3 72 0.005591553 ubox
3 76 0.005196358 ubox
3 77 0.005335064 ubox
4 13 0.006285021 ubox
4 76 0.005164348 ubox
5 70 0.005501013 ubox
6 70 0.003635264 ubox
7 45 0.039545621 ubox
7 63 0.003246371 ubox
7 68 0.994584230 ubox
7 95 0.024204039 ubox
7 98 0.030968012 ubox
7 101 0.026965870 ubox
7 104 0.014343959 ubox
7 107 0.004416264 ubox
8 44 0.042786117 ubox
8 62 0.003243379 ubox
8 67 0.995828750 ubox
8 89 0.003450903 ubox
8 94 0.023959557 ubox
8 97 0.026092403 ubox
8 100 0.026097901 ubox
8 103 0.013642304 ubox
8 106 0.004184659 ubox
9 43 0.043658237 ubox
9 66 0.995905690 ubox
9 67 0.004521031 ubox
9 88 0.003821568 ubox
9 93 0.023042132 ubox
9 96 0.019097323 ubox
9 97 0.031242068 ubox
9 99 0.018316335 ubox
9 100 0.005643727 ubox
9 102 0.009964004 ubox
9 103 0.004537799 ubox
9 106 0.003591868 ubox
10 42 0.044285152 ubox
10 65 0.991697386 ubox
10 66 0.005217422 ubox
10 87 0.003888774 ubox
10 92 0.021591185 ubox
10 96 0.041546799 ubox
10 99 0.007477337 ubox
10 102 0.005805308 ubox
10 105 0.004276095 ubox
11 41 0.044769347 ubox
11 64 0.992151785 ubox
11 68 0.007604575 ubox
11 86 0.003718412 ubox
11 95 0.045268422 ubox
11 98 0.008101236 ubox
11 101 0.006451875 ubox
11 104 0.004443929 ubox
12 40 0.045164420 ubox
12 63 0.996663817 ubox
13 26 0.006635501 ubox
13 39 0.045306760 ubox
13 61 0.003579010 ubox
13 62 0.996449545 ubox
13 67 0.012143158 ubox
13 89 0.007148872 ubox
13 93 0.044335314 ubox
14 25 0.008293287 ubox
14 38 0.044822513 ubox
14 60 0.004533396 ubox
14 61 0.996738749 ubox
14 66 0.013832776 ubox
14 88 0.006473239 ubox
14 92 0.045918863 ubox
15 24 0.008736941 ubox
15 60 0.995873071 ubox
15 65 0.014022018 ubox
15 91 0.045952874 ubox
16 23 0.009023950 ubox
16 40 0.005995569 ubox
16 53 0.006311241 ubox
16 56 0.007594826 ubox
16 64 0.013442928 ubox
17 29 0.004939085 ubox
17 32 0.026635115 ubox
17 35 0.994216676 ubox
17 52 0.006365306 ubox
17 55 0.007322026 ubox
17 63 0.009490096 ubox
18 25 0.003661157 ubox
18 27 0.003939174 ubox
18 28 0.005265549 ubox
18 31 0.026978674 ubox
18 33 0.010451382 ubox
18 34 0.995086370 ubox
18 51 0.006335823 ubox
18 54 0.006898799 ubox
18 59 0.003489315 ubox
18 62 0.009406661 ubox
19 24 0.003710731 ubox
19 26 0.004344593 ubox
19 27 0.005213048 ubox
19 30 0.025178736 ubox
19 31 0.015801635 ubox
19 33 0.994610928 ubox
19 34 0.004339760 ubox
19 50 0.005956395 ubox
19 58 0.003166963 ubox
19 61 0.008798441 ubox
20 29 0.024316593 ubox
20 32 0.988996918 ubox
21 30 0.997712589 ubox
21 48 0.004811025 ubox
22 29 0.994773738 ubox
22 32 0.011409677 ubox
23 27 0.010737028 ubox
23 28 0.983477592 ubox
23 30 0.006785621 ubox
23 31 0.015834533 ubox
23 36 0.005808401 ubox
24 29 0.004196504 ubox
24 35 0.006411250 ubox
25 29 0.008661408 ubox
29 36 0.012118682 ubox
29 38 0.003368518 ubox
29 39 0.003351611 ubox
29 42 0.009202101 ubox
30 35 0.013463028 ubox
30 41 0.009600941 ubox
31 40 0.010787865 ubox
32 37 0.003505205 ubox
32 38 0.003235920 ubox
32 39 0.010971342 ubox
35 65 0.004007377 ubox
36 40 0.009777066 ubox
36 41 0.008175864 ubox
36 64 0.004683796 ubox
37 41 0.005027418 ubox
37 63 0.004494805 ubox
38 64 0.007621301 ubox
39 45 0.003846126 ubox
39 56 0.008922159 ubox
39 63 0.008100122 ubox
40 44 0.004073806 ubox
40 49 0.004494302 ubox
40 57 0.019743947 ubox
40 58 0.850437015 ubox
40 59 0.058590207 ubox
40 62 0.007638066 ubox
41 48 0.004732512 ubox
41 54 0.032675053 ubox
41 57 0.977703770 ubox
41 58 0.049020462 ubox
41 59 0.010532887 ubox
41 61 0.006775405 ubox
42 53 0.034844324 ubox
42 56 0.989481533 ubox
43 52 0.035025606 ubox
43 55 0.990303805 ubox
43 56 0.027064961 ubox
44 53 0.014466366 ubox
44 56 0.014521926 ubox
45 50 0.007495330 ubox
45 51 0.006321123 ubox
45 54 0.987534282 ubox
45 57 0.069933116 ubox
45 58 0.004339291 ubox
46 53 0.994058002 ubox
46 56 0.075135346 ubox
47 52 0.993906200 ubox
47 53 0.019660755 ubox
47 55 0.075621318 ubox
47 56 0.017184483 ubox
48 52 0.020826288 ubox
48 53 0.003897573 ubox
48 55 0.017814190 ubox
49 53 0.004499540 ubox
52 60 0.006741738 ubox
53 59 0.006778647 ubox
56 65 0.004689619 ubox
56 82 0.004219318 ubox
57 64 0.005119473 ubox
57 81 0.004349233 ubox
58 63 0.004427358 ubox
59 81 0.004864330 ubox
60 68 0.006423989 ubox
60 78 0.011835096 ubox
60 80 0.005028027 ubox
60 95 0.005778157 ubox
61 77 0.011849478 ubox
62 76 0.011850482 ubox
62 81 0.003967629 ubox
63 75 0.011845408 ubox
63 90 0.004717933 ubox
63 92 0.010052011 ubox
63 93 0.003870613 ubox
64 74 0.011821941 ubox
64 79 0.015848052 ubox
64 89 0.005337110 ubox
64 90 0.004754465 ubox
64 91 0.010754404 ubox
64 92 0.004352430 ubox
65 73 0.011781526 ubox
65 78 0.021533830 ubox
66 72 0.011215001 ubox
66 77 0.021546006 ubox
67 76 0.021548237 ubox
68 75 0.021552659 ubox
68 91 0.003676614 ubox
69 86 0.997705480 ubox
69 95 0.004339398 ubox
69 98 0.004423256 ubox
69 101 0.006306642 ubox
69 104 0.003470833 ubox
70 85 0.998917142 ubox
70 94 0.003673899 ubox
70 97 0.003947368 ubox
70 100 0.005977090 ubox
71 84 0.998932656 ubox
72 83 0.998516204 ubox
73 82 0.998747966 ubox
74 81 0.998516353 ubox
75 80 0.990308710 ubox
75 81 0.003218304 ubox
75 86 0.005005460 ubox
75 95 0.009101171 ubox
75 98 0.004771416 ubox
76 85 0.004992161 ubox
76 93 0.008573070 ubox
76 94 0.007861271 ubox
76 97 0.004712184 ubox
77 92 0.010244163 ubox
77 93 0.006254580 ubox
77 96 0.004233554 ubox
78 91 0.011227447 ubox
79 86 0.003353521 ubox
80 91 0.009043245 ubox
81 88 0.003589988 ubox
81 90 0.009045332 ubox
86 91 0.005975890 ubox
91 95 0.042998783 ubox
91 98 0.103646812 ubox
91 101 0.045462486 ubox
91 104 0.035178312 ubox
91 107 0.010407857 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
10 65 0.9500000 lbox
11 64 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
