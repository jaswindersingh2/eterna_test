%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (448)
} def

/sequence { (\
GGAAAAGUGUUUGUGAGUCAAAAGACCUGAAAACAGCACAAAAGAUUCGAAAACGAAUCAAACACAAAGCGGCUUUUCGAAGCCGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.011614659 ubox
1 10 0.004427794 ubox
1 34 0.004644168 ubox
1 37 0.005039421 ubox
1 39 0.040229088 ubox
1 59 0.006268110 ubox
1 63 0.037492854 ubox
1 65 0.039770729 ubox
1 86 0.003588745 ubox
1 95 0.088436071 ubox
1 98 0.089504961 ubox
1 101 0.110696662 ubox
1 104 0.135882826 ubox
1 107 0.032845379 ubox
2 8 0.005526105 ubox
2 11 0.005758220 ubox
2 12 0.003895334 ubox
2 37 0.008601635 ubox
2 39 0.026071147 ubox
2 58 0.005479061 ubox
2 59 0.016265637 ubox
2 63 0.025071274 ubox
2 65 0.019250027 ubox
2 78 0.014689559 ubox
2 95 0.046606472 ubox
2 98 0.047424631 ubox
2 101 0.060304740 ubox
2 104 0.058433957 ubox
2 107 0.019870149 ubox
3 8 0.008923102 ubox
3 10 0.006364995 ubox
3 11 0.004861125 ubox
3 12 0.005217289 ubox
3 58 0.015919277 ubox
3 77 0.014741631 ubox
4 8 0.004815012 ubox
4 10 0.005176948 ubox
4 11 0.006159314 ubox
4 76 0.014739085 ubox
5 10 0.005886700 ubox
5 11 0.003768734 ubox
5 75 0.014748874 ubox
6 10 0.003379331 ubox
6 28 0.008480166 ubox
6 74 0.014769696 ubox
7 26 0.016300314 ubox
7 27 0.008535191 ubox
7 34 0.020913130 ubox
7 37 0.126537589 ubox
7 39 0.492980167 ubox
7 54 0.003765103 ubox
7 59 0.003523232 ubox
7 63 0.026530172 ubox
7 65 0.652202020 ubox
7 70 0.003571866 ubox
7 73 0.014773804 ubox
7 95 0.072535998 ubox
7 98 0.174922105 ubox
7 101 0.152844084 ubox
7 104 0.182709523 ubox
7 107 0.064769467 ubox
8 25 0.016389430 ubox
8 33 0.020504733 ubox
8 35 0.181589786 ubox
8 36 0.075558072 ubox
8 38 0.493266271 ubox
8 40 0.038663083 ubox
8 42 0.003413931 ubox
8 43 0.014609635 ubox
8 53 0.003700498 ubox
8 55 0.027609706 ubox
8 62 0.025170769 ubox
8 64 0.652981292 ubox
8 66 0.021372923 ubox
8 68 0.005564568 ubox
8 69 0.003521915 ubox
8 71 0.009299834 ubox
8 72 0.011370296 ubox
8 87 0.003926403 ubox
8 88 0.005358962 ubox
8 89 0.004970120 ubox
8 90 0.005171359 ubox
8 91 0.003564323 ubox
8 92 0.008868873 ubox
8 93 0.005867897 ubox
8 94 0.069386054 ubox
8 96 0.208302813 ubox
8 97 0.132017047 ubox
8 99 0.134947799 ubox
8 100 0.130785651 ubox
8 102 0.163962924 ubox
8 103 0.153509491 ubox
8 105 0.142441606 ubox
8 106 0.054346355 ubox
9 26 0.010443714 ubox
9 34 0.213671930 ubox
9 37 0.493239928 ubox
9 39 0.044712171 ubox
9 54 0.033155962 ubox
9 58 0.004936646 ubox
9 63 0.653151144 ubox
9 65 0.023934842 ubox
9 70 0.013465437 ubox
9 95 0.248176916 ubox
9 98 0.162382568 ubox
9 101 0.200481434 ubox
9 104 0.161116096 ubox
9 107 0.020019101 ubox
10 22 0.013313601 ubox
10 23 0.015729788 ubox
10 25 0.010460767 ubox
10 31 0.018480205 ubox
10 32 0.024661875 ubox
10 33 0.214255177 ubox
10 35 0.007704846 ubox
10 36 0.418016609 ubox
10 38 0.044333474 ubox
10 41 0.007379982 ubox
10 42 0.225917902 ubox
10 43 0.018268343 ubox
10 53 0.033157224 ubox
10 57 0.006537199 ubox
10 60 0.003701181 ubox
10 61 0.018915028 ubox
10 62 0.625695866 ubox
10 64 0.019745539 ubox
10 67 0.007202419 ubox
10 68 0.222514810 ubox
10 69 0.011744081 ubox
10 89 0.003912883 ubox
10 90 0.008431193 ubox
10 91 0.006339051 ubox
10 92 0.014364823 ubox
10 93 0.009875984 ubox
10 94 0.242489427 ubox
10 96 0.004505690 ubox
10 97 0.140640132 ubox
10 99 0.009094269 ubox
10 100 0.179075807 ubox
10 102 0.008918036 ubox
10 103 0.145822294 ubox
10 105 0.003970905 ubox
10 106 0.018396737 ubox
11 21 0.022129777 ubox
11 22 0.015848981 ubox
11 24 0.010394536 ubox
11 29 0.003651798 ubox
11 30 0.031129371 ubox
11 31 0.050418560 ubox
11 32 0.217886925 ubox
11 33 0.056727160 ubox
11 35 0.304282469 ubox
11 36 0.261571701 ubox
11 40 0.008768416 ubox
11 41 0.373596665 ubox
11 42 0.024491452 ubox
11 43 0.008262636 ubox
11 52 0.033011028 ubox
11 56 0.008881865 ubox
11 60 0.018806075 ubox
11 61 0.552053349 ubox
11 62 0.013462491 ubox
11 66 0.006210244 ubox
11 67 0.268199394 ubox
11 68 0.013655242 ubox
11 88 0.004042193 ubox
11 89 0.007957963 ubox
11 90 0.006497199 ubox
11 91 0.014066018 ubox
11 92 0.011264162 ubox
11 93 0.227739941 ubox
11 94 0.006555920 ubox
11 96 0.097652450 ubox
11 97 0.123884829 ubox
11 99 0.125931192 ubox
11 100 0.134822032 ubox
11 102 0.102124188 ubox
11 103 0.068685269 ubox
11 105 0.012988539 ubox
11 106 0.029269228 ubox
12 16 0.004367392 ubox
12 20 0.028514927 ubox
12 21 0.015852345 ubox
12 22 0.003454123 ubox
12 23 0.010048952 ubox
12 25 0.004263685 ubox
12 29 0.033994238 ubox
12 30 0.061387307 ubox
12 31 0.215963040 ubox
12 32 0.072764780 ubox
12 33 0.050404377 ubox
12 35 0.371772747 ubox
12 36 0.003274886 ubox
12 38 0.037539284 ubox
12 40 0.481136571 ubox
12 41 0.022227632 ubox
12 42 0.006093639 ubox
12 50 0.003419328 ubox
12 51 0.031347009 ubox
12 55 0.009872576 ubox
12 60 0.455833594 ubox
12 61 0.016270385 ubox
12 64 0.011477767 ubox
12 66 0.288587760 ubox
12 67 0.010817631 ubox
12 87 0.003455246 ubox
12 88 0.006865617 ubox
12 89 0.005961199 ubox
12 90 0.011337077 ubox
12 91 0.010384429 ubox
12 92 0.209864563 ubox
12 93 0.007048267 ubox
12 94 0.005951841 ubox
12 96 0.160201886 ubox
12 97 0.009092854 ubox
12 99 0.170687556 ubox
12 100 0.007711441 ubox
12 102 0.090569946 ubox
12 105 0.034888385 ubox
13 19 0.032628642 ubox
13 26 0.021119789 ubox
13 27 0.013039711 ubox
13 28 0.030673128 ubox
13 34 0.457272050 ubox
13 37 0.056815328 ubox
13 39 0.552802685 ubox
13 54 0.010804281 ubox
13 58 0.004536107 ubox
13 59 0.215370763 ubox
13 63 0.015267588 ubox
13 65 0.298058972 ubox
13 95 0.174491196 ubox
13 98 0.187401696 ubox
13 101 0.105924716 ubox
13 104 0.036325750 ubox
14 20 0.013436269 ubox
14 21 0.008873321 ubox
14 22 0.004797503 ubox
14 23 0.008093757 ubox
14 25 0.021015853 ubox
14 29 0.085614165 ubox
14 30 0.154570144 ubox
14 31 0.029167297 ubox
14 32 0.041832045 ubox
14 33 0.446130069 ubox
14 35 0.018873314 ubox
14 36 0.055024200 ubox
14 38 0.552727285 ubox
14 40 0.015862910 ubox
14 49 0.157372744 ubox
14 50 0.013628535 ubox
14 51 0.004051894 ubox
14 52 0.003472243 ubox
14 53 0.010084928 ubox
14 55 0.004138363 ubox
14 56 0.004224529 ubox
14 57 0.018012269 ubox
14 60 0.012840625 ubox
14 61 0.003345630 ubox
14 62 0.014811261 ubox
14 64 0.297883692 ubox
14 66 0.005424127 ubox
14 88 0.005710789 ubox
14 89 0.011581466 ubox
14 90 0.161213970 ubox
14 91 0.007675193 ubox
14 92 0.004372522 ubox
14 93 0.009327051 ubox
14 94 0.168927484 ubox
14 96 0.073264322 ubox
14 97 0.173205364 ubox
14 99 0.043823495 ubox
14 100 0.097988270 ubox
14 102 0.012975978 ubox
14 103 0.033558259 ubox
14 105 0.003299882 ubox
15 19 0.015178142 ubox
15 26 0.007471112 ubox
15 27 0.262892043 ubox
15 28 0.138390834 ubox
15 34 0.021758080 ubox
15 37 0.550939497 ubox
15 39 0.018326011 ubox
15 48 0.165053311 ubox
15 58 0.004366319 ubox
15 59 0.011519337 ubox
15 63 0.296535649 ubox
15 65 0.008074822 ubox
15 95 0.094827932 ubox
15 98 0.054707383 ubox
15 101 0.017362433 ubox
15 104 0.003705099 ubox
16 28 0.199482771 ubox
16 47 0.165075044 ubox
16 58 0.009082210 ubox
17 26 0.886667628 ubox
17 27 0.145462548 ubox
17 28 0.011136765 ubox
17 34 0.061788143 ubox
17 37 0.009719120 ubox
17 39 0.008938442 ubox
17 46 0.165163366 ubox
17 54 0.005010294 ubox
17 63 0.004317637 ubox
17 95 0.027266072 ubox
17 98 0.015170285 ubox
17 101 0.005317362 ubox
18 23 0.005706605 ubox
18 24 0.004912904 ubox
18 25 0.900562626 ubox
18 29 0.009758401 ubox
18 30 0.338150101 ubox
18 31 0.017946435 ubox
18 32 0.009388705 ubox
18 33 0.050487478 ubox
18 35 0.006845676 ubox
18 36 0.008263096 ubox
18 38 0.008579043 ubox
18 45 0.165295469 ubox
18 53 0.004745414 ubox
18 60 0.006201462 ubox
18 62 0.004347632 ubox
18 89 0.003351483 ubox
18 90 0.006617757 ubox
18 92 0.071167931 ubox
18 93 0.007002820 ubox
18 94 0.024858863 ubox
18 97 0.014089847 ubox
18 100 0.004951041 ubox
19 24 0.899689871 ubox
19 29 0.345894787 ubox
19 36 0.008137676 ubox
19 44 0.164929099 ubox
19 91 0.071956272 ubox
20 28 0.330801729 ubox
21 28 0.029963746 ubox
22 28 0.016352804 ubox
23 28 0.023880854 ubox
24 28 0.014386063 ubox
24 34 0.004164298 ubox
24 37 0.022879902 ubox
24 39 0.111806869 ubox
24 48 0.004615780 ubox
25 47 0.004442113 ubox
26 36 0.013091775 ubox
27 36 0.748617129 ubox
27 44 0.020842744 ubox
27 91 0.006844878 ubox
28 32 0.007799994 ubox
28 33 0.024893115 ubox
28 35 0.758468658 ubox
28 36 0.011173298 ubox
28 38 0.064877353 ubox
28 40 0.050792713 ubox
28 41 0.010292302 ubox
28 42 0.009315988 ubox
28 43 0.022319390 ubox
28 90 0.006599752 ubox
28 96 0.003648559 ubox
29 34 0.755801571 ubox
29 37 0.073745233 ubox
29 39 0.055074453 ubox
29 48 0.003362661 ubox
29 95 0.003955808 ubox
30 47 0.003326121 ubox
34 44 0.005644307 ubox
36 63 0.004242443 ubox
36 65 0.009476159 ubox
36 95 0.006204025 ubox
36 98 0.005920466 ubox
36 101 0.005949806 ubox
36 104 0.005926265 ubox
37 44 0.034479586 ubox
37 91 0.009503921 ubox
39 44 0.025189332 ubox
39 91 0.009462105 ubox
44 58 0.007807816 ubox
44 59 0.974149974 ubox
44 63 0.003636640 ubox
45 58 0.983693962 ubox
46 57 0.984486074 ubox
47 56 0.985743948 ubox
48 55 0.986105835 ubox
49 54 0.960636216 ubox
49 59 0.005244566 ubox
50 58 0.005381744 ubox
63 69 0.004148970 ubox
63 91 0.041816327 ubox
65 91 0.053594322 ubox
69 86 0.998739103 ubox
70 85 0.999813003 ubox
71 84 0.999867788 ubox
72 83 0.999885105 ubox
73 82 0.999855687 ubox
74 79 0.004779667 ubox
74 80 0.040201539 ubox
74 81 0.985851936 ubox
74 82 0.004656717 ubox
75 79 0.051400465 ubox
75 80 0.857282345 ubox
75 81 0.031781919 ubox
76 80 0.037468071 ubox
76 81 0.005212600 ubox
84 91 0.003869806 ubox
86 91 0.006422339 ubox
91 95 0.047031145 ubox
91 98 0.103129738 ubox
91 101 0.042193162 ubox
91 104 0.031132772 ubox
91 107 0.009183188 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
