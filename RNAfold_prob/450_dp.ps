%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (450)
} def

/sequence { (\
GGAAAACUAUGGGGGGCGGAAAACCGAUGAAAACAUCCCUAAAGAGAUCAAAAGAUCUCCCAUAGAAAUUUCGGAUUCGUCCGAAAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.023529919 ubox
1 8 0.007965065 ubox
1 38 0.004133625 ubox
1 61 0.027393758 ubox
1 69 0.011572005 ubox
1 70 0.007586009 ubox
1 71 0.010935554 ubox
1 72 0.027470531 ubox
1 82 0.004700827 ubox
1 95 0.067451228 ubox
1 98 0.067857515 ubox
1 101 0.069366203 ubox
1 104 0.069683888 ubox
1 107 0.017594669 ubox
2 7 0.010767070 ubox
2 37 0.004148467 ubox
2 60 0.027347920 ubox
2 69 0.017470661 ubox
2 70 0.039787407 ubox
2 71 0.031690503 ubox
2 72 0.045315205 ubox
2 81 0.004695980 ubox
2 95 0.035528733 ubox
2 98 0.035635496 ubox
2 101 0.036391244 ubox
2 104 0.036257278 ubox
2 107 0.011831433 ubox
3 36 0.004026403 ubox
3 69 0.047863562 ubox
3 70 0.036255326 ubox
3 71 0.047389620 ubox
3 80 0.004516284 ubox
4 69 0.037515214 ubox
4 70 0.051855447 ubox
4 71 0.008046943 ubox
5 69 0.055304834 ubox
5 70 0.014672058 ubox
6 69 0.019114000 ubox
6 70 0.004918826 ubox
7 44 0.005943377 ubox
7 65 0.991844328 ubox
7 91 0.008300910 ubox
8 29 0.003375935 ubox
8 41 0.004533811 ubox
8 42 0.003728708 ubox
8 43 0.009584156 ubox
8 64 0.997958185 ubox
8 65 0.004170784 ubox
8 90 0.007494077 ubox
9 28 0.003668533 ubox
9 40 0.004518680 ubox
9 63 0.998359019 ubox
10 27 0.003675022 ubox
10 41 0.031626523 ubox
10 42 0.004039940 ubox
10 62 0.998477492 ubox
10 96 0.004687835 ubox
10 99 0.005148198 ubox
10 102 0.005260526 ubox
10 105 0.005301100 ubox
11 39 0.012604620 ubox
11 40 0.034758312 ubox
11 60 0.006934166 ubox
11 61 0.998593145 ubox
11 95 0.005163961 ubox
11 98 0.005694293 ubox
11 101 0.005822516 ubox
11 104 0.005869448 ubox
12 17 0.003417375 ubox
12 25 0.011050636 ubox
12 38 0.013149169 ubox
12 39 0.042728965 ubox
12 40 0.116957908 ubox
12 59 0.004616691 ubox
12 60 0.989693368 ubox
12 61 0.021814012 ubox
13 17 0.009529500 ubox
13 24 0.012653242 ubox
13 25 0.159789450 ubox
13 34 0.004364194 ubox
13 37 0.013506246 ubox
13 38 0.049125327 ubox
13 39 0.435540477 ubox
13 40 0.614527463 ubox
13 59 0.493636451 ubox
13 60 0.029583250 ubox
13 61 0.003356610 ubox
14 24 0.159353676 ubox
14 25 0.509812685 ubox
14 28 0.007173220 ubox
14 34 0.004236430 ubox
14 36 0.012479994 ubox
14 37 0.047539797 ubox
14 38 0.437707086 ubox
14 39 0.658039310 ubox
14 40 0.112498175 ubox
14 57 0.005647215 ubox
14 58 0.159401008 ubox
14 59 0.015288441 ubox
14 60 0.003674840 ubox
14 82 0.007094877 ubox
15 24 0.510497521 ubox
15 25 0.118844074 ubox
15 28 0.011895544 ubox
15 34 0.003552324 ubox
15 36 0.036313478 ubox
15 37 0.436273046 ubox
15 38 0.658213924 ubox
15 39 0.116495597 ubox
15 40 0.030641241 ubox
15 57 0.135294347 ubox
15 58 0.007911797 ubox
15 81 0.007108772 ubox
16 24 0.118802341 ubox
16 25 0.030404379 ubox
16 28 0.044457296 ubox
16 34 0.030196339 ubox
16 36 0.395120087 ubox
16 37 0.647559525 ubox
16 38 0.115876293 ubox
16 39 0.031717939 ubox
16 40 0.005328462 ubox
16 56 0.087354133 ubox
16 57 0.004803619 ubox
16 80 0.007116867 ubox
17 26 0.763460252 ubox
17 29 0.017237300 ubox
17 44 0.006138437 ubox
17 46 0.007949865 ubox
17 54 0.047122960 ubox
17 79 0.007129780 ubox
18 24 0.044430982 ubox
18 25 0.797969478 ubox
18 28 0.013287749 ubox
18 34 0.190174342 ubox
18 36 0.014837938 ubox
18 37 0.012872541 ubox
18 38 0.034466354 ubox
18 39 0.032201110 ubox
18 78 0.007105248 ubox
19 24 0.793122488 ubox
19 25 0.024178834 ubox
19 34 0.061633668 ubox
19 36 0.009159853 ubox
19 37 0.034631119 ubox
19 38 0.032224639 ubox
19 49 0.003810721 ubox
19 77 0.007029616 ubox
20 36 0.032868698 ubox
20 48 0.003670337 ubox
20 76 0.006890100 ubox
21 28 0.014005922 ubox
22 28 0.015816653 ubox
23 28 0.021738793 ubox
23 40 0.007533433 ubox
24 29 0.040950664 ubox
24 46 0.003194524 ubox
24 74 0.006927944 ubox
25 29 0.015248400 ubox
25 44 0.004095579 ubox
25 46 0.004531176 ubox
25 73 0.006929442 ubox
26 34 0.012954137 ubox
26 36 0.004962111 ubox
26 37 0.596452011 ubox
26 38 0.026812794 ubox
26 39 0.010109224 ubox
26 49 0.007118773 ubox
26 57 0.003575133 ubox
26 72 0.006032232 ubox
27 36 0.675482689 ubox
27 40 0.005753823 ubox
27 48 0.007270816 ubox
27 56 0.006123826 ubox
27 71 0.005583862 ubox
28 32 0.009317245 ubox
28 33 0.034299589 ubox
28 35 0.687967098 ubox
28 41 0.004748037 ubox
28 42 0.003487162 ubox
28 43 0.003604094 ubox
28 47 0.007191945 ubox
28 50 0.024119184 ubox
28 55 0.006627685 ubox
29 34 0.688054403 ubox
29 36 0.008223442 ubox
29 37 0.042073101 ubox
29 38 0.015851847 ubox
29 39 0.009825395 ubox
29 40 0.004609024 ubox
29 49 0.026813586 ubox
30 36 0.041876389 ubox
30 48 0.025584898 ubox
31 36 0.012567426 ubox
31 40 0.005167983 ubox
32 36 0.007636299 ubox
32 40 0.003344481 ubox
33 40 0.004247714 ubox
33 48 0.004357102 ubox
34 44 0.009402437 ubox
34 46 0.015454912 ubox
35 40 0.003493748 ubox
35 48 0.033674369 ubox
35 56 0.005297736 ubox
36 42 0.003894692 ubox
36 43 0.004988930 ubox
36 45 0.034787200 ubox
36 47 0.038912151 ubox
36 55 0.006251932 ubox
37 44 0.040071047 ubox
37 46 0.040662969 ubox
37 54 0.006499129 ubox
38 44 0.068461662 ubox
38 46 0.017085484 ubox
38 54 0.004212513 ubox
39 44 0.076306743 ubox
39 46 0.065458551 ubox
39 54 0.018361896 ubox
39 65 0.010127249 ubox
40 44 0.012490340 ubox
40 45 0.063149859 ubox
40 46 0.004718036 ubox
40 47 0.004069477 ubox
40 53 0.017948929 ubox
40 64 0.010249429 ubox
41 63 0.009801224 ubox
42 58 0.004009218 ubox
43 48 0.005724433 ubox
43 58 0.016407755 ubox
44 49 0.020628828 ubox
44 57 0.016638855 ubox
44 58 0.019971523 ubox
44 59 0.866729134 ubox
44 60 0.006413861 ubox
45 56 0.015862197 ubox
45 58 0.974172154 ubox
46 56 0.004003764 ubox
46 57 0.990413130 ubox
47 56 0.993348681 ubox
48 53 0.008179185 ubox
48 54 0.003294436 ubox
48 55 0.994170902 ubox
49 54 0.992954528 ubox
60 65 0.003613716 ubox
63 92 0.003355834 ubox
69 85 0.026447723 ubox
69 86 0.837316819 ubox
69 87 0.067327757 ubox
69 88 0.029683616 ubox
69 89 0.020153046 ubox
69 90 0.014533180 ubox
69 91 0.006165858 ubox
69 92 0.008991237 ubox
69 93 0.006665189 ubox
69 94 0.006606228 ubox
69 96 0.003409974 ubox
69 97 0.003747683 ubox
70 84 0.021632878 ubox
70 85 0.963230684 ubox
70 86 0.062705414 ubox
70 87 0.024131488 ubox
70 88 0.016950411 ubox
70 89 0.012241004 ubox
70 90 0.005925015 ubox
70 91 0.007993662 ubox
70 92 0.005792372 ubox
70 93 0.006797248 ubox
70 96 0.003163751 ubox
71 83 0.003960139 ubox
71 84 0.993538545 ubox
71 85 0.045567994 ubox
71 86 0.009909751 ubox
71 87 0.007066802 ubox
71 88 0.005107751 ubox
71 92 0.005671223 ubox
72 83 0.998425556 ubox
72 91 0.005383271 ubox
73 78 0.003435576 ubox
73 82 0.999755353 ubox
73 95 0.003864169 ubox
74 81 0.999342315 ubox
74 95 0.005797721 ubox
75 80 0.885709079 ubox
76 85 0.008504981 ubox
76 93 0.009057649 ubox
77 84 0.009676214 ubox
77 92 0.009905880 ubox
78 83 0.009785191 ubox
78 91 0.009985131 ubox
82 91 0.003574873 ubox
91 95 0.043033652 ubox
91 98 0.103758549 ubox
91 101 0.045521899 ubox
91 104 0.035231677 ubox
91 107 0.010423716 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 40 0.9500000 lbox
14 39 0.9500000 lbox
15 38 0.9500000 lbox
16 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
