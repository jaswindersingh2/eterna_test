%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (449)
} def

/sequence { (\
GGAAAAGAGUACGGGACGCGAAAGCGGAAGAAAUUCCCCAAAACAAUUGAAAACAAUUGGUACUCAAAAUGGUAAUUCGUUACCAUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 65 0.003730752 ubox
1 70 0.006134222 ubox
1 84 0.012415703 ubox
1 95 0.067385767 ubox
1 98 0.067807137 ubox
1 101 0.069353964 ubox
1 104 0.069665732 ubox
1 107 0.017588834 ubox
2 65 0.005597407 ubox
2 70 0.005266299 ubox
2 83 0.012362697 ubox
2 95 0.035573043 ubox
2 98 0.035698383 ubox
2 101 0.036460272 ubox
2 104 0.036321401 ubox
2 107 0.011851862 ubox
3 64 0.004419439 ubox
3 70 0.005279321 ubox
4 70 0.003245532 ubox
7 65 0.998491968 ubox
8 64 0.999617653 ubox
9 63 0.999942539 ubox
10 62 0.999690157 ubox
11 61 0.999469169 ubox
12 20 0.004792953 ubox
12 59 0.003274474 ubox
12 60 0.998470299 ubox
13 17 0.019188570 ubox
13 19 0.018016307 ubox
13 25 0.005732845 ubox
13 37 0.078427088 ubox
13 38 0.748808630 ubox
13 39 0.599665388 ubox
14 19 0.020444841 ubox
14 25 0.006826233 ubox
14 36 0.078604384 ubox
14 37 0.751784229 ubox
14 38 0.598360557 ubox
14 39 0.083778011 ubox
14 58 0.014373577 ubox
15 19 0.004171296 ubox
15 25 0.013927758 ubox
15 35 0.077678115 ubox
15 36 0.752652524 ubox
15 37 0.589410357 ubox
15 38 0.083764148 ubox
15 39 0.005766667 ubox
15 57 0.007338875 ubox
16 34 0.085945170 ubox
16 35 0.747302011 ubox
17 24 0.020519816 ubox
17 26 0.961764158 ubox
17 27 0.041515863 ubox
17 30 0.018170642 ubox
18 25 0.996916158 ubox
18 34 0.003662180 ubox
19 24 0.996616989 ubox
19 26 0.032338745 ubox
19 27 0.006354217 ubox
19 30 0.018465352 ubox
20 25 0.032864137 ubox
20 36 0.009568070 ubox
21 34 0.003521126 ubox
21 35 0.009474866 ubox
22 34 0.007980720 ubox
24 38 0.020718722 ubox
24 39 0.030930460 ubox
25 30 0.012147381 ubox
26 34 0.003301987 ubox
26 36 0.025153983 ubox
26 37 0.246714611 ubox
26 38 0.017990922 ubox
26 39 0.015244785 ubox
27 34 0.015986339 ubox
27 35 0.040857238 ubox
27 36 0.630161951 ubox
27 37 0.016881091 ubox
27 38 0.015906314 ubox
27 39 0.010854877 ubox
28 34 0.043406264 ubox
28 35 0.629651404 ubox
29 34 0.601154065 ubox
29 35 0.020154611 ubox
30 34 0.019633788 ubox
30 35 0.014132822 ubox
30 36 0.091036759 ubox
30 37 0.012044499 ubox
30 38 0.006285730 ubox
30 39 0.013979847 ubox
31 35 0.079536265 ubox
34 41 0.003811087 ubox
34 42 0.003474364 ubox
34 43 0.003855758 ubox
35 40 0.003738690 ubox
35 41 0.003737656 ubox
35 42 0.004236363 ubox
39 49 0.016355989 ubox
39 59 0.010532115 ubox
40 48 0.016265390 ubox
40 58 0.009882769 ubox
41 47 0.014868645 ubox
41 57 0.007257048 ubox
42 61 0.003483000 ubox
43 61 0.003702299 ubox
44 49 0.003276512 ubox
44 59 0.997175101 ubox
44 60 0.003270124 ubox
45 58 0.998620274 ubox
46 57 0.998644506 ubox
47 56 0.998688911 ubox
48 53 0.006296099 ubox
48 55 0.998097846 ubox
48 56 0.004617521 ubox
49 54 0.992482840 ubox
54 59 0.005852393 ubox
64 92 0.008244481 ubox
65 91 0.011140254 ubox
66 86 0.011014508 ubox
67 86 0.018786655 ubox
68 81 0.020440036 ubox
68 86 0.043733589 ubox
69 80 0.021905520 ubox
69 86 0.945049817 ubox
70 79 0.022063644 ubox
70 85 0.986490852 ubox
70 87 0.004188631 ubox
70 99 0.005133234 ubox
71 78 0.022208863 ubox
71 84 0.999637747 ubox
71 98 0.005655643 ubox
72 77 0.019687306 ubox
72 83 0.999665532 ubox
72 95 0.003491615 ubox
73 82 0.999114867 ubox
73 94 0.003379956 ubox
74 80 0.018968348 ubox
74 81 0.984186790 ubox
75 80 0.775069817 ubox
75 81 0.038729846 ubox
76 93 0.007773912 ubox
77 92 0.008643668 ubox
78 91 0.008705417 ubox
79 95 0.003730388 ubox
80 89 0.003783226 ubox
80 94 0.003717961 ubox
81 87 0.003203199 ubox
81 88 0.004177939 ubox
81 93 0.003531254 ubox
84 91 0.003426767 ubox
86 90 0.003583449 ubox
86 91 0.004522985 ubox
86 92 0.006247483 ubox
86 93 0.007966849 ubox
86 94 0.004165728 ubox
91 95 0.043030605 ubox
91 98 0.103760573 ubox
91 101 0.045526701 ubox
91 104 0.035235699 ubox
91 107 0.010424981 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 38 0.9500000 lbox
14 37 0.9500000 lbox
15 36 0.9500000 lbox
16 35 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
