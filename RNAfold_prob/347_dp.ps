%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (347)
} def

/sequence { (\
GGAAACUAGGAGCGAAAAAGCUCGUCAAAGACACUAGAGGCACCGAAAAACGGGACGAAAACGUCGCCGCCGAAUUUCGAUUCGGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.071705425 ubox
1 7 0.026214888 ubox
1 26 0.010402450 ubox
1 32 0.087029322 ubox
1 34 0.030340920 ubox
1 35 0.036867581 ubox
1 41 0.045386629 ubox
1 43 0.020690608 ubox
1 44 0.120369004 ubox
1 51 0.003484449 ubox
1 67 0.005852553 ubox
1 68 0.152910072 ubox
1 86 0.006323591 ubox
1 95 0.148906819 ubox
1 98 0.144768411 ubox
1 101 0.146838935 ubox
1 104 0.147820930 ubox
1 107 0.037328392 ubox
2 6 0.028759082 ubox
2 7 0.011584616 ubox
2 25 0.004170119 ubox
2 26 0.013674804 ubox
2 32 0.027815826 ubox
2 34 0.039059868 ubox
2 35 0.003903887 ubox
2 41 0.061325850 ubox
2 43 0.120145694 ubox
2 44 0.004857382 ubox
2 67 0.152404529 ubox
2 68 0.012078769 ubox
2 86 0.004497654 ubox
2 95 0.079489290 ubox
2 98 0.075258544 ubox
2 101 0.076858989 ubox
2 104 0.076602440 ubox
2 107 0.024999955 ubox
3 7 0.007004225 ubox
3 25 0.008675225 ubox
3 35 0.003379952 ubox
5 25 0.020678883 ubox
5 64 0.017009591 ubox
6 24 0.022402034 ubox
6 30 0.071305276 ubox
6 37 0.900550679 ubox
6 39 0.035873179 ubox
6 40 0.009746615 ubox
6 63 0.016951179 ubox
6 66 0.008705976 ubox
6 91 0.118562260 ubox
7 24 0.004176973 ubox
7 27 0.026906219 ubox
7 28 0.012024768 ubox
7 29 0.070441746 ubox
7 30 0.004824081 ubox
7 36 0.906181892 ubox
7 37 0.005262204 ubox
7 38 0.033178399 ubox
7 39 0.009132692 ubox
7 87 0.010084730 ubox
7 88 0.012155889 ubox
7 89 0.013842600 ubox
7 90 0.114784697 ubox
7 91 0.012269458 ubox
7 92 0.013976986 ubox
7 93 0.012404256 ubox
7 94 0.010016864 ubox
7 96 0.012918712 ubox
7 97 0.013461555 ubox
7 99 0.013269423 ubox
7 100 0.013107211 ubox
7 102 0.012744756 ubox
7 103 0.012737273 ubox
7 105 0.012719133 ubox
7 106 0.012651747 ubox
8 25 0.157340618 ubox
8 35 0.906532704 ubox
9 23 0.016088634 ubox
9 25 0.015385955 ubox
9 26 0.016275766 ubox
9 32 0.004028627 ubox
9 34 0.904355733 ubox
9 35 0.005347254 ubox
9 44 0.003830969 ubox
9 67 0.003970181 ubox
9 68 0.007402981 ubox
9 95 0.064574730 ubox
9 98 0.064107772 ubox
9 101 0.064954778 ubox
9 104 0.065108879 ubox
9 107 0.022414735 ubox
10 22 0.007292190 ubox
10 23 0.998179776 ubox
10 25 0.003763615 ubox
10 26 0.016233977 ubox
10 32 0.013403712 ubox
10 43 0.003373721 ubox
10 67 0.003988690 ubox
11 22 0.999270590 ubox
11 25 0.013780423 ubox
12 21 0.999600539 ubox
12 25 0.022048485 ubox
12 26 0.004300311 ubox
12 41 0.003386754 ubox
12 67 0.003525468 ubox
13 20 0.999367633 ubox
13 24 0.026574182 ubox
13 30 0.003501587 ubox
13 40 0.003387402 ubox
13 66 0.003546917 ubox
14 23 0.026750576 ubox
14 65 0.003403184 ubox
15 22 0.025634517 ubox
15 64 0.003345308 ubox
22 31 0.006857789 ubox
22 58 0.003283569 ubox
23 30 0.010367967 ubox
23 57 0.003391756 ubox
24 32 0.954471075 ubox
24 34 0.031174743 ubox
24 41 0.068777539 ubox
24 56 0.003677307 ubox
24 95 0.017556496 ubox
24 98 0.017116566 ubox
24 101 0.018380327 ubox
24 104 0.017438591 ubox
24 107 0.006595480 ubox
25 29 0.005831332 ubox
25 30 0.011664847 ubox
25 31 0.955115288 ubox
25 33 0.030253424 ubox
25 38 0.033889491 ubox
25 40 0.068753401 ubox
25 55 0.003676868 ubox
25 92 0.020357431 ubox
25 94 0.016083077 ubox
25 97 0.016001977 ubox
25 100 0.017278430 ubox
25 103 0.016347684 ubox
25 106 0.006237830 ubox
26 30 0.947379446 ubox
26 37 0.037882615 ubox
26 39 0.068518892 ubox
26 45 0.003392580 ubox
26 54 0.003667924 ubox
26 91 0.022934475 ubox
27 35 0.007166927 ubox
28 35 0.017086412 ubox
29 35 0.036444510 ubox
30 34 0.037123339 ubox
30 35 0.010307196 ubox
30 41 0.009068215 ubox
30 65 0.010662355 ubox
30 95 0.009425045 ubox
30 98 0.007732227 ubox
30 101 0.007379155 ubox
30 104 0.007261877 ubox
31 35 0.005779519 ubox
31 64 0.010676401 ubox
32 37 0.024191139 ubox
32 39 0.013536958 ubox
32 40 0.007090543 ubox
32 63 0.010641817 ubox
32 91 0.007862650 ubox
34 39 0.017647567 ubox
34 40 0.023775136 ubox
34 91 0.033100838 ubox
35 39 0.021559929 ubox
35 40 0.003918030 ubox
35 42 0.003672519 ubox
35 88 0.003709195 ubox
35 89 0.003898349 ubox
35 90 0.032100005 ubox
35 91 0.003528068 ubox
35 92 0.003825484 ubox
35 93 0.003562016 ubox
35 96 0.003309702 ubox
35 97 0.003227408 ubox
35 99 0.003376871 ubox
35 100 0.003252835 ubox
35 102 0.003343790 ubox
35 103 0.003226566 ubox
35 105 0.003307022 ubox
35 106 0.003190592 ubox
37 41 0.008316210 ubox
37 43 0.003577988 ubox
37 44 0.008489834 ubox
37 68 0.003710085 ubox
37 95 0.013628658 ubox
37 98 0.013746859 ubox
37 101 0.013867466 ubox
37 104 0.013765463 ubox
37 107 0.004739132 ubox
39 43 0.003789251 ubox
39 44 0.013225991 ubox
39 51 0.012707504 ubox
39 56 0.009276663 ubox
39 67 0.003844592 ubox
39 68 0.964028110 ubox
39 95 0.011608658 ubox
39 98 0.011398284 ubox
39 101 0.011638444 ubox
39 104 0.011631831 ubox
39 107 0.004058710 ubox
40 44 0.005538046 ubox
40 51 0.005331851 ubox
40 56 0.018062161 ubox
40 67 0.965246418 ubox
40 68 0.004565782 ubox
40 95 0.007472462 ubox
40 98 0.007370159 ubox
40 101 0.007490051 ubox
40 104 0.006983862 ubox
41 45 0.004377263 ubox
41 54 0.010855620 ubox
41 66 0.964252182 ubox
41 91 0.008985583 ubox
42 64 0.004690984 ubox
43 52 0.011783082 ubox
43 53 0.982471533 ubox
43 54 0.016670247 ubox
43 63 0.003777685 ubox
43 85 0.007635904 ubox
44 52 0.984451079 ubox
44 53 0.034109334 ubox
44 63 0.005901484 ubox
44 79 0.003473521 ubox
44 84 0.007726947 ubox
44 91 0.005538614 ubox
45 51 0.973052622 ubox
45 62 0.006003069 ubox
45 78 0.003547501 ubox
45 83 0.007731624 ubox
45 95 0.006327858 ubox
45 98 0.006346394 ubox
45 101 0.006373103 ubox
45 104 0.006366875 ubox
46 77 0.003542959 ubox
46 82 0.007628961 ubox
47 76 0.003509792 ubox
47 81 0.006661935 ubox
48 75 0.003318798 ubox
50 64 0.003508011 ubox
51 57 0.004651705 ubox
51 63 0.003952697 ubox
51 69 0.035846812 ubox
51 91 0.005679044 ubox
52 56 0.004384413 ubox
52 62 0.003950549 ubox
52 67 0.066320230 ubox
52 68 0.153124599 ubox
53 65 0.004010610 ubox
53 67 0.153179079 ubox
53 68 0.016457904 ubox
54 64 0.003391964 ubox
54 65 0.998019463 ubox
54 67 0.017016976 ubox
54 68 0.007022808 ubox
55 64 0.999059354 ubox
56 63 0.999231639 ubox
56 66 0.022250659 ubox
57 62 0.973393938 ubox
57 65 0.025257238 ubox
58 64 0.024197134 ubox
64 92 0.005480153 ubox
65 91 0.006123847 ubox
66 86 0.018503826 ubox
67 85 0.018515664 ubox
67 91 0.005008116 ubox
68 84 0.018504280 ubox
68 91 0.007933039 ubox
69 83 0.018400928 ubox
69 86 0.998073689 ubox
70 85 0.999766531 ubox
71 79 0.019791355 ubox
71 84 0.999766978 ubox
72 78 0.019852008 ubox
72 83 0.999748496 ubox
73 77 0.017277395 ubox
73 81 0.006574011 ubox
73 82 0.998735433 ubox
74 81 0.968660258 ubox
74 82 0.013210810 ubox
75 79 0.034979307 ubox
75 80 0.885132972 ubox
76 80 0.028985434 ubox
86 91 0.006871625 ubox
91 95 0.047222565 ubox
91 98 0.108961200 ubox
91 101 0.045447721 ubox
91 104 0.033156453 ubox
91 107 0.009753940 ubox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
