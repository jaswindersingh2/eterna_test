%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (478)
} def

/sequence { (\
GGAAAAGAUAUCGCCACUCGAAAGAGCUCGAAAGAGGGCAAAACAUAUCGAAAGAUAUGGAUAUCAAAGAUAUACUUCGGUGUGUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.003982253 ubox
1 65 0.004801114 ubox
1 86 0.003739975 ubox
1 95 0.067465483 ubox
1 98 0.067886550 ubox
1 101 0.069465543 ubox
1 104 0.069771420 ubox
1 107 0.017614892 ubox
2 11 0.003552629 ubox
2 12 0.007894798 ubox
2 64 0.003188505 ubox
2 65 0.008128356 ubox
2 78 0.003911223 ubox
2 86 0.003595830 ubox
2 95 0.035593906 ubox
2 98 0.035723089 ubox
2 101 0.036503436 ubox
2 104 0.036358288 ubox
2 107 0.011864009 ubox
3 11 0.007620441 ubox
3 64 0.007275618 ubox
3 77 0.003777832 ubox
6 76 0.003849416 ubox
7 12 0.003532988 ubox
7 65 0.997800524 ubox
7 75 0.004025870 ubox
7 86 0.019094241 ubox
7 95 0.003609697 ubox
7 98 0.003245929 ubox
8 64 0.998810896 ubox
8 73 0.005080623 ubox
8 85 0.019101626 ubox
9 63 0.998768913 ubox
9 72 0.005162386 ubox
9 84 0.019039672 ubox
10 62 0.998771330 ubox
10 71 0.005169389 ubox
10 83 0.018368935 ubox
11 21 0.003835063 ubox
11 41 0.004529665 ubox
11 60 0.003236069 ubox
11 61 0.998874597 ubox
11 70 0.005170687 ubox
11 92 0.006889769 ubox
12 20 0.004871065 ubox
12 59 0.003397708 ubox
12 60 0.998069718 ubox
12 69 0.005164863 ubox
12 82 0.018441663 ubox
12 91 0.007303296 ubox
13 17 0.011578651 ubox
13 19 0.009233499 ubox
13 27 0.004276139 ubox
13 39 0.980392240 ubox
13 81 0.018611887 ubox
13 85 0.003615139 ubox
14 20 0.010976660 ubox
14 24 0.005831863 ubox
14 26 0.004401220 ubox
14 36 0.003448067 ubox
14 37 0.023370611 ubox
14 38 0.981302674 ubox
14 59 0.004773454 ubox
14 80 0.018632461 ubox
14 84 0.003891654 ubox
15 20 0.019424179 ubox
15 24 0.021055322 ubox
15 34 0.008456340 ubox
15 36 0.027331396 ubox
15 37 0.980247959 ubox
15 38 0.003718780 ubox
15 79 0.018549798 ubox
15 82 0.005736119 ubox
16 28 0.008548913 ubox
16 81 0.006127223 ubox
17 24 0.033182988 ubox
17 26 0.591548276 ubox
17 34 0.186535281 ubox
17 36 0.727967616 ubox
17 80 0.006093558 ubox
18 23 0.030894215 ubox
18 24 0.003239797 ubox
18 25 0.606102765 ubox
18 31 0.292707378 ubox
18 32 0.030824080 ubox
18 33 0.112192857 ubox
18 34 0.013726243 ubox
18 35 0.719126271 ubox
19 24 0.607406910 ubox
19 26 0.011912645 ubox
19 30 0.334387675 ubox
19 34 0.712878627 ubox
19 79 0.006893574 ubox
20 27 0.019246198 ubox
20 28 0.005700227 ubox
20 29 0.363014882 ubox
20 78 0.007654257 ubox
21 28 0.347909107 ubox
21 77 0.007258066 ubox
22 28 0.019544513 ubox
22 76 0.006287507 ubox
23 28 0.022728954 ubox
23 76 0.003240777 ubox
24 28 0.017675069 ubox
24 29 0.532096021 ubox
24 39 0.010589286 ubox
24 75 0.003917511 ubox
26 39 0.149327141 ubox
27 34 0.015782790 ubox
27 36 0.591616562 ubox
27 37 0.006465092 ubox
27 38 0.156646767 ubox
28 33 0.015082341 ubox
28 35 0.593838509 ubox
28 36 0.003570116 ubox
28 37 0.156560310 ubox
29 34 0.593909167 ubox
29 36 0.157702437 ubox
29 37 0.005389962 ubox
37 44 0.004889850 ubox
41 62 0.010388936 ubox
43 85 0.010479254 ubox
44 59 0.997604391 ubox
44 84 0.011196698 ubox
45 58 0.999233608 ubox
45 83 0.011202018 ubox
46 57 0.999370854 ubox
46 82 0.011200566 ubox
47 56 0.999406102 ubox
47 81 0.011201284 ubox
48 55 0.999617354 ubox
48 80 0.011199540 ubox
49 54 0.999407235 ubox
49 79 0.011206283 ubox
50 78 0.011206413 ubox
51 77 0.010660388 ubox
52 76 0.009713796 ubox
52 77 0.003379259 ubox
53 76 0.004792527 ubox
54 75 0.005873318 ubox
55 73 0.010017668 ubox
56 72 0.010066818 ubox
56 74 0.003472460 ubox
57 71 0.010056393 ubox
57 73 0.003447527 ubox
58 70 0.009864533 ubox
58 72 0.003371699 ubox
59 71 0.003258735 ubox
60 65 0.003977926 ubox
60 75 0.007439639 ubox
61 73 0.018154014 ubox
62 72 0.018983843 ubox
63 71 0.019101189 ubox
64 70 0.019115267 ubox
64 92 0.009749231 ubox
65 69 0.018960838 ubox
65 91 0.011768374 ubox
67 77 0.006405955 ubox
68 76 0.007119645 ubox
69 75 0.007201747 ubox
69 78 0.014338215 ubox
69 86 0.997950450 ubox
70 77 0.014157749 ubox
70 83 0.003874692 ubox
70 85 0.999050733 ubox
71 82 0.003945230 ubox
71 84 0.998842762 ubox
72 81 0.004009620 ubox
72 83 0.998860186 ubox
72 85 0.008792818 ubox
73 80 0.003965048 ubox
73 82 0.998847536 ubox
73 84 0.009802967 ubox
74 81 0.998691746 ubox
74 83 0.010822409 ubox
75 79 0.012270331 ubox
75 80 0.997988496 ubox
75 82 0.011152689 ubox
76 80 0.004076952 ubox
79 98 0.011970233 ubox
79 101 0.006858222 ubox
79 104 0.003612704 ubox
80 98 0.010662561 ubox
80 101 0.005926132 ubox
80 104 0.003236735 ubox
81 96 0.015928785 ubox
81 97 0.008229260 ubox
81 99 0.008647611 ubox
81 100 0.004542048 ubox
81 102 0.004506367 ubox
82 95 0.019148551 ubox
82 98 0.010391593 ubox
82 101 0.005408808 ubox
83 94 0.018586293 ubox
83 96 0.008413645 ubox
83 97 0.007953733 ubox
83 99 0.003462564 ubox
83 100 0.004562853 ubox
84 95 0.011233971 ubox
84 98 0.004618031 ubox
85 92 0.018954160 ubox
85 94 0.010853735 ubox
85 97 0.004358067 ubox
86 91 0.021104558 ubox
91 95 0.043023076 ubox
91 98 0.103733163 ubox
91 101 0.045512814 ubox
91 104 0.035226153 ubox
91 107 0.010422271 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
