%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (198)
} def

/sequence { (\
GGAAAACACAAGAACAGAUAGUCAAAAGACAUAUCAAAACUUCACUCAAAAGAGGAAGAGUUCAAGUGCUCUAGGUUCGCCUAGAGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.050616948 ubox
1 9 0.032711242 ubox
1 15 0.008934893 ubox
1 63 0.006709762 ubox
1 69 0.004142095 ubox
1 95 0.067375691 ubox
1 98 0.068377639 ubox
1 101 0.069900255 ubox
1 104 0.070213208 ubox
1 107 0.017728100 ubox
2 7 0.017341934 ubox
2 9 0.013757099 ubox
2 62 0.006378507 ubox
2 63 0.008664142 ubox
2 69 0.005558754 ubox
2 95 0.035540335 ubox
2 98 0.035941837 ubox
2 101 0.036696087 ubox
2 104 0.036557218 ubox
2 107 0.011929356 ubox
3 61 0.005789154 ubox
3 62 0.008470574 ubox
4 61 0.006964036 ubox
5 62 0.006001263 ubox
5 70 0.005502063 ubox
6 61 0.007346132 ubox
6 67 0.024009894 ubox
6 70 0.003972456 ubox
7 12 0.007887376 ubox
7 60 0.007692781 ubox
7 66 0.024726905 ubox
7 68 0.982193482 ubox
7 91 0.006772647 ubox
8 61 0.003582754 ubox
8 67 0.986767812 ubox
9 60 0.004021341 ubox
9 66 0.986283496 ubox
9 68 0.040602954 ubox
9 91 0.005305935 ubox
10 67 0.040294316 ubox
12 62 0.003480815 ubox
12 63 0.994723256 ubox
12 95 0.003762063 ubox
12 98 0.006275319 ubox
12 101 0.006376446 ubox
12 104 0.006396797 ubox
13 61 0.003481835 ubox
13 62 0.995185498 ubox
14 61 0.994511503 ubox
14 67 0.004512331 ubox
15 60 0.993552313 ubox
15 66 0.004668925 ubox
16 34 0.005546438 ubox
17 23 0.004260744 ubox
17 32 0.003366577 ubox
17 34 0.004830943 ubox
17 35 0.995001490 ubox
18 22 0.003711644 ubox
18 32 0.024399275 ubox
18 34 0.995929660 ubox
19 31 0.026009067 ubox
19 33 0.995128358 ubox
20 32 0.988380879 ubox
21 30 0.996056590 ubox
21 32 0.004108620 ubox
22 29 0.998983463 ubox
22 31 0.005421206 ubox
23 28 0.997535201 ubox
28 35 0.005374630 ubox
29 34 0.004769673 ubox
32 37 0.003386010 ubox
32 39 0.003388658 ubox
36 62 0.011147338 ubox
37 61 0.013409058 ubox
37 62 0.004240248 ubox
38 61 0.004674102 ubox
38 62 0.017399301 ubox
39 61 0.020700987 ubox
39 67 0.003738741 ubox
40 55 0.032718381 ubox
40 58 0.990524129 ubox
40 60 0.021192381 ubox
40 66 0.003858998 ubox
41 54 0.032878171 ubox
41 56 0.005345242 ubox
41 57 0.996122801 ubox
41 58 0.024667713 ubox
41 59 0.021466822 ubox
41 65 0.003822803 ubox
42 53 0.032994068 ubox
42 55 0.005054174 ubox
42 56 0.997621210 ubox
42 57 0.029259009 ubox
42 58 0.018954793 ubox
42 59 0.012774760 ubox
42 64 0.003533128 ubox
43 52 0.033037595 ubox
43 54 0.004830539 ubox
43 55 0.997101965 ubox
43 58 0.013460913 ubox
44 61 0.003962375 ubox
45 52 0.033061831 ubox
45 54 0.997016360 ubox
45 60 0.004204260 ubox
46 51 0.030630651 ubox
46 52 0.004809689 ubox
46 53 0.998391049 ubox
46 59 0.004321531 ubox
47 52 0.996864051 ubox
47 54 0.004129970 ubox
47 58 0.004329773 ubox
60 95 0.065821998 ubox
60 98 0.012886033 ubox
60 101 0.005739226 ubox
60 104 0.005685754 ubox
61 93 0.038966350 ubox
61 94 0.061600896 ubox
61 97 0.012478527 ubox
61 100 0.005566208 ubox
61 103 0.005573132 ubox
62 92 0.049239403 ubox
62 93 0.053753491 ubox
62 96 0.010321998 ubox
62 99 0.004646117 ubox
62 102 0.004859202 ubox
63 91 0.054613120 ubox
66 95 0.008036032 ubox
66 98 0.009381197 ubox
66 101 0.007471737 ubox
66 104 0.006270112 ubox
67 87 0.028280763 ubox
67 88 0.027422827 ubox
67 89 0.014880549 ubox
67 90 0.005974293 ubox
67 94 0.007130813 ubox
67 96 0.009068335 ubox
67 97 0.007441458 ubox
67 99 0.006758820 ubox
67 100 0.005998498 ubox
67 102 0.005236610 ubox
67 103 0.005121506 ubox
67 105 0.003803817 ubox
68 95 0.011174879 ubox
68 98 0.008401854 ubox
68 101 0.006573766 ubox
68 104 0.004517766 ubox
69 86 0.994921215 ubox
69 91 0.006062188 ubox
70 85 0.999333905 ubox
70 90 0.003746562 ubox
71 84 0.999971926 ubox
72 83 0.999695404 ubox
73 82 0.999695493 ubox
74 80 0.007101228 ubox
74 81 0.999919650 ubox
75 80 0.993732361 ubox
75 81 0.003424329 ubox
86 95 0.009654641 ubox
86 98 0.003918603 ubox
91 95 0.042938016 ubox
91 98 0.103502583 ubox
91 101 0.045397472 ubox
91 104 0.035126912 ubox
91 107 0.010392612 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
