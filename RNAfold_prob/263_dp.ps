%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (263)
} def

/sequence { (\
GGAAAAAAGCACAAGUUGAAAACAACAGACAACUGAAAGAGAGGAAACACUCACAGAAGUCAAGUGCAGAGACUCUUCGGAGUCUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.015319525 ubox
1 12 0.009218914 ubox
1 67 0.003816546 ubox
1 86 0.003684885 ubox
1 95 0.067469921 ubox
1 98 0.067896382 ubox
1 101 0.069447890 ubox
1 104 0.069754255 ubox
1 107 0.017611323 ubox
2 10 0.005284446 ubox
2 86 0.003711384 ubox
2 95 0.035615418 ubox
2 98 0.035743963 ubox
2 101 0.036505794 ubox
2 104 0.036365053 ubox
2 107 0.011866348 ubox
8 17 0.007405619 ubox
9 16 0.008074715 ubox
9 65 0.004351583 ubox
9 67 0.997036447 ubox
9 95 0.003521634 ubox
9 98 0.003483540 ubox
9 101 0.003684615 ubox
9 104 0.004763335 ubox
10 15 0.008133734 ubox
10 64 0.004586435 ubox
10 66 0.998082468 ubox
10 91 0.003699737 ubox
11 65 0.997427343 ubox
12 64 0.996185508 ubox
12 66 0.003435264 ubox
13 65 0.003201590 ubox
14 34 0.044993411 ubox
15 23 0.070979183 ubox
15 26 0.992010476 ubox
15 30 0.009232613 ubox
15 33 0.046802955 ubox
15 61 0.004417778 ubox
15 95 0.003205334 ubox
15 98 0.024332711 ubox
15 101 0.024311581 ubox
15 104 0.024768962 ubox
15 107 0.008668243 ubox
16 21 0.003303154 ubox
16 22 0.070020693 ubox
16 25 0.992978089 ubox
16 28 0.004312038 ubox
16 29 0.008844228 ubox
16 32 0.046805390 ubox
16 62 0.003511713 ubox
16 63 0.022530930 ubox
16 94 0.003175125 ubox
16 97 0.024354534 ubox
16 100 0.024331657 ubox
16 103 0.024788534 ubox
16 106 0.008766180 ubox
17 21 0.058336001 ubox
17 22 0.010708633 ubox
17 24 0.992515209 ubox
17 25 0.006688845 ubox
17 27 0.026142275 ubox
17 28 0.008293379 ubox
17 31 0.046781270 ubox
17 62 0.023190002 ubox
17 96 0.024346373 ubox
17 99 0.024319238 ubox
17 102 0.024773623 ubox
17 105 0.008804298 ubox
18 23 0.987024737 ubox
18 26 0.028214800 ubox
18 30 0.046653457 ubox
18 61 0.022902869 ubox
18 95 0.024250673 ubox
18 98 0.024219049 ubox
18 101 0.024674644 ubox
18 104 0.008779718 ubox
19 60 0.021308404 ubox
22 65 0.006600352 ubox
23 28 0.007017340 ubox
23 56 0.009398961 ubox
23 64 0.006812193 ubox
23 66 0.027055169 ubox
23 91 0.003219754 ubox
24 65 0.026466157 ubox
25 65 0.014725747 ubox
26 35 0.028781215 ubox
26 64 0.015981920 ubox
26 66 0.006405779 ubox
27 34 0.032295886 ubox
27 65 0.006421408 ubox
28 33 0.032456325 ubox
28 60 0.004104730 ubox
28 61 0.993715356 ubox
29 60 0.994752167 ubox
30 35 0.006917754 ubox
30 39 0.006226342 ubox
30 59 0.993567011 ubox
32 60 0.041153806 ubox
33 39 0.011113424 ubox
33 41 0.004063992 ubox
33 56 0.994012761 ubox
33 59 0.044134382 ubox
33 64 0.003199103 ubox
34 38 0.010110701 ubox
34 40 0.006139255 ubox
34 53 0.004957446 ubox
34 55 0.995372406 ubox
34 56 0.006735344 ubox
34 57 0.012797123 ubox
34 58 0.044392527 ubox
34 62 0.019293125 ubox
35 52 0.005813820 ubox
35 54 0.993567011 ubox
35 61 0.022854118 ubox
36 51 0.005886664 ubox
36 60 0.022684394 ubox
38 51 0.102877979 ubox
39 48 0.007020584 ubox
39 50 0.103519152 ubox
39 51 0.003590618 ubox
39 52 0.930994734 ubox
39 54 0.053281797 ubox
39 61 0.005337711 ubox
40 51 0.931290439 ubox
40 60 0.005273894 ubox
41 48 0.068129729 ubox
41 50 0.928448019 ubox
41 52 0.345552034 ubox
42 51 0.346659152 ubox
43 48 0.753313929 ubox
43 50 0.347389333 ubox
43 51 0.004986725 ubox
43 52 0.003871187 ubox
44 48 0.103192676 ubox
44 50 0.007757820 ubox
44 51 0.003268715 ubox
44 52 0.006308462 ubox
45 51 0.006128539 ubox
49 60 0.003704207 ubox
50 59 0.003994688 ubox
51 58 0.003702834 ubox
53 60 0.025754246 ubox
54 59 0.027653679 ubox
55 60 0.003390365 ubox
56 61 0.014532107 ubox
64 95 0.007247195 ubox
64 98 0.003196797 ubox
65 89 0.003267033 ubox
65 90 0.004888890 ubox
65 94 0.007166277 ubox
67 91 0.004070777 ubox
69 86 0.998549572 ubox
70 85 0.999663952 ubox
71 84 0.999981165 ubox
72 83 0.999870530 ubox
73 82 0.999976515 ubox
74 80 0.005760025 ubox
74 81 0.999739732 ubox
75 79 0.012835347 ubox
75 80 0.998927316 ubox
76 80 0.003170618 ubox
85 92 0.006808440 ubox
86 91 0.009492669 ubox
91 95 0.043110334 ubox
91 98 0.103822644 ubox
91 101 0.045494542 ubox
91 104 0.035203948 ubox
91 107 0.010415635 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
