%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (996)
} def

/sequence { (\
GGAAAACGCAAUGCGAAGCUCAAAGAGCACGGAUCAAAGAUCCAACCUCAAAGAGGACGGCCAAGCCACCAGCACUUCGGUGCUGGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.066840108 ubox
1 9 0.036543935 ubox
1 14 0.023038630 ubox
1 20 0.005133648 ubox
1 21 0.008368558 ubox
1 30 0.020972830 ubox
1 43 0.030782876 ubox
1 47 0.019189417 ubox
1 49 0.004821762 ubox
1 58 0.090891564 ubox
1 61 0.003885264 ubox
1 62 0.107752538 ubox
1 66 0.004512824 ubox
1 67 0.128172062 ubox
1 69 0.008664444 ubox
1 70 0.013034148 ubox
1 95 0.387229101 ubox
1 98 0.390028479 ubox
1 101 0.398583647 ubox
1 104 0.400492827 ubox
1 107 0.101178852 ubox
2 7 0.045481943 ubox
2 9 0.033476893 ubox
2 14 0.014360163 ubox
2 19 0.007705951 ubox
2 20 0.007061002 ubox
2 21 0.012422202 ubox
2 30 0.020596313 ubox
2 42 0.030754389 ubox
2 46 0.019232129 ubox
2 47 0.003445280 ubox
2 48 0.003763147 ubox
2 49 0.006672076 ubox
2 58 0.058026529 ubox
2 61 0.107479678 ubox
2 62 0.006986676 ubox
2 66 0.127600976 ubox
2 67 0.010639203 ubox
2 69 0.014666406 ubox
2 95 0.204008026 ubox
2 98 0.204831575 ubox
2 101 0.209047727 ubox
2 104 0.208285545 ubox
2 107 0.067976157 ubox
3 12 0.021869839 ubox
3 20 0.012218522 ubox
3 41 0.029781508 ubox
3 48 0.006365832 ubox
4 12 0.005925226 ubox
5 12 0.008349609 ubox
6 12 0.005204307 ubox
7 13 0.029663535 ubox
7 15 0.939289166 ubox
7 39 0.014363361 ubox
7 59 0.022018477 ubox
7 60 0.006338904 ubox
7 65 0.005034572 ubox
7 86 0.005515554 ubox
7 91 0.052235941 ubox
8 12 0.018599587 ubox
8 14 0.960182824 ubox
8 19 0.015283794 ubox
8 28 0.007663268 ubox
8 30 0.003501967 ubox
8 35 0.004343358 ubox
8 58 0.022507389 ubox
8 61 0.049184318 ubox
8 62 0.003718086 ubox
8 66 0.059223870 ubox
8 67 0.004684558 ubox
8 95 0.034723471 ubox
8 98 0.038165803 ubox
8 101 0.039398736 ubox
8 104 0.039606742 ubox
8 107 0.015033146 ubox
9 13 0.953264414 ubox
9 15 0.030653513 ubox
9 18 0.015425463 ubox
9 27 0.007664066 ubox
9 59 0.009027957 ubox
9 60 0.049179113 ubox
9 65 0.059434037 ubox
9 86 0.003549880 ubox
9 91 0.042574078 ubox
11 34 0.025500712 ubox
12 16 0.003750286 ubox
12 17 0.016137423 ubox
12 24 0.005503814 ubox
12 29 0.019755063 ubox
12 33 0.027070720 ubox
12 57 0.013359116 ubox
12 59 0.008166343 ubox
12 63 0.011572059 ubox
12 68 0.003864556 ubox
12 87 0.009783624 ubox
12 88 0.009534585 ubox
12 89 0.008694506 ubox
12 90 0.010399177 ubox
12 91 0.003873516 ubox
12 92 0.010667648 ubox
12 93 0.010906840 ubox
12 94 0.008315579 ubox
12 96 0.071270248 ubox
12 97 0.008411730 ubox
12 99 0.071662110 ubox
12 100 0.008603280 ubox
12 102 0.072375050 ubox
12 103 0.008275509 ubox
12 105 0.071014345 ubox
12 106 0.008147136 ubox
13 19 0.005685347 ubox
13 28 0.022676531 ubox
13 30 0.008929234 ubox
13 58 0.012816525 ubox
13 61 0.058233083 ubox
13 62 0.009742193 ubox
13 66 0.009850967 ubox
13 95 0.078296693 ubox
13 98 0.078770064 ubox
13 101 0.079681166 ubox
13 104 0.078476841 ubox
13 107 0.010225818 ubox
14 18 0.005724015 ubox
14 27 0.022660206 ubox
14 31 0.030348575 ubox
14 32 0.003899526 ubox
14 56 0.003350004 ubox
14 59 0.023052312 ubox
14 60 0.057843886 ubox
14 65 0.010000667 ubox
14 86 0.004556159 ubox
14 91 0.040232096 ubox
15 21 0.006459164 ubox
15 30 0.051864646 ubox
15 58 0.027177539 ubox
15 61 0.004384932 ubox
15 95 0.041375033 ubox
15 98 0.041438032 ubox
15 101 0.042138636 ubox
15 104 0.040563230 ubox
15 107 0.015322447 ubox
16 20 0.005642115 ubox
18 28 0.996060808 ubox
18 30 0.006489753 ubox
18 58 0.005676544 ubox
18 61 0.003457183 ubox
18 95 0.006749960 ubox
18 98 0.006475994 ubox
18 101 0.006595979 ubox
18 104 0.006541570 ubox
19 25 0.006199230 ubox
19 27 0.997180092 ubox
19 55 0.060228060 ubox
19 56 0.003785516 ubox
19 60 0.003448531 ubox
19 91 0.005344463 ubox
20 24 0.005752566 ubox
20 25 0.006523663 ubox
20 26 0.996410693 ubox
20 54 0.060521736 ubox
20 90 0.005046535 ubox
20 92 0.011045023 ubox
21 25 0.988046460 ubox
21 53 0.060451219 ubox
21 91 0.011633689 ubox
25 30 0.004651635 ubox
25 49 0.061359662 ubox
26 48 0.061463357 ubox
27 47 0.061257657 ubox
28 91 0.004733671 ubox
30 39 0.005258044 ubox
30 59 0.005928115 ubox
30 60 0.003506911 ubox
30 86 0.005775859 ubox
30 91 0.051196475 ubox
31 43 0.998244622 ubox
31 62 0.003372634 ubox
31 95 0.005138435 ubox
31 98 0.003833515 ubox
31 101 0.003870706 ubox
31 104 0.003838239 ubox
32 42 0.999399184 ubox
32 61 0.003366666 ubox
33 41 0.999098878 ubox
34 39 0.008298675 ubox
34 40 0.998328869 ubox
34 92 0.003724157 ubox
35 39 0.990047821 ubox
35 91 0.003790090 ubox
42 60 0.009589528 ubox
43 59 0.012097235 ubox
46 53 0.004431944 ubox
46 55 0.010214478 ubox
46 56 0.991833481 ubox
46 59 0.004233271 ubox
46 60 0.023599691 ubox
47 53 0.013156839 ubox
47 55 0.996324041 ubox
47 56 0.017701860 ubox
47 59 0.023714361 ubox
48 52 0.011946870 ubox
48 53 0.006654134 ubox
48 54 0.995595531 ubox
48 55 0.015900063 ubox
48 56 0.010400255 ubox
48 57 0.030160737 ubox
48 92 0.004908247 ubox
49 53 0.987242322 ubox
49 55 0.013258242 ubox
49 56 0.031191381 ubox
49 91 0.005155179 ubox
53 58 0.005086242 ubox
55 62 0.012313102 ubox
55 67 0.012393997 ubox
56 61 0.012387601 ubox
56 66 0.012491653 ubox
58 65 0.049232371 ubox
58 91 0.019452395 ubox
59 66 0.018914353 ubox
59 67 0.980274561 ubox
59 95 0.008261445 ubox
59 98 0.004688263 ubox
60 66 0.981332710 ubox
60 67 0.007521113 ubox
60 95 0.005953164 ubox
61 65 0.974228932 ubox
61 86 0.003610372 ubox
62 85 0.003618606 ubox
62 91 0.004383933 ubox
65 83 0.003625025 ubox
66 91 0.011261936 ubox
67 91 0.009347227 ubox
68 81 0.003742566 ubox
69 80 0.003755937 ubox
69 85 0.004838703 ubox
69 86 0.995130634 ubox
70 79 0.003755248 ubox
70 85 0.999841916 ubox
70 86 0.004558304 ubox
71 84 0.999732160 ubox
72 83 0.999982864 ubox
73 82 0.999982595 ubox
74 81 0.999494484 ubox
75 79 0.011943846 ubox
75 80 0.998579387 ubox
76 80 0.004038020 ubox
86 95 0.014005832 ubox
86 98 0.004796358 ubox
91 95 0.070593768 ubox
91 98 0.143228140 ubox
91 101 0.047331814 ubox
91 104 0.016458657 ubox
91 107 0.004092202 ubox
1 95 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
