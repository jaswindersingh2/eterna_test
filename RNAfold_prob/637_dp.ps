%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (637)
} def

/sequence { (\
GGAAAGCUCGCCACACCCAAUAAUAAAAACCAACAACCCACCCAAAACACCCACAAAACAAAAAGAGCGGGCUAAUUCGUUAGCCCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.011324770 ubox
1 8 0.008895005 ubox
1 9 0.017287183 ubox
1 11 0.011773928 ubox
1 12 0.135793251 ubox
1 14 0.010259291 ubox
1 16 0.004239684 ubox
1 17 0.022137149 ubox
1 18 0.053418948 ubox
1 31 0.022948701 ubox
1 34 0.003979879 ubox
1 38 0.008655211 ubox
1 39 0.024240175 ubox
1 42 0.008049191 ubox
1 43 0.021886040 ubox
1 51 0.006472841 ubox
1 52 0.017872936 ubox
1 68 0.003508698 ubox
1 78 0.020698803 ubox
1 86 0.005418111 ubox
1 95 0.066342327 ubox
1 98 0.066764489 ubox
1 101 0.068278138 ubox
1 104 0.068583051 ubox
1 107 0.017315512 ubox
2 7 0.011794270 ubox
2 8 0.014407475 ubox
2 9 0.034250997 ubox
2 11 0.135768641 ubox
2 12 0.005517323 ubox
2 16 0.022233214 ubox
2 17 0.053305867 ubox
2 30 0.022875375 ubox
2 37 0.008686848 ubox
2 38 0.024191538 ubox
2 41 0.008079603 ubox
2 42 0.021841090 ubox
2 50 0.006496264 ubox
2 51 0.017835619 ubox
2 68 0.004052062 ubox
2 77 0.020547014 ubox
2 78 0.028989377 ubox
2 85 0.004549305 ubox
2 95 0.034996973 ubox
2 98 0.035120280 ubox
2 101 0.035865350 ubox
2 104 0.035728185 ubox
2 107 0.011658227 ubox
3 8 0.032442061 ubox
3 76 0.019826383 ubox
3 77 0.029012762 ubox
4 8 0.003407379 ubox
4 76 0.025984948 ubox
5 73 0.038954457 ubox
6 11 0.009734595 ubox
6 12 0.011322604 ubox
6 14 0.012119251 ubox
6 16 0.005008908 ubox
6 34 0.005353836 ubox
6 37 0.003522346 ubox
6 38 0.003298670 ubox
6 68 0.982140958 ubox
6 72 0.040612432 ubox
7 67 0.983366677 ubox
7 71 0.040618901 ubox
8 66 0.983206585 ubox
8 70 0.040598208 ubox
8 92 0.003476938 ubox
9 65 0.983023882 ubox
9 69 0.040903563 ubox
9 91 0.003641514 ubox
10 14 0.006639629 ubox
10 16 0.009084783 ubox
10 17 0.008115653 ubox
10 18 0.006868142 ubox
10 30 0.003770884 ubox
10 34 0.006748329 ubox
10 37 0.006012174 ubox
10 38 0.004698632 ubox
10 39 0.004419488 ubox
10 41 0.005916919 ubox
10 42 0.004267143 ubox
10 43 0.004655547 ubox
10 48 0.006722471 ubox
10 50 0.006896001 ubox
10 51 0.005275405 ubox
10 52 0.005601762 ubox
10 54 0.008719337 ubox
10 59 0.016362978 ubox
10 68 0.044133762 ubox
11 65 0.003825579 ubox
11 67 0.044026944 ubox
12 65 0.031608001 ubox
14 65 0.008069950 ubox
15 24 0.003264971 ubox
18 65 0.003298236 ubox
19 24 0.004640167 ubox
20 24 0.003354482 ubox
21 26 0.005462957 ubox
21 27 0.005053149 ubox
21 28 0.006446389 ubox
21 29 0.003392604 ubox
21 49 0.004292115 ubox
21 53 0.025963147 ubox
21 55 0.010119038 ubox
21 56 0.007910500 ubox
21 57 0.005299736 ubox
21 58 0.003249750 ubox
21 61 0.003434856 ubox
21 62 0.003596860 ubox
21 64 0.003498789 ubox
24 29 0.004802789 ubox
24 32 0.003381918 ubox
24 33 0.005132099 ubox
24 49 0.016454929 ubox
24 53 0.006435266 ubox
24 62 0.003281265 ubox
31 65 0.003918000 ubox
37 67 0.003534598 ubox
38 65 0.003373334 ubox
39 65 0.005436762 ubox
41 67 0.004148953 ubox
42 65 0.003975964 ubox
43 65 0.006443235 ubox
48 65 0.004976504 ubox
48 67 0.005016330 ubox
50 65 0.003989448 ubox
50 67 0.006623530 ubox
51 65 0.006022056 ubox
51 67 0.004093590 ubox
52 65 0.010600923 ubox
52 67 0.004705726 ubox
54 65 0.008096706 ubox
54 67 0.006491446 ubox
59 65 0.014434529 ubox
59 67 0.011246778 ubox
68 91 0.008417282 ubox
69 85 0.003299880 ubox
69 86 0.998063149 ubox
70 85 0.999144635 ubox
70 86 0.004129605 ubox
71 84 0.999162323 ubox
72 83 0.999162890 ubox
73 82 0.998567210 ubox
74 80 0.019029920 ubox
74 81 0.983689721 ubox
75 80 0.774678362 ubox
75 81 0.038757423 ubox
76 93 0.008649240 ubox
77 92 0.009952725 ubox
78 91 0.010082071 ubox
79 86 0.003270025 ubox
79 95 0.011584648 ubox
79 98 0.010583282 ubox
79 101 0.007209580 ubox
79 104 0.006391553 ubox
80 89 0.004875284 ubox
80 94 0.011499902 ubox
80 97 0.010534606 ubox
80 100 0.007172093 ubox
80 103 0.006356958 ubox
81 88 0.005391422 ubox
81 93 0.010927642 ubox
81 96 0.009885546 ubox
81 99 0.006747089 ubox
81 102 0.005967358 ubox
83 95 0.005130587 ubox
83 98 0.003599947 ubox
84 91 0.005961980 ubox
85 91 0.004529329 ubox
86 91 0.008905752 ubox
91 95 0.043001253 ubox
91 98 0.103714621 ubox
91 101 0.045520428 ubox
91 104 0.035244094 ubox
91 107 0.010427775 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
