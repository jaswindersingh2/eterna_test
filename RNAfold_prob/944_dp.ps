%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (944)
} def

/sequence { (\
GGAAAUGUAGAGUACAAAAGUACACGUUUUUAGAAAAAAACUAAAAACGACUACAAAAGUAGACUACAUUCCAUUUUCGAAUGGAAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 71 0.008887789 ubox
1 72 0.970291480 ubox
1 78 0.006339014 ubox
1 95 0.016341125 ubox
1 98 0.016443744 ubox
1 101 0.017721390 ubox
1 104 0.018143916 ubox
1 107 0.004590755 ubox
2 70 0.008356505 ubox
2 71 0.971035906 ubox
2 72 0.038336242 ubox
2 77 0.006335672 ubox
2 95 0.008391157 ubox
2 98 0.008635270 ubox
2 101 0.008992689 ubox
2 104 0.009005536 ubox
3 69 0.008779331 ubox
3 70 0.794470169 ubox
3 76 0.006328292 ubox
4 69 0.558059357 ubox
4 70 0.564276618 ubox
4 75 0.005522873 ubox
5 69 0.808479338 ubox
5 70 0.003661822 ubox
5 74 0.004585014 ubox
6 55 0.007776151 ubox
6 68 0.993517727 ubox
6 73 0.003768540 ubox
6 96 0.010692556 ubox
6 99 0.012430045 ubox
6 102 0.010847689 ubox
6 105 0.010539783 ubox
7 54 0.008633404 ubox
7 67 0.999551792 ubox
7 72 0.003324947 ubox
7 95 0.011609588 ubox
7 98 0.013506756 ubox
7 101 0.011975604 ubox
7 104 0.011685489 ubox
8 53 0.008633748 ubox
8 66 0.999321797 ubox
8 94 0.011185002 ubox
8 97 0.013088158 ubox
8 100 0.011603153 ubox
8 103 0.011322877 ubox
9 52 0.008629844 ubox
9 65 0.999010699 ubox
10 25 0.008167184 ubox
10 51 0.008579583 ubox
10 64 0.996242587 ubox
10 95 0.007028020 ubox
10 98 0.006190403 ubox
10 101 0.006089790 ubox
11 65 0.003790886 ubox
12 23 0.648626162 ubox
12 64 0.004597067 ubox
13 22 0.649402544 ubox
13 61 0.757844000 ubox
13 62 0.003600162 ubox
13 63 0.004654363 ubox
14 21 0.649380171 ubox
14 60 0.758560009 ubox
15 20 0.648259885 ubox
15 59 0.756335165 ubox
19 52 0.040340406 ubox
20 51 0.041843512 ubox
20 54 0.748526795 ubox
21 50 0.041366073 ubox
21 53 0.750138588 ubox
22 52 0.738309103 ubox
23 49 0.005604974 ubox
24 52 0.004740698 ubox
25 49 0.990135263 ubox
26 41 0.007067496 ubox
26 48 0.999882632 ubox
27 40 0.007074038 ubox
27 47 0.999436249 ubox
28 39 0.007074064 ubox
28 46 0.998502146 ubox
29 38 0.007072294 ubox
29 45 0.998374303 ubox
30 37 0.006966197 ubox
30 44 0.998465821 ubox
31 36 0.006380017 ubox
31 43 0.999163099 ubox
32 42 0.999378220 ubox
33 41 0.996453792 ubox
33 42 0.006219985 ubox
49 64 0.011055264 ubox
50 60 0.062310412 ubox
51 59 0.064254248 ubox
51 62 0.641508099 ubox
52 57 0.003852957 ubox
52 58 0.062790916 ubox
52 61 0.645314221 ubox
53 60 0.645512106 ubox
54 59 0.644418996 ubox
54 62 0.005065516 ubox
59 67 0.003745671 ubox
60 66 0.003725570 ubox
61 65 0.003304532 ubox
64 91 0.014153073 ubox
65 90 0.013796511 ubox
69 86 0.115811744 ubox
69 87 0.007510536 ubox
69 93 0.018633652 ubox
70 85 0.199078726 ubox
70 86 0.009113540 ubox
70 92 0.032139378 ubox
71 84 0.228535325 ubox
71 91 0.036865833 ubox
72 83 0.228786601 ubox
72 91 0.012237135 ubox
73 82 0.228850152 ubox
74 80 0.010543753 ubox
74 81 0.225234092 ubox
74 83 0.003565001 ubox
74 85 0.020548051 ubox
74 86 0.021078090 ubox
74 87 0.262852363 ubox
74 88 0.745625814 ubox
74 89 0.073644572 ubox
74 90 0.035073229 ubox
74 91 0.013810999 ubox
74 92 0.021314109 ubox
74 93 0.016628536 ubox
74 94 0.016226930 ubox
74 96 0.015982500 ubox
74 97 0.010779597 ubox
74 99 0.004936771 ubox
74 100 0.004882134 ubox
74 103 0.003947341 ubox
74 106 0.003538343 ubox
75 79 0.012799862 ubox
75 80 0.195950487 ubox
75 81 0.008442460 ubox
75 83 0.004320397 ubox
75 84 0.022127583 ubox
75 85 0.022779107 ubox
75 86 0.301457203 ubox
75 87 0.856492149 ubox
75 88 0.073849128 ubox
75 89 0.033582160 ubox
75 90 0.016233783 ubox
75 91 0.020828299 ubox
75 92 0.017429965 ubox
75 93 0.017252860 ubox
75 94 0.145781235 ubox
75 96 0.009213226 ubox
75 97 0.004218794 ubox
75 99 0.004249050 ubox
75 102 0.003704510 ubox
75 103 0.003796622 ubox
75 105 0.003349813 ubox
76 80 0.009505457 ubox
76 83 0.021590275 ubox
76 84 0.021795791 ubox
76 85 0.309772750 ubox
76 86 0.881274343 ubox
76 87 0.063125085 ubox
76 88 0.025990384 ubox
76 89 0.013789697 ubox
76 90 0.016169641 ubox
76 91 0.015881241 ubox
76 92 0.015256991 ubox
76 93 0.170957190 ubox
76 94 0.005235843 ubox
76 96 0.003612655 ubox
76 102 0.003929782 ubox
76 103 0.003385996 ubox
76 105 0.003224038 ubox
77 83 0.017858120 ubox
77 84 0.310386604 ubox
77 85 0.889026479 ubox
77 86 0.048033083 ubox
77 87 0.015220801 ubox
77 88 0.009136231 ubox
77 89 0.011606414 ubox
77 90 0.011040714 ubox
77 91 0.011820271 ubox
77 92 0.176585166 ubox
77 93 0.004461141 ubox
77 102 0.003637812 ubox
78 83 0.309738775 ubox
78 84 0.890774999 ubox
78 91 0.177345227 ubox
79 95 0.004916374 ubox
79 98 0.009319536 ubox
79 101 0.008521066 ubox
79 104 0.007148735 ubox
82 86 0.007221474 ubox
82 87 0.053345658 ubox
82 88 0.033094062 ubox
82 89 0.023031234 ubox
82 90 0.009134959 ubox
82 92 0.003656602 ubox
82 96 0.035511453 ubox
82 99 0.027838381 ubox
82 102 0.023368494 ubox
82 105 0.021158986 ubox
83 95 0.039217455 ubox
83 98 0.030743306 ubox
83 101 0.025852993 ubox
83 104 0.023494760 ubox
84 95 0.005847246 ubox
84 98 0.004557724 ubox
84 101 0.003802235 ubox
84 104 0.003226689 ubox
91 95 0.041258763 ubox
91 98 0.100514771 ubox
91 101 0.044591020 ubox
91 104 0.034924078 ubox
91 107 0.010341828 ubox
1 72 0.9500000 lbox
2 71 0.9500000 lbox
3 70 0.9500000 lbox
4 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 59 0.9500000 lbox
20 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
74 88 0.9500000 lbox
75 87 0.9500000 lbox
76 86 0.9500000 lbox
77 85 0.9500000 lbox
78 84 0.9500000 lbox
showpage
end
%%EOF
