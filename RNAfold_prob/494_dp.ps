%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (494)
} def

/sequence { (\
GGAAAAGUAUACGAGAGACGAAAGUCCUAGAAAUAGCUCAAAAGUAUACGAAAGUAUACGUAUACAAAGAUCUAAUUCGUUAGAUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.010379788 ubox
1 27 0.009520940 ubox
1 38 0.005796318 ubox
1 39 0.015006625 ubox
1 65 0.005612370 ubox
1 73 0.004115181 ubox
1 86 0.003675459 ubox
1 95 0.068871578 ubox
1 98 0.069408594 ubox
1 101 0.071636262 ubox
1 104 0.071926154 ubox
1 107 0.018169025 ubox
2 12 0.004636697 ubox
2 26 0.009545874 ubox
2 37 0.007762185 ubox
2 38 0.011330037 ubox
2 39 0.033421658 ubox
2 65 0.004326375 ubox
2 72 0.004363802 ubox
2 86 0.003992147 ubox
2 95 0.036266237 ubox
2 98 0.036460234 ubox
2 101 0.037298140 ubox
2 104 0.037149922 ubox
2 107 0.012123721 ubox
3 10 0.003289136 ubox
3 25 0.009413173 ubox
3 38 0.031688690 ubox
3 71 0.004267102 ubox
4 38 0.003285126 ubox
5 38 0.010370097 ubox
6 34 0.004097641 ubox
6 38 0.064782076 ubox
7 12 0.007080700 ubox
7 19 0.007282397 ubox
7 34 0.014433223 ubox
7 37 0.069591869 ubox
7 39 0.004461915 ubox
7 49 0.008546205 ubox
7 59 0.005581743 ubox
7 63 0.006815092 ubox
7 65 0.989772892 ubox
7 95 0.030098971 ubox
7 98 0.029189801 ubox
7 101 0.028375842 ubox
7 104 0.028182190 ubox
7 107 0.009840531 ubox
8 18 0.007025928 ubox
8 31 0.003599947 ubox
8 32 0.003741232 ubox
8 33 0.014451391 ubox
8 35 0.046014555 ubox
8 36 0.060538770 ubox
8 48 0.008559689 ubox
8 58 0.005587042 ubox
8 62 0.006989152 ubox
8 64 0.990979668 ubox
8 94 0.028968758 ubox
8 97 0.028053563 ubox
8 100 0.027268703 ubox
8 103 0.027081102 ubox
8 106 0.009554723 ubox
9 34 0.056936300 ubox
9 47 0.008562672 ubox
9 57 0.005584322 ubox
9 61 0.006972706 ubox
9 63 0.991007546 ubox
10 29 0.003568493 ubox
10 31 0.011536183 ubox
10 32 0.019055689 ubox
10 33 0.054283976 ubox
10 35 0.013216586 ubox
10 46 0.008564163 ubox
10 56 0.005582313 ubox
10 60 0.006730496 ubox
10 62 0.991008839 ubox
10 92 0.007677744 ubox
10 93 0.004206551 ubox
11 34 0.013193880 ubox
11 45 0.008564928 ubox
11 55 0.005578985 ubox
11 61 0.990992871 ubox
12 17 0.005338268 ubox
12 20 0.005626369 ubox
12 30 0.056269865 ubox
12 44 0.008554452 ubox
12 54 0.005563521 ubox
12 60 0.989821399 ubox
12 91 0.008774325 ubox
13 19 0.010694366 ubox
13 26 0.014767187 ubox
13 27 0.034968889 ubox
13 28 0.030197252 ubox
13 34 0.007075251 ubox
13 37 0.017425015 ubox
13 38 0.003410734 ubox
13 39 0.309796428 ubox
13 59 0.325260477 ubox
13 95 0.007242500 ubox
13 98 0.007270981 ubox
13 101 0.006692145 ubox
13 104 0.006530336 ubox
14 25 0.014422752 ubox
14 28 0.789447539 ubox
14 34 0.003321007 ubox
14 38 0.309690049 ubox
14 57 0.005752740 ubox
15 19 0.004675959 ubox
15 26 0.037558221 ubox
15 27 0.815831142 ubox
15 28 0.075254897 ubox
15 37 0.307917845 ubox
15 39 0.117747890 ubox
15 95 0.003256657 ubox
15 98 0.003215362 ubox
15 101 0.003233764 ubox
15 104 0.003210173 ubox
16 25 0.037329956 ubox
16 28 0.096947242 ubox
16 34 0.013757983 ubox
16 38 0.117483346 ubox
16 57 0.003461873 ubox
17 25 0.004967458 ubox
17 26 0.986056572 ubox
17 27 0.070810469 ubox
17 34 0.004225735 ubox
17 37 0.111561401 ubox
17 39 0.010015454 ubox
18 25 0.989784184 ubox
18 28 0.003799421 ubox
18 34 0.021499041 ubox
18 38 0.009788077 ubox
18 45 0.006596364 ubox
18 55 0.003265890 ubox
19 24 0.989573392 ubox
19 30 0.012329909 ubox
19 36 0.087985195 ubox
19 44 0.007725198 ubox
19 54 0.003333807 ubox
20 26 0.018288864 ubox
20 27 0.008810170 ubox
20 34 0.012856798 ubox
20 37 0.005488172 ubox
20 39 0.008816091 ubox
21 25 0.015962858 ubox
21 28 0.005501330 ubox
21 34 0.008443125 ubox
21 38 0.007955341 ubox
22 28 0.003270727 ubox
22 34 0.011553440 ubox
23 28 0.005029364 ubox
23 34 0.006207456 ubox
23 38 0.016210882 ubox
24 28 0.003844009 ubox
24 34 0.004260547 ubox
24 37 0.017671128 ubox
24 39 0.041531531 ubox
25 29 0.010127704 ubox
25 30 0.014037029 ubox
25 31 0.066792208 ubox
25 32 0.007735157 ubox
25 33 0.004561946 ubox
25 36 0.013117667 ubox
26 30 0.066723999 ubox
26 36 0.005485678 ubox
27 36 0.438720482 ubox
27 44 0.023251674 ubox
27 91 0.003619326 ubox
28 32 0.007869066 ubox
28 33 0.013268679 ubox
28 35 0.444689147 ubox
28 36 0.008699272 ubox
28 40 0.033113262 ubox
28 41 0.040145403 ubox
28 42 0.011425300 ubox
28 43 0.025218368 ubox
28 90 0.003500979 ubox
29 34 0.438889698 ubox
29 38 0.241867608 ubox
30 34 0.017034841 ubox
30 37 0.260313532 ubox
30 38 0.016610215 ubox
30 39 0.565127409 ubox
30 78 0.006165468 ubox
31 38 0.542203268 ubox
31 77 0.006178357 ubox
32 38 0.028710081 ubox
32 76 0.005964847 ubox
33 38 0.019846916 ubox
33 45 0.006174084 ubox
33 47 0.009957307 ubox
33 57 0.003513594 ubox
34 40 0.019413416 ubox
34 41 0.029124170 ubox
34 42 0.017904907 ubox
34 43 0.026871830 ubox
34 44 0.006897536 ubox
34 46 0.011451968 ubox
34 56 0.003638829 ubox
34 74 0.006298584 ubox
35 45 0.010081375 ubox
35 47 0.003534594 ubox
35 55 0.003205636 ubox
35 73 0.006415808 ubox
36 45 0.130914733 ubox
36 55 0.006763430 ubox
36 72 0.006407925 ubox
36 95 0.003489880 ubox
37 44 0.153385513 ubox
37 54 0.007161794 ubox
37 60 0.003175925 ubox
37 91 0.006540192 ubox
38 42 0.018423493 ubox
38 43 0.144380355 ubox
38 44 0.006526300 ubox
38 51 0.005021130 ubox
38 53 0.006535104 ubox
38 70 0.006246128 ubox
38 90 0.006198040 ubox
38 92 0.012140116 ubox
39 44 0.029883836 ubox
39 50 0.005558508 ubox
39 69 0.006354671 ubox
39 91 0.013182325 ubox
40 45 0.004217975 ubox
40 63 0.004224940 ubox
41 61 0.004648340 ubox
41 63 0.003325793 ubox
42 61 0.008306630 ubox
43 61 0.005559518 ubox
44 49 0.003733245 ubox
44 57 0.024221116 ubox
44 59 0.935254906 ubox
44 65 0.121577964 ubox
45 56 0.024805353 ubox
45 58 0.975449439 ubox
45 64 0.121732619 ubox
46 55 0.024876730 ubox
46 57 0.989317189 ubox
46 63 0.121754046 ubox
47 54 0.024265810 ubox
47 56 0.991035514 ubox
47 62 0.121760417 ubox
48 55 0.991510385 ubox
48 61 0.121790611 ubox
49 54 0.991265236 ubox
49 60 0.121817483 ubox
50 59 0.121364276 ubox
51 57 0.016971038 ubox
52 57 0.021568031 ubox
54 65 0.007542356 ubox
55 64 0.007550017 ubox
56 63 0.007474559 ubox
57 62 0.006920257 ubox
60 65 0.004830059 ubox
60 95 0.014020371 ubox
61 94 0.013615394 ubox
63 92 0.007242601 ubox
65 91 0.006419781 ubox
69 78 0.005964260 ubox
69 86 0.998380840 ubox
70 77 0.005889002 ubox
70 85 0.999394532 ubox
71 84 0.999601046 ubox
71 92 0.004310214 ubox
72 83 0.999875061 ubox
72 91 0.004604351 ubox
73 82 0.999286099 ubox
73 90 0.004428115 ubox
74 80 0.019042849 ubox
74 81 0.984398281 ubox
75 80 0.775236331 ubox
75 81 0.038779296 ubox
76 93 0.003713785 ubox
77 84 0.005750164 ubox
77 92 0.004262758 ubox
78 83 0.005986103 ubox
78 91 0.004316436 ubox
79 95 0.003934622 ubox
79 98 0.006512770 ubox
80 94 0.003922385 ubox
80 97 0.006493580 ubox
81 93 0.003788734 ubox
81 96 0.006114847 ubox
85 92 0.010211372 ubox
86 91 0.012387533 ubox
91 95 0.043223294 ubox
91 98 0.103983380 ubox
91 101 0.045522743 ubox
91 104 0.035153760 ubox
91 107 0.010398011 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
