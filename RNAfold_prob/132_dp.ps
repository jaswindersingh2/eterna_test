%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (132)
} def

/sequence { (\
GGAAAAAAGCAGUUCACACGAGAGCAAACGAGAAAACUACGAGCACUACGAGAAGAACAAGCAAAAAAGGUUGCGUUCGCGCAACCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.102741781 ubox
1 15 0.008573329 ubox
1 17 0.015981215 ubox
1 58 0.003968249 ubox
1 62 0.010121771 ubox
1 86 0.004562463 ubox
1 95 0.067437785 ubox
1 98 0.067972735 ubox
1 101 0.069630601 ubox
1 104 0.069862812 ubox
1 107 0.017630308 ubox
2 10 0.027050641 ubox
2 14 0.008375634 ubox
2 15 0.025875740 ubox
2 62 0.007853624 ubox
2 85 0.003519277 ubox
2 95 0.035512262 ubox
2 98 0.035716155 ubox
2 101 0.036437345 ubox
2 104 0.036324945 ubox
2 107 0.011840087 ubox
3 13 0.007888922 ubox
3 14 0.025854156 ubox
4 13 0.025077788 ubox
4 14 0.003166250 ubox
9 25 0.017305436 ubox
9 29 0.004610986 ubox
9 40 0.007083621 ubox
9 44 0.020828623 ubox
9 46 0.003200282 ubox
9 58 0.020267804 ubox
9 62 0.915388140 ubox
9 95 0.015623500 ubox
9 98 0.016668037 ubox
9 101 0.015923979 ubox
9 104 0.015947320 ubox
9 107 0.005568620 ubox
10 24 0.017315519 ubox
10 43 0.020832865 ubox
10 55 0.006158015 ubox
10 61 0.915226415 ubox
10 91 0.019076938 ubox
11 38 0.013560321 ubox
12 17 0.003279781 ubox
12 19 0.003998952 ubox
12 25 0.061581062 ubox
12 37 0.013938950 ubox
12 44 0.007105295 ubox
12 58 0.991534101 ubox
12 62 0.008339622 ubox
12 95 0.016019572 ubox
12 98 0.009584040 ubox
12 101 0.009496239 ubox
12 104 0.008944980 ubox
13 18 0.003683995 ubox
13 21 0.005912622 ubox
13 22 0.016246713 ubox
13 24 0.061609418 ubox
13 36 0.013823858 ubox
13 43 0.007110203 ubox
13 52 0.004335723 ubox
13 54 0.051721220 ubox
13 55 0.005344164 ubox
13 56 0.019017950 ubox
13 57 0.993494660 ubox
13 61 0.007849978 ubox
13 93 0.012772306 ubox
13 94 0.014075455 ubox
13 97 0.009238927 ubox
13 100 0.009176799 ubox
13 103 0.008647223 ubox
14 20 0.005342505 ubox
14 21 0.017320036 ubox
14 23 0.061873987 ubox
14 33 0.004056617 ubox
14 35 0.013044904 ubox
14 42 0.007130783 ubox
14 51 0.005311121 ubox
14 53 0.058909434 ubox
14 54 0.005398960 ubox
14 55 0.020308281 ubox
14 56 0.993576939 ubox
14 57 0.003595666 ubox
14 60 0.003829650 ubox
14 92 0.015780763 ubox
14 93 0.010991334 ubox
14 96 0.007598455 ubox
14 99 0.007642287 ubox
14 102 0.007212379 ubox
15 20 0.017646518 ubox
15 22 0.061880344 ubox
15 32 0.004264749 ubox
15 41 0.007091929 ubox
15 50 0.005290451 ubox
15 52 0.060012542 ubox
15 55 0.991732455 ubox
15 91 0.017471661 ubox
17 22 0.006974494 ubox
17 24 0.003987382 ubox
17 32 0.011585506 ubox
17 50 0.019535136 ubox
17 52 0.484859962 ubox
17 55 0.004985376 ubox
19 24 0.005495817 ubox
19 30 0.017633173 ubox
19 32 0.003268755 ubox
19 41 0.004160432 ubox
19 50 0.975047409 ubox
19 52 0.042273454 ubox
20 25 0.003312832 ubox
20 29 0.017735671 ubox
20 40 0.004286410 ubox
20 46 0.004502163 ubox
20 47 0.003739016 ubox
20 49 0.976114796 ubox
21 38 0.004192902 ubox
21 47 0.977587200 ubox
22 29 0.003825054 ubox
22 37 0.004205803 ubox
22 44 0.003401318 ubox
22 46 0.977804142 ubox
22 47 0.028459851 ubox
22 49 0.042329322 ubox
23 38 0.003729471 ubox
23 47 0.104141449 ubox
24 37 0.003755022 ubox
24 44 0.988987425 ubox
24 46 0.102508836 ubox
25 30 0.003892646 ubox
25 32 0.005185162 ubox
25 41 0.006343041 ubox
25 43 0.989713995 ubox
26 38 0.004669084 ubox
27 38 0.003775183 ubox
28 38 0.007703870 ubox
29 41 0.944838665 ubox
29 43 0.008604079 ubox
29 50 0.012243494 ubox
29 61 0.003196271 ubox
30 37 0.048703519 ubox
30 38 0.020833031 ubox
30 40 0.942179414 ubox
30 49 0.012408814 ubox
31 38 0.932149336 ubox
31 47 0.011749079 ubox
32 37 0.928207052 ubox
32 38 0.078647431 ubox
32 40 0.020164947 ubox
32 46 0.011765850 ubox
32 58 0.003524709 ubox
33 38 0.067181262 ubox
34 38 0.014654980 ubox
37 41 0.003514110 ubox
37 43 0.007449149 ubox
37 52 0.022519099 ubox
37 55 0.011380687 ubox
38 42 0.006947583 ubox
38 51 0.022566098 ubox
38 54 0.011268959 ubox
40 50 0.027033723 ubox
40 52 0.010693739 ubox
40 61 0.003696988 ubox
41 46 0.004006619 ubox
41 49 0.027007701 ubox
42 47 0.007558361 ubox
43 47 0.003290285 ubox
43 49 0.010212201 ubox
43 58 0.008342465 ubox
43 62 0.027979043 ubox
44 50 0.006694614 ubox
44 52 0.005107564 ubox
44 55 0.003944283 ubox
44 61 0.027974910 ubox
46 50 0.003280062 ubox
46 52 0.012417889 ubox
46 55 0.019671627 ubox
46 61 0.004591360 ubox
47 51 0.011263227 ubox
47 54 0.019290306 ubox
47 56 0.003549379 ubox
47 57 0.004137970 ubox
47 60 0.004616608 ubox
49 55 0.016454735 ubox
49 61 0.004694345 ubox
50 58 0.004819041 ubox
52 58 0.008141539 ubox
52 62 0.004144692 ubox
55 62 0.011250048 ubox
61 95 0.022995541 ubox
61 98 0.004592284 ubox
62 91 0.016851663 ubox
69 86 0.998894557 ubox
70 85 0.999962657 ubox
71 84 0.999512077 ubox
72 83 0.999430464 ubox
73 80 0.003848728 ubox
73 82 0.999977141 ubox
74 79 0.004048688 ubox
74 81 0.999924508 ubox
75 80 0.974035243 ubox
86 91 0.005824073 ubox
91 95 0.043078507 ubox
91 98 0.103796394 ubox
91 101 0.045506301 ubox
91 104 0.035193566 ubox
91 107 0.010411621 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
