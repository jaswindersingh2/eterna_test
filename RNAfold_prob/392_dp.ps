%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (392)
} def

/sequence { (\
GGAAAAUAGUAUGCGCACAUGAAACAUGUGCCCAUGAAACAUGGCGAUACAAAGUAUCGGCAUACUAAAGUACUGUUCGUAGUGCUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.008810255 ubox
1 73 0.026460109 ubox
1 74 0.010155992 ubox
1 95 0.067190553 ubox
1 98 0.067592454 ubox
1 101 0.069106350 ubox
1 104 0.069529307 ubox
1 107 0.017583201 ubox
2 7 0.005197752 ubox
2 71 0.006628059 ubox
2 73 0.013204648 ubox
2 78 0.004082948 ubox
2 95 0.035469348 ubox
2 98 0.035571887 ubox
2 101 0.036330111 ubox
2 104 0.036250212 ubox
2 107 0.011847833 ubox
3 7 0.004844471 ubox
3 71 0.015405663 ubox
3 77 0.004078274 ubox
4 71 0.005383895 ubox
4 76 0.003897152 ubox
5 66 0.003479430 ubox
5 71 0.004557300 ubox
6 66 0.004842142 ubox
6 71 0.004306274 ubox
7 67 0.937945546 ubox
7 68 0.043250680 ubox
7 69 0.004468169 ubox
7 70 0.003252554 ubox
7 88 0.003199899 ubox
7 89 0.003478693 ubox
7 90 0.004322409 ubox
7 92 0.003807763 ubox
7 93 0.003333571 ubox
8 66 0.993986736 ubox
9 65 0.999890649 ubox
10 36 0.007043924 ubox
10 64 0.999690038 ubox
11 35 0.008303945 ubox
11 63 0.999466903 ubox
12 34 0.008462168 ubox
12 62 0.999556622 ubox
13 33 0.008519459 ubox
13 61 0.999942003 ubox
14 59 0.006484331 ubox
14 60 0.999038592 ubox
15 31 0.997932442 ubox
15 32 0.006067078 ubox
16 30 0.999961167 ubox
17 29 0.999784774 ubox
18 28 0.999970942 ubox
19 27 0.999393428 ubox
20 26 0.998213722 ubox
21 25 0.982470926 ubox
31 44 0.006180874 ubox
32 43 0.007621259 ubox
32 44 0.991103534 ubox
33 43 0.999662104 ubox
33 44 0.003519801 ubox
34 42 0.999146395 ubox
35 41 0.997971832 ubox
36 40 0.982234505 ubox
41 63 0.007935860 ubox
42 62 0.008441539 ubox
43 61 0.008650827 ubox
45 59 0.988151753 ubox
46 58 0.999911930 ubox
47 57 0.999705420 ubox
48 56 0.999401867 ubox
49 55 0.998612544 ubox
50 54 0.988860462 ubox
65 91 0.004364344 ubox
66 87 0.006176544 ubox
66 88 0.005295654 ubox
66 89 0.010675524 ubox
66 90 0.005861032 ubox
67 86 0.005112719 ubox
68 86 0.043955342 ubox
69 83 0.010380483 ubox
69 86 0.959293013 ubox
70 85 0.995512161 ubox
70 98 0.009833958 ubox
70 101 0.010772288 ubox
70 104 0.035302772 ubox
70 107 0.014147828 ubox
71 81 0.011825355 ubox
71 84 0.995415909 ubox
71 97 0.009439847 ubox
71 100 0.010317295 ubox
71 103 0.033797023 ubox
71 105 0.005506884 ubox
71 106 0.013696751 ubox
72 80 0.012309945 ubox
72 83 0.995299378 ubox
73 79 0.012411306 ubox
73 82 0.995666113 ubox
74 79 0.005525645 ubox
74 81 0.983546620 ubox
74 96 0.017750993 ubox
74 99 0.015327790 ubox
74 102 0.065446332 ubox
74 105 0.045646825 ubox
75 80 0.838325725 ubox
75 95 0.019074418 ubox
75 98 0.016473660 ubox
75 101 0.070596492 ubox
75 104 0.049616676 ubox
75 107 0.004621668 ubox
76 81 0.009007533 ubox
76 93 0.011914638 ubox
76 94 0.016231160 ubox
76 97 0.016377471 ubox
76 100 0.070480292 ubox
76 103 0.049524390 ubox
76 106 0.004685794 ubox
77 92 0.016014104 ubox
77 93 0.012593132 ubox
77 96 0.015713336 ubox
77 99 0.069417137 ubox
77 100 0.003281023 ubox
77 102 0.048587737 ubox
77 105 0.004630409 ubox
78 91 0.018914260 ubox
79 85 0.003585786 ubox
79 95 0.014518669 ubox
79 98 0.073098398 ubox
79 101 0.044068652 ubox
79 104 0.006351545 ubox
80 84 0.003358319 ubox
80 89 0.004214218 ubox
80 90 0.005673012 ubox
80 94 0.013967407 ubox
80 96 0.004480059 ubox
80 97 0.071888669 ubox
80 99 0.003333410 ubox
80 100 0.043276857 ubox
80 103 0.006242696 ubox
81 86 0.003188865 ubox
82 95 0.072798399 ubox
82 98 0.043540037 ubox
82 101 0.007004429 ubox
83 88 0.005208796 ubox
83 89 0.003715092 ubox
83 90 0.007592677 ubox
83 91 0.003328949 ubox
83 92 0.005669235 ubox
83 93 0.005721688 ubox
83 94 0.072394305 ubox
83 96 0.015142799 ubox
83 97 0.041862728 ubox
83 99 0.004185602 ubox
83 100 0.006801484 ubox
84 95 0.019031158 ubox
84 98 0.004639240 ubox
85 91 0.040633435 ubox
86 90 0.036879955 ubox
86 91 0.013041905 ubox
86 92 0.009132892 ubox
86 93 0.013203867 ubox
86 94 0.008198170 ubox
86 96 0.003280066 ubox
91 95 0.042861145 ubox
91 98 0.103340640 ubox
91 101 0.045340687 ubox
91 104 0.035091189 ubox
91 107 0.010381947 ubox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
45 59 0.9500000 lbox
46 58 0.9500000 lbox
47 57 0.9500000 lbox
48 56 0.9500000 lbox
49 55 0.9500000 lbox
50 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
