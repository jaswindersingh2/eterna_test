%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (999)
} def

/sequence { (\
GGAAACGGGAAUCCCAAGCUCAAAGAGCAAGCAUCAAAGAUGCAACCGCAAAGCGGACGGCCAAGCCACUUAAUGUUCGCAUUAAGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.107634434 ubox
1 14 0.103992520 ubox
1 15 0.033630636 ubox
1 20 0.003663917 ubox
1 21 0.005857939 ubox
1 47 0.033921946 ubox
1 49 0.003660855 ubox
1 58 0.088971658 ubox
1 61 0.003828342 ubox
1 62 0.110705475 ubox
1 66 0.004629848 ubox
1 67 0.124910158 ubox
1 69 0.016320216 ubox
1 70 0.008745629 ubox
1 78 0.014161258 ubox
1 80 0.042050292 ubox
1 95 0.387103265 ubox
1 98 0.383046585 ubox
1 101 0.390772887 ubox
1 104 0.392589948 ubox
1 107 0.099105716 ubox
2 6 0.075493466 ubox
2 13 0.106555597 ubox
2 14 0.032453000 ubox
2 15 0.009190077 ubox
2 19 0.005481633 ubox
2 20 0.004919040 ubox
2 21 0.009358138 ubox
2 46 0.033847331 ubox
2 47 0.003649117 ubox
2 58 0.056653190 ubox
2 61 0.110433906 ubox
2 62 0.007783789 ubox
2 66 0.124366990 ubox
2 67 0.010080096 ubox
2 69 0.012719697 ubox
2 71 0.004374950 ubox
2 77 0.013307396 ubox
2 78 0.033385066 ubox
2 80 0.003872724 ubox
2 83 0.004204122 ubox
2 95 0.205054373 ubox
2 98 0.199922813 ubox
2 101 0.204180314 ubox
2 104 0.203385489 ubox
2 107 0.066363717 ubox
3 12 0.105419602 ubox
3 20 0.009188944 ubox
3 70 0.004429351 ubox
3 71 0.003338447 ubox
3 76 0.011689326 ubox
3 77 0.030213335 ubox
3 82 0.004081416 ubox
4 12 0.007753356 ubox
4 70 0.003423623 ubox
4 76 0.023478708 ubox
4 77 0.040986542 ubox
4 83 0.004782417 ubox
5 12 0.003175301 ubox
5 76 0.043955696 ubox
5 82 0.004843352 ubox
6 18 0.005038656 ubox
6 48 0.012051246 ubox
6 56 0.006305185 ubox
6 59 0.047351339 ubox
6 60 0.018916846 ubox
6 65 0.011102572 ubox
6 75 0.046160697 ubox
6 79 0.004792698 ubox
6 86 0.025081254 ubox
6 91 0.221698122 ubox
7 13 0.012160932 ubox
7 14 0.135983150 ubox
7 15 0.952106557 ubox
7 47 0.012158808 ubox
7 58 0.042038105 ubox
7 61 0.006512433 ubox
7 62 0.027469883 ubox
7 67 0.027854011 ubox
7 69 0.004136096 ubox
7 74 0.008993564 ubox
7 78 0.004124847 ubox
7 80 0.013463726 ubox
7 95 0.068077439 ubox
7 98 0.069009742 ubox
7 101 0.066161230 ubox
7 104 0.065698768 ubox
7 107 0.024868813 ubox
8 12 0.008003732 ubox
8 13 0.136245152 ubox
8 14 0.953606125 ubox
8 15 0.216315879 ubox
8 46 0.011865207 ubox
8 58 0.006177151 ubox
8 61 0.026979564 ubox
8 62 0.029239399 ubox
8 66 0.027779669 ubox
8 67 0.015940519 ubox
8 95 0.024024052 ubox
8 98 0.020315849 ubox
8 101 0.017669105 ubox
8 104 0.017336117 ubox
8 107 0.005649088 ubox
9 13 0.938216222 ubox
9 14 0.216138846 ubox
9 15 0.016430053 ubox
9 58 0.003936962 ubox
9 61 0.029235286 ubox
9 66 0.015963300 ubox
9 78 0.013717205 ubox
9 95 0.019860938 ubox
9 98 0.012472516 ubox
9 101 0.012157236 ubox
9 104 0.011214245 ubox
9 107 0.003607466 ubox
10 77 0.013670293 ubox
11 76 0.013192941 ubox
12 57 0.008460146 ubox
12 60 0.004487433 ubox
12 63 0.004666397 ubox
12 75 0.012201741 ubox
12 87 0.004427910 ubox
12 90 0.004195323 ubox
12 92 0.038061469 ubox
12 93 0.003845674 ubox
12 94 0.003612846 ubox
13 56 0.008465809 ubox
13 59 0.005078499 ubox
13 60 0.024242230 ubox
13 86 0.004059550 ubox
13 91 0.039714193 ubox
14 55 0.008057900 ubox
14 59 0.024175141 ubox
14 60 0.034383999 ubox
14 91 0.012213723 ubox
15 53 0.003756235 ubox
15 59 0.034460829 ubox
15 86 0.006657301 ubox
15 91 0.052508582 ubox
16 71 0.003333489 ubox
17 70 0.003364826 ubox
18 28 0.998396601 ubox
18 80 0.003267596 ubox
18 95 0.006088597 ubox
18 98 0.005793921 ubox
18 101 0.005920148 ubox
18 104 0.005915165 ubox
19 25 0.005918443 ubox
19 27 0.999506829 ubox
19 79 0.003268470 ubox
19 91 0.005232218 ubox
20 24 0.005486048 ubox
20 25 0.006522183 ubox
20 26 0.998728808 ubox
20 90 0.004936162 ubox
20 92 0.009574712 ubox
21 25 0.990344581 ubox
21 91 0.010073543 ubox
25 78 0.006779920 ubox
26 77 0.006784791 ubox
27 76 0.006788530 ubox
28 75 0.006791907 ubox
28 91 0.004415898 ubox
29 74 0.006119004 ubox
31 43 0.998832587 ubox
32 42 0.999910082 ubox
33 41 0.999403895 ubox
34 39 0.008311066 ubox
34 40 0.998782669 ubox
35 39 0.990494944 ubox
43 59 0.006196699 ubox
43 60 0.003177106 ubox
46 55 0.006025373 ubox
46 56 0.993567641 ubox
46 60 0.025366047 ubox
47 53 0.004157806 ubox
47 55 0.998072346 ubox
47 56 0.007159968 ubox
47 59 0.025484217 ubox
47 86 0.013127267 ubox
48 54 0.998072883 ubox
48 58 0.025476444 ubox
48 66 0.012014795 ubox
49 53 0.990826011 ubox
49 55 0.003946033 ubox
49 56 0.022956880 ubox
49 65 0.012099089 ubox
49 86 0.003516127 ubox
50 83 0.016193360 ubox
51 82 0.016691731 ubox
51 83 0.010134676 ubox
52 82 0.010707128 ubox
53 61 0.013617645 ubox
53 80 0.047267470 ubox
54 60 0.013648738 ubox
54 79 0.047318196 ubox
55 62 0.006919685 ubox
55 67 0.006763235 ubox
55 78 0.047315906 ubox
56 61 0.007074798 ubox
56 66 0.006896359 ubox
56 77 0.047280778 ubox
57 76 0.047312658 ubox
58 65 0.047339387 ubox
58 75 0.047289580 ubox
58 91 0.019157078 ubox
59 66 0.018917023 ubox
59 67 0.981246457 ubox
59 70 0.003284788 ubox
59 74 0.029090692 ubox
59 95 0.008157377 ubox
59 98 0.004649648 ubox
60 66 0.982326647 ubox
60 67 0.007629946 ubox
60 69 0.003810867 ubox
60 95 0.005998018 ubox
61 65 0.975214829 ubox
62 91 0.004216812 ubox
63 70 0.004515697 ubox
63 71 0.023274037 ubox
64 70 0.025061170 ubox
65 69 0.024648362 ubox
65 80 0.003913616 ubox
66 79 0.003909950 ubox
66 91 0.011365861 ubox
67 91 0.008657837 ubox
68 76 0.014350346 ubox
69 75 0.017086727 ubox
69 86 0.987823109 ubox
69 91 0.013990097 ubox
70 85 0.994008054 ubox
70 86 0.005826270 ubox
70 87 0.003903721 ubox
70 90 0.013263431 ubox
70 93 0.005372510 ubox
70 94 0.003840313 ubox
70 100 0.004139736 ubox
71 84 0.995385131 ubox
71 85 0.005009242 ubox
71 89 0.010379781 ubox
71 92 0.005822503 ubox
71 93 0.004233980 ubox
71 99 0.004657278 ubox
72 83 0.995538654 ubox
73 82 0.995396958 ubox
74 81 0.995305696 ubox
74 90 0.005092320 ubox
74 96 0.023410948 ubox
74 99 0.008614661 ubox
74 102 0.004704029 ubox
75 80 0.989547612 ubox
75 95 0.025926023 ubox
75 98 0.009543745 ubox
75 101 0.005216664 ubox
75 104 0.003173632 ubox
76 88 0.020635426 ubox
76 93 0.016838281 ubox
76 94 0.021763850 ubox
76 97 0.009299016 ubox
76 100 0.005106047 ubox
77 87 0.024320770 ubox
77 92 0.023034134 ubox
77 93 0.016135306 ubox
77 96 0.008019659 ubox
77 99 0.004484165 ubox
78 86 0.024782412 ubox
78 91 0.027039929 ubox
79 95 0.004785829 ubox
80 86 0.005122605 ubox
80 91 0.005257087 ubox
82 87 0.003255792 ubox
82 88 0.004229855 ubox
82 89 0.005977597 ubox
82 90 0.005672297 ubox
82 91 0.003402829 ubox
82 92 0.004746153 ubox
82 93 0.004140941 ubox
83 87 0.003869633 ubox
83 88 0.006066128 ubox
83 89 0.005767081 ubox
83 90 0.004094871 ubox
83 91 0.004892104 ubox
83 92 0.004644998 ubox
86 95 0.020629812 ubox
86 98 0.007218442 ubox
86 101 0.004622119 ubox
91 95 0.068565226 ubox
91 98 0.139286379 ubox
91 101 0.046210872 ubox
91 104 0.016599476 ubox
91 107 0.004174704 ubox
1 95 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
