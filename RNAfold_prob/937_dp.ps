%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (937)
} def

/sequence { (\
GGAAAAUAACAGUCCAAAAGGACACCAUCGCGGAAAAAAACCGCGAUGGAGAUGAAAACAUCAGUUAUGGUACGUUUCGACGUACCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.012027174 ubox
1 10 0.144167920 ubox
1 15 0.019018025 ubox
1 59 0.003811155 ubox
1 62 0.005325562 ubox
1 65 0.003194430 ubox
1 66 0.009609313 ubox
1 68 0.004411681 ubox
1 73 0.004882550 ubox
1 86 0.003879265 ubox
1 95 0.129756716 ubox
1 98 0.134544066 ubox
1 101 0.137995805 ubox
1 104 0.138579822 ubox
1 107 0.035072814 ubox
2 7 0.010150325 ubox
2 10 0.038089787 ubox
2 14 0.019034336 ubox
2 62 0.008274438 ubox
2 65 0.009114995 ubox
2 66 0.021723788 ubox
2 68 0.005914606 ubox
2 95 0.068106374 ubox
2 98 0.070313550 ubox
2 101 0.071882058 ubox
2 104 0.071796862 ubox
2 107 0.023486005 ubox
3 7 0.010489256 ubox
3 13 0.018031073 ubox
3 61 0.007540723 ubox
3 65 0.020709567 ubox
3 66 0.017009437 ubox
3 68 0.012423717 ubox
4 65 0.015628082 ubox
4 66 0.016380125 ubox
4 68 0.014561741 ubox
5 65 0.014991368 ubox
5 66 0.051259760 ubox
5 68 0.032488685 ubox
6 65 0.054321203 ubox
6 66 0.008243937 ubox
6 68 0.696394218 ubox
7 11 0.007613299 ubox
7 24 0.005737830 ubox
7 50 0.004268404 ubox
7 63 0.008106387 ubox
7 64 0.053335259 ubox
7 67 0.823101751 ubox
7 87 0.005033244 ubox
7 88 0.013999389 ubox
7 89 0.015326418 ubox
7 90 0.019811088 ubox
7 91 0.011804348 ubox
7 92 0.019079003 ubox
7 93 0.016961608 ubox
7 94 0.015611629 ubox
7 96 0.014821791 ubox
7 97 0.015074684 ubox
7 99 0.014965893 ubox
7 100 0.014710551 ubox
7 102 0.014047681 ubox
7 103 0.014109726 ubox
7 105 0.013999275 ubox
7 106 0.014006992 ubox
8 65 0.005761330 ubox
8 66 0.842157521 ubox
9 65 0.845836391 ubox
9 66 0.007694084 ubox
10 51 0.003276352 ubox
10 54 0.006185826 ubox
10 64 0.845637929 ubox
10 91 0.066578169 ubox
11 53 0.005606979 ubox
11 65 0.005301522 ubox
11 66 0.006894012 ubox
12 23 0.997929008 ubox
12 95 0.006483265 ubox
12 98 0.006708978 ubox
12 101 0.006890008 ubox
12 104 0.006948496 ubox
13 22 0.999291646 ubox
13 94 0.004999497 ubox
13 97 0.005171834 ubox
13 100 0.005312461 ubox
13 103 0.005360604 ubox
14 21 0.999747155 ubox
15 20 0.998306808 ubox
21 66 0.006697531 ubox
22 65 0.007032433 ubox
23 51 0.004334495 ubox
23 64 0.007134535 ubox
24 65 0.003358956 ubox
25 48 0.004772850 ubox
25 49 0.995419981 ubox
26 48 0.999940960 ubox
26 49 0.004609664 ubox
27 47 0.999592340 ubox
28 46 0.999748794 ubox
29 45 0.999969095 ubox
30 44 0.999981701 ubox
31 43 0.999981463 ubox
32 41 0.014688816 ubox
32 42 0.999814702 ubox
33 41 0.997481094 ubox
33 42 0.006544504 ubox
49 62 0.005188418 ubox
49 66 0.004553889 ubox
50 61 0.005829686 ubox
50 65 0.012239625 ubox
50 66 0.022844876 ubox
50 68 0.003652426 ubox
51 59 0.008975176 ubox
51 62 0.990431516 ubox
51 65 0.016578384 ubox
51 66 0.018589788 ubox
51 98 0.004006612 ubox
51 101 0.006598524 ubox
51 104 0.013257028 ubox
52 61 0.991397784 ubox
52 65 0.018665730 ubox
52 68 0.005449424 ubox
53 58 0.008712597 ubox
53 60 0.990798308 ubox
53 63 0.080908278 ubox
53 64 0.013128575 ubox
53 67 0.006257870 ubox
53 96 0.004642810 ubox
53 99 0.008256701 ubox
53 102 0.017560364 ubox
53 105 0.004517349 ubox
54 59 0.985111082 ubox
54 62 0.089501194 ubox
54 66 0.006158273 ubox
54 95 0.004901120 ubox
54 98 0.008723665 ubox
54 101 0.018553059 ubox
54 104 0.004946312 ubox
55 61 0.085745578 ubox
55 65 0.005556158 ubox
55 68 0.004144718 ubox
56 61 0.006436493 ubox
57 66 0.035976669 ubox
58 65 0.038673329 ubox
59 64 0.039068134 ubox
61 92 0.018020465 ubox
61 94 0.003362770 ubox
62 91 0.019334079 ubox
63 68 0.009736376 ubox
64 95 0.131716547 ubox
64 98 0.056547934 ubox
64 101 0.043737913 ubox
64 104 0.036025234 ubox
64 107 0.010914806 ubox
65 87 0.003581819 ubox
65 88 0.022538413 ubox
65 89 0.081792848 ubox
65 90 0.188068809 ubox
65 91 0.037268173 ubox
65 92 0.057762059 ubox
65 93 0.018828050 ubox
65 94 0.129199597 ubox
65 97 0.055636723 ubox
65 100 0.043067713 ubox
65 103 0.035525749 ubox
65 106 0.010878705 ubox
66 87 0.012290280 ubox
66 88 0.092292851 ubox
66 89 0.207840723 ubox
66 90 0.042784149 ubox
66 91 0.063319639 ubox
66 92 0.021195038 ubox
66 93 0.115955758 ubox
66 96 0.049487067 ubox
66 99 0.038438213 ubox
66 102 0.031884716 ubox
66 105 0.009821596 ubox
68 87 0.654170875 ubox
68 88 0.030486104 ubox
68 89 0.011543052 ubox
68 90 0.015648064 ubox
68 91 0.017609632 ubox
68 92 0.006906472 ubox
68 94 0.007993828 ubox
68 97 0.006027671 ubox
68 100 0.004722260 ubox
69 86 0.999326330 ubox
70 85 0.999945162 ubox
71 84 0.999711919 ubox
72 83 0.999712933 ubox
73 82 0.999922958 ubox
74 81 0.997559759 ubox
74 95 0.008036105 ubox
75 79 0.035955251 ubox
75 80 0.922170042 ubox
75 94 0.008046407 ubox
76 80 0.028199406 ubox
76 93 0.008046152 ubox
77 92 0.008055679 ubox
78 91 0.008056606 ubox
86 91 0.004543671 ubox
91 95 0.045882859 ubox
91 98 0.106934321 ubox
91 101 0.045176667 ubox
91 104 0.033520682 ubox
91 107 0.009874505 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
