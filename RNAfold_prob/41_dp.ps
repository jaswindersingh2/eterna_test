%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (41)
} def

/sequence { (\
GGAAAAAGGAGCGCCACUAACGUGGCCCGGGCGGUGAUCUCACCAACUCUAACGAGUGCAAGGGCUCCUAUUGCUUUCGAGCAAUAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 68 0.007893325 ubox
1 74 0.018210058 ubox
1 75 0.016093253 ubox
1 78 0.020362820 ubox
1 95 0.067199558 ubox
1 98 0.067747216 ubox
1 101 0.069297085 ubox
1 104 0.069606756 ubox
1 107 0.017573672 ubox
2 67 0.007800802 ubox
2 69 0.003808996 ubox
2 72 0.009091290 ubox
2 74 0.020001788 ubox
2 77 0.020312788 ubox
2 78 0.014854790 ubox
2 95 0.035471795 ubox
2 98 0.035664344 ubox
2 101 0.036429745 ubox
2 104 0.036290195 ubox
2 107 0.011841548 ubox
3 66 0.007085334 ubox
3 69 0.005287412 ubox
3 71 0.011368597 ubox
3 72 0.019513463 ubox
3 76 0.020153203 ubox
3 77 0.014819959 ubox
4 69 0.006753002 ubox
4 71 0.019521141 ubox
4 72 0.039478356 ubox
4 75 0.017762797 ubox
4 76 0.014261382 ubox
5 69 0.009390298 ubox
5 71 0.050537506 ubox
5 72 0.019540387 ubox
5 75 0.012485079 ubox
6 69 0.034390257 ubox
6 71 0.023958398 ubox
6 72 0.008477713 ubox
7 69 0.747484678 ubox
7 71 0.004474413 ubox
8 15 0.004062608 ubox
8 68 0.998849684 ubox
8 69 0.003345792 ubox
9 14 0.004083496 ubox
9 67 0.999920902 ubox
9 68 0.003180168 ubox
10 66 0.999788500 ubox
11 65 0.999901826 ubox
12 63 0.005683167 ubox
12 64 0.998602218 ubox
13 26 0.997390442 ubox
13 27 0.005700839 ubox
14 25 0.999828533 ubox
14 62 0.012064985 ubox
14 63 0.006821820 ubox
15 24 0.999884539 ubox
15 58 0.010171946 ubox
15 62 0.006729482 ubox
16 23 0.999049748 ubox
16 57 0.010323387 ubox
17 22 0.996885755 ubox
17 56 0.010326903 ubox
18 22 0.006048526 ubox
18 55 0.009669479 ubox
20 57 0.006063751 ubox
21 54 0.009525613 ubox
21 56 0.006105603 ubox
22 53 0.009662348 ubox
22 68 0.003281548 ubox
23 51 0.005379575 ubox
23 52 0.008744983 ubox
23 54 0.005955722 ubox
24 50 0.006737130 ubox
24 53 0.006026770 ubox
24 66 0.005037732 ubox
25 32 0.006916000 ubox
25 49 0.006877338 ubox
25 65 0.008984434 ubox
26 31 0.006935364 ubox
26 63 0.007055744 ubox
26 64 0.029749624 ubox
27 31 0.004351299 ubox
27 34 0.004577346 ubox
27 62 0.010048454 ubox
27 63 0.991994283 ubox
27 64 0.004258701 ubox
28 33 0.004743784 ubox
28 62 0.994238948 ubox
28 63 0.013381437 ubox
29 44 0.011573700 ubox
29 48 0.013265403 ubox
29 49 0.013520916 ubox
29 50 0.003332847 ubox
29 59 0.005842832 ubox
30 43 0.011574743 ubox
30 44 0.006625895 ubox
30 47 0.014329954 ubox
30 48 0.013367979 ubox
30 49 0.003546824 ubox
30 59 0.017645681 ubox
31 41 0.003202695 ubox
31 43 0.006624067 ubox
31 47 0.013400946 ubox
31 48 0.003264364 ubox
31 57 0.004733518 ubox
31 59 0.994264636 ubox
32 56 0.004580147 ubox
32 58 0.993409493 ubox
33 39 0.003685032 ubox
33 40 0.011401210 ubox
33 41 0.007215190 ubox
33 43 0.003243452 ubox
33 44 0.998654295 ubox
33 57 0.015509388 ubox
34 39 0.012049786 ubox
34 40 0.005459593 ubox
34 41 0.003332150 ubox
34 43 0.999786682 ubox
34 44 0.003361699 ubox
35 42 0.999321529 ubox
35 45 0.003399643 ubox
35 55 0.004861222 ubox
36 40 0.004395699 ubox
36 41 0.996269988 ubox
36 44 0.003778064 ubox
39 56 0.004331827 ubox
40 55 0.004334922 ubox
41 54 0.004335397 ubox
45 57 0.034865872 ubox
46 57 0.968063604 ubox
47 54 0.007518855 ubox
47 56 0.998958701 ubox
48 55 0.999001243 ubox
49 54 0.997178717 ubox
49 56 0.013151274 ubox
49 62 0.004570350 ubox
50 54 0.004872754 ubox
50 55 0.012705208 ubox
50 61 0.004504243 ubox
53 58 0.004050037 ubox
53 62 0.007036263 ubox
53 63 0.003671025 ubox
58 65 0.003729594 ubox
59 63 0.007786062 ubox
59 64 0.003793079 ubox
68 91 0.005826708 ubox
69 86 0.630065726 ubox
69 87 0.029261192 ubox
69 88 0.011062067 ubox
69 89 0.007428939 ubox
69 90 0.007029634 ubox
69 91 0.003805594 ubox
69 99 0.004243666 ubox
70 85 0.947442579 ubox
71 80 0.003301524 ubox
71 83 0.006474516 ubox
71 84 0.978332472 ubox
71 86 0.006814920 ubox
71 87 0.005444620 ubox
71 88 0.003939186 ubox
71 93 0.004247550 ubox
71 94 0.005642775 ubox
71 97 0.049442246 ubox
71 100 0.016338111 ubox
72 79 0.003561191 ubox
72 83 0.992829573 ubox
72 84 0.006652175 ubox
72 86 0.003196379 ubox
72 92 0.004644104 ubox
72 93 0.004802335 ubox
72 96 0.059671342 ubox
72 97 0.003604079 ubox
72 99 0.019677681 ubox
72 102 0.003367250 ubox
73 78 0.003566405 ubox
73 82 0.996510318 ubox
73 95 0.061704711 ubox
73 98 0.020320773 ubox
73 101 0.003437964 ubox
74 79 0.003554779 ubox
74 81 0.996213958 ubox
74 91 0.017998037 ubox
75 79 0.028147279 ubox
75 80 0.921127307 ubox
75 81 0.005298558 ubox
75 90 0.018068615 ubox
75 93 0.004243132 ubox
75 94 0.068025068 ubox
76 80 0.028435786 ubox
76 89 0.017967586 ubox
76 92 0.003952758 ubox
76 93 0.070798091 ubox
77 88 0.017344895 ubox
77 91 0.003194308 ubox
77 92 0.071473412 ubox
78 91 0.071572394 ubox
80 85 0.014880889 ubox
82 91 0.004625009 ubox
85 89 0.003435513 ubox
85 90 0.006624718 ubox
85 91 0.004005126 ubox
85 92 0.007652639 ubox
85 93 0.004703275 ubox
85 94 0.006002262 ubox
91 95 0.042913411 ubox
91 98 0.103478506 ubox
91 101 0.045402834 ubox
91 104 0.035141801 ubox
91 107 0.010397245 ubox
7 69 0.9500000 lbox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
