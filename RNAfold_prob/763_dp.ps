%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (763)
} def

/sequence { (\
GGAAAUCGGUACACGAUCGGUAGGGCCCGGCGAGCGUUAAGUCUCCCGUGGCCCACCGACGCUGUCCUUCACGAUUUCGAUCGUGAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.016336786 ubox
1 7 0.162736564 ubox
1 12 0.004162582 ubox
1 66 0.003247169 ubox
1 67 0.139028554 ubox
1 70 0.004510536 ubox
1 78 0.003601706 ubox
1 82 0.003247848 ubox
1 95 0.077156667 ubox
1 98 0.080659295 ubox
1 101 0.069605943 ubox
1 104 0.069653048 ubox
1 107 0.017578702 ubox
2 6 0.105852110 ubox
2 7 0.129082819 ubox
2 66 0.139254214 ubox
2 67 0.004057931 ubox
2 68 0.004371637 ubox
2 69 0.006878077 ubox
2 70 0.007646137 ubox
2 78 0.046882487 ubox
2 95 0.040388741 ubox
2 98 0.035808113 ubox
2 101 0.035112664 ubox
2 104 0.034970455 ubox
2 107 0.011409152 ubox
3 65 0.132099052 ubox
3 68 0.008947458 ubox
3 69 0.009287777 ubox
3 77 0.046977113 ubox
4 63 0.005380367 ubox
4 65 0.008016702 ubox
4 68 0.012032950 ubox
4 69 0.008384210 ubox
4 76 0.046974142 ubox
5 17 0.044613941 ubox
5 63 0.011899749 ubox
5 65 0.006935334 ubox
5 68 0.013247026 ubox
5 69 0.008366822 ubox
5 75 0.047024238 ubox
6 16 0.060925819 ubox
6 74 0.047086739 ubox
6 88 0.006808739 ubox
6 89 0.007103571 ubox
6 90 0.011722861 ubox
6 91 0.005781660 ubox
6 92 0.137621122 ubox
6 93 0.010549138 ubox
6 94 0.006960634 ubox
6 96 0.007520376 ubox
6 97 0.007008750 ubox
6 99 0.007644813 ubox
6 100 0.007026748 ubox
6 102 0.006609554 ubox
6 103 0.006120642 ubox
6 105 0.006396369 ubox
6 106 0.005953382 ubox
7 15 0.063660868 ubox
7 61 0.024028682 ubox
7 64 0.114739280 ubox
7 73 0.047088465 ubox
7 91 0.145801874 ubox
8 14 0.063685846 ubox
8 60 0.023974759 ubox
8 62 0.006790402 ubox
8 63 0.115240073 ubox
8 66 0.015293795 ubox
8 67 0.979169616 ubox
8 68 0.069354337 ubox
8 72 0.039159474 ubox
8 95 0.006651593 ubox
8 98 0.006740035 ubox
8 101 0.006715440 ubox
8 104 0.006716555 ubox
9 14 0.003602724 ubox
9 60 0.004943034 ubox
9 62 0.115405033 ubox
9 65 0.009107795 ubox
9 66 0.980343176 ubox
9 67 0.092110378 ubox
9 69 0.004020301 ubox
9 70 0.017669871 ubox
9 72 0.004303096 ubox
9 95 0.011629360 ubox
9 98 0.011247576 ubox
9 101 0.011075710 ubox
9 104 0.010984919 ubox
9 107 0.003571376 ubox
10 59 0.003359010 ubox
10 61 0.072791531 ubox
10 64 0.025570942 ubox
10 71 0.006047750 ubox
10 88 0.003591412 ubox
10 94 0.011237425 ubox
10 97 0.010874212 ubox
10 100 0.010708953 ubox
10 103 0.010620169 ubox
10 106 0.003503208 ubox
11 63 0.024673837 ubox
11 65 0.973103187 ubox
11 69 0.004575684 ubox
12 61 0.003975827 ubox
12 64 0.986160899 ubox
13 63 0.980579719 ubox
13 65 0.011176697 ubox
14 61 0.985054841 ubox
14 64 0.011622840 ubox
15 60 0.987259710 ubox
15 62 0.042123336 ubox
15 63 0.011008467 ubox
17 59 0.995186786 ubox
18 58 0.999876939 ubox
19 57 0.999974817 ubox
20 56 0.999971866 ubox
21 55 0.994690299 ubox
23 53 0.007311918 ubox
23 54 0.999672538 ubox
24 52 0.005529032 ubox
24 53 0.999966531 ubox
25 52 0.999980032 ubox
26 50 0.003990271 ubox
26 51 0.999986440 ubox
27 50 0.999860724 ubox
28 48 0.999266057 ubox
29 46 0.011034867 ubox
29 47 0.999748765 ubox
30 45 0.014181098 ubox
30 46 0.999599227 ubox
30 47 0.017649791 ubox
32 43 0.043371973 ubox
32 44 0.031107982 ubox
32 45 0.997428359 ubox
33 42 0.041228793 ubox
33 44 0.997168616 ubox
34 42 0.144106744 ubox
34 43 0.987905137 ubox
34 45 0.003227956 ubox
35 41 0.935194295 ubox
36 42 0.034459804 ubox
36 43 0.012746681 ubox
37 41 0.017379916 ubox
58 66 0.005152799 ubox
59 65 0.006076764 ubox
60 64 0.006791045 ubox
61 95 0.005308385 ubox
61 98 0.011746109 ubox
61 101 0.004096935 ubox
62 91 0.018984869 ubox
63 90 0.018915818 ubox
63 92 0.009961904 ubox
63 93 0.003599914 ubox
63 94 0.004335649 ubox
63 96 0.019725630 ubox
63 99 0.006817592 ubox
63 102 0.004730883 ubox
63 105 0.003353042 ubox
64 95 0.020863491 ubox
64 98 0.007219943 ubox
64 101 0.005010835 ubox
64 104 0.003614095 ubox
65 88 0.004158206 ubox
65 90 0.011330423 ubox
65 92 0.025461195 ubox
65 93 0.003655555 ubox
65 94 0.017707147 ubox
65 97 0.006122037 ubox
65 100 0.004437313 ubox
65 103 0.003238372 ubox
66 91 0.031052081 ubox
67 91 0.025154762 ubox
68 86 0.019849122 ubox
68 87 0.886483552 ubox
68 88 0.057695915 ubox
68 89 0.022453574 ubox
68 90 0.027142195 ubox
68 91 0.010853497 ubox
68 92 0.008570464 ubox
68 93 0.006663482 ubox
68 94 0.004063378 ubox
68 96 0.003818006 ubox
68 97 0.003168876 ubox
69 85 0.003520725 ubox
69 86 0.987322074 ubox
69 87 0.045278746 ubox
69 88 0.009890901 ubox
69 89 0.011386277 ubox
69 90 0.004201202 ubox
69 91 0.004746428 ubox
69 92 0.004498678 ubox
70 85 0.998759215 ubox
70 91 0.003704878 ubox
71 84 0.998661128 ubox
72 83 0.998836168 ubox
73 82 0.998793381 ubox
74 81 0.985096107 ubox
75 79 0.035179594 ubox
75 80 0.899542154 ubox
75 88 0.003505922 ubox
76 80 0.028098786 ubox
76 87 0.003896139 ubox
77 86 0.004010741 ubox
78 85 0.004036543 ubox
79 95 0.005704967 ubox
81 92 0.023307127 ubox
82 91 0.024895230 ubox
83 95 0.013113741 ubox
83 98 0.010745769 ubox
83 101 0.009058062 ubox
83 104 0.007722461 ubox
84 89 0.004730289 ubox
84 90 0.003405993 ubox
84 94 0.013003721 ubox
84 96 0.004279146 ubox
84 97 0.010441001 ubox
84 99 0.003341081 ubox
84 100 0.008827909 ubox
84 103 0.007517227 ubox
85 95 0.005169381 ubox
85 98 0.004035365 ubox
85 101 0.003350834 ubox
91 95 0.042553848 ubox
91 98 0.102546020 ubox
91 101 0.044965787 ubox
91 104 0.034788719 ubox
91 107 0.010290886 ubox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 41 0.9500000 lbox
68 87 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
