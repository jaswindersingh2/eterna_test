%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (730)
} def

/sequence { (\
GGAAAGGCGGCGCAAAGGGCGGCCAAGGAGGCGGGAAAACGGCGUCCAGGAGGCGGGAAACGGCGUCCGGAUACCUUCGGGUAUCCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.012339935 ubox
1 24 0.005359358 ubox
1 47 0.011099380 ubox
1 68 0.021941538 ubox
1 86 0.020180984 ubox
1 95 0.242563087 ubox
1 98 0.244132355 ubox
1 101 0.249695078 ubox
1 104 0.250812625 ubox
1 107 0.063323739 ubox
2 8 0.006844364 ubox
2 23 0.004481326 ubox
2 24 0.003722749 ubox
2 46 0.010824291 ubox
2 67 0.021241375 ubox
2 68 0.005188279 ubox
2 85 0.017324458 ubox
2 86 0.008139428 ubox
2 95 0.128045787 ubox
2 98 0.128504409 ubox
2 101 0.131242724 ubox
2 104 0.130741159 ubox
2 107 0.042661208 ubox
3 45 0.009737328 ubox
3 66 0.018917050 ubox
3 84 0.012328289 ubox
6 23 0.016581439 ubox
6 24 0.996672877 ubox
6 67 0.003801545 ubox
6 95 0.015111011 ubox
6 98 0.015132347 ubox
6 101 0.015096113 ubox
6 104 0.014788944 ubox
6 107 0.005155181 ubox
7 23 0.997931606 ubox
7 24 0.014029850 ubox
7 66 0.003983474 ubox
7 68 0.003232179 ubox
7 95 0.008253425 ubox
7 98 0.008255532 ubox
7 101 0.006978476 ubox
7 104 0.006636949 ubox
8 21 0.043192376 ubox
8 22 0.996744998 ubox
8 44 0.003280125 ubox
8 65 0.004617915 ubox
8 91 0.009424192 ubox
9 20 0.058243689 ubox
9 23 0.022244453 ubox
9 24 0.056316900 ubox
9 43 0.003265887 ubox
9 46 0.003930186 ubox
9 64 0.004592936 ubox
9 67 0.004707654 ubox
10 20 0.992999818 ubox
10 23 0.056371068 ubox
10 45 0.004134976 ubox
10 66 0.004904981 ubox
11 17 0.007434140 ubox
11 18 0.071905777 ubox
11 19 0.992354221 ubox
11 21 0.087439202 ubox
11 22 0.040553858 ubox
11 41 0.003253468 ubox
11 44 0.004507368 ubox
11 62 0.004588123 ubox
11 65 0.005325167 ubox
12 20 0.097125581 ubox
12 40 0.003224496 ubox
12 43 0.004507964 ubox
12 61 0.004554231 ubox
12 64 0.005325803 ubox
13 17 0.782137710 ubox
13 18 0.231858034 ubox
13 19 0.097014138 ubox
13 21 0.004383559 ubox
13 42 0.004501997 ubox
13 63 0.005322507 ubox
19 54 0.004413568 ubox
20 34 0.005296548 ubox
20 53 0.004416001 ubox
20 56 0.005054063 ubox
22 32 0.005759638 ubox
22 54 0.005321249 ubox
23 31 0.005788148 ubox
23 50 0.004433730 ubox
23 53 0.005333023 ubox
24 30 0.005785320 ubox
24 49 0.004455244 ubox
24 52 0.005308232 ubox
24 91 0.004794829 ubox
27 46 0.010109767 ubox
27 47 0.998574463 ubox
27 68 0.017614927 ubox
27 95 0.004678564 ubox
27 98 0.004706779 ubox
27 101 0.004799764 ubox
27 104 0.004806955 ubox
28 45 0.009837266 ubox
28 46 0.999666009 ubox
28 47 0.004558448 ubox
28 67 0.017636716 ubox
29 45 0.997123754 ubox
29 66 0.017594811 ubox
30 43 0.095072856 ubox
30 46 0.005014273 ubox
31 43 0.995022995 ubox
31 45 0.005307782 ubox
31 64 0.017618680 ubox
32 41 0.159155265 ubox
32 42 0.986663671 ubox
32 44 0.005980228 ubox
32 63 0.017586454 ubox
33 40 0.203272711 ubox
33 43 0.005941651 ubox
34 40 0.964400618 ubox
34 61 0.017029655 ubox
35 40 0.044249233 ubox
40 55 0.007033325 ubox
40 56 0.015647912 ubox
41 54 0.006618629 ubox
42 54 0.016240861 ubox
43 52 0.006144665 ubox
43 53 0.016420542 ubox
45 51 0.016314028 ubox
46 50 0.016217301 ubox
49 67 0.008073247 ubox
49 68 0.998200257 ubox
50 66 0.007852679 ubox
50 67 0.999467142 ubox
50 68 0.008288689 ubox
51 66 0.997044517 ubox
52 64 0.068025479 ubox
52 67 0.010101790 ubox
52 68 0.003974343 ubox
53 64 0.997213804 ubox
53 66 0.010662300 ubox
53 67 0.003948776 ubox
54 62 0.112883560 ubox
54 63 0.992986913 ubox
54 65 0.011726738 ubox
55 61 0.143901587 ubox
55 64 0.011722351 ubox
56 61 0.941788877 ubox
57 61 0.019202917 ubox
69 86 0.998664501 ubox
70 85 0.999825015 ubox
71 84 0.999653637 ubox
72 83 0.999484585 ubox
73 82 0.999725215 ubox
74 80 0.012105533 ubox
74 81 0.999905194 ubox
75 79 0.016655609 ubox
75 80 0.999086290 ubox
75 81 0.003245824 ubox
76 80 0.004121601 ubox
86 91 0.007908401 ubox
91 95 0.054609594 ubox
91 98 0.119612887 ubox
91 101 0.046276795 ubox
91 104 0.029969853 ubox
91 107 0.008724050 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
