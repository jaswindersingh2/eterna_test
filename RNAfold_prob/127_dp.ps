%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (127)
} def

/sequence { (\
GGAAACUCGCCCUGCUGUCCCGUCCAAAGCACUUCGGUAGCAGGUCGUGGUCUCGCAGUUGCACUUCAUAAUGGGUUCGCCCAUUAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.020784680 ubox
1 7 0.004177229 ubox
1 8 0.014118155 ubox
1 10 0.005321642 ubox
1 11 0.006219736 ubox
1 12 0.010958348 ubox
1 52 0.039607694 ubox
1 53 0.207693355 ubox
1 54 0.204438037 ubox
1 56 0.512819693 ubox
1 62 0.005582861 ubox
1 67 0.004148089 ubox
1 95 0.017989115 ubox
1 98 0.019461859 ubox
1 101 0.052638656 ubox
1 104 0.057257762 ubox
1 107 0.014519683 ubox
2 6 0.005266101 ubox
2 7 0.011139451 ubox
2 8 0.013874430 ubox
2 10 0.006472882 ubox
2 11 0.010987387 ubox
2 46 0.006001020 ubox
2 51 0.032963601 ubox
2 52 0.276658488 ubox
2 53 0.135172630 ubox
2 54 0.916351354 ubox
2 56 0.036427225 ubox
2 62 0.005815249 ubox
2 66 0.003439094 ubox
2 67 0.005138675 ubox
2 101 0.008121565 ubox
2 104 0.008670939 ubox
3 7 0.012116191 ubox
3 45 0.005937420 ubox
3 51 0.267619401 ubox
3 53 0.898177964 ubox
3 60 0.004378652 ubox
3 65 0.003272917 ubox
3 66 0.005109856 ubox
4 48 0.003345863 ubox
4 51 0.066055007 ubox
4 53 0.055045447 ubox
4 59 0.003873589 ubox
4 60 0.007725323 ubox
4 65 0.004680103 ubox
5 48 0.020594342 ubox
5 51 0.910435384 ubox
5 53 0.007957608 ubox
5 59 0.009234692 ubox
6 47 0.018711229 ubox
6 49 0.286314311 ubox
6 50 0.928729357 ubox
6 55 0.003468162 ubox
6 58 0.009490206 ubox
7 47 0.005457360 ubox
7 49 0.818504849 ubox
7 50 0.103116684 ubox
7 57 0.009162822 ubox
8 47 0.925717766 ubox
8 49 0.354351320 ubox
9 45 0.041937220 ubox
9 46 0.927292536 ubox
9 48 0.355711299 ubox
9 56 0.007727346 ubox
9 62 0.020074457 ubox
10 44 0.073997387 ubox
10 47 0.353824607 ubox
10 55 0.007718934 ubox
10 61 0.020059560 ubox
11 43 0.052636070 ubox
11 44 0.995321805 ubox
12 40 0.005674398 ubox
12 43 0.998254086 ubox
12 58 0.021326868 ubox
13 39 0.005759785 ubox
13 42 0.999381381 ubox
13 57 0.025126264 ubox
14 38 0.005809284 ubox
14 41 0.999632470 ubox
14 56 0.025711719 ubox
14 59 0.003214450 ubox
15 37 0.005923523 ubox
15 40 0.999613956 ubox
15 55 0.025691167 ubox
15 58 0.003268330 ubox
16 36 0.006311357 ubox
16 39 0.996813944 ubox
16 40 0.004527521 ubox
16 57 0.003306743 ubox
17 32 0.004236411 ubox
17 35 0.007398129 ubox
17 38 0.903348124 ubox
17 52 0.023744136 ubox
17 56 0.003310802 ubox
18 31 0.004280871 ubox
18 36 0.003452110 ubox
18 37 0.103620499 ubox
18 39 0.022102636 ubox
18 55 0.003279875 ubox
19 36 0.105934527 ubox
19 37 0.548932374 ubox
19 50 0.025897260 ubox
20 29 0.006956584 ubox
20 36 0.521668277 ubox
20 37 0.823770808 ubox
20 49 0.025910442 ubox
21 29 0.045916019 ubox
21 36 0.843676776 ubox
21 37 0.008764617 ubox
21 47 0.025929156 ubox
22 30 0.093339383 ubox
22 32 0.383690625 ubox
22 33 0.022870245 ubox
22 34 0.088483880 ubox
22 35 0.854010223 ubox
22 38 0.006048731 ubox
22 46 0.025912521 ubox
23 27 0.008571588 ubox
23 28 0.015377538 ubox
23 29 0.091187254 ubox
23 31 0.377597239 ubox
23 37 0.006654860 ubox
24 29 0.242084312 ubox
24 36 0.007159508 ubox
24 37 0.042734503 ubox
24 44 0.025924881 ubox
25 29 0.156469882 ubox
25 36 0.042787293 ubox
25 43 0.025926864 ubox
26 33 0.088109932 ubox
26 34 0.088597092 ubox
27 33 0.085529715 ubox
27 34 0.077189296 ubox
28 33 0.069010488 ubox
28 34 0.028032267 ubox
29 33 0.019615952 ubox
29 34 0.012858229 ubox
29 35 0.011311825 ubox
29 38 0.006616370 ubox
29 41 0.025664471 ubox
30 36 0.003322476 ubox
30 37 0.007168695 ubox
30 40 0.025667824 ubox
31 38 0.025465913 ubox
32 37 0.025776264 ubox
45 57 0.003515733 ubox
46 55 0.006049417 ubox
47 54 0.006811104 ubox
47 56 0.047639819 ubox
47 104 0.003476994 ubox
47 107 0.004601798 ubox
48 55 0.047870601 ubox
48 57 0.021930824 ubox
48 103 0.003216607 ubox
48 105 0.006626766 ubox
48 106 0.004546180 ubox
49 54 0.047759491 ubox
49 56 0.024420923 ubox
49 101 0.003226257 ubox
49 104 0.007303039 ubox
50 54 0.005908283 ubox
50 56 0.021639945 ubox
50 95 0.003402362 ubox
50 101 0.007176711 ubox
50 104 0.025935096 ubox
50 107 0.008365550 ubox
51 55 0.020297159 ubox
51 94 0.003295285 ubox
51 100 0.007007234 ubox
51 103 0.025528782 ubox
51 105 0.003920233 ubox
51 106 0.008272063 ubox
53 57 0.003589066 ubox
53 63 0.003424274 ubox
53 92 0.003317623 ubox
53 99 0.004505037 ubox
53 102 0.013049655 ubox
53 103 0.013318335 ubox
53 105 0.005118075 ubox
53 106 0.003398084 ubox
54 91 0.003417874 ubox
55 62 0.133891435 ubox
55 67 0.008069770 ubox
55 98 0.042575576 ubox
55 101 0.307778755 ubox
55 104 0.074365414 ubox
55 107 0.011279868 ubox
56 61 0.133839361 ubox
57 65 0.011491541 ubox
58 62 0.003520183 ubox
58 64 0.012162373 ubox
58 67 0.003460818 ubox
58 95 0.129173428 ubox
58 98 0.950355132 ubox
58 101 0.208123242 ubox
58 104 0.081780658 ubox
58 107 0.021940140 ubox
59 63 0.010983713 ubox
59 93 0.005811539 ubox
59 94 0.128982240 ubox
59 96 0.005014399 ubox
59 97 0.951266807 ubox
59 100 0.208156345 ubox
59 103 0.081786893 ubox
59 106 0.022176361 ubox
60 92 0.007062035 ubox
60 93 0.125073382 ubox
60 94 0.010162337 ubox
60 96 0.951286544 ubox
60 97 0.004998281 ubox
60 99 0.207572787 ubox
60 102 0.081510640 ubox
60 105 0.022214354 ubox
61 95 0.947789502 ubox
61 98 0.206779948 ubox
61 101 0.081173296 ubox
61 104 0.022129399 ubox
62 91 0.026306375 ubox
64 91 0.960731360 ubox
65 87 0.004152760 ubox
65 88 0.020914558 ubox
65 89 0.024862409 ubox
65 90 0.963290087 ubox
65 91 0.037413580 ubox
65 92 0.024507945 ubox
65 93 0.187239376 ubox
65 94 0.016874916 ubox
65 96 0.003471682 ubox
65 97 0.004863527 ubox
66 87 0.021023267 ubox
66 88 0.028440816 ubox
66 89 0.944983465 ubox
66 90 0.036476096 ubox
66 91 0.024508855 ubox
66 92 0.195370236 ubox
66 93 0.013975107 ubox
66 96 0.004102679 ubox
67 91 0.195572394 ubox
68 85 0.003268669 ubox
69 86 0.983242291 ubox
69 87 0.034585975 ubox
69 88 0.012941632 ubox
69 89 0.031103176 ubox
69 90 0.016032082 ubox
70 84 0.003580699 ubox
70 85 0.997029303 ubox
71 84 0.998773120 ubox
71 85 0.003685111 ubox
72 83 0.999562347 ubox
73 81 0.007157660 ubox
73 82 0.999957769 ubox
74 80 0.010043310 ubox
74 81 0.999911751 ubox
75 80 0.993717966 ubox
75 81 0.003951698 ubox
91 95 0.004948940 ubox
91 98 0.009385638 ubox
2 54 0.9500000 lbox
3 53 0.9500000 lbox
5 51 0.9500000 lbox
6 50 0.9500000 lbox
7 49 0.9500000 lbox
8 47 0.9500000 lbox
9 46 0.9500000 lbox
11 44 0.9500000 lbox
12 43 0.9500000 lbox
13 42 0.9500000 lbox
14 41 0.9500000 lbox
15 40 0.9500000 lbox
16 39 0.9500000 lbox
17 38 0.9500000 lbox
20 37 0.9500000 lbox
21 36 0.9500000 lbox
22 35 0.9500000 lbox
58 98 0.9500000 lbox
59 97 0.9500000 lbox
60 96 0.9500000 lbox
61 95 0.9500000 lbox
64 91 0.9500000 lbox
65 90 0.9500000 lbox
66 89 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
