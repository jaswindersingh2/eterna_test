%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (321)
} def

/sequence { (\
GGAAAGUUGGUGGAAAAAACCACGUCAAAGACACAACAGGGAGAGAAAAACUCGUUGAAAACAACCCCAACUGACUUCGGUCAGUUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 32 0.008640541 ubox
1 34 0.008404137 ubox
1 37 0.003166554 ubox
1 66 0.012352877 ubox
1 67 0.057017809 ubox
1 68 0.229560631 ubox
1 95 0.019608837 ubox
1 98 0.021770149 ubox
1 101 0.105708221 ubox
1 104 0.161289463 ubox
1 107 0.041526405 ubox
2 26 0.008613729 ubox
2 32 0.003848102 ubox
2 65 0.012051803 ubox
2 66 0.057398744 ubox
2 67 0.229536125 ubox
2 68 0.009924659 ubox
2 95 0.010218502 ubox
2 98 0.011826751 ubox
2 101 0.060117741 ubox
2 104 0.066232942 ubox
2 107 0.022049050 ubox
3 25 0.008464519 ubox
5 72 0.003574258 ubox
6 23 0.015794895 ubox
6 26 0.005271014 ubox
6 32 0.005327272 ubox
6 34 0.004421933 ubox
6 37 0.119543528 ubox
6 62 0.021759978 ubox
6 65 0.239400440 ubox
6 66 0.005947745 ubox
6 71 0.004211570 ubox
6 95 0.048181477 ubox
6 98 0.548971191 ubox
6 101 0.538354851 ubox
6 104 0.537586624 ubox
6 107 0.190377184 ubox
7 22 0.011161201 ubox
7 28 0.012014808 ubox
7 31 0.005166591 ubox
7 33 0.004113372 ubox
7 36 0.119697897 ubox
7 61 0.021627423 ubox
7 64 0.239672927 ubox
7 70 0.004341126 ubox
7 88 0.003872571 ubox
7 89 0.004168043 ubox
7 90 0.004087774 ubox
7 92 0.003758963 ubox
7 93 0.004707675 ubox
7 94 0.047824886 ubox
7 97 0.549601353 ubox
7 100 0.538905300 ubox
7 103 0.538077990 ubox
7 106 0.192536065 ubox
8 22 0.020793593 ubox
8 27 0.013434604 ubox
8 30 0.004201574 ubox
8 35 0.119739886 ubox
8 38 0.005157607 ubox
8 60 0.020332120 ubox
8 63 0.239608609 ubox
8 69 0.004848302 ubox
8 87 0.004164805 ubox
8 88 0.004278594 ubox
8 89 0.004210087 ubox
8 90 0.003260557 ubox
8 91 0.003665418 ubox
8 92 0.005334106 ubox
8 93 0.044944079 ubox
8 96 0.549735599 ubox
8 99 0.538952526 ubox
8 102 0.538065943 ubox
8 105 0.193400494 ubox
9 21 0.027777758 ubox
9 23 0.004700074 ubox
9 26 0.013759478 ubox
9 34 0.119567782 ubox
9 37 0.005848681 ubox
9 62 0.239254239 ubox
9 68 0.005362669 ubox
9 86 0.003168277 ubox
9 95 0.548981099 ubox
9 98 0.538145751 ubox
9 101 0.537251374 ubox
9 104 0.193265594 ubox
10 20 0.028551836 ubox
10 23 0.997537024 ubox
10 25 0.003868304 ubox
10 32 0.004084361 ubox
10 34 0.012435814 ubox
10 67 0.003638734 ubox
10 95 0.005870369 ubox
10 98 0.005704032 ubox
11 19 0.028368196 ubox
11 22 0.998604218 ubox
11 31 0.003672449 ubox
11 33 0.012697020 ubox
11 94 0.005674467 ubox
11 96 0.010880200 ubox
11 97 0.005505682 ubox
11 99 0.010694771 ubox
11 100 0.003459407 ubox
11 102 0.003881323 ubox
12 20 0.006840632 ubox
12 21 0.999227643 ubox
12 23 0.003419484 ubox
12 32 0.012610038 ubox
12 95 0.012528016 ubox
12 98 0.012292491 ubox
12 101 0.004462048 ubox
13 20 0.995422376 ubox
13 21 0.004540143 ubox
19 25 0.005597886 ubox
20 24 0.005724411 ubox
23 30 0.007063862 ubox
24 32 0.955225646 ubox
24 34 0.091965034 ubox
24 37 0.061454102 ubox
24 62 0.004220594 ubox
24 65 0.005066659 ubox
24 67 0.003288749 ubox
24 68 0.003794246 ubox
24 95 0.012557177 ubox
24 98 0.008953094 ubox
24 101 0.003824232 ubox
25 29 0.005991460 ubox
25 30 0.011738737 ubox
25 31 0.955936569 ubox
25 33 0.088212367 ubox
25 35 0.004861336 ubox
25 36 0.058859558 ubox
25 40 0.007941100 ubox
25 41 0.005285352 ubox
25 42 0.012912528 ubox
25 58 0.004430835 ubox
25 61 0.004045280 ubox
25 64 0.004895736 ubox
25 92 0.017739834 ubox
25 94 0.011574529 ubox
25 97 0.008429291 ubox
25 100 0.003632278 ubox
26 30 0.948217830 ubox
26 39 0.010259962 ubox
26 40 0.007661430 ubox
26 41 0.013783781 ubox
26 57 0.004700003 ubox
26 91 0.019093415 ubox
27 56 0.004515587 ubox
28 55 0.003292212 ubox
30 34 0.022479626 ubox
30 37 0.051196651 ubox
30 62 0.007929295 ubox
30 65 0.004637437 ubox
30 95 0.004175317 ubox
32 39 0.020001211 ubox
32 40 0.015224619 ubox
32 41 0.010572183 ubox
32 91 0.004976271 ubox
34 39 0.063870397 ubox
34 40 0.050953573 ubox
34 41 0.032012656 ubox
34 43 0.006697524 ubox
34 57 0.170270879 ubox
34 91 0.017463276 ubox
35 56 0.170948392 ubox
36 55 0.170867383 ubox
37 41 0.010335151 ubox
37 43 0.005720175 ubox
37 45 0.003649303 ubox
37 54 0.170439141 ubox
37 57 0.368143116 ubox
37 91 0.016656668 ubox
38 52 0.062205657 ubox
38 56 0.369575708 ubox
39 51 0.062642795 ubox
39 52 0.092664062 ubox
39 53 0.110476153 ubox
39 55 0.366153397 ubox
39 56 0.003805186 ubox
39 66 0.013842021 ubox
39 67 0.085977613 ubox
39 68 0.871255902 ubox
39 95 0.005424334 ubox
39 98 0.004198788 ubox
40 51 0.094551042 ubox
40 52 0.110021232 ubox
40 53 0.012558446 ubox
40 55 0.004797873 ubox
40 56 0.017167197 ubox
40 65 0.013369483 ubox
40 66 0.086300012 ubox
40 67 0.872206110 ubox
40 68 0.057776788 ubox
40 95 0.004942637 ubox
40 98 0.003758233 ubox
41 51 0.109645505 ubox
41 52 0.007992641 ubox
41 53 0.413834437 ubox
41 55 0.021825418 ubox
41 56 0.008335671 ubox
41 65 0.067324814 ubox
41 66 0.868485725 ubox
41 67 0.057614405 ubox
41 68 0.004113071 ubox
42 52 0.415463919 ubox
42 55 0.018246296 ubox
42 56 0.016210133 ubox
43 51 0.414350553 ubox
43 52 0.006787212 ubox
43 53 0.877505903 ubox
43 55 0.015842611 ubox
43 56 0.003438775 ubox
43 62 0.008538071 ubox
43 65 0.028297981 ubox
43 66 0.008355184 ubox
44 52 0.878504208 ubox
44 55 0.003769394 ubox
45 51 0.875462989 ubox
45 52 0.007345851 ubox
45 53 0.102987105 ubox
45 62 0.010030846 ubox
45 65 0.003594255 ubox
46 52 0.099899193 ubox
47 52 0.007722173 ubox
47 56 0.005147763 ubox
48 55 0.004666847 ubox
48 56 0.006137741 ubox
49 55 0.005713277 ubox
49 56 0.010095677 ubox
50 55 0.008093317 ubox
50 56 0.005268179 ubox
51 57 0.019724562 ubox
52 58 0.007325798 ubox
53 57 0.007498213 ubox
54 62 0.096605735 ubox
54 65 0.897511644 ubox
54 66 0.012011218 ubox
54 67 0.003492215 ubox
54 68 0.003540937 ubox
54 71 0.005976027 ubox
54 95 0.003796644 ubox
54 98 0.028457998 ubox
54 101 0.039094877 ubox
54 104 0.005092764 ubox
55 60 0.004561017 ubox
55 61 0.095304887 ubox
55 63 0.003605877 ubox
55 64 0.900245936 ubox
55 70 0.006205840 ubox
55 94 0.003776385 ubox
55 97 0.028519227 ubox
55 100 0.039438537 ubox
55 103 0.005111773 ubox
56 60 0.079399592 ubox
56 61 0.013652913 ubox
56 63 0.900625500 ubox
56 64 0.008405893 ubox
56 69 0.007421516 ubox
56 93 0.003660668 ubox
56 96 0.028542211 ubox
56 99 0.039640640 ubox
56 102 0.005111791 ubox
57 62 0.895803322 ubox
57 65 0.008164976 ubox
57 66 0.007658833 ubox
57 67 0.003547864 ubox
57 68 0.009328222 ubox
57 95 0.028446791 ubox
57 98 0.039566836 ubox
57 101 0.005093223 ubox
62 91 0.019042069 ubox
65 91 0.038320982 ubox
66 91 0.043436819 ubox
67 91 0.027397719 ubox
68 91 0.036575091 ubox
69 85 0.017032046 ubox
69 86 0.903196056 ubox
70 81 0.007153766 ubox
70 85 0.988482338 ubox
70 86 0.023457877 ubox
71 80 0.007633334 ubox
71 84 0.999470571 ubox
72 79 0.007628320 ubox
72 83 0.999640072 ubox
72 87 0.004293261 ubox
73 78 0.007563634 ubox
73 82 0.999939231 ubox
73 86 0.004658024 ubox
74 81 0.999649940 ubox
74 85 0.004701288 ubox
75 79 0.011786108 ubox
75 80 0.998655070 ubox
75 84 0.004707468 ubox
76 80 0.004029203 ubox
76 83 0.004443196 ubox
84 95 0.024175085 ubox
84 98 0.006794350 ubox
85 90 0.004515543 ubox
85 91 0.006356584 ubox
85 92 0.017179175 ubox
85 93 0.011411996 ubox
85 94 0.027165421 ubox
85 97 0.007801577 ubox
85 100 0.003230858 ubox
86 90 0.011742605 ubox
86 91 0.026031921 ubox
86 92 0.021636761 ubox
86 93 0.034968269 ubox
86 94 0.011462757 ubox
86 96 0.010359356 ubox
86 97 0.006253682 ubox
86 99 0.005270829 ubox
86 100 0.003653860 ubox
91 95 0.068564105 ubox
91 98 0.121967142 ubox
91 101 0.021784163 ubox
91 104 0.009694549 ubox
6 98 0.9500000 lbox
7 97 0.9500000 lbox
8 96 0.9500000 lbox
9 95 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
