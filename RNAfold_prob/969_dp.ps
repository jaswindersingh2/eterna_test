%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (969)
} def

/sequence { (\
GGAAAGAUACAGUACAAAGGUACAAUAUGCAUCAAAAAAGGAUGCAUAUACUUCAAAGGAAGAGUAUCCAUCGAAUUCGUUCGAUGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.021914246 ubox
1 15 0.003272250 ubox
1 68 0.006017933 ubox
1 69 0.030132943 ubox
1 72 0.003668923 ubox
1 95 0.068872282 ubox
1 98 0.069676356 ubox
1 101 0.071285274 ubox
1 104 0.071592102 ubox
1 107 0.018075817 ubox
2 10 0.005665994 ubox
2 54 0.003911560 ubox
2 67 0.004065392 ubox
2 68 0.033130306 ubox
2 69 0.007651643 ubox
2 71 0.003230343 ubox
2 72 0.019280993 ubox
2 95 0.036333508 ubox
2 98 0.036655205 ubox
2 101 0.037425265 ubox
2 104 0.037281756 ubox
2 107 0.012165252 ubox
3 53 0.003695033 ubox
3 67 0.030126557 ubox
3 71 0.019196989 ubox
4 52 0.003184863 ubox
5 65 0.004399558 ubox
6 10 0.004717310 ubox
6 67 0.004504757 ubox
6 68 0.992828553 ubox
6 69 0.005169836 ubox
6 95 0.010434315 ubox
6 98 0.010752326 ubox
6 101 0.010705738 ubox
6 104 0.010484237 ubox
6 107 0.003654478 ubox
7 28 0.004509983 ubox
7 65 0.005282117 ubox
7 67 0.995432795 ubox
8 27 0.004840829 ubox
8 64 0.005253616 ubox
8 66 0.995817288 ubox
8 93 0.003887282 ubox
9 26 0.005046158 ubox
9 65 0.995859964 ubox
10 64 0.994667049 ubox
10 91 0.009548183 ubox
11 21 0.003287464 ubox
11 26 0.003305697 ubox
12 23 0.996517316 ubox
12 67 0.004320437 ubox
12 95 0.004536885 ubox
12 98 0.004523563 ubox
12 101 0.004615182 ubox
12 104 0.004664221 ubox
13 19 0.003333702 ubox
13 22 0.997704763 ubox
13 59 0.003600447 ubox
13 61 0.019955391 ubox
13 66 0.004600110 ubox
13 94 0.004350615 ubox
13 97 0.004335252 ubox
13 100 0.004423882 ubox
13 103 0.004471198 ubox
14 21 0.997604212 ubox
14 65 0.004643539 ubox
15 19 0.018351856 ubox
15 20 0.995383125 ubox
15 58 0.010048734 ubox
15 59 0.018129151 ubox
15 64 0.004644832 ubox
18 53 0.017529843 ubox
19 23 0.003727353 ubox
19 52 0.020034952 ubox
19 54 0.006437735 ubox
19 68 0.028921913 ubox
20 51 0.020418844 ubox
20 53 0.006217158 ubox
20 54 0.011364114 ubox
20 67 0.029260615 ubox
21 50 0.020406592 ubox
21 66 0.029341367 ubox
22 49 0.015518573 ubox
22 52 0.004931999 ubox
22 65 0.029344215 ubox
23 64 0.029309523 ubox
24 49 0.037462894 ubox
24 52 0.003594062 ubox
25 47 0.003258955 ubox
25 49 0.949168702 ubox
26 48 0.991421501 ubox
26 50 0.008246686 ubox
27 47 0.998329496 ubox
27 49 0.007155290 ubox
28 46 0.999295672 ubox
28 48 0.003884546 ubox
29 45 0.999988675 ubox
30 44 0.999989390 ubox
31 43 0.999561840 ubox
32 41 0.049936986 ubox
32 42 0.998364840 ubox
33 40 0.094993040 ubox
33 41 0.994614524 ubox
46 67 0.005124320 ubox
47 66 0.006393841 ubox
48 65 0.007565738 ubox
48 67 0.012058216 ubox
49 63 0.050987207 ubox
49 64 0.008036700 ubox
49 66 0.018575361 ubox
50 65 0.027055812 ubox
51 58 0.041415367 ubox
51 59 0.037021338 ubox
51 62 0.985654877 ubox
51 64 0.027973077 ubox
52 57 0.038418569 ubox
52 58 0.036624684 ubox
52 59 0.005493103 ubox
52 60 0.031254118 ubox
52 61 0.991164844 ubox
52 62 0.006796662 ubox
52 63 0.028698392 ubox
52 64 0.005167307 ubox
53 57 0.028023494 ubox
53 58 0.005466188 ubox
53 59 0.034736470 ubox
53 60 0.992365754 ubox
53 61 0.006331171 ubox
53 62 0.026970436 ubox
53 63 0.042232130 ubox
53 87 0.003321818 ubox
54 58 0.038309859 ubox
54 59 0.990752677 ubox
54 62 0.044642346 ubox
54 86 0.003371894 ubox
58 69 0.005176114 ubox
59 68 0.006026493 ubox
60 67 0.005683629 ubox
64 95 0.028518291 ubox
65 90 0.003287341 ubox
65 94 0.028149754 ubox
67 87 0.012718105 ubox
67 88 0.010606135 ubox
67 92 0.029735286 ubox
68 86 0.010261043 ubox
68 91 0.030540687 ubox
69 86 0.996432079 ubox
69 91 0.004731666 ubox
70 85 0.998909952 ubox
71 84 0.999423546 ubox
71 92 0.004865256 ubox
72 83 0.999715228 ubox
72 91 0.005207868 ubox
73 78 0.003345152 ubox
73 81 0.003556409 ubox
73 82 0.999652295 ubox
74 80 0.018834410 ubox
74 81 0.982307503 ubox
75 80 0.773322049 ubox
75 81 0.038452347 ubox
76 88 0.010628653 ubox
76 93 0.005700358 ubox
77 87 0.012081064 ubox
77 92 0.006524423 ubox
78 86 0.012227197 ubox
78 91 0.006607025 ubox
79 85 0.011716520 ubox
79 95 0.010423025 ubox
79 101 0.004303798 ubox
80 84 0.010850396 ubox
80 88 0.005145080 ubox
80 93 0.010318560 ubox
80 94 0.008560808 ubox
80 100 0.004284276 ubox
81 87 0.005533317 ubox
81 92 0.012880184 ubox
81 93 0.006130758 ubox
81 99 0.004111690 ubox
82 86 0.005528459 ubox
82 91 0.014288603 ubox
83 98 0.004201950 ubox
85 96 0.007417627 ubox
86 95 0.010746733 ubox
86 98 0.004330394 ubox
86 101 0.003246532 ubox
91 95 0.043079811 ubox
91 98 0.103796780 ubox
91 101 0.045504247 ubox
91 104 0.035190207 ubox
91 107 0.010410749 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
