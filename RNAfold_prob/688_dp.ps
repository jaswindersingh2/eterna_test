%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (688)
} def

/sequence { (\
GGAAAGAUCACGUACGAAAAAAAAAAGUACAACAUAGAAAAAAAAAAUAUGACGAUCAAAAAAAAAAAGUGCUAUUUCGGUAGCACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.004219069 ubox
1 9 0.031563413 ubox
1 11 0.066875584 ubox
1 15 0.003320432 ubox
1 33 0.005130751 ubox
1 53 0.012959980 ubox
1 57 0.016761324 ubox
1 86 0.004529240 ubox
1 95 0.072183533 ubox
1 98 0.074220413 ubox
1 101 0.074794898 ubox
1 104 0.074622418 ubox
1 107 0.018839584 ubox
2 8 0.023172410 ubox
2 9 0.094498414 ubox
2 11 0.024032748 ubox
2 53 0.006459071 ubox
2 56 0.010601752 ubox
2 57 0.033659839 ubox
2 95 0.037009845 ubox
2 98 0.038298798 ubox
2 101 0.037891242 ubox
2 104 0.037702345 ubox
2 107 0.012302698 ubox
3 8 0.086526508 ubox
3 56 0.032362187 ubox
4 8 0.009363965 ubox
5 35 0.004631395 ubox
6 11 0.019908284 ubox
6 33 0.007780317 ubox
6 35 0.003374164 ubox
6 53 0.025520931 ubox
6 57 0.965522219 ubox
6 95 0.020246738 ubox
6 98 0.015542259 ubox
6 101 0.015334361 ubox
6 104 0.015026155 ubox
6 107 0.005237789 ubox
7 35 0.020166802 ubox
7 56 0.966464053 ubox
8 17 0.009708604 ubox
8 31 0.004970776 ubox
8 32 0.007377528 ubox
8 34 0.019939689 ubox
8 38 0.009005582 ubox
8 52 0.020343981 ubox
8 55 0.966464114 ubox
8 90 0.003265614 ubox
8 92 0.056450236 ubox
8 93 0.005249982 ubox
8 94 0.003928309 ubox
8 96 0.003568231 ubox
8 97 0.003246431 ubox
8 99 0.003516609 ubox
8 102 0.003441968 ubox
9 16 0.010411234 ubox
9 37 0.009619693 ubox
9 51 0.020610690 ubox
9 54 0.965400257 ubox
9 91 0.059913862 ubox
10 28 0.017966287 ubox
10 35 0.004506179 ubox
10 50 0.018813537 ubox
11 16 0.008965561 ubox
11 27 0.018832559 ubox
11 37 0.004866577 ubox
11 51 0.060142757 ubox
11 54 0.020661359 ubox
11 91 0.014685808 ubox
12 30 0.995403574 ubox
12 33 0.004221695 ubox
12 48 0.004066856 ubox
12 50 0.052581938 ubox
12 53 0.025127055 ubox
12 95 0.003981217 ubox
12 98 0.003960030 ubox
12 101 0.004028758 ubox
12 104 0.004040634 ubox
13 29 0.996678977 ubox
13 32 0.003724433 ubox
13 47 0.003961341 ubox
13 49 0.052143151 ubox
13 52 0.024243640 ubox
13 94 0.003725780 ubox
13 97 0.003707373 ubox
13 100 0.003772312 ubox
13 103 0.003783557 ubox
14 28 0.996956784 ubox
14 48 0.048555749 ubox
15 27 0.996963002 ubox
15 37 0.004748745 ubox
15 51 0.011999091 ubox
16 30 0.003803954 ubox
16 50 0.008898737 ubox
17 48 0.003335071 ubox
25 35 0.003887904 ubox
26 35 0.009335158 ubox
27 33 0.016885052 ubox
27 35 0.016652405 ubox
27 53 0.009229203 ubox
27 56 0.006297489 ubox
27 57 0.008505183 ubox
27 95 0.003230573 ubox
27 98 0.003194655 ubox
27 101 0.003264601 ubox
27 104 0.003279384 ubox
28 32 0.015294677 ubox
28 34 0.017085889 ubox
28 36 0.012962145 ubox
28 37 0.005992162 ubox
28 38 0.004393729 ubox
28 39 0.003282507 ubox
28 52 0.009165139 ubox
28 55 0.006741747 ubox
28 103 0.003164474 ubox
29 35 0.012476118 ubox
30 37 0.009863210 ubox
30 51 0.005368131 ubox
30 54 0.016336640 ubox
31 35 0.009115295 ubox
31 48 0.004883183 ubox
31 50 0.006722077 ubox
32 48 0.005409488 ubox
32 50 0.007496347 ubox
32 56 0.003277895 ubox
33 37 0.025890269 ubox
33 51 0.971116007 ubox
33 54 0.004626442 ubox
33 91 0.003307216 ubox
34 48 0.020012187 ubox
34 50 0.975000765 ubox
35 39 0.009042255 ubox
35 40 0.017302411 ubox
35 41 0.015931337 ubox
35 42 0.020323151 ubox
35 43 0.012503012 ubox
35 44 0.018925981 ubox
35 45 0.009340902 ubox
35 46 0.008824921 ubox
35 47 0.020828000 ubox
35 49 0.974460659 ubox
35 51 0.017431282 ubox
35 52 0.005310163 ubox
36 48 0.964970600 ubox
36 50 0.020690389 ubox
37 48 0.013498677 ubox
37 50 0.004352960 ubox
37 53 0.026240897 ubox
37 57 0.017472113 ubox
37 101 0.003222798 ubox
37 104 0.003228571 ubox
38 48 0.014056611 ubox
38 50 0.009815087 ubox
38 56 0.016594497 ubox
39 48 0.023440569 ubox
39 50 0.010956626 ubox
40 48 0.014426688 ubox
40 50 0.013297548 ubox
41 48 0.022425329 ubox
41 50 0.021447567 ubox
42 48 0.017371210 ubox
42 50 0.013929070 ubox
43 48 0.018333149 ubox
43 50 0.022115666 ubox
44 48 0.011187098 ubox
44 50 0.017588217 ubox
45 50 0.018639667 ubox
46 50 0.011369764 ubox
47 56 0.008795347 ubox
48 52 0.007444559 ubox
48 55 0.009106491 ubox
48 59 0.007315358 ubox
48 60 0.015959645 ubox
48 61 0.004418417 ubox
48 62 0.004024809 ubox
49 56 0.014213026 ubox
50 55 0.015409667 ubox
50 58 0.076065380 ubox
50 59 0.008752525 ubox
50 60 0.003983776 ubox
50 61 0.003631821 ubox
50 62 0.003325571 ubox
50 105 0.010067359 ubox
51 57 0.084286471 ubox
51 101 0.003331359 ubox
51 104 0.011182338 ubox
52 56 0.073385093 ubox
54 98 0.004368470 ubox
54 101 0.016421339 ubox
56 61 0.004624073 ubox
56 62 0.004261463 ubox
56 63 0.005428607 ubox
56 64 0.003335174 ubox
56 65 0.005006086 ubox
56 92 0.005420120 ubox
56 99 0.004732109 ubox
57 91 0.005773842 ubox
69 86 0.998025972 ubox
69 95 0.003450175 ubox
70 85 0.999296805 ubox
71 84 0.999978572 ubox
72 83 0.999978930 ubox
73 82 0.999536288 ubox
74 81 0.991902228 ubox
75 79 0.029894194 ubox
75 80 0.936201118 ubox
76 80 0.029260102 ubox
86 91 0.005714584 ubox
91 95 0.043160983 ubox
91 98 0.103839781 ubox
91 101 0.045454404 ubox
91 104 0.035096848 ubox
91 107 0.010381648 ubox
6 57 0.9500000 lbox
7 56 0.9500000 lbox
8 55 0.9500000 lbox
9 54 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
