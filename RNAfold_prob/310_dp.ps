%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (310)
} def

/sequence { (\
GGAAAGAGGGCAGGAAAAACUGCGGCAUAGCCACCUCAGCCACCGUAAAUCGGCUCCGCAAGGAGGGCGUAUUCAUUCGUGAAUACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 32 0.023314264 ubox
1 35 0.012967445 ubox
1 37 0.006003461 ubox
1 40 0.008580092 ubox
1 41 0.187732354 ubox
1 44 0.014185843 ubox
1 57 0.006044132 ubox
1 68 0.011524553 ubox
1 86 0.008007465 ubox
1 95 0.134060751 ubox
1 98 0.134906295 ubox
1 101 0.138013924 ubox
1 104 0.138670572 ubox
1 107 0.035011665 ubox
2 31 0.023323831 ubox
2 34 0.012934359 ubox
2 36 0.003751792 ubox
2 37 0.009034222 ubox
2 40 0.187559536 ubox
2 41 0.019104895 ubox
2 43 0.014175673 ubox
2 56 0.006045298 ubox
2 68 0.009722170 ubox
2 86 0.004187421 ubox
2 95 0.070715896 ubox
2 98 0.070970057 ubox
2 101 0.072505007 ubox
2 104 0.072232629 ubox
2 107 0.023570320 ubox
3 36 0.007576714 ubox
3 55 0.004990607 ubox
5 28 0.012270497 ubox
5 36 0.004336627 ubox
6 35 0.004678703 ubox
6 37 0.996600243 ubox
6 95 0.007125539 ubox
6 98 0.011219596 ubox
6 101 0.011095487 ubox
6 104 0.010984853 ubox
6 107 0.003833573 ubox
7 36 0.998041888 ubox
8 26 0.004871671 ubox
8 34 0.004372704 ubox
8 35 0.998356721 ubox
8 36 0.003899864 ubox
8 37 0.003308758 ubox
8 95 0.008511546 ubox
8 98 0.008549817 ubox
8 101 0.008532557 ubox
8 104 0.008472235 ubox
9 23 0.003752600 ubox
9 34 0.996363973 ubox
9 35 0.005329876 ubox
9 95 0.011914590 ubox
9 98 0.011559531 ubox
9 101 0.011447903 ubox
9 104 0.008281326 ubox
10 23 0.999079042 ubox
11 22 0.999972313 ubox
12 21 0.999706941 ubox
13 20 0.999337245 ubox
13 21 0.006644540 ubox
14 20 0.013361332 ubox
24 31 0.018737301 ubox
24 32 0.997803212 ubox
24 35 0.005876826 ubox
24 41 0.017516468 ubox
25 31 0.998806659 ubox
25 32 0.007598346 ubox
25 34 0.005889835 ubox
25 40 0.017535601 ubox
26 30 0.991551714 ubox
26 39 0.017526774 ubox
29 36 0.015105446 ubox
30 35 0.015006082 ubox
30 68 0.006194939 ubox
31 67 0.006194626 ubox
32 66 0.006142122 ubox
34 63 0.003986908 ubox
34 66 0.007224848 ubox
35 62 0.003988697 ubox
35 65 0.007278625 ubox
35 91 0.004365042 ubox
36 61 0.003843320 ubox
36 64 0.007271692 ubox
36 90 0.004137702 ubox
36 92 0.007610498 ubox
37 63 0.007229729 ubox
37 91 0.008392357 ubox
38 55 0.012797293 ubox
39 46 0.004860907 ubox
39 54 0.017244829 ubox
39 59 0.007686263 ubox
39 68 0.973935095 ubox
39 95 0.007588568 ubox
39 98 0.007427207 ubox
39 101 0.007576942 ubox
39 104 0.007586365 ubox
40 45 0.004962740 ubox
40 53 0.018809344 ubox
40 58 0.007684851 ubox
40 66 0.008588360 ubox
40 67 0.975125683 ubox
40 91 0.005658968 ubox
41 52 0.018765611 ubox
41 65 0.008930358 ubox
41 66 0.973924874 ubox
41 67 0.003955141 ubox
41 91 0.010128640 ubox
42 55 0.004325145 ubox
43 52 0.012503979 ubox
43 53 0.993430703 ubox
43 63 0.011307513 ubox
43 65 0.006086155 ubox
43 67 0.005766790 ubox
44 52 0.997981926 ubox
44 53 0.015966940 ubox
44 62 0.011305503 ubox
44 63 0.007751274 ubox
44 66 0.005771069 ubox
45 50 0.006846416 ubox
45 51 0.992829273 ubox
45 54 0.005918618 ubox
45 95 0.006005057 ubox
45 98 0.005557195 ubox
45 101 0.005103026 ubox
45 104 0.005131086 ubox
46 53 0.006326196 ubox
46 61 0.005666338 ubox
46 94 0.005845556 ubox
46 97 0.005372697 ubox
46 100 0.004926553 ubox
46 103 0.004953444 ubox
50 67 0.003359883 ubox
50 92 0.006033851 ubox
51 58 0.009700133 ubox
51 66 0.004508615 ubox
51 67 0.005236423 ubox
51 69 0.003839312 ubox
51 91 0.006280678 ubox
52 57 0.009636823 ubox
52 68 0.015902969 ubox
53 59 0.004185646 ubox
53 68 0.021440794 ubox
54 58 0.004168109 ubox
54 65 0.995027128 ubox
54 66 0.015205909 ubox
54 67 0.021712680 ubox
55 64 0.998930180 ubox
55 65 0.006980055 ubox
55 66 0.018017344 ubox
55 67 0.006110270 ubox
56 63 0.999555936 ubox
56 65 0.016871911 ubox
56 66 0.013204538 ubox
56 67 0.005802269 ubox
57 62 0.999172077 ubox
57 63 0.015074734 ubox
57 65 0.013309905 ubox
57 66 0.005872005 ubox
58 68 0.006298352 ubox
59 63 0.003615907 ubox
59 67 0.006283078 ubox
66 95 0.005369424 ubox
66 98 0.004262446 ubox
66 101 0.003687543 ubox
66 104 0.003167715 ubox
67 80 0.004232832 ubox
68 79 0.004385798 ubox
68 91 0.010345949 ubox
69 78 0.004525893 ubox
69 86 0.998056878 ubox
69 95 0.007956147 ubox
69 98 0.005010398 ubox
69 101 0.003210101 ubox
70 85 0.999304470 ubox
70 94 0.007543686 ubox
70 97 0.004625251 ubox
71 84 0.999314610 ubox
72 83 0.998908878 ubox
72 93 0.008497304 ubox
73 82 0.999490668 ubox
73 92 0.009030520 ubox
74 79 0.005631023 ubox
74 81 0.999513627 ubox
74 91 0.009068759 ubox
75 80 0.831703014 ubox
76 89 0.007019413 ubox
76 93 0.005379847 ubox
77 88 0.007036317 ubox
77 92 0.006070722 ubox
78 91 0.006134039 ubox
79 86 0.008313467 ubox
80 85 0.007800078 ubox
80 87 0.004173251 ubox
81 86 0.004355200 ubox
86 91 0.006118970 ubox
91 95 0.046207617 ubox
91 98 0.107943547 ubox
91 101 0.045706510 ubox
91 104 0.033987222 ubox
91 107 0.010024105 ubox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
