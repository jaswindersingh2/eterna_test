%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (720)
} def

/sequence { (\
GGAAAGACGCAGCAAAGGUGGGUCAAGACGGUACGAAAAGAACGGUCAGACGGUACGAAAGAACGGUCGCUAUCUUUCGAGAUAGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.007726973 ubox
1 10 0.005477412 ubox
1 24 0.006070457 ubox
1 29 0.010796348 ubox
1 47 0.003445566 ubox
1 68 0.007771472 ubox
1 86 0.009592689 ubox
1 95 0.242264566 ubox
1 98 0.243770716 ubox
1 101 0.249317803 ubox
1 104 0.250433353 ubox
1 107 0.063227488 ubox
2 23 0.004705474 ubox
2 24 0.015259198 ubox
2 29 0.003577456 ubox
2 47 0.003858732 ubox
2 67 0.004020628 ubox
2 68 0.009924842 ubox
2 86 0.006939894 ubox
2 95 0.127878193 ubox
2 98 0.128324177 ubox
2 101 0.131058634 ubox
2 104 0.130557688 ubox
2 107 0.042601352 ubox
3 23 0.014486882 ubox
3 67 0.007766795 ubox
5 23 0.004293227 ubox
6 24 0.997763965 ubox
6 68 0.019561442 ubox
6 95 0.007847240 ubox
6 98 0.007886109 ubox
6 101 0.007871722 ubox
6 104 0.007714028 ubox
7 19 0.009164342 ubox
7 23 0.998998468 ubox
7 67 0.019580185 ubox
8 17 0.004903608 ubox
8 18 0.009290497 ubox
8 20 0.017641762 ubox
8 21 0.006560266 ubox
8 22 0.999003987 ubox
8 66 0.019469603 ubox
9 19 0.019731746 ubox
10 17 0.006351487 ubox
10 18 0.019842027 ubox
10 20 0.996498774 ubox
10 21 0.046412887 ubox
10 22 0.003302716 ubox
10 65 0.003835867 ubox
11 19 0.981777822 ubox
12 19 0.160063013 ubox
12 104 0.003609880 ubox
13 17 0.867014344 ubox
13 18 0.258056063 ubox
13 20 0.005560974 ubox
13 61 0.009434577 ubox
14 19 0.005606714 ubox
17 56 0.003452337 ubox
17 98 0.012002054 ubox
18 56 0.019081295 ubox
18 98 0.011306628 ubox
18 101 0.003570397 ubox
18 104 0.003215500 ubox
19 55 0.019027503 ubox
19 96 0.016629607 ubox
19 97 0.008561891 ubox
20 54 0.018462822 ubox
20 95 0.020116283 ubox
20 98 0.003354735 ubox
21 95 0.003196283 ubox
22 51 0.020073320 ubox
22 95 0.003798707 ubox
22 98 0.003624464 ubox
22 101 0.003186710 ubox
23 50 0.020103812 ubox
23 92 0.021212598 ubox
23 94 0.003516298 ubox
23 97 0.003425053 ubox
24 49 0.020079400 ubox
24 91 0.021834635 ubox
27 46 0.003497211 ubox
27 47 0.995627141 ubox
27 68 0.067060817 ubox
27 95 0.004099296 ubox
27 98 0.004433275 ubox
27 101 0.004519386 ubox
27 104 0.004539230 ubox
28 46 0.996737852 ubox
28 67 0.067149498 ubox
29 35 0.004039856 ubox
29 44 0.032765300 ubox
29 45 0.995602625 ubox
29 66 0.067078865 ubox
30 34 0.003898495 ubox
30 43 0.042276147 ubox
30 47 0.005989658 ubox
30 95 0.003281288 ubox
30 98 0.003276332 ubox
30 101 0.003345513 ubox
31 43 0.992659539 ubox
31 46 0.005414781 ubox
31 47 0.022943761 ubox
31 56 0.003940143 ubox
31 64 0.066767680 ubox
31 95 0.003322829 ubox
31 98 0.003314482 ubox
31 101 0.003360160 ubox
31 104 0.003317445 ubox
32 38 0.003837056 ubox
32 39 0.007867031 ubox
32 40 0.007203129 ubox
32 41 0.048785978 ubox
32 42 0.977548666 ubox
32 55 0.004077768 ubox
32 63 0.065544927 ubox
32 94 0.003211125 ubox
32 97 0.003205014 ubox
32 100 0.003249299 ubox
32 103 0.003206781 ubox
33 46 0.005507596 ubox
33 54 0.004201934 ubox
34 40 0.938135853 ubox
34 44 0.029183569 ubox
34 45 0.005734466 ubox
34 53 0.004173281 ubox
34 61 0.059252464 ubox
35 43 0.028958154 ubox
35 47 0.003427361 ubox
36 46 0.003252674 ubox
40 47 0.007455435 ubox
40 56 0.036414816 ubox
41 46 0.006821483 ubox
41 54 0.013926190 ubox
42 54 0.034974366 ubox
43 52 0.056857772 ubox
43 53 0.035174256 ubox
43 57 0.003634952 ubox
44 51 0.057160348 ubox
44 56 0.003664506 ubox
45 51 0.033951145 ubox
46 50 0.030648302 ubox
46 92 0.004196595 ubox
47 53 0.003397271 ubox
47 91 0.005044086 ubox
49 67 0.003689483 ubox
49 68 0.994765679 ubox
50 67 0.996106226 ubox
51 57 0.003935778 ubox
51 65 0.030007526 ubox
51 66 0.995100835 ubox
52 56 0.003789987 ubox
52 64 0.038059761 ubox
52 68 0.008250337 ubox
53 64 0.992877420 ubox
53 67 0.007525782 ubox
53 68 0.035824114 ubox
54 59 0.003403768 ubox
54 60 0.005040460 ubox
54 61 0.009587322 ubox
54 62 0.037137216 ubox
54 63 0.981536770 ubox
55 67 0.005206240 ubox
56 61 0.829997052 ubox
56 65 0.043268034 ubox
56 66 0.005318661 ubox
56 79 0.004618896 ubox
57 64 0.042657039 ubox
57 68 0.005237493 ubox
57 78 0.004680830 ubox
58 67 0.005168543 ubox
58 77 0.004679366 ubox
59 76 0.004675016 ubox
60 75 0.004678344 ubox
61 68 0.004873736 ubox
61 74 0.004680335 ubox
62 67 0.004459654 ubox
62 73 0.004578985 ubox
64 91 0.004187288 ubox
65 70 0.003783730 ubox
67 88 0.005146405 ubox
67 92 0.004675717 ubox
68 91 0.005773095 ubox
69 86 0.998813999 ubox
70 85 0.999948053 ubox
71 84 0.999663356 ubox
72 83 0.999468155 ubox
73 80 0.009023672 ubox
73 82 0.999661508 ubox
73 92 0.003667038 ubox
74 79 0.010290424 ubox
74 81 0.999543235 ubox
74 91 0.003903244 ubox
75 79 0.028245953 ubox
75 80 0.924212096 ubox
75 81 0.004552716 ubox
75 90 0.003889152 ubox
76 80 0.028457420 ubox
76 89 0.003857508 ubox
77 88 0.003633541 ubox
79 86 0.003213027 ubox
86 91 0.006752990 ubox
91 95 0.054551063 ubox
91 98 0.119523138 ubox
91 101 0.046264014 ubox
91 104 0.029988904 ubox
91 107 0.008730667 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
