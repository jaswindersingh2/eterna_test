%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (196)
} def

/sequence { (\
GGAAAACAGAAGUUCAGGUAUAGAAAACUAAUACCAAAAGUUCACGGAAAACCGGAACAGAACAACUGCGUGUACUUCGGUACACGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.055203452 ubox
1 15 0.010716485 ubox
1 63 0.004879929 ubox
1 66 0.003844381 ubox
1 67 0.004387222 ubox
1 69 0.010346262 ubox
1 95 0.068123960 ubox
1 98 0.068637697 ubox
1 101 0.070189279 ubox
1 104 0.070819487 ubox
1 107 0.017845379 ubox
2 7 0.015834478 ubox
2 14 0.010113693 ubox
2 15 0.028511022 ubox
2 66 0.004624864 ubox
2 69 0.013236224 ubox
2 95 0.035737916 ubox
2 98 0.035881548 ubox
2 101 0.036658192 ubox
2 104 0.036712103 ubox
2 107 0.011920859 ubox
3 13 0.009098153 ubox
3 14 0.028163494 ubox
4 13 0.026015832 ubox
5 14 0.021687202 ubox
6 13 0.025882948 ubox
7 12 0.026825878 ubox
7 68 0.979389098 ubox
7 91 0.008011043 ubox
8 67 0.983882690 ubox
9 15 0.009627332 ubox
9 43 0.022082604 ubox
9 66 0.982976677 ubox
9 69 0.003299390 ubox
9 95 0.008287862 ubox
9 98 0.014489047 ubox
9 101 0.009522595 ubox
9 104 0.009419286 ubox
9 107 0.003287495 ubox
10 14 0.008400812 ubox
10 42 0.022118096 ubox
10 67 0.006330064 ubox
11 41 0.021973081 ubox
11 67 0.020470474 ubox
12 63 0.994509645 ubox
12 66 0.020991566 ubox
12 95 0.033467821 ubox
12 98 0.019739883 ubox
12 101 0.019670247 ubox
12 104 0.018748283 ubox
12 107 0.006492862 ubox
13 38 0.003323361 ubox
13 39 0.024144545 ubox
13 61 0.005635413 ubox
13 62 0.995441358 ubox
13 65 0.020512231 ubox
13 88 0.003733710 ubox
13 93 0.027578221 ubox
13 94 0.029513080 ubox
13 97 0.019381675 ubox
13 100 0.019389600 ubox
13 103 0.018487465 ubox
13 106 0.006471262 ubox
14 37 0.003799889 ubox
14 38 0.024999128 ubox
14 60 0.006019965 ubox
14 61 0.995511532 ubox
14 64 0.017388849 ubox
14 87 0.004250176 ubox
14 92 0.034094039 ubox
14 93 0.023583252 ubox
14 96 0.016811589 ubox
14 99 0.017084077 ubox
14 102 0.016312916 ubox
14 105 0.005742771 ubox
15 60 0.994652038 ubox
15 86 0.004148138 ubox
15 91 0.037701269 ubox
16 29 0.004767925 ubox
17 28 0.004989499 ubox
17 29 0.010026602 ubox
17 34 0.004832743 ubox
17 35 0.998799587 ubox
18 28 0.010404630 ubox
18 32 0.003656696 ubox
18 34 0.999838876 ubox
19 27 0.010193395 ubox
19 31 0.004369901 ubox
19 33 0.999262657 ubox
20 29 0.003220184 ubox
20 32 0.993288946 ubox
21 26 0.004186024 ubox
21 27 0.005074817 ubox
21 30 0.665298747 ubox
21 31 0.733357963 ubox
22 29 0.940319463 ubox
22 32 0.004465116 ubox
23 28 0.936139168 ubox
23 29 0.114889133 ubox
24 29 0.068695655 ubox
25 29 0.014703315 ubox
40 58 0.997276113 ubox
40 63 0.003507991 ubox
41 57 0.998272148 ubox
41 62 0.003493808 ubox
42 56 0.998896467 ubox
42 57 0.009996503 ubox
42 61 0.003422325 ubox
43 55 0.998278029 ubox
43 60 0.003379311 ubox
45 54 0.995984329 ubox
46 52 0.019333888 ubox
46 53 0.999630711 ubox
47 52 0.993458332 ubox
47 53 0.005034900 ubox
58 68 0.023593774 ubox
59 67 0.030210980 ubox
60 66 0.030753357 ubox
60 95 0.010548697 ubox
63 68 0.009872966 ubox
63 91 0.008359933 ubox
66 91 0.062266454 ubox
67 87 0.025646885 ubox
67 88 0.030350081 ubox
67 89 0.018294355 ubox
67 90 0.059721696 ubox
67 96 0.009179772 ubox
67 99 0.007148064 ubox
67 102 0.005735281 ubox
67 105 0.004943985 ubox
68 95 0.010242027 ubox
68 98 0.007976584 ubox
68 101 0.006400239 ubox
68 104 0.005514790 ubox
69 86 0.985816052 ubox
69 91 0.005434954 ubox
70 85 0.999880396 ubox
70 95 0.003629258 ubox
71 84 0.999754339 ubox
71 94 0.003579142 ubox
72 83 0.999954550 ubox
73 82 0.999720505 ubox
74 81 0.999567266 ubox
75 79 0.011969932 ubox
75 80 0.998697565 ubox
76 80 0.004044222 ubox
76 88 0.005508884 ubox
77 87 0.006420733 ubox
78 86 0.006570251 ubox
79 85 0.006565554 ubox
86 95 0.016115150 ubox
86 98 0.006536927 ubox
86 101 0.005232733 ubox
86 104 0.004511002 ubox
91 95 0.043007420 ubox
91 98 0.103598512 ubox
91 101 0.045403280 ubox
91 104 0.035102639 ubox
91 107 0.010384520 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 31 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
