%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (46)
} def

/sequence { (\
GGAAAAAGAGUCGGAUCAAAAGAUCCCCAAGCGUACAAAAGUACAGUGGAAAACCACGCAAGGGACUCUAACAGAUUCGUCUGUUAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.003575220 ubox
1 69 0.003549775 ubox
1 72 0.008495980 ubox
1 78 0.015241521 ubox
1 82 0.004187588 ubox
1 95 0.067030379 ubox
1 98 0.067473754 ubox
1 101 0.069052065 ubox
1 104 0.069369942 ubox
1 107 0.017515738 ubox
2 11 0.003390232 ubox
2 12 0.005257362 ubox
2 68 0.004449120 ubox
2 69 0.003814036 ubox
2 72 0.005198631 ubox
2 77 0.015143813 ubox
2 78 0.014587156 ubox
2 81 0.004849101 ubox
2 85 0.005272166 ubox
2 95 0.035355286 ubox
2 98 0.035499044 ubox
2 101 0.036286262 ubox
2 104 0.036145422 ubox
2 107 0.011796353 ubox
3 11 0.005069417 ubox
3 67 0.003706265 ubox
3 69 0.005295664 ubox
3 76 0.014537228 ubox
3 77 0.014551485 ubox
3 80 0.004743415 ubox
3 84 0.003552374 ubox
3 85 0.005397331 ubox
4 69 0.006869951 ubox
4 76 0.013466092 ubox
4 84 0.003503181 ubox
4 85 0.007004604 ubox
5 69 0.009396435 ubox
5 84 0.005445646 ubox
5 85 0.009175832 ubox
6 69 0.034195023 ubox
6 84 0.007529299 ubox
6 85 0.094254996 ubox
7 69 0.745842457 ubox
7 82 0.011999287 ubox
7 84 0.100226371 ubox
7 85 0.006451470 ubox
8 68 0.992258595 ubox
8 78 0.004575462 ubox
8 81 0.012860883 ubox
8 84 0.006196584 ubox
8 95 0.003998397 ubox
9 67 0.993348111 ubox
9 77 0.004580300 ubox
9 80 0.012199890 ubox
9 82 0.107199234 ubox
10 66 0.993659122 ubox
10 76 0.004581840 ubox
10 81 0.108365165 ubox
10 95 0.004528537 ubox
10 98 0.005734277 ubox
10 101 0.005286748 ubox
10 104 0.005284315 ubox
11 64 0.012419812 ubox
11 65 0.993235838 ubox
11 75 0.004584897 ubox
11 92 0.005519378 ubox
11 94 0.004216478 ubox
11 97 0.005526670 ubox
11 100 0.005067091 ubox
11 103 0.005066266 ubox
12 62 0.004389354 ubox
12 63 0.023192834 ubox
12 64 0.991190251 ubox
12 74 0.004577754 ubox
12 79 0.109489164 ubox
12 91 0.005784384 ubox
13 25 0.004577850 ubox
13 26 0.990424745 ubox
13 27 0.028050047 ubox
13 28 0.008105100 ubox
13 78 0.109680014 ubox
13 95 0.004040203 ubox
14 25 0.993676248 ubox
14 26 0.020174992 ubox
14 27 0.006825085 ubox
14 77 0.109604008 ubox
15 24 0.993668420 ubox
15 76 0.109633850 ubox
16 23 0.993473271 ubox
16 75 0.109636497 ubox
17 22 0.992030454 ubox
17 74 0.109441277 ubox
20 69 0.003776681 ubox
21 67 0.008667675 ubox
21 69 0.105723057 ubox
22 66 0.008988721 ubox
22 68 0.109099804 ubox
23 67 0.108482449 ubox
24 65 0.077448647 ubox
25 64 0.077277564 ubox
26 49 0.003199059 ubox
26 63 0.078907222 ubox
26 64 0.088608060 ubox
27 31 0.018049434 ubox
27 33 0.003286990 ubox
27 48 0.004657713 ubox
27 49 0.161395154 ubox
27 58 0.003794596 ubox
27 62 0.080635558 ubox
27 63 0.882791468 ubox
27 64 0.022613168 ubox
28 33 0.004954386 ubox
28 48 0.161659052 ubox
28 49 0.015084525 ubox
28 58 0.006058786 ubox
28 62 0.884353643 ubox
28 63 0.037736278 ubox
29 47 0.135646986 ubox
30 47 0.053777824 ubox
31 36 0.003350411 ubox
31 42 0.030299037 ubox
31 44 0.006016545 ubox
31 47 0.062250036 ubox
31 59 0.889968630 ubox
32 41 0.031075486 ubox
32 46 0.077472784 ubox
32 58 0.889550280 ubox
32 62 0.008735174 ubox
32 63 0.010207033 ubox
33 44 0.996258292 ubox
33 57 0.040930310 ubox
34 43 0.997870114 ubox
34 56 0.031534024 ubox
35 42 0.997956692 ubox
35 47 0.008396786 ubox
36 41 0.996244382 ubox
36 46 0.008665345 ubox
40 47 0.003310004 ubox
41 59 0.006685268 ubox
42 48 0.007751413 ubox
42 49 0.003985911 ubox
42 58 0.006619018 ubox
43 47 0.006577611 ubox
44 58 0.010493171 ubox
46 54 0.014041082 ubox
46 55 0.006331230 ubox
46 57 0.979625385 ubox
46 59 0.077778282 ubox
47 53 0.014148241 ubox
47 56 0.981533734 ubox
47 58 0.077618873 ubox
48 54 0.011552024 ubox
48 55 0.982643512 ubox
48 57 0.077691251 ubox
49 54 0.976568115 ubox
49 55 0.019822495 ubox
54 62 0.004476012 ubox
54 63 0.158821071 ubox
54 64 0.006474485 ubox
55 62 0.158995159 ubox
55 63 0.014014802 ubox
57 62 0.026515290 ubox
57 63 0.023310027 ubox
59 63 0.031358775 ubox
59 64 0.003855665 ubox
66 91 0.007938345 ubox
67 88 0.005348925 ubox
67 90 0.007914132 ubox
67 92 0.009901638 ubox
68 91 0.012075164 ubox
69 86 0.622347209 ubox
69 87 0.029017504 ubox
69 88 0.011246864 ubox
69 89 0.007382445 ubox
69 90 0.010862200 ubox
69 91 0.003760367 ubox
70 84 0.012124348 ubox
70 85 0.935138239 ubox
71 80 0.010104026 ubox
71 84 0.985172736 ubox
71 85 0.018163398 ubox
72 79 0.010940579 ubox
72 83 0.991799076 ubox
73 82 0.991639745 ubox
74 81 0.991300412 ubox
74 85 0.005743526 ubox
74 95 0.010135809 ubox
74 98 0.008559431 ubox
74 101 0.004892200 ubox
74 104 0.005439179 ubox
75 80 0.878589624 ubox
75 84 0.005952656 ubox
76 83 0.005899877 ubox
76 93 0.013258931 ubox
76 96 0.003595669 ubox
76 100 0.006107417 ubox
76 103 0.005191822 ubox
77 92 0.014446696 ubox
77 99 0.006741733 ubox
77 100 0.003675588 ubox
77 102 0.005720557 ubox
77 105 0.003464729 ubox
78 91 0.014553045 ubox
79 95 0.007194176 ubox
79 98 0.029433686 ubox
79 101 0.022796053 ubox
79 104 0.016114907 ubox
79 107 0.005045694 ubox
80 92 0.025551145 ubox
80 94 0.005498661 ubox
80 97 0.029071516 ubox
80 100 0.022537829 ubox
80 103 0.015923412 ubox
80 106 0.005031039 ubox
81 91 0.027502073 ubox
82 87 0.004609172 ubox
82 90 0.027333049 ubox
82 92 0.003574764 ubox
82 96 0.041117915 ubox
82 99 0.023797725 ubox
82 102 0.017764072 ubox
82 105 0.010903445 ubox
83 95 0.045914457 ubox
83 98 0.026592808 ubox
83 101 0.020101290 ubox
83 104 0.013485926 ubox
84 90 0.004628221 ubox
84 91 0.004591704 ubox
84 92 0.006741293 ubox
84 93 0.007403543 ubox
84 94 0.045702055 ubox
84 97 0.026481088 ubox
84 100 0.020013215 ubox
84 103 0.013435781 ubox
85 89 0.005831993 ubox
85 90 0.009263441 ubox
85 91 0.010136913 ubox
85 92 0.012401097 ubox
85 93 0.044372097 ubox
85 94 0.007314476 ubox
85 96 0.024949206 ubox
85 99 0.018714630 ubox
85 102 0.012630782 ubox
91 95 0.043001845 ubox
91 98 0.103596880 ubox
91 101 0.045429766 ubox
91 104 0.035155921 ubox
91 107 0.010401339 ubox
7 69 0.9500000 lbox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
