%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (726)
} def

/sequence { (\
GGAAAGGAGGAGCAAAGGUCGUCCAAGGAGGAGGGAAAACGUCGUCCAGGAGGAGGGAAACGUCGUCCACUCUGGUUCGCCAGAGUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 24 0.012702538 ubox
1 47 0.008979597 ubox
1 68 0.019595270 ubox
1 86 0.007714773 ubox
1 95 0.241237168 ubox
1 98 0.242785339 ubox
1 101 0.248341438 ubox
1 104 0.249468245 ubox
1 107 0.062986732 ubox
2 23 0.012443817 ubox
2 24 0.003305498 ubox
2 46 0.008658166 ubox
2 67 0.018961412 ubox
2 68 0.003969451 ubox
2 86 0.010688267 ubox
2 95 0.127352526 ubox
2 98 0.127822897 ubox
2 101 0.130556789 ubox
2 104 0.130064887 ubox
2 107 0.042442405 ubox
3 22 0.011123777 ubox
3 45 0.007657793 ubox
3 66 0.016971121 ubox
3 86 0.010686487 ubox
4 86 0.009861506 ubox
5 86 0.009858501 ubox
6 20 0.005607821 ubox
6 24 0.991799827 ubox
6 47 0.041561276 ubox
6 64 0.005425337 ubox
6 68 0.105100457 ubox
6 95 0.011156593 ubox
6 98 0.011458975 ubox
6 101 0.011432290 ubox
6 104 0.011212722 ubox
6 107 0.003914726 ubox
7 19 0.004458377 ubox
7 20 0.008696361 ubox
7 23 0.993053179 ubox
7 24 0.003360426 ubox
7 46 0.041607548 ubox
7 63 0.005251640 ubox
7 64 0.005852269 ubox
7 67 0.105213324 ubox
7 95 0.003827125 ubox
7 98 0.003958281 ubox
7 101 0.003342530 ubox
7 104 0.003189908 ubox
8 19 0.008591850 ubox
8 22 0.990731290 ubox
8 45 0.041508801 ubox
8 63 0.005874562 ubox
8 66 0.104951624 ubox
9 20 0.015541870 ubox
9 24 0.024933587 ubox
9 61 0.005411891 ubox
9 64 0.008584940 ubox
10 19 0.013659358 ubox
10 20 0.992352449 ubox
10 23 0.024966024 ubox
10 43 0.041522401 ubox
10 61 0.005455903 ubox
10 63 0.008413311 ubox
10 64 0.104744966 ubox
11 19 0.981281536 ubox
11 22 0.023961345 ubox
11 42 0.040163771 ubox
11 63 0.103559004 ubox
12 19 0.125780589 ubox
12 20 0.008496165 ubox
12 22 0.005389171 ubox
12 40 0.006296163 ubox
12 42 0.009870553 ubox
12 61 0.037524746 ubox
12 63 0.010113757 ubox
13 17 0.867354197 ubox
13 18 0.237682434 ubox
13 21 0.009972863 ubox
13 41 0.018655320 ubox
13 57 0.005529798 ubox
13 62 0.019118722 ubox
14 19 0.007520932 ubox
17 24 0.008865869 ubox
18 23 0.008851535 ubox
19 32 0.006942645 ubox
19 34 0.005283100 ubox
19 35 0.039127085 ubox
19 36 0.004688726 ubox
19 54 0.103611623 ubox
19 55 0.003553198 ubox
19 56 0.004089770 ubox
19 57 0.015539116 ubox
20 31 0.006989883 ubox
20 33 0.005351787 ubox
20 34 0.040365355 ubox
20 35 0.003998704 ubox
20 53 0.104125896 ubox
20 55 0.003989401 ubox
20 56 0.015984507 ubox
22 29 0.006990040 ubox
22 32 0.040930188 ubox
22 51 0.104019607 ubox
22 54 0.016236014 ubox
23 28 0.007004947 ubox
23 31 0.041063207 ubox
23 50 0.104252572 ubox
23 53 0.016283238 ubox
24 30 0.041037128 ubox
24 49 0.104103247 ubox
24 50 0.003878480 ubox
24 52 0.016206458 ubox
24 91 0.004324837 ubox
25 86 0.004079279 ubox
26 86 0.004797757 ubox
27 46 0.003612341 ubox
27 47 0.996858430 ubox
27 68 0.020275912 ubox
27 95 0.006166678 ubox
27 98 0.006216287 ubox
27 101 0.006361306 ubox
27 104 0.006372090 ubox
28 43 0.003519635 ubox
28 46 0.997952362 ubox
28 67 0.020297167 ubox
29 42 0.003514795 ubox
29 45 0.995615257 ubox
29 66 0.020249089 ubox
30 43 0.020308429 ubox
30 47 0.041866828 ubox
30 68 0.004238085 ubox
31 40 0.003468212 ubox
31 42 0.019593491 ubox
31 43 0.997371049 ubox
31 46 0.041915317 ubox
31 64 0.020285221 ubox
31 67 0.004242764 ubox
32 42 0.995089065 ubox
32 45 0.041785993 ubox
32 63 0.020223025 ubox
32 66 0.004221542 ubox
33 40 0.106653190 ubox
33 42 0.008367591 ubox
33 43 0.003913750 ubox
34 40 0.990246022 ubox
34 42 0.003829873 ubox
34 43 0.041440261 ubox
34 61 0.020022309 ubox
34 64 0.004111963 ubox
34 68 0.003702490 ubox
35 40 0.025279699 ubox
35 42 0.033525846 ubox
35 43 0.004221331 ubox
35 63 0.003543705 ubox
35 67 0.003711745 ubox
36 42 0.004764528 ubox
36 66 0.003705272 ubox
39 63 0.004212221 ubox
40 56 0.016411541 ubox
40 62 0.004502386 ubox
41 61 0.004500405 ubox
42 54 0.016629818 ubox
42 57 0.011434276 ubox
42 60 0.003952749 ubox
43 53 0.016666677 ubox
43 56 0.012302434 ubox
45 51 0.016473380 ubox
45 54 0.012562835 ubox
46 50 0.016371402 ubox
46 53 0.012609463 ubox
47 52 0.012593679 ubox
49 68 0.992513768 ubox
50 64 0.004205630 ubox
50 67 0.993587047 ubox
51 63 0.004185347 ubox
51 66 0.991274977 ubox
52 61 0.003188606 ubox
52 64 0.015115651 ubox
52 68 0.028843160 ubox
53 61 0.003845338 ubox
53 63 0.014351903 ubox
53 64 0.993209313 ubox
53 67 0.028874566 ubox
54 63 0.991108465 ubox
54 66 0.028749122 ubox
55 61 0.076726569 ubox
55 63 0.004188475 ubox
55 64 0.005605529 ubox
56 61 0.984566655 ubox
56 63 0.005409146 ubox
56 64 0.027972600 ubox
57 61 0.011176123 ubox
57 63 0.023754258 ubox
57 64 0.004423076 ubox
58 63 0.004736699 ubox
68 91 0.004196805 ubox
69 86 0.950966031 ubox
70 85 0.999220157 ubox
71 84 0.999775176 ubox
72 83 0.999981403 ubox
73 82 0.999752700 ubox
74 80 0.007090647 ubox
74 81 0.999932794 ubox
75 80 0.993745407 ubox
85 95 0.011016596 ubox
85 98 0.006640786 ubox
85 101 0.004674538 ubox
85 104 0.003639556 ubox
86 90 0.004669285 ubox
86 91 0.008820552 ubox
86 92 0.008134085 ubox
86 93 0.010404761 ubox
86 94 0.012064037 ubox
86 96 0.003604606 ubox
86 97 0.007260381 ubox
86 100 0.005118700 ubox
86 103 0.004030770 ubox
91 95 0.054471780 ubox
91 98 0.119415673 ubox
91 101 0.046262301 ubox
91 104 0.030040506 ubox
91 107 0.008747243 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
