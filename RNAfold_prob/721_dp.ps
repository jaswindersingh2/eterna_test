%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (721)
} def

/sequence { (\
GGAAAGAGGUGGCAAAGGCAGCUCAAGAGGACGAGAAAAUGGUGCUCAGAGGACGGGAAACGGUGCUCGUUGCCUUUCGAGGCAACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 24 0.005357118 ubox
1 68 0.007064370 ubox
1 86 0.016439948 ubox
1 95 0.242484572 ubox
1 98 0.243826725 ubox
1 101 0.249397976 ubox
1 104 0.250549904 ubox
1 107 0.063257636 ubox
2 24 0.009382054 ubox
2 47 0.003308031 ubox
2 67 0.003236776 ubox
2 68 0.008538698 ubox
2 86 0.008633180 ubox
2 95 0.127926674 ubox
2 98 0.128361490 ubox
2 101 0.131112210 ubox
2 104 0.130619505 ubox
2 107 0.042621764 ubox
3 23 0.007403919 ubox
3 67 0.006241821 ubox
5 23 0.008144546 ubox
6 22 0.008836702 ubox
6 24 0.994887785 ubox
6 83 0.004343320 ubox
6 86 0.023261784 ubox
6 95 0.011069444 ubox
6 98 0.015065141 ubox
6 101 0.014796131 ubox
6 104 0.014598721 ubox
6 107 0.005117394 ubox
7 23 0.995875974 ubox
8 22 0.994888534 ubox
8 23 0.052815730 ubox
8 24 0.017523398 ubox
8 83 0.011742725 ubox
8 86 0.015740927 ubox
8 95 0.005428257 ubox
8 98 0.007283455 ubox
8 101 0.007208502 ubox
8 104 0.007242941 ubox
9 19 0.012311834 ubox
9 22 0.072746110 ubox
9 23 0.003680839 ubox
9 24 0.006247761 ubox
9 83 0.031412134 ubox
9 86 0.027508383 ubox
9 95 0.014070159 ubox
9 98 0.013240746 ubox
9 101 0.013098309 ubox
9 104 0.009575211 ubox
10 18 0.012266867 ubox
10 20 0.988119391 ubox
10 21 0.080096414 ubox
10 25 0.010500932 ubox
10 48 0.003220853 ubox
10 79 0.003961584 ubox
10 80 0.008860266 ubox
10 81 0.009986115 ubox
10 82 0.031226557 ubox
10 84 0.020146588 ubox
10 85 0.024455758 ubox
10 94 0.013610808 ubox
10 96 0.007528420 ubox
10 97 0.012119655 ubox
10 99 0.007143560 ubox
10 100 0.012003435 ubox
10 102 0.006598704 ubox
10 103 0.008773811 ubox
10 105 0.004490668 ubox
11 19 0.959827992 ubox
11 23 0.020271154 ubox
11 24 0.013114742 ubox
11 46 0.005138222 ubox
11 47 0.003726594 ubox
11 78 0.004713449 ubox
11 83 0.023998948 ubox
11 95 0.009115628 ubox
11 98 0.008721550 ubox
11 101 0.007873934 ubox
11 104 0.005054199 ubox
12 19 0.272436435 ubox
12 22 0.026471366 ubox
12 45 0.006842125 ubox
12 77 0.003420784 ubox
12 78 0.013629965 ubox
12 83 0.026921652 ubox
13 17 0.808820868 ubox
13 18 0.362529099 ubox
13 21 0.026528292 ubox
13 44 0.006865166 ubox
13 79 0.027396839 ubox
13 81 0.023533098 ubox
13 82 0.026986212 ubox
13 91 0.007061120 ubox
14 43 0.006800807 ubox
14 77 0.049653248 ubox
15 76 0.051163603 ubox
16 23 0.006470560 ubox
16 75 0.051627145 ubox
17 22 0.006858815 ubox
17 24 0.003182713 ubox
17 40 0.004609012 ubox
17 74 0.051724565 ubox
18 73 0.051725906 ubox
19 72 0.051725843 ubox
20 71 0.051666979 ubox
21 70 0.051644266 ubox
22 35 0.007007643 ubox
22 69 0.051611469 ubox
23 34 0.007027524 ubox
23 92 0.007849203 ubox
24 33 0.007027603 ubox
24 91 0.010457966 ubox
27 47 0.998383079 ubox
27 68 0.010047803 ubox
27 95 0.003627071 ubox
27 98 0.003721791 ubox
27 101 0.003790716 ubox
27 104 0.003798878 ubox
28 46 0.999492546 ubox
28 67 0.010060091 ubox
29 45 0.999507365 ubox
29 46 0.005738600 ubox
29 66 0.010060303 ubox
30 43 0.003507913 ubox
30 45 0.007920924 ubox
31 43 0.996803001 ubox
31 64 0.010003467 ubox
32 41 0.031597025 ubox
32 42 0.998948588 ubox
32 63 0.009970401 ubox
33 40 0.026441428 ubox
33 47 0.011262268 ubox
34 40 0.899851805 ubox
34 46 0.011272847 ubox
35 40 0.021652493 ubox
35 45 0.011236520 ubox
35 61 0.003946090 ubox
36 40 0.008227163 ubox
36 43 0.003274583 ubox
40 56 0.009070967 ubox
42 54 0.009926459 ubox
43 53 0.009918228 ubox
45 51 0.009771893 ubox
46 50 0.008805891 ubox
47 91 0.004009326 ubox
48 70 0.003554134 ubox
49 66 0.003281901 ubox
49 68 0.998162101 ubox
50 67 0.999499255 ubox
51 66 0.999567177 ubox
51 67 0.006227200 ubox
52 64 0.006925232 ubox
52 66 0.008388628 ubox
53 64 0.995266889 ubox
53 70 0.003495220 ubox
54 62 0.107942701 ubox
54 63 0.993037573 ubox
54 69 0.003744934 ubox
55 61 0.140158157 ubox
55 68 0.005236476 ubox
56 61 0.942526629 ubox
56 67 0.005238672 ubox
57 61 0.019230536 ubox
57 66 0.005241385 ubox
66 91 0.003441108 ubox
67 88 0.003363848 ubox
67 90 0.003482999 ubox
67 92 0.003480630 ubox
68 91 0.004657433 ubox
69 86 0.996192478 ubox
69 95 0.005365985 ubox
69 98 0.006680634 ubox
69 101 0.004907588 ubox
70 85 0.997301872 ubox
70 94 0.004883990 ubox
70 97 0.006472848 ubox
70 100 0.004740142 ubox
71 84 0.997945941 ubox
71 96 0.005656975 ubox
71 99 0.004087729 ubox
72 83 0.998625168 ubox
72 95 0.005346241 ubox
72 98 0.003830113 ubox
73 82 0.998623347 ubox
74 79 0.003305579 ubox
74 81 0.998315823 ubox
74 82 0.004214029 ubox
74 91 0.003190759 ubox
75 79 0.028206496 ubox
75 80 0.923072167 ubox
75 81 0.005858360 ubox
75 90 0.003193278 ubox
75 94 0.005018782 ubox
76 80 0.028557476 ubox
76 89 0.003177964 ubox
76 93 0.005828524 ubox
77 92 0.006050589 ubox
78 91 0.006121194 ubox
81 86 0.005133512 ubox
86 91 0.008833535 ubox
91 95 0.054586795 ubox
91 98 0.119566722 ubox
91 101 0.046261747 ubox
91 104 0.029972031 ubox
91 107 0.008725183 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
