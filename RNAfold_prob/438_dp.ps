%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (438)
} def

/sequence { (\
GGAAAGGCGAGCGGCAGGCGAAAGCCCACGAAAGUGGCCAAAACUCAUCCGUUGAUGAGGCUCGCAAGCACUUAUUUCGAUAAGUGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 69 0.029426015 ubox
1 71 0.018538479 ubox
1 72 0.005997444 ubox
1 78 0.008148652 ubox
1 95 0.066776373 ubox
1 98 0.068159082 ubox
1 101 0.070935736 ubox
1 104 0.071338042 ubox
1 107 0.018029010 ubox
2 69 0.038742002 ubox
2 71 0.007343746 ubox
2 77 0.008139665 ubox
2 78 0.005390796 ubox
2 95 0.035226948 ubox
2 98 0.035945706 ubox
2 101 0.036828381 ubox
2 104 0.036717599 ubox
2 107 0.011985507 ubox
3 76 0.007957406 ubox
3 77 0.005377942 ubox
4 73 0.008847217 ubox
4 75 0.006199788 ubox
4 76 0.004854296 ubox
5 72 0.010613156 ubox
5 75 0.003636324 ubox
6 65 0.049345287 ubox
6 69 0.007631784 ubox
6 71 0.010858557 ubox
6 95 0.059708870 ubox
6 98 0.059923948 ubox
6 101 0.059789109 ubox
6 104 0.058572654 ubox
6 107 0.020418608 ubox
7 65 0.997384884 ubox
7 69 0.007707612 ubox
8 64 0.999875597 ubox
8 68 0.007982359 ubox
9 63 0.999927697 ubox
10 62 0.999805163 ubox
11 61 0.999932168 ubox
11 65 0.008642721 ubox
12 20 0.004387685 ubox
12 60 0.999031790 ubox
12 64 0.008647976 ubox
13 19 0.017676122 ubox
13 25 0.003687650 ubox
13 26 0.108241216 ubox
13 29 0.006134649 ubox
13 38 0.007945143 ubox
13 39 0.970028710 ubox
13 63 0.008508531 ubox
14 19 0.008255002 ubox
14 25 0.120222917 ubox
14 29 0.008635199 ubox
14 38 0.971027527 ubox
14 39 0.003872229 ubox
14 61 0.008598284 ubox
15 20 0.008972372 ubox
15 24 0.120284557 ubox
15 36 0.016662235 ubox
15 37 0.969360590 ubox
15 57 0.003933738 ubox
15 60 0.008677339 ubox
16 35 0.021702377 ubox
16 56 0.003555531 ubox
17 25 0.007273326 ubox
17 26 0.984188607 ubox
17 27 0.008674998 ubox
17 39 0.020583634 ubox
18 25 0.991105669 ubox
18 26 0.007324434 ubox
18 35 0.012703997 ubox
18 38 0.020421434 ubox
19 24 0.990787600 ubox
19 30 0.006720968 ubox
19 34 0.012817279 ubox
19 37 0.016328528 ubox
20 25 0.005304161 ubox
20 26 0.003463920 ubox
20 29 0.006736361 ubox
20 39 0.003765371 ubox
21 35 0.006698083 ubox
24 29 0.008579053 ubox
24 38 0.033295874 ubox
24 39 0.026047310 ubox
25 30 0.005689540 ubox
25 37 0.027554257 ubox
26 36 0.020203327 ubox
26 37 0.116263951 ubox
27 34 0.013614554 ubox
27 36 0.995295874 ubox
27 37 0.005673957 ubox
28 35 0.997491223 ubox
29 34 0.997400840 ubox
29 36 0.028687089 ubox
29 37 0.004150930 ubox
30 35 0.020407052 ubox
30 39 0.004506898 ubox
42 53 0.003542321 ubox
43 52 0.003765120 ubox
44 51 0.003799117 ubox
44 59 0.996899836 ubox
45 55 0.006034272 ubox
45 58 0.999528148 ubox
46 54 0.006415186 ubox
46 57 0.999947964 ubox
47 53 0.006347492 ubox
47 56 0.999522930 ubox
48 54 0.004016382 ubox
48 55 0.999030597 ubox
49 54 0.993615542 ubox
50 54 0.028167283 ubox
65 91 0.010730814 ubox
68 95 0.025879247 ubox
68 98 0.020082366 ubox
68 101 0.016316048 ubox
68 104 0.013932599 ubox
68 107 0.004233448 ubox
69 86 0.994098535 ubox
69 91 0.005123982 ubox
70 85 0.998075033 ubox
71 84 0.998714485 ubox
71 91 0.018108859 ubox
72 83 0.998128959 ubox
72 87 0.016479876 ubox
72 90 0.017845256 ubox
72 91 0.004405487 ubox
72 92 0.017023603 ubox
72 93 0.006959501 ubox
72 97 0.006412537 ubox
73 80 0.004555913 ubox
73 82 0.997506998 ubox
73 86 0.017557778 ubox
73 89 0.013875434 ubox
73 90 0.005022598 ubox
73 91 0.017564336 ubox
73 92 0.007524435 ubox
73 96 0.006974828 ubox
74 81 0.986246752 ubox
74 85 0.017784393 ubox
75 79 0.035382263 ubox
75 80 0.900863027 ubox
75 82 0.006289405 ubox
75 84 0.017759435 ubox
75 87 0.008088474 ubox
75 88 0.003632809 ubox
75 89 0.031323007 ubox
75 94 0.014104633 ubox
76 80 0.028597938 ubox
76 82 0.004138648 ubox
76 83 0.016961062 ubox
76 86 0.007762817 ubox
76 87 0.003654649 ubox
76 88 0.036015825 ubox
76 93 0.016327998 ubox
77 82 0.014202913 ubox
77 86 0.003362290 ubox
77 87 0.037007812 ubox
77 92 0.016806767 ubox
78 84 0.008861382 ubox
78 86 0.037124043 ubox
78 91 0.016862172 ubox
79 85 0.030835144 ubox
81 88 0.004760591 ubox
84 95 0.011783993 ubox
84 98 0.005692789 ubox
84 101 0.003995190 ubox
84 104 0.003484791 ubox
85 94 0.011848721 ubox
85 96 0.007027352 ubox
85 97 0.005287470 ubox
85 100 0.003892360 ubox
85 103 0.003411831 ubox
86 95 0.011952933 ubox
86 98 0.004832561 ubox
86 101 0.003850025 ubox
86 104 0.003209980 ubox
91 95 0.043692404 ubox
91 98 0.104567941 ubox
91 101 0.045528713 ubox
91 104 0.034965604 ubox
91 107 0.010335114 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
