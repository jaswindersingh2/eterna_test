%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (758)
} def

/sequence { (\
GGAAAGUGGCGGCAAAGGCGGCACAAGCUGGCGAGAAAAUGGCGAGCAGACGUGGCGAAAGGCAGGUCGGAGGACUUCGGUUUUCCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.004335797 ubox
1 24 0.007074381 ubox
1 68 0.006498385 ubox
1 78 0.003596028 ubox
1 85 0.004242183 ubox
1 86 0.086751741 ubox
1 95 0.231836254 ubox
1 98 0.234147032 ubox
1 101 0.244016318 ubox
1 104 0.246336855 ubox
1 107 0.062257995 ubox
2 7 0.004064817 ubox
2 24 0.016986033 ubox
2 28 0.003177146 ubox
2 68 0.007479032 ubox
2 77 0.003482545 ubox
2 78 0.005636776 ubox
2 84 0.004297159 ubox
2 85 0.086242973 ubox
2 86 0.007819162 ubox
2 95 0.122335729 ubox
2 98 0.123344285 ubox
2 101 0.128602284 ubox
2 104 0.128256359 ubox
2 107 0.041889425 ubox
3 7 0.003723062 ubox
3 67 0.005029915 ubox
3 76 0.003253220 ubox
3 77 0.005418935 ubox
3 83 0.005963066 ubox
3 84 0.084879979 ubox
4 76 0.004710859 ubox
4 82 0.007096063 ubox
4 83 0.079619159 ubox
5 81 0.007704443 ubox
5 82 0.067652491 ubox
6 22 0.118596617 ubox
6 24 0.909896945 ubox
6 75 0.003493275 ubox
6 81 0.021294005 ubox
6 95 0.106724679 ubox
6 98 0.124319718 ubox
6 101 0.123737908 ubox
6 104 0.121819918 ubox
6 107 0.042497184 ubox
7 20 0.005454073 ubox
7 21 0.118466986 ubox
7 23 0.909129829 ubox
7 25 0.215928279 ubox
7 26 0.011176988 ubox
7 74 0.003278134 ubox
7 79 0.007637202 ubox
7 80 0.005856695 ubox
7 87 0.005652981 ubox
7 88 0.006976151 ubox
7 89 0.008655661 ubox
7 90 0.008494235 ubox
7 91 0.004712328 ubox
7 92 0.009736577 ubox
7 93 0.009071190 ubox
7 94 0.099176622 ubox
7 96 0.089971788 ubox
7 97 0.108981609 ubox
7 99 0.087708300 ubox
7 100 0.108561089 ubox
7 102 0.076175879 ubox
7 103 0.106679938 ubox
7 105 0.062817479 ubox
7 106 0.037593265 ubox
8 19 0.008107131 ubox
8 22 0.882136702 ubox
8 24 0.266322259 ubox
8 68 0.010628579 ubox
8 78 0.007718656 ubox
8 95 0.104827103 ubox
8 98 0.102449296 ubox
8 101 0.092577723 ubox
8 104 0.070849934 ubox
8 107 0.008811450 ubox
9 19 0.120328175 ubox
9 22 0.454410997 ubox
9 24 0.005152345 ubox
9 67 0.010656376 ubox
9 95 0.003492709 ubox
9 98 0.003497147 ubox
9 101 0.003463637 ubox
10 17 0.011645058 ubox
10 18 0.120051211 ubox
10 20 0.852251212 ubox
10 21 0.506801391 ubox
10 66 0.010635616 ubox
10 91 0.006619543 ubox
11 19 0.826600561 ubox
11 22 0.006348271 ubox
11 24 0.003899046 ubox
12 19 0.548445436 ubox
12 22 0.007276004 ubox
12 63 0.011002677 ubox
13 17 0.696619434 ubox
13 18 0.585198636 ubox
13 20 0.006418272 ubox
13 21 0.007271070 ubox
13 62 0.011003286 ubox
17 32 0.003677551 ubox
18 56 0.005988722 ubox
19 30 0.003860233 ubox
19 55 0.005992913 ubox
19 57 0.009526074 ubox
20 29 0.003942276 ubox
20 56 0.009578741 ubox
21 28 0.003969697 ubox
21 53 0.005961024 ubox
22 27 0.003968915 ubox
22 52 0.005959950 ubox
22 54 0.009614665 ubox
23 53 0.009633198 ubox
24 52 0.009609885 ubox
24 91 0.013513915 ubox
27 47 0.998877402 ubox
28 46 0.999940960 ubox
29 44 0.011258328 ubox
29 45 0.996647939 ubox
30 43 0.022431154 ubox
31 43 0.999595918 ubox
32 41 0.034345723 ubox
32 42 0.999248610 ubox
33 40 0.027803092 ubox
34 40 0.899956356 ubox
35 40 0.021584583 ubox
36 40 0.008196157 ubox
49 67 0.003335239 ubox
49 68 0.997961261 ubox
50 67 0.999445493 ubox
51 65 0.005169436 ubox
51 66 0.999406609 ubox
52 63 0.003632862 ubox
53 62 0.003635811 ubox
53 64 0.997279281 ubox
53 65 0.013549569 ubox
54 63 0.992576673 ubox
54 68 0.003552927 ubox
55 63 0.119042649 ubox
55 67 0.003566882 ubox
56 61 0.975172259 ubox
56 62 0.161389205 ubox
56 66 0.003557477 ubox
57 85 0.005149298 ubox
58 84 0.005386163 ubox
59 83 0.005506797 ubox
60 82 0.005561362 ubox
61 81 0.005597051 ubox
63 79 0.005767445 ubox
64 77 0.010774208 ubox
65 76 0.013320787 ubox
66 75 0.013703572 ubox
67 74 0.013731974 ubox
67 80 0.006065667 ubox
68 73 0.013788780 ubox
68 79 0.017471508 ubox
68 80 0.003168502 ubox
68 91 0.004158103 ubox
69 75 0.016823900 ubox
69 76 0.011183177 ubox
69 78 0.044370001 ubox
69 85 0.004568773 ubox
69 86 0.994963749 ubox
70 75 0.011900780 ubox
70 77 0.043347019 ubox
70 78 0.036895132 ubox
70 84 0.004241661 ubox
70 85 0.996120707 ubox
71 76 0.040183735 ubox
71 77 0.036318306 ubox
71 82 0.003216054 ubox
71 83 0.004991452 ubox
71 84 0.995559639 ubox
72 76 0.024648994 ubox
72 78 0.009649769 ubox
72 81 0.003821513 ubox
72 82 0.004738879 ubox
72 83 0.992247782 ubox
72 86 0.003681172 ubox
73 77 0.006294693 ubox
73 78 0.009449055 ubox
73 81 0.003474425 ubox
73 82 0.995381448 ubox
73 85 0.003679319 ubox
74 81 0.996710134 ubox
74 84 0.003350410 ubox
75 79 0.012555476 ubox
75 80 0.995901231 ubox
76 80 0.004142418 ubox
79 86 0.006241230 ubox
80 85 0.006231731 ubox
80 95 0.010141609 ubox
81 94 0.010042625 ubox
82 93 0.009910512 ubox
82 94 0.003381507 ubox
83 92 0.009767449 ubox
83 93 0.004464681 ubox
84 91 0.009172695 ubox
84 92 0.004936552 ubox
85 91 0.005186674 ubox
86 91 0.008348704 ubox
91 95 0.056261678 ubox
91 98 0.121310609 ubox
91 101 0.045966169 ubox
91 104 0.028898919 ubox
91 107 0.008376482 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
