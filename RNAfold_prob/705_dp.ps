%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (705)
} def

/sequence { (\
GGAAAAAGACGAGAAACACGACUUAACUCAGGAGAAAAACACCAGAGACAGACGACAAAAGACGACUGACUGCAUUUCGAUGCAGUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.199593304 ubox
1 17 0.054609098 ubox
1 19 0.046896731 ubox
1 22 0.025648659 ubox
1 23 0.013389267 ubox
1 24 0.005988181 ubox
1 27 0.018630295 ubox
1 28 0.014053124 ubox
1 29 0.042984066 ubox
1 40 0.011104419 ubox
1 43 0.032484041 ubox
1 49 0.008304866 ubox
1 53 0.006201555 ubox
1 56 0.006311103 ubox
1 63 0.006573237 ubox
1 66 0.006017097 ubox
1 67 0.009363258 ubox
1 86 0.005167336 ubox
1 95 0.202491000 ubox
1 98 0.203913022 ubox
1 101 0.209011905 ubox
1 104 0.209934331 ubox
1 107 0.053060780 ubox
2 10 0.049027316 ubox
2 17 0.019325097 ubox
2 19 0.016683416 ubox
2 22 0.016023019 ubox
2 23 0.005141165 ubox
2 24 0.016319887 ubox
2 27 0.020688452 ubox
2 28 0.038948021 ubox
2 29 0.045547879 ubox
2 40 0.003242360 ubox
2 42 0.032373629 ubox
2 49 0.004458709 ubox
2 53 0.003838770 ubox
2 56 0.003343777 ubox
2 63 0.003886886 ubox
2 66 0.009907138 ubox
2 86 0.007130040 ubox
2 95 0.106431225 ubox
2 98 0.106928407 ubox
2 101 0.109416617 ubox
2 104 0.109072061 ubox
2 107 0.035602865 ubox
3 23 0.014152128 ubox
3 24 0.018343463 ubox
3 28 0.044425463 ubox
3 86 0.007130474 ubox
4 23 0.014262993 ubox
4 24 0.022976503 ubox
4 28 0.004043654 ubox
4 86 0.006575523 ubox
5 23 0.016867088 ubox
5 24 0.046911871 ubox
5 86 0.006563074 ubox
6 23 0.037289487 ubox
6 24 0.651745139 ubox
6 67 0.003967901 ubox
6 86 0.004126658 ubox
7 23 0.697459603 ubox
7 24 0.024583357 ubox
7 28 0.033291246 ubox
7 67 0.067641962 ubox
7 86 0.003639237 ubox
8 17 0.054827326 ubox
8 19 0.024798522 ubox
8 22 0.702476223 ubox
8 23 0.019618313 ubox
8 24 0.031185012 ubox
8 27 0.037338126 ubox
8 29 0.031815051 ubox
8 56 0.004081179 ubox
8 63 0.006138043 ubox
8 66 0.069860186 ubox
8 86 0.003563712 ubox
8 95 0.064430909 ubox
8 98 0.067942547 ubox
8 101 0.067917167 ubox
8 104 0.068944329 ubox
8 107 0.023891741 ubox
9 23 0.030063372 ubox
9 24 0.011341728 ubox
9 28 0.031559199 ubox
9 86 0.007500709 ubox
10 20 0.722725324 ubox
10 31 0.024786247 ubox
10 32 0.009022318 ubox
10 34 0.006474266 ubox
10 45 0.004386415 ubox
10 47 0.003443744 ubox
10 54 0.005842884 ubox
10 61 0.008915788 ubox
10 64 0.078936027 ubox
10 68 0.004977399 ubox
10 79 0.003672277 ubox
10 85 0.006857865 ubox
10 91 0.054685991 ubox
11 17 0.055151360 ubox
11 19 0.718437334 ubox
11 22 0.029215962 ubox
11 23 0.006298461 ubox
11 24 0.320623061 ubox
11 27 0.007684292 ubox
11 29 0.089597655 ubox
11 42 0.004016621 ubox
11 43 0.003912757 ubox
11 53 0.005596710 ubox
11 63 0.078978914 ubox
11 78 0.003748904 ubox
11 95 0.047763956 ubox
11 98 0.047958719 ubox
11 101 0.050630474 ubox
11 104 0.043855506 ubox
11 107 0.016002668 ubox
12 23 0.338129411 ubox
12 24 0.016276332 ubox
12 28 0.089709757 ubox
12 67 0.005355307 ubox
12 77 0.003739843 ubox
13 17 0.222870673 ubox
13 19 0.066521940 ubox
13 22 0.340003042 ubox
13 23 0.014240863 ubox
13 24 0.044588994 ubox
13 27 0.089261464 ubox
13 29 0.012766831 ubox
13 40 0.006893610 ubox
13 56 0.003913903 ubox
13 63 0.003844741 ubox
13 66 0.005545319 ubox
13 76 0.003679713 ubox
13 95 0.039101401 ubox
13 98 0.039230587 ubox
13 101 0.040950536 ubox
13 104 0.038364991 ubox
13 107 0.013330767 ubox
14 23 0.046352783 ubox
14 24 0.029433085 ubox
14 28 0.012269780 ubox
14 75 0.003527261 ubox
15 23 0.030199786 ubox
15 24 0.041063142 ubox
16 23 0.038233687 ubox
16 24 0.016160715 ubox
16 86 0.004529233 ubox
17 31 0.003719245 ubox
17 32 0.008005889 ubox
17 34 0.003790939 ubox
17 68 0.008328571 ubox
17 85 0.004296173 ubox
17 91 0.038352210 ubox
18 23 0.011027105 ubox
18 24 0.010123763 ubox
18 67 0.007687095 ubox
18 86 0.003548862 ubox
19 31 0.008868288 ubox
19 32 0.004051694 ubox
19 34 0.034348258 ubox
19 51 0.003385555 ubox
19 54 0.119155375 ubox
19 64 0.016702799 ubox
19 68 0.003196088 ubox
19 85 0.003352165 ubox
19 91 0.035262745 ubox
20 24 0.006814106 ubox
20 27 0.010376519 ubox
20 29 0.027098257 ubox
20 53 0.120686762 ubox
20 56 0.005731216 ubox
20 63 0.016962938 ubox
20 95 0.059038278 ubox
20 98 0.037947861 ubox
20 101 0.038365368 ubox
20 104 0.038434829 ubox
20 107 0.014548146 ubox
21 28 0.025398728 ubox
21 86 0.005023331 ubox
22 31 0.036924242 ubox
22 32 0.015611121 ubox
22 34 0.023819257 ubox
22 45 0.003685292 ubox
22 47 0.011481172 ubox
22 51 0.117207855 ubox
22 54 0.007048577 ubox
22 61 0.017062566 ubox
22 85 0.004691496 ubox
22 91 0.216174874 ubox
23 30 0.034881657 ubox
23 31 0.015599500 ubox
23 33 0.023912252 ubox
23 35 0.003859926 ubox
23 36 0.003361804 ubox
23 38 0.003187198 ubox
23 44 0.003593627 ubox
23 46 0.011204256 ubox
23 48 0.014242887 ubox
23 50 0.111979474 ubox
23 51 0.023205901 ubox
23 52 0.012711899 ubox
23 60 0.016920909 ubox
23 84 0.003365588 ubox
23 87 0.007739613 ubox
23 88 0.025849083 ubox
23 89 0.026243977 ubox
23 90 0.215513754 ubox
23 91 0.019602814 ubox
23 92 0.034603093 ubox
23 93 0.026099955 ubox
23 94 0.019441189 ubox
23 96 0.008037210 ubox
23 97 0.016905599 ubox
23 99 0.008163526 ubox
23 100 0.017142733 ubox
23 102 0.008162752 ubox
23 103 0.016957378 ubox
23 105 0.008057043 ubox
23 106 0.016686634 ubox
24 30 0.014446549 ubox
24 31 0.003306812 ubox
24 32 0.023439041 ubox
24 34 0.004107564 ubox
24 35 0.003707473 ubox
24 37 0.003501608 ubox
24 45 0.010062107 ubox
24 47 0.006034334 ubox
24 48 0.023474965 ubox
24 50 0.028783367 ubox
24 51 0.013128101 ubox
24 52 0.005117810 ubox
24 59 0.015332124 ubox
24 87 0.027826083 ubox
24 88 0.028877156 ubox
24 89 0.201818021 ubox
24 90 0.021791407 ubox
24 91 0.035484015 ubox
24 92 0.027778200 ubox
24 93 0.021788072 ubox
24 94 0.009762820 ubox
24 96 0.018550654 ubox
24 97 0.009719569 ubox
24 99 0.018812894 ubox
24 100 0.009899646 ubox
24 102 0.018653043 ubox
24 103 0.009626683 ubox
24 105 0.018374968 ubox
24 106 0.009457248 ubox
25 86 0.016551856 ubox
26 86 0.007142630 ubox
27 31 0.005837067 ubox
27 32 0.012148416 ubox
27 34 0.016985381 ubox
27 45 0.024358788 ubox
27 47 0.975536418 ubox
27 85 0.006230137 ubox
27 91 0.013982865 ubox
28 33 0.015815755 ubox
28 35 0.035603359 ubox
28 44 0.022892645 ubox
28 45 0.003453100 ubox
28 46 0.981629312 ubox
28 47 0.003383779 ubox
28 48 0.028710121 ubox
28 55 0.003190217 ubox
28 69 0.012936511 ubox
28 84 0.006085844 ubox
28 90 0.012329172 ubox
28 92 0.025430231 ubox
29 34 0.037551923 ubox
29 45 0.978798374 ubox
29 47 0.031231806 ubox
29 54 0.003263662 ubox
29 68 0.026015141 ubox
29 82 0.005733550 ubox
29 91 0.026811535 ubox
30 67 0.026096175 ubox
30 81 0.005693381 ubox
31 40 0.052029244 ubox
31 42 0.052939581 ubox
31 43 0.977936076 ubox
31 66 0.026089178 ubox
31 95 0.006583644 ubox
31 98 0.008449215 ubox
31 101 0.008604320 ubox
31 104 0.008643822 ubox
32 40 0.028611596 ubox
32 42 0.976860489 ubox
32 43 0.069325423 ubox
32 95 0.004118528 ubox
32 98 0.004167183 ubox
32 101 0.004249922 ubox
32 104 0.004208318 ubox
34 40 0.635090296 ubox
34 42 0.042544882 ubox
34 43 0.022779894 ubox
34 63 0.022186300 ubox
34 78 0.005925255 ubox
34 95 0.006809252 ubox
34 98 0.006846781 ubox
34 101 0.006937053 ubox
34 104 0.004759759 ubox
35 77 0.005900234 ubox
36 76 0.005800742 ubox
37 75 0.005412191 ubox
40 45 0.013687487 ubox
40 47 0.016048141 ubox
40 91 0.004695479 ubox
42 47 0.009722402 ubox
42 91 0.003213616 ubox
43 47 0.007086612 ubox
43 51 0.003605103 ubox
43 54 0.006624798 ubox
43 68 0.014684552 ubox
43 72 0.005857725 ubox
43 91 0.006538281 ubox
44 67 0.014726246 ubox
44 71 0.005994159 ubox
45 53 0.008362972 ubox
45 66 0.014658348 ubox
45 70 0.006057290 ubox
45 95 0.006010334 ubox
45 98 0.006042331 ubox
45 101 0.006139743 ubox
45 104 0.006129159 ubox
46 71 0.005351599 ubox
47 53 0.004468158 ubox
47 56 0.003701102 ubox
47 63 0.006913375 ubox
47 66 0.003278175 ubox
47 70 0.006392473 ubox
47 95 0.007195456 ubox
47 98 0.007164312 ubox
47 101 0.007268251 ubox
47 104 0.007206519 ubox
49 54 0.013325562 ubox
49 61 0.007396815 ubox
49 64 0.006449905 ubox
49 68 0.975584380 ubox
49 91 0.004198821 ubox
50 67 0.979712115 ubox
51 56 0.012919403 ubox
51 63 0.012393984 ubox
51 66 0.978120157 ubox
51 101 0.003565153 ubox
51 104 0.007521718 ubox
52 67 0.003489136 ubox
53 61 0.027068424 ubox
53 64 0.977222403 ubox
53 68 0.007010902 ubox
54 63 0.976328219 ubox
54 66 0.006864298 ubox
54 67 0.005896617 ubox
54 98 0.004014408 ubox
54 101 0.013230680 ubox
56 61 0.544748778 ubox
56 64 0.014926401 ubox
56 68 0.016972186 ubox
57 67 0.015883229 ubox
58 67 0.004270575 ubox
60 67 0.033151395 ubox
61 66 0.034120961 ubox
61 95 0.020071317 ubox
61 98 0.008975438 ubox
62 67 0.003185078 ubox
63 68 0.012609751 ubox
63 91 0.041796526 ubox
64 95 0.014640212 ubox
64 98 0.003735475 ubox
64 101 0.003229524 ubox
66 91 0.065633467 ubox
67 87 0.027013741 ubox
67 88 0.032699517 ubox
67 89 0.018484295 ubox
67 90 0.063081816 ubox
67 96 0.011053452 ubox
67 99 0.008551142 ubox
67 102 0.006713846 ubox
67 105 0.005636687 ubox
68 86 0.021180525 ubox
68 95 0.012389724 ubox
68 98 0.009577412 ubox
68 101 0.007522918 ubox
68 104 0.006322825 ubox
69 86 0.968413756 ubox
70 85 0.999369035 ubox
71 84 0.999620366 ubox
72 83 0.999955355 ubox
73 82 0.999946354 ubox
74 81 0.977879849 ubox
75 79 0.035003900 ubox
75 80 0.893088764 ubox
76 80 0.028271189 ubox
85 95 0.008805353 ubox
85 98 0.005369879 ubox
85 101 0.003843215 ubox
86 90 0.003544193 ubox
86 91 0.006630836 ubox
86 92 0.006107522 ubox
86 93 0.007810584 ubox
86 94 0.009526059 ubox
86 97 0.005791228 ubox
86 100 0.004141922 ubox
86 103 0.003329127 ubox
91 95 0.051477481 ubox
91 98 0.113811690 ubox
91 101 0.044713173 ubox
91 104 0.029841083 ubox
91 107 0.008688923 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
