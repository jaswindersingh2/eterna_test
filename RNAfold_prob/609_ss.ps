%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAACAUGCAUCAGCGCGCUAGCUACGAAGAAAAAAAAAGCGUAGCUAGCGUGCUGAUGCAUGAAGUCGUCGUUCGCGACGACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

/coor [
[11.99449253 160.51689148]
[16.62115669 146.24824524]
[23.98309135 133.17913818]
[33.78841782 121.82767487]
[45.64839172 112.64393616]
[59.09279251 105.99201965]
[73.58860016 102.13564301]
[88.56282806 101.22778320]
[76.03050995 92.98515320]
[63.49819565 84.74251556]
[50.96587753 76.49987793]
[38.43355942 68.25724792]
[25.90124321 60.01461029]
[13.36892509 51.77197647]
[0.83660799 43.52934265]
[-11.69570923 35.28670883]
[-24.22802544 27.04407310]
[-36.76034164 18.80143929]
[-49.29265976 10.55880356]
[-61.82497787 2.31616902]
[-74.35729218 -5.92646551]
[-86.88961029 -14.16909981]
[-99.42192841 -22.41173553]
[-111.95424652 -30.65436935]
[-124.48656464 -38.89700317]
[-137.01887512 -47.13964081]
[-149.55119324 -55.38227463]
[-162.08351135 -63.62490845]
[-174.61582947 -71.86754608]
[-187.14814758 -80.11017609]
[-199.94540405 -71.85486603]
[-214.99501038 -69.52479553]
[-229.68952942 -73.52365875]
[-241.48306274 -83.15863037]
[-248.33227539 -96.76039124]
[-249.05053711 -111.97235870]
[-243.51338196 -126.15896606]
[-232.68017578 -136.86230469]
[-218.42781067 -142.22793579]
[-203.22560120 -141.32624817]
[-189.70744324 -134.31346130]
[-180.21542358 -122.40458679]
[-176.39408875 -107.66290283]
[-178.90551758 -92.64249420]
[-166.37319946 -84.39985657]
[-153.84088135 -76.15722656]
[-141.30856323 -67.91458893]
[-128.77624512 -59.67195511]
[-116.24392700 -51.42932129]
[-103.71160889 -43.18668747]
[-91.17929840 -34.94405365]
[-78.64698029 -26.70141792]
[-66.11466217 -18.45878220]
[-53.58234406 -10.21614838]
[-41.05002594 -1.97351336]
[-28.51770973 6.26912117]
[-15.98539162 14.51175594]
[-3.45307446 22.75439072]
[9.07924271 30.99702454]
[21.61155891 39.23965836]
[34.14387512 47.48229599]
[46.67619324 55.72492981]
[59.20851135 63.96756363]
[71.74082947 72.21019745]
[84.27314758 80.45283508]
[96.80546570 88.69546509]
[100.55037689 88.18896484]
[104.28716278 88.89859009]
[107.62857056 90.76660919]
[122.31867981 87.73335266]
[137.00878906 84.70008850]
[151.69889832 81.66682434]
[166.38900757 78.63356018]
[181.07911682 75.60029602]
[195.76922607 72.56703186]
[207.65342712 61.26667786]
[223.30317688 66.16739655]
[226.61936951 82.22774506]
[214.19058228 92.92621613]
[198.80249023 87.25714111]
[184.11238098 90.29040527]
[169.42227173 93.32366943]
[154.73216248 96.35693359]
[140.04205322 99.39019775]
[125.35194397 102.42346191]
[110.66183472 105.45671844]
[124.24142456 111.82812500]
[136.28947449 120.76370239]
[146.32832336 131.90916443]
[153.95996094 144.82266235]
[158.88182068 158.99217224]
[160.89875793 173.85595703]
[159.93081665 188.82469177]
[156.01635742 203.30493164]
[149.31059265 216.72254944]
[140.07937622 228.54560852]
[128.68870544 238.30535889]
[115.59017944 245.61483765]
[101.30310822 250.18426514]
[86.39393616 251.83245850]
[71.45376587 250.49409485]
[57.07492065 246.22222900]
[43.82748032 239.18621826]
[32.23667145 229.66503906]
[22.76202202 218.03614807]
[15.77918053 204.76060486]
[11.56499004 190.36474609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 66]
[9 65]
[10 64]
[11 63]
[12 62]
[13 61]
[14 60]
[15 59]
[16 58]
[17 57]
[18 56]
[19 55]
[20 54]
[21 53]
[22 52]
[23 51]
[24 50]
[25 49]
[26 48]
[27 47]
[28 46]
[29 45]
[30 44]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
