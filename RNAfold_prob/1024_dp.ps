%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1024)
} def

/sequence { (\
GGAAAAGUCAAAGACAAGUACAAAGUACAAGUGACAAAGUCACAAGCACAAAGUGCAAGCCAAAGGCACAUGUAGUUCGCUACAUGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.004840256 ubox
1 9 0.040931178 ubox
1 15 0.020741504 ubox
1 21 0.036819004 ubox
1 28 0.003581938 ubox
1 41 0.011967645 ubox
1 43 0.012326328 ubox
1 56 0.004243469 ubox
1 60 0.003475351 ubox
1 61 0.095237680 ubox
1 67 0.009981433 ubox
1 69 0.017763721 ubox
1 95 0.354152401 ubox
1 98 0.371169032 ubox
1 101 0.371499873 ubox
1 104 0.369566757 ubox
1 107 0.093374289 ubox
2 8 0.035347358 ubox
2 9 0.141848343 ubox
2 15 0.014254283 ubox
2 19 0.007798454 ubox
2 21 0.013470820 ubox
2 40 0.011690290 ubox
2 41 0.019857366 ubox
2 60 0.094991564 ubox
2 61 0.006091625 ubox
2 67 0.007165882 ubox
2 69 0.009228443 ubox
2 95 0.184462642 ubox
2 98 0.195912612 ubox
2 101 0.189001814 ubox
2 104 0.187995465 ubox
2 107 0.061345631 ubox
3 8 0.129875054 ubox
3 19 0.018651032 ubox
3 40 0.019784053 ubox
4 8 0.006077008 ubox
4 19 0.005494658 ubox
5 19 0.005438629 ubox
6 19 0.004267415 ubox
6 81 0.004218541 ubox
7 15 0.837183550 ubox
7 21 0.020796427 ubox
7 28 0.007123420 ubox
7 35 0.033280211 ubox
7 60 0.003471078 ubox
7 67 0.047737970 ubox
7 69 0.007481595 ubox
7 80 0.004377484 ubox
7 95 0.175970357 ubox
7 98 0.171319682 ubox
7 101 0.166731179 ubox
7 104 0.165121002 ubox
7 107 0.057651043 ubox
8 12 0.005827062 ubox
8 13 0.010889760 ubox
8 14 0.838044373 ubox
8 16 0.005597152 ubox
8 17 0.009463018 ubox
8 20 0.020464887 ubox
8 27 0.006918465 ubox
8 34 0.033348556 ubox
8 59 0.003258794 ubox
8 66 0.047712965 ubox
8 68 0.007870699 ubox
8 79 0.004288828 ubox
8 87 0.029630858 ubox
8 88 0.012746942 ubox
8 89 0.011701083 ubox
8 90 0.012090394 ubox
8 91 0.012962103 ubox
8 92 0.239163953 ubox
8 93 0.018329460 ubox
8 94 0.162106836 ubox
8 96 0.012618099 ubox
8 97 0.161140268 ubox
8 99 0.012022565 ubox
8 100 0.157212956 ubox
8 102 0.011252398 ubox
8 103 0.155730552 ubox
8 105 0.009380040 ubox
8 106 0.054953626 ubox
9 13 0.831755400 ubox
9 18 0.020851832 ubox
9 25 0.005555671 ubox
9 33 0.033354671 ubox
9 65 0.047478354 ubox
9 86 0.029306277 ubox
9 91 0.252670037 ubox
10 19 0.003828894 ubox
10 32 0.028526225 ubox
10 77 0.003631653 ubox
10 85 0.018094404 ubox
11 76 0.003786723 ubox
12 19 0.006157251 ubox
12 81 0.003377943 ubox
13 21 0.008454785 ubox
13 28 0.015157775 ubox
13 41 0.004823558 ubox
13 60 0.006852455 ubox
13 61 0.012168402 ubox
13 80 0.003439061 ubox
13 95 0.064100838 ubox
13 98 0.062489231 ubox
13 101 0.058017213 ubox
13 104 0.056794806 ubox
13 107 0.019813112 ubox
14 26 0.027283143 ubox
14 32 0.025996746 ubox
14 40 0.004825506 ubox
14 73 0.004424830 ubox
15 25 0.027884798 ubox
15 31 0.031540589 ubox
15 39 0.004797102 ubox
15 59 0.011882535 ubox
15 72 0.004460611 ubox
15 86 0.009402910 ubox
15 91 0.061675378 ubox
16 71 0.004045048 ubox
16 77 0.003419564 ubox
16 85 0.006924549 ubox
17 26 0.013587207 ubox
17 76 0.003581057 ubox
18 26 0.003404460 ubox
18 28 0.975004708 ubox
18 35 0.003215322 ubox
18 56 0.089268554 ubox
18 83 0.007370836 ubox
18 95 0.047438726 ubox
18 98 0.046892426 ubox
18 101 0.049929365 ubox
18 104 0.049974957 ubox
18 107 0.017470983 ubox
19 24 0.011040173 ubox
19 25 0.004214992 ubox
19 27 0.976204738 ubox
19 33 0.003215549 ubox
19 55 0.089326979 ubox
19 74 0.003745304 ubox
19 82 0.007375664 ubox
19 87 0.003286710 ubox
19 92 0.004018359 ubox
19 93 0.004662035 ubox
19 94 0.045424467 ubox
19 97 0.044924047 ubox
19 99 0.003207277 ubox
19 100 0.047885107 ubox
19 102 0.003282595 ubox
19 103 0.047927852 ubox
19 106 0.016930847 ubox
20 26 0.975623603 ubox
20 32 0.003982940 ubox
20 54 0.089304190 ubox
20 73 0.003767143 ubox
20 81 0.007284854 ubox
21 25 0.966127044 ubox
21 31 0.004108254 ubox
21 53 0.089088217 ubox
21 72 0.003767883 ubox
21 79 0.006814090 ubox
21 91 0.015478715 ubox
22 26 0.003707851 ubox
22 71 0.003432331 ubox
23 77 0.007601943 ubox
24 76 0.007875291 ubox
25 47 0.007934607 ubox
25 49 0.081082922 ubox
25 56 0.005384848 ubox
25 95 0.051353805 ubox
25 98 0.050096103 ubox
25 101 0.049342708 ubox
25 104 0.049017650 ubox
25 107 0.017106899 ubox
26 30 0.003297527 ubox
26 46 0.007768591 ubox
26 48 0.079511387 ubox
26 55 0.005384645 ubox
26 74 0.008080668 ubox
26 87 0.004803781 ubox
26 88 0.003826844 ubox
26 89 0.003747041 ubox
26 90 0.004872162 ubox
26 91 0.003801909 ubox
26 92 0.004899542 ubox
26 93 0.006498865 ubox
26 94 0.049551298 ubox
26 96 0.004188721 ubox
26 97 0.048366953 ubox
26 99 0.003425016 ubox
26 100 0.047634672 ubox
26 102 0.003198100 ubox
26 103 0.047318135 ubox
26 106 0.016686293 ubox
27 54 0.005377989 ubox
27 73 0.008114075 ubox
28 46 0.071136674 ubox
28 53 0.005340304 ubox
28 72 0.008114485 ubox
28 91 0.018049893 ubox
29 71 0.007310217 ubox
31 43 0.997058566 ubox
31 95 0.007889187 ubox
31 98 0.007809248 ubox
31 101 0.008527022 ubox
31 104 0.007805072 ubox
32 42 0.998357527 ubox
32 94 0.007104298 ubox
32 97 0.006993166 ubox
32 100 0.007757398 ubox
32 103 0.006985621 ubox
33 41 0.999298744 ubox
34 40 0.997985091 ubox
35 39 0.988103707 ubox
39 95 0.005840809 ubox
39 98 0.004658102 ubox
39 101 0.004662250 ubox
39 104 0.004653119 ubox
40 92 0.006798295 ubox
40 94 0.005516806 ubox
40 97 0.004388318 ubox
40 100 0.004400998 ubox
40 103 0.004393847 ubox
41 91 0.007198913 ubox
43 91 0.004354965 ubox
45 81 0.004992428 ubox
46 54 0.011470527 ubox
46 56 0.994353446 ubox
46 67 0.006511176 ubox
46 80 0.005183348 ubox
47 53 0.012102355 ubox
47 55 0.995400940 ubox
47 66 0.006513579 ubox
47 79 0.005179512 ubox
48 54 0.993263442 ubox
49 53 0.983508046 ubox
49 55 0.006437291 ubox
50 54 0.005419558 ubox
51 77 0.004927403 ubox
52 76 0.005038135 ubox
53 60 0.006238566 ubox
53 69 0.008802598 ubox
54 59 0.006155191 ubox
54 68 0.009841652 ubox
54 74 0.005174605 ubox
55 67 0.010214031 ubox
55 73 0.005211230 ubox
56 66 0.010148218 ubox
56 72 0.005213918 ubox
57 71 0.005211234 ubox
59 67 0.991335616 ubox
59 95 0.003590671 ubox
60 65 0.009831859 ubox
60 66 0.992341277 ubox
61 65 0.985131684 ubox
61 66 0.010210607 ubox
65 95 0.003717307 ubox
67 86 0.003466124 ubox
67 91 0.006482686 ubox
68 85 0.003434206 ubox
69 86 0.993666140 ubox
69 91 0.004529992 ubox
70 85 0.998368243 ubox
71 84 0.999206079 ubox
71 99 0.006881491 ubox
72 83 0.999853928 ubox
72 98 0.007648194 ubox
72 101 0.003362959 ubox
73 82 0.999610736 ubox
73 97 0.007490573 ubox
73 100 0.003304292 ubox
74 81 0.998935401 ubox
75 80 0.990694018 ubox
75 95 0.007640779 ubox
75 98 0.003391724 ubox
76 93 0.004648357 ubox
76 94 0.006606610 ubox
76 97 0.003345303 ubox
77 92 0.006173190 ubox
77 93 0.005230790 ubox
78 91 0.007219669 ubox
80 91 0.004727807 ubox
81 90 0.004711289 ubox
85 90 0.003588009 ubox
85 92 0.003921235 ubox
85 96 0.012535664 ubox
85 99 0.004310013 ubox
86 95 0.020341960 ubox
86 98 0.006959297 ubox
86 101 0.004247907 ubox
91 95 0.068940833 ubox
91 98 0.139253665 ubox
91 101 0.045843492 ubox
91 104 0.015445240 ubox
91 107 0.003661029 ubox
1 95 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
