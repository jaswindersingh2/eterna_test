%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (308)
} def

/sequence { (\
GGAAAAAAGCGGAACGCGGAAACGCGGCCGUGCCGAGACGGGCGAAAGGCCGGCGGUGCGGAACCGCGGCCCGCGUUCGCGCGGGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.017263841 ubox
1 86 0.115867002 ubox
1 95 0.041064261 ubox
1 98 0.037477919 ubox
1 101 0.037005069 ubox
1 104 0.036025597 ubox
1 107 0.005953447 ubox
2 10 0.005312847 ubox
2 86 0.136406720 ubox
2 95 0.016215065 ubox
2 98 0.015536620 ubox
2 101 0.015276245 ubox
2 104 0.015214599 ubox
2 107 0.004946310 ubox
9 17 0.049472119 ubox
9 31 0.005929016 ubox
9 67 0.093376698 ubox
9 80 0.129892521 ubox
9 82 0.982147603 ubox
9 86 0.009472256 ubox
10 16 0.049530478 ubox
10 18 0.013793005 ubox
10 19 0.003900822 ubox
10 30 0.006801168 ubox
10 66 0.093491466 ubox
10 79 0.129898321 ubox
10 81 0.983365010 ubox
10 83 0.006942771 ubox
10 85 0.008751537 ubox
11 15 0.046338375 ubox
11 17 0.013953077 ubox
11 29 0.006846057 ubox
11 65 0.093485185 ubox
11 78 0.105298267 ubox
11 80 0.979715947 ubox
11 82 0.007158736 ubox
11 95 0.003732069 ubox
11 98 0.003703342 ubox
11 101 0.003788172 ubox
11 104 0.003775644 ubox
12 17 0.003229970 ubox
12 28 0.006839048 ubox
12 64 0.093074476 ubox
12 77 0.072012157 ubox
12 78 0.987451469 ubox
13 76 0.050835853 ubox
13 77 0.991060292 ubox
14 76 0.992354161 ubox
14 77 0.004749294 ubox
15 26 0.091136842 ubox
15 60 0.017146205 ubox
15 61 0.004079453 ubox
15 68 0.003983197 ubox
15 75 0.994127495 ubox
16 25 0.091993223 ubox
16 59 0.017181505 ubox
16 67 0.004012524 ubox
16 74 0.994154954 ubox
17 24 0.091997830 ubox
17 58 0.017171223 ubox
17 60 0.006429583 ubox
17 66 0.004012447 ubox
17 73 0.994154655 ubox
18 23 0.091769458 ubox
18 57 0.012752007 ubox
18 59 0.006434791 ubox
18 65 0.004011802 ubox
18 71 0.022144175 ubox
18 72 0.993877354 ubox
19 64 0.004003753 ubox
19 70 0.031232571 ubox
19 71 0.992209787 ubox
19 72 0.004340272 ubox
20 57 0.005213221 ubox
23 53 0.004798191 ubox
23 55 0.015930134 ubox
23 68 0.994042502 ubox
23 69 0.021994545 ubox
24 54 0.016210832 ubox
24 67 0.995522728 ubox
25 44 0.003725596 ubox
25 52 0.015852901 ubox
25 53 0.011485598 ubox
25 66 0.995526949 ubox
26 43 0.003812057 ubox
26 51 0.019781833 ubox
26 64 0.012372492 ubox
26 65 0.995355310 ubox
27 50 0.019830335 ubox
27 64 0.990172676 ubox
28 41 0.003968769 ubox
28 49 0.019835025 ubox
28 61 0.994514860 ubox
29 40 0.003998454 ubox
29 48 0.019805011 ubox
29 60 0.999702767 ubox
29 61 0.004710090 ubox
30 39 0.004028804 ubox
30 59 0.999731475 ubox
31 38 0.004003422 ubox
31 44 0.016625825 ubox
31 45 0.003276175 ubox
31 58 0.997713724 ubox
32 43 0.019923958 ubox
32 57 0.997716024 ubox
32 86 0.004872724 ubox
33 42 0.019908492 ubox
33 56 0.999751537 ubox
33 85 0.004635866 ubox
34 41 0.019880724 ubox
34 55 0.999678709 ubox
34 84 0.004379826 ubox
35 54 0.987390018 ubox
37 51 0.003772116 ubox
37 54 0.080559002 ubox
37 80 0.003783221 ubox
39 52 0.835986412 ubox
39 53 0.425086951 ubox
39 79 0.004346704 ubox
40 51 0.838248899 ubox
40 78 0.004357208 ubox
41 50 0.833157203 ubox
41 51 0.544569277 ubox
41 77 0.004342462 ubox
42 50 0.552449210 ubox
42 76 0.004345492 ubox
43 48 0.818867564 ubox
43 49 0.559335256 ubox
43 75 0.004348293 ubox
44 74 0.004311425 ubox
48 71 0.005933131 ubox
49 70 0.006612650 ubox
50 69 0.006639995 ubox
51 68 0.006658539 ubox
52 67 0.004717654 ubox
53 67 0.009521771 ubox
54 66 0.010635946 ubox
55 65 0.010649513 ubox
56 64 0.010649663 ubox
57 63 0.010589030 ubox
68 86 0.004678918 ubox
69 86 0.107397606 ubox
70 85 0.107634075 ubox
71 84 0.107636259 ubox
72 83 0.107635416 ubox
73 82 0.107635386 ubox
74 81 0.107630484 ubox
75 80 0.104843800 ubox
79 86 0.062154085 ubox
80 85 0.062205994 ubox
81 86 0.009729761 ubox
81 95 0.005058233 ubox
81 98 0.025991146 ubox
81 101 0.020190110 ubox
81 104 0.017212447 ubox
81 107 0.005658266 ubox
82 91 0.025661185 ubox
83 95 0.118787673 ubox
83 98 0.091705414 ubox
83 101 0.077287335 ubox
83 104 0.071451671 ubox
83 107 0.023324858 ubox
84 95 0.117902822 ubox
84 98 0.091344592 ubox
84 101 0.077734280 ubox
84 104 0.065672190 ubox
84 107 0.019356654 ubox
85 95 0.044190990 ubox
85 98 0.034071653 ubox
85 101 0.029529308 ubox
85 104 0.025450170 ubox
85 107 0.006412884 ubox
86 91 0.105654302 ubox
91 95 0.041977973 ubox
91 98 0.101048715 ubox
91 101 0.043813827 ubox
91 104 0.034085416 ubox
91 107 0.010089437 ubox
9 82 0.9500000 lbox
10 81 0.9500000 lbox
11 80 0.9500000 lbox
12 78 0.9500000 lbox
13 77 0.9500000 lbox
14 76 0.9500000 lbox
15 75 0.9500000 lbox
16 74 0.9500000 lbox
17 73 0.9500000 lbox
18 72 0.9500000 lbox
19 71 0.9500000 lbox
23 68 0.9500000 lbox
24 67 0.9500000 lbox
25 66 0.9500000 lbox
26 65 0.9500000 lbox
27 64 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
31 58 0.9500000 lbox
32 57 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
