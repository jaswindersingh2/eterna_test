%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1065)
} def

/sequence { (\
GGAAAAAACUGGACUACAGAAUGUCAAAGACAAUUCAAAACUUGACUGAAACAGCAAGAGUAGACCAGUAGUCAUUUCGAUGACUAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.011529698 ubox
1 10 0.005652800 ubox
1 73 0.005927951 ubox
1 78 0.018431095 ubox
1 95 0.067261203 ubox
1 98 0.067686478 ubox
1 101 0.069321080 ubox
1 104 0.069631340 ubox
1 107 0.017579965 ubox
2 9 0.007749340 ubox
2 72 0.005716069 ubox
2 73 0.016554809 ubox
2 77 0.018426681 ubox
2 78 0.016787840 ubox
2 95 0.035502387 ubox
2 98 0.035630588 ubox
2 101 0.036438929 ubox
2 104 0.036300026 ubox
2 107 0.011844790 ubox
3 69 0.003691007 ubox
3 72 0.016495371 ubox
3 76 0.018332785 ubox
3 77 0.016793089 ubox
4 69 0.004711708 ubox
4 75 0.016983892 ubox
4 76 0.016595012 ubox
5 69 0.006525843 ubox
5 72 0.008202979 ubox
5 75 0.015295764 ubox
6 69 0.009115667 ubox
6 72 0.003659465 ubox
7 69 0.035788214 ubox
7 72 0.006469206 ubox
8 69 0.780655597 ubox
9 68 0.997024879 ubox
9 91 0.003634847 ubox
10 67 0.999298028 ubox
11 66 0.999967157 ubox
12 65 0.998748175 ubox
13 61 0.016457201 ubox
14 60 0.016650314 ubox
14 63 0.997282956 ubox
15 59 0.016151767 ubox
15 62 0.999310077 ubox
16 61 0.999175924 ubox
17 60 0.997977895 ubox
18 34 0.007060038 ubox
18 35 0.012718393 ubox
19 25 0.011856072 ubox
19 34 0.013385441 ubox
19 35 0.090359184 ubox
19 36 0.977952471 ubox
20 24 0.010327640 ubox
20 34 0.099101201 ubox
20 35 0.977925349 ubox
21 34 0.966636907 ubox
21 35 0.009628431 ubox
22 28 0.003397468 ubox
22 32 0.716732053 ubox
22 33 0.684689891 ubox
22 37 0.005053547 ubox
22 53 0.010540607 ubox
22 56 0.003636026 ubox
23 31 0.994092000 ubox
23 36 0.005542678 ubox
23 46 0.004692444 ubox
23 52 0.010613237 ubox
23 55 0.003747040 ubox
24 29 0.008929331 ubox
24 30 0.994858578 ubox
24 32 0.004206166 ubox
24 33 0.003169985 ubox
24 45 0.004768502 ubox
24 51 0.010292145 ubox
24 54 0.003539788 ubox
25 29 0.986544051 ubox
25 44 0.004790203 ubox
26 43 0.004425788 ubox
27 35 0.003288227 ubox
27 42 0.003787663 ubox
28 34 0.003556772 ubox
28 47 0.010608259 ubox
29 36 0.015616738 ubox
29 46 0.010679394 ubox
30 35 0.014081508 ubox
31 44 0.010489150 ubox
32 43 0.010468379 ubox
33 42 0.010161321 ubox
34 38 0.003884480 ubox
34 39 0.005835707 ubox
34 40 0.008381772 ubox
34 50 0.003873131 ubox
35 39 0.008404337 ubox
35 40 0.005820176 ubox
35 45 0.011323433 ubox
35 49 0.004450817 ubox
35 59 0.004753055 ubox
36 44 0.012411714 ubox
36 48 0.004528430 ubox
36 58 0.004027702 ubox
37 43 0.012314666 ubox
37 47 0.004266564 ubox
38 42 0.009478623 ubox
38 61 0.004769088 ubox
40 61 0.007046033 ubox
41 48 0.003962764 ubox
41 58 0.991460759 ubox
41 60 0.008097976 ubox
42 54 0.004645152 ubox
42 57 0.997090129 ubox
42 58 0.012895870 ubox
42 59 0.010852067 ubox
43 53 0.006168163 ubox
43 56 0.998492177 ubox
43 57 0.014610886 ubox
43 58 0.010323261 ubox
44 52 0.006540186 ubox
44 55 0.999058906 ubox
46 54 0.998093367 ubox
46 58 0.007823603 ubox
47 53 0.997093836 ubox
47 54 0.006564364 ubox
47 56 0.009007751 ubox
47 57 0.007191442 ubox
48 52 0.981231575 ubox
48 55 0.010146910 ubox
68 95 0.004753071 ubox
68 98 0.003748117 ubox
68 101 0.005016692 ubox
69 86 0.584808151 ubox
69 87 0.026992665 ubox
69 88 0.009884323 ubox
69 89 0.006815902 ubox
69 90 0.004913339 ubox
69 91 0.003513554 ubox
69 94 0.004197966 ubox
69 97 0.003322204 ubox
69 100 0.005078902 ubox
70 85 0.966079384 ubox
71 81 0.010632012 ubox
71 84 0.997322820 ubox
71 85 0.003964707 ubox
71 95 0.005863760 ubox
71 98 0.054627935 ubox
71 101 0.004834739 ubox
72 80 0.011391600 ubox
72 83 0.997434843 ubox
72 94 0.005182192 ubox
72 97 0.054374140 ubox
72 100 0.004655195 ubox
73 79 0.011578233 ubox
73 82 0.997577953 ubox
74 81 0.975570236 ubox
75 79 0.034921860 ubox
75 80 0.890980399 ubox
75 94 0.057459233 ubox
76 80 0.028205953 ubox
76 93 0.059791169 ubox
77 92 0.060298377 ubox
78 91 0.060351886 ubox
79 98 0.003994294 ubox
81 87 0.009723740 ubox
81 88 0.032528677 ubox
81 89 0.009677917 ubox
81 90 0.004949407 ubox
81 96 0.005415576 ubox
82 95 0.005761799 ubox
84 91 0.010170630 ubox
85 89 0.003261908 ubox
85 90 0.011520312 ubox
85 91 0.005693355 ubox
85 92 0.007345579 ubox
85 93 0.004470197 ubox
85 94 0.005268462 ubox
91 95 0.042950732 ubox
91 98 0.103566899 ubox
91 101 0.045441724 ubox
91 104 0.035172095 ubox
91 107 0.010406242 ubox
8 69 0.9500000 lbox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
