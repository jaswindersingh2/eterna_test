%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (183)
} def

/sequence { (\
GGAAAAAAGCAGGGCAGGGCCCGGGAAACGCGGAAACGACGGCCGGGAGCGCGGGCCCGGGCAACAAGCGGCCGCUUCGGCGGCCGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.218536204 ubox
1 15 0.036974137 ubox
1 62 0.005771708 ubox
1 65 0.037311643 ubox
1 69 0.011376932 ubox
1 95 0.073382323 ubox
1 98 0.074407250 ubox
1 101 0.076557324 ubox
1 104 0.076658534 ubox
1 107 0.019665903 ubox
2 10 0.057402709 ubox
2 15 0.015788534 ubox
2 62 0.004122706 ubox
2 65 0.016462642 ubox
2 69 0.013947761 ubox
2 95 0.038427237 ubox
2 98 0.039003806 ubox
2 101 0.039698789 ubox
2 104 0.039687594 ubox
2 107 0.012993465 ubox
9 15 0.275074107 ubox
9 62 0.336573000 ubox
9 65 0.107567887 ubox
9 69 0.265879649 ubox
9 95 0.032199830 ubox
9 98 0.037563908 ubox
9 101 0.038331466 ubox
9 104 0.039195557 ubox
9 107 0.013720085 ubox
10 14 0.273379442 ubox
10 17 0.048263065 ubox
10 18 0.027037666 ubox
10 23 0.007221587 ubox
10 24 0.014621228 ubox
10 25 0.008188114 ubox
10 59 0.017085452 ubox
10 60 0.039068883 ubox
10 61 0.335825258 ubox
10 68 0.277257987 ubox
10 86 0.011428899 ubox
10 91 0.038665270 ubox
12 22 0.030764605 ubox
12 57 0.005936590 ubox
12 58 0.313942868 ubox
12 62 0.062353951 ubox
12 65 0.257635099 ubox
12 69 0.029151281 ubox
12 95 0.049577123 ubox
12 98 0.050181580 ubox
12 101 0.053032737 ubox
12 104 0.050109682 ubox
12 107 0.017367345 ubox
13 21 0.030849644 ubox
13 56 0.005969341 ubox
13 57 0.314107895 ubox
13 58 0.007995789 ubox
13 62 0.384142958 ubox
13 65 0.209185619 ubox
13 69 0.027284767 ubox
13 95 0.038604696 ubox
13 98 0.039451137 ubox
13 101 0.040717935 ubox
13 104 0.040031534 ubox
13 107 0.013045295 ubox
14 20 0.030871260 ubox
14 56 0.314112141 ubox
14 57 0.005737848 ubox
14 62 0.632650472 ubox
14 65 0.056832132 ubox
14 69 0.172520477 ubox
14 95 0.016915523 ubox
14 98 0.019512655 ubox
14 101 0.019589515 ubox
14 104 0.017992641 ubox
14 107 0.005799909 ubox
15 19 0.030653648 ubox
15 54 0.023421320 ubox
15 55 0.312988615 ubox
15 59 0.043864535 ubox
15 60 0.386015590 ubox
15 61 0.631601022 ubox
15 68 0.177982398 ubox
15 86 0.004175296 ubox
15 91 0.020924065 ubox
17 50 0.008449550 ubox
17 52 0.296624894 ubox
17 58 0.770541540 ubox
17 62 0.003860398 ubox
17 65 0.205400432 ubox
17 95 0.027718861 ubox
17 98 0.027808484 ubox
17 101 0.027691057 ubox
17 104 0.025737700 ubox
17 107 0.008903299 ubox
18 50 0.027545233 ubox
18 52 0.080774071 ubox
18 57 0.771578047 ubox
18 58 0.007002539 ubox
18 62 0.025224149 ubox
18 65 0.110304675 ubox
18 95 0.028784466 ubox
18 98 0.028197562 ubox
18 101 0.025270425 ubox
18 104 0.023513435 ubox
18 107 0.007619996 ubox
19 50 0.311603596 ubox
19 52 0.005813153 ubox
19 56 0.771615821 ubox
19 57 0.004955436 ubox
19 62 0.550887510 ubox
20 47 0.056159400 ubox
20 49 0.308916551 ubox
20 51 0.005219991 ubox
20 55 0.771633858 ubox
20 61 0.552168486 ubox
21 46 0.071700746 ubox
21 47 0.305780967 ubox
21 54 0.771634244 ubox
21 60 0.552182465 ubox
22 45 0.073029422 ubox
22 46 0.305396929 ubox
22 47 0.003549100 ubox
22 53 0.771615821 ubox
22 59 0.552175259 ubox
23 29 0.004071469 ubox
23 44 0.073751144 ubox
23 52 0.771187332 ubox
23 58 0.552176204 ubox
24 29 0.007021537 ubox
24 43 0.072966416 ubox
24 44 0.305329112 ubox
24 50 0.096232812 ubox
24 52 0.012890873 ubox
24 57 0.552160929 ubox
25 43 0.304839573 ubox
25 44 0.005783345 ubox
25 50 0.747760290 ubox
25 56 0.551185595 ubox
25 57 0.003533136 ubox
29 38 0.040244870 ubox
29 41 0.294440704 ubox
29 42 0.017134162 ubox
29 45 0.172901917 ubox
29 46 0.421493146 ubox
29 47 0.548763068 ubox
29 49 0.009207866 ubox
29 51 0.031374595 ubox
29 53 0.547284273 ubox
29 54 0.012207084 ubox
29 55 0.005104548 ubox
30 37 0.039839415 ubox
30 40 0.297230006 ubox
30 43 0.142987291 ubox
30 44 0.133363185 ubox
30 50 0.031520060 ubox
30 52 0.549916068 ubox
31 38 0.322880326 ubox
31 41 0.072669979 ubox
31 42 0.177660696 ubox
31 45 0.741497321 ubox
31 46 0.012168744 ubox
31 49 0.031440262 ubox
31 51 0.549921325 ubox
31 53 0.005128287 ubox
32 37 0.322319731 ubox
32 40 0.080592559 ubox
32 43 0.032647269 ubox
32 44 0.742681921 ubox
32 50 0.548816124 ubox
32 52 0.005111751 ubox
33 37 0.013127218 ubox
33 40 0.163856479 ubox
33 43 0.741027850 ubox
33 44 0.008645274 ubox
33 50 0.018200744 ubox
37 41 0.084680943 ubox
37 42 0.242921616 ubox
37 45 0.527608480 ubox
37 46 0.133533045 ubox
37 47 0.020491847 ubox
37 49 0.043316859 ubox
38 43 0.027463468 ubox
38 44 0.524927552 ubox
40 45 0.018149278 ubox
40 46 0.046749521 ubox
40 47 0.009116761 ubox
40 49 0.005661898 ubox
41 50 0.003252371 ubox
41 56 0.003500272 ubox
41 57 0.003785809 ubox
41 62 0.005104618 ubox
42 50 0.015657922 ubox
42 52 0.008638426 ubox
42 56 0.014114237 ubox
42 62 0.029905623 ubox
43 49 0.015920307 ubox
43 51 0.008216900 ubox
43 54 0.040890780 ubox
43 55 0.018107105 ubox
43 60 0.006865187 ubox
43 61 0.029878805 ubox
44 49 0.011641885 ubox
44 51 0.010643489 ubox
44 53 0.041083141 ubox
44 54 0.017987208 ubox
44 59 0.007166589 ubox
44 60 0.029797450 ubox
45 50 0.012904222 ubox
45 52 0.041026545 ubox
45 58 0.007430394 ubox
46 50 0.004823235 ubox
46 52 0.017508087 ubox
46 57 0.007412402 ubox
46 58 0.029731318 ubox
47 56 0.007197689 ubox
47 57 0.029745822 ubox
49 56 0.029800602 ubox
50 55 0.029848454 ubox
59 65 0.030518748 ubox
59 95 0.027102877 ubox
59 98 0.016605407 ubox
59 101 0.004785224 ubox
59 104 0.004134371 ubox
60 65 0.031778464 ubox
60 69 0.005589147 ubox
60 95 0.045538838 ubox
60 98 0.009586993 ubox
60 101 0.003631563 ubox
60 104 0.003402610 ubox
61 65 0.005616868 ubox
61 69 0.045799273 ubox
61 95 0.017362658 ubox
61 98 0.003388247 ubox
62 68 0.047362099 ubox
62 91 0.013245005 ubox
65 86 0.005615835 ubox
65 91 0.153270264 ubox
68 84 0.006203348 ubox
68 95 0.023418322 ubox
68 98 0.018285474 ubox
68 101 0.014720229 ubox
68 104 0.012698542 ubox
68 107 0.003862270 ubox
69 83 0.006242770 ubox
69 86 0.933329876 ubox
69 91 0.005093678 ubox
70 85 0.999810499 ubox
71 81 0.006470424 ubox
71 84 0.999969929 ubox
72 80 0.006481719 ubox
72 83 0.999972343 ubox
73 79 0.006481714 ubox
73 82 0.999955236 ubox
74 78 0.006066039 ubox
74 81 0.999933092 ubox
75 79 0.011567028 ubox
75 80 0.999119759 ubox
76 80 0.003705320 ubox
85 91 0.003981641 ubox
86 95 0.035098242 ubox
86 98 0.014134136 ubox
86 101 0.011228570 ubox
86 104 0.009606861 ubox
86 107 0.003199603 ubox
91 95 0.043817593 ubox
91 98 0.104027302 ubox
91 101 0.044890802 ubox
91 104 0.034171214 ubox
91 107 0.010091110 ubox
19 62 0.9500000 lbox
20 61 0.9500000 lbox
21 60 0.9500000 lbox
22 59 0.9500000 lbox
23 58 0.9500000 lbox
24 57 0.9500000 lbox
25 56 0.9500000 lbox
29 53 0.9500000 lbox
30 52 0.9500000 lbox
31 51 0.9500000 lbox
32 50 0.9500000 lbox
37 45 0.9500000 lbox
38 44 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
