%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (141)
} def

/sequence { (\
GGAAAAAAGCAGUAUAGCGGAGCGAAAAGACUACAAAGAUCAUCACUACCACAAAUACAAGCAAAAAAAGACUGAUUCGUCAGUCUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.104455759 ubox
1 18 0.005210105 ubox
1 50 0.012997363 ubox
1 52 0.008771086 ubox
1 58 0.009050651 ubox
1 62 0.011970671 ubox
1 86 0.004004306 ubox
1 95 0.068851278 ubox
1 98 0.069412129 ubox
1 101 0.071097924 ubox
1 104 0.071292110 ubox
1 107 0.018005221 ubox
2 10 0.027431549 ubox
2 41 0.003494832 ubox
2 49 0.012931926 ubox
2 52 0.004611001 ubox
2 58 0.004889210 ubox
2 62 0.008748645 ubox
2 85 0.003529699 ubox
2 95 0.036292546 ubox
2 98 0.036508388 ubox
2 101 0.037246904 ubox
2 104 0.037099542 ubox
2 107 0.012106839 ubox
3 40 0.003410638 ubox
8 13 0.004572660 ubox
8 15 0.005518512 ubox
9 18 0.134853480 ubox
9 23 0.006599144 ubox
9 34 0.005275575 ubox
9 58 0.006937555 ubox
9 62 0.903614817 ubox
9 95 0.015252510 ubox
9 98 0.016519919 ubox
9 101 0.016655928 ubox
9 104 0.016736197 ubox
9 107 0.005846075 ubox
10 17 0.134905480 ubox
10 22 0.006598105 ubox
10 61 0.903454943 ubox
10 91 0.018769011 ubox
11 15 0.006876404 ubox
11 32 0.007648831 ubox
11 56 0.006188836 ubox
12 18 0.018469599 ubox
12 23 0.003258888 ubox
12 31 0.007927048 ubox
12 49 0.004304864 ubox
12 52 0.011100906 ubox
12 56 0.017082047 ubox
12 58 0.978599499 ubox
12 62 0.009372708 ubox
12 95 0.018196661 ubox
12 98 0.017871082 ubox
12 101 0.018161800 ubox
12 104 0.017122639 ubox
12 107 0.005924249 ubox
13 17 0.017296672 ubox
13 22 0.003245643 ubox
13 30 0.007832994 ubox
13 48 0.004257841 ubox
13 51 0.011023129 ubox
13 54 0.004992723 ubox
13 55 0.017247155 ubox
13 57 0.980601176 ubox
13 59 0.005684066 ubox
13 61 0.008980710 ubox
13 94 0.017561796 ubox
13 97 0.017236349 ubox
13 100 0.017516452 ubox
13 103 0.016514745 ubox
13 106 0.005773576 ubox
14 47 0.003964051 ubox
14 56 0.975839607 ubox
15 48 0.008078707 ubox
15 51 0.003895822 ubox
15 53 0.049748705 ubox
15 54 0.166784386 ubox
15 55 0.915407512 ubox
15 57 0.018213538 ubox
15 92 0.004099257 ubox
16 32 0.003426163 ubox
16 47 0.009554644 ubox
16 56 0.019059220 ubox
17 23 0.009836193 ubox
17 31 0.003490019 ubox
17 46 0.009614729 ubox
17 50 0.015107747 ubox
17 52 0.877920115 ubox
17 62 0.020739140 ubox
17 98 0.003222484 ubox
18 22 0.009774800 ubox
18 24 0.006622102 ubox
18 29 0.003400875 ubox
18 61 0.020748306 ubox
18 91 0.003943586 ubox
19 23 0.006278842 ubox
19 34 0.006989677 ubox
19 44 0.007030796 ubox
19 49 0.032908983 ubox
19 50 0.997079220 ubox
19 52 0.009172800 ubox
20 34 0.004386389 ubox
20 41 0.006400194 ubox
20 43 0.005897429 ubox
20 44 0.007215028 ubox
20 49 0.996545218 ubox
20 50 0.021388052 ubox
20 52 0.004934082 ubox
21 32 0.013764077 ubox
21 40 0.006111167 ubox
21 43 0.007263079 ubox
21 47 0.993058881 ubox
22 31 0.014672132 ubox
22 41 0.003686829 ubox
22 46 0.996880643 ubox
22 47 0.015320098 ubox
22 49 0.005003167 ubox
22 62 0.007353623 ubox
23 29 0.014756989 ubox
23 38 0.006666222 ubox
23 61 0.007359253 ubox
24 41 0.012093534 ubox
24 43 0.003233292 ubox
24 44 0.994893986 ubox
24 46 0.016541215 ubox
24 47 0.003458700 ubox
25 40 0.011643238 ubox
25 43 0.982487064 ubox
26 32 0.006920505 ubox
26 40 0.015086276 ubox
26 43 0.048592282 ubox
27 32 0.003285966 ubox
27 40 0.027797147 ubox
27 43 0.043890317 ubox
28 40 0.202486428 ubox
28 43 0.020740003 ubox
28 86 0.003778873 ubox
29 34 0.011649345 ubox
29 40 0.045617711 ubox
29 41 0.908854622 ubox
29 44 0.005934773 ubox
29 85 0.003922314 ubox
30 40 0.903281282 ubox
30 43 0.005862626 ubox
30 84 0.003922640 ubox
31 38 0.926577873 ubox
31 83 0.003922823 ubox
32 36 0.032469335 ubox
32 37 0.882780733 ubox
32 38 0.110501289 ubox
32 39 0.075722263 ubox
32 42 0.005267526 ubox
32 82 0.003872360 ubox
33 40 0.005377452 ubox
33 80 0.003486420 ubox
34 38 0.041906488 ubox
34 79 0.003505222 ubox
35 40 0.003317088 ubox
37 47 0.006832863 ubox
38 44 0.009277232 ubox
38 46 0.007084704 ubox
38 77 0.003701173 ubox
39 43 0.008115949 ubox
39 76 0.003819219 ubox
40 75 0.003878279 ubox
41 74 0.003881503 ubox
42 73 0.003791423 ubox
43 71 0.003438595 ubox
44 70 0.003454935 ubox
52 61 0.016688230 ubox
56 61 0.003594878 ubox
56 63 0.004197537 ubox
56 65 0.004551692 ubox
61 95 0.031134843 ubox
61 98 0.006189501 ubox
61 101 0.003708472 ubox
61 104 0.003368847 ubox
62 91 0.022902374 ubox
64 86 0.004555737 ubox
65 86 0.006308909 ubox
66 86 0.008729870 ubox
67 86 0.012142861 ubox
68 86 0.044173167 ubox
69 86 0.963201260 ubox
70 81 0.006794015 ubox
70 85 0.999706851 ubox
70 86 0.003313646 ubox
71 80 0.006801740 ubox
71 84 0.999803494 ubox
72 79 0.006792309 ubox
72 83 0.999942301 ubox
73 82 0.999711263 ubox
74 81 0.999508588 ubox
75 80 0.885864788 ubox
84 92 0.004345119 ubox
85 91 0.005833783 ubox
86 90 0.006288500 ubox
86 91 0.006544688 ubox
86 92 0.006046065 ubox
86 93 0.007699940 ubox
86 94 0.003706999 ubox
91 95 0.043156719 ubox
91 98 0.103885821 ubox
91 101 0.045499660 ubox
91 104 0.035151586 ubox
91 107 0.010398035 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
