%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (922)
} def

/sequence { (\
GGAAACCAAGGCCGGUCCCAAGGUAAUCCAGCUAAUGCAAAGGUGACAAAGGCCAAGCAAAAGCAAGGGCGUCGUUUCGACGACGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.086377993 ubox
1 7 0.405475906 ubox
1 13 0.011521890 ubox
1 17 0.003411200 ubox
1 18 0.084392035 ubox
1 19 0.143312587 ubox
1 27 0.004352316 ubox
1 28 0.012086799 ubox
1 29 0.517534852 ubox
1 47 0.004313160 ubox
1 58 0.008958420 ubox
1 64 0.037944367 ubox
1 86 0.003928729 ubox
1 95 0.081355966 ubox
1 98 0.081567033 ubox
1 101 0.082588432 ubox
1 104 0.082983429 ubox
1 107 0.020953445 ubox
2 6 0.399322630 ubox
2 7 0.070397981 ubox
2 12 0.011506983 ubox
2 17 0.085046366 ubox
2 18 0.143007650 ubox
2 19 0.029493216 ubox
2 27 0.011851354 ubox
2 28 0.517942797 ubox
2 29 0.004112471 ubox
2 58 0.010194458 ubox
2 64 0.017028023 ubox
2 95 0.042148497 ubox
2 98 0.041444555 ubox
2 101 0.042261028 ubox
2 104 0.042108909 ubox
2 107 0.013741693 ubox
3 16 0.063365373 ubox
3 27 0.507436731 ubox
4 16 0.029372610 ubox
4 24 0.022138933 ubox
4 27 0.022658792 ubox
5 16 0.156001125 ubox
5 24 0.509725167 ubox
5 44 0.006686922 ubox
6 10 0.006356483 ubox
6 11 0.010253457 ubox
6 14 0.007149576 ubox
6 15 0.175095886 ubox
6 22 0.005488269 ubox
6 23 0.524135921 ubox
6 43 0.006847867 ubox
6 57 0.023864186 ubox
6 63 0.003595185 ubox
6 67 0.019115803 ubox
6 68 0.412599787 ubox
6 69 0.013606190 ubox
6 91 0.030177094 ubox
7 14 0.175047588 ubox
7 22 0.523827052 ubox
7 23 0.007195193 ubox
7 42 0.006839934 ubox
7 57 0.057261749 ubox
7 67 0.413009330 ubox
7 68 0.028197598 ubox
7 91 0.058249008 ubox
8 27 0.006025864 ubox
9 27 0.009403510 ubox
10 17 0.017998739 ubox
10 18 0.109510189 ubox
10 19 0.509609681 ubox
10 24 0.005099546 ubox
10 27 0.003572599 ubox
10 28 0.003720411 ubox
10 29 0.012308474 ubox
10 33 0.005773798 ubox
10 54 0.822089206 ubox
10 95 0.012811524 ubox
10 98 0.012730618 ubox
10 101 0.012946420 ubox
10 104 0.012984781 ubox
10 107 0.004536330 ubox
11 16 0.012403438 ubox
11 17 0.110017431 ubox
11 18 0.505991443 ubox
11 19 0.010513076 ubox
11 24 0.122328497 ubox
11 28 0.011778657 ubox
11 32 0.006012150 ubox
11 53 0.823081728 ubox
11 58 0.005696577 ubox
12 23 0.124946042 ubox
12 31 0.006016152 ubox
12 51 0.003491898 ubox
12 52 0.823149109 ubox
12 57 0.005699375 ubox
12 68 0.005621295 ubox
13 22 0.124959406 ubox
13 51 0.821521522 ubox
13 67 0.005630243 ubox
14 19 0.008439363 ubox
14 28 0.004888256 ubox
14 29 0.010459651 ubox
14 47 0.020020238 ubox
14 54 0.009501895 ubox
15 19 0.008802505 ubox
15 24 0.003324840 ubox
15 27 0.004958602 ubox
15 28 0.010450982 ubox
15 47 0.817837679 ubox
15 53 0.009512687 ubox
16 26 0.005096051 ubox
16 45 0.008878198 ubox
16 46 0.822229960 ubox
16 48 0.010823072 ubox
16 52 0.007561209 ubox
17 22 0.004982283 ubox
17 23 0.016962247 ubox
17 43 0.013369978 ubox
17 45 0.822313466 ubox
17 51 0.007449640 ubox
17 52 0.006269448 ubox
17 68 0.012073517 ubox
17 69 0.006158073 ubox
17 91 0.003696798 ubox
18 22 0.017053539 ubox
18 23 0.010377909 ubox
18 42 0.014533981 ubox
18 43 0.819201089 ubox
18 45 0.004340342 ubox
18 51 0.006289251 ubox
18 52 0.005323368 ubox
18 67 0.012045903 ubox
18 68 0.019276661 ubox
19 37 0.006372557 ubox
19 42 0.818349688 ubox
19 43 0.050902545 ubox
19 45 0.012551796 ubox
19 51 0.005559066 ubox
19 67 0.019511565 ubox
19 91 0.007561095 ubox
20 24 0.004339404 ubox
20 27 0.007029298 ubox
20 33 0.005884637 ubox
20 36 0.010546564 ubox
20 44 0.012118053 ubox
21 27 0.012281953 ubox
21 33 0.016057456 ubox
21 36 0.005091796 ubox
22 27 0.011317296 ubox
22 28 0.037366117 ubox
22 29 0.728475125 ubox
22 32 0.016513211 ubox
22 33 0.041973026 ubox
22 36 0.005698449 ubox
22 38 0.022870642 ubox
22 47 0.004582259 ubox
22 54 0.006535398 ubox
22 95 0.008259239 ubox
22 98 0.008503452 ubox
22 101 0.008511482 ubox
22 104 0.008555835 ubox
23 27 0.024580877 ubox
23 28 0.727229110 ubox
23 29 0.026239702 ubox
23 32 0.044004311 ubox
23 36 0.016020911 ubox
23 38 0.376398479 ubox
23 47 0.018288010 ubox
23 53 0.006542971 ubox
23 95 0.018898257 ubox
23 98 0.018623129 ubox
23 101 0.018885184 ubox
23 104 0.018857699 ubox
23 107 0.006152070 ubox
24 30 0.013941091 ubox
24 31 0.043230986 ubox
24 34 0.010547616 ubox
24 35 0.015791532 ubox
24 37 0.374944683 ubox
24 39 0.011609194 ubox
24 41 0.004561208 ubox
24 46 0.017379714 ubox
24 52 0.006491634 ubox
24 94 0.018275420 ubox
24 97 0.018013673 ubox
24 100 0.018265571 ubox
24 103 0.018237174 ubox
24 106 0.006040424 ubox
25 33 0.013710864 ubox
25 36 0.349604271 ubox
25 44 0.003848872 ubox
26 33 0.040351962 ubox
26 36 0.055696662 ubox
26 44 0.021120095 ubox
27 31 0.007544982 ubox
27 34 0.133657913 ubox
27 35 0.073554989 ubox
27 39 0.004242290 ubox
27 40 0.004958294 ubox
27 41 0.007858193 ubox
27 43 0.019478140 ubox
27 68 0.035169190 ubox
27 69 0.010174143 ubox
27 92 0.009265490 ubox
28 37 0.004884410 ubox
28 42 0.019370595 ubox
28 43 0.026643299 ubox
28 67 0.047797871 ubox
28 68 0.179075931 ubox
28 69 0.004183823 ubox
28 91 0.009620333 ubox
29 37 0.020677267 ubox
29 42 0.026794966 ubox
29 45 0.008868921 ubox
29 67 0.179287621 ubox
29 68 0.013612464 ubox
29 91 0.004762914 ubox
30 36 0.023902483 ubox
30 44 0.010010921 ubox
31 36 0.004235716 ubox
31 38 0.726181628 ubox
31 44 0.014001516 ubox
31 53 0.018451549 ubox
31 58 0.007496246 ubox
31 64 0.563285253 ubox
32 37 0.726555281 ubox
32 42 0.011078925 ubox
32 43 0.014625065 ubox
32 51 0.003463345 ubox
32 52 0.019267327 ubox
32 57 0.007503289 ubox
32 63 0.563894847 ubox
32 67 0.003445863 ubox
32 91 0.004934056 ubox
33 37 0.003286525 ubox
33 39 0.004459752 ubox
33 40 0.006739016 ubox
33 41 0.011623138 ubox
33 42 0.014517814 ubox
33 50 0.003389269 ubox
33 51 0.019051933 ubox
33 56 0.007187419 ubox
33 60 0.003455087 ubox
33 61 0.012443097 ubox
33 62 0.552833009 ubox
33 66 0.003304682 ubox
33 90 0.004797825 ubox
35 44 0.003200445 ubox
36 41 0.013230128 ubox
36 43 0.003249848 ubox
36 48 0.019347971 ubox
36 59 0.553082037 ubox
36 60 0.013149667 ubox
36 61 0.003965734 ubox
36 65 0.004582294 ubox
36 87 0.003271544 ubox
37 44 0.006950170 ubox
37 47 0.019657926 ubox
37 53 0.006290016 ubox
37 58 0.564236134 ubox
37 64 0.004952250 ubox
37 86 0.003433305 ubox
38 43 0.007196866 ubox
38 45 0.019700148 ubox
38 52 0.006408326 ubox
38 57 0.563309987 ubox
38 63 0.004945368 ubox
38 85 0.003425073 ubox
39 44 0.017231053 ubox
42 47 0.012070424 ubox
42 53 0.038011014 ubox
42 54 0.562991034 ubox
43 53 0.564094350 ubox
43 54 0.008530624 ubox
43 58 0.003221372 ubox
43 95 0.004984307 ubox
43 98 0.004413986 ubox
43 101 0.004438822 ubox
43 104 0.004671600 ubox
44 49 0.008309641 ubox
44 50 0.011921336 ubox
44 51 0.051007975 ubox
44 52 0.560222598 ubox
44 55 0.009237570 ubox
44 94 0.004894586 ubox
44 96 0.003372778 ubox
44 97 0.004065256 ubox
44 99 0.003298320 ubox
44 100 0.004103780 ubox
44 102 0.003439504 ubox
44 103 0.004333211 ubox
45 53 0.007603950 ubox
45 54 0.009652515 ubox
45 95 0.004036064 ubox
45 98 0.003943616 ubox
45 101 0.004110660 ubox
47 51 0.026981047 ubox
47 52 0.012687719 ubox
47 91 0.003471853 ubox
51 70 0.003370348 ubox
52 70 0.004613706 ubox
53 68 0.035972564 ubox
53 69 0.004657648 ubox
54 67 0.038164989 ubox
54 68 0.007739863 ubox
57 64 0.749171912 ubox
57 86 0.004715808 ubox
57 95 0.013095308 ubox
57 98 0.046208247 ubox
57 101 0.010267529 ubox
57 104 0.004311850 ubox
58 63 0.748934068 ubox
58 67 0.040245776 ubox
58 68 0.017826379 ubox
58 85 0.004701907 ubox
58 91 0.004817021 ubox
63 70 0.007626684 ubox
63 86 0.006703137 ubox
63 95 0.017689150 ubox
63 98 0.006040710 ubox
63 101 0.005254257 ubox
63 104 0.004501338 ubox
64 68 0.013093060 ubox
64 69 0.007751841 ubox
64 85 0.006670935 ubox
64 91 0.090802678 ubox
67 84 0.004625474 ubox
67 86 0.043843082 ubox
67 95 0.011889225 ubox
67 98 0.009771627 ubox
67 101 0.009927646 ubox
67 104 0.009147866 ubox
68 84 0.009452528 ubox
68 86 0.040931132 ubox
68 95 0.019380002 ubox
68 98 0.015248354 ubox
68 101 0.013366274 ubox
68 104 0.011358633 ubox
68 107 0.003324425 ubox
69 84 0.044299111 ubox
69 86 0.996496471 ubox
70 82 0.046993149 ubox
70 85 0.998726093 ubox
71 81 0.047178113 ubox
71 84 0.998806241 ubox
71 98 0.007227653 ubox
72 80 0.047194354 ubox
72 83 0.998718872 ubox
72 97 0.007173612 ubox
73 79 0.047209742 ubox
73 82 0.998815371 ubox
74 78 0.044195815 ubox
74 81 0.996443294 ubox
74 95 0.008481864 ubox
75 79 0.035914961 ubox
75 80 0.921137952 ubox
75 94 0.008501740 ubox
76 80 0.028167793 ubox
76 93 0.008498367 ubox
77 92 0.008507706 ubox
78 91 0.008507126 ubox
86 91 0.006164262 ubox
91 95 0.043567244 ubox
91 98 0.104191843 ubox
91 101 0.045316777 ubox
91 104 0.034750978 ubox
91 107 0.010272804 ubox
1 29 0.9500000 lbox
2 28 0.9500000 lbox
3 27 0.9500000 lbox
5 24 0.9500000 lbox
6 23 0.9500000 lbox
7 22 0.9500000 lbox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
31 64 0.9500000 lbox
32 63 0.9500000 lbox
33 62 0.9500000 lbox
36 59 0.9500000 lbox
37 58 0.9500000 lbox
38 57 0.9500000 lbox
42 54 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
