%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (901)
} def

/sequence { (\
GGAAAAAGAACAAUAGACAAGCACAAAAUGAUCAUACAACAGUACGAUCAAGCCUAUCGUUCUAACAAUCGUACUUUCGAGUACGAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.008594978 ubox
1 18 0.004026878 ubox
1 54 0.006220268 ubox
1 63 0.007742371 ubox
1 66 0.139526280 ubox
1 69 0.015840284 ubox
1 70 0.014696471 ubox
1 95 0.066690810 ubox
1 98 0.067136383 ubox
1 101 0.068655659 ubox
1 104 0.068961381 ubox
1 107 0.017410558 ubox
2 11 0.004690706 ubox
2 53 0.006219808 ubox
2 62 0.007775629 ubox
2 63 0.004917896 ubox
2 66 0.085631862 ubox
2 69 0.015457191 ubox
2 70 0.017672649 ubox
2 95 0.035066060 ubox
2 98 0.035204626 ubox
2 101 0.035950700 ubox
2 104 0.035812994 ubox
2 107 0.011685712 ubox
3 61 0.007407450 ubox
3 63 0.007622015 ubox
3 69 0.018042823 ubox
4 60 0.005193633 ubox
4 63 0.022415157 ubox
4 69 0.003749739 ubox
5 63 0.013949066 ubox
6 63 0.045218015 ubox
6 69 0.004603379 ubox
7 63 0.961311206 ubox
8 58 0.004230844 ubox
8 62 0.998164788 ubox
8 63 0.003319837 ubox
9 57 0.003822637 ubox
9 61 0.998040903 ubox
10 60 0.997905206 ubox
11 16 0.004483218 ubox
11 59 0.995229638 ubox
12 57 0.030435926 ubox
13 57 0.976450952 ubox
14 21 0.003205683 ubox
14 56 0.995185887 ubox
14 64 0.027518660 ubox
15 55 0.995924453 ubox
15 57 0.007355646 ubox
15 63 0.029160687 ubox
16 22 0.023085324 ubox
16 24 0.015444749 ubox
16 53 0.047257268 ubox
16 54 0.992820748 ubox
16 55 0.003618235 ubox
16 58 0.053937165 ubox
16 61 0.004767797 ubox
16 62 0.029305949 ubox
17 29 0.008626204 ubox
17 55 0.007055706 ubox
17 57 0.053077050 ubox
17 60 0.010401251 ubox
17 61 0.027142958 ubox
18 30 0.005467672 ubox
18 52 0.406493023 ubox
18 59 0.013753559 ubox
19 29 0.011490829 ubox
19 55 0.032119588 ubox
19 60 0.007169372 ubox
20 29 0.056913379 ubox
20 55 0.015426232 ubox
20 57 0.006440010 ubox
20 60 0.003179380 ubox
20 61 0.004201434 ubox
21 29 0.009550718 ubox
21 49 0.010750630 ubox
21 53 0.772371656 ubox
21 54 0.015525881 ubox
21 58 0.016314279 ubox
21 60 0.009193811 ubox
22 30 0.011556344 ubox
22 52 0.771744310 ubox
22 59 0.009288347 ubox
23 29 0.021769555 ubox
23 55 0.003415691 ubox
23 57 0.004017983 ubox
24 30 0.010612079 ubox
24 52 0.039117252 ubox
25 29 0.017226402 ubox
25 55 0.003369805 ubox
29 41 0.005561566 ubox
29 50 0.960873609 ubox
29 51 0.093221906 ubox
29 52 0.006406300 ubox
30 40 0.005603226 ubox
30 49 0.999528684 ubox
31 48 0.999640579 ubox
32 47 0.999637687 ubox
33 46 0.997549512 ubox
34 43 0.017553248 ubox
35 42 0.018513779 ubox
35 44 0.988854103 ubox
36 43 0.996847698 ubox
37 42 0.995545060 ubox
51 57 0.004836531 ubox
51 61 0.005404224 ubox
52 58 0.007249904 ubox
52 60 0.007329302 ubox
52 101 0.005691879 ubox
53 59 0.007569677 ubox
57 96 0.003472071 ubox
57 97 0.003619941 ubox
59 66 0.004524104 ubox
59 95 0.030353396 ubox
59 98 0.008074635 ubox
60 65 0.004189732 ubox
60 93 0.028604266 ubox
60 94 0.025620436 ubox
60 97 0.007757984 ubox
61 92 0.036673312 ubox
61 93 0.019338917 ubox
61 96 0.006132096 ubox
62 91 0.040872722 ubox
63 67 0.003381315 ubox
63 68 0.005501380 ubox
63 87 0.004975629 ubox
63 89 0.004170647 ubox
63 90 0.039789425 ubox
63 91 0.008665874 ubox
63 92 0.023785533 ubox
63 93 0.007061946 ubox
63 94 0.003931283 ubox
64 69 0.004941412 ubox
65 69 0.003573511 ubox
65 72 0.006667775 ubox
66 71 0.006915594 ubox
66 91 0.075274726 ubox
69 80 0.006972774 ubox
69 86 0.932936465 ubox
69 87 0.042981816 ubox
69 88 0.009880299 ubox
69 89 0.006704521 ubox
69 90 0.004817853 ubox
69 92 0.011282767 ubox
70 79 0.007421965 ubox
70 85 0.998073899 ubox
70 91 0.011774484 ubox
71 78 0.007376879 ubox
71 84 0.999563569 ubox
71 95 0.006094082 ubox
71 98 0.005030821 ubox
72 83 0.999355019 ubox
72 94 0.005849100 ubox
72 97 0.004961580 ubox
73 82 0.999339869 ubox
74 79 0.005633496 ubox
74 81 0.999144725 ubox
74 91 0.008290183 ubox
75 79 0.028238201 ubox
75 80 0.923848771 ubox
75 81 0.005775705 ubox
75 88 0.022148717 ubox
75 90 0.007664224 ubox
75 94 0.005258520 ubox
76 80 0.028578982 ubox
76 87 0.024837906 ubox
76 89 0.005469246 ubox
76 93 0.005606021 ubox
77 86 0.025900643 ubox
77 92 0.005670071 ubox
78 85 0.026110835 ubox
78 91 0.005676246 ubox
79 84 0.025439711 ubox
91 95 0.042832970 ubox
91 98 0.103308461 ubox
91 101 0.045338862 ubox
91 104 0.035101646 ubox
91 107 0.010385572 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
