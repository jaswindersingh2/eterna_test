%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAGGUAAGGCGCAUCCUACGGGACCGGAAACGGGCGGAACGAUUGGCCAGCCAAUCCCUUACAAUCGGUGUGUUCGCACACCGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

/coor [
[104.02867889 200.31278992]
[109.86117554 186.49317932]
[118.48278809 174.21849060]
[129.50396729 164.04333496]
[142.42674255 156.42745972]
[156.66725159 151.71493530]
[171.58357239 150.11869812]
[158.59318542 142.61869812]
[145.60279846 135.11869812]
[132.61242676 127.61869812]
[119.62203979 120.11869812]
[106.63166046 112.61869812]
[72.79082489 127.62516785]
[57.81620407 128.49734497]
[42.84158325 129.36950684]
[41.88653183 143.68743896]
[28.31923866 156.59155273]
[14.08059978 161.30972290]
[-0.15803970 166.02789307]
[-10.64998531 178.63150024]
[-26.76286697 175.58074951]
[-31.92113113 160.01397705]
[-20.81840134 147.94494629]
[-4.87621117 151.78924561]
[9.36242867 147.07107544]
[23.60106850 142.35290527]
[23.16479683 127.35925293]
[8.67591000 123.47696686]
[-5.81297731 119.59468079]
[-21.50466919 124.35942841]
[-33.29036713 112.95639038]
[-29.04595566 97.11602783]
[-13.13772106 93.13355255]
[-1.93069160 105.10579681]
[12.55819607 108.98808289]
[27.04708290 112.87036896]
[41.96940994 114.39488983]
[56.94403076 113.52272034]
[71.91865540 112.65054321]
[76.65549469 106.83570862]
[65.02597046 97.36183929]
[74.50003052 85.73246765]
[86.12916565 95.20602417]
[90.86600494 89.39118195]
[88.69202423 74.54956055]
[86.51805115 59.70793533]
[84.34407043 44.86631012]
[82.17008972 30.02468681]
[79.99611664 15.18306160]
[69.40588379 2.66191792]
[75.20826721 -12.67641449]
[91.43426514 -15.05317307]
[101.39196777 -2.02335310]
[94.83773804 13.00908375]
[97.01171875 27.85070801]
[99.18569183 42.69233322]
[101.35967255 57.53395844]
[103.53365326 72.37557983]
[105.70762634 87.21720886]
[114.13166046 99.62831879]
[127.12203979 107.12831879]
[140.11242676 114.62831879]
[153.10279846 122.12831879]
[166.09318542 129.62831116]
[179.08357239 137.12831116]
[183.37219238 136.49232483]
[187.39317322 137.19485474]
[190.76295471 139.01300049]
[205.45306396 135.97973633]
[220.14317322 132.94647217]
[234.83328247 129.91320801]
[249.52339172 126.87994385]
[264.21350098 123.84667969]
[278.90362549 120.81341553]
[293.59371948 117.78015137]
[305.47790527 106.47979736]
[321.12768555 111.38051605]
[324.44387817 127.44086456]
[312.01507568 138.13934326]
[296.62698364 132.47026062]
[281.93688965 135.50352478]
[267.24676514 138.53678894]
[252.55665588 141.57005310]
[237.86654663 144.60331726]
[223.17643738 147.63658142]
[208.48632812 150.66984558]
[193.79621887 153.70310974]
[207.45205688 159.90940857]
[219.48764038 168.86175537]
[229.35919189 180.15567017]
[236.62069702 193.28085327]
[240.94406128 207.64430237]
[242.13395691 222.59703064]
[240.13659668 237.46345520]
[235.04225159 251.57188416]
[227.08106995 264.28485107]
[216.61277771 275.02798462]
[204.11035156 283.31588745]
[190.13865662 288.77404785]
[175.32896423 291.15591431]
[160.35043335 290.35385132]
[145.87979126 286.40408325]
[132.57086182 279.48510742]
[121.02497864 269.90948486]
[111.76379395 258.10989380]
[105.20575714 244.61943054]
[101.64716339 230.04766846]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 65]
[8 64]
[9 63]
[10 62]
[11 61]
[12 60]
[13 39]
[14 38]
[15 37]
[17 26]
[18 25]
[19 24]
[27 36]
[28 35]
[29 34]
[44 59]
[45 58]
[46 57]
[47 56]
[48 55]
[49 54]
[68 87]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
