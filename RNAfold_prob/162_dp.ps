%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (162)
} def

/sequence { (\
GGAAAAAAGGACAUCACGGCGCGGGAAAGCCCAAAAGGAGCACCGGCAGCGGAAGAUGAACCAAAAAACAUAGUGUUCGCACUAUGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.007760644 ubox
1 61 0.004839443 ubox
1 62 0.072865672 ubox
1 69 0.022082472 ubox
1 95 0.067151433 ubox
1 98 0.067594307 ubox
1 101 0.069173004 ubox
1 104 0.069707045 ubox
1 107 0.017601040 ubox
2 15 0.004776997 ubox
2 61 0.070992949 ubox
2 62 0.015440186 ubox
2 69 0.009988800 ubox
2 95 0.035441493 ubox
2 98 0.035578104 ubox
2 101 0.036366352 ubox
2 104 0.036252450 ubox
2 107 0.011829195 ubox
3 14 0.004556035 ubox
8 57 0.005251671 ubox
9 15 0.004941751 ubox
9 17 0.003568160 ubox
9 57 0.006198440 ubox
9 61 0.386241464 ubox
9 62 0.871015879 ubox
9 95 0.017227426 ubox
9 98 0.017133377 ubox
9 101 0.017305375 ubox
9 104 0.017362061 ubox
9 107 0.006063536 ubox
10 14 0.003222655 ubox
10 15 0.004126078 ubox
10 57 0.003982633 ubox
10 61 0.870684917 ubox
10 62 0.055361088 ubox
10 95 0.011436045 ubox
10 98 0.010371181 ubox
10 101 0.010395954 ubox
10 104 0.010353258 ubox
10 107 0.003377111 ubox
11 57 0.009148341 ubox
12 55 0.023731511 ubox
12 58 0.993936664 ubox
13 57 0.996431122 ubox
14 53 0.047542628 ubox
14 54 0.019298677 ubox
14 55 0.010701306 ubox
14 56 0.996067540 ubox
14 59 0.047934674 ubox
14 92 0.005609298 ubox
15 52 0.051329684 ubox
15 55 0.993348621 ubox
15 58 0.048563018 ubox
15 91 0.005947291 ubox
16 57 0.048041422 ubox
17 45 0.003886298 ubox
17 49 0.004592082 ubox
17 51 0.506380733 ubox
17 52 0.733952096 ubox
17 55 0.006491131 ubox
18 31 0.006984337 ubox
18 32 0.006683084 ubox
18 44 0.003939596 ubox
18 50 0.499827847 ubox
19 30 0.007158982 ubox
19 31 0.006676750 ubox
19 43 0.003941044 ubox
19 47 0.023199077 ubox
19 50 0.864955332 ubox
20 29 0.007172332 ubox
20 46 0.023275935 ubox
20 49 0.869504977 ubox
20 51 0.027151287 ubox
20 52 0.003358708 ubox
21 30 0.007087670 ubox
21 41 0.004138901 ubox
21 47 0.995984629 ubox
21 50 0.026365560 ubox
22 29 0.007089188 ubox
22 40 0.004137312 ubox
22 45 0.049030386 ubox
22 46 0.997454951 ubox
22 49 0.026084840 ubox
23 32 0.017774609 ubox
23 44 0.060684743 ubox
23 47 0.011520035 ubox
24 31 0.017794101 ubox
24 43 0.060149101 ubox
24 44 0.997090070 ubox
24 47 0.011800489 ubox
25 30 0.017721268 ubox
25 41 0.013657520 ubox
25 43 0.997021710 ubox
25 44 0.008672666 ubox
25 47 0.004081802 ubox
29 41 0.991147826 ubox
30 37 0.007713131 ubox
30 38 0.114291590 ubox
30 40 0.991496168 ubox
31 37 0.114048228 ubox
31 38 0.990021090 ubox
31 40 0.004626245 ubox
32 37 0.988754792 ubox
32 38 0.068008562 ubox
37 44 0.013319061 ubox
37 62 0.003294747 ubox
38 43 0.013253380 ubox
38 61 0.003297078 ubox
40 47 0.009883323 ubox
41 46 0.009875664 ubox
41 58 0.003289563 ubox
42 57 0.003257232 ubox
43 52 0.011592736 ubox
44 51 0.011649407 ubox
45 50 0.011608772 ubox
51 62 0.014788330 ubox
52 61 0.014831541 ubox
55 62 0.005750418 ubox
55 98 0.003688651 ubox
55 101 0.004789534 ubox
57 63 0.004114264 ubox
57 96 0.005162649 ubox
57 99 0.006735570 ubox
58 62 0.004670866 ubox
58 95 0.005622062 ubox
58 98 0.007330513 ubox
61 91 0.007993834 ubox
62 86 0.003512938 ubox
62 91 0.032788921 ubox
69 86 0.994411139 ubox
69 91 0.004716425 ubox
70 85 0.998819578 ubox
71 84 0.999351977 ubox
72 83 0.999640519 ubox
73 82 0.999934433 ubox
73 98 0.003774123 ubox
74 81 0.999209867 ubox
74 96 0.004303369 ubox
75 80 0.993221765 ubox
75 95 0.005272177 ubox
75 98 0.003756559 ubox
76 93 0.003746412 ubox
76 94 0.004433272 ubox
76 97 0.003716237 ubox
77 92 0.004980442 ubox
77 93 0.003296935 ubox
77 96 0.003374389 ubox
78 91 0.005749481 ubox
82 91 0.003610640 ubox
83 90 0.003518152 ubox
85 96 0.007490641 ubox
86 95 0.012555609 ubox
86 98 0.005087463 ubox
86 101 0.004074641 ubox
86 104 0.003514928 ubox
91 95 0.043073340 ubox
91 98 0.103789045 ubox
91 101 0.045503303 ubox
91 104 0.035191353 ubox
91 107 0.010410995 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
