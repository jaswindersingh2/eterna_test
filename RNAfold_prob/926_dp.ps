%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (926)
} def

/sequence { (\
GGAAAGCAAGUACGGUCCCAAGCGAAAGCAGCGAAAGCAAAGGAGACAAAGUACAACGGAAACGAAGCGGACGUCUUCGGAUGUUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.183540509 ubox
1 13 0.008110638 ubox
1 18 0.021250283 ubox
1 19 0.008291459 ubox
1 57 0.015506642 ubox
1 63 0.109468046 ubox
1 68 0.038961556 ubox
1 72 0.003691602 ubox
1 86 0.027404600 ubox
1 95 0.103477665 ubox
1 98 0.107099739 ubox
1 101 0.107571013 ubox
1 104 0.108226347 ubox
1 107 0.027358423 ubox
2 7 0.084885761 ubox
2 13 0.003316426 ubox
2 17 0.021527446 ubox
2 18 0.008052023 ubox
2 57 0.006875452 ubox
2 63 0.038005147 ubox
2 68 0.032068452 ubox
2 75 0.003267123 ubox
2 78 0.007490365 ubox
2 85 0.022758751 ubox
2 86 0.031525266 ubox
2 95 0.054411834 ubox
2 98 0.053980636 ubox
2 101 0.055287750 ubox
2 104 0.055171557 ubox
2 107 0.018019274 ubox
3 16 0.021351437 ubox
3 74 0.003198014 ubox
3 77 0.007387530 ubox
3 84 0.019352421 ubox
3 85 0.028828360 ubox
4 76 0.006891389 ubox
4 84 0.018449282 ubox
5 16 0.003958819 ubox
5 82 0.004372468 ubox
5 85 0.028121289 ubox
6 13 0.021378054 ubox
6 16 0.005184171 ubox
6 29 0.003393868 ubox
6 52 0.007464222 ubox
6 54 0.006916151 ubox
6 57 0.062669052 ubox
6 63 0.010134201 ubox
6 68 0.487348688 ubox
6 74 0.006261584 ubox
6 78 0.003312075 ubox
6 82 0.004866348 ubox
6 84 0.037024096 ubox
6 86 0.005458787 ubox
6 95 0.056167435 ubox
6 98 0.056910419 ubox
6 101 0.057298456 ubox
6 104 0.056202694 ubox
6 107 0.019606420 ubox
7 14 0.010744813 ubox
7 15 0.005417652 ubox
7 28 0.003391582 ubox
7 51 0.007624810 ubox
7 58 0.063083488 ubox
7 59 0.062099923 ubox
7 64 0.008187886 ubox
7 67 0.487440392 ubox
7 69 0.003813295 ubox
7 73 0.006489649 ubox
7 79 0.004481890 ubox
7 80 0.014057231 ubox
7 83 0.038337588 ubox
7 91 0.073317534 ubox
8 52 0.003444993 ubox
8 77 0.006290182 ubox
8 82 0.034035448 ubox
9 52 0.008186290 ubox
9 76 0.006725602 ubox
10 52 0.005304954 ubox
10 54 0.994233103 ubox
10 57 0.008442582 ubox
10 63 0.014506973 ubox
10 68 0.010944585 ubox
10 75 0.006775982 ubox
10 86 0.012967348 ubox
10 95 0.016138450 ubox
10 98 0.016337329 ubox
10 101 0.016808016 ubox
10 104 0.016836701 ubox
10 107 0.005898127 ubox
11 50 0.006138513 ubox
11 51 0.005138516 ubox
11 53 0.995605798 ubox
11 56 0.006981643 ubox
11 62 0.013236166 ubox
11 65 0.005513679 ubox
11 66 0.003923967 ubox
11 67 0.010574061 ubox
11 94 0.015265594 ubox
11 97 0.015478437 ubox
11 100 0.015925380 ubox
11 103 0.015953398 ubox
11 106 0.005647641 ubox
12 52 0.995685000 ubox
12 74 0.006632298 ubox
12 84 0.015212725 ubox
12 85 0.003716721 ubox
13 24 0.005666176 ubox
13 51 0.992219909 ubox
13 58 0.011649111 ubox
13 64 0.015250344 ubox
13 73 0.006717818 ubox
13 83 0.016340755 ubox
13 91 0.004494945 ubox
14 19 0.004652230 ubox
14 23 0.005858738 ubox
14 47 0.031315333 ubox
14 57 0.011643048 ubox
14 63 0.015375150 ubox
14 72 0.004956177 ubox
14 82 0.011634401 ubox
14 95 0.006566617 ubox
14 98 0.006657356 ubox
14 101 0.006733453 ubox
14 104 0.006082031 ubox
15 47 0.989858552 ubox
15 72 0.005588148 ubox
15 82 0.020174937 ubox
16 44 0.080979016 ubox
16 45 0.010823144 ubox
16 46 0.995052796 ubox
16 48 0.010136442 ubox
16 60 0.014739610 ubox
16 71 0.007198118 ubox
16 81 0.024295481 ubox
17 43 0.082352715 ubox
17 45 0.995149771 ubox
17 59 0.015133385 ubox
17 70 0.007258271 ubox
17 80 0.024566088 ubox
18 42 0.082428978 ubox
18 43 0.990163044 ubox
18 45 0.005264724 ubox
18 58 0.015072252 ubox
18 59 0.006345923 ubox
18 69 0.007236838 ubox
18 79 0.024468373 ubox
18 80 0.004893500 ubox
19 24 0.004093365 ubox
19 37 0.004376545 ubox
19 42 0.989194245 ubox
19 43 0.076643711 ubox
19 45 0.005292012 ubox
19 58 0.006432787 ubox
19 67 0.004565354 ubox
19 79 0.005301373 ubox
19 91 0.003254327 ubox
21 76 0.003275638 ubox
22 29 0.962177500 ubox
22 32 0.088950762 ubox
22 38 0.243141924 ubox
22 75 0.003240121 ubox
23 28 0.962807952 ubox
23 31 0.088980351 ubox
23 33 0.015349345 ubox
23 37 0.243442705 ubox
23 42 0.006592747 ubox
23 73 0.003306507 ubox
24 29 0.032745841 ubox
24 32 0.018458817 ubox
24 38 0.007202691 ubox
24 72 0.003286433 ubox
28 32 0.085648587 ubox
28 38 0.021469570 ubox
28 68 0.004315226 ubox
29 33 0.028213908 ubox
29 37 0.021516172 ubox
29 67 0.004313645 ubox
31 38 0.962167929 ubox
32 37 0.962799532 ubox
32 42 0.003478590 ubox
33 38 0.032744853 ubox
33 86 0.005793608 ubox
34 85 0.005572063 ubox
35 84 0.004186599 ubox
36 85 0.006357433 ubox
37 84 0.008348844 ubox
38 83 0.008633313 ubox
39 82 0.008345030 ubox
42 47 0.013437256 ubox
42 54 0.004405596 ubox
42 57 0.005454025 ubox
42 78 0.031315948 ubox
43 77 0.031478849 ubox
44 76 0.031544346 ubox
45 54 0.006340304 ubox
45 75 0.031583202 ubox
46 52 0.006797575 ubox
46 74 0.031572134 ubox
47 51 0.006854609 ubox
47 73 0.031483408 ubox
51 57 0.010604326 ubox
51 63 0.006699424 ubox
51 68 0.031549479 ubox
51 72 0.011081854 ubox
51 86 0.006099937 ubox
51 95 0.006711534 ubox
51 98 0.006506187 ubox
51 101 0.006747370 ubox
51 104 0.006653658 ubox
52 56 0.009614909 ubox
52 62 0.006508145 ubox
52 67 0.030866981 ubox
52 69 0.006290467 ubox
52 71 0.010519044 ubox
52 94 0.006477469 ubox
52 97 0.006282211 ubox
52 100 0.006521542 ubox
52 103 0.006423918 ubox
53 84 0.007911427 ubox
54 64 0.003522058 ubox
54 67 0.024974813 ubox
54 69 0.005173699 ubox
54 70 0.005922452 ubox
54 83 0.008890275 ubox
55 82 0.009703912 ubox
55 85 0.102554347 ubox
56 74 0.007600344 ubox
56 84 0.117892695 ubox
56 85 0.003453840 ubox
57 64 0.816831341 ubox
57 67 0.042793313 ubox
57 69 0.050056057 ubox
57 70 0.006164938 ubox
57 73 0.008483257 ubox
57 79 0.104523329 ubox
57 80 0.018306576 ubox
57 83 0.120543738 ubox
57 91 0.008970904 ubox
58 63 0.830526505 ubox
58 68 0.073225150 ubox
58 72 0.008542071 ubox
58 78 0.105588214 ubox
58 82 0.117769643 ubox
58 84 0.022472876 ubox
58 85 0.005912722 ubox
58 86 0.068421802 ubox
58 95 0.038672908 ubox
58 98 0.044998609 ubox
58 101 0.015460247 ubox
58 104 0.010738715 ubox
58 107 0.003952894 ubox
59 63 0.028145660 ubox
59 68 0.059175748 ubox
59 77 0.105327547 ubox
59 78 0.021428303 ubox
59 82 0.006536930 ubox
59 84 0.007298473 ubox
59 85 0.068461682 ubox
59 86 0.022227933 ubox
59 95 0.026747331 ubox
59 98 0.012105023 ubox
59 101 0.006086323 ubox
59 104 0.005679401 ubox
60 76 0.103420610 ubox
60 77 0.021634478 ubox
60 82 0.040796964 ubox
60 84 0.067579797 ubox
60 85 0.021407144 ubox
61 76 0.021018630 ubox
61 82 0.011303474 ubox
61 84 0.015528273 ubox
61 85 0.007076381 ubox
62 74 0.105587253 ubox
62 82 0.007536717 ubox
62 84 0.008924577 ubox
63 67 0.015191897 ubox
63 69 0.021951300 ubox
63 70 0.005546504 ubox
63 73 0.107600692 ubox
63 79 0.205139714 ubox
63 80 0.004758020 ubox
63 83 0.009923545 ubox
63 91 0.071903565 ubox
64 68 0.030314938 ubox
64 72 0.106523433 ubox
64 75 0.005149929 ubox
64 78 0.206580355 ubox
64 82 0.007564600 ubox
64 86 0.022677936 ubox
64 95 0.013214762 ubox
64 98 0.005248862 ubox
64 101 0.004581939 ubox
64 104 0.004164181 ubox
65 74 0.004959600 ubox
65 77 0.206504475 ubox
65 82 0.004484653 ubox
65 85 0.018821702 ubox
66 76 0.206180706 ubox
66 84 0.012917993 ubox
66 85 0.025173989 ubox
67 72 0.004153249 ubox
67 74 0.027960359 ubox
67 75 0.204212350 ubox
67 84 0.031883299 ubox
67 86 0.018596514 ubox
67 95 0.010998733 ubox
67 98 0.008841811 ubox
67 101 0.008315599 ubox
67 104 0.007009247 ubox
68 73 0.186900422 ubox
68 79 0.018349305 ubox
68 80 0.003740531 ubox
68 83 0.034583913 ubox
68 91 0.040026834 ubox
69 74 0.028650322 ubox
69 75 0.004748596 ubox
69 76 0.004727973 ubox
69 78 0.018578759 ubox
69 82 0.034449498 ubox
69 85 0.005664840 ubox
69 86 0.961933240 ubox
69 95 0.005164499 ubox
69 98 0.004930898 ubox
70 74 0.005140312 ubox
70 75 0.005372224 ubox
70 77 0.017850832 ubox
70 78 0.004287900 ubox
70 84 0.004194476 ubox
70 85 0.967760196 ubox
70 86 0.046181188 ubox
70 95 0.003321103 ubox
70 98 0.003621580 ubox
71 76 0.015835320 ubox
71 77 0.004110663 ubox
71 84 0.969860548 ubox
71 85 0.032713833 ubox
72 79 0.035234837 ubox
72 83 0.970833292 ubox
73 78 0.034851579 ubox
73 82 0.970152455 ubox
73 95 0.003389743 ubox
73 104 0.003191834 ubox
74 81 0.970684489 ubox
74 92 0.010198588 ubox
75 79 0.011322760 ubox
75 80 0.969906732 ubox
75 91 0.011294243 ubox
76 90 0.011277513 ubox
77 89 0.011096961 ubox
79 98 0.013211960 ubox
79 101 0.006480001 ubox
79 104 0.003280739 ubox
80 86 0.015974902 ubox
80 95 0.008714004 ubox
80 98 0.095352006 ubox
80 101 0.030484818 ubox
80 104 0.021609870 ubox
80 107 0.006087874 ubox
81 85 0.013910855 ubox
82 92 0.003257456 ubox
82 94 0.004714424 ubox
82 96 0.141317003 ubox
82 97 0.005787001 ubox
82 99 0.044242340 ubox
82 102 0.031859159 ubox
82 105 0.021046245 ubox
83 95 0.152013457 ubox
83 98 0.047576926 ubox
83 101 0.034271312 ubox
83 104 0.023541591 ubox
84 90 0.003457562 ubox
84 92 0.003481270 ubox
84 93 0.091814298 ubox
84 94 0.129289635 ubox
84 97 0.046110669 ubox
84 100 0.033695457 ubox
84 103 0.023158796 ubox
85 89 0.003256575 ubox
85 90 0.003202041 ubox
85 91 0.004150946 ubox
85 92 0.129291717 ubox
85 93 0.099868414 ubox
85 94 0.003517804 ubox
85 96 0.038281930 ubox
85 99 0.029487594 ubox
85 102 0.020395474 ubox
86 91 0.153651899 ubox
91 95 0.044391775 ubox
91 98 0.104402758 ubox
91 101 0.044641605 ubox
91 104 0.033639509 ubox
91 107 0.009928558 ubox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
17 45 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
57 64 0.9500000 lbox
58 63 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
