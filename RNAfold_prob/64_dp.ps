%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (64)
} def

/sequence { (\
GGAAAAACCUAGGUCGCGGAGGCGGCCCGACCGUACGAAAGUACAGCCCGAGUGGGCGGGAGGCUAGGGCCCAUCUUCGGAUGGGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.015483479 ubox
1 9 0.050848410 ubox
1 10 0.014807933 ubox
1 32 0.005440210 ubox
1 64 0.004276357 ubox
1 65 0.014676558 ubox
1 95 0.067836739 ubox
1 98 0.068375545 ubox
1 101 0.069908068 ubox
1 104 0.070208071 ubox
1 107 0.017725338 ubox
2 8 0.050975168 ubox
2 9 0.016145091 ubox
2 31 0.005435613 ubox
2 64 0.015557305 ubox
2 95 0.035793594 ubox
2 98 0.035979657 ubox
2 101 0.036727121 ubox
2 104 0.036584850 ubox
2 107 0.011937470 ubox
6 65 0.009040833 ubox
7 65 0.006577137 ubox
8 29 0.005322800 ubox
8 59 0.030258495 ubox
8 60 0.041242762 ubox
8 62 0.003952990 ubox
8 63 0.059464505 ubox
8 67 0.003673898 ubox
8 68 0.991317187 ubox
8 69 0.004184026 ubox
8 91 0.003474958 ubox
9 29 0.007084403 ubox
9 58 0.030297007 ubox
9 59 0.041432888 ubox
9 60 0.006087891 ubox
9 62 0.059713652 ubox
9 67 0.993373942 ubox
9 68 0.008455114 ubox
9 91 0.013842172 ubox
10 29 0.012971141 ubox
10 30 0.005972045 ubox
10 58 0.039355341 ubox
10 59 0.005929939 ubox
10 61 0.057766481 ubox
10 66 0.992769806 ubox
10 67 0.007566345 ubox
10 90 0.013407029 ubox
11 65 0.989406081 ubox
12 26 0.004516953 ubox
12 27 0.247285018 ubox
12 28 0.015466101 ubox
12 32 0.101596900 ubox
12 64 0.958719842 ubox
12 65 0.007646030 ubox
12 95 0.003682683 ubox
12 98 0.003682565 ubox
12 101 0.003724285 ubox
12 104 0.003729025 ubox
13 23 0.014031229 ubox
13 26 0.988652126 ubox
13 27 0.013309111 ubox
13 31 0.110628982 ubox
13 32 0.003323057 ubox
13 64 0.011186589 ubox
14 22 0.014028948 ubox
14 25 0.990658912 ubox
14 30 0.110732236 ubox
14 61 0.015291564 ubox
14 62 0.030633867 ubox
14 63 0.013095636 ubox
15 21 0.014038880 ubox
15 24 0.993294376 ubox
15 29 0.110744128 ubox
15 60 0.016053745 ubox
15 62 0.012029363 ubox
16 23 0.993489980 ubox
16 26 0.007950938 ubox
16 28 0.110479597 ubox
16 31 0.005171549 ubox
17 21 0.007667263 ubox
17 22 0.993144587 ubox
17 24 0.011702260 ubox
17 25 0.008014907 ubox
17 29 0.010942066 ubox
17 33 0.003201057 ubox
17 58 0.014033945 ubox
17 59 0.004074816 ubox
17 60 0.003741657 ubox
18 23 0.012022925 ubox
18 26 0.009601321 ubox
18 27 0.109522852 ubox
18 28 0.012452438 ubox
18 31 0.005529027 ubox
18 32 0.011346837 ubox
19 23 0.004564611 ubox
19 26 0.109225895 ubox
19 27 0.012545977 ubox
19 31 0.011342527 ubox
21 26 0.010833777 ubox
21 27 0.004523633 ubox
21 28 0.012135156 ubox
21 32 0.006887603 ubox
22 26 0.004485156 ubox
22 27 0.011991851 ubox
22 31 0.006894635 ubox
23 29 0.006575156 ubox
24 28 0.006162403 ubox
24 32 0.007223178 ubox
24 65 0.003804926 ubox
25 31 0.007267716 ubox
25 57 0.003975268 ubox
25 64 0.013027079 ubox
26 56 0.003985371 ubox
26 60 0.046627394 ubox
26 63 0.016929914 ubox
27 55 0.003989331 ubox
27 59 0.057298900 ubox
27 60 0.034257060 ubox
27 62 0.019216231 ubox
27 63 0.945651159 ubox
27 68 0.004481393 ubox
28 37 0.009392527 ubox
28 54 0.003982572 ubox
28 58 0.057425623 ubox
28 59 0.034374787 ubox
28 60 0.008500863 ubox
28 62 0.969650834 ubox
28 63 0.036736603 ubox
28 67 0.005654188 ubox
29 36 0.009345164 ubox
29 57 0.019712035 ubox
29 64 0.029508106 ubox
31 46 0.030833613 ubox
31 55 0.004995392 ubox
31 56 0.006191447 ubox
31 58 0.010412275 ubox
31 59 0.966581872 ubox
31 60 0.114421287 ubox
31 62 0.004592918 ubox
31 63 0.048827307 ubox
31 68 0.015894833 ubox
32 46 0.011373492 ubox
32 54 0.005029931 ubox
32 55 0.006101113 ubox
32 58 0.965621017 ubox
32 59 0.114433858 ubox
32 60 0.006159815 ubox
32 62 0.048920306 ubox
32 67 0.015907298 ubox
33 44 0.997849745 ubox
33 57 0.018006312 ubox
34 43 0.999197877 ubox
34 54 0.003763816 ubox
34 56 0.008381037 ubox
35 42 0.999395963 ubox
35 53 0.005382049 ubox
36 41 0.999129274 ubox
36 52 0.005502680 ubox
36 54 0.006158097 ubox
37 44 0.004597608 ubox
37 53 0.005726791 ubox
40 65 0.006259424 ubox
41 47 0.004795303 ubox
41 49 0.004892761 ubox
41 64 0.007915293 ubox
42 46 0.004505125 ubox
42 63 0.007837970 ubox
44 58 0.005765437 ubox
44 59 0.010310785 ubox
44 60 0.005385750 ubox
44 63 0.007072425 ubox
45 65 0.008863611 ubox
46 53 0.003183246 ubox
46 57 0.995001010 ubox
46 64 0.012285482 ubox
47 52 0.003345566 ubox
47 55 0.003886422 ubox
47 56 0.996509241 ubox
47 60 0.080466813 ubox
47 63 0.011361554 ubox
48 54 0.004272942 ubox
48 55 0.996510019 ubox
48 56 0.008114102 ubox
48 59 0.080910155 ubox
48 62 0.010060122 ubox
49 54 0.995071665 ubox
49 55 0.010150547 ubox
49 58 0.081071872 ubox
49 60 0.007939890 ubox
50 57 0.080122621 ubox
52 57 0.005063747 ubox
56 64 0.004875986 ubox
57 62 0.004311152 ubox
57 63 0.005780762 ubox
58 64 0.050429395 ubox
58 65 0.039560167 ubox
58 95 0.005892962 ubox
58 98 0.008392779 ubox
59 64 0.055916369 ubox
59 65 0.010188641 ubox
59 95 0.010297250 ubox
59 98 0.007315470 ubox
60 64 0.012966662 ubox
60 95 0.013200250 ubox
60 98 0.003684007 ubox
62 95 0.012860608 ubox
63 95 0.006367526 ubox
64 68 0.003173212 ubox
64 91 0.081254483 ubox
65 89 0.004114342 ubox
65 90 0.079130635 ubox
65 91 0.004353922 ubox
65 92 0.007104322 ubox
68 86 0.005059029 ubox
69 86 0.998711471 ubox
70 85 0.999978125 ubox
71 84 0.999989092 ubox
72 83 0.999982208 ubox
73 82 0.999584201 ubox
74 80 0.007385151 ubox
74 81 0.999601851 ubox
75 79 0.013613418 ubox
75 80 0.998888292 ubox
76 80 0.003186672 ubox
86 91 0.005327477 ubox
91 95 0.042897522 ubox
91 98 0.103425999 ubox
91 101 0.045373846 ubox
91 104 0.035114746 ubox
91 107 0.010389157 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
