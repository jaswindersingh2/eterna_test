%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (341)
} def

/sequence { (\
GGAAAGCAGCCGUGAAAAGACGGGCCAAAGGCACUGCAGGCUCGGGAAAACCGCCUCGAUGGAGGGCCCUCUGACUUCGGUCAGAGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.022297228 ubox
1 10 0.003664514 ubox
1 11 0.024460301 ubox
1 26 0.013096362 ubox
1 32 0.003760825 ubox
1 35 0.004226398 ubox
1 37 0.008385571 ubox
1 41 0.033769207 ubox
1 42 0.075079708 ubox
1 43 0.031876191 ubox
1 52 0.010948856 ubox
1 67 0.010049390 ubox
1 68 0.130444574 ubox
1 69 0.020464197 ubox
1 95 0.140098493 ubox
1 98 0.141134353 ubox
1 101 0.144245090 ubox
1 104 0.144915836 ubox
1 107 0.036592391 ubox
2 7 0.012853677 ubox
2 10 0.024475070 ubox
2 11 0.003165752 ubox
2 25 0.011944940 ubox
2 26 0.005938084 ubox
2 34 0.004492873 ubox
2 37 0.004606697 ubox
2 41 0.093195167 ubox
2 42 0.020405812 ubox
2 43 0.030244100 ubox
2 51 0.010923191 ubox
2 67 0.130329576 ubox
2 68 0.024499358 ubox
2 69 0.003521623 ubox
2 95 0.073553891 ubox
2 98 0.073805890 ubox
2 101 0.075377204 ubox
2 104 0.075099001 ubox
2 107 0.024508170 ubox
3 35 0.006909425 ubox
3 42 0.029804004 ubox
5 35 0.006098408 ubox
5 42 0.022712142 ubox
6 13 0.005048155 ubox
6 25 0.055504776 ubox
6 26 0.013257426 ubox
6 32 0.009306182 ubox
6 34 0.006264647 ubox
6 37 0.987493842 ubox
6 41 0.024004417 ubox
6 43 0.016491837 ubox
6 67 0.049282284 ubox
6 68 0.003213423 ubox
6 95 0.013913636 ubox
6 98 0.014656806 ubox
6 101 0.014643277 ubox
6 104 0.014397886 ubox
6 107 0.005023830 ubox
7 12 0.005347582 ubox
7 14 0.008167131 ubox
7 24 0.055703501 ubox
7 31 0.009293626 ubox
7 36 0.988562080 ubox
7 40 0.023896262 ubox
7 44 0.007372130 ubox
7 46 0.003446602 ubox
7 66 0.049419015 ubox
7 91 0.017454705 ubox
8 13 0.007866419 ubox
8 35 0.987313834 ubox
8 42 0.055812967 ubox
9 25 0.048650241 ubox
9 26 0.006281050 ubox
9 32 0.011193459 ubox
9 34 0.981339604 ubox
9 37 0.011106815 ubox
9 41 0.059349717 ubox
9 67 0.012364089 ubox
9 81 0.007143515 ubox
9 95 0.012399819 ubox
9 98 0.012431536 ubox
9 101 0.012642523 ubox
9 104 0.011914490 ubox
9 107 0.004126338 ubox
10 22 0.003413248 ubox
10 23 0.993351771 ubox
10 24 0.041119472 ubox
10 31 0.012355870 ubox
10 36 0.008622140 ubox
10 40 0.059324614 ubox
10 45 0.007741836 ubox
10 66 0.012257447 ubox
10 80 0.007711824 ubox
11 19 0.004573315 ubox
11 22 0.996796842 ubox
11 23 0.031096298 ubox
11 30 0.012310890 ubox
11 39 0.059229786 ubox
11 44 0.007781322 ubox
11 65 0.010322770 ubox
11 79 0.007714077 ubox
12 21 0.997274230 ubox
12 34 0.004196856 ubox
12 37 0.013239140 ubox
12 43 0.007727154 ubox
12 51 0.003909527 ubox
12 54 0.004281087 ubox
12 78 0.007687100 ubox
12 95 0.008570397 ubox
12 98 0.009652148 ubox
12 101 0.009892849 ubox
12 104 0.009837771 ubox
12 107 0.003723317 ubox
13 18 0.010446459 ubox
13 19 0.027967223 ubox
13 20 0.990703915 ubox
13 22 0.008425875 ubox
13 27 0.007756198 ubox
13 33 0.004216157 ubox
13 36 0.010337656 ubox
13 38 0.046304444 ubox
13 50 0.003921124 ubox
13 53 0.004334578 ubox
13 63 0.004362696 ubox
13 94 0.008309433 ubox
13 96 0.005439145 ubox
13 97 0.008892480 ubox
13 99 0.005429478 ubox
13 100 0.009131940 ubox
13 102 0.005434607 ubox
13 103 0.009066401 ubox
13 105 0.004548453 ubox
13 106 0.003460473 ubox
14 21 0.009911706 ubox
14 26 0.008003167 ubox
14 32 0.003709637 ubox
14 35 0.003693279 ubox
14 37 0.047880543 ubox
14 41 0.006840721 ubox
14 52 0.004395905 ubox
14 95 0.006602671 ubox
14 98 0.006599430 ubox
14 101 0.006618851 ubox
14 104 0.005148195 ubox
18 35 0.004631725 ubox
18 72 0.007672890 ubox
19 34 0.004671520 ubox
19 37 0.019902365 ubox
19 71 0.007741236 ubox
20 70 0.007717665 ubox
21 36 0.060667698 ubox
21 44 0.025209691 ubox
22 34 0.005603674 ubox
22 35 0.061978868 ubox
22 43 0.027474737 ubox
22 69 0.015281992 ubox
23 32 0.005755904 ubox
23 34 0.062364577 ubox
23 42 0.029434193 ubox
23 68 0.027329229 ubox
24 32 0.990763235 ubox
24 37 0.004757043 ubox
24 41 0.052161025 ubox
24 67 0.033607357 ubox
25 30 0.010986411 ubox
25 31 0.991919504 ubox
25 36 0.004579784 ubox
25 40 0.052248213 ubox
25 46 0.008971741 ubox
25 66 0.033642403 ubox
26 30 0.984714692 ubox
26 31 0.010578111 ubox
26 39 0.052147476 ubox
26 45 0.009057360 ubox
26 65 0.033201819 ubox
26 91 0.004686686 ubox
28 35 0.003654650 ubox
29 35 0.025343661 ubox
29 42 0.013927072 ubox
30 34 0.024980607 ubox
30 35 0.008598146 ubox
30 37 0.025109330 ubox
30 41 0.014438861 ubox
30 42 0.018153040 ubox
30 68 0.086473858 ubox
31 37 0.021754012 ubox
31 41 0.019423447 ubox
31 67 0.086684083 ubox
32 36 0.021841675 ubox
32 39 0.014392075 ubox
32 40 0.019404300 ubox
32 61 0.031170784 ubox
32 62 0.004292675 ubox
32 65 0.004614703 ubox
32 66 0.085304486 ubox
33 60 0.031013376 ubox
34 39 0.012926539 ubox
34 40 0.008610249 ubox
34 45 0.004789413 ubox
34 58 0.005310153 ubox
34 62 0.008186264 ubox
34 64 0.083657098 ubox
34 65 0.011590844 ubox
34 91 0.006309773 ubox
35 39 0.007833289 ubox
35 44 0.004866931 ubox
35 58 0.029335373 ubox
35 59 0.006833080 ubox
35 61 0.008117217 ubox
35 63 0.084111627 ubox
35 64 0.010464700 ubox
35 90 0.006150486 ubox
35 96 0.005700851 ubox
35 99 0.006557570 ubox
35 102 0.005642112 ubox
35 105 0.005553054 ubox
36 41 0.004758286 ubox
36 43 0.005005005 ubox
36 57 0.031178742 ubox
36 60 0.007755674 ubox
36 67 0.005515165 ubox
36 95 0.006143902 ubox
36 98 0.007073253 ubox
36 101 0.006083379 ubox
36 104 0.005988093 ubox
37 58 0.009548572 ubox
37 61 0.084160484 ubox
37 62 0.007537419 ubox
37 66 0.005546610 ubox
37 91 0.003597184 ubox
38 42 0.003673378 ubox
38 56 0.063691381 ubox
38 60 0.071521000 ubox
38 70 0.006268843 ubox
39 43 0.006328215 ubox
39 52 0.016422996 ubox
39 55 0.078557083 ubox
39 56 0.009039997 ubox
39 57 0.014421912 ubox
39 67 0.007065517 ubox
39 68 0.948848165 ubox
39 69 0.008719287 ubox
39 95 0.059631371 ubox
39 98 0.021146049 ubox
39 101 0.021360927 ubox
39 104 0.021346896 ubox
39 107 0.007452801 ubox
40 51 0.016393379 ubox
40 54 0.078824698 ubox
40 55 0.009426432 ubox
40 56 0.013658949 ubox
40 57 0.008487715 ubox
40 60 0.004282845 ubox
40 67 0.951126066 ubox
40 68 0.008579436 ubox
40 95 0.014014426 ubox
40 98 0.013003308 ubox
40 101 0.013204129 ubox
40 104 0.013133310 ubox
40 107 0.004282008 ubox
41 53 0.072584637 ubox
41 58 0.004620469 ubox
41 61 0.004796051 ubox
41 65 0.006134152 ubox
41 66 0.949001900 ubox
41 91 0.033094504 ubox
42 49 0.006782120 ubox
42 53 0.014834509 ubox
42 59 0.064186150 ubox
42 63 0.003525559 ubox
42 64 0.004987774 ubox
42 65 0.259006107 ubox
42 66 0.011090141 ubox
42 87 0.004057482 ubox
42 89 0.003430200 ubox
42 90 0.031377549 ubox
42 91 0.003339484 ubox
42 92 0.061507963 ubox
42 93 0.004432277 ubox
42 94 0.003251270 ubox
42 96 0.003861077 ubox
42 97 0.003311354 ubox
42 99 0.003935748 ubox
42 100 0.003366149 ubox
42 102 0.003891757 ubox
43 53 0.920270817 ubox
43 58 0.071266154 ubox
43 62 0.003954524 ubox
43 64 0.158003510 ubox
43 65 0.025607034 ubox
43 66 0.003686127 ubox
43 91 0.061886673 ubox
44 51 0.024020112 ubox
44 52 0.983619370 ubox
44 54 0.019115082 ubox
44 55 0.047396555 ubox
44 56 0.030014926 ubox
44 57 0.074403480 ubox
44 68 0.005795473 ubox
44 69 0.011702070 ubox
44 95 0.004687293 ubox
44 98 0.004724832 ubox
44 101 0.004751850 ubox
44 104 0.004678553 ubox
45 51 0.983387255 ubox
45 52 0.134286083 ubox
45 54 0.047509293 ubox
45 55 0.038036932 ubox
45 56 0.071287077 ubox
45 67 0.005575297 ubox
45 68 0.013732657 ubox
46 51 0.134510213 ubox
46 52 0.022059457 ubox
46 54 0.038042827 ubox
46 55 0.071278441 ubox
46 57 0.014211861 ubox
46 67 0.013672682 ubox
47 56 0.014071683 ubox
47 60 0.003864866 ubox
48 60 0.003445794 ubox
50 60 0.003563451 ubox
51 58 0.004077287 ubox
51 62 0.012229410 ubox
51 65 0.016896474 ubox
51 66 0.005985638 ubox
52 58 0.007176820 ubox
52 61 0.012358075 ubox
52 64 0.017337257 ubox
52 65 0.005247857 ubox
52 66 0.014077436 ubox
53 57 0.007222052 ubox
53 60 0.009345704 ubox
53 67 0.100958491 ubox
53 68 0.008740083 ubox
54 58 0.003721833 ubox
54 61 0.004819805 ubox
54 62 0.141595755 ubox
54 64 0.009505603 ubox
54 65 0.952565388 ubox
54 66 0.087135200 ubox
55 61 0.142039910 ubox
55 62 0.014380664 ubox
55 64 0.976851093 ubox
55 65 0.068119880 ubox
55 66 0.006487231 ubox
56 61 0.012929494 ubox
56 62 0.006759514 ubox
56 63 0.980334117 ubox
56 64 0.033429841 ubox
56 65 0.008466160 ubox
57 61 0.011072883 ubox
57 62 0.980692074 ubox
57 64 0.025827966 ubox
57 65 0.005634812 ubox
57 66 0.003337149 ubox
58 98 0.005502645 ubox
60 96 0.007789230 ubox
60 99 0.004013395 ubox
61 68 0.020898284 ubox
61 95 0.008274245 ubox
61 98 0.004259977 ubox
62 67 0.020882043 ubox
62 68 0.003300046 ubox
64 95 0.003755929 ubox
67 91 0.009019248 ubox
68 86 0.012348241 ubox
68 91 0.014120907 ubox
69 86 0.995802115 ubox
69 91 0.005944868 ubox
70 85 0.999402732 ubox
70 90 0.003670319 ubox
71 84 0.999944626 ubox
72 83 0.999719700 ubox
73 82 0.999949454 ubox
74 81 0.999659927 ubox
75 79 0.011785786 ubox
75 80 0.998665008 ubox
76 80 0.004029102 ubox
86 95 0.009347258 ubox
86 98 0.003668443 ubox
91 95 0.046596662 ubox
91 98 0.108347137 ubox
91 101 0.045619135 ubox
91 104 0.033686373 ubox
91 107 0.009928639 ubox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
