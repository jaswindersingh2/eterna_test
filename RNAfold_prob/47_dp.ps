%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (47)
} def

/sequence { (\
GGAAAAACGAUCAGUUCAAAAGAACUCCAACCCAGCAAAAGCUGACGUGAAAACACGGGAAGGGAUCGACUAAUCUUCGGAUUAGUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.074071160 ubox
1 12 0.005975367 ubox
1 28 0.014470034 ubox
1 67 0.003914550 ubox
1 95 0.067538117 ubox
1 98 0.068050302 ubox
1 101 0.069582256 ubox
1 104 0.069862655 ubox
1 107 0.017636157 ubox
2 8 0.018048564 ubox
2 11 0.005298205 ubox
2 12 0.010860889 ubox
2 27 0.014480393 ubox
2 67 0.007969581 ubox
2 95 0.035592495 ubox
2 98 0.035733761 ubox
2 101 0.036525964 ubox
2 104 0.036353433 ubox
2 107 0.011862290 ubox
3 11 0.010479161 ubox
3 26 0.011394368 ubox
3 66 0.007538909 ubox
6 16 0.005129096 ubox
7 15 0.005973211 ubox
8 14 0.006139572 ubox
8 62 0.003234346 ubox
8 63 0.006180194 ubox
8 68 0.976715778 ubox
8 91 0.008347230 ubox
9 17 0.003662486 ubox
9 27 0.003275889 ubox
9 28 0.004754487 ubox
9 67 0.998391825 ubox
9 95 0.005294437 ubox
9 98 0.004177140 ubox
9 101 0.004204839 ubox
9 104 0.004214712 ubox
10 16 0.003630122 ubox
10 66 0.998156547 ubox
11 60 0.007971619 ubox
11 63 0.006529653 ubox
11 64 0.018257734 ubox
11 65 0.997642570 ubox
11 92 0.014706955 ubox
12 59 0.008322295 ubox
12 62 0.010042660 ubox
12 63 0.034357875 ubox
12 64 0.995444861 ubox
12 91 0.015660281 ubox
13 26 0.904606381 ubox
14 25 0.990217310 ubox
14 26 0.004355176 ubox
14 31 0.004934592 ubox
15 23 0.004301351 ubox
15 24 0.990415207 ubox
15 30 0.004885006 ubox
15 60 0.014969593 ubox
15 61 0.126666347 ubox
15 62 0.005625070 ubox
16 22 0.005004339 ubox
16 23 0.990509356 ubox
16 29 0.004431907 ubox
16 59 0.016465467 ubox
16 60 0.128049481 ubox
16 61 0.005175390 ubox
17 22 0.989204548 ubox
17 58 0.017545336 ubox
17 59 0.127788028 ubox
17 62 0.003184660 ubox
18 26 0.003245645 ubox
19 26 0.006105086 ubox
20 26 0.004465854 ubox
21 26 0.004824467 ubox
22 27 0.020463318 ubox
22 28 0.028286492 ubox
22 31 0.015998809 ubox
22 32 0.010657882 ubox
22 54 0.005714961 ubox
22 56 0.005678396 ubox
22 67 0.006889421 ubox
23 66 0.006747715 ubox
25 62 0.018826727 ubox
25 63 0.005484197 ubox
25 64 0.005686599 ubox
26 30 0.004871811 ubox
26 50 0.011577727 ubox
26 51 0.003857351 ubox
26 59 0.015730257 ubox
26 60 0.210919415 ubox
26 61 0.016530752 ubox
26 62 0.004354518 ubox
26 63 0.012545658 ubox
26 64 0.029079517 ubox
26 65 0.020490594 ubox
27 49 0.011132868 ubox
27 58 0.033810278 ubox
27 59 0.284415707 ubox
27 62 0.025180811 ubox
27 63 0.749527584 ubox
27 64 0.037789700 ubox
28 44 0.004061454 ubox
28 47 0.004331572 ubox
28 49 0.024664607 ubox
28 57 0.032131358 ubox
28 58 0.284359210 ubox
28 59 0.013519485 ubox
28 62 0.750706856 ubox
28 63 0.048324611 ubox
29 48 0.024537764 ubox
30 48 0.012944330 ubox
31 44 0.006486265 ubox
31 47 0.014109493 ubox
31 57 0.004918465 ubox
31 58 0.108600827 ubox
31 59 0.722193431 ubox
31 62 0.010600098 ubox
31 63 0.149108212 ubox
31 64 0.015567272 ubox
32 44 0.030659125 ubox
32 57 0.098597870 ubox
32 58 0.721149668 ubox
32 59 0.035413567 ubox
32 62 0.149052150 ubox
32 63 0.023628657 ubox
33 44 0.984374152 ubox
33 57 0.153040917 ubox
33 58 0.029439373 ubox
33 62 0.020072787 ubox
34 43 0.997981090 ubox
35 42 0.999579132 ubox
35 46 0.007095760 ubox
35 54 0.005146618 ubox
35 56 0.005272523 ubox
36 41 0.998148486 ubox
36 44 0.012111880 ubox
37 43 0.011545139 ubox
41 48 0.015379960 ubox
42 47 0.015423026 ubox
42 49 0.006849769 ubox
42 62 0.010097728 ubox
42 63 0.004803452 ubox
43 60 0.006885427 ubox
43 61 0.010412392 ubox
43 62 0.004877648 ubox
44 56 0.006189480 ubox
46 57 0.972293464 ubox
46 58 0.028718829 ubox
46 59 0.020944135 ubox
46 62 0.003812945 ubox
46 63 0.005204269 ubox
47 54 0.057317837 ubox
47 56 0.996708908 ubox
48 53 0.056901514 ubox
48 55 0.996080406 ubox
48 57 0.020768255 ubox
48 61 0.004199723 ubox
49 54 0.990136076 ubox
49 56 0.022124764 ubox
54 59 0.003487740 ubox
54 62 0.003922961 ubox
54 63 0.008353850 ubox
56 62 0.014552056 ubox
56 63 0.018054128 ubox
58 67 0.004838774 ubox
58 98 0.003464044 ubox
59 66 0.003286682 ubox
59 67 0.008439016 ubox
60 66 0.008072730 ubox
62 67 0.003358043 ubox
62 95 0.004164310 ubox
63 95 0.008166767 ubox
66 88 0.004587226 ubox
66 89 0.012084054 ubox
66 92 0.011102970 ubox
67 91 0.011432967 ubox
68 86 0.009523177 ubox
68 95 0.006285390 ubox
68 98 0.004923878 ubox
68 101 0.003946933 ubox
68 104 0.003396684 ubox
69 86 0.969125367 ubox
70 85 0.999483989 ubox
71 84 0.999593771 ubox
72 83 0.999232922 ubox
73 82 0.998999304 ubox
74 80 0.007451508 ubox
74 81 0.999553998 ubox
75 79 0.013653501 ubox
75 80 0.998860246 ubox
76 80 0.003190752 ubox
85 95 0.007100293 ubox
85 98 0.004704987 ubox
85 101 0.003741939 ubox
85 104 0.003463599 ubox
86 91 0.005158935 ubox
86 92 0.004757320 ubox
86 93 0.006089184 ubox
86 94 0.007635499 ubox
86 97 0.005032552 ubox
86 100 0.003985591 ubox
86 103 0.003690175 ubox
91 95 0.043036843 ubox
91 98 0.103764918 ubox
91 101 0.045519134 ubox
91 104 0.035226100 ubox
91 107 0.010422055 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
