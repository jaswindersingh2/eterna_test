%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (447)
} def

/sequence { (\
GGAAAAGAUUGGAGGACUCAAAAGAGAUCAAAAGAUCCUAAAACUGAACAAAAGUUCAGCCAAUCAAAAUCCUGCUUCGGCAGGAUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 38 0.005926785 ubox
1 39 0.003727766 ubox
1 61 0.024030809 ubox
1 65 0.004935029 ubox
1 72 0.004129538 ubox
1 95 0.067468478 ubox
1 98 0.067890062 ubox
1 101 0.069440679 ubox
1 104 0.069781187 ubox
1 107 0.017630667 ubox
2 37 0.005833950 ubox
2 38 0.003961675 ubox
2 60 0.023970807 ubox
2 64 0.003301415 ubox
2 65 0.008476277 ubox
2 70 0.004081928 ubox
2 71 0.004885622 ubox
2 95 0.035615651 ubox
2 98 0.035741014 ubox
2 101 0.036505620 ubox
2 104 0.036379932 ubox
2 107 0.011877204 ubox
3 36 0.005490354 ubox
3 64 0.007617521 ubox
3 70 0.005533992 ubox
5 39 0.007982618 ubox
6 39 0.007622091 ubox
7 19 0.003968732 ubox
7 37 0.033573884 ubox
7 38 0.005673403 ubox
7 65 0.997380701 ubox
7 98 0.004812590 ubox
7 101 0.006908725 ubox
7 104 0.006175373 ubox
8 18 0.003864656 ubox
8 36 0.034135794 ubox
8 64 0.998386751 ubox
9 21 0.010123128 ubox
9 35 0.034219929 ubox
9 43 0.004687307 ubox
9 63 0.997952093 ubox
9 67 0.008088733 ubox
9 97 0.006132960 ubox
9 100 0.009735719 ubox
9 103 0.007957358 ubox
9 106 0.006056349 ubox
10 20 0.011761964 ubox
10 30 0.003193988 ubox
10 34 0.033931818 ubox
10 42 0.005631344 ubox
10 62 0.998400362 ubox
10 66 0.009293622 ubox
10 96 0.006826566 ubox
10 99 0.010901239 ubox
10 102 0.008944179 ubox
10 105 0.007183737 ubox
11 17 0.003414751 ubox
11 19 0.012077165 ubox
11 38 0.003688744 ubox
11 60 0.003991431 ubox
11 61 0.998911653 ubox
11 65 0.009478551 ubox
11 95 0.006917493 ubox
11 98 0.011074230 ubox
11 101 0.009089202 ubox
11 104 0.007349538 ubox
12 17 0.008251544 ubox
12 18 0.010386314 ubox
12 19 0.043180143 ubox
12 29 0.006527040 ubox
12 37 0.003922911 ubox
12 60 0.994713699 ubox
12 61 0.004464650 ubox
12 64 0.008841384 ubox
13 18 0.048375981 ubox
13 28 0.007630382 ubox
13 36 0.003934845 ubox
13 39 0.581516012 ubox
13 45 0.004259730 ubox
14 18 0.013908858 ubox
14 19 0.171108232 ubox
14 28 0.009521894 ubox
14 29 0.101362421 ubox
14 37 0.005470438 ubox
14 38 0.599662107 ubox
14 39 0.025099231 ubox
14 44 0.004983477 ubox
14 57 0.031096423 ubox
14 60 0.006302081 ubox
14 61 0.012501387 ubox
14 95 0.008280751 ubox
14 98 0.005966440 ubox
14 101 0.004741220 ubox
15 19 0.054980625 ubox
15 28 0.089831740 ubox
15 29 0.221773069 ubox
15 37 0.599022917 ubox
15 38 0.025843875 ubox
15 56 0.031216678 ubox
15 57 0.028728572 ubox
15 60 0.013031966 ubox
15 95 0.003346185 ubox
16 28 0.222484841 ubox
16 36 0.576072064 ubox
16 55 0.032824704 ubox
16 56 0.021598601 ubox
17 24 0.099848763 ubox
17 26 0.572930350 ubox
17 34 0.188636741 ubox
17 54 0.034289247 ubox
17 59 0.005218056 ubox
17 91 0.003325581 ubox
18 22 0.017920708 ubox
18 23 0.093175973 ubox
18 24 0.009501221 ubox
18 25 0.606732753 ubox
18 27 0.054272323 ubox
18 31 0.003747857 ubox
18 32 0.010566908 ubox
18 33 0.175195646 ubox
18 34 0.025108647 ubox
18 35 0.259346358 ubox
18 40 0.014798980 ubox
18 41 0.009720328 ubox
18 42 0.015316897 ubox
18 43 0.017949130 ubox
18 47 0.018938434 ubox
18 53 0.027665236 ubox
18 58 0.003671915 ubox
18 92 0.007125550 ubox
19 24 0.609640553 ubox
19 26 0.062838217 ubox
19 34 0.260665768 ubox
19 46 0.023907333 ubox
19 91 0.007271478 ubox
20 28 0.007544115 ubox
20 39 0.005612938 ubox
20 45 0.023140965 ubox
21 28 0.015629155 ubox
21 39 0.009173923 ubox
22 28 0.018230209 ubox
22 39 0.032612562 ubox
23 28 0.057100250 ubox
23 39 0.627839030 ubox
23 45 0.005534588 ubox
24 28 0.013471263 ubox
24 29 0.119365695 ubox
24 37 0.009633244 ubox
24 38 0.651381989 ubox
24 39 0.064865548 ubox
24 44 0.005572390 ubox
25 36 0.009300627 ubox
25 39 0.073091712 ubox
26 36 0.003963909 ubox
26 37 0.740987993 ubox
26 38 0.054310570 ubox
27 36 0.766906483 ubox
28 32 0.006142669 ubox
28 33 0.010056365 ubox
28 34 0.005424875 ubox
28 35 0.780101084 ubox
29 34 0.781317059 ubox
30 36 0.007543648 ubox
30 39 0.011525926 ubox
31 36 0.008856939 ubox
31 39 0.009026748 ubox
32 36 0.005453228 ubox
32 39 0.014827213 ubox
33 39 0.054745380 ubox
33 45 0.003189532 ubox
34 38 0.055553391 ubox
34 39 0.012428475 ubox
34 44 0.003807652 ubox
35 39 0.007073714 ubox
36 40 0.005657869 ubox
36 41 0.008488088 ubox
36 42 0.007901062 ubox
36 43 0.008544993 ubox
38 46 0.004826016 ubox
39 43 0.010213887 ubox
40 45 0.003388924 ubox
42 56 0.016611007 ubox
43 55 0.024529010 ubox
44 54 0.025370160 ubox
44 59 0.991768546 ubox
45 51 0.004210477 ubox
45 52 0.005665873 ubox
45 53 0.025236036 ubox
45 58 0.997728271 ubox
46 57 0.999017352 ubox
47 56 0.998674229 ubox
48 55 0.997808320 ubox
49 54 0.996291436 ubox
64 92 0.017116674 ubox
65 91 0.019593659 ubox
66 86 0.011028325 ubox
67 86 0.018483027 ubox
68 86 0.043796551 ubox
69 86 0.950003123 ubox
70 85 0.991814791 ubox
70 87 0.003258547 ubox
71 84 0.999941228 ubox
72 83 0.999979347 ubox
73 82 0.999753355 ubox
74 81 0.999982983 ubox
75 79 0.011547217 ubox
75 80 0.999161339 ubox
76 80 0.003704440 ubox
86 90 0.003408262 ubox
86 91 0.004309666 ubox
86 92 0.005964063 ubox
86 93 0.007607259 ubox
86 94 0.003974888 ubox
91 95 0.043036491 ubox
91 98 0.103758621 ubox
91 101 0.045519364 ubox
91 104 0.035227254 ubox
91 107 0.010422471 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
23 39 0.9500000 lbox
24 38 0.9500000 lbox
26 37 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
