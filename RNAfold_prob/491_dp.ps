%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (491)
} def

/sequence { (\
GGAAAAGUCCACGACAGAGGAAACUCGAGGAAACUCGUCAUUAGUGGAGGAAACUCCGCGUGGACAAAGAGUGUCUUCGGACGCUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.041461864 ubox
1 65 0.003712568 ubox
1 86 0.004389962 ubox
1 95 0.067699184 ubox
1 98 0.068134801 ubox
1 101 0.069692227 ubox
1 104 0.069999628 ubox
1 107 0.017673074 ubox
2 9 0.041521774 ubox
2 26 0.006881429 ubox
2 65 0.004021983 ubox
2 86 0.007348349 ubox
2 95 0.035723525 ubox
2 98 0.035858907 ubox
2 101 0.036613979 ubox
2 104 0.036473345 ubox
2 107 0.011901306 ubox
3 8 0.037935835 ubox
3 25 0.006735787 ubox
3 85 0.006717919 ubox
7 15 0.018866694 ubox
7 65 0.997001563 ubox
7 82 0.008953676 ubox
7 95 0.005292132 ubox
7 98 0.005189241 ubox
7 101 0.005024484 ubox
7 104 0.004981653 ubox
8 14 0.018884537 ubox
8 21 0.009729132 ubox
8 31 0.003916799 ubox
8 64 0.998355139 ubox
8 81 0.008963288 ubox
8 94 0.004451256 ubox
8 97 0.004358420 ubox
8 100 0.004222849 ubox
8 103 0.004185891 ubox
9 13 0.018739886 ubox
9 20 0.010396570 ubox
9 30 0.004111651 ubox
9 63 0.998781028 ubox
9 80 0.008966365 ubox
9 91 0.003315180 ubox
10 19 0.010393889 ubox
10 29 0.004104328 ubox
10 62 0.998776253 ubox
10 79 0.008952699 ubox
11 61 0.998121613 ubox
12 17 0.007957521 ubox
12 19 0.005430934 ubox
12 27 0.003277378 ubox
12 60 0.996979054 ubox
12 91 0.006143537 ubox
13 24 0.009708625 ubox
13 26 0.013019425 ubox
13 36 0.004860996 ubox
13 39 0.660958925 ubox
13 42 0.007782688 ubox
13 59 0.312002537 ubox
13 95 0.006294398 ubox
13 98 0.006182537 ubox
13 101 0.006300607 ubox
13 104 0.006323097 ubox
14 25 0.011798719 ubox
14 35 0.004698608 ubox
14 38 0.661617580 ubox
14 41 0.007437285 ubox
14 42 0.004825624 ubox
14 45 0.024883231 ubox
14 61 0.006780650 ubox
15 19 0.013993943 ubox
15 20 0.022614312 ubox
15 27 0.014566704 ubox
15 29 0.019621832 ubox
15 30 0.004036784 ubox
15 37 0.660380083 ubox
15 44 0.026089747 ubox
15 58 0.161850493 ubox
15 60 0.008891705 ubox
15 91 0.006291213 ubox
16 25 0.047933015 ubox
16 35 0.007726928 ubox
16 41 0.004323636 ubox
16 42 0.013286494 ubox
16 45 0.003830306 ubox
17 24 0.051070618 ubox
17 25 0.007205413 ubox
17 26 0.956294901 ubox
17 34 0.006139531 ubox
17 36 0.177489363 ubox
17 39 0.029865904 ubox
17 41 0.013754661 ubox
17 42 0.033385878 ubox
17 56 0.023493787 ubox
17 78 0.003970691 ubox
17 86 0.009792158 ubox
18 25 0.965819541 ubox
18 35 0.177576897 ubox
18 38 0.029490345 ubox
18 41 0.033623226 ubox
18 42 0.019113624 ubox
18 45 0.009249404 ubox
18 55 0.023532348 ubox
18 77 0.003976248 ubox
18 85 0.009797983 ubox
19 24 0.966292309 ubox
19 25 0.021946564 ubox
19 26 0.021252388 ubox
19 34 0.177463094 ubox
19 35 0.003451435 ubox
19 39 0.023655211 ubox
19 41 0.019306623 ubox
19 42 0.009967053 ubox
19 45 0.003277551 ubox
19 54 0.023514393 ubox
19 76 0.003981585 ubox
19 84 0.009769914 ubox
20 24 0.023909552 ubox
20 25 0.017353649 ubox
20 26 0.025616476 ubox
20 34 0.004963681 ubox
20 36 0.014648179 ubox
20 38 0.023128331 ubox
20 39 0.065169929 ubox
20 41 0.009478804 ubox
20 42 0.033397430 ubox
20 75 0.003985003 ubox
21 25 0.022457498 ubox
21 35 0.014126843 ubox
21 38 0.064910056 ubox
21 41 0.033183486 ubox
21 42 0.044538526 ubox
21 74 0.003776209 ubox
22 38 0.006518226 ubox
22 41 0.044181301 ubox
22 42 0.021305130 ubox
23 38 0.010202994 ubox
23 41 0.019883419 ubox
23 42 0.007130478 ubox
23 45 0.031585358 ubox
23 72 0.003862801 ubox
24 29 0.091220706 ubox
24 30 0.062375315 ubox
24 37 0.008696571 ubox
24 44 0.033152675 ubox
24 49 0.022534552 ubox
24 71 0.003992269 ubox
24 80 0.005370862 ubox
25 29 0.056375896 ubox
25 30 0.004599078 ubox
25 31 0.024930078 ubox
25 40 0.007241900 ubox
25 43 0.033053689 ubox
25 48 0.022483151 ubox
25 70 0.003991456 ubox
25 80 0.007808148 ubox
26 30 0.025200316 ubox
26 37 0.215397745 ubox
26 47 0.020732867 ubox
26 69 0.003985150 ubox
26 79 0.010153053 ubox
27 34 0.008364509 ubox
27 36 0.932130153 ubox
27 38 0.005677842 ubox
27 39 0.304677046 ubox
27 42 0.011291988 ubox
27 56 0.007120698 ubox
27 78 0.013189646 ubox
28 35 0.933054525 ubox
28 38 0.304255534 ubox
28 41 0.011345426 ubox
28 42 0.005974037 ubox
28 45 0.009186170 ubox
28 55 0.007151764 ubox
28 77 0.013189299 ubox
29 34 0.932499903 ubox
29 35 0.009317851 ubox
29 36 0.032395191 ubox
29 39 0.008800673 ubox
29 41 0.005883605 ubox
29 54 0.007148916 ubox
29 57 0.005590933 ubox
29 76 0.013186981 ubox
30 34 0.012325273 ubox
30 35 0.025506115 ubox
30 36 0.303950458 ubox
30 38 0.007512842 ubox
30 39 0.028609267 ubox
30 42 0.003247526 ubox
30 56 0.005598586 ubox
30 75 0.013197808 ubox
31 35 0.264546068 ubox
31 38 0.027105595 ubox
31 42 0.007911060 ubox
31 55 0.005489624 ubox
31 74 0.012506268 ubox
32 41 0.007903445 ubox
33 45 0.009986859 ubox
33 72 0.012780408 ubox
34 44 0.010536712 ubox
34 49 0.007237483 ubox
34 71 0.013203721 ubox
35 43 0.010182401 ubox
35 48 0.007240861 ubox
35 51 0.005322444 ubox
35 70 0.013201558 ubox
36 44 0.003728943 ubox
36 47 0.007215794 ubox
36 50 0.005428941 ubox
36 69 0.013187334 ubox
37 41 0.012300427 ubox
37 42 0.040958733 ubox
37 45 0.008827723 ubox
37 59 0.003592383 ubox
37 65 0.048163913 ubox
38 43 0.018914042 ubox
38 44 0.007579869 ubox
38 47 0.004432258 ubox
38 48 0.005925432 ubox
38 58 0.003383304 ubox
38 63 0.005606241 ubox
38 64 0.048131329 ubox
39 44 0.037359147 ubox
39 46 0.012630077 ubox
39 47 0.005972700 ubox
39 62 0.008813422 ubox
39 63 0.047793645 ubox
40 45 0.012938024 ubox
40 61 0.010739053 ubox
41 60 0.010105972 ubox
41 62 0.010716266 ubox
42 58 0.003271931 ubox
42 60 0.005654056 ubox
42 62 0.004540729 ubox
43 61 0.005688207 ubox
44 59 0.948033036 ubox
45 58 0.966819223 ubox
46 57 0.999534558 ubox
47 56 0.999645856 ubox
48 55 0.999420236 ubox
49 54 0.998654086 ubox
49 55 0.003502238 ubox
49 57 0.006879704 ubox
50 54 0.007891775 ubox
50 56 0.006888301 ubox
51 55 0.005994483 ubox
60 95 0.003362606 ubox
61 94 0.003341723 ubox
65 91 0.004876283 ubox
69 86 0.998449793 ubox
70 85 0.999564076 ubox
71 84 0.999883466 ubox
72 83 0.999499404 ubox
73 82 0.999828831 ubox
74 80 0.007350131 ubox
74 81 0.999650596 ubox
75 79 0.013563865 ubox
75 80 0.998816684 ubox
76 80 0.003167064 ubox
85 92 0.007215397 ubox
86 91 0.009810094 ubox
91 95 0.043051544 ubox
91 98 0.103787730 ubox
91 101 0.045528325 ubox
91 104 0.035230844 ubox
91 107 0.010423426 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
