%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1061)
} def

/sequence { (\
GGAAAGUGCACCGGAGCCGCGCCUCCUCGAGUGCGCACUUCCCGCGUCAAUGACCGGGUGCUCAGGUGAACUGGCUUCGGCCAGUUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.025617891 ubox
1 9 0.016252472 ubox
1 12 0.005579096 ubox
1 76 0.004380481 ubox
1 82 0.003376190 ubox
1 95 0.063553030 ubox
1 98 0.070176012 ubox
1 101 0.093495157 ubox
1 104 0.098795252 ubox
1 107 0.025210084 ubox
2 7 0.016403613 ubox
2 9 0.009067765 ubox
2 11 0.005581276 ubox
2 63 0.003923216 ubox
2 75 0.005173397 ubox
2 81 0.003368099 ubox
2 86 0.004964258 ubox
2 95 0.033270211 ubox
2 98 0.037444325 ubox
2 101 0.049949408 ubox
2 104 0.050363720 ubox
2 107 0.016590916 ubox
3 7 0.016217208 ubox
3 62 0.003876227 ubox
3 85 0.003391913 ubox
3 86 0.004465511 ubox
4 86 0.009067582 ubox
5 72 0.052642561 ubox
5 85 0.008918406 ubox
5 86 0.003739755 ubox
6 36 0.013351534 ubox
6 63 0.017355057 ubox
6 71 0.063099157 ubox
6 95 0.151612188 ubox
6 98 0.171054104 ubox
6 101 0.170325589 ubox
6 104 0.167526939 ubox
6 107 0.058434726 ubox
7 35 0.013725598 ubox
7 68 0.004702046 ubox
7 69 0.045660934 ubox
7 70 0.058917437 ubox
7 83 0.009101107 ubox
7 87 0.009102315 ubox
7 88 0.010359024 ubox
7 89 0.012851137 ubox
7 90 0.012610866 ubox
7 91 0.006996626 ubox
7 92 0.014474788 ubox
7 93 0.013500029 ubox
7 94 0.147100665 ubox
7 96 0.111370501 ubox
7 97 0.157584718 ubox
7 99 0.108561393 ubox
7 100 0.157033861 ubox
7 102 0.094286071 ubox
7 103 0.154179988 ubox
7 105 0.077753480 ubox
7 106 0.054325519 ubox
8 34 0.014689042 ubox
8 61 0.024155553 ubox
8 67 0.005115883 ubox
8 82 0.009165817 ubox
8 86 0.005815300 ubox
8 95 0.129578470 ubox
8 98 0.126624217 ubox
8 101 0.114427811 ubox
8 104 0.087574121 ubox
8 107 0.010891633 ubox
9 33 0.014697545 ubox
9 60 0.024194946 ubox
9 66 0.005105873 ubox
9 68 0.995633217 ubox
9 91 0.007074017 ubox
10 32 0.014714328 ubox
10 59 0.024184415 ubox
10 67 0.998888173 ubox
11 31 0.014698395 ubox
11 58 0.024161762 ubox
11 65 0.004442424 ubox
11 66 0.999460880 ubox
11 80 0.011782390 ubox
12 29 0.011611811 ubox
12 57 0.023132451 ubox
12 65 0.995719331 ubox
12 79 0.011847424 ubox
13 26 0.012348898 ubox
13 28 0.005734854 ubox
13 41 0.014268222 ubox
13 42 0.020058325 ubox
13 63 0.024624087 ubox
13 78 0.011854553 ubox
14 25 0.013306319 ubox
14 28 0.006136698 ubox
14 40 0.015534338 ubox
14 41 0.020119247 ubox
14 62 0.011119872 ubox
14 63 0.990547748 ubox
14 77 0.011846553 ubox
15 24 0.013429324 ubox
15 27 0.006202956 ubox
15 39 0.016729089 ubox
15 40 0.019266020 ubox
15 62 0.999101533 ubox
15 76 0.011852067 ubox
16 22 0.005033098 ubox
16 23 0.012458413 ubox
16 26 0.006116401 ubox
16 38 0.017691969 ubox
16 39 0.015784408 ubox
16 61 0.999370287 ubox
16 75 0.011854681 ubox
17 21 0.006886884 ubox
17 60 0.992105496 ubox
17 74 0.011848643 ubox
18 35 0.108564657 ubox
18 58 0.162539807 ubox
18 60 0.078840050 ubox
18 73 0.011494013 ubox
19 34 0.112751222 ubox
19 36 0.992287608 ubox
19 38 0.006344635 ubox
19 59 0.006945043 ubox
19 61 0.005601702 ubox
19 72 0.006104163 ubox
20 33 0.112757797 ubox
20 35 0.993348471 ubox
20 58 0.004621051 ubox
20 60 0.006216028 ubox
20 68 0.004416918 ubox
21 32 0.112445519 ubox
21 34 0.993395603 ubox
21 59 0.011008374 ubox
21 67 0.004443788 ubox
22 31 0.098297654 ubox
22 33 0.993286485 ubox
22 58 0.011070203 ubox
22 66 0.004443303 ubox
23 29 0.050408174 ubox
23 31 0.993736680 ubox
23 33 0.005768409 ubox
23 57 0.011071440 ubox
23 65 0.004438958 ubox
24 29 0.012613595 ubox
24 30 0.994728589 ubox
24 31 0.017179183 ubox
24 56 0.010849472 ubox
24 64 0.004142157 ubox
25 29 0.986400518 ubox
25 31 0.020321655 ubox
25 66 0.004368468 ubox
26 31 0.011404243 ubox
26 65 0.004375236 ubox
27 53 0.011151262 ubox
27 64 0.004336121 ubox
28 52 0.011256624 ubox
29 51 0.010167255 ubox
29 63 0.005828860 ubox
30 62 0.005822076 ubox
31 48 0.003414739 ubox
31 61 0.005596090 ubox
32 49 0.004423847 ubox
32 60 0.005453493 ubox
33 47 0.010250756 ubox
33 48 0.004499787 ubox
33 59 0.004951242 ubox
34 46 0.011371648 ubox
35 45 0.011381948 ubox
35 61 0.006159658 ubox
36 44 0.011375648 ubox
36 60 0.007627573 ubox
36 68 0.005881876 ubox
37 59 0.042310293 ubox
37 67 0.009017658 ubox
38 58 0.023888854 ubox
38 60 0.032708785 ubox
38 66 0.009297614 ubox
39 57 0.006065854 ubox
39 58 0.003466904 ubox
39 60 0.030160008 ubox
39 65 0.009238562 ubox
40 58 0.012159277 ubox
40 60 0.008297955 ubox
40 64 0.009010108 ubox
41 57 0.018593678 ubox
41 58 0.977191539 ubox
42 56 0.014626084 ubox
42 57 0.999095359 ubox
42 58 0.021836604 ubox
43 56 0.999527611 ubox
43 57 0.021789103 ubox
43 58 0.004344004 ubox
44 54 0.006314633 ubox
44 55 0.999041157 ubox
45 52 0.017671480 ubox
45 56 0.008908848 ubox
46 51 0.011804924 ubox
46 54 0.999122950 ubox
46 55 0.007534920 ubox
47 52 0.008294488 ubox
47 53 0.998600189 ubox
48 52 0.990202503 ubox
59 68 0.003875894 ubox
59 96 0.003420911 ubox
60 67 0.006293530 ubox
60 95 0.003820864 ubox
61 66 0.006460621 ubox
62 69 0.004192035 ubox
62 92 0.010294917 ubox
63 68 0.004817200 ubox
63 91 0.010790468 ubox
64 72 0.005119145 ubox
65 71 0.005295900 ubox
67 87 0.008122953 ubox
67 88 0.007446564 ubox
67 89 0.003616912 ubox
68 86 0.009066223 ubox
68 95 0.003937975 ubox
69 85 0.016261977 ubox
69 86 0.934373570 ubox
70 85 0.990177612 ubox
70 86 0.019191622 ubox
71 84 0.997698609 ubox
72 83 0.998176492 ubox
73 82 0.999894077 ubox
74 81 0.999898697 ubox
75 79 0.011544646 ubox
75 80 0.999071495 ubox
76 80 0.003703536 ubox
84 95 0.040770169 ubox
84 98 0.015367419 ubox
84 101 0.012127403 ubox
84 104 0.010715157 ubox
85 91 0.003419569 ubox
85 92 0.009248862 ubox
85 93 0.006290343 ubox
85 94 0.041191263 ubox
85 97 0.015444803 ubox
85 100 0.012168363 ubox
85 103 0.010741507 ubox
85 106 0.003283030 ubox
86 90 0.006065209 ubox
86 91 0.013617411 ubox
86 92 0.011372415 ubox
86 93 0.040750788 ubox
86 94 0.005739881 ubox
86 96 0.015062916 ubox
86 97 0.003569731 ubox
86 99 0.011841571 ubox
86 102 0.010397968 ubox
86 105 0.003654692 ubox
91 95 0.048745376 ubox
91 98 0.110201937 ubox
91 101 0.045158061 ubox
91 104 0.032699556 ubox
91 107 0.009605608 ubox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
