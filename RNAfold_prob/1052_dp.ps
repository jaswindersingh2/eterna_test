%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1052)
} def

/sequence { (\
GGAAAAGGCAAAGCCAACUAGAAACUAGAAGACACAAAGUGUCAACAUGAAACAUGAAGCGAAACGCAGAUCUACUUCGGUAGGUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.009033331 ubox
1 15 0.029948615 ubox
1 18 0.011609300 ubox
1 19 0.021238239 ubox
1 25 0.003577102 ubox
1 46 0.020592692 ubox
1 53 0.020192536 ubox
1 60 0.016188267 ubox
1 65 0.018928278 ubox
1 67 0.021067957 ubox
1 86 0.021975448 ubox
1 95 0.397840764 ubox
1 98 0.400411205 ubox
1 101 0.409625573 ubox
1 104 0.411514993 ubox
1 107 0.103904704 ubox
2 9 0.010917438 ubox
2 14 0.029997374 ubox
2 15 0.004884130 ubox
2 18 0.024091173 ubox
2 19 0.006353081 ubox
2 46 0.011288248 ubox
2 53 0.010822661 ubox
2 60 0.013916228 ubox
2 65 0.014515015 ubox
2 67 0.013394470 ubox
2 85 0.009505432 ubox
2 86 0.021905492 ubox
2 95 0.209989714 ubox
2 98 0.210780863 ubox
2 101 0.215292202 ubox
2 104 0.214493188 ubox
2 107 0.069996112 ubox
3 19 0.011974865 ubox
3 48 0.003233351 ubox
3 55 0.003226738 ubox
3 85 0.015468748 ubox
4 19 0.006796680 ubox
4 48 0.003319689 ubox
5 19 0.008683420 ubox
5 48 0.003751474 ubox
6 19 0.009315138 ubox
6 26 0.005376141 ubox
6 48 0.004345508 ubox
7 14 0.017505275 ubox
7 15 0.993838881 ubox
7 18 0.008257325 ubox
7 25 0.005447078 ubox
7 65 0.003366826 ubox
7 67 0.003722809 ubox
7 86 0.006916221 ubox
7 95 0.024892471 ubox
7 98 0.025479173 ubox
7 101 0.024313418 ubox
7 104 0.024074034 ubox
7 107 0.008404873 ubox
8 14 0.995427736 ubox
8 15 0.009367534 ubox
8 60 0.015992435 ubox
8 65 0.003499457 ubox
8 67 0.018717368 ubox
8 85 0.006848522 ubox
8 95 0.011965407 ubox
8 98 0.011961632 ubox
8 101 0.010967486 ubox
8 104 0.010740041 ubox
8 107 0.003501357 ubox
9 13 0.988203355 ubox
9 59 0.016000920 ubox
9 66 0.018737241 ubox
9 84 0.006841569 ubox
9 91 0.015024791 ubox
12 19 0.007135466 ubox
13 18 0.007403774 ubox
13 60 0.017566243 ubox
13 67 0.008787172 ubox
13 81 0.004417344 ubox
13 85 0.003942703 ubox
13 95 0.012343439 ubox
13 98 0.012014179 ubox
13 101 0.011819786 ubox
13 104 0.011737595 ubox
13 107 0.004094842 ubox
14 59 0.017491875 ubox
14 61 0.003200161 ubox
14 66 0.008757768 ubox
14 80 0.004625484 ubox
14 84 0.004236483 ubox
14 91 0.011246928 ubox
15 21 0.004432440 ubox
15 79 0.004621434 ubox
15 83 0.004214580 ubox
15 91 0.017998613 ubox
16 26 0.003905087 ubox
17 26 0.007600752 ubox
17 81 0.004164866 ubox
18 28 0.966288115 ubox
18 56 0.005679308 ubox
18 80 0.004239687 ubox
18 91 0.050687543 ubox
19 23 0.004634620 ubox
19 24 0.007182628 ubox
19 27 0.972146050 ubox
19 28 0.010272650 ubox
19 29 0.005398273 ubox
19 30 0.004895629 ubox
19 56 0.004983514 ubox
19 79 0.003802692 ubox
19 87 0.004661841 ubox
19 88 0.005501737 ubox
19 89 0.005889497 ubox
19 90 0.048513412 ubox
19 91 0.005412780 ubox
19 92 0.005927549 ubox
19 93 0.005438049 ubox
19 94 0.004286603 ubox
19 96 0.005524556 ubox
19 97 0.005552839 ubox
19 99 0.005322317 ubox
19 100 0.005060701 ubox
19 102 0.005270768 ubox
19 103 0.005080515 ubox
19 105 0.005278812 ubox
19 106 0.005083663 ubox
20 26 0.971580002 ubox
20 55 0.005352360 ubox
21 25 0.950396431 ubox
21 26 0.012295469 ubox
21 43 0.005299152 ubox
21 53 0.007240672 ubox
21 78 0.004123527 ubox
21 95 0.024279191 ubox
21 98 0.020162955 ubox
21 101 0.020477816 ubox
21 104 0.020504794 ubox
21 107 0.007058795 ubox
22 26 0.006051050 ubox
22 42 0.005014771 ubox
22 77 0.004043838 ubox
23 76 0.003713803 ubox
24 40 0.005370600 ubox
25 39 0.005552228 ubox
25 49 0.013036966 ubox
25 91 0.051763566 ubox
26 30 0.005461030 ubox
26 38 0.005386500 ubox
26 44 0.003489189 ubox
26 49 0.011084430 ubox
26 74 0.004183903 ubox
26 87 0.004642719 ubox
26 88 0.005481518 ubox
26 89 0.005943702 ubox
26 90 0.050183035 ubox
26 91 0.005439300 ubox
26 92 0.005894870 ubox
26 93 0.005493296 ubox
26 94 0.004321120 ubox
26 96 0.005182555 ubox
26 97 0.005066907 ubox
26 99 0.005320322 ubox
26 100 0.005128349 ubox
26 102 0.005252213 ubox
26 103 0.005082923 ubox
26 105 0.005234809 ubox
26 106 0.005050248 ubox
27 48 0.011944675 ubox
27 73 0.004332180 ubox
28 43 0.004172062 ubox
28 46 0.028170502 ubox
28 72 0.004343599 ubox
28 95 0.020927815 ubox
28 98 0.020923618 ubox
28 101 0.021256534 ubox
28 104 0.021241454 ubox
28 107 0.007317956 ubox
29 42 0.003400519 ubox
29 48 0.003341133 ubox
29 71 0.004060707 ubox
30 42 0.007300660 ubox
30 48 0.004219438 ubox
31 43 0.998240622 ubox
31 95 0.003217908 ubox
31 98 0.003186354 ubox
31 101 0.003239652 ubox
31 104 0.003251681 ubox
32 40 0.010112797 ubox
32 42 0.999392802 ubox
33 39 0.010310882 ubox
33 41 0.999670541 ubox
34 40 0.997528031 ubox
34 42 0.006532047 ubox
35 39 0.987730483 ubox
35 41 0.007198059 ubox
35 56 0.003272346 ubox
36 40 0.006000938 ubox
39 46 0.003660717 ubox
39 53 0.008658884 ubox
39 55 0.004034961 ubox
39 67 0.005087981 ubox
39 95 0.006804337 ubox
39 98 0.003861790 ubox
39 101 0.003747599 ubox
39 104 0.003763294 ubox
40 45 0.003691221 ubox
40 52 0.008402127 ubox
40 54 0.004326140 ubox
40 66 0.005089037 ubox
40 94 0.006596213 ubox
40 96 0.003975918 ubox
40 99 0.003773544 ubox
40 102 0.003785899 ubox
41 53 0.004432209 ubox
41 65 0.005076751 ubox
41 95 0.004896453 ubox
41 98 0.004656664 ubox
41 101 0.004666897 ubox
41 104 0.003619526 ubox
42 50 0.009725178 ubox
42 52 0.003642820 ubox
42 57 0.003643565 ubox
42 64 0.004672748 ubox
42 92 0.006881561 ubox
42 94 0.004501596 ubox
42 97 0.004368507 ubox
42 100 0.004387388 ubox
42 103 0.003403007 ubox
43 49 0.011273357 ubox
43 56 0.004937043 ubox
43 59 0.003773792 ubox
43 91 0.007665149 ubox
44 48 0.010209483 ubox
44 55 0.005846142 ubox
45 55 0.004818774 ubox
46 56 0.963353910 ubox
46 59 0.003418592 ubox
46 91 0.007417590 ubox
47 55 0.967182275 ubox
48 52 0.004590925 ubox
48 54 0.966576229 ubox
48 56 0.004283124 ubox
48 57 0.024788675 ubox
48 58 0.010527387 ubox
48 68 0.004463719 ubox
48 96 0.013789903 ubox
48 99 0.012870843 ubox
48 102 0.013041540 ubox
48 105 0.012628309 ubox
49 53 0.951502185 ubox
49 55 0.005143612 ubox
49 60 0.003296396 ubox
49 67 0.004785369 ubox
49 95 0.015252117 ubox
49 98 0.014231831 ubox
49 101 0.014423964 ubox
49 104 0.013966997 ubox
50 55 0.016592832 ubox
51 55 0.006393818 ubox
53 59 0.004688791 ubox
53 61 0.003703983 ubox
53 91 0.007950736 ubox
55 62 0.003216143 ubox
55 66 0.004814329 ubox
55 68 0.007537602 ubox
55 96 0.014194686 ubox
55 99 0.013897820 ubox
55 102 0.012944241 ubox
55 105 0.012233653 ubox
56 60 0.003758807 ubox
56 65 0.007015474 ubox
56 67 0.006706585 ubox
56 95 0.015713040 ubox
56 98 0.015384111 ubox
56 101 0.014386845 ubox
56 104 0.013589246 ubox
59 65 0.015440249 ubox
59 67 0.990533276 ubox
59 95 0.005670586 ubox
59 98 0.003517006 ubox
60 66 0.991530494 ubox
60 91 0.003684188 ubox
61 65 0.927615317 ubox
61 67 0.019084876 ubox
61 95 0.008335090 ubox
65 91 0.021904525 ubox
67 91 0.005107571 ubox
69 78 0.003497010 ubox
69 86 0.997844817 ubox
70 77 0.003454027 ubox
70 85 0.999257169 ubox
71 84 0.999030120 ubox
72 83 0.999893898 ubox
73 82 0.999665562 ubox
74 81 0.999557308 ubox
75 79 0.011975232 ubox
75 80 0.998689359 ubox
76 80 0.004044671 ubox
84 95 0.006199299 ubox
85 92 0.012649905 ubox
85 94 0.006008722 ubox
86 91 0.017859928 ubox
91 95 0.071129362 ubox
91 98 0.144139468 ubox
91 101 0.047477393 ubox
91 104 0.015953869 ubox
91 107 0.003881552 ubox
1 95 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
