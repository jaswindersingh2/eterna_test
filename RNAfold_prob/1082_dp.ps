%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1082)
} def

/sequence { (\
GGAAAAAACUAUGAUAAAUUACCGCAAAGCGAGUAAAAAAUAUGAGGCAAAGCCCAUAAUUAUGAUAGGAUUAGCUUCGGCUAAUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.015868964 ubox
1 10 0.012028688 ubox
1 86 0.003990735 ubox
1 95 0.067673034 ubox
1 98 0.068141659 ubox
1 101 0.069656925 ubox
1 104 0.069958175 ubox
1 107 0.017672873 ubox
2 9 0.014154142 ubox
2 86 0.004436038 ubox
2 95 0.035719334 ubox
2 98 0.035876767 ubox
2 101 0.036607376 ubox
2 104 0.036468490 ubox
2 107 0.011901191 ubox
3 85 0.003329021 ubox
5 72 0.004005896 ubox
6 71 0.006010089 ubox
8 66 0.008361466 ubox
9 64 0.007658878 ubox
9 68 0.994100753 ubox
9 91 0.011369373 ubox
10 64 0.039664426 ubox
10 67 0.996632628 ubox
10 68 0.003260314 ubox
10 90 0.010815852 ubox
11 63 0.043689392 ubox
11 66 0.996612175 ubox
12 17 0.003354457 ubox
12 18 0.003855263 ubox
12 62 0.044901514 ubox
12 64 0.004746972 ubox
12 65 0.991769267 ubox
12 96 0.009074531 ubox
12 99 0.009022659 ubox
12 102 0.009209169 ubox
12 105 0.009226612 ubox
13 61 0.045906741 ubox
13 63 0.004971183 ubox
13 95 0.010023023 ubox
13 98 0.009970084 ubox
13 101 0.010178596 ubox
13 104 0.010200966 ubox
14 41 0.004890655 ubox
14 60 0.045498966 ubox
14 63 0.990147935 ubox
15 38 0.004030836 ubox
15 39 0.003192926 ubox
15 40 0.006275177 ubox
15 59 0.043700694 ubox
15 62 0.992993095 ubox
15 64 0.005195968 ubox
16 60 0.019708622 ubox
16 61 0.975896532 ubox
16 63 0.005225873 ubox
17 60 0.842628086 ubox
17 61 0.063033945 ubox
18 34 0.019733151 ubox
18 41 0.015081997 ubox
18 57 0.006944949 ubox
18 60 0.082891619 ubox
18 61 0.007502550 ubox
19 33 0.020108703 ubox
19 35 0.020287749 ubox
19 36 0.850093414 ubox
19 37 0.055786281 ubox
19 38 0.024660256 ubox
19 39 0.016857513 ubox
19 40 0.016067688 ubox
19 56 0.004678477 ubox
19 58 0.027095788 ubox
19 59 0.083545893 ubox
20 32 0.016532677 ubox
20 35 0.980797853 ubox
20 36 0.045357576 ubox
20 37 0.016527299 ubox
20 38 0.011411162 ubox
20 39 0.010248114 ubox
20 58 0.026855523 ubox
20 59 0.009361041 ubox
21 34 0.993276494 ubox
21 57 0.014717261 ubox
22 31 0.006091987 ubox
22 33 0.994454505 ubox
23 29 0.007136700 ubox
23 31 0.999147022 ubox
23 33 0.003817145 ubox
24 30 0.999617265 ubox
24 34 0.005409017 ubox
24 53 0.007040722 ubox
25 29 0.992360168 ubox
25 31 0.006385947 ubox
25 33 0.005574861 ubox
25 52 0.007076587 ubox
29 48 0.006991823 ubox
30 47 0.006908110 ubox
32 41 0.004029215 ubox
33 41 0.005648538 ubox
33 43 0.006593753 ubox
34 39 0.004640848 ubox
34 40 0.006623149 ubox
34 42 0.006882365 ubox
35 41 0.007026901 ubox
36 41 0.007909935 ubox
36 60 0.003934836 ubox
36 61 0.010056575 ubox
36 63 0.004879325 ubox
37 41 0.009158166 ubox
37 43 0.003875779 ubox
37 60 0.023927609 ubox
37 61 0.021000113 ubox
37 63 0.007543921 ubox
38 43 0.004207914 ubox
38 57 0.003754696 ubox
38 60 0.029608765 ubox
38 61 0.084055319 ubox
38 63 0.003443447 ubox
39 57 0.005226831 ubox
39 60 0.124370311 ubox
39 61 0.060802696 ubox
40 57 0.009379949 ubox
40 60 0.092013388 ubox
40 61 0.008969764 ubox
40 63 0.003295848 ubox
41 56 0.005732048 ubox
41 58 0.931704505 ubox
41 59 0.074630187 ubox
42 57 0.988599914 ubox
42 60 0.004181020 ubox
43 56 0.995159354 ubox
43 58 0.010224978 ubox
43 59 0.004911288 ubox
44 55 0.997362563 ubox
44 57 0.010645839 ubox
45 57 0.003656046 ubox
46 53 0.030572636 ubox
46 54 0.999210314 ubox
46 55 0.014787027 ubox
47 53 0.999317681 ubox
47 54 0.013809912 ubox
48 52 0.992068366 ubox
55 64 0.005639538 ubox
56 63 0.005555359 ubox
57 62 0.005154135 ubox
60 93 0.004065494 ubox
60 94 0.003240132 ubox
61 67 0.003880898 ubox
61 92 0.004435833 ubox
61 93 0.003685808 ubox
62 66 0.003536650 ubox
63 90 0.003873282 ubox
63 91 0.004156922 ubox
63 92 0.008272807 ubox
63 93 0.004454363 ubox
63 96 0.004148232 ubox
64 95 0.004632656 ubox
66 88 0.006439297 ubox
66 89 0.013531550 ubox
66 90 0.003421810 ubox
68 86 0.006295115 ubox
69 85 0.004624949 ubox
69 86 0.998107938 ubox
70 85 0.999340913 ubox
71 84 0.998901002 ubox
72 83 0.999250220 ubox
73 82 0.999666188 ubox
74 81 0.999978244 ubox
75 79 0.011547546 ubox
75 80 0.999156566 ubox
76 80 0.003704504 ubox
85 92 0.008486863 ubox
86 91 0.011310072 ubox
91 95 0.043055362 ubox
91 98 0.103788318 ubox
91 101 0.045524389 ubox
91 104 0.035224448 ubox
91 107 0.010421558 ubox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
