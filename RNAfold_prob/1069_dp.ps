%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1069)
} def

/sequence { (\
GGAAAAAAGCCCACUUCACUUUGAGAAACUCAAAAGAAAACAUGACACAAAGUGCAUGAGAAGAGGGCGGAUAAUUUCGAUUAUCCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 78 0.011184595 ubox
1 86 0.023045359 ubox
1 95 0.067356056 ubox
1 98 0.067773172 ubox
1 101 0.069313677 ubox
1 104 0.069624157 ubox
1 107 0.017578078 ubox
2 77 0.011184791 ubox
2 78 0.010352042 ubox
2 85 0.022875394 ubox
2 95 0.035558111 ubox
2 98 0.035681170 ubox
2 101 0.036441418 ubox
2 104 0.036302043 ubox
2 107 0.011845405 ubox
3 76 0.011121650 ubox
3 77 0.010360723 ubox
3 84 0.021550333 ubox
4 75 0.010301387 ubox
4 76 0.010259686 ubox
4 82 0.004273309 ubox
5 75 0.009466959 ubox
5 81 0.003876059 ubox
5 82 0.009585236 ubox
6 81 0.008888099 ubox
9 68 0.998723288 ubox
10 67 0.999974280 ubox
11 66 0.999978900 ubox
11 67 0.003466861 ubox
12 65 0.998754978 ubox
12 66 0.004403071 ubox
14 36 0.005650759 ubox
14 60 0.003471508 ubox
14 63 0.995134977 ubox
15 35 0.005657854 ubox
15 38 0.026659504 ubox
15 39 0.003891465 ubox
15 40 0.004349486 ubox
15 59 0.003270858 ubox
15 61 0.004126509 ubox
15 62 0.998298001 ubox
16 34 0.004017049 ubox
16 37 0.031698552 ubox
16 38 0.004137123 ubox
16 39 0.005447221 ubox
16 59 0.004232998 ubox
16 60 0.004937463 ubox
16 61 0.998324361 ubox
16 64 0.009259529 ubox
17 36 0.032987778 ubox
17 54 0.005926285 ubox
17 58 0.004290735 ubox
17 60 0.997368061 ubox
17 63 0.009348148 ubox
18 53 0.009041599 ubox
19 25 0.006750498 ubox
19 36 0.589364419 ubox
19 52 0.009089802 ubox
19 58 0.032754120 ubox
19 60 0.010749727 ubox
20 24 0.006124144 ubox
20 33 0.022475217 ubox
20 34 0.763219831 ubox
20 35 0.514064305 ubox
20 36 0.024185749 ubox
20 37 0.021449083 ubox
20 38 0.013895607 ubox
20 39 0.009719911 ubox
20 40 0.005813851 ubox
20 51 0.009059774 ubox
20 59 0.012751408 ubox
21 27 0.003275797 ubox
21 28 0.004902032 ubox
21 32 0.017829787 ubox
21 33 0.885292620 ubox
21 34 0.418055000 ubox
21 35 0.019817543 ubox
21 36 0.019104012 ubox
21 37 0.012321710 ubox
21 38 0.008479223 ubox
21 39 0.005509915 ubox
21 50 0.008978901 ubox
21 59 0.003183001 ubox
22 27 0.005665136 ubox
22 32 0.949875059 ubox
22 33 0.296804131 ubox
22 34 0.012854350 ubox
22 35 0.009410174 ubox
22 36 0.008351550 ubox
22 37 0.005419785 ubox
22 38 0.003936181 ubox
22 49 0.008906496 ubox
23 29 0.004561356 ubox
23 31 0.997864141 ubox
23 48 0.008855797 ubox
24 30 0.996555207 ubox
25 29 0.974635795 ubox
25 30 0.010777453 ubox
25 31 0.036724785 ubox
25 46 0.005718979 ubox
26 30 0.032033515 ubox
29 36 0.007951351 ubox
30 35 0.007401609 ubox
30 37 0.016784254 ubox
30 45 0.005435696 ubox
31 36 0.017631891 ubox
31 44 0.005503817 ubox
32 43 0.005118312 ubox
36 41 0.016450870 ubox
40 53 0.004775091 ubox
41 52 0.004919497 ubox
41 54 0.019281135 ubox
41 58 0.993698501 ubox
42 53 0.019343392 ubox
42 57 0.998314182 ubox
43 50 0.003341716 ubox
43 52 0.019266340 ubox
43 56 0.998894289 ubox
44 55 0.999149080 ubox
45 53 0.207190273 ubox
46 52 0.207687211 ubox
46 54 0.976358927 ubox
47 53 0.974484331 ubox
48 52 0.964925291 ubox
48 54 0.014077063 ubox
49 53 0.011512243 ubox
68 79 0.005200275 ubox
69 78 0.018253254 ubox
69 86 0.998445913 ubox
70 77 0.018145247 ubox
70 78 0.012332418 ubox
70 85 0.999511987 ubox
71 76 0.017708423 ubox
71 77 0.012219170 ubox
71 84 0.999274706 ubox
72 83 0.998936714 ubox
73 81 0.006675806 ubox
73 82 0.998161653 ubox
74 81 0.968475518 ubox
74 82 0.013358648 ubox
75 79 0.034995052 ubox
75 80 0.884974945 ubox
75 94 0.006977504 ubox
76 80 0.029029814 ubox
76 93 0.008215217 ubox
77 92 0.008488633 ubox
78 91 0.008521239 ubox
79 85 0.003203457 ubox
81 88 0.003723409 ubox
82 87 0.003435715 ubox
84 92 0.003676516 ubox
85 91 0.003898277 ubox
86 91 0.006185308 ubox
91 95 0.043031840 ubox
91 98 0.103765061 ubox
91 101 0.045529542 ubox
91 104 0.035240799 ubox
91 107 0.010426655 ubox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
20 34 0.9500000 lbox
21 33 0.9500000 lbox
22 32 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
