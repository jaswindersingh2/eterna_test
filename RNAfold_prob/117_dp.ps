%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (117)
} def

/sequence { (\
GGAAAGCGCGCGGCGCAAAAGCGAAAAGCGCGCGGCGGAAACGCGGCGCGAGCGCGCGGCGCGAAGACGCCUGGCUUCGGCCGGGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.051885030 ubox
1 9 0.006109350 ubox
1 36 0.044626634 ubox
1 60 0.018919009 ubox
1 62 0.040518537 ubox
1 68 0.418455037 ubox
1 86 0.004362567 ubox
1 95 0.062401840 ubox
1 98 0.063155934 ubox
1 101 0.064880450 ubox
1 104 0.065204228 ubox
1 107 0.016470001 ubox
2 7 0.026218541 ubox
2 9 0.004264221 ubox
2 36 0.033659386 ubox
2 60 0.016965724 ubox
2 62 0.024699265 ubox
2 68 0.300254844 ubox
2 95 0.031015477 ubox
2 98 0.031276792 ubox
2 101 0.031982267 ubox
2 104 0.031874697 ubox
2 107 0.010403751 ubox
6 16 0.004693331 ubox
6 31 0.003381652 ubox
6 33 0.120638009 ubox
6 36 0.007630582 ubox
6 57 0.067021028 ubox
6 60 0.021891899 ubox
6 62 0.171467645 ubox
6 68 0.065073220 ubox
6 70 0.004037713 ubox
6 95 0.033235054 ubox
6 98 0.033347055 ubox
6 101 0.033264601 ubox
6 104 0.032584454 ubox
6 107 0.011358096 ubox
7 15 0.004698839 ubox
7 30 0.003409618 ubox
7 32 0.120779530 ubox
7 34 0.005677101 ubox
7 35 0.006910096 ubox
7 37 0.005444755 ubox
7 38 0.007373606 ubox
7 56 0.067092127 ubox
7 58 0.026389230 ubox
7 59 0.017203662 ubox
7 61 0.171630284 ubox
7 63 0.942585377 ubox
7 66 0.059090578 ubox
7 69 0.004981902 ubox
7 91 0.011170865 ubox
8 14 0.004700060 ubox
8 29 0.003627337 ubox
8 31 0.120795872 ubox
8 33 0.006583670 ubox
8 36 0.005525837 ubox
8 55 0.067097984 ubox
8 57 0.030059682 ubox
8 60 0.171442403 ubox
8 62 0.953274043 ubox
8 68 0.013712941 ubox
8 95 0.007533439 ubox
8 98 0.007527592 ubox
8 101 0.007520025 ubox
8 104 0.007449156 ubox
9 13 0.004666060 ubox
9 28 0.003643046 ubox
9 30 0.120796142 ubox
9 32 0.006588655 ubox
9 34 0.006614326 ubox
9 35 0.004822592 ubox
9 37 0.014700945 ubox
9 54 0.067098148 ubox
9 56 0.030120190 ubox
9 58 0.088508379 ubox
9 59 0.147276555 ubox
9 61 0.953295896 ubox
9 63 0.199946617 ubox
9 66 0.007768336 ubox
10 29 0.120802610 ubox
10 31 0.006586591 ubox
10 33 0.007178142 ubox
10 36 0.014963937 ubox
10 53 0.067092665 ubox
10 55 0.030319834 ubox
10 57 0.124559431 ubox
10 60 0.953282640 ubox
10 62 0.202801291 ubox
11 28 0.120778053 ubox
11 30 0.006584877 ubox
11 32 0.007170369 ubox
11 34 0.003794528 ubox
11 35 0.014955872 ubox
11 52 0.067004566 ubox
11 54 0.030317987 ubox
11 56 0.124583915 ubox
11 58 0.123382659 ubox
11 59 0.951511644 ubox
11 61 0.202812330 ubox
12 29 0.006347296 ubox
12 31 0.005182479 ubox
12 33 0.003720833 ubox
12 53 0.029710645 ubox
12 55 0.093375197 ubox
12 57 0.133077805 ubox
12 60 0.202791215 ubox
13 22 0.028947286 ubox
13 31 0.006512491 ubox
13 33 0.015076663 ubox
13 53 0.038166500 ubox
13 55 0.164592121 ubox
13 57 0.947866190 ubox
13 62 0.010865021 ubox
14 21 0.028997033 ubox
14 23 0.140018619 ubox
14 30 0.008190550 ubox
14 32 0.015107424 ubox
14 50 0.004742804 ubox
14 52 0.037002798 ubox
14 54 0.184176545 ubox
14 56 0.948250265 ubox
14 58 0.209969915 ubox
14 61 0.011071219 ubox
15 22 0.147170887 ubox
15 29 0.008793248 ubox
15 31 0.015108463 ubox
15 49 0.004501004 ubox
15 53 0.184517373 ubox
15 55 0.939964774 ubox
15 57 0.210314732 ubox
15 60 0.011091914 ubox
16 21 0.147174032 ubox
16 23 0.008630255 ubox
16 28 0.009141441 ubox
16 30 0.015100131 ubox
16 48 0.004485278 ubox
16 50 0.011070130 ubox
16 52 0.184265976 ubox
16 54 0.937392705 ubox
16 56 0.210207852 ubox
16 59 0.011085198 ubox
21 29 0.686552782 ubox
21 31 0.027077205 ubox
21 49 0.011045750 ubox
21 53 0.405770679 ubox
21 55 0.242780766 ubox
21 57 0.004238580 ubox
22 28 0.716603432 ubox
22 30 0.028059597 ubox
22 48 0.010814918 ubox
22 50 0.012319662 ubox
22 52 0.404320444 ubox
22 54 0.248873400 ubox
22 56 0.004435935 ubox
23 29 0.038441333 ubox
23 47 0.005236819 ubox
23 49 0.005137953 ubox
23 53 0.276508686 ubox
23 55 0.009872595 ubox
28 47 0.017054933 ubox
28 49 0.112781875 ubox
28 53 0.140022963 ubox
28 55 0.007817591 ubox
28 57 0.003251555 ubox
29 46 0.017448529 ubox
29 48 0.112707023 ubox
29 50 0.685865909 ubox
29 52 0.130537042 ubox
29 54 0.007723029 ubox
29 56 0.003268460 ubox
30 47 0.112100607 ubox
30 49 0.981932440 ubox
30 53 0.013339309 ubox
30 55 0.003300588 ubox
31 45 0.057882730 ubox
31 46 0.097620972 ubox
31 48 0.982541572 ubox
31 50 0.074483050 ubox
31 52 0.012211213 ubox
31 54 0.003295090 ubox
32 44 0.079738034 ubox
32 47 0.982863371 ubox
32 49 0.077546160 ubox
32 53 0.003441725 ubox
33 43 0.079858336 ubox
33 45 0.072144607 ubox
33 46 0.982484486 ubox
33 48 0.077554656 ubox
33 52 0.003430725 ubox
34 42 0.079839595 ubox
34 44 0.051605344 ubox
34 47 0.077406169 ubox
34 68 0.011206474 ubox
34 71 0.027640138 ubox
34 95 0.005682945 ubox
34 98 0.007387238 ubox
34 101 0.007558879 ubox
34 104 0.007629567 ubox
35 42 0.003986802 ubox
35 44 0.984736240 ubox
35 49 0.003465655 ubox
35 62 0.004371844 ubox
35 68 0.011548692 ubox
35 70 0.030757266 ubox
35 95 0.003411740 ubox
35 98 0.006304243 ubox
35 101 0.006338997 ubox
35 104 0.006388816 ubox
36 43 0.986439553 ubox
36 45 0.074697690 ubox
36 48 0.003485092 ubox
36 61 0.004331440 ubox
36 63 0.007114674 ubox
36 66 0.015867310 ubox
36 69 0.032269852 ubox
36 91 0.004009180 ubox
37 42 0.983732771 ubox
37 44 0.074490183 ubox
37 47 0.003471667 ubox
37 60 0.003866772 ubox
37 62 0.007199072 ubox
37 68 0.057189966 ubox
37 95 0.007301913 ubox
37 98 0.007321711 ubox
37 101 0.007452528 ubox
37 104 0.006095087 ubox
38 42 0.010931208 ubox
38 68 0.016749814 ubox
38 95 0.006573343 ubox
38 98 0.006566099 ubox
38 101 0.006612703 ubox
38 104 0.004009190 ubox
42 58 0.004282686 ubox
42 61 0.020970152 ubox
42 63 0.117714045 ubox
43 57 0.004394453 ubox
43 60 0.021431382 ubox
43 62 0.119882544 ubox
44 56 0.004394303 ubox
44 59 0.021435481 ubox
44 61 0.119894181 ubox
45 55 0.004307445 ubox
45 60 0.120016389 ubox
46 53 0.009193369 ubox
46 57 0.022314619 ubox
47 52 0.009284611 ubox
47 56 0.022329646 ubox
47 58 0.119921109 ubox
48 53 0.003816228 ubox
48 55 0.022355175 ubox
48 57 0.119954321 ubox
49 54 0.022325982 ubox
49 56 0.119950442 ubox
50 55 0.117698794 ubox
52 62 0.003762598 ubox
53 61 0.003768100 ubox
54 60 0.003768880 ubox
54 86 0.005141629 ubox
55 59 0.003741590 ubox
55 85 0.005149116 ubox
57 83 0.005454453 ubox
58 68 0.008254547 ubox
58 71 0.003363902 ubox
58 82 0.007484531 ubox
58 95 0.004616780 ubox
58 98 0.004355919 ubox
59 68 0.008918718 ubox
59 70 0.003743664 ubox
59 81 0.007489440 ubox
60 66 0.012664932 ubox
60 69 0.003925176 ubox
60 80 0.007483896 ubox
61 68 0.007184719 ubox
61 95 0.003808127 ubox
62 79 0.007474973 ubox
62 91 0.006645415 ubox
63 68 0.020256243 ubox
63 78 0.007508224 ubox
63 95 0.005353452 ubox
64 77 0.007505780 ubox
65 76 0.007502925 ubox
66 75 0.007462987 ubox
66 86 0.004061631 ubox
66 95 0.012003440 ubox
66 98 0.007788647 ubox
66 101 0.007428308 ubox
66 104 0.006713167 ubox
68 74 0.005764548 ubox
68 91 0.033665995 ubox
69 86 0.998338869 ubox
70 85 0.999462669 ubox
71 84 0.999568011 ubox
72 83 0.999066662 ubox
73 82 0.999926743 ubox
74 81 0.999953001 ubox
75 79 0.011543438 ubox
75 80 0.999125754 ubox
76 80 0.003703626 ubox
84 95 0.003605440 ubox
86 91 0.006262077 ubox
91 95 0.043123580 ubox
91 98 0.103860752 ubox
91 101 0.045519052 ubox
91 104 0.035197922 ubox
91 107 0.010411673 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 29 0.9500000 lbox
22 28 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
