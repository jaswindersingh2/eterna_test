%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (145)
} def

/sequence { (\
GGAAAAAAGUGCUAUAGGGACGGACAAAGAAUGAAAAUAUCGGUGCGAUCGCAAAUAGAGACAAAAAAGAUUAUAUUCGUAUAAUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.017773616 ubox
1 12 0.024219808 ubox
1 13 0.017017739 ubox
1 25 0.004708572 ubox
1 52 0.004367640 ubox
1 62 0.063513664 ubox
1 86 0.004365779 ubox
1 95 0.065902521 ubox
1 98 0.066618996 ubox
1 101 0.069246856 ubox
1 104 0.073320817 ubox
1 107 0.018747139 ubox
2 10 0.007032985 ubox
2 12 0.018168151 ubox
2 50 0.005589730 ubox
2 52 0.003278933 ubox
2 62 0.017574843 ubox
2 78 0.004411180 ubox
2 86 0.005812666 ubox
2 95 0.034781323 ubox
2 98 0.035036658 ubox
2 101 0.036575898 ubox
2 104 0.038082757 ubox
2 107 0.012462316 ubox
3 10 0.026580439 ubox
3 49 0.005414393 ubox
3 77 0.004378911 ubox
3 85 0.004976631 ubox
4 10 0.012575366 ubox
4 13 0.004225040 ubox
4 76 0.003968042 ubox
5 10 0.012899238 ubox
5 56 0.004814384 ubox
6 10 0.007762299 ubox
6 13 0.004550353 ubox
6 15 0.003503564 ubox
6 56 0.004307981 ubox
7 13 0.003567386 ubox
7 56 0.018482890 ubox
8 13 0.003868806 ubox
8 15 0.007649861 ubox
8 56 0.013113457 ubox
9 15 0.006476171 ubox
9 21 0.043047625 ubox
9 25 0.017173604 ubox
9 46 0.013758991 ubox
9 52 0.018412475 ubox
9 56 0.009477605 ubox
9 62 0.780842484 ubox
9 82 0.005977649 ubox
9 95 0.091280770 ubox
9 98 0.097259809 ubox
9 101 0.098335782 ubox
9 104 0.099080608 ubox
9 107 0.034624865 ubox
10 14 0.006166963 ubox
10 16 0.004494428 ubox
10 20 0.043042768 ubox
10 22 0.004171192 ubox
10 24 0.017118115 ubox
10 26 0.005877160 ubox
10 45 0.013742987 ubox
10 51 0.018407044 ubox
10 53 0.105110204 ubox
10 54 0.004742543 ubox
10 55 0.008252654 ubox
10 57 0.006429285 ubox
10 58 0.006514368 ubox
10 59 0.075453183 ubox
10 60 0.138493497 ubox
10 61 0.772719773 ubox
10 63 0.116488698 ubox
10 64 0.006732696 ubox
10 81 0.006141694 ubox
10 87 0.005318422 ubox
10 88 0.005876942 ubox
10 89 0.006479090 ubox
10 90 0.006372634 ubox
10 91 0.003673087 ubox
10 92 0.007805876 ubox
10 93 0.008274471 ubox
10 94 0.088458989 ubox
10 96 0.058083737 ubox
10 97 0.089383017 ubox
10 99 0.054095504 ubox
10 100 0.090435809 ubox
10 102 0.054470135 ubox
10 103 0.090976770 ubox
10 105 0.045665016 ubox
10 106 0.032116976 ubox
11 15 0.004234014 ubox
11 21 0.006196563 ubox
11 25 0.006787244 ubox
11 44 0.013851701 ubox
11 46 0.004191096 ubox
11 50 0.017873424 ubox
11 52 0.114233181 ubox
11 56 0.006758623 ubox
11 62 0.130501664 ubox
11 80 0.006170416 ubox
11 95 0.069219673 ubox
11 98 0.065789603 ubox
11 101 0.066421255 ubox
11 104 0.051439327 ubox
11 107 0.006403591 ubox
12 17 0.004981179 ubox
12 18 0.042637042 ubox
12 19 0.013152649 ubox
12 22 0.015087426 ubox
12 23 0.010755269 ubox
12 29 0.003446027 ubox
12 43 0.013908285 ubox
12 45 0.004171282 ubox
12 51 0.114110003 ubox
12 58 0.964451977 ubox
12 60 0.124929009 ubox
12 79 0.006106063 ubox
12 91 0.034287198 ubox
13 17 0.038434221 ubox
13 18 0.012797761 ubox
13 20 0.004066987 ubox
13 22 0.010659587 ubox
13 28 0.003358939 ubox
13 42 0.013644555 ubox
13 48 0.003202992 ubox
13 53 0.003942764 ubox
13 54 0.007396316 ubox
13 55 0.007084525 ubox
13 57 0.966869436 ubox
13 58 0.014203390 ubox
13 59 0.117317203 ubox
13 60 0.003714284 ubox
13 83 0.003754383 ubox
13 90 0.033076451 ubox
13 91 0.004901721 ubox
13 92 0.003924616 ubox
13 93 0.005543853 ubox
13 94 0.005582428 ubox
13 96 0.004553945 ubox
13 97 0.005354587 ubox
13 99 0.004632221 ubox
13 100 0.005402296 ubox
13 102 0.003535398 ubox
14 40 0.012046867 ubox
14 49 0.076832780 ubox
14 56 0.963292810 ubox
14 82 0.003934519 ubox
15 39 0.012280259 ubox
15 48 0.076909304 ubox
15 53 0.048603030 ubox
15 54 0.157512233 ubox
15 55 0.911269821 ubox
15 57 0.084931599 ubox
15 58 0.005328933 ubox
15 81 0.003951575 ubox
15 88 0.007170304 ubox
15 89 0.004311322 ubox
15 90 0.004986016 ubox
15 92 0.003456384 ubox
16 38 0.012173027 ubox
16 49 0.007769248 ubox
16 56 0.088008026 ubox
16 80 0.003900566 ubox
17 25 0.005331373 ubox
17 41 0.004825947 ubox
17 46 0.023797749 ubox
17 50 0.030835764 ubox
17 52 0.850657166 ubox
17 95 0.003436282 ubox
18 25 0.008313986 ubox
18 40 0.004661752 ubox
18 46 0.103802970 ubox
18 49 0.030498495 ubox
18 50 0.076822152 ubox
18 52 0.449614110 ubox
18 78 0.003743480 ubox
18 95 0.003792579 ubox
19 44 0.016898528 ubox
19 46 0.006277476 ubox
19 49 0.068037098 ubox
19 50 0.985911155 ubox
19 52 0.019582128 ubox
19 77 0.003562338 ubox
20 44 0.106519787 ubox
20 49 0.983159511 ubox
20 76 0.003306314 ubox
21 29 0.003750808 ubox
21 33 0.009727861 ubox
21 42 0.019520047 ubox
21 43 0.107322278 ubox
21 47 0.962299034 ubox
21 51 0.023793547 ubox
22 32 0.009161814 ubox
22 41 0.020017926 ubox
22 46 0.962686916 ubox
22 50 0.023881625 ubox
23 40 0.013961581 ubox
23 41 0.105615540 ubox
23 44 0.005088547 ubox
23 46 0.236803711 ubox
23 49 0.022292699 ubox
23 50 0.004747702 ubox
24 38 0.003664617 ubox
24 40 0.100040014 ubox
24 44 0.956164096 ubox
24 49 0.004954381 ubox
25 29 0.005057221 ubox
25 33 0.033026790 ubox
25 42 0.033448312 ubox
25 43 0.956185072 ubox
25 45 0.244311128 ubox
25 47 0.005134208 ubox
26 32 0.031738742 ubox
26 38 0.030307951 ubox
26 40 0.018591422 ubox
26 44 0.242623606 ubox
27 32 0.006730766 ubox
27 38 0.010680554 ubox
27 40 0.069460472 ubox
27 44 0.005175247 ubox
28 32 0.009248958 ubox
28 38 0.054849846 ubox
28 40 0.438304876 ubox
29 38 0.057406698 ubox
29 40 0.085525027 ubox
29 41 0.608517043 ubox
29 46 0.003656855 ubox
30 38 0.156586184 ubox
30 40 0.577522376 ubox
30 44 0.003834566 ubox
31 38 0.624856575 ubox
31 40 0.193201309 ubox
31 44 0.003418948 ubox
31 80 0.008029228 ubox
32 36 0.062416209 ubox
32 37 0.644822373 ubox
32 39 0.243278844 ubox
32 42 0.225114420 ubox
32 43 0.003590200 ubox
32 63 0.014672725 ubox
32 67 0.003820873 ubox
32 79 0.008232677 ubox
32 87 0.010324285 ubox
33 38 0.193134871 ubox
33 40 0.007251590 ubox
33 41 0.231550547 ubox
33 62 0.016232411 ubox
33 78 0.008439461 ubox
33 86 0.011438705 ubox
33 95 0.003403172 ubox
33 98 0.003431185 ubox
33 101 0.003404857 ubox
33 104 0.003346272 ubox
34 38 0.026690832 ubox
34 40 0.221891294 ubox
34 77 0.008420726 ubox
34 85 0.011291227 ubox
35 40 0.013158579 ubox
35 76 0.008049683 ubox
36 40 0.004190735 ubox
37 74 0.007035769 ubox
37 82 0.010985223 ubox
38 42 0.003760675 ubox
38 57 0.019733825 ubox
38 59 0.003593713 ubox
38 61 0.004991119 ubox
38 73 0.007140184 ubox
38 81 0.011341489 ubox
39 49 0.010416020 ubox
39 56 0.020296048 ubox
39 71 0.006672247 ubox
39 72 0.005338917 ubox
39 80 0.011320368 ubox
40 48 0.012676552 ubox
40 55 0.019827299 ubox
40 59 0.026579605 ubox
40 61 0.006696676 ubox
40 70 0.008258605 ubox
40 79 0.010046696 ubox
41 47 0.012892674 ubox
41 51 0.006358148 ubox
41 58 0.028267796 ubox
41 60 0.007273110 ubox
41 69 0.008322052 ubox
41 79 0.006055348 ubox
41 91 0.003175662 ubox
42 46 0.012069171 ubox
42 50 0.006691959 ubox
42 56 0.004009648 ubox
42 77 0.009702034 ubox
42 78 0.006119813 ubox
43 49 0.006456941 ubox
43 52 0.018564811 ubox
43 56 0.004335777 ubox
43 76 0.010804337 ubox
43 77 0.004837819 ubox
43 82 0.005800540 ubox
44 48 0.005980324 ubox
44 51 0.018520140 ubox
44 53 0.040409519 ubox
44 63 0.004398147 ubox
44 75 0.011413278 ubox
44 81 0.005945902 ubox
45 50 0.017647294 ubox
45 52 0.043211137 ubox
45 62 0.004677616 ubox
45 74 0.011208121 ubox
45 80 0.006015620 ubox
46 51 0.043158377 ubox
46 79 0.006020907 ubox
47 62 0.008552610 ubox
47 72 0.011769110 ubox
47 78 0.006009569 ubox
48 71 0.012076036 ubox
48 77 0.005859126 ubox
49 59 0.013893902 ubox
49 61 0.012873850 ubox
49 70 0.012192696 ubox
50 58 0.014719089 ubox
50 60 0.013745892 ubox
50 69 0.012195280 ubox
51 62 0.004107068 ubox
52 58 0.011196759 ubox
52 60 0.005328009 ubox
55 76 0.003516329 ubox
56 61 0.004264995 ubox
56 63 0.005300674 ubox
56 64 0.003957332 ubox
56 65 0.005439126 ubox
56 75 0.003567145 ubox
57 74 0.003521948 ubox
58 62 0.011002358 ubox
58 95 0.006389072 ubox
58 98 0.008581692 ubox
60 86 0.009757166 ubox
60 95 0.050552085 ubox
60 98 0.009806009 ubox
60 101 0.003928114 ubox
60 104 0.003787796 ubox
61 80 0.003430275 ubox
61 85 0.009460603 ubox
62 69 0.006609647 ubox
62 79 0.003554995 ubox
62 91 0.022011800 ubox
65 82 0.003453766 ubox
67 80 0.004943766 ubox
68 80 0.003278288 ubox
69 77 0.003256816 ubox
69 78 0.030234590 ubox
69 86 0.996837652 ubox
70 76 0.003548076 ubox
70 77 0.029846304 ubox
70 85 0.997846669 ubox
71 75 0.003291990 ubox
71 84 0.997335610 ubox
72 81 0.013335214 ubox
72 83 0.997403977 ubox
73 80 0.016067254 ubox
73 82 0.997225788 ubox
74 79 0.016978836 ubox
74 81 0.987757125 ubox
74 83 0.016572657 ubox
75 80 0.890273008 ubox
75 82 0.020027409 ubox
76 81 0.022817536 ubox
76 93 0.018061594 ubox
77 92 0.020720129 ubox
78 91 0.020994197 ubox
79 86 0.007241939 ubox
79 95 0.006710984 ubox
79 98 0.011893797 ubox
79 101 0.004232374 ubox
79 104 0.003385066 ubox
80 89 0.004831349 ubox
80 94 0.006507759 ubox
80 97 0.011545982 ubox
80 100 0.004104227 ubox
80 103 0.003284086 ubox
85 92 0.020459907 ubox
86 91 0.022574762 ubox
91 95 0.044910035 ubox
91 98 0.105934229 ubox
91 101 0.045393618 ubox
91 104 0.034367464 ubox
91 107 0.010144968 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
