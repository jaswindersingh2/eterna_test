%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1058)
} def

/sequence { (\
GGAAACACGGGUACUACCGAGCCUCCACGAGCGCUCUUCCGCCGCGUCAAUGACCGGCCGUAGAACCCAGAGGUUUUCGAACCUCUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.282340281 ubox
1 8 0.333129860 ubox
1 26 0.006072967 ubox
1 40 0.022304199 ubox
1 67 0.006533804 ubox
1 68 0.012935700 ubox
1 78 0.083203349 ubox
1 86 0.004111699 ubox
1 95 0.062826370 ubox
1 98 0.063162109 ubox
1 101 0.062987158 ubox
1 104 0.063219412 ubox
1 107 0.015960207 ubox
2 6 0.046034113 ubox
2 8 0.080224096 ubox
2 25 0.006077924 ubox
2 39 0.022324070 ubox
2 66 0.006568581 ubox
2 67 0.012804378 ubox
2 77 0.083454194 ubox
2 78 0.006039877 ubox
2 85 0.003615036 ubox
2 95 0.032901083 ubox
2 98 0.031944894 ubox
2 101 0.032454705 ubox
2 104 0.032327011 ubox
2 107 0.010548157 ubox
3 24 0.006003151 ubox
3 38 0.022085572 ubox
3 76 0.083565477 ubox
3 77 0.005480355 ubox
4 37 0.019898604 ubox
4 75 0.083572425 ubox
4 76 0.004790937 ubox
5 74 0.083664092 ubox
5 75 0.003957553 ubox
6 21 0.004892614 ubox
6 63 0.006703535 ubox
6 72 0.004249022 ubox
6 73 0.083607763 ubox
6 91 0.038274842 ubox
7 61 0.010791980 ubox
8 19 0.010278297 ubox
8 60 0.011041441 ubox
8 70 0.055392065 ubox
8 72 0.020880884 ubox
8 91 0.035841197 ubox
9 18 0.022753328 ubox
9 59 0.010684127 ubox
9 67 0.008186471 ubox
9 68 0.998455166 ubox
10 17 0.022768151 ubox
10 18 0.016508574 ubox
10 66 0.007892090 ubox
10 67 0.999533515 ubox
10 68 0.005503595 ubox
11 17 0.016531681 ubox
11 66 0.999524421 ubox
11 67 0.004628362 ubox
12 16 0.014903820 ubox
12 62 0.005054637 ubox
12 64 0.038521835 ubox
12 65 0.985005132 ubox
13 61 0.008648913 ubox
14 60 0.008680946 ubox
14 63 0.997525940 ubox
15 62 0.998854398 ubox
16 61 0.998280507 ubox
17 60 0.992318122 ubox
18 60 0.068851123 ubox
19 34 0.004041041 ubox
19 36 0.997451993 ubox
19 37 0.006569014 ubox
19 38 0.003217782 ubox
19 39 0.009113188 ubox
19 40 0.005763198 ubox
19 59 0.038123992 ubox
20 35 0.999399720 ubox
20 38 0.007193732 ubox
21 32 0.006386325 ubox
21 34 0.999828413 ubox
21 58 0.015042655 ubox
22 31 0.005649310 ubox
22 33 0.999719521 ubox
22 57 0.015046437 ubox
23 29 0.007587323 ubox
23 31 0.998414750 ubox
23 33 0.004244453 ubox
23 56 0.015003096 ubox
24 29 0.006759602 ubox
24 30 0.997909656 ubox
24 31 0.017284228 ubox
24 53 0.009419633 ubox
25 29 0.989544028 ubox
25 31 0.010989783 ubox
25 52 0.009761405 ubox
26 31 0.017171766 ubox
26 52 0.007773693 ubox
27 47 0.003250431 ubox
27 51 0.007658587 ubox
28 44 0.005513771 ubox
28 46 0.003459273 ubox
29 43 0.005637513 ubox
29 45 0.003435774 ubox
29 48 0.009501209 ubox
30 47 0.009022954 ubox
31 42 0.006222437 ubox
31 45 0.009741218 ubox
31 47 0.008139378 ubox
32 41 0.006266850 ubox
32 44 0.009751595 ubox
32 46 0.009232317 ubox
33 40 0.006122725 ubox
33 42 0.007116121 ubox
33 43 0.007151707 ubox
33 45 0.009242992 ubox
33 66 0.003955659 ubox
34 41 0.009700596 ubox
34 44 0.009232757 ubox
35 64 0.007799995 ubox
36 63 0.009351144 ubox
37 60 0.003779969 ubox
37 62 0.009854685 ubox
37 63 0.005649895 ubox
37 65 0.003921313 ubox
38 60 0.003237347 ubox
38 62 0.006507971 ubox
38 64 0.006669336 ubox
39 57 0.003555470 ubox
39 60 0.040924498 ubox
39 63 0.006841242 ubox
40 56 0.003593093 ubox
40 60 0.035215895 ubox
41 55 0.003541473 ubox
41 58 0.995553472 ubox
41 59 0.067763817 ubox
42 57 0.999850947 ubox
43 56 0.999850888 ubox
44 54 0.005602953 ubox
44 55 0.999281923 ubox
45 52 0.017454510 ubox
46 51 0.011668681 ubox
46 54 0.999123785 ubox
47 52 0.008292145 ubox
47 53 0.998588490 ubox
48 52 0.990190855 ubox
59 79 0.005345087 ubox
60 78 0.005398974 ubox
60 95 0.009478975 ubox
61 94 0.009154075 ubox
62 77 0.005194306 ubox
63 76 0.005473772 ubox
64 75 0.005490983 ubox
65 74 0.005501887 ubox
66 73 0.005506299 ubox
67 72 0.005487030 ubox
68 91 0.004743770 ubox
69 86 0.948250233 ubox
70 85 0.996091057 ubox
70 86 0.003839046 ubox
71 84 0.996249587 ubox
72 83 0.996436445 ubox
73 82 0.996415449 ubox
73 95 0.003843189 ubox
74 79 0.004395429 ubox
74 80 0.040066499 ubox
74 81 0.982526163 ubox
74 94 0.003548586 ubox
75 79 0.051199520 ubox
75 80 0.854320121 ubox
75 81 0.031357780 ubox
75 93 0.003205090 ubox
76 80 0.037116665 ubox
76 81 0.004766860 ubox
76 93 0.003812312 ubox
77 92 0.004270136 ubox
78 91 0.004569554 ubox
79 85 0.014727243 ubox
79 95 0.005263436 ubox
79 98 0.004698157 ubox
80 84 0.012832403 ubox
82 91 0.004592101 ubox
83 91 0.015808156 ubox
84 90 0.015290950 ubox
84 92 0.038038346 ubox
85 91 0.040168450 ubox
86 90 0.036415592 ubox
86 91 0.007691922 ubox
86 92 0.007086297 ubox
86 93 0.009031885 ubox
86 94 0.004362288 ubox
86 96 0.003386481 ubox
91 95 0.042735575 ubox
91 98 0.103267579 ubox
91 101 0.045410572 ubox
91 104 0.035226566 ubox
91 107 0.010424069 ubox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
