%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (467)
} def

/sequence { (\
GGAAAAGAGUAGCACAGGGAAAACCCGACAAAAGUCGUGAAAAGACUUCAAAAGAAGUCCUACUCAAACGACGUCUUCGGACGUCGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 65 0.004010664 ubox
1 69 0.029823112 ubox
1 95 0.067394591 ubox
1 98 0.067863687 ubox
1 101 0.069426454 ubox
1 104 0.069755791 ubox
1 107 0.017610629 ubox
2 65 0.006405991 ubox
2 69 0.023602051 ubox
2 95 0.035567740 ubox
2 98 0.035717835 ubox
2 101 0.036488228 ubox
2 104 0.036350212 ubox
2 107 0.011861548 ubox
3 64 0.005369758 ubox
7 36 0.004188809 ubox
7 65 0.998235129 ubox
7 98 0.003225914 ubox
8 35 0.004178283 ubox
8 64 0.999365933 ubox
9 15 0.003708404 ubox
9 63 0.999694211 ubox
9 95 0.009711125 ubox
9 98 0.007538330 ubox
9 101 0.007525778 ubox
9 104 0.007532972 ubox
10 14 0.003355939 ubox
10 62 0.999342494 ubox
10 94 0.009537049 ubox
10 97 0.007316502 ubox
10 100 0.007302315 ubox
10 103 0.007309727 ubox
11 61 0.998131556 ubox
12 38 0.006606569 ubox
12 59 0.003752420 ubox
12 60 0.986607790 ubox
12 61 0.004353179 ubox
12 95 0.004261589 ubox
12 98 0.004185785 ubox
12 101 0.004236139 ubox
13 17 0.018670496 ubox
13 18 0.030443006 ubox
13 19 0.025577082 ubox
13 27 0.006453210 ubox
13 37 0.014674166 ubox
13 39 0.500698883 ubox
13 91 0.007537231 ubox
14 38 0.501882377 ubox
14 58 0.050473498 ubox
15 19 0.008913248 ubox
15 27 0.023512244 ubox
15 37 0.501012195 ubox
15 39 0.037323188 ubox
15 57 0.051096087 ubox
16 35 0.007440784 ubox
16 38 0.033958393 ubox
16 61 0.003468461 ubox
17 24 0.056903189 ubox
17 25 0.468178512 ubox
17 26 0.847673724 ubox
17 36 0.003937260 ubox
17 60 0.004278557 ubox
18 24 0.470182249 ubox
18 25 0.863430891 ubox
18 26 0.087312263 ubox
18 35 0.003303359 ubox
18 36 0.003273698 ubox
19 24 0.858268615 ubox
19 25 0.088419257 ubox
19 26 0.007766304 ubox
22 38 0.003355355 ubox
23 38 0.007603852 ubox
24 37 0.006132150 ubox
24 39 0.061853214 ubox
25 37 0.005857567 ubox
25 39 0.105839176 ubox
26 37 0.506423282 ubox
26 39 0.011720901 ubox
27 36 0.994404606 ubox
27 38 0.004243681 ubox
27 49 0.007868533 ubox
27 59 0.005418251 ubox
28 35 0.994912618 ubox
28 38 0.039211919 ubox
28 48 0.007176477 ubox
28 58 0.005428981 ubox
29 34 0.993165143 ubox
29 37 0.040310671 ubox
29 39 0.019689674 ubox
29 57 0.005413786 ubox
30 35 0.005854753 ubox
30 38 0.018623710 ubox
31 35 0.005183605 ubox
31 38 0.003913514 ubox
32 48 0.032133999 ubox
33 38 0.005973992 ubox
33 47 0.038210977 ubox
34 46 0.039804109 ubox
35 45 0.039837510 ubox
36 44 0.039894398 ubox
37 46 0.018847165 ubox
37 60 0.004373726 ubox
37 63 0.004655934 ubox
38 42 0.018889228 ubox
38 43 0.080957285 ubox
38 44 0.003737435 ubox
38 45 0.018897012 ubox
38 50 0.022620055 ubox
38 62 0.004658303 ubox
38 66 0.015664482 ubox
39 49 0.025126523 ubox
39 59 0.004200977 ubox
39 60 0.008695317 ubox
39 61 0.004086721 ubox
39 65 0.017467452 ubox
40 48 0.024996990 ubox
40 58 0.003210962 ubox
40 61 0.003257538 ubox
40 64 0.017188558 ubox
41 47 0.023367556 ubox
42 61 0.013096877 ubox
43 61 0.015037807 ubox
44 58 0.004354625 ubox
44 59 0.995349262 ubox
44 60 0.012999581 ubox
45 58 0.998093337 ubox
46 54 0.004098937 ubox
46 57 0.998568553 ubox
47 53 0.004145026 ubox
47 55 0.003470243 ubox
47 56 0.998224321 ubox
48 52 0.003528857 ubox
48 54 0.004364522 ubox
48 55 0.998216588 ubox
49 54 0.996910807 ubox
63 91 0.004281326 ubox
64 90 0.004233446 ubox
64 92 0.010073896 ubox
65 91 0.012989739 ubox
69 86 0.980053970 ubox
69 91 0.005408612 ubox
70 85 0.999909754 ubox
71 84 0.999861648 ubox
72 83 0.999956965 ubox
73 82 0.999956637 ubox
74 80 0.007347740 ubox
74 81 0.999751120 ubox
75 79 0.013563356 ubox
75 80 0.998916128 ubox
76 80 0.003167212 ubox
86 95 0.019110397 ubox
86 98 0.007760538 ubox
86 101 0.006219476 ubox
86 104 0.005367864 ubox
91 95 0.043039735 ubox
91 98 0.103770141 ubox
91 101 0.045520154 ubox
91 104 0.035225662 ubox
91 107 0.010421882 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
