%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (475)
} def

/sequence { (\
GGAAAAGUAUACGGCAGUGGAAACACGUGGAAACACGCCAAAAGCUAUCGAAAGAUAGCGUAUACAAAGUGUGUCUUCGGAUACACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.004444691 ubox
1 39 0.006465739 ubox
1 65 0.004224505 ubox
1 86 0.004219947 ubox
1 95 0.067452050 ubox
1 98 0.067899887 ubox
1 101 0.069526531 ubox
1 104 0.069842156 ubox
1 107 0.017634005 ubox
2 38 0.006462006 ubox
2 65 0.004189122 ubox
2 95 0.035607265 ubox
2 98 0.035747630 ubox
2 101 0.036518871 ubox
2 104 0.036379536 ubox
2 107 0.011870851 ubox
7 34 0.004951588 ubox
7 63 0.006896942 ubox
7 65 0.997496242 ubox
7 95 0.010376643 ubox
7 98 0.010567419 ubox
7 101 0.010203780 ubox
7 104 0.010128216 ubox
7 107 0.003537542 ubox
8 33 0.004841956 ubox
8 62 0.007073498 ubox
8 64 0.998712456 ubox
8 94 0.009799968 ubox
8 97 0.009978049 ubox
8 100 0.009631808 ubox
8 103 0.009560051 ubox
8 106 0.003374066 ubox
9 61 0.007057367 ubox
9 63 0.998740595 ubox
10 19 0.003423219 ubox
10 31 0.003247357 ubox
10 60 0.006812595 ubox
10 62 0.998741729 ubox
11 18 0.004306853 ubox
11 61 0.998719707 ubox
12 17 0.004944323 ubox
12 30 0.006439862 ubox
12 60 0.997535649 ubox
13 18 0.004852299 ubox
13 24 0.012645011 ubox
13 26 0.004063325 ubox
13 38 0.003880936 ubox
13 39 0.969852374 ubox
13 59 0.077437072 ubox
14 24 0.004415747 ubox
14 26 0.003608491 ubox
14 28 0.023762254 ubox
14 38 0.970958960 ubox
14 39 0.004697671 ubox
14 45 0.006160281 ubox
14 59 0.012665210 ubox
14 61 0.003601838 ubox
15 19 0.004066121 ubox
15 20 0.010016886 ubox
15 27 0.026545855 ubox
15 29 0.013874760 ubox
15 37 0.969293411 ubox
15 44 0.007090639 ubox
15 58 0.017449354 ubox
15 60 0.004082103 ubox
16 28 0.016139269 ubox
17 24 0.110293550 ubox
17 26 0.927304427 ubox
17 34 0.010548929 ubox
17 36 0.327924872 ubox
18 23 0.109346241 ubox
18 25 0.929919014 ubox
18 27 0.003950922 ubox
18 33 0.010451796 ubox
18 35 0.328169524 ubox
18 40 0.076862842 ubox
18 41 0.003828592 ubox
19 24 0.930407846 ubox
19 26 0.036600837 ubox
19 34 0.327962744 ubox
19 39 0.085430364 ubox
20 24 0.009812655 ubox
20 26 0.010930316 ubox
20 34 0.005905464 ubox
20 38 0.085413296 ubox
22 28 0.012372404 ubox
23 28 0.015785103 ubox
24 29 0.227448490 ubox
24 30 0.062140850 ubox
26 30 0.007553866 ubox
26 37 0.136480758 ubox
27 34 0.075436475 ubox
27 36 0.931900148 ubox
27 38 0.098986403 ubox
27 39 0.007204988 ubox
28 33 0.074913460 ubox
28 35 0.932985467 ubox
28 37 0.099325716 ubox
28 40 0.041609941 ubox
29 34 0.933000160 ubox
29 36 0.104865526 ubox
29 38 0.004515851 ubox
29 39 0.050167518 ubox
30 34 0.012238074 ubox
30 36 0.009743549 ubox
30 38 0.050113850 ubox
30 39 0.004437954 ubox
37 45 0.019719803 ubox
38 44 0.020749383 ubox
39 44 0.009194278 ubox
40 63 0.003603678 ubox
41 61 0.004209882 ubox
42 61 0.007527328 ubox
43 61 0.005044530 ubox
44 59 0.995665604 ubox
45 58 0.999672628 ubox
46 57 0.999658019 ubox
47 56 0.999492159 ubox
48 55 0.999681631 ubox
49 54 0.999470928 ubox
60 65 0.004283032 ubox
60 95 0.012046191 ubox
61 94 0.011698041 ubox
63 92 0.006229851 ubox
65 91 0.006046326 ubox
69 84 0.004041436 ubox
69 86 0.997829316 ubox
69 95 0.003594216 ubox
69 98 0.010274976 ubox
69 101 0.004459039 ubox
70 83 0.004025092 ubox
70 85 0.999096582 ubox
70 87 0.011398379 ubox
70 96 0.011181222 ubox
70 97 0.007703453 ubox
70 99 0.003991809 ubox
70 100 0.003386070 ubox
71 82 0.003970890 ubox
71 84 0.999765816 ubox
71 86 0.012667111 ubox
71 95 0.013718337 ubox
71 98 0.004892015 ubox
72 81 0.003942316 ubox
72 83 0.999372077 ubox
72 85 0.012633719 ubox
72 94 0.013291523 ubox
72 96 0.003793241 ubox
72 97 0.003941059 ubox
73 82 0.999289976 ubox
73 84 0.012544247 ubox
73 95 0.004871700 ubox
74 81 0.999567683 ubox
74 83 0.011703090 ubox
74 92 0.013567860 ubox
74 94 0.004459695 ubox
75 79 0.011656820 ubox
75 80 0.998771927 ubox
75 91 0.014383690 ubox
76 80 0.003198372 ubox
76 90 0.014270608 ubox
76 93 0.005235867 ubox
77 89 0.013742530 ubox
77 92 0.005445961 ubox
78 91 0.005461600 ubox
79 86 0.007228865 ubox
80 86 0.011426085 ubox
86 91 0.005692711 ubox
91 95 0.043047026 ubox
91 98 0.103775382 ubox
91 101 0.045523052 ubox
91 104 0.035227062 ubox
91 107 0.010422274 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
