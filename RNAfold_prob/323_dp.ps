%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (323)
} def

/sequence { (\
GGAAACGCUUGACAAAAAAGUCAGUCAAAGACAAGCGAGUCAGGCAAAAAGCCCUUCAAAAGAAGGACUAUACCAUUCGUGGUAUAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.285500945 ubox
1 8 0.008157001 ubox
1 9 0.003962059 ubox
1 26 0.003359685 ubox
1 32 0.004198559 ubox
1 41 0.020248471 ubox
1 45 0.006981485 ubox
1 52 0.070078228 ubox
1 53 0.040238593 ubox
1 68 0.035705063 ubox
1 69 0.017015634 ubox
1 74 0.007851899 ubox
1 95 0.134004253 ubox
1 98 0.133268038 ubox
1 101 0.135088106 ubox
1 104 0.135674412 ubox
1 107 0.034257567 ubox
2 6 0.047760049 ubox
2 8 0.005959903 ubox
2 26 0.009717145 ubox
2 40 0.017459825 ubox
2 41 0.124024004 ubox
2 52 0.063160506 ubox
2 68 0.025935108 ubox
2 73 0.007823574 ubox
2 78 0.003764141 ubox
2 95 0.069411921 ubox
2 98 0.067682639 ubox
2 101 0.068999107 ubox
2 104 0.068740569 ubox
2 107 0.022432820 ubox
3 25 0.009195125 ubox
3 40 0.123712066 ubox
3 77 0.003721379 ubox
3 85 0.003238249 ubox
4 76 0.003238711 ubox
5 25 0.004159540 ubox
6 24 0.004433497 ubox
6 37 0.148946798 ubox
6 51 0.022024694 ubox
6 66 0.004061977 ubox
6 91 0.074390764 ubox
7 21 0.009806411 ubox
7 25 0.032951170 ubox
7 26 0.026158073 ubox
7 32 0.003265140 ubox
7 36 0.150627977 ubox
7 45 0.983356767 ubox
7 52 0.044826128 ubox
7 68 0.003835457 ubox
7 95 0.009920992 ubox
7 98 0.009666953 ubox
7 101 0.009385424 ubox
7 104 0.009328658 ubox
7 107 0.003531087 ubox
8 20 0.010426119 ubox
8 24 0.036123247 ubox
8 30 0.005367650 ubox
8 35 0.150612760 ubox
8 43 0.004379939 ubox
8 44 0.984420261 ubox
8 51 0.044903228 ubox
8 91 0.026358104 ubox
9 19 0.010389466 ubox
9 23 0.025586077 ubox
9 24 0.041264431 ubox
9 28 0.023037510 ubox
9 29 0.004817633 ubox
9 33 0.004621270 ubox
9 34 0.145128267 ubox
9 42 0.003454862 ubox
9 43 0.983542438 ubox
9 50 0.043462493 ubox
9 90 0.025297808 ubox
10 18 0.010300470 ubox
10 23 0.120245671 ubox
10 27 0.038001241 ubox
10 28 0.003810737 ubox
10 33 0.104639604 ubox
10 42 0.983501016 ubox
10 49 0.031991433 ubox
10 89 0.018858624 ubox
11 22 0.155779302 ubox
11 26 0.042187051 ubox
11 32 0.066308658 ubox
11 41 0.984359438 ubox
12 21 0.157110088 ubox
12 25 0.043991580 ubox
12 40 0.984071776 ubox
13 20 0.156985311 ubox
13 24 0.043974111 ubox
13 30 0.038567785 ubox
13 37 0.005495351 ubox
13 39 0.980983158 ubox
14 21 0.004900195 ubox
15 21 0.004296266 ubox
16 21 0.010544396 ubox
16 25 0.003362857 ubox
17 25 0.003326242 ubox
18 25 0.007852423 ubox
19 25 0.006722320 ubox
20 26 0.007197358 ubox
20 32 0.928748739 ubox
20 36 0.305058510 ubox
21 30 0.007749463 ubox
21 31 0.931733709 ubox
21 33 0.012988136 ubox
21 34 0.013722152 ubox
21 35 0.301649377 ubox
21 38 0.029785685 ubox
22 30 0.931415011 ubox
22 35 0.023864988 ubox
22 37 0.029881346 ubox
23 69 0.008838691 ubox
24 32 0.331906969 ubox
24 36 0.019086020 ubox
24 45 0.053711100 ubox
24 68 0.022286793 ubox
24 95 0.005242937 ubox
24 98 0.005060423 ubox
24 101 0.005137716 ubox
24 104 0.005136461 ubox
25 29 0.020867359 ubox
25 30 0.004868582 ubox
25 31 0.332232459 ubox
25 34 0.007511657 ubox
25 35 0.016238213 ubox
25 38 0.010891633 ubox
25 44 0.053741457 ubox
25 67 0.022440877 ubox
25 92 0.010202024 ubox
25 94 0.004851255 ubox
25 97 0.004778224 ubox
25 100 0.004861551 ubox
25 103 0.004861998 ubox
26 30 0.329480234 ubox
26 35 0.010883718 ubox
26 37 0.010974470 ubox
26 43 0.053909313 ubox
26 66 0.022436353 ubox
26 91 0.011641035 ubox
30 36 0.004243367 ubox
30 41 0.085101009 ubox
31 40 0.085181553 ubox
32 37 0.004227456 ubox
32 39 0.085095121 ubox
32 82 0.003208849 ubox
35 45 0.026149559 ubox
35 52 0.004987781 ubox
35 80 0.003824514 ubox
36 43 0.004107637 ubox
36 44 0.026112411 ubox
36 51 0.004998516 ubox
36 79 0.003919137 ubox
37 78 0.003931877 ubox
38 69 0.045445656 ubox
38 77 0.003926804 ubox
39 45 0.007658872 ubox
39 68 0.059200397 ubox
39 76 0.003893400 ubox
39 95 0.010077401 ubox
39 98 0.009930284 ubox
39 101 0.010110522 ubox
39 104 0.010122948 ubox
39 107 0.003532945 ubox
40 44 0.007171529 ubox
40 67 0.059253177 ubox
40 75 0.003614738 ubox
40 92 0.012032961 ubox
40 94 0.009302469 ubox
40 97 0.009368442 ubox
40 100 0.009559866 ubox
40 103 0.009575338 ubox
40 106 0.003377450 ubox
41 66 0.059084802 ubox
41 91 0.012996138 ubox
43 52 0.012486648 ubox
43 53 0.110454887 ubox
43 68 0.004078164 ubox
43 74 0.004001092 ubox
43 95 0.009838573 ubox
43 98 0.009834641 ubox
43 101 0.009991653 ubox
43 104 0.009827716 ubox
43 107 0.003422974 ubox
44 52 0.143726473 ubox
44 73 0.004006775 ubox
45 51 0.143888870 ubox
45 91 0.004074517 ubox
47 69 0.004496439 ubox
48 69 0.006820499 ubox
48 71 0.012716187 ubox
49 69 0.020285103 ubox
49 71 0.005651911 ubox
50 69 0.400873572 ubox
51 68 0.539679078 ubox
51 69 0.009568893 ubox
51 95 0.030407695 ubox
51 98 0.030376443 ubox
51 101 0.030962452 ubox
51 104 0.031006588 ubox
51 107 0.010825515 ubox
52 66 0.059825445 ubox
52 91 0.023841875 ubox
53 65 0.042936741 ubox
53 66 0.989181832 ubox
54 62 0.006482780 ubox
54 65 0.998855860 ubox
54 66 0.008597490 ubox
55 61 0.006453729 ubox
55 63 0.005426939 ubox
55 64 0.999236143 ubox
55 65 0.006800639 ubox
55 67 0.003523806 ubox
56 60 0.005403937 ubox
56 62 0.005793240 ubox
56 63 0.999155284 ubox
56 64 0.005371619 ubox
56 66 0.003859786 ubox
56 67 0.003584112 ubox
57 62 0.997816862 ubox
57 65 0.004046811 ubox
57 66 0.003884638 ubox
67 83 0.015252237 ubox
67 85 0.004147600 ubox
68 82 0.015730091 ubox
68 91 0.075490465 ubox
69 81 0.015693310 ubox
69 86 0.868754200 ubox
69 87 0.040359041 ubox
69 88 0.015270734 ubox
69 89 0.010869986 ubox
69 90 0.059724768 ubox
69 91 0.005210190 ubox
69 92 0.003792857 ubox
69 93 0.003219604 ubox
70 80 0.015564733 ubox
70 85 0.983977101 ubox
71 79 0.015232902 ubox
71 81 0.003219633 ubox
71 84 0.996773581 ubox
71 86 0.004001466 ubox
72 80 0.004014352 ubox
72 83 0.999238290 ubox
73 79 0.004158807 ubox
73 82 0.999725900 ubox
74 79 0.003823289 ubox
74 81 0.999449549 ubox
75 80 0.831644604 ubox
76 93 0.005693059 ubox
77 92 0.006545449 ubox
78 91 0.006628477 ubox
79 98 0.005564481 ubox
79 101 0.004185437 ubox
79 104 0.003556021 ubox
80 97 0.005051823 ubox
80 100 0.003767258 ubox
80 103 0.003215556 ubox
81 95 0.003424795 ubox
82 95 0.004849098 ubox
82 98 0.003376755 ubox
83 94 0.004771426 ubox
83 97 0.003301343 ubox
85 90 0.004215591 ubox
85 92 0.005247241 ubox
85 94 0.003781678 ubox
91 95 0.045883684 ubox
91 98 0.107225725 ubox
91 101 0.045422860 ubox
91 104 0.033790009 ubox
91 107 0.009965155 ubox
7 45 0.9500000 lbox
8 44 0.9500000 lbox
9 43 0.9500000 lbox
10 42 0.9500000 lbox
11 41 0.9500000 lbox
12 40 0.9500000 lbox
13 39 0.9500000 lbox
20 32 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
53 66 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
