%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (182)
} def

/sequence { (\
GGAAAAAAGCAUCACAUGAGCUGAGAAAAGACGAAAGUACUGCUGAGACUGAGGGUGAGGGCAAAAAAGGAUGUCUUCGGACAUCCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.032266700 ubox
1 32 0.004217949 ubox
1 62 0.011392136 ubox
1 86 0.006275314 ubox
1 95 0.067713589 ubox
1 98 0.068176242 ubox
1 101 0.069742682 ubox
1 104 0.070048765 ubox
1 107 0.017685611 ubox
2 10 0.008475672 ubox
2 13 0.004183100 ubox
2 62 0.009549443 ubox
2 85 0.005569560 ubox
2 95 0.035738710 ubox
2 98 0.035886917 ubox
2 101 0.036651656 ubox
2 104 0.036511253 ubox
2 107 0.011914062 ubox
3 12 0.004202509 ubox
3 84 0.004300009 ubox
8 22 0.040104812 ubox
8 44 0.006219616 ubox
9 21 0.041518659 ubox
9 43 0.006416681 ubox
9 62 0.980636187 ubox
9 95 0.007351034 ubox
9 98 0.007275964 ubox
9 101 0.007379009 ubox
9 104 0.007402905 ubox
10 20 0.041469797 ubox
10 42 0.006417827 ubox
10 57 0.053303777 ubox
10 59 0.068991750 ubox
10 60 0.134832842 ubox
10 61 0.976929618 ubox
10 91 0.005737037 ubox
11 17 0.003204405 ubox
11 41 0.006300663 ubox
11 56 0.053848907 ubox
12 18 0.003747337 ubox
12 19 0.039609727 ubox
12 24 0.003517115 ubox
12 55 0.053738437 ubox
12 58 0.987528005 ubox
12 59 0.038030055 ubox
12 60 0.016856289 ubox
13 18 0.039708481 ubox
13 23 0.003707431 ubox
13 54 0.053426475 ubox
13 55 0.005629150 ubox
13 57 0.997246319 ubox
13 59 0.013800456 ubox
14 22 0.003583156 ubox
14 38 0.006449189 ubox
14 56 0.996798068 ubox
15 37 0.006550501 ubox
15 51 0.008717450 ubox
15 53 0.045419410 ubox
15 54 0.083304129 ubox
15 55 0.991674005 ubox
15 57 0.011760533 ubox
16 50 0.008233261 ubox
16 56 0.011712403 ubox
17 35 0.004786208 ubox
17 46 0.004106441 ubox
17 51 0.029437313 ubox
17 52 0.801344473 ubox
17 53 0.104527258 ubox
17 54 0.030197468 ubox
17 55 0.008572150 ubox
18 49 0.011943642 ubox
18 50 0.028799329 ubox
19 44 0.006167088 ubox
19 50 0.989509392 ubox
20 32 0.007310962 ubox
20 38 0.005772155 ubox
20 43 0.006222212 ubox
20 49 0.993558702 ubox
20 50 0.019237448 ubox
21 30 0.011523063 ubox
21 37 0.005941580 ubox
21 42 0.006218447 ubox
21 47 0.998116926 ubox
21 53 0.007209927 ubox
22 29 0.011499968 ubox
22 36 0.005885428 ubox
22 45 0.003527373 ubox
22 46 0.995580114 ubox
22 47 0.014100119 ubox
22 48 0.010797936 ubox
22 52 0.007271607 ubox
23 32 0.003666441 ubox
23 44 0.004138863 ubox
24 44 0.993326690 ubox
24 50 0.007344847 ubox
25 32 0.005360534 ubox
25 40 0.003215534 ubox
25 43 0.992895550 ubox
25 44 0.012704131 ubox
25 49 0.007341559 ubox
26 41 0.064655143 ubox
26 44 0.013491531 ubox
27 41 0.098045978 ubox
28 38 0.006323332 ubox
28 41 0.222738569 ubox
29 38 0.035125597 ubox
29 41 0.615973425 ubox
29 44 0.006516794 ubox
30 38 0.043998948 ubox
30 40 0.645238638 ubox
30 41 0.005487843 ubox
30 43 0.006853835 ubox
31 38 0.985133439 ubox
31 56 0.003576284 ubox
32 37 0.991515405 ubox
32 42 0.012373751 ubox
32 53 0.004161162 ubox
32 54 0.005341122 ubox
32 55 0.003661340 ubox
33 38 0.007121080 ubox
33 40 0.009968681 ubox
33 41 0.010620195 ubox
34 38 0.004624906 ubox
36 50 0.009821889 ubox
37 43 0.003401067 ubox
37 49 0.010000904 ubox
37 95 0.004167545 ubox
37 98 0.004054411 ubox
37 101 0.004105730 ubox
37 104 0.004080379 ubox
38 42 0.003298041 ubox
38 48 0.009966010 ubox
38 94 0.004018661 ubox
38 97 0.003912604 ubox
38 100 0.003962045 ubox
38 103 0.003937323 ubox
40 47 0.010070936 ubox
41 46 0.009996558 ubox
41 63 0.036557613 ubox
42 62 0.042257754 ubox
43 61 0.042252923 ubox
44 60 0.041970723 ubox
48 56 0.041656945 ubox
49 54 0.003589342 ubox
49 55 0.041874497 ubox
49 59 0.003190836 ubox
50 54 0.037727693 ubox
50 58 0.003184991 ubox
50 105 0.003735057 ubox
51 104 0.004280627 ubox
54 101 0.004558527 ubox
55 62 0.004171666 ubox
55 101 0.003649676 ubox
56 61 0.004130106 ubox
56 99 0.005258277 ubox
56 100 0.003175798 ubox
57 78 0.003174488 ubox
57 98 0.006285395 ubox
58 77 0.003361290 ubox
59 76 0.003432521 ubox
59 95 0.014715798 ubox
59 98 0.008639976 ubox
60 75 0.003448168 ubox
60 95 0.027474097 ubox
60 98 0.005413383 ubox
61 74 0.003448254 ubox
61 95 0.010268333 ubox
62 73 0.003449892 ubox
62 91 0.008284494 ubox
63 72 0.003372410 ubox
69 86 0.998889992 ubox
70 85 0.999958693 ubox
71 84 0.999733651 ubox
72 83 0.999587093 ubox
73 82 0.999969273 ubox
74 80 0.007345839 ubox
74 81 0.999745873 ubox
75 79 0.013562189 ubox
75 80 0.998910817 ubox
76 80 0.003167102 ubox
86 91 0.005795989 ubox
91 95 0.043044880 ubox
91 98 0.103756916 ubox
91 101 0.045507926 ubox
91 104 0.035209645 ubox
91 107 0.010417003 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
