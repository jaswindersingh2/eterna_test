%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (217)
} def

/sequence { (\
GGAAAAGAUAGGUAUAGAUCCAUAAAAAUGAGAUCAAAAGAUGACAUAAAAAUGCAUCAAUACAGAUCGCUUAGGUUCGCCUAAGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 21 0.015254992 ubox
1 63 0.004513921 ubox
1 68 0.007880710 ubox
1 95 0.067814392 ubox
1 98 0.068255806 ubox
1 101 0.069846266 ubox
1 104 0.070249052 ubox
1 107 0.017769282 ubox
2 20 0.015271511 ubox
2 67 0.005620670 ubox
2 68 0.015759274 ubox
2 95 0.035794919 ubox
2 98 0.035925538 ubox
2 101 0.036698320 ubox
2 104 0.036607865 ubox
2 107 0.011948635 ubox
3 19 0.014639473 ubox
3 67 0.014586840 ubox
6 13 0.003946562 ubox
6 15 0.004651132 ubox
6 67 0.003954342 ubox
7 20 0.005641479 ubox
7 63 0.004037769 ubox
7 67 0.004441272 ubox
7 68 0.992436445 ubox
7 95 0.006981317 ubox
7 98 0.007883405 ubox
7 101 0.008321664 ubox
7 104 0.008273426 ubox
8 15 0.007671497 ubox
8 19 0.005668381 ubox
8 23 0.003192663 ubox
8 61 0.003201605 ubox
8 67 0.993486410 ubox
9 14 0.007278788 ubox
9 16 0.010777654 ubox
9 18 0.005641046 ubox
9 22 0.003255845 ubox
9 65 0.014184227 ubox
9 66 0.989404184 ubox
10 15 0.011183700 ubox
11 20 0.003906421 ubox
11 21 0.009728929 ubox
11 63 0.017489657 ubox
11 68 0.016841167 ubox
11 95 0.009102039 ubox
11 98 0.009140361 ubox
11 101 0.009304933 ubox
11 104 0.009211978 ubox
11 107 0.003175653 ubox
12 19 0.003864473 ubox
12 20 0.009736220 ubox
12 61 0.007455369 ubox
12 63 0.995566374 ubox
12 67 0.016297314 ubox
12 95 0.019347244 ubox
12 98 0.018584636 ubox
12 101 0.018629549 ubox
12 104 0.018286824 ubox
12 107 0.005935899 ubox
13 18 0.004031101 ubox
13 39 0.004296989 ubox
13 60 0.007553628 ubox
13 62 0.995000351 ubox
13 66 0.015929803 ubox
13 94 0.018716073 ubox
13 97 0.017966596 ubox
13 100 0.018010969 ubox
13 103 0.017678274 ubox
13 106 0.005820791 ubox
14 61 0.988819473 ubox
15 36 0.027967956 ubox
15 37 0.041972228 ubox
15 38 0.009731445 ubox
15 39 0.009712849 ubox
15 59 0.036283575 ubox
15 60 0.947826102 ubox
15 62 0.004954898 ubox
15 92 0.004413640 ubox
16 61 0.006994931 ubox
17 35 0.920827594 ubox
17 58 0.385128973 ubox
17 68 0.003603228 ubox
18 34 0.921734492 ubox
18 57 0.385486083 ubox
18 67 0.003603233 ubox
19 31 0.003784103 ubox
19 32 0.004527583 ubox
19 33 0.921870442 ubox
19 56 0.369677421 ubox
19 66 0.003599502 ubox
20 30 0.003365773 ubox
20 32 0.921931701 ubox
20 54 0.021894861 ubox
20 65 0.003586308 ubox
21 30 0.919526487 ubox
21 32 0.007844603 ubox
21 54 0.382508410 ubox
22 29 0.906183668 ubox
22 53 0.381558622 ubox
23 27 0.020812193 ubox
23 28 0.855903515 ubox
23 30 0.019130463 ubox
23 31 0.004984618 ubox
23 50 0.003570124 ubox
23 51 0.012433486 ubox
23 52 0.360307107 ubox
23 54 0.003191865 ubox
24 29 0.018279626 ubox
24 53 0.003164853 ubox
25 29 0.005158381 ubox
26 47 0.003537199 ubox
27 47 0.012165533 ubox
28 47 0.359332518 ubox
29 36 0.004166012 ubox
29 46 0.380568662 ubox
29 48 0.006175276 ubox
30 35 0.004616106 ubox
30 45 0.381892422 ubox
30 47 0.006405522 ubox
31 47 0.004686337 ubox
32 42 0.013992682 ubox
32 45 0.007770608 ubox
32 68 0.020761788 ubox
33 42 0.383375280 ubox
33 67 0.020788907 ubox
34 41 0.384586970 ubox
34 44 0.027613764 ubox
34 66 0.020792488 ubox
35 40 0.384073322 ubox
35 43 0.027863498 ubox
35 65 0.020755003 ubox
36 42 0.026046393 ubox
36 61 0.003872255 ubox
37 61 0.014023644 ubox
38 61 0.006009538 ubox
39 61 0.005304290 ubox
40 58 0.920926560 ubox
41 57 0.921836206 ubox
42 56 0.921838566 ubox
42 59 0.015310633 ubox
43 55 0.922024602 ubox
43 58 0.017001111 ubox
44 53 0.022295965 ubox
44 57 0.016202126 ubox
45 54 0.918806141 ubox
46 53 0.905433550 ubox
47 51 0.022928445 ubox
47 52 0.855192201 ubox
47 54 0.010096728 ubox
48 53 0.009931491 ubox
60 67 0.005583070 ubox
61 66 0.005674927 ubox
63 91 0.005453502 ubox
65 95 0.003512364 ubox
67 87 0.009848650 ubox
67 88 0.014662568 ubox
67 89 0.003414092 ubox
67 90 0.003404868 ubox
67 92 0.014764318 ubox
68 91 0.016029470 ubox
69 86 0.998912190 ubox
70 85 0.999969720 ubox
71 84 0.999422085 ubox
72 83 0.999289171 ubox
73 82 0.999665830 ubox
74 80 0.007105919 ubox
74 81 0.999919769 ubox
75 80 0.993732511 ubox
75 81 0.003437339 ubox
86 91 0.004939035 ubox
91 95 0.043126105 ubox
91 98 0.103879133 ubox
91 101 0.045529146 ubox
91 104 0.035200973 ubox
91 107 0.010413511 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
