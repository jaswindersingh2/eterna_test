%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (797)
} def

/sequence { (\
GGAAAAAGUAGAACGAGAAUUAGAAACCUUAGUACGAAAAGAUACAAGAGUUUCAAUUCCGAUUCACAUUCGAUUUUCGAAUCGAAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.011808356 ubox
1 14 0.005684741 ubox
1 60 0.004726190 ubox
1 65 0.010269995 ubox
1 67 0.014789309 ubox
1 71 0.025794992 ubox
1 78 0.018449872 ubox
1 83 0.013168697 ubox
1 95 0.066972273 ubox
1 98 0.067527219 ubox
1 101 0.070265244 ubox
1 104 0.070910458 ubox
1 107 0.017907228 ubox
2 9 0.014498657 ubox
2 59 0.004681791 ubox
2 64 0.009827341 ubox
2 65 0.017961470 ubox
2 67 0.006721667 ubox
2 70 0.024992421 ubox
2 71 0.108376737 ubox
2 77 0.018479368 ubox
2 78 0.014525504 ubox
2 82 0.004718660 ubox
2 83 0.017580444 ubox
2 95 0.035107153 ubox
2 98 0.035336531 ubox
2 101 0.037078266 ubox
2 104 0.036959743 ubox
2 107 0.012062857 ubox
3 9 0.011502459 ubox
3 58 0.004548391 ubox
3 63 0.009131996 ubox
3 64 0.017653427 ubox
3 69 0.023522902 ubox
3 70 0.108483775 ubox
3 76 0.018478416 ubox
3 77 0.014515648 ubox
3 82 0.013484605 ubox
4 9 0.011529594 ubox
4 57 0.003724052 ubox
4 63 0.015381410 ubox
4 64 0.003701877 ubox
4 69 0.105676107 ubox
4 70 0.011698843 ubox
4 75 0.018348323 ubox
4 76 0.014439300 ubox
5 9 0.007105812 ubox
5 63 0.003352093 ubox
5 69 0.017642904 ubox
5 70 0.042192141 ubox
5 74 0.017199909 ubox
5 75 0.014127818 ubox
6 69 0.068955027 ubox
6 70 0.033744030 ubox
6 74 0.012572493 ubox
7 64 0.008834010 ubox
7 69 0.055036800 ubox
7 70 0.018387500 ubox
8 14 0.008493446 ubox
8 63 0.010974838 ubox
8 65 0.019074025 ubox
8 67 0.819870675 ubox
8 69 0.032063796 ubox
8 71 0.012301967 ubox
8 95 0.081697153 ubox
8 98 0.082540250 ubox
8 101 0.081734287 ubox
8 104 0.081637151 ubox
8 107 0.028480967 ubox
9 13 0.007765440 ubox
9 62 0.011302624 ubox
9 66 0.816236122 ubox
9 68 0.034484436 ubox
9 87 0.004852335 ubox
9 88 0.004580011 ubox
9 89 0.004553081 ubox
9 90 0.005352717 ubox
9 91 0.004649056 ubox
9 92 0.005047169 ubox
9 93 0.006198083 ubox
9 94 0.078852376 ubox
9 96 0.006128820 ubox
9 97 0.079706589 ubox
9 99 0.005390965 ubox
9 100 0.078921260 ubox
9 102 0.005227409 ubox
9 103 0.078824397 ubox
9 105 0.004366541 ubox
9 106 0.027786451 ubox
10 63 0.007078666 ubox
10 64 0.019489615 ubox
10 69 0.005567294 ubox
11 63 0.018160889 ubox
11 64 0.192439318 ubox
11 65 0.966023916 ubox
11 67 0.009198328 ubox
11 71 0.004794462 ubox
11 95 0.013300754 ubox
11 98 0.013144587 ubox
11 101 0.013216282 ubox
11 104 0.006817944 ubox
12 63 0.199379118 ubox
12 64 0.965488358 ubox
12 70 0.004799207 ubox
13 63 0.954090286 ubox
13 64 0.007107467 ubox
13 69 0.004682432 ubox
14 61 0.993550513 ubox
15 59 0.003807269 ubox
15 60 0.994649101 ubox
15 65 0.008037600 ubox
16 58 0.004304459 ubox
16 64 0.007983790 ubox
17 58 0.008505733 ubox
17 59 0.999668185 ubox
17 60 0.006837606 ubox
18 57 0.007066202 ubox
18 58 0.999500567 ubox
19 57 0.998569628 ubox
19 58 0.004480346 ubox
20 55 0.006270565 ubox
20 56 0.996684898 ubox
21 55 0.983820683 ubox
21 56 0.035085426 ubox
23 53 0.020897779 ubox
23 54 0.999232206 ubox
24 52 0.019931301 ubox
24 53 0.999283713 ubox
25 51 0.018051961 ubox
25 52 0.998428779 ubox
26 51 0.999247685 ubox
27 50 0.998928897 ubox
28 41 0.006086190 ubox
28 48 0.986586010 ubox
28 50 0.034934755 ubox
29 40 0.006103324 ubox
29 46 0.007516346 ubox
29 47 0.984890939 ubox
29 48 0.123667443 ubox
29 49 0.048543566 ubox
30 39 0.006090093 ubox
30 44 0.010580768 ubox
30 46 0.971272660 ubox
30 47 0.129990024 ubox
30 48 0.046530326 ubox
30 49 0.003244885 ubox
31 43 0.012887957 ubox
32 43 0.046884268 ubox
32 45 0.994467301 ubox
33 40 0.007021286 ubox
33 41 0.006524713 ubox
33 42 0.048512418 ubox
33 44 0.994234062 ubox
34 43 0.984856473 ubox
35 41 0.806740448 ubox
36 43 0.008401893 ubox
36 45 0.008049070 ubox
37 43 0.007115012 ubox
38 43 0.005482486 ubox
60 72 0.007905345 ubox
60 84 0.017994219 ubox
61 71 0.008081675 ubox
61 83 0.018365514 ubox
61 95 0.019255547 ubox
62 70 0.008009479 ubox
62 82 0.018308664 ubox
63 81 0.018060203 ubox
63 85 0.003302030 ubox
63 86 0.029518465 ubox
63 87 0.004277287 ubox
63 88 0.005141820 ubox
63 90 0.004018545 ubox
63 91 0.003193434 ubox
63 92 0.011116038 ubox
63 93 0.070385822 ubox
63 94 0.004623667 ubox
64 73 0.004500745 ubox
64 80 0.017737967 ubox
64 84 0.003449930 ubox
64 85 0.034144983 ubox
64 86 0.004250786 ubox
64 87 0.005715702 ubox
64 89 0.004324789 ubox
64 90 0.004307787 ubox
64 91 0.011460927 ubox
64 92 0.080833999 ubox
64 93 0.004268757 ubox
64 99 0.003322071 ubox
65 72 0.004895366 ubox
65 79 0.017657772 ubox
65 84 0.034693279 ubox
65 91 0.082066006 ubox
67 72 0.005379812 ubox
67 84 0.057802410 ubox
67 91 0.021743095 ubox
68 75 0.003634338 ubox
68 76 0.003558468 ubox
68 77 0.003247553 ubox
68 82 0.192412757 ubox
69 81 0.209657290 ubox
69 85 0.014851952 ubox
69 86 0.662690327 ubox
69 87 0.043910116 ubox
69 88 0.016717694 ubox
69 89 0.012948238 ubox
69 90 0.010317295 ubox
69 91 0.005734379 ubox
69 92 0.015127575 ubox
69 93 0.489155909 ubox
69 94 0.027666172 ubox
69 96 0.008295686 ubox
69 97 0.005826820 ubox
69 99 0.003619740 ubox
69 100 0.003198574 ubox
70 80 0.217104547 ubox
70 85 0.763823589 ubox
70 86 0.035556896 ubox
70 87 0.007691970 ubox
70 88 0.006224178 ubox
70 89 0.007361813 ubox
70 90 0.006341410 ubox
70 91 0.010186134 ubox
70 92 0.564051449 ubox
70 93 0.023778119 ubox
71 79 0.218011794 ubox
71 84 0.775578935 ubox
71 91 0.572505497 ubox
72 78 0.217732413 ubox
72 83 0.776082957 ubox
72 95 0.005816390 ubox
72 98 0.004723783 ubox
73 77 0.189433549 ubox
73 82 0.775450697 ubox
74 79 0.005736027 ubox
74 80 0.031298449 ubox
74 81 0.762909101 ubox
74 87 0.011820684 ubox
74 88 0.561494405 ubox
74 89 0.027787946 ubox
74 90 0.006661222 ubox
74 92 0.003231747 ubox
74 93 0.003335020 ubox
75 79 0.039996453 ubox
75 80 0.663658401 ubox
75 81 0.024895728 ubox
75 86 0.011560266 ubox
75 87 0.584414397 ubox
75 88 0.026120523 ubox
75 89 0.006346292 ubox
75 92 0.003264987 ubox
75 94 0.016779268 ubox
76 80 0.029308629 ubox
76 81 0.006226747 ubox
76 85 0.010151405 ubox
76 86 0.588177608 ubox
76 87 0.021812083 ubox
76 88 0.004811653 ubox
76 93 0.019628073 ubox
77 84 0.007829623 ubox
77 85 0.589693543 ubox
77 86 0.016105496 ubox
77 92 0.020252774 ubox
78 84 0.590118748 ubox
78 91 0.020345807 ubox
79 83 0.552064928 ubox
79 95 0.005887148 ubox
82 92 0.044296286 ubox
83 91 0.057029634 ubox
84 95 0.008974743 ubox
84 98 0.006871521 ubox
84 101 0.005751847 ubox
84 104 0.004972270 ubox
91 95 0.035928103 ubox
91 98 0.085557275 ubox
91 101 0.037058592 ubox
91 104 0.028299111 ubox
91 107 0.008357862 ubox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 41 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
