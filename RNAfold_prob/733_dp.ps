%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (733)
} def

/sequence { (\
GGAAAGACAGCGCAAAGGGCAGUCAACUGAGCACAAAAAGAGCACAGACACACGGGAAAACGCGAGUGCAUAUAGUUCGCUAUAUGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.020780390 ubox
1 24 0.005129256 ubox
1 27 0.019666593 ubox
1 28 0.025291566 ubox
1 32 0.005738659 ubox
1 45 0.006259599 ubox
1 49 0.009280165 ubox
1 51 0.005063867 ubox
1 63 0.003766587 ubox
1 69 0.008919951 ubox
1 78 0.004493253 ubox
1 95 0.241757711 ubox
1 98 0.243361680 ubox
1 101 0.248908708 ubox
1 104 0.250036803 ubox
1 107 0.063130768 ubox
2 8 0.005933543 ubox
2 11 0.003491040 ubox
2 23 0.003469128 ubox
2 24 0.011079965 ubox
2 27 0.028694158 ubox
2 28 0.005172306 ubox
2 45 0.003301876 ubox
2 49 0.005446778 ubox
2 63 0.003192888 ubox
2 69 0.006467397 ubox
2 77 0.004354847 ubox
2 78 0.007119653 ubox
2 95 0.127600311 ubox
2 98 0.128090430 ubox
2 101 0.130828897 ubox
2 104 0.130337607 ubox
2 107 0.042531800 ubox
3 23 0.010013051 ubox
3 28 0.004542129 ubox
3 76 0.004030801 ubox
3 77 0.007034121 ubox
4 28 0.005698334 ubox
4 76 0.006110861 ubox
5 28 0.005189596 ubox
6 23 0.003219161 ubox
6 24 0.995940731 ubox
6 27 0.003765064 ubox
6 95 0.011211306 ubox
6 98 0.011116775 ubox
6 101 0.011090841 ubox
6 104 0.010872563 ubox
6 107 0.003793867 ubox
7 23 0.997133886 ubox
7 67 0.003627294 ubox
8 22 0.993676308 ubox
8 66 0.003724061 ubox
8 91 0.008524885 ubox
9 23 0.003790283 ubox
9 81 0.004831212 ubox
10 20 0.991975326 ubox
10 23 0.015574000 ubox
10 24 0.005249022 ubox
10 32 0.004689933 ubox
10 34 0.007248075 ubox
10 43 0.006130560 ubox
10 63 0.003493678 ubox
10 80 0.005072057 ubox
11 17 0.015767045 ubox
11 18 0.049802649 ubox
11 19 0.992343440 ubox
11 22 0.016855976 ubox
11 31 0.004689222 ubox
11 42 0.006131811 ubox
11 62 0.003494287 ubox
11 64 0.004400133 ubox
11 79 0.005072186 ubox
11 91 0.003292537 ubox
12 20 0.105971309 ubox
12 23 0.004665782 ubox
12 32 0.009248416 ubox
12 61 0.003364755 ubox
12 63 0.004438497 ubox
12 78 0.004753859 ubox
13 17 0.782133861 ubox
13 18 0.232114460 ubox
13 19 0.105841085 ubox
13 22 0.004967867 ubox
13 29 0.003455289 ubox
13 31 0.009245391 ubox
13 40 0.003186036 ubox
13 62 0.004428106 ubox
16 28 0.007729298 ubox
17 24 0.004585144 ubox
17 27 0.007751263 ubox
17 28 0.005840904 ubox
18 23 0.004166581 ubox
18 27 0.006024878 ubox
18 34 0.003824763 ubox
19 32 0.004930166 ubox
19 69 0.005074742 ubox
20 29 0.005963353 ubox
20 31 0.004847026 ubox
20 68 0.005178187 ubox
21 28 0.006497321 ubox
21 67 0.005172744 ubox
22 27 0.006539789 ubox
22 49 0.007520364 ubox
22 51 0.003516267 ubox
22 53 0.004292428 ubox
22 95 0.012092455 ubox
22 98 0.011643333 ubox
22 101 0.011804747 ubox
22 104 0.011754722 ubox
22 107 0.004100208 ubox
23 30 0.005239684 ubox
23 48 0.007888124 ubox
23 50 0.003405646 ubox
23 52 0.004198020 ubox
23 65 0.005150682 ubox
23 92 0.015139952 ubox
23 94 0.011158968 ubox
23 97 0.010966869 ubox
23 100 0.011143074 ubox
23 103 0.011099741 ubox
23 106 0.003916939 ubox
24 29 0.005641240 ubox
24 47 0.006744562 ubox
24 64 0.005133604 ubox
24 91 0.017004692 ubox
26 67 0.004367213 ubox
26 76 0.003203845 ubox
27 40 0.017098169 ubox
27 42 0.014399569 ubox
27 47 0.983084817 ubox
27 66 0.004460560 ubox
27 75 0.003271745 ubox
27 91 0.024504806 ubox
28 35 0.016110026 ubox
28 37 0.004404399 ubox
28 39 0.017066194 ubox
28 41 0.014396115 ubox
28 44 0.035817699 ubox
28 46 0.989086471 ubox
28 47 0.007644796 ubox
28 48 0.003540059 ubox
28 65 0.004239769 ubox
28 74 0.003235332 ubox
28 90 0.023496385 ubox
28 96 0.016762044 ubox
28 99 0.016764025 ubox
28 102 0.017075987 ubox
28 105 0.017107742 ubox
29 34 0.017443515 ubox
29 43 0.040906900 ubox
29 45 0.987717660 ubox
29 95 0.018096774 ubox
29 98 0.018095582 ubox
29 101 0.018436841 ubox
29 104 0.018471426 ubox
30 81 0.008751202 ubox
31 43 0.993086970 ubox
31 45 0.004437230 ubox
31 69 0.005337407 ubox
31 80 0.009029089 ubox
32 40 0.045749598 ubox
32 42 0.993310098 ubox
32 68 0.005805446 ubox
32 79 0.009023412 ubox
32 86 0.012551829 ubox
32 91 0.003235666 ubox
33 67 0.005794764 ubox
33 85 0.012104128 ubox
34 40 0.644815948 ubox
34 42 0.013770267 ubox
34 66 0.005772481 ubox
35 83 0.003858909 ubox
37 81 0.003633441 ubox
40 45 0.007696017 ubox
40 78 0.017711770 ubox
41 77 0.017716864 ubox
42 69 0.010440994 ubox
42 76 0.017713094 ubox
43 47 0.003516006 ubox
43 68 0.011544930 ubox
43 75 0.017690338 ubox
43 91 0.003227806 ubox
44 67 0.011516533 ubox
44 73 0.007090331 ubox
45 66 0.011449979 ubox
45 68 0.005232096 ubox
45 91 0.004494084 ubox
46 67 0.004954453 ubox
46 71 0.009346438 ubox
47 63 0.003529193 ubox
47 69 0.017744990 ubox
47 95 0.005962309 ubox
47 98 0.005911669 ubox
47 101 0.005967102 ubox
47 104 0.005917193 ubox
48 67 0.106824471 ubox
49 54 0.004846666 ubox
49 55 0.003882521 ubox
49 56 0.003331099 ubox
49 64 0.007839339 ubox
49 66 0.109577298 ubox
49 68 0.980094169 ubox
49 91 0.005405899 ubox
50 67 0.984249379 ubox
51 64 0.110132181 ubox
51 66 0.982115377 ubox
51 68 0.091537861 ubox
52 67 0.091439958 ubox
53 62 0.206086179 ubox
53 64 0.969685902 ubox
53 66 0.088123860 ubox
54 61 0.206449510 ubox
54 63 0.972688851 ubox
54 101 0.005279899 ubox
55 61 0.276940684 ubox
55 63 0.039018081 ubox
56 61 0.853521037 ubox
56 63 0.059285499 ubox
60 67 0.014395580 ubox
61 66 0.014888105 ubox
62 69 0.004591049 ubox
62 80 0.010411509 ubox
63 68 0.006566480 ubox
63 79 0.010470920 ubox
63 91 0.016323242 ubox
64 78 0.010467917 ubox
65 77 0.010235388 ubox
65 81 0.003219952 ubox
66 76 0.007420196 ubox
66 80 0.003321412 ubox
66 95 0.005201378 ubox
66 98 0.005978778 ubox
66 101 0.004679877 ubox
66 104 0.003830736 ubox
67 74 0.003992279 ubox
67 75 0.004604483 ubox
67 79 0.003315352 ubox
67 87 0.014984580 ubox
67 88 0.016384681 ubox
67 89 0.009188672 ubox
67 90 0.003810253 ubox
67 94 0.004615809 ubox
67 96 0.005864914 ubox
67 97 0.004793820 ubox
67 99 0.004414993 ubox
67 100 0.003768302 ubox
67 102 0.003400460 ubox
68 73 0.003441857 ubox
68 76 0.005800945 ubox
68 78 0.003219019 ubox
68 95 0.007890477 ubox
68 98 0.005936095 ubox
68 101 0.004576102 ubox
68 104 0.003206597 ubox
69 75 0.006571142 ubox
69 86 0.995464919 ubox
69 91 0.004795802 ubox
70 85 0.998597353 ubox
71 84 0.998953629 ubox
71 86 0.003873897 ubox
72 83 0.999023825 ubox
72 85 0.004673770 ubox
73 82 0.999038860 ubox
73 84 0.004787681 ubox
74 81 0.998600577 ubox
74 83 0.004793347 ubox
75 80 0.990372658 ubox
75 81 0.003192486 ubox
75 95 0.007513662 ubox
75 98 0.003945647 ubox
76 88 0.007618874 ubox
76 93 0.006396966 ubox
76 94 0.006505008 ubox
76 97 0.003891875 ubox
77 87 0.008757941 ubox
77 92 0.007990598 ubox
77 93 0.005167014 ubox
77 96 0.003476639 ubox
78 86 0.008888426 ubox
78 91 0.008840221 ubox
79 85 0.006998074 ubox
80 91 0.006361922 ubox
81 90 0.006347355 ubox
85 96 0.009187500 ubox
85 99 0.003437386 ubox
86 95 0.014380676 ubox
86 98 0.005341394 ubox
86 101 0.003829909 ubox
91 95 0.054570337 ubox
91 98 0.119527310 ubox
91 101 0.046241420 ubox
91 104 0.029945541 ubox
91 107 0.008717201 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
