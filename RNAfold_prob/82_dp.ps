%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (82)
} def

/sequence { (\
GGAAAAACCCAGCAGACGAAUGUCUGGCAAGGGCGCAAAAGCGCACAUCGAAGGAUGCCGGGCCUGGGCCCUCACUUCGGUGAGGGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.017842062 ubox
1 9 0.018320316 ubox
1 10 0.064611385 ubox
1 59 0.029089183 ubox
1 64 0.011053495 ubox
1 95 0.068301169 ubox
1 98 0.068688706 ubox
1 101 0.070228341 ubox
1 104 0.070541261 ubox
1 107 0.017809661 ubox
2 8 0.019199709 ubox
2 9 0.064533375 ubox
2 58 0.029016733 ubox
2 63 0.011212874 ubox
2 69 0.003825673 ubox
2 95 0.036004321 ubox
2 98 0.036149463 ubox
2 101 0.036912944 ubox
2 104 0.036771478 ubox
2 107 0.011998640 ubox
8 32 0.042918984 ubox
8 33 0.015057723 ubox
8 61 0.003587504 ubox
8 62 0.048771401 ubox
8 67 0.008743244 ubox
8 68 0.989705774 ubox
8 86 0.029153101 ubox
8 91 0.003340519 ubox
9 27 0.004738854 ubox
9 31 0.042966355 ubox
9 32 0.024111284 ubox
9 60 0.003546200 ubox
9 61 0.048992769 ubox
9 66 0.007382178 ubox
9 67 0.994334384 ubox
9 68 0.006281649 ubox
9 85 0.029286658 ubox
10 26 0.005554715 ubox
10 31 0.024148721 ubox
10 60 0.048940353 ubox
10 66 0.994359051 ubox
10 67 0.005915464 ubox
10 84 0.029253733 ubox
11 25 0.008825428 ubox
11 65 0.989524331 ubox
12 17 0.004658125 ubox
12 23 0.030678626 ubox
12 24 0.010249443 ubox
12 28 0.066378809 ubox
12 58 0.015210517 ubox
12 59 0.005014043 ubox
12 63 0.029182957 ubox
12 64 0.961994365 ubox
12 65 0.004735763 ubox
12 95 0.005649113 ubox
12 98 0.005692015 ubox
12 101 0.005747625 ubox
12 104 0.005765108 ubox
13 18 0.030734870 ubox
13 22 0.036217661 ubox
13 26 0.900235806 ubox
13 27 0.048319232 ubox
13 57 0.005674725 ubox
13 61 0.003571340 ubox
13 62 0.038450349 ubox
13 66 0.009423151 ubox
14 21 0.037617438 ubox
14 25 0.923422113 ubox
14 56 0.004176514 ubox
14 65 0.010480573 ubox
15 24 0.926058699 ubox
15 63 0.005643663 ubox
15 64 0.011429281 ubox
16 21 0.006244994 ubox
16 23 0.925718957 ubox
17 22 0.923993795 ubox
17 60 0.017602865 ubox
17 61 0.004500747 ubox
17 66 0.003419688 ubox
17 67 0.004476094 ubox
17 68 0.003202866 ubox
18 24 0.004233228 ubox
18 59 0.017511038 ubox
18 63 0.003476340 ubox
18 64 0.004818866 ubox
18 65 0.003397783 ubox
19 23 0.003722400 ubox
19 65 0.003367707 ubox
20 65 0.004263243 ubox
21 47 0.003294468 ubox
21 57 0.012244367 ubox
22 46 0.003306066 ubox
22 56 0.017463411 ubox
22 63 0.373986145 ubox
23 32 0.004156905 ubox
23 55 0.017972815 ubox
23 62 0.374336988 ubox
23 68 0.004111321 ubox
24 31 0.005701668 ubox
24 54 0.017994120 ubox
24 61 0.375095872 ubox
24 66 0.005265541 ubox
24 67 0.006462951 ubox
25 30 0.005717971 ubox
25 53 0.017951884 ubox
25 60 0.375014623 ubox
25 66 0.006099141 ubox
26 59 0.376272882 ubox
26 63 0.006468473 ubox
26 64 0.199330215 ubox
27 34 0.031539000 ubox
27 36 0.032175327 ubox
27 58 0.376282624 ubox
27 63 0.906732102 ubox
27 64 0.006933014 ubox
28 32 0.013528973 ubox
28 33 0.031543835 ubox
28 35 0.032186387 ubox
28 50 0.016780233 ubox
28 57 0.366604809 ubox
28 60 0.005752772 ubox
28 61 0.021901494 ubox
28 62 0.908639192 ubox
28 68 0.004042397 ubox
29 48 0.012779714 ubox
29 56 0.252763922 ubox
30 48 0.050719453 ubox
30 56 0.016002615 ubox
30 65 0.013083635 ubox
30 72 0.006109787 ubox
31 36 0.003405467 ubox
31 44 0.039325442 ubox
31 46 0.179299298 ubox
31 48 0.011052159 ubox
31 49 0.022962759 ubox
31 58 0.007544846 ubox
31 59 0.909303814 ubox
31 64 0.015471042 ubox
31 65 0.005267423 ubox
31 71 0.009186406 ubox
32 44 0.017647598 ubox
32 46 0.183444561 ubox
32 48 0.020778247 ubox
32 49 0.018585404 ubox
32 58 0.906867770 ubox
32 59 0.015763461 ubox
32 63 0.015588815 ubox
32 64 0.006480802 ubox
32 70 0.009262122 ubox
33 42 0.045988342 ubox
33 44 0.995692692 ubox
33 46 0.004973552 ubox
33 58 0.009167794 ubox
33 63 0.006494224 ubox
33 69 0.009529057 ubox
34 41 0.045996622 ubox
34 43 0.997588170 ubox
34 57 0.005672366 ubox
34 62 0.006470044 ubox
34 68 0.012074991 ubox
35 42 0.997631009 ubox
35 44 0.014925594 ubox
36 41 0.996203308 ubox
36 43 0.014929392 ubox
36 60 0.004462324 ubox
36 66 0.012193410 ubox
37 65 0.012012700 ubox
41 59 0.003671764 ubox
41 63 0.046681516 ubox
42 60 0.003487325 ubox
42 62 0.046787277 ubox
43 58 0.005194508 ubox
43 59 0.003948562 ubox
43 63 0.005222317 ubox
44 57 0.005226917 ubox
44 60 0.046171999 ubox
44 61 0.003957599 ubox
44 62 0.005178262 ubox
45 56 0.005930586 ubox
46 50 0.007703810 ubox
46 53 0.039087292 ubox
46 54 0.015055984 ubox
46 57 0.924098356 ubox
46 62 0.005405528 ubox
46 82 0.029360891 ubox
47 56 0.959492287 ubox
47 81 0.029598580 ubox
48 52 0.004629885 ubox
48 53 0.005168517 ubox
48 54 0.013831666 ubox
48 55 0.979731857 ubox
48 61 0.013182969 ubox
48 80 0.029605548 ubox
49 53 0.021370085 ubox
49 54 0.983536651 ubox
49 60 0.017634349 ubox
49 79 0.029639697 ubox
50 59 0.017666704 ubox
50 78 0.029643032 ubox
51 56 0.003936045 ubox
51 77 0.029603437 ubox
52 65 0.005569603 ubox
52 76 0.029559449 ubox
53 58 0.003742733 ubox
53 59 0.008287110 ubox
53 64 0.006573494 ubox
53 75 0.029460740 ubox
54 58 0.008178562 ubox
54 63 0.006640667 ubox
54 73 0.025612407 ubox
55 72 0.025425393 ubox
56 74 0.009238050 ubox
57 63 0.016483186 ubox
57 69 0.010700983 ubox
57 73 0.009898448 ubox
58 62 0.018716160 ubox
58 67 0.025619641 ubox
58 68 0.021363525 ubox
59 66 0.025706202 ubox
59 67 0.021406051 ubox
60 64 0.003411801 ubox
60 65 0.019572022 ubox
60 71 0.028524411 ubox
60 95 0.014269888 ubox
60 98 0.003284759 ubox
61 65 0.009301759 ubox
61 70 0.028581629 ubox
61 95 0.009548071 ubox
62 69 0.028594079 ubox
62 95 0.004962177 ubox
63 68 0.028508075 ubox
63 91 0.003930387 ubox
64 91 0.083814638 ubox
65 89 0.003780944 ubox
65 90 0.083870722 ubox
65 91 0.005432873 ubox
65 96 0.005399056 ubox
65 99 0.004330224 ubox
65 102 0.003664037 ubox
66 95 0.005838964 ubox
66 98 0.004682047 ubox
66 101 0.003964283 ubox
66 104 0.003364173 ubox
69 85 0.004839818 ubox
69 86 0.996152988 ubox
70 84 0.003441350 ubox
70 85 0.999439172 ubox
70 86 0.005532217 ubox
71 84 0.999465770 ubox
71 85 0.004131465 ubox
72 83 0.999384393 ubox
73 82 0.999542102 ubox
74 81 0.999060756 ubox
75 79 0.011939631 ubox
75 80 0.998146694 ubox
76 80 0.004036361 ubox
86 95 0.007339825 ubox
91 95 0.042910690 ubox
91 98 0.103437988 ubox
91 101 0.045368899 ubox
91 104 0.035102948 ubox
91 107 0.010385561 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
