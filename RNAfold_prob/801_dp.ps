%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (801)
} def

/sequence { (\
GGAAAACAUUCACCACAAAAGGAAAAAAGUUAGAGACAAAAGUCACUAACACCGUGGAGAAUGAAAAAUCUAUGAUUCGUCAUAGAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.030968519 ubox
1 11 0.006658829 ubox
1 14 0.003337110 ubox
1 53 0.003523494 ubox
1 69 0.017358795 ubox
1 70 0.006508903 ubox
1 71 0.010255436 ubox
1 95 0.067392145 ubox
1 98 0.067818786 ubox
1 101 0.069395141 ubox
1 104 0.069661999 ubox
1 107 0.017587327 ubox
2 7 0.008817338 ubox
2 10 0.006599046 ubox
2 11 0.010890828 ubox
2 13 0.003304614 ubox
2 52 0.003479295 ubox
2 69 0.010323991 ubox
2 70 0.012537529 ubox
2 95 0.035550713 ubox
2 98 0.035673810 ubox
2 101 0.036434779 ubox
2 104 0.036291141 ubox
2 107 0.011841850 ubox
3 9 0.006301712 ubox
3 10 0.010791989 ubox
3 69 0.013496342 ubox
4 9 0.009004724 ubox
4 69 0.004103884 ubox
6 69 0.004416243 ubox
7 63 0.993732961 ubox
7 91 0.004409966 ubox
8 62 0.998232292 ubox
9 58 0.004231308 ubox
9 61 0.998300748 ubox
9 65 0.016990189 ubox
9 93 0.007028310 ubox
10 57 0.004585347 ubox
10 60 0.999017113 ubox
10 64 0.019538791 ubox
10 92 0.008024127 ubox
11 56 0.004799834 ubox
11 59 0.996655026 ubox
11 63 0.019811586 ubox
11 91 0.008115006 ubox
12 55 0.004867725 ubox
12 62 0.019560308 ubox
13 22 0.027054258 ubox
13 54 0.004601917 ubox
13 56 0.004105033 ubox
13 57 0.997535649 ubox
14 21 0.027245100 ubox
14 56 0.999514700 ubox
14 57 0.004349568 ubox
15 55 0.998758648 ubox
16 21 0.029241201 ubox
16 22 0.016528405 ubox
16 54 0.996691416 ubox
16 56 0.007830608 ubox
17 55 0.008034562 ubox
18 55 0.005214258 ubox
19 55 0.006503367 ubox
20 30 0.003208516 ubox
20 31 0.003826737 ubox
20 47 0.005566218 ubox
20 55 0.004899531 ubox
21 30 0.005950139 ubox
21 46 0.005762633 ubox
21 50 0.019147489 ubox
21 52 0.042285388 ubox
21 53 0.828202478 ubox
22 31 0.004436222 ubox
22 44 0.005811149 ubox
22 50 0.021176063 ubox
22 52 0.827531386 ubox
22 53 0.057018640 ubox
23 30 0.005139798 ubox
23 43 0.005771971 ubox
23 55 0.003204231 ubox
24 30 0.003607335 ubox
24 31 0.003258873 ubox
24 55 0.005217401 ubox
25 30 0.003743187 ubox
25 55 0.003538463 ubox
28 47 0.034140508 ubox
29 37 0.006085606 ubox
29 46 0.035509435 ubox
29 50 0.995155910 ubox
29 52 0.016659849 ubox
29 53 0.009161165 ubox
30 36 0.006056978 ubox
30 45 0.034980795 ubox
30 48 0.004779421 ubox
30 49 0.998046278 ubox
30 51 0.014928787 ubox
31 35 0.005459790 ubox
31 48 0.998479014 ubox
32 47 0.998845596 ubox
33 44 0.010158760 ubox
33 46 0.995369622 ubox
34 43 0.010477706 ubox
35 44 0.997006944 ubox
36 43 0.999294807 ubox
37 42 0.997468247 ubox
53 63 0.009484258 ubox
53 74 0.003869579 ubox
54 62 0.009546274 ubox
54 73 0.003902424 ubox
54 83 0.004815301 ubox
54 101 0.004756802 ubox
55 61 0.009518137 ubox
55 72 0.003906904 ubox
55 82 0.005000029 ubox
55 100 0.004456964 ubox
56 71 0.003906981 ubox
56 81 0.005040450 ubox
56 98 0.003193553 ubox
57 70 0.003908863 ubox
57 80 0.004909404 ubox
58 69 0.003861483 ubox
59 78 0.005065919 ubox
60 77 0.005064742 ubox
61 76 0.005056602 ubox
62 75 0.005029342 ubox
62 93 0.003626786 ubox
62 96 0.003368516 ubox
63 95 0.005019146 ubox
64 69 0.005984456 ubox
64 73 0.004388328 ubox
64 80 0.003213728 ubox
65 69 0.003614416 ubox
67 77 0.004444153 ubox
68 76 0.004948314 ubox
69 75 0.005097464 ubox
69 86 0.933601922 ubox
69 87 0.042806283 ubox
69 88 0.009243416 ubox
69 89 0.006635582 ubox
69 90 0.004798829 ubox
69 92 0.011517377 ubox
70 74 0.005082119 ubox
70 85 0.999225466 ubox
70 91 0.012034061 ubox
71 84 0.999385228 ubox
71 90 0.011222740 ubox
72 83 0.999261315 ubox
73 82 0.999346579 ubox
73 88 0.003906763 ubox
73 89 0.004396699 ubox
73 96 0.007598397 ubox
74 81 0.999305066 ubox
74 95 0.008423481 ubox
75 80 0.885685222 ubox
76 87 0.014556584 ubox
76 93 0.008921638 ubox
77 86 0.016253384 ubox
77 92 0.009396498 ubox
78 85 0.016431581 ubox
78 91 0.009434768 ubox
91 95 0.043028344 ubox
91 98 0.103754420 ubox
91 101 0.045523540 ubox
91 104 0.035235319 ubox
91 107 0.010424973 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
