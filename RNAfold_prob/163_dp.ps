%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (163)
} def

/sequence { (\
GGAAAAAAGCAGAUCAGGUCCUGGUAAAGACGGAAACGAUCGACGAGAGAGCAAGAUCAAGCAAAAAAGAUGUUCUUCGGAAUAUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.101805790 ubox
1 52 0.006586950 ubox
1 62 0.009215934 ubox
1 86 0.003718268 ubox
1 95 0.066674769 ubox
1 98 0.067462449 ubox
1 101 0.069308638 ubox
1 104 0.069490814 ubox
1 107 0.017543751 ubox
2 10 0.026736924 ubox
2 62 0.006662213 ubox
2 86 0.004231823 ubox
2 95 0.035146659 ubox
2 98 0.035484646 ubox
2 101 0.036312515 ubox
2 104 0.036163560 ubox
2 107 0.011800183 ubox
3 85 0.003256692 ubox
8 25 0.003848671 ubox
9 44 0.026671557 ubox
9 52 0.005164124 ubox
9 62 0.917837418 ubox
9 95 0.014854608 ubox
9 98 0.014777237 ubox
9 101 0.015009599 ubox
9 104 0.015054335 ubox
9 107 0.005256805 ubox
10 23 0.004991184 ubox
10 42 0.007982781 ubox
10 51 0.005159670 ubox
10 61 0.917676287 ubox
10 91 0.018266072 ubox
11 22 0.005017634 ubox
12 21 0.004894101 ubox
12 41 0.037330932 ubox
12 57 0.005102407 ubox
12 58 0.996783567 ubox
13 25 0.005944094 ubox
13 40 0.037351292 ubox
13 57 0.998414452 ubox
14 24 0.006074083 ubox
14 39 0.037346154 ubox
14 48 0.004673040 ubox
14 55 0.009106691 ubox
14 56 0.998432391 ubox
14 92 0.003393693 ubox
15 23 0.006240050 ubox
15 33 0.003229393 ubox
15 38 0.037265691 ubox
15 47 0.004730877 ubox
15 55 0.997072554 ubox
15 91 0.003612555 ubox
16 22 0.006232371 ubox
17 21 0.006096912 ubox
17 37 0.014114592 ubox
17 41 0.003342484 ubox
17 52 0.814603211 ubox
17 58 0.004011956 ubox
18 31 0.007543489 ubox
18 37 0.004274283 ubox
18 40 0.003366806 ubox
18 44 0.004978231 ubox
18 52 0.525292795 ubox
18 57 0.004033404 ubox
19 30 0.007568150 ubox
19 34 0.035652548 ubox
19 35 0.003257392 ubox
19 36 0.003976595 ubox
19 39 0.003376268 ubox
19 43 0.004977495 ubox
19 48 0.010970231 ubox
19 49 0.012615055 ubox
19 50 0.933172314 ubox
19 51 0.346686887 ubox
19 56 0.004031352 ubox
20 29 0.007303732 ubox
20 33 0.035765985 ubox
20 38 0.003377985 ubox
20 42 0.004942189 ubox
20 47 0.010500140 ubox
20 49 0.965729650 ubox
20 51 0.029690717 ubox
20 55 0.004014834 ubox
21 29 0.004221979 ubox
21 32 0.035469141 ubox
21 33 0.013570886 ubox
21 47 0.987096265 ubox
21 49 0.146398602 ubox
22 27 0.003704732 ubox
22 28 0.005133080 ubox
22 30 0.008372599 ubox
22 32 0.014187227 ubox
22 45 0.018130666 ubox
22 46 0.984172316 ubox
22 47 0.013987468 ubox
22 48 0.145091652 ubox
23 31 0.027983171 ubox
23 41 0.004131791 ubox
23 44 0.032845434 ubox
24 31 0.013682654 ubox
24 40 0.004161753 ubox
24 44 0.984884978 ubox
25 30 0.013319637 ubox
25 39 0.004203906 ubox
25 42 0.028237018 ubox
25 43 0.950984553 ubox
25 45 0.018343973 ubox
25 46 0.015803963 ubox
26 40 0.006966837 ubox
27 40 0.049662159 ubox
28 40 0.318018268 ubox
29 37 0.022625807 ubox
29 40 0.058386500 ubox
29 41 0.827233861 ubox
29 44 0.008141667 ubox
30 40 0.826469025 ubox
31 38 0.989361109 ubox
31 42 0.079078915 ubox
32 37 0.989406413 ubox
32 41 0.078847173 ubox
33 37 0.058421691 ubox
33 40 0.053290606 ubox
33 41 0.009416792 ubox
34 40 0.010843503 ubox
37 42 0.003441528 ubox
37 45 0.003257572 ubox
37 51 0.004750623 ubox
38 44 0.003289488 ubox
38 58 0.008755664 ubox
39 57 0.008780933 ubox
40 48 0.006948532 ubox
40 50 0.003546150 ubox
40 56 0.008784513 ubox
41 47 0.007301624 ubox
41 49 0.003819613 ubox
41 55 0.008782328 ubox
42 62 0.003703395 ubox
44 49 0.004539347 ubox
44 51 0.006727361 ubox
44 61 0.005026655 ubox
44 79 0.012374355 ubox
45 52 0.003196138 ubox
45 58 0.004587030 ubox
45 62 0.004079526 ubox
45 78 0.012657573 ubox
46 57 0.004537694 ubox
46 77 0.011178504 ubox
47 58 0.011471845 ubox
47 76 0.006840524 ubox
47 77 0.006911775 ubox
48 57 0.011448436 ubox
48 76 0.011272454 ubox
49 58 0.012180570 ubox
49 75 0.013303465 ubox
50 57 0.012029924 ubox
50 74 0.013296226 ubox
51 62 0.027653441 ubox
51 73 0.013284328 ubox
52 61 0.027678557 ubox
52 72 0.013288038 ubox
53 71 0.011510556 ubox
56 71 0.005496107 ubox
57 70 0.009796039 ubox
58 69 0.009835029 ubox
61 73 0.004680549 ubox
61 95 0.022525246 ubox
61 98 0.004549871 ubox
61 104 0.003688969 ubox
62 69 0.005671376 ubox
62 72 0.005123133 ubox
62 91 0.016481131 ubox
63 71 0.004876136 ubox
67 77 0.003519074 ubox
68 76 0.003951132 ubox
69 75 0.004028814 ubox
69 86 0.990218514 ubox
69 95 0.007882274 ubox
69 98 0.080026339 ubox
69 101 0.016928203 ubox
69 104 0.007092302 ubox
70 74 0.003505969 ubox
70 85 0.991216981 ubox
71 84 0.990871698 ubox
71 94 0.003874125 ubox
71 96 0.111782802 ubox
71 97 0.004568993 ubox
71 99 0.022235318 ubox
71 102 0.009349682 ubox
71 105 0.006022844 ubox
72 83 0.991198129 ubox
72 95 0.118571965 ubox
72 98 0.023562026 ubox
72 101 0.009906700 ubox
72 104 0.006621348 ubox
73 81 0.008108956 ubox
73 82 0.991117667 ubox
73 93 0.076087593 ubox
73 94 0.096648120 ubox
73 97 0.021657076 ubox
73 100 0.009023646 ubox
73 103 0.006134961 ubox
74 80 0.011299288 ubox
74 81 0.991158079 ubox
74 92 0.105800429 ubox
74 93 0.068144850 ubox
74 96 0.012638665 ubox
74 99 0.004690877 ubox
74 102 0.003815770 ubox
75 79 0.015873021 ubox
75 80 0.990547146 ubox
75 91 0.126499157 ubox
76 80 0.003178238 ubox
76 89 0.003770561 ubox
76 90 0.126263491 ubox
76 93 0.010919038 ubox
77 88 0.005041059 ubox
77 89 0.124309192 ubox
77 92 0.012619080 ubox
78 91 0.012874177 ubox
79 85 0.003393032 ubox
79 86 0.015318971 ubox
80 85 0.009042361 ubox
80 86 0.124335119 ubox
81 85 0.108188047 ubox
85 92 0.009158185 ubox
86 91 0.011518741 ubox
91 95 0.042706013 ubox
91 98 0.102929711 ubox
91 101 0.045140504 ubox
91 104 0.034921458 ubox
91 107 0.010331470 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
