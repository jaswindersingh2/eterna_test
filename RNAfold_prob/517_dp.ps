%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (517)
} def

/sequence { (\
GGAAAAGAUGUAAUUACAAACGAAAGAGGAAAACCACUUUCGGGAAAAAACCAAAGUAAUUAACAUCUUUUGAACUUCGGUUCAAAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 69 0.003478166 ubox
1 70 0.005869329 ubox
1 71 0.014082921 ubox
1 75 0.009673835 ubox
1 76 0.006574976 ubox
1 78 0.012493553 ubox
1 83 0.004880923 ubox
1 95 0.067252039 ubox
1 98 0.067733735 ubox
1 101 0.069275107 ubox
1 104 0.069590350 ubox
1 107 0.017570109 ubox
2 67 0.003722868 ubox
2 68 0.003278412 ubox
2 69 0.010078863 ubox
2 70 0.022352467 ubox
2 71 0.048213022 ubox
2 75 0.007813846 ubox
2 77 0.012443113 ubox
2 78 0.007255529 ubox
2 82 0.004412689 ubox
2 83 0.003231159 ubox
2 95 0.035454992 ubox
2 98 0.035611539 ubox
2 101 0.036370368 ubox
2 104 0.036231713 ubox
2 107 0.011822813 ubox
3 66 0.003334874 ubox
3 68 0.007453328 ubox
3 69 0.022060704 ubox
3 70 0.054575864 ubox
3 71 0.519873170 ubox
3 76 0.010115663 ubox
3 77 0.006926802 ubox
3 81 0.003431697 ubox
4 68 0.011939550 ubox
4 69 0.053280392 ubox
4 70 0.678901349 ubox
4 71 0.018740856 ubox
4 76 0.004894557 ubox
5 68 0.043041447 ubox
5 69 0.817920613 ubox
5 70 0.020512340 ubox
6 68 0.940056177 ubox
6 69 0.017683634 ubox
7 67 0.999464786 ubox
8 66 0.999581130 ubox
9 65 0.999491115 ubox
10 64 0.999618636 ubox
11 62 0.698234163 ubox
11 63 0.710817180 ubox
12 60 0.005842497 ubox
12 61 0.989557129 ubox
13 60 0.997446585 ubox
13 61 0.027398201 ubox
14 59 0.998632002 ubox
15 58 0.999080712 ubox
15 59 0.003789281 ubox
16 57 0.999287799 ubox
17 44 0.003306614 ubox
17 56 0.998019701 ubox
21 28 0.003246820 ubox
21 42 0.958906338 ubox
21 43 0.010477343 ubox
22 41 0.999751597 ubox
23 40 0.999456586 ubox
24 39 0.998380393 ubox
25 38 0.998851086 ubox
25 39 0.003201507 ubox
25 40 0.009137482 ubox
26 35 0.005103283 ubox
26 37 0.995618699 ubox
26 39 0.018587465 ubox
27 38 0.022346818 ubox
28 34 0.062599978 ubox
28 35 0.991506057 ubox
28 37 0.023513446 ubox
28 41 0.003755904 ubox
29 34 0.986570997 ubox
29 35 0.073512428 ubox
29 40 0.003776742 ubox
29 41 0.005934959 ubox
30 39 0.003778994 ubox
30 40 0.005930526 ubox
31 38 0.003461872 ubox
31 39 0.005877645 ubox
32 38 0.005504438 ubox
42 51 0.018943174 ubox
42 52 0.254112439 ubox
43 51 0.269116829 ubox
43 52 0.939189311 ubox
44 51 0.936775118 ubox
44 52 0.054752035 ubox
50 57 0.004231519 ubox
51 56 0.004868445 ubox
66 92 0.011149323 ubox
67 91 0.014597211 ubox
68 86 0.011346596 ubox
68 87 0.292761780 ubox
68 88 0.027371426 ubox
68 89 0.013056410 ubox
68 90 0.016386845 ubox
68 91 0.005328438 ubox
68 92 0.005196794 ubox
68 93 0.003691808 ubox
69 85 0.016266808 ubox
69 86 0.518059158 ubox
69 87 0.041767434 ubox
69 88 0.018992948 ubox
69 89 0.017244498 ubox
69 90 0.008641019 ubox
69 91 0.006639168 ubox
69 92 0.005694093 ubox
69 93 0.004047253 ubox
70 84 0.015206616 ubox
70 85 0.688660293 ubox
70 86 0.044993753 ubox
70 87 0.018369455 ubox
70 88 0.015399028 ubox
70 89 0.008875267 ubox
70 90 0.006221194 ubox
70 91 0.005600674 ubox
70 92 0.004325969 ubox
70 97 0.004213832 ubox
70 100 0.003356249 ubox
70 103 0.003442123 ubox
71 79 0.006219764 ubox
71 84 0.829302976 ubox
71 85 0.038119570 ubox
71 86 0.010471587 ubox
71 87 0.008632855 ubox
71 88 0.005309399 ubox
71 89 0.003769966 ubox
71 96 0.006587025 ubox
71 99 0.005245292 ubox
71 102 0.005425293 ubox
71 105 0.004111225 ubox
72 78 0.014995623 ubox
72 83 0.996739376 ubox
72 95 0.008925153 ubox
72 98 0.007092441 ubox
72 101 0.007354837 ubox
72 104 0.005554961 ubox
73 77 0.013060041 ubox
73 82 0.996778186 ubox
74 81 0.996346505 ubox
75 79 0.012560442 ubox
75 80 0.995724030 ubox
75 91 0.006910480 ubox
76 80 0.004089940 ubox
76 90 0.006888362 ubox
76 93 0.031162519 ubox
76 97 0.006794477 ubox
76 100 0.003785509 ubox
77 89 0.006364516 ubox
77 92 0.034409977 ubox
77 96 0.007517655 ubox
77 97 0.005150387 ubox
77 99 0.004014934 ubox
78 91 0.034751220 ubox
79 95 0.033048607 ubox
79 98 0.004898721 ubox
79 101 0.003264714 ubox
80 95 0.025971023 ubox
80 98 0.008841445 ubox
80 101 0.006854114 ubox
80 104 0.005684736 ubox
81 87 0.003844731 ubox
81 88 0.019595948 ubox
81 89 0.005592456 ubox
81 93 0.032073510 ubox
81 94 0.022061414 ubox
81 97 0.008614003 ubox
81 100 0.006761758 ubox
81 103 0.005612260 ubox
82 86 0.003499322 ubox
82 87 0.017343749 ubox
82 88 0.005624588 ubox
82 89 0.003167291 ubox
82 92 0.045155640 ubox
82 93 0.016809528 ubox
82 96 0.007167128 ubox
82 99 0.005959799 ubox
82 102 0.004960164 ubox
83 91 0.047464305 ubox
91 95 0.042947565 ubox
91 98 0.103556450 ubox
91 101 0.045437925 ubox
91 104 0.035169463 ubox
91 107 0.010405420 ubox
3 71 0.9500000 lbox
4 70 0.9500000 lbox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 61 0.9500000 lbox
13 60 0.9500000 lbox
14 59 0.9500000 lbox
15 58 0.9500000 lbox
16 57 0.9500000 lbox
17 56 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
