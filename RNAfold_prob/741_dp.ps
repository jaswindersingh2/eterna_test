%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (741)
} def

/sequence { (\
GGAAAGUCGGUGCAAAGGACGGACAACAUGGCGAGAAAAUGGCGAUGAGAGGUGGCGAAAGGCAGCUCGGAUUUCUUCGGAAAUCCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.004430105 ubox
1 24 0.024996870 ubox
1 27 0.017963246 ubox
1 68 0.007684633 ubox
1 86 0.022926548 ubox
1 95 0.242420361 ubox
1 98 0.244064594 ubox
1 101 0.249539712 ubox
1 104 0.250668793 ubox
1 107 0.063288421 ubox
2 7 0.003320948 ubox
2 8 0.005960837 ubox
2 24 0.018420313 ubox
2 27 0.011795592 ubox
2 67 0.003490405 ubox
2 68 0.009259351 ubox
2 85 0.020464713 ubox
2 86 0.008132675 ubox
2 95 0.127942652 ubox
2 98 0.128412160 ubox
2 101 0.131148304 ubox
2 104 0.130650061 ubox
2 107 0.042631918 ubox
3 7 0.005207941 ubox
3 67 0.006734155 ubox
3 84 0.016002831 ubox
6 20 0.052028374 ubox
6 24 0.995822675 ubox
6 95 0.015548112 ubox
6 98 0.017927728 ubox
6 101 0.018415362 ubox
6 104 0.018165226 ubox
6 107 0.006371120 ubox
7 18 0.004431040 ubox
7 19 0.052023024 ubox
7 22 0.015271237 ubox
7 23 0.997239565 ubox
7 92 0.011215799 ubox
7 94 0.012546492 ubox
7 97 0.015406585 ubox
7 100 0.015969111 ubox
7 103 0.015784459 ubox
7 106 0.005603934 ubox
8 17 0.006893972 ubox
8 18 0.051847196 ubox
8 21 0.025246430 ubox
8 22 0.996705858 ubox
8 91 0.011635646 ubox
9 20 0.028867417 ubox
9 95 0.008792399 ubox
9 98 0.009410874 ubox
9 101 0.009379181 ubox
9 104 0.005039842 ubox
10 20 0.995959015 ubox
10 24 0.022742181 ubox
10 95 0.005535136 ubox
10 98 0.005499009 ubox
10 101 0.005412627 ubox
10 104 0.003674535 ubox
11 15 0.004270660 ubox
11 16 0.012931785 ubox
11 17 0.007671920 ubox
11 18 0.037976297 ubox
11 19 0.993231097 ubox
11 21 0.007604763 ubox
11 23 0.022734115 ubox
11 94 0.005372830 ubox
11 96 0.005174068 ubox
11 97 0.005063034 ubox
11 99 0.005036447 ubox
11 100 0.005011635 ubox
11 103 0.003398677 ubox
12 20 0.009499674 ubox
12 24 0.003660397 ubox
12 95 0.005922650 ubox
12 98 0.005755063 ubox
12 101 0.003509183 ubox
13 17 0.808242980 ubox
13 18 0.221668949 ubox
13 21 0.022304741 ubox
13 22 0.005306830 ubox
13 91 0.003228285 ubox
17 24 0.008513528 ubox
21 95 0.004625273 ubox
21 98 0.004400765 ubox
21 101 0.004472582 ubox
21 104 0.004442040 ubox
24 91 0.005233470 ubox
27 41 0.006602420 ubox
27 47 0.993740488 ubox
27 91 0.007191345 ubox
28 40 0.006606863 ubox
28 46 0.998016894 ubox
29 39 0.006535533 ubox
29 44 0.015711385 ubox
29 45 0.992701270 ubox
29 96 0.007673356 ubox
29 99 0.007704809 ubox
29 102 0.007869554 ubox
29 105 0.007900827 ubox
30 43 0.026205086 ubox
30 95 0.008510033 ubox
30 98 0.008544001 ubox
30 101 0.008727315 ubox
30 104 0.008761660 ubox
31 43 0.999461864 ubox
32 41 0.036837929 ubox
32 42 0.999118715 ubox
32 44 0.003607812 ubox
33 40 0.029090284 ubox
33 43 0.003621114 ubox
34 40 0.899841108 ubox
35 40 0.021585121 ubox
36 40 0.008251613 ubox
44 98 0.003218641 ubox
44 101 0.003190103 ubox
46 96 0.004660744 ubox
46 99 0.004600719 ubox
46 102 0.004467625 ubox
46 105 0.003688470 ubox
47 68 0.007650186 ubox
47 95 0.005919377 ubox
47 98 0.005851743 ubox
47 101 0.005766859 ubox
47 104 0.005159726 ubox
48 67 0.008271631 ubox
49 66 0.008176617 ubox
49 68 0.997820237 ubox
50 67 0.999113823 ubox
51 66 0.998884562 ubox
51 67 0.025661021 ubox
51 68 0.008069323 ubox
52 63 0.007235303 ubox
52 66 0.034634258 ubox
52 68 0.004377802 ubox
53 62 0.007217581 ubox
53 64 0.996687947 ubox
53 65 0.037354089 ubox
54 63 0.991994914 ubox
54 67 0.008661593 ubox
55 63 0.123924249 ubox
55 66 0.010049587 ubox
56 61 0.974603657 ubox
56 62 0.165015383 ubox
56 65 0.010078207 ubox
67 88 0.003631622 ubox
67 92 0.003594065 ubox
68 91 0.004927607 ubox
69 78 0.004343954 ubox
69 86 0.998248981 ubox
69 95 0.004455689 ubox
69 98 0.009333981 ubox
70 77 0.004205173 ubox
70 78 0.005321210 ubox
70 85 0.999408517 ubox
70 95 0.012555255 ubox
70 98 0.003949583 ubox
71 76 0.003795399 ubox
71 77 0.005277431 ubox
71 84 0.999221737 ubox
72 82 0.008540224 ubox
72 83 0.998521517 ubox
72 94 0.022768105 ubox
73 81 0.011880832 ubox
73 82 0.998139678 ubox
73 93 0.025590110 ubox
74 80 0.014276006 ubox
74 81 0.998925347 ubox
74 92 0.026220046 ubox
75 79 0.018035507 ubox
75 80 0.998359437 ubox
75 91 0.026301337 ubox
76 80 0.003210925 ubox
76 89 0.004633891 ubox
76 90 0.025761388 ubox
77 88 0.006259714 ubox
77 89 0.023935643 ubox
79 86 0.024530064 ubox
80 85 0.024486753 ubox
80 86 0.009742342 ubox
86 91 0.007912353 ubox
91 95 0.054598171 ubox
91 98 0.119571886 ubox
91 101 0.046251909 ubox
91 104 0.029949113 ubox
91 107 0.008717960 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
