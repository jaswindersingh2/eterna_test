%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (287)
} def

/sequence { (\
GGAAAAAAGAUCAAGAUGGAAACAUCAGUCAGGUCAAAGACAGGAAACAGUCAGACAAGACAAGAUCAGUCGAUCUUCGGAUCGAUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.022988808 ubox
1 67 0.013680821 ubox
1 95 0.070717220 ubox
1 98 0.070883167 ubox
1 101 0.073007366 ubox
1 104 0.072948097 ubox
1 107 0.018373389 ubox
2 11 0.020397899 ubox
2 12 0.040335517 ubox
2 66 0.008406438 ubox
2 67 0.021760761 ubox
2 71 0.004975670 ubox
2 83 0.003782351 ubox
2 95 0.036739419 ubox
2 98 0.036901117 ubox
2 101 0.038082772 ubox
2 104 0.037532814 ubox
2 107 0.012240861 ubox
3 11 0.038915647 ubox
3 66 0.020349666 ubox
3 70 0.005179095 ubox
3 82 0.003644259 ubox
3 86 0.003603131 ubox
4 11 0.004712213 ubox
4 86 0.004840837 ubox
5 86 0.007868965 ubox
6 70 0.011068212 ubox
6 86 0.020074183 ubox
7 77 0.006321561 ubox
7 86 0.009895464 ubox
8 76 0.007236995 ubox
8 86 0.003876760 ubox
9 30 0.009878845 ubox
9 35 0.003744063 ubox
9 67 0.977208161 ubox
9 75 0.007389228 ubox
9 83 0.096764965 ubox
9 95 0.017153591 ubox
9 98 0.013233541 ubox
9 101 0.013284172 ubox
9 104 0.013313907 ubox
9 107 0.004647705 ubox
10 29 0.009893270 ubox
10 34 0.003748069 ubox
10 66 0.978151174 ubox
10 74 0.007387383 ubox
10 82 0.096874316 ubox
10 86 0.007862818 ubox
11 20 0.003347534 ubox
11 28 0.009670363 ubox
11 33 0.003736265 ubox
11 65 0.978173141 ubox
11 73 0.007385561 ubox
11 80 0.005881652 ubox
11 81 0.096713229 ubox
11 85 0.008090349 ubox
11 92 0.047539254 ubox
11 93 0.004423522 ubox
12 19 0.003591773 ubox
12 32 0.003712346 ubox
12 64 0.977248874 ubox
12 72 0.007376425 ubox
12 79 0.011037350 ubox
12 80 0.096087753 ubox
12 84 0.008082200 ubox
12 91 0.050606105 ubox
13 77 0.049779619 ubox
14 76 0.058020504 ubox
14 77 0.005118672 ubox
15 26 0.996547282 ubox
15 30 0.004337300 ubox
15 75 0.058805199 ubox
16 25 0.997530899 ubox
16 29 0.004336640 ubox
16 74 0.058794667 ubox
17 24 0.997491133 ubox
17 27 0.010635973 ubox
17 28 0.003932429 ubox
17 73 0.058436220 ubox
18 23 0.997282777 ubox
18 26 0.011719457 ubox
19 23 0.007666069 ubox
19 25 0.008564714 ubox
19 26 0.013443112 ubox
19 71 0.058739311 ubox
20 25 0.012381599 ubox
20 70 0.058387682 ubox
23 69 0.003392569 ubox
24 66 0.055247256 ubox
25 65 0.058080255 ubox
26 64 0.058132991 ubox
28 41 0.043261565 ubox
28 48 0.014981395 ubox
28 61 0.994755942 ubox
28 66 0.006957217 ubox
29 40 0.043318082 ubox
29 44 0.006556941 ubox
29 45 0.057628772 ubox
29 46 0.003282974 ubox
29 47 0.010070489 ubox
29 60 0.996049469 ubox
29 65 0.007487690 ubox
30 39 0.043325536 ubox
30 43 0.008470250 ubox
30 44 0.062274087 ubox
30 59 0.995819233 ubox
30 64 0.007555607 ubox
32 41 0.003941917 ubox
32 56 0.008895872 ubox
33 41 0.064368293 ubox
33 56 0.996570129 ubox
33 61 0.009566814 ubox
34 40 0.064343844 ubox
34 55 0.996681848 ubox
34 60 0.009574595 ubox
35 39 0.063804064 ubox
35 54 0.996061616 ubox
35 59 0.009553539 ubox
38 51 0.011402244 ubox
39 48 0.005272186 ubox
39 51 0.004026942 ubox
39 52 0.995572242 ubox
40 51 0.996158792 ubox
41 50 0.994296019 ubox
43 48 0.703218899 ubox
44 48 0.092276704 ubox
44 52 0.003991028 ubox
44 67 0.003186993 ubox
45 51 0.003837595 ubox
50 61 0.077443849 ubox
51 60 0.077545343 ubox
52 59 0.077496285 ubox
59 67 0.003232925 ubox
61 79 0.003861449 ubox
62 77 0.068682445 ubox
63 76 0.077682293 ubox
64 71 0.003970200 ubox
64 75 0.078800727 ubox
64 95 0.007180141 ubox
65 70 0.003537585 ubox
65 74 0.078788024 ubox
66 73 0.078772999 ubox
66 87 0.006999820 ubox
66 88 0.007449889 ubox
66 89 0.028475929 ubox
66 90 0.005852915 ubox
66 92 0.026675346 ubox
67 72 0.078658790 ubox
67 91 0.028574354 ubox
68 86 0.030559373 ubox
69 86 0.963578882 ubox
69 95 0.012341237 ubox
69 98 0.009675862 ubox
69 101 0.007717858 ubox
69 104 0.007150874 ubox
70 85 0.989665724 ubox
70 94 0.007997117 ubox
70 97 0.006285446 ubox
70 100 0.005041470 ubox
70 103 0.004690124 ubox
71 79 0.003851206 ubox
71 84 0.994953445 ubox
72 78 0.003946773 ubox
72 83 0.995076007 ubox
73 77 0.003434723 ubox
73 82 0.994851119 ubox
74 80 0.007333026 ubox
74 81 0.994717054 ubox
75 79 0.013537880 ubox
75 80 0.994009313 ubox
76 80 0.003170557 ubox
77 85 0.004694966 ubox
78 84 0.005811445 ubox
79 83 0.005492134 ubox
79 95 0.010514812 ubox
82 92 0.011525119 ubox
83 91 0.011724788 ubox
84 95 0.004777602 ubox
84 98 0.003350607 ubox
86 91 0.003724149 ubox
86 92 0.005129800 ubox
86 93 0.006910341 ubox
86 94 0.003567571 ubox
91 95 0.043091505 ubox
91 98 0.103757001 ubox
91 101 0.045455100 ubox
91 104 0.035124937 ubox
91 107 0.010390631 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
