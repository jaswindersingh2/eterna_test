%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (464)
} def

/sequence { (\
GGAAAACCCGGGCGCAGGGUAAACCCGCGUAAACGCGCGAAAAUGGCCCUAAUGGGCCACCCGGGAAACCUUUUUUUCGAAAAAGGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.007862715 ubox
1 8 0.003355090 ubox
1 9 0.004025513 ubox
1 25 0.005293468 ubox
1 62 0.005043507 ubox
1 69 0.049073072 ubox
1 70 0.806794639 ubox
1 71 0.049906596 ubox
1 78 0.014232264 ubox
1 95 0.039754827 ubox
1 98 0.039903106 ubox
1 101 0.040212022 ubox
1 104 0.040276170 ubox
1 107 0.010151013 ubox
2 7 0.004734037 ubox
2 8 0.004034205 ubox
2 24 0.005329126 ubox
2 61 0.005032579 ubox
2 69 0.807147146 ubox
2 70 0.082448429 ubox
2 71 0.005201023 ubox
2 72 0.005019985 ubox
2 73 0.004065442 ubox
2 75 0.004926868 ubox
2 77 0.014242387 ubox
2 78 0.008734620 ubox
2 95 0.020773146 ubox
2 98 0.020794768 ubox
2 101 0.020928225 ubox
2 104 0.020790069 ubox
2 107 0.006772302 ubox
3 71 0.005775099 ubox
3 72 0.004714351 ubox
3 73 0.003407414 ubox
3 74 0.005721363 ubox
3 76 0.014229191 ubox
3 77 0.008737150 ubox
4 71 0.004979491 ubox
4 72 0.003736373 ubox
4 73 0.006367277 ubox
4 75 0.014187228 ubox
4 76 0.008708127 ubox
5 71 0.003819004 ubox
5 72 0.006859484 ubox
5 73 0.003322489 ubox
5 74 0.014110329 ubox
5 75 0.008658563 ubox
6 20 0.008624853 ubox
6 71 0.007252537 ubox
6 72 0.003465854 ubox
6 73 0.013791781 ubox
6 74 0.008455917 ubox
7 19 0.008916323 ubox
7 64 0.012216233 ubox
7 65 0.997306295 ubox
8 18 0.008918665 ubox
8 63 0.008862905 ubox
8 64 0.999841618 ubox
8 65 0.004467729 ubox
9 17 0.008916117 ubox
9 63 0.999881111 ubox
9 64 0.003429685 ubox
10 15 0.003392230 ubox
10 61 0.007681282 ubox
10 62 0.999896461 ubox
11 58 0.004035188 ubox
11 60 0.010474189 ubox
11 61 0.999824807 ubox
11 62 0.003501292 ubox
12 20 0.020233865 ubox
12 28 0.003282157 ubox
12 30 0.104829991 ubox
12 36 0.004332570 ubox
12 38 0.022848234 ubox
12 57 0.005670034 ubox
12 60 0.989393099 ubox
12 61 0.004529134 ubox
13 17 0.020153745 ubox
13 18 0.058758191 ubox
13 19 0.046534709 ubox
13 27 0.007087412 ubox
13 29 0.241212297 ubox
13 35 0.004629614 ubox
13 37 0.024975465 ubox
13 39 0.363630599 ubox
13 56 0.006751531 ubox
14 20 0.030491057 ubox
14 24 0.008252086 ubox
14 25 0.008676409 ubox
14 26 0.015336341 ubox
14 28 0.249883938 ubox
14 30 0.009462958 ubox
14 34 0.003765526 ubox
14 36 0.023966876 ubox
14 38 0.368445089 ubox
14 57 0.007382751 ubox
14 58 0.020463323 ubox
14 60 0.006946442 ubox
15 19 0.031252758 ubox
15 27 0.249497706 ubox
15 29 0.010049124 ubox
15 35 0.023747082 ubox
15 37 0.367929885 ubox
15 39 0.013740056 ubox
15 54 0.006787157 ubox
15 56 0.007961559 ubox
16 30 0.003225039 ubox
16 50 0.009467741 ubox
16 53 0.004778206 ubox
17 24 0.053686162 ubox
17 25 0.607096766 ubox
17 26 0.746367759 ubox
17 34 0.007077512 ubox
17 36 0.027171766 ubox
17 49 0.010678147 ubox
18 24 0.608346266 ubox
18 25 0.775543390 ubox
18 26 0.049103020 ubox
18 34 0.004939844 ubox
18 48 0.010680486 ubox
19 24 0.770974988 ubox
19 25 0.050763457 ubox
19 26 0.004805106 ubox
19 28 0.004051400 ubox
19 34 0.027369606 ubox
19 44 0.003394890 ubox
19 47 0.010680529 ubox
20 27 0.003954016 ubox
20 31 0.006632612 ubox
20 33 0.026873960 ubox
20 43 0.003792407 ubox
20 46 0.010527461 ubox
21 30 0.006573518 ubox
23 30 0.025156384 ubox
24 29 0.025501728 ubox
24 39 0.016914640 ubox
25 39 0.026660910 ubox
26 37 0.088969884 ubox
26 39 0.640699080 ubox
27 34 0.009187099 ubox
27 36 0.405270992 ubox
27 38 0.876767145 ubox
28 35 0.405661946 ubox
28 37 0.877231138 ubox
28 39 0.038914895 ubox
29 34 0.395318671 ubox
29 36 0.876749538 ubox
29 38 0.053924349 ubox
30 35 0.840707592 ubox
30 37 0.053103743 ubox
30 39 0.008467322 ubox
30 40 0.004906803 ubox
30 41 0.004781108 ubox
30 42 0.004320238 ubox
30 43 0.003985913 ubox
34 39 0.043908862 ubox
35 44 0.004253151 ubox
37 44 0.005263244 ubox
37 60 0.003922044 ubox
39 44 0.008077928 ubox
39 60 0.008731459 ubox
40 44 0.015079877 ubox
44 59 0.869392856 ubox
45 58 0.999465114 ubox
46 57 0.999934314 ubox
47 56 0.999934075 ubox
48 55 0.999927071 ubox
49 54 0.999380725 ubox
49 55 0.003880415 ubox
50 54 0.004280191 ubox
63 70 0.009086859 ubox
64 69 0.009122739 ubox
65 70 0.003792435 ubox
65 98 0.005646307 ubox
66 71 0.003957629 ubox
69 86 0.321631229 ubox
69 91 0.008734279 ubox
70 85 0.323123622 ubox
70 86 0.035128438 ubox
70 91 0.128380244 ubox
71 82 0.003789868 ubox
71 83 0.013901323 ubox
71 84 0.322516511 ubox
71 85 0.035519090 ubox
71 86 0.005899202 ubox
71 87 0.011860252 ubox
71 88 0.017034127 ubox
71 89 0.015858104 ubox
71 90 0.129325056 ubox
71 91 0.026931276 ubox
71 92 0.592052719 ubox
71 93 0.595491315 ubox
71 94 0.063971410 ubox
71 96 0.011327954 ubox
71 97 0.008564637 ubox
71 99 0.004531433 ubox
71 100 0.004201008 ubox
71 102 0.003225573 ubox
71 103 0.003194403 ubox
72 81 0.005956598 ubox
72 82 0.019246558 ubox
72 83 0.321682304 ubox
72 84 0.037056892 ubox
72 85 0.007207753 ubox
72 86 0.012567401 ubox
72 87 0.019069228 ubox
72 88 0.017836434 ubox
72 89 0.127758312 ubox
72 90 0.029565101 ubox
72 91 0.627220026 ubox
72 92 0.661192064 ubox
72 93 0.069903619 ubox
72 94 0.015691864 ubox
72 96 0.006824430 ubox
72 97 0.006737101 ubox
72 99 0.003467221 ubox
73 80 0.007482744 ubox
73 81 0.023405562 ubox
73 82 0.320843524 ubox
73 83 0.038485349 ubox
73 84 0.008007298 ubox
73 85 0.012895018 ubox
73 86 0.019358121 ubox
73 87 0.018586600 ubox
73 88 0.125999101 ubox
73 89 0.028209189 ubox
73 90 0.640240158 ubox
73 91 0.668356108 ubox
73 92 0.065789815 ubox
73 93 0.017136739 ubox
73 94 0.005109893 ubox
73 96 0.007093814 ubox
74 79 0.007510952 ubox
74 80 0.026613530 ubox
74 81 0.313153157 ubox
74 82 0.039775724 ubox
74 83 0.008989099 ubox
74 84 0.013185118 ubox
74 85 0.019589284 ubox
74 86 0.018987460 ubox
74 87 0.124371614 ubox
74 88 0.025773717 ubox
74 89 0.644734114 ubox
74 90 0.670442229 ubox
74 91 0.059829175 ubox
74 92 0.015925944 ubox
74 93 0.005344817 ubox
74 96 0.003221057 ubox
75 79 0.026703088 ubox
75 80 0.272551053 ubox
75 81 0.040273048 ubox
75 82 0.009687873 ubox
75 83 0.013421092 ubox
75 84 0.019968409 ubox
75 85 0.019634870 ubox
75 86 0.123078270 ubox
75 87 0.022830583 ubox
75 88 0.646765126 ubox
75 89 0.671614086 ubox
75 90 0.050158991 ubox
75 91 0.014034222 ubox
75 92 0.004843286 ubox
75 94 0.014375455 ubox
76 80 0.034648426 ubox
76 81 0.009174865 ubox
76 82 0.013445288 ubox
76 83 0.020049428 ubox
76 84 0.020244275 ubox
76 85 0.120315663 ubox
76 86 0.019236951 ubox
76 87 0.648583132 ubox
76 88 0.671912370 ubox
76 89 0.040341269 ubox
76 90 0.009293822 ubox
76 91 0.004112726 ubox
76 93 0.016399242 ubox
77 81 0.011397544 ubox
77 82 0.017792151 ubox
77 83 0.019421407 ubox
77 84 0.105038006 ubox
77 85 0.013496970 ubox
77 86 0.649508431 ubox
77 87 0.672712802 ubox
77 88 0.028710470 ubox
77 89 0.005716919 ubox
77 92 0.016865640 ubox
78 85 0.651409165 ubox
78 86 0.671979031 ubox
78 91 0.016933338 ubox
85 95 0.003285776 ubox
86 95 0.003523481 ubox
91 95 0.015718638 ubox
91 98 0.037973128 ubox
91 101 0.016690897 ubox
91 104 0.012944352 ubox
91 107 0.003830216 ubox
1 70 0.9500000 lbox
2 69 0.9500000 lbox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
17 25 0.9500000 lbox
18 24 0.9500000 lbox
26 39 0.9500000 lbox
27 38 0.9500000 lbox
28 37 0.9500000 lbox
29 36 0.9500000 lbox
30 35 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
71 92 0.9500000 lbox
72 91 0.9500000 lbox
73 90 0.9500000 lbox
74 89 0.9500000 lbox
75 88 0.9500000 lbox
76 87 0.9500000 lbox
77 86 0.9500000 lbox
78 85 0.9500000 lbox
showpage
end
%%EOF
