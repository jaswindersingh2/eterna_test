%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (136)
} def

/sequence { (\
GGAAAAAACGACAUGAGAACGCGCGAAGGGUAGAAGUAACCGCGGGCAGUGCAACAUGAACGAAAAAAUGUUGGAUUCGUCCAACAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.155682571 ubox
1 12 0.022660307 ubox
1 20 0.010012975 ubox
1 22 0.005499734 ubox
1 24 0.003569059 ubox
1 41 0.011231864 ubox
1 61 0.025597027 ubox
1 69 0.016619250 ubox
1 82 0.095339845 ubox
1 85 0.012384953 ubox
1 95 0.066955160 ubox
1 98 0.067623713 ubox
1 101 0.069194761 ubox
1 104 0.069733160 ubox
1 107 0.017613150 ubox
2 9 0.078321098 ubox
2 12 0.006548518 ubox
2 20 0.003662079 ubox
2 22 0.003971020 ubox
2 40 0.011209538 ubox
2 61 0.011390317 ubox
2 69 0.010826812 ubox
2 78 0.004457715 ubox
2 81 0.095372344 ubox
2 85 0.006739651 ubox
2 95 0.034887524 ubox
2 98 0.035190423 ubox
2 101 0.035884075 ubox
2 104 0.035787529 ubox
2 107 0.011682235 ubox
3 69 0.010014704 ubox
3 77 0.004251620 ubox
3 80 0.084075750 ubox
4 69 0.006099571 ubox
4 76 0.003285580 ubox
4 77 0.004142879 ubox
4 80 0.004112387 ubox
5 14 0.004404986 ubox
5 69 0.004069068 ubox
5 76 0.003873344 ubox
5 77 0.016856051 ubox
6 76 0.017784428 ubox
6 77 0.023358983 ubox
7 14 0.005328581 ubox
7 76 0.020889035 ubox
8 14 0.003391667 ubox
8 31 0.003931978 ubox
8 37 0.005672731 ubox
8 69 0.003943478 ubox
8 80 0.049028132 ubox
9 15 0.018482943 ubox
9 17 0.020708494 ubox
9 21 0.020568102 ubox
9 23 0.025642405 ubox
9 25 0.033933478 ubox
9 28 0.012539852 ubox
9 30 0.004069579 ubox
9 33 0.003818624 ubox
9 36 0.005867458 ubox
9 42 0.013477851 ubox
9 51 0.003560856 ubox
9 58 0.014074291 ubox
9 62 0.701910326 ubox
9 73 0.041089805 ubox
9 74 0.008993363 ubox
9 79 0.067419025 ubox
9 91 0.025163201 ubox
10 14 0.011579310 ubox
10 20 0.021669380 ubox
10 22 0.027032473 ubox
10 24 0.034603312 ubox
10 40 0.004150331 ubox
10 41 0.013571737 ubox
10 43 0.003307500 ubox
10 52 0.035958187 ubox
10 55 0.009784433 ubox
10 57 0.011801466 ubox
10 61 0.711935370 ubox
10 72 0.041135951 ubox
10 78 0.067274515 ubox
10 81 0.036635301 ubox
10 82 0.003688071 ubox
10 85 0.004923515 ubox
10 95 0.026932418 ubox
10 98 0.026528670 ubox
10 101 0.027167465 ubox
10 104 0.027292186 ubox
10 107 0.010339820 ubox
11 31 0.006559560 ubox
11 37 0.009435317 ubox
11 50 0.008885683 ubox
11 57 0.004082140 ubox
11 71 0.041174431 ubox
11 77 0.055845229 ubox
11 80 0.036794948 ubox
12 17 0.020849004 ubox
12 21 0.026243452 ubox
12 23 0.032785892 ubox
12 25 0.014542955 ubox
12 28 0.003625705 ubox
12 30 0.006685108 ubox
12 33 0.003921399 ubox
12 36 0.009652956 ubox
12 49 0.009220332 ubox
12 51 0.052899262 ubox
12 58 0.976140809 ubox
12 62 0.004979770 ubox
12 70 0.041041301 ubox
12 74 0.003684985 ubox
12 79 0.036749093 ubox
12 91 0.006818465 ubox
13 37 0.012208520 ubox
13 50 0.052937899 ubox
13 57 0.979575582 ubox
13 69 0.040604552 ubox
13 76 0.006829397 ubox
13 80 0.009932534 ubox
14 19 0.013202502 ubox
14 21 0.032499439 ubox
14 23 0.016132444 ubox
14 25 0.007078745 ubox
14 27 0.004180095 ubox
14 32 0.003305680 ubox
14 34 0.005150189 ubox
14 35 0.005759405 ubox
14 36 0.012578308 ubox
14 38 0.003793307 ubox
14 48 0.012564916 ubox
14 49 0.052348963 ubox
14 53 0.029026339 ubox
14 54 0.008256383 ubox
14 56 0.979609352 ubox
14 59 0.007519812 ubox
14 68 0.038968044 ubox
14 75 0.006657062 ubox
14 79 0.012974530 ubox
14 83 0.007592154 ubox
14 86 0.008900956 ubox
14 96 0.012292229 ubox
14 99 0.012515536 ubox
14 102 0.012603615 ubox
14 105 0.012365682 ubox
15 20 0.037418732 ubox
15 22 0.019098823 ubox
15 24 0.010738642 ubox
15 37 0.004029030 ubox
15 47 0.013521742 ubox
15 52 0.032338155 ubox
15 55 0.976702779 ubox
15 78 0.015614879 ubox
15 81 0.003703858 ubox
15 82 0.008302445 ubox
15 85 0.009737792 ubox
15 95 0.013507821 ubox
15 98 0.013752615 ubox
15 101 0.013871203 ubox
15 104 0.013661369 ubox
16 50 0.020345236 ubox
16 57 0.008313057 ubox
16 77 0.013999503 ubox
16 80 0.003632795 ubox
17 22 0.011807223 ubox
17 24 0.008939302 ubox
17 47 0.054201317 ubox
17 50 0.008411140 ubox
17 52 0.348918926 ubox
17 55 0.008983718 ubox
17 76 0.005300033 ubox
17 78 0.006518246 ubox
17 81 0.007856744 ubox
17 82 0.003274090 ubox
17 85 0.003932120 ubox
17 95 0.005798921 ubox
17 98 0.005768777 ubox
17 101 0.005857592 ubox
17 104 0.005633810 ubox
18 50 0.082541736 ubox
18 77 0.005960672 ubox
18 80 0.006562395 ubox
19 31 0.037111806 ubox
19 37 0.006221275 ubox
19 50 0.910284795 ubox
19 76 0.003316137 ubox
19 80 0.005605089 ubox
20 25 0.004856947 ubox
20 28 0.008022795 ubox
20 29 0.004411892 ubox
20 30 0.038542103 ubox
20 33 0.004624065 ubox
20 36 0.006435380 ubox
20 42 0.003424983 ubox
20 44 0.057687795 ubox
20 45 0.014708457 ubox
20 46 0.065410116 ubox
20 49 0.925503073 ubox
20 51 0.256369773 ubox
20 62 0.010737874 ubox
20 79 0.006949884 ubox
20 91 0.004628003 ubox
21 31 0.011294642 ubox
21 37 0.003698271 ubox
21 41 0.003391948 ubox
21 43 0.070022927 ubox
21 47 0.939840732 ubox
21 50 0.257584225 ubox
21 52 0.094772347 ubox
21 61 0.007249804 ubox
21 95 0.003354253 ubox
21 98 0.003351806 ubox
21 101 0.003286179 ubox
21 104 0.003270360 ubox
22 28 0.039012698 ubox
22 29 0.007026410 ubox
22 30 0.011669472 ubox
22 33 0.003407025 ubox
22 36 0.003821421 ubox
22 42 0.070036246 ubox
22 44 0.075230206 ubox
22 45 0.007179107 ubox
22 46 0.942667516 ubox
22 49 0.257592960 ubox
22 51 0.094897735 ubox
22 91 0.003991442 ubox
23 31 0.010875748 ubox
23 37 0.007732266 ubox
23 41 0.060004060 ubox
23 43 0.102042015 ubox
23 47 0.279741107 ubox
23 50 0.093585386 ubox
24 28 0.008913598 ubox
24 29 0.010129733 ubox
24 30 0.013224322 ubox
24 33 0.010501456 ubox
24 36 0.011875764 ubox
24 42 0.102097232 ubox
24 44 0.939970417 ubox
24 45 0.061248525 ubox
24 46 0.280179250 ubox
24 49 0.093530049 ubox
24 58 0.004270142 ubox
25 40 0.041313530 ubox
25 41 0.081305209 ubox
25 43 0.927862925 ubox
25 47 0.037538277 ubox
26 37 0.004504779 ubox
27 37 0.011164143 ubox
28 37 0.026295823 ubox
28 40 0.083183974 ubox
28 41 0.720649076 ubox
28 43 0.133406000 ubox
28 98 0.003448199 ubox
28 101 0.003202794 ubox
29 37 0.030692237 ubox
29 40 0.719366928 ubox
29 41 0.674583918 ubox
29 43 0.005473218 ubox
30 37 0.020562344 ubox
30 40 0.677678043 ubox
30 41 0.014969436 ubox
30 43 0.023120276 ubox
31 35 0.021662959 ubox
31 36 0.023140066 ubox
31 38 0.429593874 ubox
31 39 0.641929531 ubox
31 42 0.022756385 ubox
32 37 0.557272034 ubox
33 37 0.098942883 ubox
33 40 0.020815807 ubox
33 41 0.007934590 ubox
36 41 0.003853096 ubox
36 43 0.013368941 ubox
37 42 0.012845395 ubox
42 50 0.003245499 ubox
42 52 0.008137708 ubox
42 85 0.011687442 ubox
43 49 0.003278298 ubox
43 51 0.008147366 ubox
43 62 0.014791272 ubox
44 50 0.007686471 ubox
44 61 0.015295579 ubox
44 82 0.111785997 ubox
45 52 0.003514878 ubox
45 61 0.003314167 ubox
45 81 0.114482728 ubox
45 82 0.015849845 ubox
46 52 0.010668872 ubox
46 78 0.007492038 ubox
46 80 0.114611908 ubox
46 81 0.015794063 ubox
47 51 0.010742651 ubox
47 58 0.020003953 ubox
47 62 0.003934551 ubox
47 79 0.115947184 ubox
48 57 0.019839183 ubox
48 77 0.131179134 ubox
49 55 0.014891144 ubox
49 57 0.014780248 ubox
49 61 0.035809046 ubox
49 76 0.149383573 ubox
49 77 0.005126563 ubox
49 78 0.004981100 ubox
49 95 0.003250849 ubox
49 98 0.003414702 ubox
49 101 0.003278492 ubox
49 104 0.006667493 ubox
50 54 0.013499941 ubox
50 56 0.016283772 ubox
50 59 0.004342379 ubox
50 60 0.033601908 ubox
50 62 0.003785957 ubox
50 75 0.151060014 ubox
50 94 0.003196496 ubox
50 97 0.003260995 ubox
50 103 0.006495240 ubox
51 55 0.016552578 ubox
51 61 0.005651871 ubox
52 58 0.032346950 ubox
52 62 0.005255592 ubox
52 73 0.154882515 ubox
53 57 0.026366583 ubox
53 72 0.154893085 ubox
54 71 0.154946084 ubox
55 62 0.012680469 ubox
55 70 0.155027927 ubox
56 69 0.154750688 ubox
57 63 0.005814842 ubox
57 64 0.007847262 ubox
57 65 0.005296895 ubox
57 66 0.009379056 ubox
57 67 0.008292079 ubox
57 68 0.153455523 ubox
57 96 0.010834116 ubox
57 99 0.012950806 ubox
58 95 0.012091997 ubox
58 98 0.014735342 ubox
59 69 0.003871133 ubox
59 72 0.008303954 ubox
60 69 0.006294086 ubox
60 71 0.009659318 ubox
60 80 0.007203192 ubox
61 70 0.010056357 ubox
61 79 0.008693146 ubox
61 91 0.042902515 ubox
62 69 0.007791760 ubox
62 78 0.008748096 ubox
62 95 0.034559168 ubox
62 98 0.006978412 ubox
62 101 0.006577463 ubox
62 104 0.007160213 ubox
63 69 0.009924183 ubox
63 77 0.008654246 ubox
64 69 0.009910724 ubox
64 76 0.007755912 ubox
65 69 0.006101329 ubox
69 86 0.884286410 ubox
69 87 0.040723155 ubox
69 88 0.011232675 ubox
69 89 0.008039007 ubox
69 90 0.005898591 ubox
69 96 0.005251418 ubox
69 99 0.066824048 ubox
69 102 0.034987590 ubox
69 105 0.017209934 ubox
70 85 0.982736374 ubox
70 95 0.005393132 ubox
70 98 0.074220184 ubox
70 101 0.038842251 ubox
70 104 0.019073077 ubox
71 84 0.982573844 ubox
71 94 0.004957521 ubox
71 97 0.074189927 ubox
71 100 0.038804085 ubox
71 103 0.019025091 ubox
72 83 0.982648819 ubox
72 96 0.074098776 ubox
72 99 0.038686253 ubox
72 102 0.018869035 ubox
73 82 0.983232077 ubox
73 95 0.073881988 ubox
73 98 0.038598798 ubox
73 101 0.018810786 ubox
74 81 0.982816916 ubox
74 95 0.014901552 ubox
75 80 0.871062719 ubox
76 92 0.012228011 ubox
76 93 0.073444167 ubox
76 94 0.004648888 ubox
76 97 0.003717120 ubox
77 91 0.010013598 ubox
77 92 0.079246668 ubox
77 93 0.003882643 ubox
77 96 0.003724228 ubox
78 91 0.079794305 ubox
79 85 0.008458582 ubox
79 95 0.010161887 ubox
79 98 0.003258862 ubox
80 84 0.007631146 ubox
80 87 0.004319781 ubox
80 88 0.006445700 ubox
80 89 0.014453850 ubox
80 90 0.004929472 ubox
80 92 0.014333846 ubox
80 94 0.009589622 ubox
81 91 0.014463177 ubox
82 91 0.011277451 ubox
85 91 0.014226514 ubox
91 95 0.043002239 ubox
91 98 0.103462178 ubox
91 101 0.045291330 ubox
91 104 0.034972407 ubox
91 107 0.010344013 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 39 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
