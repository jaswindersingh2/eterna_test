%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (272)
} def

/sequence { (\
GGAAAAAACAUCAAGUUCAACAGAACAGUCCUGACAAAGCGCCUUCGGACGCAGUCCUGACAAGAUGACAUCACUUUCGGGUGGUGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.070705870 ubox
1 12 0.039707578 ubox
1 18 0.006881169 ubox
1 21 0.004298335 ubox
1 31 0.013103259 ubox
1 57 0.008468806 ubox
1 69 0.004254544 ubox
1 74 0.003660534 ubox
1 78 0.006150365 ubox
1 95 0.076770857 ubox
1 98 0.077320514 ubox
1 101 0.080392169 ubox
1 104 0.079616849 ubox
1 107 0.020010375 ubox
2 9 0.033065622 ubox
2 11 0.035107765 ubox
2 12 0.068820424 ubox
2 17 0.006643524 ubox
2 18 0.009750224 ubox
2 30 0.013133424 ubox
2 56 0.008469930 ubox
2 72 0.005870115 ubox
2 77 0.006135577 ubox
2 78 0.006402107 ubox
2 95 0.039137989 ubox
2 98 0.039504410 ubox
2 101 0.041301314 ubox
2 104 0.040048307 ubox
2 107 0.013065667 ubox
3 11 0.066398995 ubox
3 16 0.006168987 ubox
3 17 0.009595384 ubox
3 29 0.012954448 ubox
3 55 0.007881553 ubox
3 71 0.005764770 ubox
3 76 0.006079426 ubox
3 77 0.006396060 ubox
4 11 0.007956262 ubox
4 16 0.008219480 ubox
4 75 0.005602278 ubox
4 76 0.006261213 ubox
5 11 0.004931467 ubox
5 75 0.005733591 ubox
6 11 0.005319777 ubox
7 11 0.003320635 ubox
7 17 0.015095866 ubox
7 66 0.003926579 ubox
8 16 0.017351878 ubox
8 66 0.003689450 ubox
9 15 0.017751658 ubox
9 64 0.010984987 ubox
9 67 0.940095773 ubox
9 83 0.008985011 ubox
9 86 0.032759829 ubox
9 91 0.022970803 ubox
10 66 0.944178824 ubox
10 82 0.009025710 ubox
10 85 0.032826394 ubox
11 24 0.004895326 ubox
11 27 0.005457170 ubox
11 60 0.004550017 ubox
11 65 0.944738797 ubox
11 68 0.074304459 ubox
11 81 0.008968559 ubox
11 84 0.032769522 ubox
11 87 0.012012548 ubox
11 88 0.004168164 ubox
11 89 0.004917114 ubox
11 90 0.004915529 ubox
11 92 0.082222576 ubox
11 93 0.005540688 ubox
11 94 0.003706830 ubox
11 96 0.003780833 ubox
11 97 0.003511600 ubox
11 99 0.003854998 ubox
11 100 0.003517128 ubox
11 102 0.003813338 ubox
11 103 0.003515238 ubox
11 105 0.003822478 ubox
11 106 0.003519525 ubox
12 23 0.005231762 ubox
12 28 0.003722465 ubox
12 59 0.004967514 ubox
12 64 0.943919456 ubox
12 67 0.081294876 ubox
12 80 0.008866018 ubox
12 83 0.032520647 ubox
12 86 0.012074622 ubox
12 91 0.087660706 ubox
13 58 0.004612197 ubox
13 66 0.073238191 ubox
13 82 0.028976884 ubox
13 85 0.007766004 ubox
14 66 0.004347300 ubox
15 21 0.017884717 ubox
15 26 0.995939116 ubox
15 35 0.003220993 ubox
15 61 0.032342833 ubox
15 95 0.014059192 ubox
15 98 0.008412611 ubox
15 101 0.008367486 ubox
15 104 0.008389422 ubox
16 20 0.016136850 ubox
16 24 0.005418473 ubox
16 25 0.996914335 ubox
16 60 0.028181737 ubox
16 63 0.006149165 ubox
16 93 0.010997404 ubox
16 94 0.012360499 ubox
16 97 0.008145363 ubox
16 100 0.008124894 ubox
16 103 0.008148792 ubox
17 23 0.005982566 ubox
17 24 0.997376487 ubox
17 59 0.012752761 ubox
17 60 0.018228920 ubox
17 62 0.005744817 ubox
17 68 0.006350906 ubox
17 92 0.013855735 ubox
17 93 0.009682142 ubox
17 96 0.006748375 ubox
17 99 0.006820242 ubox
17 102 0.006850685 ubox
18 23 0.996106495 ubox
18 33 0.003415550 ubox
18 59 0.023948452 ubox
18 67 0.007059898 ubox
18 91 0.015388892 ubox
19 32 0.003289371 ubox
19 58 0.023305021 ubox
19 66 0.006869563 ubox
20 29 0.005625944 ubox
20 55 0.003690182 ubox
21 28 0.005965078 ubox
21 33 0.011013763 ubox
21 54 0.003823978 ubox
21 59 0.019613827 ubox
21 64 0.004722103 ubox
21 67 0.016483616 ubox
22 32 0.011434164 ubox
22 55 0.003668938 ubox
22 58 0.020748964 ubox
22 66 0.016441605 ubox
23 30 0.004746718 ubox
23 31 0.011282219 ubox
23 46 0.004609990 ubox
23 56 0.020223751 ubox
23 57 0.020364869 ubox
24 29 0.004728211 ubox
24 45 0.004585199 ubox
24 55 0.020364983 ubox
25 44 0.004189654 ubox
25 55 0.017751075 ubox
26 51 0.003837127 ubox
26 54 0.018319419 ubox
26 59 0.011052778 ubox
26 64 0.005660837 ubox
26 67 0.006227346 ubox
27 44 0.008478128 ubox
27 58 0.014101653 ubox
27 66 0.007408071 ubox
28 35 0.014686991 ubox
28 40 0.003336325 ubox
28 42 0.020346877 ubox
28 43 0.008790962 ubox
28 50 0.037498745 ubox
28 57 0.014364562 ubox
28 61 0.995053455 ubox
28 66 0.005600361 ubox
28 95 0.003731782 ubox
28 98 0.003389106 ubox
28 101 0.003394344 ubox
28 104 0.003426716 ubox
29 34 0.013602003 ubox
29 41 0.020014185 ubox
29 49 0.037551429 ubox
29 60 0.996306513 ubox
29 65 0.005986270 ubox
29 68 0.003175757 ubox
29 94 0.003467571 ubox
29 103 0.003191790 ubox
30 41 0.009248504 ubox
30 48 0.037305322 ubox
30 59 0.994592800 ubox
30 64 0.005994546 ubox
30 67 0.003200694 ubox
30 81 0.004485438 ubox
31 39 0.023028729 ubox
31 47 0.037004678 ubox
31 48 0.005609601 ubox
31 54 0.005030509 ubox
31 59 0.048022566 ubox
31 64 0.003356526 ubox
31 80 0.004529778 ubox
31 91 0.004167029 ubox
32 37 0.003601587 ubox
32 38 0.023130890 ubox
32 41 0.005602384 ubox
32 47 0.007174159 ubox
32 53 0.005022662 ubox
32 62 0.005581236 ubox
32 63 0.003439375 ubox
32 79 0.004523587 ubox
32 90 0.004091816 ubox
33 40 0.006142344 ubox
33 42 0.003379224 ubox
33 43 0.007445832 ubox
33 45 0.013196895 ubox
33 46 0.027633510 ubox
33 52 0.003446631 ubox
33 56 0.995887885 ubox
33 57 0.044546868 ubox
33 61 0.005452657 ubox
33 78 0.004514872 ubox
34 44 0.012712944 ubox
34 45 0.026034389 ubox
34 55 0.997877849 ubox
34 77 0.004197753 ubox
35 41 0.010472000 ubox
35 54 0.997033697 ubox
35 59 0.005167669 ubox
36 44 0.004321010 ubox
36 55 0.008037287 ubox
36 58 0.005013579 ubox
37 44 0.004286977 ubox
37 45 0.006306835 ubox
38 44 0.011203793 ubox
39 43 0.011114804 ubox
39 50 0.012002386 ubox
39 52 0.998250534 ubox
40 47 0.006532368 ubox
40 48 0.008657738 ubox
40 51 0.998701653 ubox
41 46 0.006363817 ubox
41 50 0.998005637 ubox
41 52 0.005883236 ubox
42 47 0.021054092 ubox
42 48 0.948491827 ubox
42 51 0.005884963 ubox
43 47 0.941690584 ubox
43 48 0.237522426 ubox
43 64 0.004102248 ubox
44 48 0.005267922 ubox
44 49 0.006329630 ubox
44 60 0.006729493 ubox
44 63 0.004062367 ubox
45 59 0.007196132 ubox
45 60 0.015707702 ubox
46 59 0.017008061 ubox
47 57 0.026253272 ubox
47 58 0.005766435 ubox
48 56 0.026422545 ubox
48 57 0.005103120 ubox
49 55 0.026526064 ubox
50 54 0.026264629 ubox
51 61 0.004702384 ubox
51 85 0.003558835 ubox
52 59 0.007130281 ubox
52 84 0.003627988 ubox
52 86 0.004814966 ubox
53 58 0.006472385 ubox
53 85 0.004849853 ubox
54 61 0.009240154 ubox
54 66 0.003875883 ubox
54 69 0.006353808 ubox
55 60 0.008557667 ubox
55 65 0.004256907 ubox
55 68 0.006569290 ubox
55 83 0.004257374 ubox
56 64 0.003918302 ubox
56 67 0.006573646 ubox
56 81 0.029636728 ubox
57 64 0.017275296 ubox
57 80 0.031434326 ubox
58 63 0.018029059 ubox
58 65 0.004089274 ubox
58 79 0.031442089 ubox
58 96 0.003541426 ubox
59 78 0.031536702 ubox
59 95 0.003813892 ubox
60 77 0.031209848 ubox
61 67 0.005266928 ubox
62 66 0.005954390 ubox
62 76 0.030768468 ubox
63 75 0.031940803 ubox
64 69 0.005127264 ubox
64 72 0.010019852 ubox
64 74 0.032049733 ubox
64 78 0.003889989 ubox
64 95 0.009461916 ubox
64 98 0.010992194 ubox
64 101 0.008657264 ubox
64 104 0.007631419 ubox
65 71 0.009963335 ubox
65 77 0.003838985 ubox
66 70 0.008851504 ubox
66 73 0.031412118 ubox
66 79 0.003708655 ubox
66 87 0.011472205 ubox
66 88 0.033762928 ubox
66 89 0.064523875 ubox
66 90 0.026567279 ubox
66 91 0.010099117 ubox
66 92 0.008652350 ubox
66 93 0.006250607 ubox
66 96 0.014620104 ubox
66 99 0.011271741 ubox
66 102 0.009956860 ubox
66 105 0.006562248 ubox
67 72 0.031536189 ubox
67 78 0.005263856 ubox
67 95 0.015548678 ubox
67 98 0.011983467 ubox
67 101 0.010589447 ubox
67 104 0.007259107 ubox
68 77 0.005182645 ubox
68 82 0.003405039 ubox
68 85 0.009681237 ubox
69 81 0.003538512 ubox
69 83 0.027967671 ubox
69 84 0.009177605 ubox
69 86 0.989768617 ubox
69 91 0.013789109 ubox
70 82 0.028208965 ubox
70 85 0.994090171 ubox
71 80 0.003914412 ubox
71 81 0.028144585 ubox
71 84 0.994061210 ubox
71 87 0.076941070 ubox
71 88 0.003549421 ubox
71 92 0.005982074 ubox
72 79 0.004904691 ubox
72 80 0.028023904 ubox
72 83 0.995232483 ubox
72 86 0.082225394 ubox
72 91 0.006364016 ubox
73 82 0.995041415 ubox
73 85 0.082232192 ubox
74 79 0.020036906 ubox
74 80 0.032513653 ubox
74 81 0.994320117 ubox
74 84 0.082192439 ubox
74 91 0.009550136 ubox
75 79 0.040596089 ubox
75 80 0.919387403 ubox
75 81 0.005602504 ubox
75 83 0.081090787 ubox
75 89 0.013632586 ubox
75 90 0.008422010 ubox
75 94 0.003798198 ubox
76 80 0.028475458 ubox
76 81 0.004931872 ubox
76 83 0.006048396 ubox
76 88 0.015602098 ubox
76 89 0.006982992 ubox
76 93 0.004472205 ubox
77 81 0.011527409 ubox
77 87 0.016588405 ubox
77 88 0.005205647 ubox
77 92 0.004626046 ubox
78 86 0.017257615 ubox
78 91 0.004643780 ubox
79 85 0.016282352 ubox
79 101 0.004171636 ubox
81 98 0.009332218 ubox
81 101 0.005451757 ubox
81 104 0.003307877 ubox
82 97 0.008651843 ubox
82 99 0.004790252 ubox
82 100 0.004844103 ubox
83 98 0.005601815 ubox
84 95 0.025885137 ubox
84 98 0.012359020 ubox
84 101 0.008501305 ubox
84 104 0.006950119 ubox
85 94 0.025934888 ubox
85 96 0.010648787 ubox
85 97 0.011439931 ubox
85 99 0.004262494 ubox
85 100 0.008254247 ubox
85 102 0.003200356 ubox
85 103 0.006778106 ubox
86 95 0.015603562 ubox
86 98 0.006254760 ubox
86 101 0.004794924 ubox
86 104 0.003672067 ubox
91 95 0.043208967 ubox
91 98 0.103762463 ubox
91 101 0.045323381 ubox
91 104 0.034929020 ubox
91 107 0.010330641 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
42 48 0.9500000 lbox
43 47 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
