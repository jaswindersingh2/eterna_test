%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (218)
} def

/sequence { (\
GGAAAACGGAAGUACACGCCCGCCUUGGCGCGGCGAAAACAACGCAGGAUGCUGGUUGGGUACAACCGCACCCACUUCGGUGGGUGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.061843319 ubox
1 15 0.005201975 ubox
1 52 0.003430877 ubox
1 53 0.003228881 ubox
1 67 0.012977714 ubox
1 69 0.005269140 ubox
1 95 0.070128043 ubox
1 98 0.070626844 ubox
1 101 0.072263727 ubox
1 104 0.072693880 ubox
1 107 0.018373600 ubox
2 7 0.021454347 ubox
2 15 0.007032809 ubox
2 52 0.003635180 ubox
2 66 0.012902860 ubox
2 69 0.005745223 ubox
2 95 0.036947460 ubox
2 98 0.037074476 ubox
2 101 0.037917818 ubox
2 104 0.037815805 ubox
2 107 0.012341968 ubox
6 13 0.040235548 ubox
6 61 0.003703180 ubox
6 81 0.005225177 ubox
7 12 0.041735805 ubox
7 18 0.003358712 ubox
7 44 0.022848931 ubox
7 47 0.003979457 ubox
7 60 0.003800786 ubox
7 68 0.973287630 ubox
7 80 0.005459578 ubox
7 91 0.011182544 ubox
8 15 0.021579672 ubox
8 17 0.005277138 ubox
8 43 0.025849074 ubox
8 45 0.004928073 ubox
8 66 0.009701232 ubox
8 67 0.993853125 ubox
8 95 0.012896518 ubox
8 98 0.014772464 ubox
8 101 0.014713639 ubox
8 104 0.014806049 ubox
8 107 0.005622020 ubox
9 15 0.005912223 ubox
9 43 0.014661906 ubox
9 66 0.993156711 ubox
9 67 0.005436910 ubox
9 78 0.005639727 ubox
9 95 0.007793717 ubox
9 98 0.010805787 ubox
9 101 0.010506550 ubox
9 104 0.010549611 ubox
9 107 0.003448344 ubox
10 77 0.005656508 ubox
11 53 0.004008279 ubox
11 76 0.005660041 ubox
12 40 0.044884998 ubox
12 43 0.005996656 ubox
12 52 0.004264918 ubox
12 63 0.992932618 ubox
12 75 0.005662898 ubox
12 95 0.026109193 ubox
12 98 0.025554997 ubox
12 101 0.025921577 ubox
12 104 0.024008172 ubox
12 107 0.008282607 ubox
13 37 0.003401465 ubox
13 38 0.003614110 ubox
13 39 0.043834606 ubox
13 42 0.005798995 ubox
13 51 0.004232052 ubox
13 62 0.994080218 ubox
13 74 0.005388943 ubox
13 93 0.003227572 ubox
13 94 0.025188861 ubox
13 97 0.024669253 ubox
13 100 0.025022717 ubox
13 103 0.023173097 ubox
13 106 0.008079890 ubox
14 50 0.003960932 ubox
14 61 0.993659272 ubox
15 32 0.006375331 ubox
15 59 0.046821514 ubox
15 60 0.991175639 ubox
15 91 0.009453435 ubox
16 61 0.004405878 ubox
17 30 0.015169304 ubox
17 32 0.023660944 ubox
17 35 0.968571554 ubox
17 58 0.019462707 ubox
17 59 0.150302521 ubox
17 60 0.005286260 ubox
17 86 0.015846920 ubox
18 29 0.015688047 ubox
18 31 0.023995404 ubox
18 34 0.998438301 ubox
18 56 0.015872099 ubox
18 57 0.012365503 ubox
18 61 0.012371640 ubox
18 85 0.016093177 ubox
19 28 0.015640390 ubox
19 30 0.023968662 ubox
19 32 0.003306837 ubox
19 33 0.994488159 ubox
19 35 0.017096625 ubox
19 55 0.019428832 ubox
19 59 0.010546262 ubox
19 60 0.014167411 ubox
19 84 0.016137179 ubox
20 27 0.015547950 ubox
20 28 0.023674353 ubox
20 32 0.990325502 ubox
20 33 0.092515693 ubox
20 54 0.019401301 ubox
20 55 0.006656483 ubox
20 58 0.010494396 ubox
20 59 0.014764994 ubox
20 83 0.016138477 ubox
21 27 0.023734373 ubox
21 28 0.005002354 ubox
21 30 0.985826905 ubox
21 32 0.128746172 ubox
21 35 0.023542209 ubox
21 51 0.003194882 ubox
21 54 0.006668364 ubox
21 58 0.014543560 ubox
21 82 0.016137822 ubox
22 26 0.014665565 ubox
22 29 0.986247295 ubox
22 31 0.156813226 ubox
22 34 0.023819534 ubox
22 50 0.003273578 ubox
22 52 0.019782402 ubox
22 56 0.014554360 ubox
22 57 0.010549455 ubox
22 81 0.016131460 ubox
23 27 0.023642537 ubox
23 28 0.982497923 ubox
23 30 0.156434320 ubox
23 33 0.023818949 ubox
23 48 0.004398525 ubox
23 51 0.019728228 ubox
23 55 0.017668981 ubox
23 80 0.016136786 ubox
24 28 0.047482515 ubox
24 30 0.007404715 ubox
24 32 0.023800923 ubox
24 47 0.004606617 ubox
24 48 0.014503936 ubox
24 54 0.017589367 ubox
24 55 0.003419860 ubox
24 79 0.016108302 ubox
25 46 0.004238309 ubox
25 47 0.014635983 ubox
25 49 0.010597408 ubox
25 74 0.004257561 ubox
26 30 0.003613814 ubox
26 46 0.013858408 ubox
26 48 0.010500556 ubox
26 74 0.005871677 ubox
27 45 0.009836434 ubox
27 53 0.016717760 ubox
27 72 0.008357381 ubox
27 73 0.005748336 ubox
27 76 0.005879180 ubox
28 45 0.018566675 ubox
28 52 0.018093585 ubox
28 71 0.008641655 ubox
28 72 0.005277222 ubox
28 75 0.005917939 ubox
29 44 0.020966518 ubox
29 51 0.018103612 ubox
30 43 0.020956792 ubox
30 45 0.011430887 ubox
30 50 0.017042625 ubox
30 69 0.010160781 ubox
31 44 0.011496726 ubox
31 47 0.006201001 ubox
31 48 0.014461807 ubox
31 68 0.010390994 ubox
32 40 0.003547403 ubox
32 43 0.011486799 ubox
32 67 0.010395506 ubox
33 40 0.020312751 ubox
33 45 0.020064975 ubox
33 66 0.010376878 ubox
34 44 0.020096546 ubox
35 40 0.007481975 ubox
35 43 0.019971903 ubox
35 63 0.006060669 ubox
37 61 0.021539760 ubox
38 57 0.013714076 ubox
38 61 0.003340047 ubox
39 56 0.014461335 ubox
40 47 0.004425447 ubox
40 51 0.010127542 ubox
40 54 0.005688098 ubox
40 55 0.014475286 ubox
40 58 0.991896128 ubox
40 59 0.050986960 ubox
41 50 0.010076735 ubox
41 53 0.005529796 ubox
41 57 0.994385485 ubox
42 53 0.008702069 ubox
42 56 0.994926846 ubox
42 57 0.011180233 ubox
43 48 0.010420601 ubox
43 54 0.012244280 ubox
43 55 0.993918074 ubox
43 58 0.006193246 ubox
43 91 0.003249138 ubox
44 52 0.104429146 ubox
44 53 0.004154299 ubox
44 56 0.005093203 ubox
44 57 0.004932673 ubox
45 51 0.104787032 ubox
45 54 0.991294850 ubox
45 55 0.004189930 ubox
45 58 0.003757145 ubox
46 50 0.084926294 ubox
46 53 0.992587182 ubox
46 57 0.003742987 ubox
47 52 0.991418135 ubox
47 53 0.007369094 ubox
47 56 0.003673700 ubox
47 72 0.006055044 ubox
47 73 0.012273900 ubox
48 52 0.011715355 ubox
48 71 0.006102331 ubox
48 72 0.012268393 ubox
50 70 0.014413582 ubox
51 69 0.016767176 ubox
51 95 0.003237837 ubox
51 98 0.003170304 ubox
51 101 0.003280499 ubox
52 68 0.017060822 ubox
53 68 0.057902559 ubox
54 67 0.081864030 ubox
55 66 0.082168600 ubox
55 98 0.007230301 ubox
55 101 0.009956099 ubox
55 104 0.004538721 ubox
56 65 0.082148882 ubox
56 97 0.007258031 ubox
56 100 0.009989001 ubox
56 103 0.004548210 ubox
57 64 0.082151030 ubox
57 68 0.004202299 ubox
57 96 0.007263074 ubox
57 99 0.010000076 ubox
57 102 0.004543056 ubox
58 63 0.082153737 ubox
58 67 0.008479740 ubox
58 95 0.007243491 ubox
58 98 0.009991889 ubox
58 101 0.004520614 ubox
59 66 0.009377632 ubox
59 67 0.053001535 ubox
60 66 0.053025526 ubox
60 95 0.010827586 ubox
61 65 0.047772919 ubox
61 92 0.004219657 ubox
61 94 0.010471522 ubox
63 91 0.003803876 ubox
66 91 0.005249914 ubox
68 95 0.005583909 ubox
68 98 0.004336028 ubox
68 101 0.003467810 ubox
69 86 0.996100482 ubox
69 91 0.004695318 ubox
70 85 0.999257855 ubox
71 84 0.999832974 ubox
72 83 0.999843943 ubox
73 82 0.999837296 ubox
74 81 0.999350993 ubox
75 79 0.011942547 ubox
75 80 0.998436092 ubox
76 80 0.004037462 ubox
84 95 0.003790494 ubox
85 94 0.003970554 ubox
85 96 0.005632710 ubox
86 95 0.010120166 ubox
86 98 0.004089532 ubox
86 101 0.003252237 ubox
91 95 0.043270930 ubox
91 98 0.104054730 ubox
91 101 0.045524773 ubox
91 104 0.035139441 ubox
91 107 0.010393595 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
