%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1033)
} def

/sequence { (\
GGAAAAGCCAAAGGCAAGAUCAAAGAUCAAGACGCAAAGCGUCAAGCAGAAACUGCAAGCGAAACGCAGCUGUCCUUCGGGACAGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.008531053 ubox
1 9 0.093929149 ubox
1 15 0.003339304 ubox
1 21 0.029999256 ubox
1 56 0.005216247 ubox
1 60 0.016326414 ubox
1 65 0.019226754 ubox
1 67 0.020140787 ubox
1 86 0.016088134 ubox
1 95 0.402139649 ubox
1 98 0.404698674 ubox
1 101 0.413883404 ubox
1 104 0.415742489 ubox
1 107 0.104966362 ubox
2 8 0.093973930 ubox
2 9 0.013453825 ubox
2 15 0.004087099 ubox
2 20 0.027569560 ubox
2 21 0.046074401 ubox
2 28 0.003784749 ubox
2 56 0.003287754 ubox
2 60 0.014035916 ubox
2 65 0.014768133 ubox
2 67 0.013133707 ubox
2 86 0.011631935 ubox
2 95 0.212103939 ubox
2 98 0.212857900 ubox
2 101 0.217385481 ubox
2 104 0.216560699 ubox
2 107 0.070664185 ubox
3 20 0.045295401 ubox
3 27 0.003449379 ubox
7 15 0.989212954 ubox
7 60 0.010015820 ubox
7 67 0.054802911 ubox
7 95 0.016869188 ubox
7 98 0.016824373 ubox
7 101 0.016427250 ubox
7 104 0.016294649 ubox
7 107 0.005689629 ubox
8 13 0.010559688 ubox
8 14 0.990447584 ubox
8 59 0.009958174 ubox
8 66 0.054749892 ubox
8 91 0.011115856 ubox
9 13 0.983255598 ubox
9 14 0.010793726 ubox
9 91 0.016341166 ubox
13 95 0.032863914 ubox
13 98 0.032771973 ubox
13 101 0.033401014 ubox
13 104 0.033520644 ubox
13 107 0.011709498 ubox
14 47 0.003605032 ubox
14 56 0.007085833 ubox
14 60 0.059502651 ubox
14 67 0.020855223 ubox
14 86 0.003611450 ubox
14 95 0.020281413 ubox
14 98 0.020270280 ubox
14 101 0.020588387 ubox
14 104 0.020541952 ubox
14 107 0.006699551 ubox
15 46 0.003611353 ubox
15 55 0.007098125 ubox
15 59 0.059495412 ubox
15 66 0.020881231 ubox
15 85 0.003488240 ubox
15 91 0.026929833 ubox
16 54 0.006400104 ubox
17 27 0.003813347 ubox
18 27 0.003713458 ubox
18 28 0.988547519 ubox
18 95 0.015584341 ubox
18 98 0.012649715 ubox
18 101 0.013845564 ubox
18 104 0.012774097 ubox
18 107 0.004442529 ubox
19 27 0.989518639 ubox
20 24 0.003221952 ubox
20 25 0.008518915 ubox
20 26 0.988947949 ubox
20 29 0.003257245 ubox
20 92 0.040006984 ubox
20 93 0.003787708 ubox
20 99 0.003313195 ubox
21 25 0.980781991 ubox
21 91 0.042687343 ubox
22 27 0.003521818 ubox
25 95 0.016420502 ubox
25 98 0.012573929 ubox
25 101 0.012671215 ubox
25 104 0.012669056 ubox
25 107 0.004421276 ubox
27 45 0.004402265 ubox
27 92 0.046183729 ubox
27 93 0.004267225 ubox
28 91 0.049403152 ubox
31 43 0.998509757 ubox
32 42 0.999640370 ubox
33 41 0.999887728 ubox
34 40 0.999744174 ubox
34 67 0.008093165 ubox
35 39 0.992484702 ubox
35 66 0.008090177 ubox
39 67 0.006105871 ubox
40 61 0.008240077 ubox
40 66 0.006112238 ubox
41 60 0.008263226 ubox
41 65 0.006101886 ubox
42 59 0.007192600 ubox
42 64 0.005724472 ubox
43 59 0.005409613 ubox
43 91 0.003197677 ubox
45 54 0.013727896 ubox
46 53 0.014223434 ubox
46 56 0.998221246 ubox
46 60 0.005858389 ubox
46 67 0.003653009 ubox
47 55 0.999273185 ubox
47 59 0.005842763 ubox
47 66 0.003649849 ubox
48 54 0.996792686 ubox
49 53 0.974946753 ubox
49 54 0.005960216 ubox
49 56 0.006225626 ubox
53 69 0.006024320 ubox
54 68 0.014893422 ubox
55 67 0.016158857 ubox
56 66 0.016151631 ubox
58 71 0.005373024 ubox
59 65 0.015626289 ubox
59 67 0.989030787 ubox
59 70 0.006446347 ubox
59 95 0.005324254 ubox
59 98 0.003270416 ubox
60 66 0.990021030 ubox
60 69 0.006708222 ubox
60 91 0.003409565 ubox
61 65 0.926204987 ubox
61 67 0.019160124 ubox
61 95 0.008218259 ubox
65 91 0.021680902 ubox
67 91 0.005046108 ubox
69 86 0.998651101 ubox
70 85 0.999944328 ubox
71 84 0.999735469 ubox
72 83 0.999976754 ubox
73 81 0.007141130 ubox
73 82 0.999845433 ubox
74 80 0.013663775 ubox
74 81 0.999890172 ubox
75 79 0.017803305 ubox
75 80 0.999068512 ubox
75 81 0.003232505 ubox
76 80 0.004112663 ubox
86 91 0.009365192 ubox
91 95 0.071632993 ubox
91 98 0.144954828 ubox
91 101 0.047555812 ubox
91 104 0.015324396 ubox
91 107 0.003633017 ubox
1 95 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
