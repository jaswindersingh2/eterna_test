%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (880)
} def

/sequence { (\
GGAAAACAAGAUGAGUAGGAAGGAAAACCAGGAAAACCAAACCAUACAAACAUCAAGCAAAAGCAAGUACGGCUUUUCGAAGCCGUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.268402223 ubox
1 29 0.007560889 ubox
1 38 0.006561509 ubox
1 43 0.021540425 ubox
1 51 0.003799029 ubox
1 54 0.008965072 ubox
1 58 0.015068867 ubox
1 64 0.061110300 ubox
1 95 0.117152105 ubox
1 98 0.118672271 ubox
1 101 0.120354639 ubox
1 104 0.120984228 ubox
1 107 0.030590746 ubox
2 7 0.083256769 ubox
2 28 0.007541379 ubox
2 37 0.006539957 ubox
2 42 0.021462469 ubox
2 53 0.007700588 ubox
2 54 0.021153505 ubox
2 58 0.017227708 ubox
2 64 0.027506478 ubox
2 95 0.061257212 ubox
2 98 0.061060521 ubox
2 101 0.062368542 ubox
2 104 0.062188306 ubox
2 107 0.020308757 ubox
3 53 0.020546661 ubox
6 16 0.017306984 ubox
6 68 0.038630973 ubox
6 86 0.005260126 ubox
7 13 0.016051215 ubox
7 15 0.017949583 ubox
7 18 0.004067782 ubox
7 57 0.128388739 ubox
7 63 0.003874194 ubox
7 67 0.049296994 ubox
7 85 0.005259934 ubox
7 91 0.068916918 ubox
8 12 0.013082106 ubox
9 16 0.004268918 ubox
9 53 0.005925937 ubox
10 47 0.017986771 ubox
10 51 0.013715283 ubox
10 53 0.003232920 ubox
10 54 0.989852681 ubox
10 58 0.005234185 ubox
10 95 0.009284057 ubox
10 98 0.017367860 ubox
10 101 0.018349011 ubox
10 104 0.019199423 ubox
10 107 0.006752959 ubox
11 45 0.037683874 ubox
11 53 0.990886225 ubox
12 30 0.007611330 ubox
12 39 0.007037717 ubox
12 44 0.038654413 ubox
12 48 0.010505947 ubox
12 49 0.008866084 ubox
12 50 0.018258917 ubox
12 52 0.990720099 ubox
12 55 0.038745196 ubox
12 96 0.020796415 ubox
12 99 0.021989316 ubox
12 100 0.003233571 ubox
12 102 0.023213799 ubox
12 103 0.003283755 ubox
12 105 0.017565258 ubox
13 29 0.008152999 ubox
13 38 0.007739059 ubox
13 43 0.038868413 ubox
13 47 0.011524854 ubox
13 51 0.989857830 ubox
13 54 0.043030701 ubox
13 95 0.021934222 ubox
13 98 0.023191089 ubox
13 101 0.024488941 ubox
13 104 0.019221194 ubox
14 45 0.004666292 ubox
14 53 0.042695255 ubox
15 28 0.010448719 ubox
15 37 0.008362643 ubox
15 42 0.035160126 ubox
15 45 0.022068862 ubox
15 47 0.984080589 ubox
15 51 0.029960857 ubox
15 58 0.011578244 ubox
15 95 0.021049596 ubox
15 98 0.025386354 ubox
15 101 0.025191417 ubox
15 104 0.024246075 ubox
15 107 0.008443765 ubox
16 21 0.004089488 ubox
16 27 0.010189648 ubox
16 30 0.009640495 ubox
16 36 0.008097097 ubox
16 40 0.008130648 ubox
16 41 0.033898599 ubox
16 44 0.022961794 ubox
16 46 0.984325832 ubox
16 48 0.029633840 ubox
16 49 0.012915301 ubox
16 50 0.030036341 ubox
16 57 0.011529188 ubox
16 92 0.003235854 ubox
16 94 0.020325713 ubox
16 97 0.024683335 ubox
16 100 0.024489817 ubox
16 103 0.023565441 ubox
16 106 0.008289864 ubox
17 45 0.974950207 ubox
18 28 0.011442985 ubox
18 29 0.160319646 ubox
18 37 0.006035900 ubox
18 38 0.032256356 ubox
18 42 0.052514512 ubox
18 43 0.954093316 ubox
18 45 0.008125087 ubox
18 47 0.040454499 ubox
18 51 0.005752555 ubox
18 95 0.014471339 ubox
18 98 0.014274546 ubox
18 101 0.013988300 ubox
18 104 0.007272998 ubox
19 28 0.160369289 ubox
19 29 0.008143994 ubox
19 37 0.032176438 ubox
19 38 0.008725424 ubox
19 42 0.952543894 ubox
19 43 0.116393239 ubox
19 45 0.008755415 ubox
19 47 0.024927617 ubox
19 54 0.012905559 ubox
19 95 0.006970147 ubox
19 98 0.006720648 ubox
19 101 0.006009775 ubox
19 104 0.003886779 ubox
20 45 0.025224444 ubox
20 53 0.012426843 ubox
21 45 0.012558195 ubox
22 28 0.091865088 ubox
22 29 0.690589703 ubox
22 37 0.072704948 ubox
22 38 0.611782600 ubox
22 42 0.025211070 ubox
22 43 0.069375084 ubox
22 47 0.007005235 ubox
22 51 0.008609658 ubox
23 28 0.687054967 ubox
23 29 0.058234740 ubox
23 37 0.610651367 ubox
23 38 0.164904257 ubox
23 42 0.069522747 ubox
23 43 0.007223496 ubox
28 32 0.121419434 ubox
30 45 0.006869752 ubox
31 37 0.097245454 ubox
31 38 0.702291609 ubox
31 42 0.016173150 ubox
31 43 0.098862687 ubox
31 47 0.008881332 ubox
31 51 0.003673376 ubox
32 37 0.698734393 ubox
32 38 0.058847280 ubox
32 42 0.098692871 ubox
32 43 0.008099367 ubox
32 54 0.004025881 ubox
33 53 0.003808807 ubox
39 45 0.004713584 ubox
40 45 0.006014119 ubox
41 45 0.003699738 ubox
44 53 0.006404716 ubox
45 49 0.003238329 ubox
45 50 0.005206527 ubox
45 52 0.006619996 ubox
50 68 0.005395877 ubox
51 57 0.005029235 ubox
51 67 0.006877000 ubox
51 91 0.003391215 ubox
52 68 0.003387241 ubox
53 65 0.003352299 ubox
53 66 0.004466347 ubox
53 67 0.003784387 ubox
53 92 0.012504343 ubox
54 63 0.004246284 ubox
54 67 0.022778708 ubox
54 91 0.013550158 ubox
55 68 0.009797717 ubox
56 68 0.007413128 ubox
57 64 0.858948793 ubox
57 68 0.067990993 ubox
57 95 0.026114460 ubox
57 98 0.092784138 ubox
57 101 0.020282866 ubox
57 104 0.007671492 ubox
58 63 0.858867391 ubox
58 67 0.080929548 ubox
58 91 0.010016259 ubox
59 77 0.003579285 ubox
60 76 0.003790050 ubox
61 68 0.003805456 ubox
61 75 0.003849865 ubox
62 68 0.005710506 ubox
62 74 0.003878688 ubox
63 73 0.003888318 ubox
63 95 0.038410646 ubox
63 98 0.012655502 ubox
63 101 0.010438662 ubox
63 104 0.008728735 ubox
64 72 0.003873620 ubox
64 91 0.208354965 ubox
67 86 0.004352228 ubox
67 95 0.064632859 ubox
67 98 0.050198211 ubox
67 101 0.039473272 ubox
67 104 0.033440173 ubox
67 107 0.010005062 ubox
68 87 0.934674934 ubox
68 88 0.042146850 ubox
68 89 0.015438709 ubox
68 90 0.010978583 ubox
68 91 0.007708548 ubox
68 92 0.005600174 ubox
68 93 0.004926671 ubox
68 94 0.052247495 ubox
68 96 0.003526464 ubox
68 97 0.040599740 ubox
68 100 0.031888630 ubox
68 103 0.027008043 ubox
68 106 0.008159271 ubox
69 86 0.993926169 ubox
70 85 0.999688935 ubox
71 84 0.999966442 ubox
72 83 0.999984175 ubox
73 82 0.999954759 ubox
74 79 0.004780139 ubox
74 80 0.040205525 ubox
74 81 0.985949634 ubox
74 82 0.004657192 ubox
75 79 0.051405560 ubox
75 80 0.857367268 ubox
75 81 0.031785074 ubox
76 80 0.037471791 ubox
76 81 0.005213169 ubox
85 95 0.005473247 ubox
85 98 0.003514787 ubox
86 94 0.005564927 ubox
86 97 0.003554937 ubox
91 95 0.044214352 ubox
91 98 0.103784473 ubox
91 101 0.044201831 ubox
91 104 0.033127569 ubox
91 107 0.009775675 ubox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
17 45 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
57 64 0.9500000 lbox
58 63 0.9500000 lbox
68 87 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
