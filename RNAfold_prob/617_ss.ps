%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAAGCGCGCGCGCGCGCGCGCGCGCGUUUUGGUUUUUUUUGUGUGUGUGUGUGUGUGUGUGUAAUGUGUGUUUCGGCGCGCGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

/coor [
[13.37293243 163.60514832]
[18.05582619 149.35485840]
[25.33001328 136.23669434]
[34.93697357 124.71688080]
[46.53527069 115.20480347]
[59.71269989 108.03854370]
[74.00094604 103.47278595]
[88.89032745 101.66984558]
[76.35800934 93.42720795]
[63.82569122 85.18457794]
[51.29337311 76.94194031]
[38.76105881 68.69930267]
[26.22874069 60.45666885]
[13.69642258 52.21403503]
[1.16410565 43.97140121]
[-11.36821175 35.72876740]
[-23.90052795 27.48613167]
[-36.43284607 19.24349785]
[-48.96516418 11.00086308]
[-61.49747849 2.75822783]
[-74.02980042 -5.48440695]
[-86.56211090 -13.72704124]
[-99.09442902 -21.96967697]
[-111.62674713 -30.21231079]
[-124.15906525 -38.45494461]
[-136.69137573 -46.69757843]
[-149.22369385 -54.94021606]
[-161.75601196 -63.18284988]
[-174.28833008 -71.42548370]
[-186.82064819 -79.66812134]
[-199.61790466 -71.41281128]
[-214.66751099 -69.08273315]
[-229.36203003 -73.08159637]
[-241.15556335 -82.71656799]
[-248.00479126 -96.31833649]
[-248.72303772 -111.53030396]
[-243.18588257 -125.71691132]
[-232.35267639 -136.42024231]
[-218.10031128 -141.78587341]
[-202.89811707 -140.88418579]
[-189.37994385 -133.87141418]
[-179.88792419 -121.96253204]
[-176.06658936 -107.22084045]
[-178.57801819 -92.20043945]
[-166.04570007 -83.95780182]
[-153.51338196 -75.71516418]
[-140.98106384 -67.47253418]
[-128.44874573 -59.22989655]
[-115.91642761 -50.98726273]
[-103.38411713 -42.74462891]
[-90.85179901 -34.50199509]
[-78.31948090 -26.25935936]
[-65.78716278 -18.01672363]
[-53.25484467 -9.77408886]
[-40.72252655 -1.53145456]
[-28.19021034 6.71118021]
[-15.65789413 14.95381451]
[-3.12557697 23.19644928]
[9.40674019 31.43908501]
[21.93905830 39.68171692]
[34.47137451 47.92435455]
[47.00369263 56.16698837]
[59.53601074 64.40962219]
[72.06832886 72.65225983]
[84.60064697 80.89488983]
[97.13295746 89.13752747]
[98.47919464 74.19805908]
[112.47698212 68.80715179]
[123.49627686 78.98433685]
[119.23196411 93.36646271]
[133.92207336 90.33319855]
[148.61218262 87.29993439]
[163.30229187 84.26667023]
[177.99240112 81.23340607]
[192.68251038 78.20014954]
[204.56671143 66.89979553]
[220.21646118 71.80051422]
[223.53266907 87.86086273]
[211.10388184 98.55933380]
[195.71577454 92.89025879]
[181.02566528 95.92351532]
[166.33555603 98.95677948]
[151.64544678 101.99004364]
[136.95533752 105.02330780]
[122.26522827 108.05657196]
[135.43853760 115.23043060]
[147.03134155 124.74918365]
[156.63165283 136.27453613]
[163.89828491 149.39689636]
[168.57296753 163.64987183]
[170.48956299 178.52693176]
[169.57995605 193.49931335]
[165.87646484 208.03494263]
[159.51074219 221.61718750]
[150.70899963 233.76335144]
[139.78405762 244.04174805]
[127.12417603 252.08709717]
[113.17931366 257.61346436]
[98.44505310 260.42443848]
[83.44505310 260.42010498]
[68.71241760 257.60064697]
[54.77073669 252.06625366]
[42.11550522 244.01361084]
[31.19648552 233.72891235]
[22.40174294 221.57766724]
[16.04384041 207.99176025]
[12.34873962 193.45401001]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 66]
[9 65]
[10 64]
[11 63]
[12 62]
[13 61]
[14 60]
[15 59]
[16 58]
[17 57]
[18 56]
[19 55]
[20 54]
[21 53]
[22 52]
[23 51]
[24 50]
[25 49]
[26 48]
[27 47]
[28 46]
[29 45]
[30 44]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
