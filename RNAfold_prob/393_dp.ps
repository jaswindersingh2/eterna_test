%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (393)
} def

/sequence { (\
GGAAAAGCGCGCGCGCGCGCGAAACGCGCGCGGGCGAAACGCCCGGGCCCAAAGGGCCCGCGCGCGCACAUAUAUUUCGAUAUAUGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.007334520 ubox
1 69 0.005210402 ubox
1 73 0.006026009 ubox
1 78 0.011567348 ubox
1 95 0.067286007 ubox
1 98 0.067739104 ubox
1 101 0.069278203 ubox
1 104 0.069589982 ubox
1 107 0.017569936 ubox
2 69 0.006586416 ubox
2 71 0.003333744 ubox
2 77 0.011560689 ubox
2 78 0.013705105 ubox
2 95 0.035519813 ubox
2 98 0.035660335 ubox
2 101 0.036419631 ubox
2 104 0.036281353 ubox
2 107 0.011838960 ubox
3 71 0.006005284 ubox
3 76 0.011499014 ubox
3 77 0.013670883 ubox
4 71 0.003586687 ubox
4 75 0.010825594 ubox
4 76 0.013453418 ubox
5 71 0.005730533 ubox
5 75 0.012412143 ubox
6 71 0.004608640 ubox
6 73 0.007447334 ubox
7 65 0.017604603 ubox
7 67 0.998413407 ubox
7 69 0.005424557 ubox
8 64 0.017628639 ubox
8 66 0.999462699 ubox
9 63 0.017631174 ubox
9 65 0.999507872 ubox
9 67 0.025121565 ubox
10 62 0.017631404 ubox
10 64 0.999504622 ubox
10 66 0.025147298 ubox
11 35 0.003324420 ubox
11 61 0.017630983 ubox
11 63 0.999502803 ubox
11 65 0.025150159 ubox
12 34 0.003325961 ubox
12 60 0.017590525 ubox
12 62 0.999501939 ubox
12 64 0.025150490 ubox
13 31 0.022520754 ubox
13 61 0.999272141 ubox
13 63 0.025151540 ubox
14 30 0.022910240 ubox
14 32 0.052421842 ubox
14 60 0.996892930 ubox
14 62 0.025142973 ubox
15 29 0.028540810 ubox
15 31 0.996635469 ubox
15 59 0.051110190 ubox
15 61 0.023141145 ubox
16 28 0.028563114 ubox
16 30 0.999008790 ubox
16 32 0.005975814 ubox
16 60 0.022970440 ubox
17 27 0.028564537 ubox
17 29 0.999152808 ubox
17 31 0.028905454 ubox
18 26 0.028564203 ubox
18 28 0.999153196 ubox
18 30 0.028970797 ubox
19 25 0.028228896 ubox
19 27 0.999151585 ubox
19 29 0.028974754 ubox
20 26 0.999073374 ubox
20 28 0.028974644 ubox
21 25 0.934630485 ubox
21 27 0.028728341 ubox
31 45 0.052605899 ubox
32 43 0.004057628 ubox
32 44 0.997499110 ubox
33 42 0.003358431 ubox
33 43 0.999953805 ubox
33 44 0.005279743 ubox
34 42 0.999974847 ubox
34 43 0.003884962 ubox
35 41 0.999891812 ubox
36 40 0.935396123 ubox
41 63 0.003505629 ubox
42 62 0.003500514 ubox
44 60 0.051258647 ubox
45 58 0.004242768 ubox
45 59 0.997507984 ubox
46 57 0.003582039 ubox
46 58 0.999961167 ubox
46 59 0.005101302 ubox
47 57 0.999982565 ubox
47 58 0.003641915 ubox
48 55 0.006599921 ubox
48 56 0.999939261 ubox
49 54 0.008893087 ubox
49 55 0.999865344 ubox
49 56 0.008318178 ubox
50 54 0.992591806 ubox
50 55 0.011726468 ubox
68 85 0.005470966 ubox
69 86 0.987583894 ubox
69 91 0.006419128 ubox
70 83 0.020341476 ubox
70 85 0.991714034 ubox
71 82 0.021856969 ubox
71 84 0.992159565 ubox
71 86 0.038616415 ubox
71 87 0.003871820 ubox
71 92 0.004915375 ubox
71 93 0.005402188 ubox
72 81 0.022283881 ubox
72 83 0.992201077 ubox
72 85 0.046772007 ubox
73 80 0.021856108 ubox
73 82 0.991932363 ubox
73 84 0.048007798 ubox
73 86 0.005545015 ubox
73 90 0.006533727 ubox
73 91 0.010163748 ubox
73 92 0.008169801 ubox
73 93 0.003379245 ubox
73 96 0.011277879 ubox
74 81 0.980553612 ubox
74 83 0.048358444 ubox
74 85 0.006557726 ubox
75 79 0.035192129 ubox
75 80 0.895629808 ubox
75 82 0.047748174 ubox
75 84 0.006641944 ubox
75 88 0.004647321 ubox
75 89 0.065253612 ubox
75 90 0.005814081 ubox
75 94 0.044635257 ubox
76 80 0.028456749 ubox
76 82 0.003627438 ubox
76 87 0.005024456 ubox
76 88 0.074654087 ubox
76 89 0.005592336 ubox
76 93 0.053143521 ubox
77 86 0.004736836 ubox
77 87 0.076824689 ubox
77 88 0.004410911 ubox
77 92 0.054981338 ubox
78 86 0.077135930 ubox
78 91 0.055196024 ubox
79 85 0.054374217 ubox
80 85 0.006466544 ubox
81 87 0.004702879 ubox
81 88 0.015556412 ubox
81 89 0.004746876 ubox
85 90 0.003451207 ubox
85 92 0.003602238 ubox
85 96 0.012869717 ubox
85 99 0.005252192 ubox
85 102 0.004206307 ubox
85 105 0.003635071 ubox
86 95 0.017110664 ubox
86 98 0.006960676 ubox
86 101 0.005577169 ubox
86 104 0.004819238 ubox
91 95 0.042961150 ubox
91 98 0.103595464 ubox
91 101 0.045450687 ubox
91 104 0.035177157 ubox
91 107 0.010407790 ubox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
45 59 0.9500000 lbox
46 58 0.9500000 lbox
47 57 0.9500000 lbox
48 56 0.9500000 lbox
49 55 0.9500000 lbox
50 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
