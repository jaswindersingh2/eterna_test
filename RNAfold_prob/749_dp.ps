%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (749)
} def

/sequence { (\
GGAAAGUCGUGGCAAAGGCAGGACAAGCAGCUGGGAAAACGAGGUGCAGACGAGGCGAAAGGCUGGUCGCUAAGCUUCGGCUUGGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.003924721 ubox
1 24 0.010255420 ubox
1 68 0.006892797 ubox
1 86 0.017442651 ubox
1 95 0.242604435 ubox
1 98 0.244158050 ubox
1 101 0.249696480 ubox
1 104 0.250835008 ubox
1 107 0.063329409 ubox
2 8 0.004587756 ubox
2 24 0.006048116 ubox
2 68 0.008016637 ubox
2 86 0.008212262 ubox
2 95 0.128070644 ubox
2 98 0.128523634 ubox
2 101 0.131267275 ubox
2 104 0.130769542 ubox
2 107 0.042670562 ubox
3 7 0.004013720 ubox
3 67 0.005504718 ubox
4 83 0.018186338 ubox
5 82 0.018902539 ubox
6 19 0.029934122 ubox
6 24 0.996738778 ubox
6 81 0.019035139 ubox
6 95 0.013877998 ubox
6 98 0.019264209 ubox
6 101 0.018981980 ubox
6 104 0.018772392 ubox
6 107 0.006577818 ubox
7 18 0.029931026 ubox
7 22 0.004346371 ubox
7 23 0.998205990 ubox
7 80 0.019029478 ubox
7 92 0.006840053 ubox
7 94 0.010808554 ubox
7 97 0.017105918 ubox
7 100 0.016771223 ubox
7 103 0.016624352 ubox
7 106 0.005893087 ubox
8 17 0.029959236 ubox
8 21 0.007136653 ubox
8 22 0.998432182 ubox
8 79 0.019033400 ubox
8 91 0.007058645 ubox
9 19 0.009533376 ubox
9 24 0.006795105 ubox
9 78 0.019023327 ubox
9 95 0.014414285 ubox
9 98 0.013786416 ubox
9 101 0.013775961 ubox
9 104 0.007382124 ubox
10 15 0.005399101 ubox
10 16 0.003677063 ubox
10 18 0.009519420 ubox
10 20 0.991990318 ubox
10 21 0.029593442 ubox
10 23 0.006500216 ubox
10 94 0.014131996 ubox
10 96 0.007709537 ubox
10 97 0.012163503 ubox
10 99 0.007397282 ubox
10 100 0.012176932 ubox
10 102 0.005272566 ubox
10 103 0.006501144 ubox
10 105 0.003650984 ubox
11 19 0.963580304 ubox
11 24 0.003361524 ubox
11 76 0.018449763 ubox
11 95 0.009869205 ubox
11 98 0.009534900 ubox
11 101 0.006381027 ubox
11 104 0.004119496 ubox
12 19 0.262966144 ubox
12 75 0.019026434 ubox
13 17 0.811980705 ubox
13 18 0.356031706 ubox
13 74 0.018996886 ubox
13 91 0.009348803 ubox
16 71 0.004388792 ubox
17 24 0.007731527 ubox
17 70 0.003794617 ubox
17 71 0.017403051 ubox
18 70 0.018295465 ubox
19 69 0.018425317 ubox
24 91 0.004579693 ubox
27 47 0.998892230 ubox
28 46 0.999954968 ubox
29 45 0.998488148 ubox
30 45 0.008764933 ubox
30 86 0.004325662 ubox
31 43 0.999438814 ubox
31 44 0.014008640 ubox
31 85 0.004330126 ubox
32 41 0.057993143 ubox
32 42 0.994876462 ubox
32 43 0.012817967 ubox
32 84 0.004306101 ubox
33 40 0.117689864 ubox
33 83 0.004109488 ubox
34 40 0.989443341 ubox
34 82 0.004134840 ubox
35 40 0.025612035 ubox
35 81 0.004055090 ubox
40 79 0.004271969 ubox
41 78 0.004396377 ubox
42 77 0.004393979 ubox
43 76 0.004392648 ubox
44 75 0.004396258 ubox
45 74 0.004359573 ubox
46 70 0.003612671 ubox
47 69 0.003648669 ubox
49 67 0.003291373 ubox
49 68 0.998144365 ubox
49 86 0.006196196 ubox
50 67 0.999503191 ubox
51 65 0.006255679 ubox
51 66 0.999477399 ubox
51 84 0.011377700 ubox
52 64 0.003901710 ubox
52 68 0.007213199 ubox
52 83 0.011540341 ubox
53 64 0.983058261 ubox
53 67 0.006975957 ubox
53 82 0.011557951 ubox
54 63 0.980121992 ubox
54 64 0.161961402 ubox
54 68 0.004729139 ubox
54 81 0.011560118 ubox
55 63 0.196631527 ubox
55 67 0.004755011 ubox
56 61 0.963026211 ubox
56 62 0.224012976 ubox
56 66 0.004755526 ubox
56 79 0.011575039 ubox
57 78 0.011577787 ubox
58 64 0.003610115 ubox
58 77 0.010782978 ubox
59 76 0.005206651 ubox
60 77 0.003244388 ubox
61 76 0.009743907 ubox
62 75 0.011451996 ubox
63 74 0.011560320 ubox
64 73 0.011341944 ubox
66 70 0.003176391 ubox
68 91 0.004328823 ubox
69 86 0.998572284 ubox
70 85 0.999704496 ubox
71 84 0.999196027 ubox
72 83 0.998583476 ubox
73 82 0.999148245 ubox
74 81 0.999714334 ubox
75 79 0.011545270 ubox
75 80 0.998893513 ubox
76 80 0.003703643 ubox
86 91 0.006943695 ubox
91 95 0.054618227 ubox
91 98 0.119611046 ubox
91 101 0.046266458 ubox
91 104 0.029960309 ubox
91 107 0.008721260 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
