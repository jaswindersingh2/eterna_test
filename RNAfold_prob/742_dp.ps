%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (742)
} def

/sequence { (\
GGAAAGCCGGCGCAAAGGGCGGGCAAGGCGCGGCAAAAAGGCGGGCCACCGAGCGCGAAAGGGCACGGCCGGCGGUUCGCCGCCGGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.007719926 ubox
1 24 0.005497394 ubox
1 29 0.016054178 ubox
1 47 0.004915787 ubox
1 50 0.019302788 ubox
1 66 0.003381721 ubox
1 69 0.003945856 ubox
1 70 0.015957272 ubox
1 84 0.005633314 ubox
1 95 0.241969356 ubox
1 98 0.243460731 ubox
1 101 0.249006293 ubox
1 104 0.250122681 ubox
1 107 0.063149519 ubox
2 7 0.007721735 ubox
2 24 0.007437928 ubox
2 29 0.009249582 ubox
2 46 0.003752546 ubox
2 49 0.019349865 ubox
2 69 0.016473690 ubox
2 83 0.005617563 ubox
2 95 0.127714354 ubox
2 98 0.128172731 ubox
2 101 0.130905890 ubox
2 104 0.130406807 ubox
2 107 0.042552403 ubox
6 20 0.011443627 ubox
6 24 0.995012422 ubox
6 29 0.010393288 ubox
6 34 0.005838533 ubox
6 46 0.023303162 ubox
6 69 0.039263313 ubox
6 95 0.010039349 ubox
6 98 0.010057210 ubox
6 101 0.010023456 ubox
6 104 0.009814958 ubox
6 107 0.003420438 ubox
7 19 0.011410809 ubox
7 22 0.066268866 ubox
7 23 0.995368813 ubox
7 28 0.010410448 ubox
7 33 0.005843868 ubox
7 45 0.023480838 ubox
7 68 0.051305867 ubox
7 86 0.034935387 ubox
8 18 0.011364219 ubox
8 21 0.077293525 ubox
8 22 0.994106240 ubox
8 27 0.010404872 ubox
8 32 0.005832878 ubox
8 44 0.023460277 ubox
8 67 0.051402589 ubox
8 85 0.035049294 ubox
9 20 0.086221605 ubox
9 24 0.003269114 ubox
9 31 0.004149523 ubox
9 66 0.051211088 ubox
9 84 0.035058030 ubox
10 20 0.990472799 ubox
10 24 0.009763036 ubox
10 31 0.004249327 ubox
10 42 0.023355278 ubox
10 64 0.051133304 ubox
10 83 0.035056517 ubox
11 17 0.008002732 ubox
11 18 0.095533815 ubox
11 19 0.989857830 ubox
11 21 0.075267308 ubox
11 23 0.009678619 ubox
11 30 0.005908983 ubox
11 41 0.023349113 ubox
11 63 0.051155438 ubox
11 82 0.035000855 ubox
12 20 0.077089051 ubox
12 29 0.005930763 ubox
12 34 0.008868110 ubox
12 64 0.003927182 ubox
12 80 0.003854266 ubox
12 81 0.007668899 ubox
13 17 0.780197694 ubox
13 18 0.231261869 ubox
13 19 0.076978203 ubox
13 21 0.008941196 ubox
13 28 0.005927124 ubox
13 33 0.008857151 ubox
13 40 0.005596422 ubox
13 61 0.049145760 ubox
13 62 0.006861834 ubox
13 63 0.003919670 ubox
13 79 0.005443502 ubox
15 77 0.003579904 ubox
16 76 0.003519911 ubox
17 24 0.004273697 ubox
17 31 0.008372413 ubox
17 56 0.048331123 ubox
18 24 0.003635110 ubox
18 34 0.038998299 ubox
18 56 0.007622203 ubox
19 29 0.008665081 ubox
19 31 0.004205724 ubox
19 34 0.007854404 ubox
19 54 0.049213997 ubox
19 56 0.013834235 ubox
19 73 0.005303956 ubox
20 28 0.008646984 ubox
20 30 0.004216112 ubox
20 32 0.039777095 ubox
20 33 0.006783825 ubox
20 53 0.049166371 ubox
20 55 0.013878201 ubox
20 57 0.004393274 ubox
20 72 0.005299223 ubox
21 29 0.004190686 ubox
21 31 0.040060953 ubox
21 50 0.004572930 ubox
21 54 0.013832881 ubox
21 56 0.004405063 ubox
22 31 0.004955254 ubox
22 49 0.004528780 ubox
22 50 0.048634407 ubox
22 70 0.005322556 ubox
23 29 0.040293343 ubox
23 49 0.048675221 ubox
23 50 0.006371733 ubox
23 54 0.004444297 ubox
23 69 0.005328117 ubox
23 95 0.003231714 ubox
23 98 0.003213744 ubox
23 101 0.003272158 ubox
23 104 0.003265143 ubox
24 28 0.040005549 ubox
24 51 0.007191276 ubox
24 53 0.004445115 ubox
24 68 0.004781196 ubox
24 91 0.005516196 ubox
27 47 0.996672518 ubox
27 95 0.005083102 ubox
27 98 0.005020676 ubox
27 101 0.005001770 ubox
27 104 0.004932327 ubox
28 46 0.997765190 ubox
28 47 0.003427554 ubox
29 43 0.003923483 ubox
29 44 0.005655410 ubox
29 45 0.997644153 ubox
29 86 0.023980225 ubox
30 42 0.008010806 ubox
31 41 0.008005654 ubox
31 43 0.987683383 ubox
31 44 0.137457771 ubox
31 85 0.050506815 ubox
32 42 0.979544763 ubox
32 84 0.051107667 ubox
33 42 0.188363620 ubox
33 83 0.051110675 ubox
34 40 0.960172240 ubox
34 41 0.226576706 ubox
34 82 0.051093756 ubox
40 81 0.061587688 ubox
41 80 0.061934509 ubox
42 79 0.061936442 ubox
43 78 0.061930374 ubox
44 77 0.061761162 ubox
45 76 0.061889071 ubox
46 75 0.061927485 ubox
47 74 0.061912711 ubox
49 67 0.005986555 ubox
49 68 0.991410079 ubox
49 72 0.061902765 ubox
49 86 0.004040374 ubox
50 67 0.995878638 ubox
50 68 0.004282179 ubox
50 71 0.061908142 ubox
50 85 0.004049159 ubox
51 66 0.992759660 ubox
51 70 0.061832424 ubox
51 84 0.003984722 ubox
53 64 0.993135105 ubox
53 66 0.015687515 ubox
53 69 0.057769042 ubox
53 83 0.003969068 ubox
54 61 0.004502284 ubox
54 62 0.009033086 ubox
54 63 0.994215477 ubox
54 67 0.019892092 ubox
54 68 0.057416488 ubox
54 82 0.003968499 ubox
55 64 0.077354825 ubox
55 66 0.019357310 ubox
56 61 0.969723919 ubox
56 62 0.108737052 ubox
56 63 0.077415204 ubox
56 67 0.044295994 ubox
56 79 0.003970665 ubox
57 64 0.018557423 ubox
57 66 0.044278921 ubox
57 78 0.003970862 ubox
58 77 0.003959676 ubox
59 76 0.003830120 ubox
62 70 0.003671310 ubox
63 69 0.003679863 ubox
64 68 0.003656445 ubox
66 85 0.010665810 ubox
66 91 0.008875186 ubox
67 84 0.010818034 ubox
68 83 0.010821904 ubox
69 82 0.007658469 ubox
69 85 0.003435808 ubox
69 86 0.993674388 ubox
70 82 0.009011783 ubox
70 85 0.997723282 ubox
70 86 0.004114849 ubox
71 81 0.011976281 ubox
71 84 0.997953437 ubox
72 80 0.011981545 ubox
72 83 0.997971146 ubox
73 79 0.011981725 ubox
73 82 0.997957140 ubox
74 78 0.011214421 ubox
74 80 0.007036574 ubox
74 81 0.997819102 ubox
75 80 0.991654561 ubox
85 95 0.003537242 ubox
86 95 0.010814962 ubox
86 98 0.004100192 ubox
91 95 0.054529056 ubox
91 98 0.119501186 ubox
91 101 0.046270456 ubox
91 104 0.030011674 ubox
91 107 0.008737863 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
