%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAAGGGUACGGGAAACGUCCAAGGGCGCACCCACCCACAGCCCUUGGACGUUUCCCGUACCCAUCAAGAGUUUCGACUCUUGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

/coor [
[13.57942009 162.38760376]
[17.52509880 147.91584778]
[24.34729195 134.55705261]
[33.75755310 122.87599945]
[45.35802460 113.36657715]
[58.65823364 106.43083954]
[73.09584808 102.36203003]
[88.05771637 101.33208466]
[75.52539825 93.08944702]
[62.99308014 84.84681702]
[50.46076202 76.60417938]
[37.92844772 68.36154175]
[25.39612961 60.11890793]
[12.86381245 51.87627411]
[0.33149523 43.63364029]
[-12.20082188 35.39100647]
[-24.73313904 27.14837074]
[-37.26545715 18.90573502]
[-49.79777527 10.66310120]
[-62.33008957 2.42046642]
[-74.86241150 -5.82216835]
[-87.39472198 -14.06480312]
[-99.92704010 -22.30743790]
[-112.45935822 -30.55007172]
[-124.99167633 -38.79270554]
[-137.52398682 -47.03534317]
[-150.05630493 -55.27797699]
[-162.58862305 -63.52061081]
[-175.12094116 -71.76324463]
[-187.65325928 -80.00588226]
[-200.45051575 -71.75057220]
[-215.50012207 -69.42049408]
[-230.19464111 -73.41935730]
[-241.98817444 -83.05432892]
[-248.83738708 -96.65609741]
[-249.55564880 -111.86806488]
[-244.01849365 -126.05467224]
[-233.18528748 -136.75799561]
[-218.93292236 -142.12364197]
[-203.73072815 -141.22195435]
[-190.21255493 -134.20916748]
[-180.72053528 -122.30029297]
[-176.89920044 -107.55860138]
[-179.41062927 -92.53820038]
[-166.87831116 -84.29556274]
[-154.34599304 -76.05292511]
[-141.81367493 -67.81029510]
[-129.28135681 -59.56765747]
[-116.74903870 -51.32502365]
[-104.21672821 -43.08238983]
[-91.68441010 -34.83975601]
[-79.15209198 -26.59712029]
[-66.61977386 -18.35448456]
[-54.08745575 -10.11185074]
[-41.55513763 -1.86921597]
[-29.02282143 6.37341881]
[-16.49050522 14.61605358]
[-3.95818734 22.85868835]
[8.57413006 31.10132217]
[21.10644722 39.34395599]
[33.63876343 47.58659363]
[46.17108154 55.82922745]
[58.70339966 64.07186127]
[71.23571777 72.31449890]
[83.76803589 80.55712891]
[96.30034637 88.79976654]
[101.99792480 88.48458099]
[107.12345886 90.87091064]
[121.81356812 87.83764648]
[136.50367737 84.80438232]
[151.19378662 81.77111816]
[165.88389587 78.73785400]
[180.57400513 75.70458984]
[195.26411438 72.67132568]
[209.95422363 69.63806152]
[221.83840942 58.33771133]
[237.48817444 63.23843002]
[240.80436707 79.29878235]
[228.37557983 89.99725342]
[212.98748779 84.32817078]
[198.29737854 87.36143494]
[183.60726929 90.39469910]
[168.91716003 93.42796326]
[154.22705078 96.46122742]
[139.53694153 99.49449158]
[124.84683228 102.52775574]
[110.15672302 105.56101990]
[123.68357086 112.04364014]
[135.59855652 121.15588379]
[145.39793396 132.51248169]
[152.66737366 145.63328552]
[157.09951782 159.96353149]
[158.50698853 174.89735413]
[156.83027649 189.80334473]
[152.14027405 204.05128479]
[144.63526917 217.03877258]
[134.63256836 228.21670532]
[122.55509186 237.11245728]
[108.91347504 243.34994507]
[94.28447723 246.66543579]
[79.28662109 246.91874695]
[64.55400085 244.09918213]
[50.70951843 238.32594299]
[38.33851624 229.84312439]
[27.96403694 219.00936890]
[20.02471352 206.28274536]
[14.85621834 192.20130920]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 66]
[9 65]
[10 64]
[11 63]
[12 62]
[13 61]
[14 60]
[15 59]
[16 58]
[17 57]
[18 56]
[19 55]
[20 54]
[21 53]
[22 52]
[23 51]
[24 50]
[25 49]
[26 48]
[27 47]
[28 46]
[29 45]
[30 44]
[68 87]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
