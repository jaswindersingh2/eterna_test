%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (209)
} def

/sequence { (\
GGAAAACUGAACUCGACAUACUGAACACAGAUAUGAACACUAUAGACAACAGUCAUAGACGAGAACAGCUUCAUGUUCGCAUGAAGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.032378616 ubox
1 8 0.020336972 ubox
1 66 0.004160413 ubox
1 69 0.004421967 ubox
1 70 0.004178805 ubox
1 72 0.009374843 ubox
1 95 0.067407313 ubox
1 98 0.067880671 ubox
1 101 0.069356519 ubox
1 104 0.069715535 ubox
1 107 0.017599671 ubox
2 7 0.022507618 ubox
2 14 0.004098686 ubox
2 69 0.006710218 ubox
2 71 0.009495837 ubox
2 72 0.012098437 ubox
2 95 0.035590968 ubox
2 98 0.035683372 ubox
2 101 0.036453980 ubox
2 104 0.036318644 ubox
2 107 0.011850971 ubox
3 8 0.003583010 ubox
3 13 0.003944914 ubox
3 70 0.009555852 ubox
3 71 0.011952657 ubox
4 70 0.011172595 ubox
4 71 0.006831437 ubox
5 70 0.011156507 ubox
5 71 0.004538870 ubox
6 70 0.007808482 ubox
7 30 0.003589229 ubox
7 68 0.985154010 ubox
7 91 0.014271748 ubox
8 15 0.003221093 ubox
8 29 0.003609024 ubox
8 64 0.003472355 ubox
8 65 0.004866632 ubox
8 67 0.991177713 ubox
8 68 0.008054241 ubox
8 90 0.013597485 ubox
8 96 0.011794666 ubox
8 99 0.011432488 ubox
8 102 0.011441793 ubox
8 105 0.011467476 ubox
9 14 0.004179636 ubox
9 28 0.003601728 ubox
9 66 0.990191908 ubox
9 95 0.012676383 ubox
9 98 0.012300295 ubox
9 101 0.012330702 ubox
9 104 0.012359511 ubox
12 63 0.997108033 ubox
13 24 0.003666293 ubox
13 62 0.999366977 ubox
13 64 0.010221776 ubox
13 92 0.005786790 ubox
14 23 0.003750803 ubox
14 61 0.999538703 ubox
14 63 0.010298469 ubox
14 91 0.006046340 ubox
15 38 0.041555965 ubox
15 60 0.979784389 ubox
16 34 0.012916372 ubox
17 23 0.009210339 ubox
17 35 0.988633195 ubox
17 58 0.025794025 ubox
18 22 0.007500193 ubox
18 32 0.040906207 ubox
18 34 0.992704062 ubox
18 56 0.012638061 ubox
19 31 0.043764698 ubox
19 33 0.992520554 ubox
19 35 0.003832561 ubox
19 55 0.012715997 ubox
19 57 0.009028454 ubox
19 59 0.003325980 ubox
20 32 0.986856934 ubox
20 34 0.004481047 ubox
20 53 0.015362183 ubox
20 56 0.008621811 ubox
21 30 0.998082797 ubox
21 52 0.015639327 ubox
22 29 0.997944537 ubox
22 30 0.016240670 ubox
22 31 0.020370943 ubox
22 39 0.009649923 ubox
22 51 0.015631860 ubox
22 55 0.008110749 ubox
23 28 0.992054097 ubox
23 38 0.010770560 ubox
23 50 0.015568209 ubox
23 54 0.008243307 ubox
24 53 0.008012517 ubox
26 35 0.013999177 ubox
27 34 0.012447919 ubox
28 35 0.020552485 ubox
28 45 0.005093280 ubox
29 34 0.019919873 ubox
30 38 0.003713258 ubox
30 47 0.003288531 ubox
31 43 0.009797606 ubox
32 37 0.003658684 ubox
32 39 0.003640676 ubox
32 42 0.010008955 ubox
32 44 0.017216026 ubox
32 57 0.009126433 ubox
33 41 0.009754702 ubox
33 43 0.017826766 ubox
33 56 0.009721296 ubox
34 39 0.003720473 ubox
34 42 0.017838191 ubox
34 55 0.009802182 ubox
35 40 0.008220182 ubox
35 41 0.016824067 ubox
35 54 0.009828657 ubox
36 41 0.008201203 ubox
36 43 0.007616497 ubox
36 53 0.008057306 ubox
37 41 0.003938044 ubox
37 43 0.004674305 ubox
37 53 0.005426924 ubox
38 45 0.003973568 ubox
38 52 0.007242980 ubox
38 58 0.014212319 ubox
38 61 0.004214341 ubox
39 53 0.008453413 ubox
40 52 0.009420110 ubox
40 58 0.981872496 ubox
41 51 0.009122164 ubox
41 57 0.987761380 ubox
41 58 0.008691014 ubox
41 59 0.010093150 ubox
42 56 0.987396840 ubox
43 49 0.003803713 ubox
43 55 0.977992910 ubox
43 57 0.039774208 ubox
43 58 0.003254390 ubox
44 53 0.009777768 ubox
44 56 0.042345827 ubox
45 50 0.003972661 ubox
45 53 0.009084121 ubox
45 54 0.998967144 ubox
46 53 0.998958075 ubox
47 52 0.997136606 ubox
52 60 0.009504843 ubox
53 59 0.009925538 ubox
54 58 0.009972306 ubox
60 68 0.003584783 ubox
61 80 0.003436729 ubox
63 78 0.004898902 ubox
64 77 0.004978556 ubox
65 76 0.005019613 ubox
66 75 0.005032836 ubox
66 91 0.014186531 ubox
67 74 0.004922138 ubox
68 95 0.004430211 ubox
68 98 0.003392149 ubox
69 86 0.993903171 ubox
69 91 0.011469151 ubox
70 85 0.997912045 ubox
70 86 0.004855594 ubox
70 90 0.010448109 ubox
70 93 0.006018497 ubox
71 84 0.999278792 ubox
71 85 0.004203615 ubox
71 89 0.006082316 ubox
71 92 0.006691171 ubox
72 83 0.999775504 ubox
72 91 0.006758281 ubox
73 82 0.999356182 ubox
74 81 0.998724422 ubox
74 87 0.008996539 ubox
74 96 0.009041760 ubox
74 99 0.003400322 ubox
75 80 0.992930097 ubox
75 95 0.010041036 ubox
75 98 0.003775364 ubox
76 85 0.010694366 ubox
76 88 0.006884535 ubox
76 93 0.006298129 ubox
76 94 0.008418806 ubox
76 97 0.003650437 ubox
77 84 0.011041363 ubox
77 87 0.008014279 ubox
77 92 0.008637630 ubox
77 93 0.006215423 ubox
78 83 0.011064550 ubox
78 86 0.008131164 ubox
78 91 0.010221724 ubox
86 95 0.010499840 ubox
86 98 0.004236750 ubox
86 101 0.003391266 ubox
91 95 0.043046126 ubox
91 98 0.103766286 ubox
91 101 0.045513686 ubox
91 104 0.035215447 ubox
91 107 0.010418983 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
