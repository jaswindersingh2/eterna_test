%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (250)
} def

/sequence { (\
GGAAAAUUGCCCUUGCUCUACGGAGCUGCGGAGCCAAAGCAAGAACUCAUGCAGGCGACGCGUGGGCGCAUGCUGUUCGCAGCAUGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.015718527 ubox
1 8 0.018223549 ubox
1 11 0.008566048 ubox
1 12 0.009867538 ubox
1 35 0.004291703 ubox
1 46 0.003945816 ubox
1 69 0.004138403 ubox
1 95 0.069261608 ubox
1 98 0.068955617 ubox
1 101 0.069798388 ubox
1 104 0.070033630 ubox
1 107 0.017683567 ubox
2 7 0.015255113 ubox
2 8 0.024940450 ubox
2 10 0.008591846 ubox
2 11 0.009939111 ubox
2 34 0.004266788 ubox
2 46 0.003222621 ubox
2 69 0.004496797 ubox
2 95 0.036487169 ubox
2 98 0.036029008 ubox
2 101 0.036566512 ubox
2 104 0.036422920 ubox
2 107 0.011885991 ubox
3 7 0.023572244 ubox
3 8 0.019946419 ubox
4 8 0.009626864 ubox
6 71 0.005629520 ubox
7 37 0.005220694 ubox
7 42 0.012308388 ubox
7 68 0.030953856 ubox
7 70 0.006335961 ubox
7 87 0.007210766 ubox
7 88 0.017068922 ubox
7 89 0.017404780 ubox
7 90 0.021617213 ubox
7 91 0.009956196 ubox
7 92 0.015515883 ubox
7 93 0.017785011 ubox
7 94 0.014494144 ubox
7 96 0.007085950 ubox
7 97 0.013547496 ubox
7 99 0.007153422 ubox
7 100 0.013052462 ubox
7 102 0.006689933 ubox
7 103 0.012538591 ubox
7 105 0.006647004 ubox
7 106 0.012380244 ubox
8 30 0.003196763 ubox
8 36 0.005942436 ubox
8 41 0.013887601 ubox
8 68 0.732276882 ubox
8 70 0.004931344 ubox
8 87 0.017669471 ubox
8 88 0.017572944 ubox
8 89 0.020854433 ubox
8 90 0.011599064 ubox
8 91 0.014219493 ubox
8 92 0.018301724 ubox
8 93 0.015159770 ubox
8 94 0.006859666 ubox
8 96 0.013902347 ubox
8 97 0.006861046 ubox
8 99 0.013466677 ubox
8 100 0.006360056 ubox
8 102 0.013077858 ubox
8 103 0.006257482 ubox
8 105 0.012940755 ubox
8 106 0.006204835 ubox
9 29 0.003365124 ubox
9 34 0.011339549 ubox
9 35 0.004506699 ubox
9 40 0.014147147 ubox
9 46 0.004241450 ubox
9 67 0.998950825 ubox
9 69 0.007882277 ubox
9 95 0.007324781 ubox
9 98 0.006858261 ubox
9 101 0.006811639 ubox
9 104 0.006678791 ubox
10 28 0.003307535 ubox
10 31 0.006865762 ubox
10 33 0.012081333 ubox
10 39 0.014078909 ubox
10 65 0.003833743 ubox
10 66 0.999485152 ubox
10 68 0.008575589 ubox
11 30 0.006893448 ubox
11 31 0.012774050 ubox
11 64 0.004724128 ubox
11 65 0.999453186 ubox
11 66 0.011594780 ubox
12 28 0.003420336 ubox
12 30 0.012751504 ubox
12 43 0.014878537 ubox
12 62 0.006008696 ubox
12 64 0.997740995 ubox
12 65 0.013551990 ubox
12 91 0.004742485 ubox
13 28 0.009043051 ubox
13 36 0.006249421 ubox
13 37 0.004779846 ubox
13 42 0.014988951 ubox
13 62 0.066035078 ubox
13 64 0.014093208 ubox
13 90 0.004743121 ubox
14 28 0.004587610 ubox
14 36 0.005075719 ubox
14 41 0.015011196 ubox
14 62 0.126444951 ubox
14 89 0.004483464 ubox
15 26 0.997959887 ubox
15 27 0.007008471 ubox
15 34 0.013267780 ubox
15 35 0.003622166 ubox
15 40 0.015018735 ubox
15 61 0.004378075 ubox
15 63 0.003359008 ubox
16 25 0.999721846 ubox
16 33 0.013766937 ubox
16 39 0.015013765 ubox
16 60 0.003592625 ubox
17 24 0.999588971 ubox
17 32 0.013770044 ubox
17 38 0.014546889 ubox
18 22 0.006218319 ubox
18 23 0.999519054 ubox
18 31 0.013760028 ubox
18 33 0.003313099 ubox
19 30 0.012592661 ubox
19 36 0.004405930 ubox
21 28 0.012149696 ubox
21 30 0.005910911 ubox
22 27 0.009273184 ubox
22 29 0.006481659 ubox
22 35 0.012793850 ubox
23 34 0.012778844 ubox
23 35 0.006495639 ubox
25 34 0.007095586 ubox
25 56 0.003240896 ubox
25 63 0.004177398 ubox
25 83 0.003964016 ubox
26 31 0.012737271 ubox
26 33 0.007154843 ubox
26 62 0.009703227 ubox
26 82 0.004008452 ubox
27 32 0.007087427 ubox
27 41 0.004710668 ubox
27 53 0.003937073 ubox
27 62 0.753284732 ubox
27 81 0.004180391 ubox
28 40 0.005105640 ubox
28 52 0.004174659 ubox
28 61 0.999036742 ubox
28 63 0.013529625 ubox
28 80 0.004209693 ubox
29 39 0.005105458 ubox
29 51 0.004175943 ubox
29 60 0.999506829 ubox
29 62 0.013921695 ubox
29 79 0.004205408 ubox
30 50 0.003703317 ubox
30 59 0.999408845 ubox
30 61 0.013797648 ubox
30 78 0.003477011 ubox
31 48 0.004159740 ubox
31 59 0.008862541 ubox
32 47 0.004166469 ubox
32 77 0.003375253 ubox
33 40 0.005740520 ubox
33 46 0.004124453 ubox
33 56 0.999620127 ubox
33 76 0.003551338 ubox
34 39 0.005731913 ubox
34 55 0.999632470 ubox
34 75 0.003870227 ubox
35 54 0.999086261 ubox
35 55 0.003728592 ubox
37 50 0.003864715 ubox
38 47 0.008337055 ubox
38 50 0.008457716 ubox
38 74 0.004068227 ubox
39 46 0.008714104 ubox
39 48 0.005228585 ubox
39 50 0.006187191 ubox
39 52 0.998280567 ubox
39 73 0.004233083 ubox
40 51 0.998707443 ubox
40 72 0.004233656 ubox
41 47 0.007268558 ubox
41 50 0.981409116 ubox
41 71 0.004189879 ubox
42 47 0.038177137 ubox
42 50 0.050207526 ubox
43 47 0.020992014 ubox
43 48 0.670774779 ubox
43 50 0.006608718 ubox
43 69 0.004145406 ubox
44 50 0.005586115 ubox
45 50 0.003741242 ubox
46 66 0.005246484 ubox
47 65 0.005260877 ubox
47 87 0.024340249 ubox
48 64 0.005413786 ubox
48 86 0.025689883 ubox
49 63 0.005446833 ubox
49 85 0.025690799 ubox
50 62 0.005446537 ubox
50 84 0.025692178 ubox
51 61 0.005453035 ubox
51 83 0.025702488 ubox
52 60 0.005442750 ubox
52 82 0.025692431 ubox
54 59 0.003866397 ubox
55 80 0.025641232 ubox
56 79 0.025682361 ubox
57 78 0.025533156 ubox
58 76 0.015092428 ubox
58 77 0.020692938 ubox
59 75 0.021154477 ubox
60 73 0.025298557 ubox
60 74 0.004439499 ubox
61 72 0.025694422 ubox
62 71 0.025677327 ubox
62 95 0.004548384 ubox
63 70 0.025689765 ubox
63 94 0.004518017 ubox
64 69 0.025669966 ubox
68 83 0.009545658 ubox
68 95 0.017373331 ubox
68 98 0.013621138 ubox
68 101 0.010999827 ubox
68 104 0.009518157 ubox
69 82 0.009553683 ubox
69 86 0.995678146 ubox
69 91 0.004728022 ubox
70 85 0.998613678 ubox
71 81 0.009617843 ubox
71 84 0.999051330 ubox
72 80 0.009708040 ubox
72 83 0.999599704 ubox
73 79 0.009702233 ubox
73 82 0.999600062 ubox
74 81 0.998826650 ubox
75 80 0.992876790 ubox
85 96 0.006997989 ubox
86 95 0.011038696 ubox
86 98 0.004476684 ubox
86 101 0.003583406 ubox
91 95 0.043106633 ubox
91 98 0.103844897 ubox
91 101 0.045519149 ubox
91 104 0.035198020 ubox
91 107 0.010408103 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
27 62 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
