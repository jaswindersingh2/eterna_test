%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (694)
} def

/sequence { (\
GGAAAGGGCGGCGAAACACCACCCAAGGCACCACUCAAUGCGGCGCCAGCCACACCUAACGAUGCGGCAUCGACAUUCGUGUCGAUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 23 0.009844074 ubox
1 24 0.040237914 ubox
1 47 0.005425156 ubox
1 51 0.012449636 ubox
1 56 0.008307671 ubox
1 68 0.004784996 ubox
1 86 0.007646287 ubox
1 95 0.242494450 ubox
1 98 0.244017272 ubox
1 101 0.249581001 ubox
1 104 0.250702363 ubox
1 107 0.063296128 ubox
2 22 0.009899567 ubox
2 23 0.040108111 ubox
2 24 0.005378592 ubox
2 46 0.004852995 ubox
2 50 0.012419996 ubox
2 55 0.008294177 ubox
2 68 0.003491809 ubox
2 71 0.006113869 ubox
2 86 0.008304663 ubox
2 95 0.128014456 ubox
2 98 0.128469457 ubox
2 101 0.131208814 ubox
2 104 0.130709520 ubox
2 107 0.042651303 ubox
3 70 0.005994513 ubox
3 86 0.012456997 ubox
4 86 0.011496102 ubox
5 57 0.004164641 ubox
5 86 0.011491864 ubox
6 20 0.017131687 ubox
6 22 0.014855965 ubox
6 23 0.015657072 ubox
6 24 0.997334086 ubox
6 56 0.004334610 ubox
6 95 0.011037866 ubox
6 98 0.011075303 ubox
6 101 0.011048559 ubox
6 104 0.010822894 ubox
6 107 0.003772562 ubox
7 19 0.017052691 ubox
7 20 0.043109607 ubox
7 22 0.015584413 ubox
7 23 0.998594339 ubox
7 24 0.011172870 ubox
7 47 0.007221667 ubox
7 51 0.005281332 ubox
7 55 0.004322816 ubox
8 17 0.005805928 ubox
8 19 0.043208048 ubox
8 20 0.004694371 ubox
8 22 0.998485073 ubox
8 23 0.010699485 ubox
8 24 0.005841337 ubox
8 46 0.007239442 ubox
8 50 0.005294433 ubox
8 53 0.004070319 ubox
9 45 0.007247693 ubox
9 49 0.005293924 ubox
10 17 0.045346639 ubox
10 19 0.027559053 ubox
10 20 0.997675399 ubox
10 22 0.004175949 ubox
10 23 0.009796468 ubox
10 24 0.003977051 ubox
10 44 0.007219199 ubox
10 47 0.004044065 ubox
10 51 0.004354813 ubox
11 17 0.011458067 ubox
11 19 0.996544560 ubox
11 20 0.021445719 ubox
11 22 0.009877052 ubox
11 23 0.003946683 ubox
11 46 0.004058147 ubox
11 50 0.004356576 ubox
12 42 0.007122564 ubox
12 45 0.004057942 ubox
12 49 0.004350104 ubox
13 17 0.675641503 ubox
13 19 0.015288103 ubox
13 20 0.010865368 ubox
13 22 0.003630988 ubox
13 41 0.006908236 ubox
13 44 0.004021529 ubox
19 28 0.005635604 ubox
20 27 0.005695824 ubox
24 91 0.005053317 ubox
25 86 0.004772021 ubox
26 35 0.003903047 ubox
26 86 0.005603890 ubox
27 34 0.004072212 ubox
27 47 0.998705264 ubox
27 83 0.003212543 ubox
27 95 0.004749780 ubox
27 98 0.004754962 ubox
27 101 0.004847019 ubox
27 104 0.004852766 ubox
28 41 0.007139973 ubox
28 44 0.007234330 ubox
28 46 0.999800752 ubox
28 65 0.010452679 ubox
28 68 0.006095545 ubox
28 82 0.003231797 ubox
29 40 0.007376980 ubox
29 43 0.007247668 ubox
29 45 0.999611123 ubox
29 64 0.010475574 ubox
29 67 0.006107739 ubox
29 81 0.003235222 ubox
30 39 0.007158761 ubox
30 63 0.010191109 ubox
30 80 0.003223925 ubox
31 42 0.012143861 ubox
31 43 0.999562645 ubox
31 79 0.003197518 ubox
32 40 0.014959511 ubox
32 42 0.999393369 ubox
32 43 0.003302021 ubox
32 61 0.006449117 ubox
32 64 0.006018416 ubox
33 39 0.016676737 ubox
33 63 0.005918772 ubox
34 40 0.968978978 ubox
34 42 0.004273561 ubox
34 61 0.003207206 ubox
35 40 0.012158738 ubox
35 62 0.004177283 ubox
36 40 0.025259401 ubox
36 61 0.004198739 ubox
39 54 0.012239475 ubox
40 53 0.012821390 ubox
42 51 0.013917281 ubox
43 50 0.013923021 ubox
44 49 0.013917739 ubox
45 68 0.004148977 ubox
46 67 0.004151998 ubox
47 66 0.004137529 ubox
48 70 0.011862761 ubox
49 65 0.006756038 ubox
49 68 0.998507578 ubox
50 64 0.006602820 ubox
50 67 0.999577165 ubox
51 64 0.003533934 ubox
51 66 0.999333487 ubox
52 63 0.005833814 ubox
53 61 0.010290378 ubox
53 64 0.994565712 ubox
53 81 0.003224961 ubox
54 63 0.975487232 ubox
54 80 0.003215930 ubox
55 61 0.340056013 ubox
55 64 0.024485381 ubox
55 67 0.007782893 ubox
55 79 0.003197105 ubox
56 61 0.655011166 ubox
56 64 0.013548148 ubox
56 66 0.007818012 ubox
56 91 0.004400253 ubox
57 61 0.022277837 ubox
57 62 0.040699387 ubox
57 64 0.005181735 ubox
57 87 0.007083925 ubox
57 90 0.004227038 ubox
58 63 0.006776662 ubox
58 86 0.007356366 ubox
60 66 0.004457010 ubox
60 72 0.003990016 ubox
60 84 0.013240905 ubox
61 65 0.004558592 ubox
61 71 0.004167659 ubox
61 83 0.013416144 ubox
62 70 0.004183441 ubox
62 82 0.013413551 ubox
62 86 0.004863490 ubox
63 69 0.004192391 ubox
63 81 0.013362819 ubox
63 85 0.004981862 ubox
63 87 0.003303737 ubox
64 68 0.004161845 ubox
64 80 0.013388140 ubox
64 86 0.003581626 ubox
65 79 0.013415616 ubox
65 84 0.011478570 ubox
65 91 0.004334217 ubox
66 78 0.013379973 ubox
66 83 0.011689772 ubox
67 77 0.011309814 ubox
67 82 0.011690243 ubox
68 81 0.011696889 ubox
68 91 0.004032425 ubox
69 76 0.006119810 ubox
69 80 0.011511451 ubox
69 86 0.933480324 ubox
70 75 0.005588685 ubox
70 79 0.004178628 ubox
70 85 0.988673498 ubox
70 87 0.003813072 ubox
70 92 0.003485776 ubox
71 79 0.011222944 ubox
71 84 0.999524063 ubox
71 91 0.003613150 ubox
72 78 0.011559206 ubox
72 83 0.999764564 ubox
73 77 0.010058093 ubox
73 80 0.004851282 ubox
73 82 0.999639059 ubox
74 79 0.007497079 ubox
74 81 0.999355168 ubox
75 80 0.831574901 ubox
77 85 0.003736094 ubox
78 84 0.003832462 ubox
79 83 0.003587910 ubox
79 95 0.004443681 ubox
80 94 0.004315798 ubox
82 92 0.004729795 ubox
83 91 0.005083412 ubox
86 90 0.005436725 ubox
86 91 0.006841017 ubox
86 92 0.009460977 ubox
86 93 0.012097470 ubox
86 94 0.006317626 ubox
86 96 0.004190071 ubox
86 97 0.003856637 ubox
91 95 0.054574385 ubox
91 98 0.119562006 ubox
91 101 0.046271329 ubox
91 104 0.029982138 ubox
91 107 0.008728210 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
