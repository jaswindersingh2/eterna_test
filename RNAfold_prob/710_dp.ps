%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (710)
} def

/sequence { (\
GGAAAGUCGACGCAAAGGGUGGACAAGUGACGGCGAAAAGGCGACACAGACACAGCGAAAGGUGAGUCGUCGAUCUUCGGAUCGACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.003490371 ubox
1 24 0.005592310 ubox
1 31 0.006884043 ubox
1 47 0.005064074 ubox
1 68 0.011974459 ubox
1 86 0.014387087 ubox
1 95 0.241388688 ubox
1 98 0.242948544 ubox
1 101 0.248421071 ubox
1 104 0.249535681 ubox
1 107 0.063001868 ubox
2 8 0.004753785 ubox
2 24 0.005467017 ubox
2 28 0.004887831 ubox
2 67 0.008125206 ubox
2 68 0.017679788 ubox
2 86 0.007537933 ubox
2 95 0.127412800 ubox
2 98 0.127867727 ubox
2 101 0.130589078 ubox
2 104 0.130092180 ubox
2 107 0.042450203 ubox
3 7 0.004157411 ubox
3 67 0.015687666 ubox
4 28 0.006410484 ubox
5 20 0.004605068 ubox
6 24 0.993171264 ubox
6 34 0.003481114 ubox
6 45 0.007899996 ubox
6 86 0.093014044 ubox
6 95 0.014397750 ubox
6 98 0.014907904 ubox
6 101 0.014846807 ubox
6 104 0.014562450 ubox
6 107 0.005082345 ubox
7 18 0.005047009 ubox
7 22 0.005773614 ubox
7 23 0.994629506 ubox
7 33 0.003486074 ubox
7 44 0.007910391 ubox
7 85 0.093140668 ubox
7 92 0.009009586 ubox
7 94 0.011389989 ubox
7 97 0.012055391 ubox
7 100 0.012000388 ubox
7 103 0.011778132 ubox
7 106 0.004156049 ubox
8 17 0.005407631 ubox
8 21 0.009529166 ubox
8 22 0.994955242 ubox
8 32 0.003631952 ubox
8 43 0.007887932 ubox
8 84 0.093176533 ubox
8 91 0.009333327 ubox
9 20 0.007296973 ubox
9 24 0.006474378 ubox
9 31 0.003633789 ubox
9 42 0.007676527 ubox
9 68 0.006828370 ubox
9 83 0.093141638 ubox
9 95 0.004369725 ubox
9 98 0.004304240 ubox
9 101 0.004299037 ubox
10 20 0.990875669 ubox
10 67 0.006822920 ubox
10 82 0.092206397 ubox
11 17 0.015808710 ubox
11 18 0.051252728 ubox
11 19 0.992387556 ubox
11 21 0.046711478 ubox
11 29 0.003632191 ubox
11 40 0.003498759 ubox
11 41 0.005808296 ubox
11 66 0.006670754 ubox
11 79 0.021030502 ubox
11 80 0.027675606 ubox
12 20 0.048126896 ubox
12 28 0.003655546 ubox
12 42 0.003294671 ubox
12 63 0.003712955 ubox
12 78 0.021581508 ubox
13 17 0.782304472 ubox
13 18 0.232193001 ubox
13 19 0.048287105 ubox
13 27 0.003652406 ubox
13 41 0.003316652 ubox
13 62 0.003782538 ubox
13 64 0.005999844 ubox
13 79 0.072164045 ubox
13 80 0.042842563 ubox
14 63 0.005940931 ubox
14 77 0.008763806 ubox
15 76 0.004330571 ubox
15 77 0.030547151 ubox
16 76 0.029240465 ubox
16 77 0.079863966 ubox
17 24 0.003329404 ubox
17 75 0.024789952 ubox
17 76 0.087626139 ubox
18 24 0.003345294 ubox
18 34 0.004993740 ubox
18 56 0.006826677 ubox
18 74 0.018850308 ubox
18 75 0.089770754 ubox
19 34 0.006387245 ubox
19 74 0.091079752 ubox
20 32 0.005023941 ubox
20 33 0.006381790 ubox
20 54 0.006911083 ubox
20 73 0.092390318 ubox
21 31 0.005058429 ubox
21 53 0.006945361 ubox
22 31 0.006340032 ubox
22 71 0.093128699 ubox
23 70 0.093125258 ubox
24 29 0.003966552 ubox
24 69 0.093005327 ubox
24 91 0.004183008 ubox
27 34 0.004436783 ubox
27 45 0.026361678 ubox
27 47 0.994963749 ubox
27 95 0.018360623 ubox
27 98 0.018772598 ubox
27 101 0.019640210 ubox
27 104 0.019740294 ubox
27 107 0.006905191 ubox
28 33 0.004392989 ubox
28 44 0.024698637 ubox
28 46 0.996159510 ubox
28 48 0.023462905 ubox
28 94 0.017473927 ubox
28 96 0.008984665 ubox
28 97 0.017136844 ubox
28 99 0.010096401 ubox
28 100 0.017831695 ubox
28 102 0.010235495 ubox
28 103 0.017900385 ubox
28 105 0.008605758 ubox
28 106 0.006324261 ubox
29 45 0.994790425 ubox
29 47 0.026713061 ubox
29 68 0.004938954 ubox
29 95 0.010958016 ubox
29 98 0.012322980 ubox
29 101 0.012479095 ubox
29 104 0.009697301 ubox
30 67 0.004939657 ubox
31 40 0.004842486 ubox
31 41 0.005496121 ubox
31 43 0.978412828 ubox
31 66 0.004923897 ubox
31 91 0.007038395 ubox
32 42 0.969351920 ubox
32 45 0.005997524 ubox
32 47 0.003735410 ubox
32 95 0.007246967 ubox
32 98 0.007241586 ubox
32 101 0.005870485 ubox
32 104 0.003299827 ubox
33 42 0.243450976 ubox
33 45 0.005560146 ubox
34 40 0.955240809 ubox
34 41 0.284744383 ubox
34 43 0.012149702 ubox
35 42 0.012203243 ubox
40 47 0.003319572 ubox
41 56 0.003543923 ubox
42 55 0.003551882 ubox
43 68 0.004064218 ubox
44 67 0.004067197 ubox
45 66 0.004029863 ubox
48 67 0.012582306 ubox
49 67 0.003862435 ubox
49 68 0.996169891 ubox
50 63 0.003857470 ubox
50 67 0.997451306 ubox
51 62 0.003972579 ubox
51 64 0.050165640 ubox
51 66 0.994738686 ubox
52 63 0.056498505 ubox
52 67 0.010245278 ubox
53 61 0.004326856 ubox
53 62 0.057266130 ubox
53 64 0.982863886 ubox
53 66 0.011155612 ubox
54 63 0.982130701 ubox
55 63 0.162477363 ubox
55 67 0.004448690 ubox
56 61 0.972437915 ubox
56 62 0.183934180 ubox
56 64 0.004278322 ubox
56 66 0.004771054 ubox
57 63 0.003633651 ubox
57 68 0.005449479 ubox
58 67 0.005375884 ubox
61 98 0.003339285 ubox
62 95 0.005009412 ubox
62 98 0.004849746 ubox
63 94 0.004967446 ubox
63 96 0.004194093 ubox
63 97 0.004500471 ubox
64 95 0.005064122 ubox
66 95 0.003361958 ubox
67 87 0.005748257 ubox
67 88 0.008864744 ubox
67 92 0.010862121 ubox
68 91 0.011822066 ubox
69 86 0.993728192 ubox
70 85 0.995183761 ubox
71 84 0.995602146 ubox
72 83 0.995610079 ubox
73 82 0.995384862 ubox
74 80 0.007336954 ubox
74 81 0.995250719 ubox
75 79 0.013544647 ubox
75 80 0.994542578 ubox
76 80 0.003171957 ubox
86 91 0.007342140 ubox
91 95 0.054550197 ubox
91 98 0.119518287 ubox
91 101 0.046263068 ubox
91 104 0.029996943 ubox
91 107 0.008732809 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
