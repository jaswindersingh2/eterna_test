%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (288)
} def

/sequence { (\
GGAAAAAAGCACGACAAGGAAGCUUGGCGCAGCACAAAGUGGCGAAGGGCACGGUGAGGCGGAGUGCACGAUGUCUUCGGGCAUCGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.021409629 ubox
1 12 0.012736487 ubox
1 15 0.004104103 ubox
1 67 0.005035096 ubox
1 69 0.003306738 ubox
1 95 0.068010085 ubox
1 98 0.068507824 ubox
1 101 0.070092981 ubox
1 104 0.070390251 ubox
1 107 0.017774105 ubox
2 10 0.007627481 ubox
2 12 0.004375561 ubox
2 69 0.003421996 ubox
2 95 0.035889613 ubox
2 98 0.036057450 ubox
2 101 0.036828321 ubox
2 104 0.036685940 ubox
2 107 0.011971848 ubox
3 65 0.003904942 ubox
7 25 0.032107921 ubox
8 24 0.034234420 ubox
9 23 0.034595274 ubox
9 28 0.006386695 ubox
9 30 0.005351394 ubox
9 33 0.004156928 ubox
9 60 0.004038098 ubox
9 65 0.005403539 ubox
9 67 0.994430200 ubox
9 95 0.006177312 ubox
9 98 0.006132652 ubox
9 101 0.006229413 ubox
9 104 0.006260993 ubox
10 19 0.005383930 ubox
10 22 0.034546537 ubox
10 27 0.006610862 ubox
10 29 0.005303427 ubox
10 32 0.004167452 ubox
10 59 0.004037682 ubox
10 64 0.005699640 ubox
10 66 0.995475757 ubox
10 91 0.007216497 ubox
11 65 0.994686614 ubox
12 18 0.018311006 ubox
12 19 0.019830505 ubox
12 26 0.004287914 ubox
12 27 0.006576946 ubox
12 29 0.010025320 ubox
12 61 0.003527241 ubox
12 62 0.014839517 ubox
12 64 0.993067224 ubox
12 86 0.004339003 ubox
12 91 0.005530044 ubox
13 23 0.007509865 ubox
13 25 0.005452041 ubox
13 28 0.096088858 ubox
13 30 0.003550284 ubox
13 60 0.004578719 ubox
13 75 0.006692433 ubox
13 85 0.004209701 ubox
13 95 0.005929164 ubox
13 98 0.005986626 ubox
13 101 0.006138601 ubox
13 104 0.006128887 ubox
14 24 0.005240730 ubox
14 55 0.003263392 ubox
14 74 0.006725420 ubox
15 19 0.003320166 ubox
15 22 0.010855162 ubox
15 26 0.990784472 ubox
15 27 0.034225785 ubox
15 54 0.003355373 ubox
15 56 0.005248387 ubox
15 58 0.006297907 ubox
15 59 0.004025026 ubox
15 61 0.067122645 ubox
15 62 0.029565183 ubox
15 73 0.006759293 ubox
16 25 0.993924820 ubox
16 55 0.005871511 ubox
16 72 0.006612760 ubox
17 24 0.994323084 ubox
17 25 0.019209992 ubox
17 55 0.004588397 ubox
18 23 0.993481221 ubox
18 24 0.022132282 ubox
18 28 0.004854179 ubox
18 52 0.005917361 ubox
18 55 0.009091767 ubox
18 60 0.004932943 ubox
18 67 0.004144213 ubox
18 69 0.006450524 ubox
19 23 0.023639802 ubox
19 28 0.005650129 ubox
19 52 0.005257346 ubox
19 55 0.006253571 ubox
19 67 0.008978530 ubox
19 69 0.004796254 ubox
21 55 0.006402505 ubox
22 28 0.028662491 ubox
22 30 0.012201035 ubox
22 33 0.004237946 ubox
22 50 0.041342248 ubox
22 55 0.008788825 ubox
22 60 0.008681570 ubox
22 65 0.020081393 ubox
22 67 0.033165362 ubox
23 27 0.028576374 ubox
23 29 0.012205663 ubox
23 32 0.004251960 ubox
23 47 0.005304774 ubox
23 49 0.041405343 ubox
23 54 0.008833168 ubox
23 59 0.008682329 ubox
23 64 0.021509070 ubox
23 66 0.033178315 ubox
24 31 0.003938176 ubox
24 46 0.005260510 ubox
24 48 0.041357392 ubox
24 53 0.008202397 ubox
24 58 0.008643898 ubox
24 63 0.022312396 ubox
24 64 0.004856931 ubox
25 45 0.005148622 ubox
25 47 0.041243787 ubox
25 51 0.003307152 ubox
25 57 0.008485131 ubox
25 62 0.021571207 ubox
25 63 0.006850116 ubox
25 64 0.015340626 ubox
26 50 0.003316265 ubox
26 52 0.003859150 ubox
26 69 0.004112304 ubox
26 95 0.003240276 ubox
26 98 0.003254248 ubox
26 101 0.003267615 ubox
27 33 0.004829701 ubox
27 43 0.005274967 ubox
27 50 0.009402100 ubox
27 55 0.007919583 ubox
27 60 0.038811349 ubox
27 65 0.005970759 ubox
27 67 0.067265941 ubox
28 32 0.004815838 ubox
28 41 0.004040487 ubox
28 42 0.005006223 ubox
28 44 0.041958310 ubox
28 48 0.003234231 ubox
28 49 0.009419779 ubox
28 54 0.007865953 ubox
28 59 0.038802604 ubox
28 61 0.976581085 ubox
28 62 0.041792603 ubox
28 64 0.006213787 ubox
28 66 0.067344471 ubox
29 40 0.004422876 ubox
29 43 0.042005908 ubox
29 60 0.995032280 ubox
29 65 0.067131573 ubox
29 67 0.005403938 ubox
30 39 0.004474771 ubox
30 41 0.005319603 ubox
30 42 0.041682870 ubox
30 47 0.008995049 ubox
30 53 0.005170344 ubox
30 56 0.008207060 ubox
30 58 0.014387690 ubox
30 59 0.994988251 ubox
30 61 0.010999788 ubox
30 62 0.018484138 ubox
30 64 0.066888106 ubox
30 66 0.005433564 ubox
31 40 0.005887797 ubox
31 55 0.008176564 ubox
31 65 0.005377433 ubox
32 40 0.036249369 ubox
32 43 0.009377665 ubox
32 50 0.003265143 ubox
32 55 0.006954413 ubox
32 60 0.077726783 ubox
32 67 0.004178319 ubox
33 39 0.038071356 ubox
33 41 0.016941542 ubox
33 42 0.008875826 ubox
33 49 0.003247748 ubox
33 53 0.007854634 ubox
33 54 0.007074899 ubox
33 56 0.993502429 ubox
33 58 0.021701450 ubox
33 59 0.077658938 ubox
33 61 0.006767801 ubox
33 66 0.004182692 ubox
34 40 0.017358992 ubox
34 55 0.993157011 ubox
34 65 0.004177356 ubox
35 39 0.017222477 ubox
35 41 0.006272745 ubox
35 53 0.023586372 ubox
35 54 0.987953916 ubox
35 56 0.097860871 ubox
35 58 0.006896374 ubox
35 59 0.005115836 ubox
35 64 0.004036678 ubox
36 40 0.005101567 ubox
36 55 0.097754658 ubox
37 55 0.006363271 ubox
38 55 0.006522648 ubox
39 50 0.032657974 ubox
39 52 0.992570788 ubox
40 49 0.032586742 ubox
40 51 0.995722533 ubox
40 53 0.032852850 ubox
41 50 0.990876390 ubox
41 52 0.033685271 ubox
42 50 0.121474326 ubox
43 47 0.010926544 ubox
43 48 0.976037457 ubox
43 49 0.157660561 ubox
49 60 0.007637412 ubox
49 67 0.003236645 ubox
50 59 0.007652334 ubox
50 66 0.003245673 ubox
51 65 0.003249892 ubox
52 58 0.013483353 ubox
52 59 0.011218775 ubox
52 61 0.024732385 ubox
52 62 0.006366775 ubox
52 64 0.003218559 ubox
53 60 0.028098960 ubox
54 60 0.014722611 ubox
55 59 0.013825548 ubox
59 67 0.004896949 ubox
60 66 0.004910030 ubox
62 67 0.005586096 ubox
62 85 0.006297189 ubox
63 84 0.005434449 ubox
64 84 0.008144316 ubox
64 95 0.010562259 ubox
64 98 0.004956987 ubox
64 101 0.004170163 ubox
64 104 0.003402674 ubox
65 83 0.010322931 ubox
65 89 0.004287849 ubox
65 90 0.006664209 ubox
65 91 0.003791883 ubox
65 94 0.010442642 ubox
65 97 0.004760399 ubox
65 100 0.004027711 ubox
65 103 0.003277764 ubox
66 82 0.010668952 ubox
67 81 0.010490328 ubox
67 91 0.005551111 ubox
69 79 0.010980846 ubox
69 86 0.980617740 ubox
69 91 0.005432851 ubox
70 78 0.011082887 ubox
70 85 0.999797652 ubox
71 77 0.010969276 ubox
71 84 0.999626597 ubox
72 83 0.999484108 ubox
73 82 0.999873928 ubox
74 80 0.011926811 ubox
74 81 0.998827634 ubox
74 92 0.003791664 ubox
75 79 0.016324749 ubox
75 80 0.995273686 ubox
75 81 0.028692406 ubox
75 91 0.004342287 ubox
76 80 0.026077235 ubox
76 88 0.007245679 ubox
76 90 0.003742428 ubox
77 87 0.008769759 ubox
78 86 0.009027530 ubox
79 85 0.008994065 ubox
80 84 0.005826720 ubox
84 92 0.003653748 ubox
85 91 0.004731273 ubox
86 95 0.018840899 ubox
86 98 0.007645375 ubox
86 101 0.006122346 ubox
86 104 0.005279775 ubox
91 95 0.043069821 ubox
91 98 0.103809538 ubox
91 101 0.045522405 ubox
91 104 0.035214713 ubox
91 107 0.010418312 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
