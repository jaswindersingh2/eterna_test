%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (928)
} def

/sequence { (\
GGAAAGCAGCCGAGGCGAGCCUCAGCGAACAGGGAAAGGACCUGUUCGCGGACCUUAUGGUCAGCUGCUCUUAUGUUCGCAUAAGAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.003779608 ubox
1 69 0.003322298 ubox
1 70 0.010363156 ubox
1 71 0.021609576 ubox
1 72 0.004707614 ubox
1 74 0.004152713 ubox
1 78 0.004345338 ubox
1 80 0.007152511 ubox
1 95 0.067275954 ubox
1 98 0.067748508 ubox
1 101 0.069288419 ubox
1 104 0.069600661 ubox
1 107 0.017572819 ubox
2 10 0.003780274 ubox
2 68 0.004312582 ubox
2 69 0.008022465 ubox
2 70 0.027749813 ubox
2 71 0.004759882 ubox
2 72 0.042984215 ubox
2 77 0.004189575 ubox
2 78 0.012097957 ubox
2 95 0.035494320 ubox
2 98 0.035635415 ubox
2 101 0.036392831 ubox
2 104 0.036254244 ubox
2 107 0.011830058 ubox
3 69 0.022617740 ubox
3 71 0.043917048 ubox
3 72 0.014105054 ubox
3 76 0.003870045 ubox
3 77 0.012096114 ubox
4 69 0.030466094 ubox
4 71 0.014804620 ubox
4 72 0.003819972 ubox
4 76 0.011870502 ubox
5 66 0.010102094 ubox
5 69 0.661414240 ubox
6 65 0.010453292 ubox
6 68 0.998552735 ubox
7 64 0.010445204 ubox
7 67 0.999897385 ubox
8 66 0.999665651 ubox
9 26 0.008953046 ubox
9 65 0.999840247 ubox
10 25 0.009161445 ubox
10 64 0.995502251 ubox
11 17 0.006872326 ubox
11 25 0.008509576 ubox
11 50 0.025892875 ubox
11 64 0.063110023 ubox
12 16 0.006506831 ubox
12 21 0.003680249 ubox
12 23 0.998205631 ubox
12 62 0.011953353 ubox
13 22 0.999443972 ubox
13 61 0.011122282 ubox
14 20 0.008073064 ubox
14 21 0.999694539 ubox
14 23 0.004457376 ubox
14 62 0.009652280 ubox
15 20 0.993509388 ubox
15 21 0.003536906 ubox
15 22 0.003497875 ubox
15 61 0.009710577 ubox
16 60 0.009732575 ubox
17 23 0.004647957 ubox
17 56 0.010008327 ubox
18 22 0.004052015 ubox
18 55 0.010408756 ubox
18 58 0.007859340 ubox
19 54 0.010426603 ubox
20 51 0.003285051 ubox
21 50 0.003436990 ubox
22 51 0.004020717 ubox
22 52 0.012231997 ubox
23 50 0.019327402 ubox
23 51 0.012788895 ubox
25 49 0.998637254 ubox
26 48 0.999890172 ubox
27 47 0.999967485 ubox
28 46 0.999644276 ubox
29 45 0.999515565 ubox
30 44 0.999973803 ubox
31 43 0.999656410 ubox
32 41 0.004751566 ubox
32 42 0.999588912 ubox
32 43 0.013767104 ubox
33 41 0.999070331 ubox
33 42 0.027809831 ubox
34 41 0.036610373 ubox
48 65 0.008881065 ubox
49 64 0.009096901 ubox
50 62 0.058262325 ubox
51 61 0.030607866 ubox
51 62 0.996535379 ubox
52 61 0.999093807 ubox
53 60 0.999859413 ubox
54 59 0.999319769 ubox
55 59 0.003644420 ubox
65 91 0.003878535 ubox
66 90 0.003854816 ubox
68 91 0.004387527 ubox
69 86 0.710161897 ubox
69 87 0.032565770 ubox
69 88 0.007035367 ubox
69 89 0.005050719 ubox
69 90 0.004539058 ubox
69 92 0.048334013 ubox
70 75 0.004134001 ubox
70 85 0.992534637 ubox
70 91 0.067497267 ubox
71 84 0.993662961 ubox
71 89 0.003221318 ubox
71 90 0.067078890 ubox
71 91 0.003743243 ubox
71 92 0.013007495 ubox
71 93 0.009820349 ubox
71 99 0.003441289 ubox
72 83 0.993963529 ubox
72 88 0.003829571 ubox
72 89 0.061082202 ubox
72 90 0.003769181 ubox
72 91 0.013420888 ubox
72 92 0.010692340 ubox
72 99 0.003419861 ubox
73 82 0.994214068 ubox
74 81 0.993738899 ubox
74 83 0.004067417 ubox
74 87 0.007165022 ubox
74 88 0.013631655 ubox
74 89 0.013314373 ubox
74 90 0.005962577 ubox
74 96 0.038030125 ubox
74 99 0.014134260 ubox
74 102 0.010403489 ubox
74 105 0.009165760 ubox
75 80 0.987980069 ubox
75 82 0.004683683 ubox
75 95 0.042203425 ubox
75 98 0.015681803 ubox
75 101 0.011544478 ubox
75 104 0.010182169 ubox
76 81 0.004679774 ubox
76 84 0.003346331 ubox
76 85 0.003888409 ubox
76 87 0.077711936 ubox
76 88 0.003968129 ubox
76 93 0.026547227 ubox
76 94 0.035285979 ubox
76 97 0.015013515 ubox
76 100 0.011150026 ubox
76 103 0.009862896 ubox
77 84 0.003645239 ubox
77 86 0.083588262 ubox
77 92 0.036378606 ubox
77 93 0.025637969 ubox
77 96 0.011851506 ubox
77 99 0.009239336 ubox
77 102 0.008275864 ubox
78 85 0.084185946 ubox
78 91 0.043044960 ubox
79 95 0.006376007 ubox
79 98 0.005193371 ubox
79 101 0.004277462 ubox
80 85 0.004906506 ubox
80 91 0.006464016 ubox
82 87 0.006210814 ubox
82 88 0.004269347 ubox
82 89 0.004041034 ubox
85 95 0.003844525 ubox
91 95 0.042880810 ubox
91 98 0.103397149 ubox
91 101 0.045364724 ubox
91 104 0.035110948 ubox
91 107 0.010388193 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
