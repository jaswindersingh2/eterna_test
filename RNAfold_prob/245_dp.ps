%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (245)
} def

/sequence { (\
GGAAAAUAGCCCACGCUGAUGUCAGCAGCCAGGGCAAAGGAACUAACGAUCCAGCCAAGGCACGGGCGAUUGUCAUUCGUGACAAUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.025386705 ubox
1 11 0.004153919 ubox
1 12 0.014799009 ubox
1 74 0.014085194 ubox
1 78 0.008265556 ubox
1 95 0.068024859 ubox
1 98 0.068281664 ubox
1 101 0.069588232 ubox
1 104 0.069911465 ubox
1 107 0.017654341 ubox
2 7 0.014982041 ubox
2 10 0.004192589 ubox
2 11 0.014803512 ubox
2 71 0.004905890 ubox
2 73 0.012969489 ubox
2 74 0.040232920 ubox
2 77 0.007559354 ubox
2 78 0.008127799 ubox
2 95 0.035883034 ubox
2 98 0.035817496 ubox
2 101 0.036553099 ubox
2 104 0.036423867 ubox
2 107 0.011887319 ubox
3 7 0.013965866 ubox
3 70 0.006043123 ubox
3 71 0.008977320 ubox
3 73 0.038942028 ubox
3 76 0.007085759 ubox
3 77 0.008108261 ubox
3 86 0.003276418 ubox
4 70 0.010605591 ubox
4 71 0.015702619 ubox
4 76 0.007813832 ubox
5 70 0.018776065 ubox
5 71 0.088649257 ubox
6 70 0.116186404 ubox
6 71 0.008344310 ubox
6 73 0.005915743 ubox
6 86 0.005332285 ubox
7 18 0.004544934 ubox
7 68 0.038686832 ubox
7 69 0.109621549 ubox
7 72 0.005940469 ubox
7 85 0.004958543 ubox
7 87 0.010362424 ubox
7 88 0.009271984 ubox
7 89 0.010073847 ubox
7 90 0.012510627 ubox
7 91 0.006910835 ubox
7 92 0.011017089 ubox
7 93 0.009644671 ubox
7 94 0.008386567 ubox
7 96 0.008234723 ubox
7 97 0.008412776 ubox
7 99 0.008323153 ubox
7 100 0.008182919 ubox
7 102 0.007784537 ubox
7 103 0.007819827 ubox
7 105 0.007735276 ubox
7 106 0.007740937 ubox
8 17 0.005318594 ubox
8 70 0.004165565 ubox
8 71 0.005968343 ubox
8 86 0.007413358 ubox
9 16 0.005395658 ubox
9 35 0.021785849 ubox
9 67 0.998309077 ubox
10 15 0.005379868 ubox
10 34 0.021811770 ubox
10 65 0.003938555 ubox
10 66 0.999562406 ubox
11 33 0.021811869 ubox
11 64 0.004540809 ubox
11 65 0.999558709 ubox
11 66 0.005539002 ubox
12 32 0.021792426 ubox
12 64 0.998489073 ubox
12 65 0.006620057 ubox
13 22 0.006256689 ubox
14 21 0.006681448 ubox
14 28 0.011835531 ubox
14 64 0.008368321 ubox
14 68 0.003698061 ubox
15 20 0.004336259 ubox
15 22 0.008487160 ubox
15 26 0.998596607 ubox
15 29 0.021055492 ubox
15 63 0.003990831 ubox
15 67 0.003722504 ubox
16 21 0.009211630 ubox
16 25 0.999642875 ubox
16 28 0.021122982 ubox
16 66 0.003709643 ubox
17 24 0.999139147 ubox
17 27 0.021380006 ubox
17 65 0.003552521 ubox
18 22 0.004396112 ubox
18 23 0.996123968 ubox
18 26 0.021390826 ubox
20 25 0.006988462 ubox
20 27 0.003247942 ubox
21 26 0.003585405 ubox
21 63 0.003347024 ubox
21 67 0.005228759 ubox
22 62 0.003334080 ubox
22 66 0.005225578 ubox
23 65 0.005203043 ubox
28 61 0.998602636 ubox
28 63 0.006074674 ubox
29 60 0.999720982 ubox
30 59 0.999271276 ubox
32 56 0.013807158 ubox
33 55 0.011008946 ubox
33 56 0.999531815 ubox
34 55 0.999688756 ubox
35 54 0.999260361 ubox
36 50 0.004300905 ubox
37 50 0.006967101 ubox
38 50 0.003275640 ubox
39 47 0.015231936 ubox
39 50 0.004374684 ubox
39 51 0.010178983 ubox
39 52 0.998551183 ubox
40 47 0.012686658 ubox
40 50 0.007510715 ubox
40 51 0.999060338 ubox
41 50 0.986394295 ubox
42 50 0.029390844 ubox
43 48 0.645183626 ubox
44 48 0.021970019 ubox
44 49 0.038919497 ubox
45 50 0.003564551 ubox
47 68 0.005324783 ubox
48 67 0.005428272 ubox
50 66 0.005343924 ubox
51 65 0.005464406 ubox
52 64 0.005457413 ubox
54 61 0.007174575 ubox
54 67 0.020626276 ubox
55 60 0.007181624 ubox
55 66 0.020642374 ubox
56 65 0.020626130 ubox
63 91 0.004801055 ubox
68 78 0.004041532 ubox
68 86 0.043553756 ubox
68 95 0.028926376 ubox
68 98 0.025148572 ubox
68 101 0.020834100 ubox
68 104 0.016861269 ubox
68 107 0.005486772 ubox
69 77 0.004000413 ubox
69 86 0.938472212 ubox
70 84 0.006928302 ubox
70 85 0.973531919 ubox
70 87 0.007126890 ubox
70 88 0.005767991 ubox
70 89 0.004066646 ubox
70 97 0.017126564 ubox
70 100 0.014803183 ubox
70 103 0.008202476 ubox
70 106 0.005789282 ubox
71 84 0.991438034 ubox
71 85 0.007376927 ubox
71 87 0.003551302 ubox
71 96 0.019498056 ubox
71 99 0.016856005 ubox
71 102 0.009336259 ubox
71 105 0.006982074 ubox
72 83 0.998412004 ubox
72 95 0.020288157 ubox
72 98 0.017539375 ubox
72 101 0.009713783 ubox
72 104 0.007372417 ubox
73 82 0.998319077 ubox
73 92 0.003300324 ubox
73 94 0.019390064 ubox
73 97 0.016886966 ubox
73 100 0.009531392 ubox
73 103 0.007227912 ubox
74 79 0.005060135 ubox
74 81 0.998105639 ubox
74 91 0.003853464 ubox
75 80 0.830530344 ubox
75 86 0.003381516 ubox
76 85 0.003565762 ubox
76 89 0.003957073 ubox
76 93 0.030649433 ubox
76 94 0.005883954 ubox
76 97 0.007903398 ubox
76 100 0.005759836 ubox
77 84 0.003303369 ubox
77 88 0.004067554 ubox
77 92 0.034653343 ubox
77 93 0.005036671 ubox
77 96 0.007973130 ubox
77 99 0.005781985 ubox
78 91 0.035023590 ubox
79 86 0.008189379 ubox
79 95 0.015464693 ubox
79 98 0.010451743 ubox
79 101 0.007514664 ubox
79 104 0.006745017 ubox
80 85 0.008357487 ubox
80 87 0.003199063 ubox
80 88 0.006197305 ubox
80 89 0.015862538 ubox
80 90 0.006345728 ubox
80 94 0.015392422 ubox
80 96 0.004916858 ubox
80 97 0.010149915 ubox
80 100 0.007311785 ubox
80 103 0.006585788 ubox
81 95 0.005590886 ubox
81 98 0.003356253 ubox
83 91 0.010119958 ubox
86 90 0.004040400 ubox
86 91 0.004984816 ubox
86 92 0.006652526 ubox
86 93 0.008487671 ubox
86 94 0.004484793 ubox
86 96 0.003167903 ubox
91 95 0.043077705 ubox
91 98 0.103768728 ubox
91 101 0.045484349 ubox
91 104 0.035166767 ubox
91 107 0.010400811 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
