%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (822)
} def

/sequence { (\
GGAAAAAUCACAGGCACAUUCACAUAGGACACUGCGAAAAGACGGGUCACUGUGGAAUGGCACUGGAACAUAUUGUUCGCAGUAUGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.012090380 ubox
1 9 0.080195794 ubox
1 11 0.074733493 ubox
1 69 0.004661527 ubox
1 78 0.007766574 ubox
1 80 0.011951744 ubox
1 95 0.072145265 ubox
1 98 0.074166543 ubox
1 101 0.073538480 ubox
1 104 0.073329108 ubox
1 107 0.018564856 ubox
2 8 0.058889645 ubox
2 9 0.188049267 ubox
2 11 0.021065436 ubox
2 69 0.004255071 ubox
2 77 0.007697027 ubox
2 78 0.012355953 ubox
2 80 0.005756087 ubox
2 95 0.034980212 ubox
2 98 0.037442210 ubox
2 101 0.035821055 ubox
2 104 0.035716797 ubox
2 107 0.011679490 ubox
3 8 0.172345082 ubox
3 76 0.007472336 ubox
3 77 0.012321354 ubox
4 8 0.012527220 ubox
4 71 0.004674807 ubox
4 76 0.011114541 ubox
5 71 0.004566221 ubox
5 74 0.003656515 ubox
6 71 0.004161457 ubox
6 73 0.003691552 ubox
6 74 0.009336510 ubox
7 71 0.005631530 ubox
7 73 0.010074377 ubox
7 83 0.003633329 ubox
7 85 0.005780199 ubox
8 13 0.003238365 ubox
8 66 0.014533098 ubox
8 67 0.742465038 ubox
8 68 0.174233072 ubox
8 70 0.004756703 ubox
8 72 0.006778268 ubox
8 82 0.003433590 ubox
8 84 0.005568237 ubox
8 87 0.074282371 ubox
8 88 0.005908855 ubox
8 89 0.005257306 ubox
8 90 0.005387791 ubox
8 91 0.003436850 ubox
8 92 0.078490962 ubox
8 93 0.005650319 ubox
8 94 0.004271257 ubox
8 96 0.004114979 ubox
8 97 0.004174832 ubox
8 99 0.004179008 ubox
8 100 0.003868799 ubox
8 102 0.004124127 ubox
8 103 0.003824117 ubox
8 105 0.004140803 ubox
8 106 0.003827782 ubox
9 13 0.010205995 ubox
9 65 0.019985718 ubox
9 66 0.793457482 ubox
9 79 0.003616108 ubox
9 82 0.004483995 ubox
9 86 0.079161889 ubox
9 91 0.083380566 ubox
10 64 0.017562358 ubox
10 85 0.068671658 ubox
11 65 0.960041776 ubox
11 66 0.016283291 ubox
11 86 0.021700922 ubox
11 91 0.009566569 ubox
12 64 0.961657650 ubox
12 83 0.004765532 ubox
12 85 0.019659481 ubox
13 61 0.014751318 ubox
13 63 0.960419368 ubox
13 95 0.014354660 ubox
13 98 0.015734394 ubox
13 101 0.016237242 ubox
13 104 0.016421035 ubox
13 107 0.005768659 ubox
14 61 0.989378972 ubox
15 59 0.005022975 ubox
15 60 0.989505778 ubox
16 58 0.004447317 ubox
17 59 0.998199810 ubox
18 58 0.999471167 ubox
19 56 0.008829586 ubox
19 57 0.998954047 ubox
20 55 0.011744109 ubox
20 56 0.999343836 ubox
20 57 0.006629172 ubox
21 54 0.016417993 ubox
21 55 0.998600965 ubox
22 53 0.019944713 ubox
23 52 0.020085980 ubox
23 54 0.998032870 ubox
24 51 0.017568937 ubox
24 53 0.999483541 ubox
25 52 0.999270680 ubox
26 51 0.999237127 ubox
27 50 0.998053862 ubox
28 48 0.997884987 ubox
29 47 0.998730420 ubox
30 45 0.004828977 ubox
30 46 0.997337373 ubox
31 47 0.015091913 ubox
32 41 0.017611254 ubox
32 44 0.055097588 ubox
32 45 0.994298177 ubox
32 46 0.015814947 ubox
33 40 0.017998118 ubox
33 42 0.014774491 ubox
33 44 0.994835751 ubox
33 45 0.014824969 ubox
33 46 0.006860870 ubox
34 43 0.994523490 ubox
35 41 0.851290633 ubox
35 44 0.033552861 ubox
35 45 0.003527362 ubox
36 43 0.036066568 ubox
60 85 0.005830151 ubox
61 86 0.006363736 ubox
62 83 0.255401201 ubox
62 85 0.005030561 ubox
63 82 0.268382749 ubox
63 91 0.016792780 ubox
64 81 0.268550235 ubox
64 90 0.016812419 ubox
65 80 0.268271390 ubox
66 78 0.310760281 ubox
66 95 0.007076461 ubox
66 98 0.005813856 ubox
66 101 0.005218763 ubox
66 104 0.005872450 ubox
67 77 0.311006614 ubox
68 76 0.311049984 ubox
69 75 0.311124301 ubox
69 86 0.942404981 ubox
69 91 0.004575954 ubox
70 74 0.252148767 ubox
70 85 0.946375320 ubox
71 84 0.946864092 ubox
71 99 0.009291303 ubox
71 102 0.003954045 ubox
71 105 0.006117310 ubox
72 83 0.947100155 ubox
73 82 0.946494475 ubox
73 91 0.003434649 ubox
73 92 0.004265891 ubox
73 93 0.006441805 ubox
73 97 0.037019761 ubox
73 100 0.015548948 ubox
73 103 0.024389634 ubox
73 106 0.029358758 ubox
74 81 0.944948804 ubox
74 90 0.004572576 ubox
74 91 0.004554924 ubox
74 92 0.007280898 ubox
74 96 0.044128380 ubox
74 99 0.018534527 ubox
74 102 0.029095683 ubox
74 105 0.035289749 ubox
75 80 0.939950347 ubox
75 95 0.045259724 ubox
75 98 0.019009536 ubox
75 101 0.029849703 ubox
75 104 0.036243360 ubox
76 88 0.013576089 ubox
76 90 0.007396332 ubox
76 93 0.025750125 ubox
76 94 0.037825262 ubox
76 97 0.018539424 ubox
76 100 0.029682209 ubox
76 103 0.036096610 ubox
77 87 0.017020022 ubox
77 89 0.007543776 ubox
77 92 0.036579877 ubox
77 93 0.027860855 ubox
77 96 0.016042631 ubox
77 99 0.028386813 ubox
77 102 0.034747890 ubox
78 86 0.017507807 ubox
78 91 0.044186473 ubox
79 85 0.013926015 ubox
79 95 0.009300084 ubox
79 98 0.026757119 ubox
79 101 0.032800124 ubox
79 104 0.012462621 ubox
79 107 0.003199573 ubox
80 86 0.024749307 ubox
80 91 0.009522468 ubox
81 85 0.020132738 ubox
82 95 0.045109897 ubox
82 98 0.057066827 ubox
82 101 0.032324683 ubox
82 104 0.019622109 ubox
82 107 0.006091878 ubox
83 87 0.004417978 ubox
83 88 0.006818922 ubox
83 89 0.004145084 ubox
83 90 0.007223455 ubox
83 91 0.003867739 ubox
83 92 0.005351149 ubox
83 93 0.004214625 ubox
83 94 0.044245032 ubox
83 96 0.003848070 ubox
83 97 0.056288324 ubox
83 100 0.031859308 ubox
83 103 0.019275063 ubox
83 106 0.006058967 ubox
85 89 0.003494736 ubox
85 90 0.017340660 ubox
85 91 0.006947386 ubox
85 92 0.036956549 ubox
85 93 0.014181467 ubox
85 94 0.015196333 ubox
85 96 0.080574989 ubox
85 97 0.006218140 ubox
85 99 0.030162237 ubox
85 100 0.004421717 ubox
85 102 0.022558760 ubox
85 103 0.003547798 ubox
85 105 0.016229219 ubox
86 95 0.086120568 ubox
86 98 0.032416409 ubox
86 101 0.024423039 ubox
86 104 0.018036239 ubox
91 95 0.042870605 ubox
91 98 0.103072365 ubox
91 101 0.045063942 ubox
91 104 0.034785645 ubox
91 107 0.010289894 ubox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 41 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
