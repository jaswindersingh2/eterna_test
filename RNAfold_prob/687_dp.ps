%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (687)
} def

/sequence { (\
GGAAACUAGAAGAUCGAAAAAAAAAAGAUCAACUAGAGAAAAAAAAACUAGAACUAGAAAAAAAAAAAGAUCCGUUUCGACGGAUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.035075912 ubox
1 7 0.010176637 ubox
1 48 0.015885508 ubox
1 49 0.017259180 ubox
1 54 0.013527507 ubox
1 55 0.017145765 ubox
1 73 0.007653326 ubox
1 86 0.005013032 ubox
1 95 0.094925127 ubox
1 98 0.095133248 ubox
1 101 0.097277594 ubox
1 104 0.097737031 ubox
1 107 0.024679051 ubox
2 6 0.011214414 ubox
2 7 0.003674474 ubox
2 48 0.018222189 ubox
2 54 0.018085505 ubox
2 72 0.007656704 ubox
2 86 0.005316279 ubox
2 95 0.050203311 ubox
2 98 0.050033232 ubox
2 101 0.051137074 ubox
2 104 0.050950045 ubox
2 107 0.016627258 ubox
3 71 0.007158615 ubox
3 85 0.003788764 ubox
5 49 0.005382153 ubox
5 55 0.003923391 ubox
6 36 0.959523813 ubox
6 38 0.023983971 ubox
6 51 0.018343458 ubox
6 57 0.217608625 ubox
6 91 0.026664271 ubox
7 35 0.965578302 ubox
7 36 0.004439745 ubox
7 37 0.020140297 ubox
7 50 0.018398080 ubox
7 56 0.218955012 ubox
7 90 0.025491126 ubox
8 34 0.966169859 ubox
8 49 0.018313540 ubox
8 55 0.218957760 ubox
9 33 0.964887023 ubox
9 48 0.018180502 ubox
9 54 0.217674387 ubox
9 95 0.009624442 ubox
9 98 0.009556445 ubox
9 101 0.009690347 ubox
9 104 0.009710658 ubox
9 107 0.003341960 ubox
10 34 0.008088124 ubox
12 30 0.998696670 ubox
13 29 0.999508141 ubox
14 28 0.999594338 ubox
14 52 0.005642870 ubox
15 27 0.999609364 ubox
15 51 0.005779080 ubox
16 30 0.003383743 ubox
17 29 0.003222065 ubox
29 37 0.005786953 ubox
30 36 0.005894358 ubox
31 55 0.004562938 ubox
33 38 0.008198943 ubox
33 51 0.237986969 ubox
33 57 0.070691080 ubox
34 39 0.003371603 ubox
34 41 0.003962353 ubox
34 43 0.003649444 ubox
34 50 0.239404485 ubox
34 52 0.005365868 ubox
34 56 0.071132076 ubox
35 49 0.239419758 ubox
35 55 0.071152668 ubox
36 48 0.238417055 ubox
36 54 0.070856500 ubox
37 49 0.103869261 ubox
37 55 0.068273780 ubox
38 48 0.106615984 ubox
38 49 0.009728572 ubox
38 54 0.070109983 ubox
38 55 0.006401482 ubox
38 95 0.020190461 ubox
38 98 0.020252414 ubox
38 101 0.020915853 ubox
38 104 0.020945043 ubox
38 107 0.007328793 ubox
39 49 0.012864964 ubox
39 55 0.007500231 ubox
40 49 0.023784479 ubox
40 55 0.006880923 ubox
41 49 0.017176733 ubox
41 55 0.007451766 ubox
42 49 0.026345319 ubox
42 55 0.008069219 ubox
43 49 0.021130530 ubox
43 55 0.008748485 ubox
44 49 0.020965265 ubox
44 55 0.009482412 ubox
45 49 0.010608160 ubox
45 55 0.010293310 ubox
46 55 0.021342184 ubox
47 55 0.011364545 ubox
48 57 0.536229637 ubox
48 69 0.003167004 ubox
48 91 0.011574152 ubox
49 53 0.008604986 ubox
49 56 0.536916719 ubox
49 57 0.014518495 ubox
49 58 0.021369662 ubox
49 59 0.010303387 ubox
49 60 0.009484399 ubox
49 61 0.008746160 ubox
49 62 0.008064704 ubox
49 63 0.007447050 ubox
49 64 0.006876480 ubox
49 65 0.006910699 ubox
49 66 0.006417029 ubox
49 67 0.005946522 ubox
49 68 0.006699786 ubox
49 90 0.011039781 ubox
50 55 0.507394589 ubox
51 55 0.014456875 ubox
51 95 0.005166661 ubox
51 98 0.004526166 ubox
51 101 0.005499038 ubox
51 104 0.008784980 ubox
54 69 0.004537491 ubox
54 91 0.014714385 ubox
55 59 0.010615268 ubox
55 60 0.020313636 ubox
55 61 0.018730056 ubox
55 62 0.023888565 ubox
55 63 0.014668050 ubox
55 64 0.021996266 ubox
55 65 0.010596739 ubox
55 66 0.009770107 ubox
55 67 0.009011141 ubox
55 68 0.009404737 ubox
55 87 0.003552346 ubox
55 90 0.014129264 ubox
55 99 0.009419400 ubox
55 100 0.011981291 ubox
55 102 0.004833023 ubox
57 95 0.014217289 ubox
57 98 0.051875375 ubox
57 101 0.011519029 ubox
57 104 0.005353114 ubox
69 86 0.998397109 ubox
70 85 0.999438307 ubox
71 84 0.999661001 ubox
72 83 0.999947755 ubox
73 82 0.999932734 ubox
74 81 0.997549392 ubox
74 95 0.009284964 ubox
75 79 0.035954768 ubox
75 80 0.922160379 ubox
75 94 0.009294198 ubox
76 80 0.028199043 ubox
76 93 0.009293840 ubox
77 92 0.009304105 ubox
78 91 0.009305001 ubox
85 92 0.007208073 ubox
86 91 0.010087366 ubox
91 95 0.044274675 ubox
91 98 0.105361632 ubox
91 101 0.045577168 ubox
91 104 0.034740629 ubox
91 107 0.010264294 ubox
6 36 0.9500000 lbox
7 35 0.9500000 lbox
8 34 0.9500000 lbox
9 33 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
