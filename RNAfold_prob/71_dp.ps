%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (71)
} def

/sequence { (\
GGAAAAAGACUGCUUACGAAAGUAAGGCAAGCGAUCGAAAGAUCACAUCGAAAGAUGGCGGGCCAGUCGCAGAUCUUCGGAUCUGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.027139219 ubox
1 11 0.009592431 ubox
1 13 0.007669587 ubox
1 64 0.016465179 ubox
1 68 0.011977854 ubox
1 95 0.068952062 ubox
1 98 0.069429707 ubox
1 101 0.071085237 ubox
1 104 0.071378899 ubox
1 107 0.018023403 ubox
2 10 0.011156979 ubox
2 13 0.003564895 ubox
2 63 0.016319155 ubox
2 67 0.009139336 ubox
2 68 0.019830368 ubox
2 95 0.036383671 ubox
2 98 0.036543831 ubox
2 101 0.037335801 ubox
2 104 0.037193025 ubox
2 107 0.012136976 ubox
3 11 0.006356169 ubox
3 67 0.018425647 ubox
4 11 0.003451066 ubox
6 15 0.010846986 ubox
6 77 0.005297002 ubox
7 14 0.013348063 ubox
7 76 0.006168536 ubox
8 13 0.014368582 ubox
8 32 0.020639507 ubox
8 63 0.003203733 ubox
8 67 0.003229761 ubox
8 68 0.989073364 ubox
8 75 0.006351602 ubox
8 95 0.010731854 ubox
8 98 0.010236296 ubox
8 101 0.010236989 ubox
8 104 0.010254675 ubox
8 107 0.003583573 ubox
9 23 0.017505866 ubox
9 67 0.990389268 ubox
9 74 0.006330767 ubox
10 22 0.018081684 ubox
10 26 0.003827052 ubox
10 31 0.012295940 ubox
10 61 0.007886846 ubox
10 66 0.990620073 ubox
10 72 0.006393885 ubox
10 91 0.017931058 ubox
11 18 0.003404537 ubox
11 21 0.017909277 ubox
11 24 0.134459022 ubox
11 25 0.007153175 ubox
11 29 0.042496623 ubox
11 30 0.008975637 ubox
11 60 0.007875935 ubox
11 65 0.979646072 ubox
11 71 0.006397697 ubox
11 90 0.016894401 ubox
11 96 0.014649025 ubox
11 99 0.014411883 ubox
11 102 0.014654273 ubox
11 105 0.014480809 ubox
12 17 0.006986527 ubox
12 23 0.188927482 ubox
12 28 0.050975780 ubox
12 32 0.005873004 ubox
12 59 0.007859311 ubox
12 63 0.024823378 ubox
12 64 0.927947941 ubox
12 67 0.008290398 ubox
12 70 0.006401445 ubox
12 95 0.015732288 ubox
12 98 0.015482326 ubox
12 101 0.015751787 ubox
12 104 0.015587536 ubox
13 18 0.009369422 ubox
13 22 0.192219806 ubox
13 26 0.932942726 ubox
13 27 0.043193154 ubox
13 31 0.006109801 ubox
13 58 0.006618487 ubox
13 62 0.032879908 ubox
13 66 0.009189985 ubox
13 69 0.006390851 ubox
13 91 0.009789983 ubox
14 20 0.005569323 ubox
14 21 0.190464134 ubox
14 24 0.006179931 ubox
14 25 0.969542518 ubox
14 26 0.032466671 ubox
14 30 0.005970735 ubox
14 61 0.028646159 ubox
14 65 0.007275518 ubox
14 90 0.008704405 ubox
15 19 0.006350998 ubox
15 20 0.174121593 ubox
15 21 0.004490349 ubox
15 24 0.978209305 ubox
15 25 0.023641970 ubox
15 29 0.005192533 ubox
15 60 0.017909983 ubox
15 89 0.006262169 ubox
16 23 0.979658575 ubox
17 22 0.979488141 ubox
17 26 0.009062456 ubox
17 27 0.003950417 ubox
17 58 0.010597313 ubox
17 60 0.008718446 ubox
18 59 0.008791272 ubox
18 68 0.003381376 ubox
19 67 0.003342196 ubox
22 28 0.006839109 ubox
22 32 0.007746317 ubox
22 68 0.005755520 ubox
23 27 0.006404535 ubox
23 31 0.007650102 ubox
26 32 0.010425310 ubox
26 63 0.010082407 ubox
26 64 0.342789337 ubox
27 32 0.019914099 ubox
27 59 0.041027533 ubox
27 63 0.988313878 ubox
27 64 0.008538508 ubox
27 86 0.006310252 ubox
28 58 0.041014362 ubox
28 60 0.005462939 ubox
28 61 0.023689082 ubox
28 62 0.990243193 ubox
28 85 0.006317926 ubox
29 84 0.006154109 ubox
31 46 0.018270918 ubox
31 59 0.991451351 ubox
31 63 0.029842288 ubox
31 86 0.029587712 ubox
32 54 0.003856944 ubox
32 57 0.003718303 ubox
32 58 0.990859036 ubox
32 60 0.005337828 ubox
32 61 0.003743634 ubox
32 62 0.029861100 ubox
32 85 0.029614055 ubox
33 44 0.855596559 ubox
33 83 0.030951938 ubox
33 84 0.005542791 ubox
34 43 0.856443607 ubox
34 56 0.511142873 ubox
34 82 0.031417571 ubox
35 42 0.856549943 ubox
35 51 0.016465080 ubox
35 55 0.513957303 ubox
35 80 0.003748044 ubox
35 81 0.031251203 ubox
36 41 0.856396212 ubox
36 50 0.018391495 ubox
36 54 0.513800949 ubox
36 79 0.006661029 ubox
36 80 0.030785340 ubox
37 44 0.013771861 ubox
37 49 0.021812600 ubox
37 78 0.008588544 ubox
38 43 0.012597245 ubox
38 48 0.020708996 ubox
38 77 0.007018890 ubox
39 48 0.004397629 ubox
39 76 0.004932017 ubox
39 77 0.030470220 ubox
40 48 0.006344394 ubox
40 76 0.031071308 ubox
41 46 0.009694227 ubox
41 48 0.004748406 ubox
41 49 0.506450793 ubox
41 75 0.031500367 ubox
42 48 0.500126852 ubox
42 74 0.031492300 ubox
43 47 0.443389018 ubox
43 51 0.025923745 ubox
43 73 0.031486710 ubox
44 50 0.026495605 ubox
44 72 0.031455691 ubox
46 57 0.855186032 ubox
46 58 0.003913024 ubox
47 56 0.856729354 ubox
48 55 0.857047797 ubox
48 61 0.006861349 ubox
49 54 0.856908553 ubox
49 57 0.004948454 ubox
49 60 0.009284878 ubox
50 56 0.003507632 ubox
50 59 0.009311889 ubox
54 68 0.004361152 ubox
55 67 0.004267530 ubox
56 65 0.006446784 ubox
57 64 0.011375984 ubox
57 68 0.011814580 ubox
58 63 0.016750087 ubox
58 64 0.003272605 ubox
58 67 0.017314194 ubox
58 68 0.003713267 ubox
58 70 0.031680337 ubox
59 66 0.018109912 ubox
59 69 0.031743330 ubox
60 68 0.032159754 ubox
61 67 0.030621271 ubox
61 68 0.004084916 ubox
61 95 0.003522403 ubox
64 91 0.007350094 ubox
66 95 0.007101893 ubox
66 98 0.004669076 ubox
66 101 0.003784358 ubox
66 104 0.003274689 ubox
67 87 0.011997091 ubox
67 88 0.018599322 ubox
67 89 0.004221569 ubox
67 90 0.004179120 ubox
67 92 0.018038803 ubox
67 94 0.006050766 ubox
67 97 0.004337427 ubox
67 100 0.003549333 ubox
68 91 0.019689500 ubox
69 86 0.998393497 ubox
70 85 0.999452739 ubox
71 84 0.999235069 ubox
72 83 0.999464488 ubox
73 82 0.999224511 ubox
74 80 0.007364994 ubox
74 81 0.999089840 ubox
75 79 0.013596712 ubox
75 80 0.998378930 ubox
76 80 0.003184144 ubox
79 95 0.005613632 ubox
82 92 0.006187165 ubox
83 91 0.006294043 ubox
84 90 0.006275970 ubox
86 91 0.005051657 ubox
91 95 0.043136288 ubox
91 98 0.103881164 ubox
91 101 0.045518484 ubox
91 104 0.035182724 ubox
91 107 0.010408431 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
