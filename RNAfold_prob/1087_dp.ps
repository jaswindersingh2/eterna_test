%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1087)
} def

/sequence { (\
GGAAAAAACACUGCAGCAGCCCGCCGUAGGCAGGGCGAAGUCCGUGGCGAAGCCCGGAAGCUGGAGUGCCGUGACUUCGGUUGCGGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.024226320 ubox
1 70 0.010703603 ubox
1 75 0.003186564 ubox
1 78 0.004176484 ubox
1 95 0.067593818 ubox
1 98 0.067822748 ubox
1 101 0.069290905 ubox
1 104 0.069611315 ubox
1 107 0.017575641 ubox
2 9 0.010306165 ubox
2 69 0.010910786 ubox
2 77 0.004141542 ubox
2 78 0.004310755 ubox
2 95 0.035732818 ubox
2 98 0.035668700 ubox
2 101 0.036420235 ubox
2 104 0.036287422 ubox
2 107 0.011841268 ubox
3 76 0.003969792 ubox
3 77 0.004299813 ubox
4 76 0.004000947 ubox
9 68 0.994021395 ubox
9 91 0.004310799 ubox
10 67 0.998597562 ubox
11 66 0.999304500 ubox
11 86 0.035849087 ubox
12 65 0.996080795 ubox
12 85 0.036051268 ubox
13 84 0.036224688 ubox
14 63 0.999082890 ubox
14 64 0.004951141 ubox
14 83 0.036223692 ubox
15 62 0.999089273 ubox
15 82 0.035289687 ubox
16 61 0.999312224 ubox
16 81 0.034311697 ubox
17 37 0.014024120 ubox
17 40 0.006048668 ubox
17 60 0.998167296 ubox
17 80 0.034163205 ubox
18 41 0.004659114 ubox
19 36 0.997155764 ubox
19 41 0.007459764 ubox
20 34 0.011290896 ubox
20 35 0.998416869 ubox
20 40 0.009401638 ubox
20 57 0.014610143 ubox
21 33 0.013039816 ubox
21 34 0.998404601 ubox
21 40 0.003592548 ubox
21 56 0.014540735 ubox
21 57 0.003381966 ubox
22 33 0.997865186 ubox
22 37 0.051996258 ubox
22 56 0.003506753 ubox
23 31 0.993691244 ubox
23 36 0.052577777 ubox
24 29 0.007153508 ubox
24 30 0.996715995 ubox
24 35 0.052562739 ubox
25 29 0.989472527 ubox
25 30 0.048827398 ubox
25 34 0.052541490 ubox
26 31 0.004585327 ubox
27 32 0.024313758 ubox
33 55 0.014957758 ubox
34 54 0.014978268 ubox
35 53 0.014978669 ubox
36 40 0.004039555 ubox
36 52 0.014975170 ubox
36 79 0.010344155 ubox
37 41 0.006629639 ubox
37 42 0.004632418 ubox
37 78 0.033251235 ubox
38 77 0.033276972 ubox
39 62 0.003323510 ubox
39 76 0.033278551 ubox
40 48 0.014940983 ubox
40 61 0.003681508 ubox
40 75 0.033296517 ubox
41 47 0.014896646 ubox
41 58 0.933612967 ubox
41 59 0.042805966 ubox
41 74 0.033264960 ubox
42 46 0.014376383 ubox
42 57 0.998979793 ubox
42 73 0.030026881 ubox
43 56 0.999268622 ubox
43 57 0.006449379 ubox
43 71 0.009008170 ubox
43 73 0.014250939 ubox
44 55 0.998742863 ubox
44 70 0.006973727 ubox
44 72 0.019094005 ubox
45 71 0.029168283 ubox
46 53 0.023978522 ubox
46 54 0.998884771 ubox
46 55 0.003330177 ubox
46 70 0.031979652 ubox
47 53 0.998969769 ubox
47 54 0.003409617 ubox
47 67 0.006312313 ubox
47 69 0.032108240 ubox
47 72 0.005917827 ubox
48 52 0.991707243 ubox
48 66 0.006331657 ubox
48 68 0.032105600 ubox
48 71 0.005964649 ubox
49 67 0.022662592 ubox
49 70 0.005956097 ubox
50 67 0.004310802 ubox
51 62 0.007657241 ubox
51 67 0.005269523 ubox
52 61 0.007866000 ubox
52 67 0.021259993 ubox
53 60 0.007845262 ubox
53 64 0.006837619 ubox
53 66 0.023016417 ubox
54 63 0.006709400 ubox
54 64 0.031556222 ubox
55 63 0.031608048 ubox
56 61 0.006474066 ubox
56 62 0.031263231 ubox
57 61 0.030595061 ubox
59 82 0.007351427 ubox
60 81 0.011303423 ubox
61 80 0.011821960 ubox
62 79 0.013253917 ubox
63 78 0.014326957 ubox
64 77 0.014329363 ubox
65 76 0.014338934 ubox
66 75 0.014344546 ubox
67 74 0.014253653 ubox
67 87 0.004501765 ubox
67 88 0.005310723 ubox
69 80 0.011486678 ubox
69 85 0.003430794 ubox
69 86 0.995711848 ubox
70 79 0.014594597 ubox
70 85 0.998982896 ubox
70 86 0.003720114 ubox
71 78 0.014573053 ubox
71 84 0.999086022 ubox
71 95 0.003710567 ubox
72 83 0.996949670 ubox
72 94 0.003694471 ubox
73 82 0.994289395 ubox
74 81 0.998478716 ubox
75 79 0.012426586 ubox
75 80 0.997728510 ubox
75 91 0.003350748 ubox
76 80 0.004078095 ubox
76 87 0.006097443 ubox
77 86 0.006726692 ubox
78 85 0.007133060 ubox
79 84 0.007132120 ubox
80 95 0.003316317 ubox
80 98 0.003951591 ubox
80 101 0.013595592 ubox
80 104 0.005899294 ubox
81 94 0.003416771 ubox
81 97 0.004155497 ubox
81 100 0.014466622 ubox
81 103 0.006284352 ubox
82 96 0.004246530 ubox
82 99 0.014871777 ubox
82 102 0.006458415 ubox
83 95 0.004248279 ubox
83 98 0.014942827 ubox
83 101 0.006484751 ubox
84 91 0.004390652 ubox
86 95 0.016336405 ubox
86 98 0.006572337 ubox
86 101 0.003395079 ubox
91 95 0.043029425 ubox
91 98 0.103751970 ubox
91 101 0.045521980 ubox
91 104 0.035234526 ubox
91 107 0.010424793 ubox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
