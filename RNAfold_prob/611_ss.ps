%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAAAAGAUUUUAGGGAUUUUUUAGGUAAAAAAAAAAAAAAUUUAGAAGAUUUUUAAGAUUUUAAUUUUGAAUUCGUUUAAGAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

/coor [
[27.53334618 167.97434998]
[26.59704971 153.00360107]
[29.64830589 138.31721497]
[36.47038269 124.95835876]
[46.57872391 113.87586975]
[59.25534439 105.85694122]
[73.59984589 101.47113037]
[88.59084320 101.02970123]
[76.05852509 92.78707123]
[63.52620697 84.54443359]
[50.99389267 76.30179596]
[38.46157455 68.05916595]
[25.92925644 59.81652832]
[13.39693928 51.57389450]
[0.86462235 43.33126068]
[-11.66769505 35.08862686]
[-24.20001221 26.84599113]
[-36.73233032 18.60335732]
[-49.26464462 10.36072254]
[-61.79696274 2.11808753]
[-74.32927704 -6.12454700]
[-86.86159515 -14.36718178]
[-99.39391327 -22.60981560]
[-111.92623138 -30.85245132]
[-124.45854950 -39.09508514]
[-136.99085999 -47.33771896]
[-149.52317810 -55.58035660]
[-162.05549622 -63.82299042]
[-174.58781433 -72.06562805]
[-187.12013245 -80.30825806]
[-199.91738892 -72.05294800]
[-214.96699524 -69.72287750]
[-229.66151428 -73.72174072]
[-241.45504761 -83.35671234]
[-248.30426025 -96.95847321]
[-249.02252197 -112.17044067]
[-243.48536682 -126.35704803]
[-232.65216064 -137.06037903]
[-218.39979553 -142.42602539]
[-203.19760132 -141.52433777]
[-189.67942810 -134.51155090]
[-180.18740845 -122.60266876]
[-176.36607361 -107.86098480]
[-178.87750244 -92.84057617]
[-166.34518433 -84.59793854]
[-153.81286621 -76.35530853]
[-141.28054810 -68.11267090]
[-128.74822998 -59.87003708]
[-116.21591187 -51.62740326]
[-103.68359375 -43.38476944]
[-91.15128326 -35.14213181]
[-78.61896515 -26.89949989]
[-66.08664703 -18.65686417]
[-53.55432892 -10.41422939]
[-41.02201080 -2.17159510]
[-28.48969460 6.07103968]
[-15.95737743 14.31367397]
[-3.42506027 22.55630875]
[9.10725689 30.79894447]
[21.63957405 39.04158020]
[34.17189026 47.28421402]
[46.70420837 55.52684784]
[59.23652649 63.76948166]
[71.76884460 72.01211548]
[84.30116272 80.25475311]
[96.83348083 88.49738312]
[101.74954987 87.93296051]
[106.58046722 89.42421722]
[110.48574829 92.80193329]
[125.47940063 93.23819733]
[140.47305298 93.67446899]
[155.46670532 94.11074066]
[164.98374939 81.99744415]
[179.63734436 77.85913849]
[193.75097656 83.08114624]
[201.98480225 95.46427917]
[216.97845459 95.90055084]
[231.97212219 96.33682251]
[243.29429626 85.31031799]
[259.09588623 85.60293579]
[270.00204468 97.04106903]
[269.54238892 112.83866882]
[257.98959351 123.62330627]
[242.19773865 122.99665070]
[231.53584290 111.33047485]
[216.54219055 110.89420319]
[201.54853821 110.45793152]
[192.60862732 122.34136200]
[178.21524048 126.73390961]
[163.82705688 121.75057220]
[155.03044128 109.10439301]
[140.03678894 108.66812897]
[125.04312897 108.23185730]
[110.04947662 107.79558563]
[122.07799530 116.75743103]
[131.31219482 128.57815552]
[137.09617615 142.41815186]
[139.01913452 157.29438782]
[136.94445801 172.15020752]
[131.01951599 185.93045044]
[121.66514587 197.65632629]
[109.54578400 206.49493408]
[95.52224731 211.81851196]
[80.59060669 213.24890137]
[65.81143188 210.68453979]
[52.23446655 204.30755615]
[40.82406235 194.57087708]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 66]
[9 65]
[10 64]
[11 63]
[12 62]
[13 61]
[14 60]
[15 59]
[16 58]
[17 57]
[18 56]
[19 55]
[20 54]
[21 53]
[22 52]
[23 51]
[24 50]
[25 49]
[26 48]
[27 47]
[28 46]
[29 45]
[30 44]
[69 94]
[70 93]
[71 92]
[72 91]
[76 87]
[77 86]
[78 85]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
