%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (249)
} def

/sequence { (\
GGAAACAGCGGGAAGGUCCCAGGACCAGCGUCGGCAACCGGUCUCCAGUCCGAGCCUUCGCAACCCGAAUUAGGGUUCGCCCUAAUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.301023027 ubox
1 9 0.037621932 ubox
1 26 0.008672206 ubox
1 65 0.008508888 ubox
1 66 0.024457167 ubox
1 81 0.008399548 ubox
1 82 0.051394152 ubox
1 83 0.006651726 ubox
1 86 0.004393213 ubox
1 95 0.065110120 ubox
1 98 0.064164781 ubox
1 101 0.065614620 ubox
1 104 0.065981343 ubox
1 107 0.016655504 ubox
2 6 0.038005942 ubox
2 9 0.028032885 ubox
2 25 0.008667469 ubox
2 64 0.008541726 ubox
2 65 0.024402402 ubox
2 71 0.004129360 ubox
2 78 0.003168255 ubox
2 80 0.008184500 ubox
2 81 0.051460021 ubox
2 82 0.006966291 ubox
2 86 0.004706103 ubox
2 95 0.034489566 ubox
2 98 0.033487600 ubox
2 101 0.034402738 ubox
2 104 0.034286219 ubox
2 107 0.011188884 ubox
3 70 0.005201416 ubox
3 71 0.005426986 ubox
3 86 0.004608895 ubox
4 70 0.007803888 ubox
4 71 0.005244560 ubox
4 83 0.003809704 ubox
4 86 0.005388582 ubox
5 70 0.006464868 ubox
5 71 0.005988413 ubox
5 83 0.012615510 ubox
5 86 0.005809252 ubox
6 11 0.006871137 ubox
6 12 0.003782647 ubox
6 22 0.006857909 ubox
6 23 0.004086316 ubox
6 67 0.009271191 ubox
6 91 0.040213672 ubox
7 70 0.015289569 ubox
7 71 0.003718012 ubox
7 83 0.030908649 ubox
7 86 0.012310525 ubox
8 31 0.004521354 ubox
8 61 0.019340031 ubox
8 64 0.006397982 ubox
8 65 0.003550920 ubox
8 66 0.010944970 ubox
8 70 0.006127443 ubox
8 80 0.096946925 ubox
8 81 0.006187740 ubox
8 82 0.032018497 ubox
8 83 0.016898427 ubox
8 86 0.006453379 ubox
8 95 0.038646177 ubox
8 98 0.038993511 ubox
8 101 0.038986632 ubox
8 104 0.039010389 ubox
8 107 0.013621230 ubox
9 22 0.004304132 ubox
9 30 0.004833799 ubox
9 60 0.019334089 ubox
9 67 0.967931463 ubox
9 79 0.097222912 ubox
9 91 0.008706231 ubox
10 20 0.021823297 ubox
10 29 0.004820500 ubox
10 59 0.015538459 ubox
10 61 0.033725840 ubox
10 65 0.017565169 ubox
10 66 0.982111857 ubox
10 78 0.096140931 ubox
10 80 0.017053043 ubox
10 81 0.032477763 ubox
10 82 0.139430276 ubox
10 83 0.026501041 ubox
10 95 0.003308912 ubox
10 98 0.003348463 ubox
10 101 0.003397770 ubox
10 104 0.003377368 ubox
11 19 0.021894150 ubox
11 58 0.012173495 ubox
11 61 0.008004507 ubox
11 64 0.018172604 ubox
11 65 0.982117562 ubox
11 66 0.017787647 ubox
11 77 0.059378597 ubox
11 78 0.005242860 ubox
11 80 0.032424356 ubox
11 81 0.139638267 ubox
11 82 0.027743959 ubox
11 95 0.006014548 ubox
11 98 0.005896534 ubox
11 101 0.005977545 ubox
11 104 0.003372875 ubox
12 18 0.021887623 ubox
12 29 0.004486160 ubox
12 57 0.006984357 ubox
12 59 0.047219091 ubox
12 64 0.977591529 ubox
12 65 0.018256755 ubox
12 76 0.022966969 ubox
12 77 0.004811782 ubox
12 78 0.031610196 ubox
12 80 0.138742879 ubox
12 81 0.027610045 ubox
13 17 0.019042979 ubox
13 58 0.052427119 ubox
13 76 0.003696531 ubox
13 77 0.027609086 ubox
14 57 0.053381780 ubox
14 76 0.013960406 ubox
14 77 0.005423557 ubox
15 26 0.997247813 ubox
15 56 0.053622737 ubox
16 25 0.998288269 ubox
16 55 0.053615060 ubox
17 23 0.005773776 ubox
17 24 0.998110596 ubox
17 53 0.008716163 ubox
17 54 0.048948155 ubox
18 22 0.010643167 ubox
18 23 0.997610635 ubox
18 52 0.010195886 ubox
18 54 0.017134192 ubox
19 23 0.009060777 ubox
19 52 0.018382969 ubox
19 54 0.005470952 ubox
20 52 0.017087424 ubox
21 83 0.005134459 ubox
22 51 0.053585480 ubox
22 65 0.005837861 ubox
22 66 0.011788195 ubox
22 82 0.005389431 ubox
23 32 0.004198669 ubox
23 50 0.053634526 ubox
23 64 0.005865366 ubox
23 65 0.011782700 ubox
23 81 0.005368345 ubox
24 31 0.004207838 ubox
24 49 0.053624643 ubox
25 30 0.004193843 ubox
25 48 0.053533858 ubox
27 44 0.016319950 ubox
27 57 0.005097282 ubox
28 35 0.012456838 ubox
28 43 0.016446848 ubox
28 45 0.045304704 ubox
28 46 0.005095503 ubox
28 55 0.008712230 ubox
28 56 0.005393989 ubox
28 61 0.997149936 ubox
29 34 0.012466859 ubox
29 41 0.003915140 ubox
29 54 0.008784911 ubox
29 60 0.998182672 ubox
30 42 0.010840773 ubox
30 43 0.047366892 ubox
30 58 0.004795589 ubox
30 59 0.997475955 ubox
30 61 0.008481765 ubox
31 41 0.050890333 ubox
31 53 0.012790166 ubox
31 60 0.008378662 ubox
32 40 0.053145304 ubox
32 41 0.005987389 ubox
32 52 0.013041572 ubox
33 39 0.053278561 ubox
33 51 0.013041790 ubox
33 56 0.997882777 ubox
33 57 0.007902100 ubox
34 38 0.052419428 ubox
34 50 0.012997842 ubox
34 55 0.998352392 ubox
34 56 0.006886882 ubox
35 54 0.997687228 ubox
37 49 0.023990765 ubox
38 48 0.025150446 ubox
38 52 0.039151332 ubox
38 54 0.020752020 ubox
39 48 0.006445585 ubox
39 52 0.994910251 ubox
40 46 0.026145996 ubox
40 49 0.003403453 ubox
40 50 0.007792809 ubox
40 51 0.997988078 ubox
40 56 0.008069406 ubox
41 45 0.025756657 ubox
41 46 0.003527898 ubox
41 49 0.007412968 ubox
41 50 0.997504488 ubox
41 55 0.008108653 ubox
42 47 0.014085176 ubox
42 48 0.069610937 ubox
42 53 0.005242625 ubox
43 48 0.674739895 ubox
43 52 0.005284730 ubox
43 54 0.008361210 ubox
44 48 0.024238905 ubox
44 53 0.009130409 ubox
45 52 0.009114904 ubox
54 61 0.009111342 ubox
55 60 0.009095901 ubox
59 79 0.007113618 ubox
60 78 0.008283448 ubox
60 80 0.023135450 ubox
61 79 0.023493768 ubox
62 76 0.003988691 ubox
62 77 0.145873462 ubox
63 76 0.173603502 ubox
63 77 0.003534765 ubox
64 75 0.178868584 ubox
64 91 0.005758385 ubox
65 74 0.178915345 ubox
65 91 0.005742488 ubox
66 73 0.178873072 ubox
66 79 0.004183365 ubox
66 91 0.009420381 ubox
67 78 0.004402553 ubox
68 77 0.004403581 ubox
68 86 0.047044260 ubox
69 76 0.004316532 ubox
69 86 0.923909803 ubox
70 75 0.004075345 ubox
70 84 0.007646070 ubox
70 85 0.963860478 ubox
70 87 0.007650401 ubox
70 88 0.007121159 ubox
70 89 0.004629054 ubox
70 90 0.003337326 ubox
71 84 0.981334653 ubox
71 85 0.007344122 ubox
71 87 0.005594525 ubox
72 83 0.983332915 ubox
72 86 0.003587297 ubox
73 81 0.007628626 ubox
73 82 0.983783635 ubox
73 83 0.004541443 ubox
74 80 0.010309198 ubox
74 81 0.983738800 ubox
74 82 0.005370580 ubox
75 80 0.977645213 ubox
75 81 0.005953631 ubox
77 92 0.003424925 ubox
78 91 0.003864209 ubox
81 91 0.004029217 ubox
82 91 0.030217069 ubox
83 88 0.004175988 ubox
83 89 0.004245022 ubox
83 90 0.029713047 ubox
83 92 0.004453811 ubox
86 90 0.004246005 ubox
86 91 0.005285825 ubox
86 92 0.007299938 ubox
86 93 0.009320659 ubox
86 94 0.004874598 ubox
86 96 0.003486496 ubox
86 97 0.003213894 ubox
91 95 0.043135448 ubox
91 98 0.103830820 ubox
91 101 0.045479012 ubox
91 104 0.035136502 ubox
91 107 0.010392585 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
