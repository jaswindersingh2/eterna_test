%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (792)
} def

/sequence { (\
GGAAAAACGAGUCCGAGAUAGAGAUACCAGAGACCGAAAAGAGUCCUGAGUAUCCUAUCCGAGACCGACUAAGGUUUCGACCUUAGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.101116052 ubox
1 14 0.114151253 ubox
1 66 0.012975018 ubox
1 70 0.003423252 ubox
1 82 0.011406480 ubox
1 95 0.066656455 ubox
1 98 0.067233885 ubox
1 101 0.068642636 ubox
1 104 0.068958785 ubox
1 107 0.017409873 ubox
2 8 0.024466270 ubox
2 13 0.114276061 ubox
2 65 0.011093977 ubox
2 66 0.006727080 ubox
2 69 0.004560618 ubox
2 81 0.011377437 ubox
2 95 0.035142041 ubox
2 98 0.035296338 ubox
2 101 0.036038353 ubox
2 104 0.035902076 ubox
2 107 0.011715050 ubox
3 12 0.112642324 ubox
4 12 0.003470065 ubox
5 70 0.005601146 ubox
8 15 0.015656575 ubox
8 67 0.949751873 ubox
8 91 0.010533338 ubox
9 14 0.015774430 ubox
9 65 0.004297329 ubox
9 66 0.970255789 ubox
9 69 0.005297667 ubox
9 82 0.003926602 ubox
9 84 0.004412041 ubox
9 95 0.008286302 ubox
9 98 0.008139546 ubox
9 101 0.008247401 ubox
9 104 0.008272067 ubox
10 83 0.004649074 ubox
11 65 0.992302745 ubox
11 66 0.012896702 ubox
11 69 0.003259554 ubox
11 81 0.006462412 ubox
11 82 0.004309091 ubox
11 95 0.003942445 ubox
11 98 0.003928827 ubox
11 101 0.003974256 ubox
11 104 0.003954466 ubox
12 62 0.005296247 ubox
12 63 0.007066798 ubox
12 64 0.992677372 ubox
12 68 0.003386564 ubox
12 80 0.006671023 ubox
12 87 0.003438402 ubox
12 94 0.003655387 ubox
12 97 0.003660185 ubox
12 100 0.003703949 ubox
12 103 0.003685548 ubox
13 61 0.004278102 ubox
13 63 0.992649211 ubox
13 67 0.003400073 ubox
13 79 0.006318659 ubox
13 86 0.003550879 ubox
14 61 0.990433472 ubox
14 63 0.004717900 ubox
15 59 0.003470704 ubox
15 60 0.990620886 ubox
15 81 0.003198111 ubox
15 82 0.004708247 ubox
15 84 0.004312164 ubox
15 95 0.006367096 ubox
15 98 0.006420046 ubox
15 101 0.006470755 ubox
15 104 0.006459896 ubox
16 58 0.003343781 ubox
16 83 0.004381679 ubox
17 58 0.004758118 ubox
17 59 0.999715854 ubox
17 60 0.004792671 ubox
18 58 0.999698564 ubox
19 57 0.999493023 ubox
20 56 0.999657870 ubox
21 55 0.999676593 ubox
21 56 0.003787806 ubox
23 53 0.004775394 ubox
23 54 0.999787040 ubox
24 53 0.999710876 ubox
25 52 0.999495826 ubox
26 51 0.999713201 ubox
27 50 0.999731207 ubox
28 48 0.999469259 ubox
29 47 0.999491741 ubox
30 45 0.005830222 ubox
30 46 0.999448386 ubox
30 47 0.017534231 ubox
31 44 0.008110116 ubox
31 47 0.003659979 ubox
32 44 0.006740782 ubox
32 45 0.999673999 ubox
33 44 0.999687742 ubox
34 41 0.009900368 ubox
34 43 0.998409944 ubox
35 41 0.850856488 ubox
35 43 0.046093703 ubox
36 45 0.003352038 ubox
37 44 0.003177421 ubox
60 67 0.007758948 ubox
60 79 0.114588650 ubox
61 66 0.007802807 ubox
61 78 0.117030110 ubox
62 77 0.116985819 ubox
63 76 0.116934125 ubox
64 75 0.117036643 ubox
65 74 0.117069861 ubox
66 73 0.117056340 ubox
66 91 0.046534344 ubox
67 95 0.004906235 ubox
67 98 0.003871787 ubox
67 101 0.003720624 ubox
69 86 0.985633228 ubox
69 91 0.007643055 ubox
70 85 0.991560941 ubox
70 86 0.004092271 ubox
70 90 0.006072175 ubox
71 84 0.991769748 ubox
72 83 0.992015583 ubox
73 82 0.992581477 ubox
73 98 0.003508618 ubox
74 81 0.992037905 ubox
74 95 0.031495157 ubox
75 79 0.035738657 ubox
75 80 0.917036582 ubox
75 89 0.003964099 ubox
75 94 0.031574730 ubox
76 80 0.028021411 ubox
76 88 0.004640175 ubox
76 93 0.031584132 ubox
77 87 0.004852507 ubox
77 92 0.031622186 ubox
78 86 0.004886817 ubox
78 91 0.031606800 ubox
81 86 0.007151179 ubox
81 91 0.004102370 ubox
82 86 0.005347133 ubox
82 91 0.064735527 ubox
83 89 0.003969223 ubox
83 90 0.064398428 ubox
83 91 0.003707190 ubox
83 92 0.008036966 ubox
83 93 0.003609613 ubox
83 94 0.004135837 ubox
84 88 0.003862912 ubox
84 89 0.058918421 ubox
84 90 0.004294510 ubox
84 91 0.008269617 ubox
84 92 0.003855241 ubox
84 93 0.004801025 ubox
86 95 0.014693388 ubox
86 98 0.005983246 ubox
86 101 0.004808584 ubox
86 104 0.004156926 ubox
91 95 0.042872462 ubox
91 98 0.103379214 ubox
91 101 0.045355587 ubox
91 104 0.035103371 ubox
91 107 0.010385722 ubox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 41 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
