%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (665)
} def

/sequence { (\
GGAAAUAUGAAGAUGAAAAAAAAAAACAUCAACAUCAAAAAAAAAAAGAUGAACAUAAAAAAAAAAAACUCCUUAUUCGUAAGGAGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.024631398 ubox
1 8 0.025342103 ubox
1 27 0.013937815 ubox
1 30 0.008888817 ubox
1 33 0.006746241 ubox
1 36 0.036885610 ubox
1 54 0.049174804 ubox
1 56 0.005109009 ubox
1 69 0.003942635 ubox
1 72 0.006152574 ubox
1 95 0.109198287 ubox
1 98 0.108579767 ubox
1 101 0.113173705 ubox
1 104 0.117807730 ubox
1 107 0.029842068 ubox
2 6 0.013350421 ubox
2 8 0.009347074 ubox
2 27 0.004139430 ubox
2 29 0.006352660 ubox
2 30 0.016297757 ubox
2 35 0.025218008 ubox
2 36 0.065316205 ubox
2 54 0.025386277 ubox
2 56 0.004836707 ubox
2 71 0.006190569 ubox
2 95 0.056886425 ubox
2 98 0.056986793 ubox
2 101 0.059998482 ubox
2 104 0.060239728 ubox
2 107 0.019705919 ubox
3 8 0.021742839 ubox
3 14 0.003556838 ubox
3 29 0.015277253 ubox
3 35 0.058300201 ubox
3 56 0.007185038 ubox
3 70 0.005897839 ubox
4 8 0.012332441 ubox
4 14 0.003358951 ubox
4 35 0.005946338 ubox
4 56 0.006791155 ubox
5 14 0.019094105 ubox
5 35 0.010216600 ubox
5 50 0.012670467 ubox
5 56 0.017835331 ubox
6 10 0.009524768 ubox
6 11 0.018366692 ubox
6 12 0.003660937 ubox
6 13 0.019163683 ubox
6 15 0.041479454 ubox
6 16 0.004718145 ubox
6 18 0.003344178 ubox
6 19 0.003461496 ubox
6 26 0.003537289 ubox
6 28 0.003223335 ubox
6 31 0.008597572 ubox
6 32 0.008629708 ubox
6 34 0.008834834 ubox
6 37 0.044024165 ubox
6 38 0.020081964 ubox
6 39 0.027477057 ubox
6 40 0.010265335 ubox
6 41 0.008816484 ubox
6 42 0.006410477 ubox
6 43 0.004578455 ubox
6 44 0.003722578 ubox
6 45 0.003271256 ubox
6 47 0.003188738 ubox
6 49 0.012617345 ubox
6 51 0.004447727 ubox
6 52 0.007309854 ubox
6 53 0.005807678 ubox
6 55 0.017378194 ubox
6 57 0.390091608 ubox
6 58 0.019219395 ubox
6 59 0.009619622 ubox
6 60 0.008092163 ubox
6 61 0.007423855 ubox
6 62 0.007067332 ubox
6 63 0.006898170 ubox
6 64 0.006798380 ubox
6 65 0.006756477 ubox
6 66 0.006721703 ubox
6 67 0.006659728 ubox
6 68 0.005622901 ubox
6 81 0.004651795 ubox
6 87 0.014848984 ubox
6 88 0.013960746 ubox
6 89 0.014944263 ubox
6 90 0.024590404 ubox
6 91 0.012119554 ubox
6 92 0.016863553 ubox
6 93 0.016742799 ubox
6 94 0.014417831 ubox
6 96 0.014580354 ubox
6 97 0.018168304 ubox
6 99 0.016486494 ubox
6 100 0.019046757 ubox
6 102 0.014332725 ubox
6 103 0.016766907 ubox
6 105 0.013971936 ubox
6 106 0.016372670 ubox
7 14 0.050067014 ubox
7 29 0.024722736 ubox
7 35 0.268381389 ubox
7 50 0.004922805 ubox
7 56 0.413385810 ubox
7 80 0.004930199 ubox
8 13 0.050566266 ubox
8 15 0.003898859 ubox
8 16 0.009571632 ubox
8 17 0.012516978 ubox
8 18 0.006059731 ubox
8 19 0.005672793 ubox
8 20 0.005480415 ubox
8 21 0.004988513 ubox
8 22 0.004677504 ubox
8 23 0.004686291 ubox
8 24 0.005365366 ubox
8 25 0.004463600 ubox
8 26 0.003823126 ubox
8 28 0.027535033 ubox
8 31 0.072416181 ubox
8 32 0.021594885 ubox
8 34 0.301103605 ubox
8 37 0.119868319 ubox
8 38 0.007492917 ubox
8 39 0.008577074 ubox
8 40 0.012580093 ubox
8 41 0.007205412 ubox
8 42 0.003932454 ubox
8 49 0.004379454 ubox
8 52 0.007569366 ubox
8 53 0.007431957 ubox
8 55 0.415906614 ubox
8 57 0.009890871 ubox
8 58 0.007155941 ubox
8 59 0.007258940 ubox
8 60 0.007264511 ubox
8 61 0.007490716 ubox
8 62 0.007140425 ubox
8 63 0.007023208 ubox
8 64 0.006990170 ubox
8 65 0.006962910 ubox
8 66 0.006914950 ubox
8 67 0.006797550 ubox
8 68 0.005765042 ubox
8 79 0.004947758 ubox
8 87 0.016464298 ubox
8 88 0.016642063 ubox
8 89 0.015740066 ubox
8 90 0.018552141 ubox
8 91 0.007641623 ubox
8 92 0.016900376 ubox
8 93 0.015073257 ubox
8 94 0.014391637 ubox
8 96 0.124149979 ubox
8 97 0.015376159 ubox
8 99 0.121383290 ubox
8 100 0.014037246 ubox
8 102 0.121850124 ubox
8 103 0.013858356 ubox
8 105 0.121759798 ubox
8 106 0.013392669 ubox
9 14 0.003327034 ubox
9 27 0.028133058 ubox
9 30 0.078766292 ubox
9 33 0.309564332 ubox
9 36 0.132542919 ubox
9 54 0.415063422 ubox
9 56 0.008938831 ubox
9 78 0.004971459 ubox
9 95 0.136273552 ubox
9 98 0.133615569 ubox
9 101 0.134604780 ubox
9 104 0.134583530 ubox
9 107 0.017546789 ubox
10 14 0.006492960 ubox
10 29 0.075384151 ubox
10 35 0.129853295 ubox
10 56 0.007115538 ubox
10 77 0.004902425 ubox
11 29 0.006665591 ubox
11 35 0.007421248 ubox
11 50 0.003250631 ubox
11 56 0.006666606 ubox
11 76 0.004239882 ubox
12 27 0.054684911 ubox
12 30 0.942631696 ubox
12 33 0.095528234 ubox
12 36 0.131634219 ubox
12 54 0.004010202 ubox
12 95 0.014323374 ubox
12 98 0.027401829 ubox
12 101 0.027554690 ubox
12 104 0.021961906 ubox
12 107 0.007668055 ubox
13 29 0.943657459 ubox
13 35 0.131777878 ubox
13 50 0.010035815 ubox
13 56 0.016625356 ubox
14 18 0.003380638 ubox
14 19 0.014377412 ubox
14 20 0.013410838 ubox
14 21 0.018196120 ubox
14 22 0.013182138 ubox
14 23 0.024263802 ubox
14 24 0.013218772 ubox
14 25 0.031889391 ubox
14 26 0.021677102 ubox
14 28 0.943633298 ubox
14 31 0.124820181 ubox
14 32 0.006390677 ubox
14 34 0.131458137 ubox
14 37 0.011402898 ubox
14 49 0.009977980 ubox
14 55 0.017217516 ubox
14 63 0.003401553 ubox
14 64 0.005024237 ubox
14 90 0.003864507 ubox
14 93 0.003972411 ubox
14 94 0.003173026 ubox
14 96 0.031501224 ubox
14 97 0.003357145 ubox
14 99 0.031439727 ubox
14 100 0.003357825 ubox
14 102 0.026666422 ubox
14 105 0.019944190 ubox
15 27 0.941000602 ubox
15 30 0.130557281 ubox
15 33 0.130876177 ubox
15 36 0.012665212 ubox
15 54 0.017317984 ubox
15 95 0.032834602 ubox
15 98 0.032770714 ubox
15 101 0.028159185 ubox
15 104 0.021869788 ubox
16 29 0.124238256 ubox
16 35 0.011968783 ubox
17 29 0.011018315 ubox
18 29 0.007986081 ubox
19 29 0.013547255 ubox
20 29 0.016467456 ubox
21 29 0.006427081 ubox
21 56 0.004178580 ubox
22 29 0.007582517 ubox
22 56 0.007318366 ubox
23 29 0.004794857 ubox
23 56 0.005335016 ubox
24 29 0.004736151 ubox
24 56 0.003834363 ubox
25 56 0.003436936 ubox
26 56 0.005029752 ubox
27 51 0.137358131 ubox
27 91 0.007760547 ubox
28 50 0.137922188 ubox
28 56 0.030243595 ubox
29 49 0.137999139 ubox
29 52 0.022824371 ubox
29 53 0.008687686 ubox
29 55 0.030513350 ubox
29 57 0.003567380 ubox
29 87 0.003658111 ubox
29 92 0.027350360 ubox
30 48 0.137895635 ubox
30 51 0.023788343 ubox
30 86 0.003595453 ubox
30 91 0.029300744 ubox
31 50 0.021960553 ubox
31 56 0.011433950 ubox
32 56 0.017637235 ubox
33 48 0.016604939 ubox
33 51 0.890902024 ubox
33 91 0.003950856 ubox
34 50 0.894908576 ubox
34 56 0.003640640 ubox
35 39 0.003191631 ubox
35 40 0.005238282 ubox
35 41 0.005933758 ubox
35 42 0.010844232 ubox
35 43 0.010739485 ubox
35 44 0.012259201 ubox
35 45 0.004425488 ubox
35 46 0.004392001 ubox
35 47 0.004242042 ubox
35 49 0.895664014 ubox
35 52 0.082665602 ubox
35 53 0.003534812 ubox
35 92 0.005468023 ubox
36 48 0.895336605 ubox
36 51 0.093297822 ubox
36 91 0.006251144 ubox
37 50 0.086264508 ubox
38 50 0.006199508 ubox
39 50 0.004980836 ubox
40 50 0.005342160 ubox
40 56 0.003168502 ubox
41 50 0.010955495 ubox
42 50 0.007273425 ubox
42 56 0.003328599 ubox
43 50 0.011835868 ubox
43 56 0.003604348 ubox
44 50 0.009287768 ubox
44 56 0.004109510 ubox
45 50 0.010075454 ubox
45 56 0.004420545 ubox
46 50 0.006191664 ubox
46 56 0.007393933 ubox
47 56 0.020016412 ubox
48 54 0.035501526 ubox
48 56 0.004383538 ubox
48 95 0.003678241 ubox
48 98 0.006720073 ubox
48 101 0.006474205 ubox
48 104 0.005189023 ubox
49 56 0.025068133 ubox
50 55 0.024096823 ubox
50 57 0.014273795 ubox
50 58 0.014357998 ubox
50 59 0.021483455 ubox
50 60 0.010350872 ubox
50 61 0.009541594 ubox
50 62 0.008798366 ubox
50 63 0.008113720 ubox
50 64 0.007488433 ubox
50 65 0.006919506 ubox
50 66 0.006951242 ubox
50 67 0.006492511 ubox
50 68 0.005108282 ubox
50 96 0.008935030 ubox
50 99 0.008335572 ubox
50 102 0.006193274 ubox
50 105 0.005915041 ubox
51 56 0.012359458 ubox
51 95 0.009455476 ubox
51 98 0.008809510 ubox
51 101 0.006551441 ubox
51 104 0.006498418 ubox
52 56 0.015376859 ubox
54 91 0.007078288 ubox
56 60 0.012113976 ubox
56 61 0.023176152 ubox
56 62 0.021359557 ubox
56 63 0.027225907 ubox
56 64 0.016727058 ubox
56 65 0.025087496 ubox
56 66 0.012085610 ubox
56 67 0.011141997 ubox
56 68 0.008734036 ubox
56 87 0.005106272 ubox
56 92 0.003697630 ubox
56 96 0.004388576 ubox
56 97 0.005576034 ubox
56 99 0.015398325 ubox
56 100 0.008060553 ubox
56 102 0.003207037 ubox
69 86 0.992941382 ubox
69 91 0.006132697 ubox
70 85 0.999109498 ubox
70 90 0.003978562 ubox
70 92 0.003925453 ubox
71 84 0.999912854 ubox
71 91 0.003996402 ubox
72 83 0.999909635 ubox
72 91 0.006675720 ubox
73 81 0.009525935 ubox
73 82 0.998919380 ubox
73 89 0.003619473 ubox
73 90 0.006742434 ubox
74 79 0.008549409 ubox
74 81 0.983409226 ubox
74 82 0.007226856 ubox
74 88 0.003768335 ubox
74 89 0.006369588 ubox
75 80 0.886519422 ubox
76 81 0.013865365 ubox
76 85 0.004999009 ubox
76 86 0.005143956 ubox
76 88 0.005994780 ubox
77 81 0.004157857 ubox
77 84 0.005170591 ubox
77 85 0.006036695 ubox
77 87 0.006374771 ubox
78 83 0.005257306 ubox
78 84 0.006113372 ubox
78 86 0.006412035 ubox
86 95 0.012632365 ubox
86 98 0.004881854 ubox
86 101 0.003701345 ubox
91 95 0.047919787 ubox
91 98 0.109948532 ubox
91 101 0.045635505 ubox
91 104 0.033143834 ubox
91 107 0.009767433 ubox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
