%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (743)
} def

/sequence { (\
GGAAAGUGGCGGCGGAGGCGGCACAAGGGAGGCGGAAAACACCACCCAGGCGGCACCAAGGCGCGGCCGUGUGUCUUCGGAUAUACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.014762043 ubox
1 10 0.012775290 ubox
1 24 0.004079363 ubox
1 47 0.007609353 ubox
1 68 0.079383207 ubox
1 76 0.003865808 ubox
1 86 0.010990449 ubox
1 95 0.159793734 ubox
1 98 0.162422017 ubox
1 101 0.173780751 ubox
1 104 0.176350229 ubox
1 107 0.044630716 ubox
2 7 0.009905879 ubox
2 10 0.003904336 ubox
2 24 0.008168658 ubox
2 46 0.007149394 ubox
2 67 0.071673077 ubox
2 68 0.044046792 ubox
2 75 0.004646768 ubox
2 86 0.008461271 ubox
2 95 0.083943837 ubox
2 98 0.085619851 ubox
2 101 0.091443834 ubox
2 104 0.091337505 ubox
2 107 0.029865671 ubox
3 7 0.008622382 ubox
3 70 0.003828718 ubox
3 74 0.004574308 ubox
5 70 0.004731531 ubox
6 13 0.005012730 ubox
6 22 0.053275454 ubox
6 24 0.567502034 ubox
6 45 0.003273216 ubox
6 64 0.038786839 ubox
6 67 0.365408055 ubox
6 68 0.024361457 ubox
6 70 0.007124610 ubox
6 84 0.034061709 ubox
6 86 0.294122763 ubox
6 95 0.137166150 ubox
6 98 0.150524662 ubox
6 101 0.150086684 ubox
6 104 0.147571611 ubox
6 107 0.051450419 ubox
7 12 0.005125777 ubox
7 21 0.053212088 ubox
7 23 0.564954858 ubox
7 25 0.217391342 ubox
7 26 0.011369452 ubox
7 44 0.003278332 ubox
7 63 0.038749982 ubox
7 65 0.003329074 ubox
7 66 0.368763928 ubox
7 69 0.042112045 ubox
7 83 0.035011234 ubox
7 85 0.294171079 ubox
7 87 0.028754365 ubox
7 88 0.009273770 ubox
7 89 0.011258237 ubox
7 90 0.011004019 ubox
7 91 0.006121927 ubox
7 92 0.012594808 ubox
7 93 0.011738840 ubox
7 94 0.129853561 ubox
7 96 0.091643494 ubox
7 97 0.136419807 ubox
7 99 0.089424966 ubox
7 100 0.136108617 ubox
7 102 0.077735421 ubox
7 103 0.133618901 ubox
7 105 0.064107492 ubox
7 106 0.047057512 ubox
8 19 0.003713716 ubox
8 22 0.518408602 ubox
8 24 0.268333344 ubox
8 43 0.003264850 ubox
8 62 0.038235421 ubox
8 64 0.003559737 ubox
8 67 0.008851774 ubox
8 68 0.532810779 ubox
8 82 0.034733479 ubox
8 84 0.290251542 ubox
8 86 0.030892816 ubox
8 95 0.106568480 ubox
8 98 0.104244232 ubox
8 101 0.094290264 ubox
8 104 0.072165520 ubox
8 107 0.008968723 ubox
9 19 0.054060152 ubox
9 22 0.458224947 ubox
9 24 0.020261715 ubox
9 42 0.003235915 ubox
9 62 0.008289461 ubox
9 64 0.372264781 ubox
9 67 0.533445422 ubox
9 82 0.007971630 ubox
9 84 0.006613731 ubox
9 86 0.003873163 ubox
9 95 0.005031076 ubox
9 98 0.005794291 ubox
9 101 0.005593377 ubox
10 17 0.005285892 ubox
10 18 0.053933657 ubox
10 20 0.464931432 ubox
10 21 0.511153746 ubox
10 60 0.037531299 ubox
10 61 0.010406891 ubox
10 63 0.372298984 ubox
10 65 0.019132779 ubox
10 66 0.532970168 ubox
10 80 0.010690109 ubox
10 91 0.022233858 ubox
11 19 0.415468187 ubox
11 22 0.029734472 ubox
11 24 0.005399365 ubox
11 62 0.371306369 ubox
11 64 0.025246266 ubox
11 82 0.018613950 ubox
11 95 0.004037763 ubox
11 98 0.003655474 ubox
12 19 0.553326024 ubox
12 22 0.010084237 ubox
12 62 0.038227485 ubox
12 64 0.532531595 ubox
12 82 0.005461090 ubox
12 95 0.003960847 ubox
12 98 0.003690624 ubox
13 17 0.312783732 ubox
13 18 0.591299698 ubox
13 20 0.030836717 ubox
13 21 0.009703160 ubox
13 60 0.364051433 ubox
13 61 0.046285994 ubox
13 63 0.532733501 ubox
13 79 0.302205368 ubox
13 80 0.016403726 ubox
14 19 0.030990984 ubox
14 56 0.004336354 ubox
14 57 0.200610804 ubox
14 62 0.527366751 ubox
14 78 0.302882361 ubox
15 19 0.005477827 ubox
15 56 0.204079677 ubox
15 57 0.373926354 ubox
15 62 0.007282223 ubox
15 77 0.302691574 ubox
15 78 0.014329839 ubox
16 76 0.302850504 ubox
16 77 0.014170701 ubox
17 54 0.032007259 ubox
17 56 0.172135356 ubox
17 57 0.414026421 ubox
17 75 0.302908607 ubox
17 76 0.013766776 ubox
18 54 0.496014266 ubox
18 56 0.412922983 ubox
18 57 0.076283956 ubox
18 74 0.302654970 ubox
18 75 0.013714298 ubox
19 52 0.031744877 ubox
19 53 0.497193896 ubox
19 69 0.003389365 ubox
19 73 0.301816126 ubox
20 51 0.030333686 ubox
20 54 0.399614298 ubox
20 56 0.027156885 ubox
20 57 0.005371252 ubox
20 68 0.004588904 ubox
20 72 0.212567767 ubox
20 75 0.005416992 ubox
21 51 0.497688928 ubox
21 54 0.125957695 ubox
21 56 0.005014942 ubox
21 67 0.004600883 ubox
21 70 0.013719433 ubox
21 72 0.213555182 ubox
21 74 0.009255167 ubox
22 49 0.027270802 ubox
22 50 0.497502302 ubox
22 52 0.399304307 ubox
22 53 0.125619412 ubox
22 66 0.004592130 ubox
22 69 0.014291032 ubox
22 71 0.302246685 ubox
22 73 0.009825499 ubox
23 70 0.302341563 ubox
23 72 0.010657206 ubox
24 49 0.295130574 ubox
24 50 0.411721540 ubox
24 52 0.016335964 ubox
24 69 0.301972347 ubox
24 71 0.010891267 ubox
24 91 0.011253445 ubox
25 70 0.009733547 ubox
27 43 0.004994945 ubox
27 45 0.003338229 ubox
27 46 0.082484198 ubox
27 47 0.994105640 ubox
27 95 0.004838118 ubox
27 98 0.004902651 ubox
27 101 0.004994245 ubox
27 104 0.004997096 ubox
28 42 0.004996653 ubox
28 43 0.005703241 ubox
28 45 0.082588142 ubox
28 46 0.995151807 ubox
28 47 0.026917069 ubox
28 95 0.003193075 ubox
28 98 0.003214707 ubox
28 101 0.003272591 ubox
28 104 0.003255539 ubox
29 42 0.005727138 ubox
29 43 0.004137475 ubox
29 45 0.993172164 ubox
29 46 0.026251180 ubox
29 47 0.029830710 ubox
31 40 0.008942734 ubox
31 42 0.014417787 ubox
31 43 0.996286531 ubox
31 45 0.011153836 ubox
31 46 0.043222390 ubox
31 47 0.006706233 ubox
32 40 0.006157162 ubox
32 42 0.997317830 ubox
32 43 0.035534922 ubox
32 45 0.043889104 ubox
32 46 0.006376529 ubox
34 40 0.983976435 ubox
34 42 0.025099760 ubox
34 43 0.053356543 ubox
35 40 0.104925501 ubox
35 42 0.053246812 ubox
35 43 0.003474747 ubox
48 70 0.003352493 ubox
48 72 0.004563012 ubox
49 57 0.004059007 ubox
49 67 0.009622144 ubox
49 68 0.756636897 ubox
50 56 0.004052148 ubox
50 64 0.029300667 ubox
50 67 0.757594520 ubox
50 70 0.009385739 ubox
51 63 0.029370200 ubox
51 65 0.023184466 ubox
51 66 0.757024493 ubox
51 69 0.010362671 ubox
52 62 0.029216807 ubox
52 64 0.030681868 ubox
52 68 0.014765011 ubox
53 62 0.033765127 ubox
53 64 0.756593057 ubox
53 67 0.014772807 ubox
54 60 0.028698256 ubox
54 61 0.034016579 ubox
54 63 0.756746978 ubox
54 66 0.014748514 ubox
56 60 0.038681956 ubox
56 61 0.699612107 ubox
56 63 0.003628136 ubox
56 65 0.005664509 ubox
56 80 0.003300596 ubox
57 61 0.014509624 ubox
57 63 0.013290566 ubox
57 79 0.003317353 ubox
58 77 0.003504537 ubox
59 76 0.003616455 ubox
60 68 0.006576382 ubox
60 75 0.003638732 ubox
61 67 0.006583933 ubox
61 74 0.003641698 ubox
62 66 0.006536170 ubox
62 73 0.003645013 ubox
63 72 0.003643649 ubox
64 71 0.003644393 ubox
65 70 0.003230472 ubox
68 91 0.019562031 ubox
69 84 0.003639746 ubox
69 86 0.947682775 ubox
69 95 0.006161530 ubox
69 98 0.040635518 ubox
69 101 0.015527757 ubox
69 104 0.007072149 ubox
70 83 0.003785539 ubox
70 85 0.949143081 ubox
70 87 0.014938590 ubox
70 94 0.005662005 ubox
70 96 0.051319616 ubox
70 97 0.030552992 ubox
70 99 0.017877388 ubox
70 100 0.011881091 ubox
70 102 0.007626343 ubox
70 103 0.005437302 ubox
71 82 0.003799880 ubox
71 84 0.949624246 ubox
71 86 0.016661184 ubox
71 95 0.062041277 ubox
71 98 0.021578323 ubox
71 101 0.009185665 ubox
72 81 0.003781315 ubox
72 83 0.949685033 ubox
72 85 0.015966745 ubox
72 94 0.060105230 ubox
72 96 0.016617666 ubox
72 97 0.017385294 ubox
72 99 0.007837504 ubox
72 100 0.006776069 ubox
73 82 0.949737815 ubox
73 84 0.013955814 ubox
73 95 0.021424711 ubox
73 98 0.010107108 ubox
74 81 0.950004974 ubox
74 83 0.012697087 ubox
74 92 0.061138893 ubox
74 94 0.019630734 ubox
74 97 0.009607569 ubox
75 79 0.011094236 ubox
75 80 0.949250994 ubox
75 91 0.064815884 ubox
76 89 0.006284858 ubox
76 90 0.064317293 ubox
76 93 0.023115791 ubox
77 88 0.008512831 ubox
77 89 0.062009868 ubox
77 92 0.024091049 ubox
78 91 0.024165802 ubox
79 86 0.033030549 ubox
80 86 0.052213699 ubox
86 91 0.010008589 ubox
91 95 0.051776284 ubox
91 98 0.114688148 ubox
91 101 0.045493096 ubox
91 104 0.031200483 ubox
91 107 0.009120678 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
14 62 0.9500000 lbox
17 57 0.9500000 lbox
18 56 0.9500000 lbox
20 54 0.9500000 lbox
22 52 0.9500000 lbox
24 50 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
