%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (938)
} def

/sequence { (\
GGAAAAGGUGACUCGAAAACGAGACAACUUGACAAAAAAAGUCAAGUUGACAUGAAAACAUGACACCUUUCGCCGUUCGCGGCGAAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 67 0.016496486 ubox
1 69 0.004253540 ubox
1 70 0.004795544 ubox
1 71 0.029233444 ubox
1 74 0.004449115 ubox
1 95 0.067493821 ubox
1 98 0.067933023 ubox
1 101 0.069674341 ubox
1 104 0.070254431 ubox
1 107 0.017744165 ubox
2 66 0.016425142 ubox
2 68 0.004199157 ubox
2 69 0.011802540 ubox
2 70 0.029977382 ubox
2 71 0.102265297 ubox
2 73 0.004447107 ubox
2 95 0.035437538 ubox
2 98 0.035574743 ubox
2 101 0.036463564 ubox
2 104 0.036376792 ubox
2 107 0.011872208 ubox
3 68 0.009018277 ubox
3 69 0.028824479 ubox
3 70 0.093292716 ubox
4 68 0.015539445 ubox
4 69 0.083831440 ubox
4 70 0.360483037 ubox
5 68 0.064977693 ubox
5 69 0.665434553 ubox
5 70 0.011350442 ubox
6 68 0.894704943 ubox
6 69 0.014871816 ubox
7 66 0.003619813 ubox
7 67 0.998431346 ubox
7 68 0.004020110 ubox
7 95 0.005359329 ubox
7 98 0.009506137 ubox
7 101 0.009116475 ubox
7 104 0.009149614 ubox
7 107 0.003198112 ubox
8 61 0.003234152 ubox
8 64 0.007004814 ubox
8 66 0.998927734 ubox
8 67 0.003607900 ubox
8 95 0.012997991 ubox
8 98 0.014368900 ubox
8 101 0.013307813 ubox
8 104 0.013098200 ubox
8 107 0.004271276 ubox
9 26 0.005267325 ubox
9 60 0.003306849 ubox
9 63 0.007012716 ubox
9 65 0.998263013 ubox
9 94 0.012622553 ubox
9 96 0.011334093 ubox
9 97 0.013252489 ubox
9 99 0.010033190 ubox
9 100 0.012285899 ubox
9 102 0.009930632 ubox
9 103 0.012073782 ubox
9 105 0.006879625 ubox
9 106 0.003992848 ubox
10 25 0.011381251 ubox
10 59 0.003333964 ubox
10 64 0.993922931 ubox
10 95 0.013250972 ubox
10 98 0.011922739 ubox
10 101 0.011837886 ubox
10 104 0.007748996 ubox
11 61 0.003467858 ubox
12 21 0.005009667 ubox
12 23 0.991278344 ubox
12 62 0.027088181 ubox
13 22 0.997439265 ubox
13 24 0.034834833 ubox
13 63 0.013227906 ubox
14 21 0.998158936 ubox
14 23 0.037636591 ubox
14 62 0.013776067 ubox
15 20 0.972341188 ubox
15 59 0.012633477 ubox
15 61 0.011991266 ubox
20 54 0.029306901 ubox
21 53 0.029068386 ubox
22 53 0.005261954 ubox
23 51 0.032850591 ubox
24 53 0.003790489 ubox
25 49 0.994410510 ubox
26 48 0.998407228 ubox
27 47 0.999402583 ubox
28 46 0.999971151 ubox
29 45 0.999436249 ubox
30 44 0.999435385 ubox
31 43 0.999979257 ubox
32 42 0.999762417 ubox
33 41 0.999132018 ubox
48 65 0.005555013 ubox
49 64 0.011613841 ubox
50 61 0.003910782 ubox
51 62 0.988765613 ubox
52 61 0.992859230 ubox
53 58 0.009841308 ubox
53 60 0.992768606 ubox
53 63 0.006649891 ubox
54 59 0.987183727 ubox
54 61 0.003271878 ubox
55 61 0.006897300 ubox
56 61 0.004714318 ubox
64 91 0.006673561 ubox
66 91 0.005201451 ubox
67 91 0.013991807 ubox
68 86 0.012182715 ubox
68 87 0.385801287 ubox
68 88 0.031021185 ubox
68 89 0.013722770 ubox
68 90 0.015971689 ubox
68 91 0.005904914 ubox
68 92 0.005706331 ubox
68 93 0.003603590 ubox
69 85 0.015293320 ubox
69 86 0.681132567 ubox
69 87 0.044344679 ubox
69 88 0.017093263 ubox
69 89 0.015289545 ubox
69 90 0.008086167 ubox
69 91 0.006815900 ubox
69 92 0.004805027 ubox
69 93 0.004318423 ubox
70 84 0.003245434 ubox
70 85 0.905708414 ubox
70 86 0.041543723 ubox
70 87 0.009043958 ubox
70 88 0.007498551 ubox
70 89 0.004482671 ubox
70 92 0.003873268 ubox
71 81 0.004157916 ubox
71 84 0.992587392 ubox
71 91 0.003672835 ubox
72 80 0.004302904 ubox
72 83 0.999936281 ubox
73 79 0.004288081 ubox
73 82 0.999965160 ubox
74 81 0.999902691 ubox
74 84 0.003218657 ubox
75 80 0.974017130 ubox
75 83 0.003340666 ubox
76 82 0.003301875 ubox
76 86 0.003880513 ubox
77 85 0.004395798 ubox
78 84 0.004452339 ubox
79 83 0.004166243 ubox
84 95 0.005174108 ubox
84 98 0.004017038 ubox
84 101 0.003411957 ubox
91 95 0.043072183 ubox
91 98 0.103797695 ubox
91 101 0.045516218 ubox
91 104 0.035214803 ubox
91 107 0.010418485 ubox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
