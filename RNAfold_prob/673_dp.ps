%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (673)
} def

/sequence { (\
GGAAAGAUGAAUAUGGAAAAAAAAAACAUAAAAUACGAAAAAAAAAAGUAUAACAUCAAAAAAAAAAAGUAUAUGUUCGCAUAUACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.010411360 ubox
1 27 0.010110970 ubox
1 36 0.008444537 ubox
1 54 0.017155083 ubox
1 57 0.021829556 ubox
1 86 0.005235395 ubox
1 95 0.073343728 ubox
1 98 0.073742970 ubox
1 101 0.076536081 ubox
1 104 0.078348992 ubox
1 107 0.019821394 ubox
2 8 0.003768337 ubox
2 36 0.004647742 ubox
2 54 0.008998454 ubox
2 56 0.014578964 ubox
2 57 0.036777741 ubox
2 95 0.038590722 ubox
2 98 0.038812446 ubox
2 101 0.040303282 ubox
2 104 0.040308894 ubox
2 107 0.013175942 ubox
3 8 0.008770936 ubox
3 12 0.004713599 ubox
3 56 0.034396262 ubox
4 8 0.005080686 ubox
5 12 0.010026786 ubox
5 14 0.007746381 ubox
5 34 0.004250393 ubox
6 27 0.005160191 ubox
6 34 0.003930384 ubox
6 36 0.032982528 ubox
6 54 0.012447343 ubox
6 57 0.927446758 ubox
6 80 0.004728643 ubox
6 95 0.023473345 ubox
6 98 0.051078787 ubox
6 101 0.050311361 ubox
6 104 0.050712525 ubox
6 107 0.017718928 ubox
7 12 0.003865318 ubox
7 14 0.009938362 ubox
7 29 0.031072431 ubox
7 34 0.044424077 ubox
7 51 0.006139669 ubox
7 56 0.928289821 ubox
8 13 0.009530388 ubox
8 17 0.007721777 ubox
8 18 0.003744081 ubox
8 19 0.003523496 ubox
8 20 0.003454806 ubox
8 25 0.003600448 ubox
8 28 0.032217557 ubox
8 30 0.003532792 ubox
8 31 0.009525914 ubox
8 32 0.014844324 ubox
8 33 0.045616200 ubox
8 35 0.012851559 ubox
8 37 0.008663484 ubox
8 48 0.003170001 ubox
8 50 0.006170375 ubox
8 52 0.004285617 ubox
8 53 0.004260572 ubox
8 55 0.927850592 ubox
8 58 0.080420634 ubox
8 59 0.004639108 ubox
8 61 0.003396295 ubox
8 79 0.006835964 ubox
8 87 0.021891615 ubox
8 88 0.005969434 ubox
8 89 0.005645736 ubox
8 90 0.006702267 ubox
8 92 0.006238093 ubox
8 93 0.007847254 ubox
8 94 0.006672666 ubox
8 96 0.064386152 ubox
8 97 0.007089297 ubox
8 99 0.062914398 ubox
8 100 0.006753000 ubox
8 102 0.063668833 ubox
8 103 0.006629643 ubox
8 105 0.047797832 ubox
8 106 0.005254485 ubox
9 27 0.032491573 ubox
9 34 0.012989474 ubox
9 36 0.014032194 ubox
9 49 0.005889862 ubox
9 54 0.924130090 ubox
9 57 0.089362962 ubox
9 78 0.008107541 ubox
9 86 0.023747189 ubox
9 95 0.067759226 ubox
9 98 0.066292694 ubox
9 101 0.067214864 ubox
9 104 0.052348304 ubox
9 107 0.006529001 ubox
10 14 0.007933586 ubox
10 29 0.006571795 ubox
10 34 0.016101915 ubox
10 49 0.003363376 ubox
10 51 0.013057888 ubox
10 56 0.083640470 ubox
10 77 0.008103110 ubox
11 29 0.014453267 ubox
11 34 0.012020063 ubox
11 49 0.008050604 ubox
11 51 0.157308693 ubox
11 56 0.005567716 ubox
11 76 0.008047393 ubox
11 84 0.025729619 ubox
12 16 0.003634427 ubox
12 17 0.010344358 ubox
12 18 0.009527824 ubox
12 19 0.012159098 ubox
12 20 0.007881003 ubox
12 21 0.012538442 ubox
12 22 0.007827190 ubox
12 23 0.008526500 ubox
12 24 0.009251134 ubox
12 25 0.007933937 ubox
12 26 0.004731274 ubox
12 28 0.012587628 ubox
12 30 0.890265576 ubox
12 31 0.041428759 ubox
12 32 0.016212193 ubox
12 33 0.008746527 ubox
12 35 0.008513598 ubox
12 48 0.007130859 ubox
12 50 0.164378458 ubox
12 52 0.142687429 ubox
12 53 0.015764553 ubox
12 55 0.005496682 ubox
12 75 0.007972651 ubox
12 83 0.026521349 ubox
12 90 0.003323452 ubox
12 92 0.004267707 ubox
13 29 0.943497863 ubox
13 34 0.009274076 ubox
13 49 0.164452334 ubox
13 51 0.146669252 ubox
13 56 0.016782141 ubox
13 74 0.007842580 ubox
13 82 0.026576781 ubox
14 18 0.005586173 ubox
14 19 0.024155581 ubox
14 20 0.022456147 ubox
14 21 0.029330568 ubox
14 22 0.019502151 ubox
14 23 0.027688866 ubox
14 24 0.012954457 ubox
14 25 0.011584280 ubox
14 26 0.011446887 ubox
14 28 0.949834490 ubox
14 30 0.014892965 ubox
14 31 0.007812295 ubox
14 32 0.007310240 ubox
14 33 0.009393337 ubox
14 37 0.010233161 ubox
14 38 0.004383049 ubox
14 45 0.003541489 ubox
14 46 0.005412037 ubox
14 47 0.012888014 ubox
14 48 0.161545208 ubox
14 50 0.146268858 ubox
14 52 0.007751602 ubox
14 53 0.005222060 ubox
14 55 0.021289566 ubox
14 58 0.006254691 ubox
14 73 0.007734541 ubox
14 81 0.026581943 ubox
14 96 0.020226917 ubox
14 99 0.018758258 ubox
14 102 0.016710124 ubox
14 105 0.016517848 ubox
15 27 0.951822924 ubox
15 29 0.015799135 ubox
15 34 0.003293588 ubox
15 36 0.016293376 ubox
15 49 0.142594199 ubox
15 51 0.006966874 ubox
15 54 0.021724867 ubox
15 57 0.006872156 ubox
15 72 0.006982478 ubox
15 80 0.026547204 ubox
15 95 0.021857742 ubox
15 98 0.020415675 ubox
15 101 0.018471307 ubox
15 104 0.018300697 ubox
16 27 0.026612780 ubox
16 29 0.003271197 ubox
16 36 0.005921519 ubox
16 49 0.004990408 ubox
16 56 0.005597837 ubox
16 57 0.006092092 ubox
16 78 0.023009088 ubox
16 95 0.005683670 ubox
16 98 0.005360236 ubox
16 101 0.005105443 ubox
16 104 0.004897303 ubox
17 29 0.005931409 ubox
17 56 0.005880516 ubox
17 77 0.021426787 ubox
18 29 0.005353458 ubox
18 51 0.004529291 ubox
18 76 0.011292774 ubox
18 77 0.005068979 ubox
19 29 0.005725167 ubox
20 29 0.011923153 ubox
21 29 0.007943298 ubox
22 29 0.013066855 ubox
23 29 0.010218280 ubox
24 29 0.011054875 ubox
25 29 0.006796541 ubox
25 34 0.007182607 ubox
25 77 0.013573776 ubox
26 34 0.005914780 ubox
26 49 0.010760948 ubox
26 76 0.023000890 ubox
27 37 0.058734879 ubox
27 48 0.011643902 ubox
27 75 0.024996445 ubox
27 91 0.005508142 ubox
28 34 0.041951598 ubox
28 51 0.004336076 ubox
28 56 0.017247957 ubox
28 74 0.024969118 ubox
29 33 0.039796057 ubox
29 35 0.047663870 ubox
29 37 0.005449437 ubox
29 38 0.006792729 ubox
29 50 0.004511095 ubox
29 52 0.009681902 ubox
29 53 0.011677088 ubox
29 55 0.017938159 ubox
29 73 0.024781947 ubox
30 34 0.043820774 ubox
30 49 0.004326681 ubox
30 51 0.008602835 ubox
30 72 0.019557617 ubox
31 49 0.003209493 ubox
31 51 0.018660911 ubox
31 56 0.004055788 ubox
32 49 0.003579988 ubox
32 51 0.042145716 ubox
32 56 0.005818533 ubox
32 70 0.003747819 ubox
33 49 0.014202443 ubox
33 51 0.906405962 ubox
33 72 0.015857279 ubox
34 38 0.005350190 ubox
34 39 0.010239569 ubox
34 40 0.009507266 ubox
34 41 0.012177810 ubox
34 42 0.007448741 ubox
34 43 0.011244928 ubox
34 44 0.005429708 ubox
34 45 0.005109545 ubox
34 46 0.004576712 ubox
34 47 0.004552718 ubox
34 48 0.014193944 ubox
34 50 0.946378406 ubox
34 52 0.010182814 ubox
34 53 0.004103542 ubox
34 71 0.023767664 ubox
35 49 0.953122311 ubox
35 51 0.008835784 ubox
35 70 0.023947798 ubox
36 48 0.953797869 ubox
36 69 0.023961027 ubox
37 49 0.004447324 ubox
37 54 0.005332023 ubox
37 57 0.017487091 ubox
38 49 0.005385761 ubox
38 51 0.005120613 ubox
38 56 0.016552007 ubox
39 49 0.005295837 ubox
39 51 0.004805882 ubox
40 49 0.011005397 ubox
40 51 0.005466823 ubox
41 49 0.007322182 ubox
41 51 0.005647091 ubox
42 49 0.011950699 ubox
42 51 0.011061096 ubox
43 49 0.009372884 ubox
43 51 0.007519789 ubox
44 49 0.010220311 ubox
44 51 0.011665033 ubox
45 49 0.006348486 ubox
45 51 0.009058818 ubox
46 51 0.009799533 ubox
46 56 0.004541552 ubox
47 51 0.006018611 ubox
47 56 0.006928834 ubox
48 54 0.034262572 ubox
48 56 0.008646211 ubox
48 57 0.026633763 ubox
48 86 0.003461106 ubox
48 95 0.003306973 ubox
49 53 0.031182127 ubox
49 55 0.009110129 ubox
49 58 0.003585410 ubox
49 85 0.003460748 ubox
49 94 0.003195316 ubox
50 56 0.006533874 ubox
50 84 0.003450640 ubox
51 55 0.006266871 ubox
51 58 0.004565107 ubox
51 59 0.003288621 ubox
51 60 0.004931541 ubox
51 83 0.003426469 ubox
52 56 0.003990418 ubox
52 77 0.004752158 ubox
53 70 0.005264735 ubox
53 76 0.007081786 ubox
54 69 0.005603045 ubox
54 75 0.007670147 ubox
55 74 0.007544325 ubox
56 60 0.004995755 ubox
56 61 0.007494361 ubox
56 62 0.006909079 ubox
56 63 0.008812001 ubox
56 64 0.005416049 ubox
56 65 0.008141046 ubox
56 66 0.003926697 ubox
56 67 0.003741059 ubox
56 68 0.003384149 ubox
56 73 0.007040197 ubox
56 92 0.007887627 ubox
56 99 0.004174925 ubox
57 91 0.008420489 ubox
69 84 0.003697880 ubox
69 86 0.997539384 ubox
69 95 0.004372987 ubox
69 98 0.006597918 ubox
69 101 0.011449223 ubox
69 104 0.005052912 ubox
70 83 0.003764597 ubox
70 85 0.998756172 ubox
70 94 0.003705265 ubox
70 97 0.006289503 ubox
70 100 0.011084594 ubox
70 103 0.004776618 ubox
71 82 0.003736715 ubox
71 84 0.998779953 ubox
72 81 0.003645179 ubox
72 83 0.998787323 ubox
72 85 0.005052206 ubox
73 82 0.998777089 ubox
73 84 0.005620889 ubox
74 81 0.998255161 ubox
74 83 0.005920373 ubox
74 87 0.007578275 ubox
74 96 0.015648043 ubox
74 99 0.005490890 ubox
74 102 0.003330590 ubox
75 80 0.992467645 ubox
75 82 0.006153317 ubox
75 86 0.008364753 ubox
75 95 0.016661394 ubox
75 98 0.005846240 ubox
75 101 0.003614927 ubox
76 81 0.005978902 ubox
76 85 0.008333046 ubox
76 93 0.010596829 ubox
76 94 0.013884238 ubox
76 97 0.005684850 ubox
76 100 0.003566380 ubox
77 92 0.014428911 ubox
77 93 0.010268985 ubox
77 96 0.004849578 ubox
77 99 0.003239459 ubox
78 91 0.017142785 ubox
86 91 0.006037083 ubox
91 95 0.044073870 ubox
91 98 0.104916553 ubox
91 101 0.045433490 ubox
91 104 0.034806572 ubox
91 107 0.010292163 ubox
6 57 0.9500000 lbox
7 56 0.9500000 lbox
8 55 0.9500000 lbox
9 54 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
