%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (62)
} def

/sequence { (\
GGAAAAAGAAGCGAGUAGAAAUACUCCCGGGCGUUCGAAAGAACAGAAGGAAACUUCGCAAGGGCUUCAGUCUAUUUCGAUAGACUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.003687814 ubox
1 68 0.006877320 ubox
1 73 0.011257814 ubox
1 78 0.003711280 ubox
1 86 0.003320637 ubox
1 95 0.067505207 ubox
1 98 0.067931608 ubox
1 101 0.069477173 ubox
1 104 0.069788804 ubox
1 107 0.017619762 ubox
2 67 0.006203534 ubox
2 68 0.009398219 ubox
2 72 0.011961366 ubox
2 77 0.003704812 ubox
2 78 0.004770822 ubox
2 86 0.003504165 ubox
2 95 0.035633610 ubox
2 98 0.035761997 ubox
2 101 0.036525772 ubox
2 104 0.036385913 ubox
2 107 0.011872853 ubox
3 66 0.005221582 ubox
3 67 0.009010856 ubox
3 71 0.011890080 ubox
3 76 0.003683175 ubox
3 77 0.004775122 ubox
3 86 0.003505699 ubox
4 66 0.006467665 ubox
4 75 0.003455897 ubox
4 76 0.004739457 ubox
4 86 0.003240799 ubox
5 75 0.004455604 ubox
5 86 0.003255679 ubox
6 86 0.003246224 ubox
7 66 0.003396384 ubox
7 73 0.003681831 ubox
7 86 0.003886762 ubox
8 65 0.003451614 ubox
8 67 0.004519707 ubox
8 68 0.997651263 ubox
8 72 0.003354026 ubox
8 95 0.003562651 ubox
8 98 0.003630110 ubox
8 101 0.003600042 ubox
8 104 0.003597094 ubox
9 66 0.003587486 ubox
9 67 0.998555093 ubox
10 66 0.998706935 ubox
11 27 0.003498575 ubox
11 28 0.004495889 ubox
11 32 0.004632197 ubox
11 65 0.999325763 ubox
12 31 0.004631188 ubox
12 63 0.005681534 ubox
12 64 0.998215185 ubox
12 79 0.006902805 ubox
13 26 0.996914903 ubox
13 27 0.005681113 ubox
13 78 0.006950573 ubox
14 25 0.999430673 ubox
14 76 0.004573442 ubox
14 77 0.005689279 ubox
15 24 0.999879204 ubox
15 75 0.006108810 ubox
15 76 0.004022999 ubox
16 23 0.998025972 ubox
16 74 0.007323492 ubox
17 22 0.979318347 ubox
17 25 0.003731805 ubox
17 73 0.007375506 ubox
18 22 0.010528210 ubox
18 24 0.003961624 ubox
18 26 0.005182337 ubox
18 72 0.007379064 ubox
19 25 0.005036054 ubox
19 71 0.007321268 ubox
26 63 0.008782154 ubox
26 64 0.026157179 ubox
27 31 0.004351632 ubox
27 50 0.023562216 ubox
27 62 0.011140156 ubox
27 63 0.991928818 ubox
27 64 0.005156352 ubox
28 37 0.007950720 ubox
28 49 0.023624686 ubox
28 62 0.994177018 ubox
28 63 0.013669145 ubox
29 36 0.008022391 ubox
29 44 0.005963802 ubox
29 59 0.004249989 ubox
30 35 0.006313039 ubox
30 59 0.017696335 ubox
30 66 0.003272124 ubox
31 59 0.994241226 ubox
31 65 0.003502269 ubox
32 41 0.006056507 ubox
32 46 0.007041345 ubox
32 58 0.993387143 ubox
32 64 0.003500125 ubox
33 44 0.997160994 ubox
33 57 0.031196258 ubox
34 42 0.003261718 ubox
34 43 0.998256236 ubox
34 48 0.008817228 ubox
34 51 0.007636509 ubox
34 52 0.015878529 ubox
35 41 0.003177481 ubox
35 42 0.998970455 ubox
35 47 0.009284622 ubox
35 50 0.007702659 ubox
35 51 0.016307312 ubox
36 41 0.998929016 ubox
36 46 0.009430614 ubox
36 49 0.007773102 ubox
36 50 0.016416059 ubox
37 44 0.005939790 ubox
39 56 0.004107528 ubox
40 55 0.004201552 ubox
41 54 0.004239354 ubox
44 49 0.004034172 ubox
45 55 0.005776542 ubox
46 54 0.006158672 ubox
46 56 0.005482497 ubox
46 57 0.996859537 ubox
47 55 0.004492468 ubox
47 56 0.998073719 ubox
48 55 0.998040485 ubox
48 56 0.009171346 ubox
49 54 0.997741324 ubox
49 55 0.011490273 ubox
49 57 0.015210849 ubox
50 54 0.013421362 ubox
50 56 0.014741357 ubox
50 57 0.021757537 ubox
51 55 0.012596588 ubox
51 56 0.020390530 ubox
54 62 0.010705846 ubox
54 63 0.012974379 ubox
55 61 0.010614437 ubox
55 62 0.012751103 ubox
56 60 0.008848899 ubox
56 61 0.010355498 ubox
56 63 0.009027115 ubox
57 62 0.011162629 ubox
57 63 0.006543617 ubox
58 65 0.007385194 ubox
59 63 0.007744470 ubox
59 64 0.007418521 ubox
64 95 0.007174012 ubox
65 91 0.022823456 ubox
66 88 0.005958151 ubox
66 89 0.011098520 ubox
66 90 0.022401941 ubox
66 93 0.012905940 ubox
67 87 0.007523635 ubox
67 88 0.013586902 ubox
67 89 0.020638555 ubox
67 92 0.015684177 ubox
68 91 0.016572096 ubox
69 86 0.951356968 ubox
70 81 0.007899587 ubox
70 85 0.999340645 ubox
70 86 0.004906578 ubox
70 98 0.005560203 ubox
71 80 0.008126050 ubox
71 84 0.999558679 ubox
71 92 0.005600539 ubox
71 97 0.005335897 ubox
72 79 0.008167920 ubox
72 83 0.999732667 ubox
72 91 0.006066564 ubox
73 82 0.999206317 ubox
73 90 0.005914391 ubox
73 96 0.003293939 ubox
74 81 0.987552238 ubox
75 79 0.035404601 ubox
75 80 0.902003765 ubox
75 82 0.003377880 ubox
75 88 0.004239389 ubox
75 94 0.010828215 ubox
76 80 0.028582690 ubox
76 87 0.003994353 ubox
76 93 0.012672723 ubox
77 84 0.007569936 ubox
77 92 0.013050128 ubox
78 83 0.008021738 ubox
78 91 0.013094883 ubox
81 88 0.003675800 ubox
85 91 0.004079665 ubox
86 90 0.005428540 ubox
86 91 0.007578592 ubox
86 92 0.006989489 ubox
86 93 0.008913776 ubox
86 94 0.004295252 ubox
86 96 0.003333916 ubox
91 95 0.043015134 ubox
91 98 0.103720651 ubox
91 101 0.045507826 ubox
91 104 0.035219730 ubox
91 107 0.010420215 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
