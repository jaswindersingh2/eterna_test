%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (499)
} def

/sequence { (\
GGAAAAGUCUGCGGCAGUUGAAAAACGCUGAAAAGCGCCAAAAGCUGUCGAAAGGCAGCGCAGACAAAGCUUCUCUUCGGAGGAGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 61 0.006456209 ubox
1 65 0.004334779 ubox
1 95 0.067378866 ubox
1 98 0.067800554 ubox
1 101 0.069349318 ubox
1 104 0.069658947 ubox
1 107 0.017587028 ubox
2 59 0.004840667 ubox
2 61 0.006929990 ubox
2 65 0.004064525 ubox
2 95 0.035569039 ubox
2 98 0.035695267 ubox
2 101 0.036454157 ubox
2 104 0.036314668 ubox
2 107 0.011849572 ubox
7 56 0.027846977 ubox
7 65 0.997789682 ubox
7 95 0.003774649 ubox
7 98 0.003786625 ubox
7 101 0.003670016 ubox
7 104 0.003675919 ubox
8 55 0.027865779 ubox
8 64 0.999144039 ubox
9 54 0.027895324 ubox
9 58 0.003808297 ubox
9 63 0.999561184 ubox
10 53 0.027655355 ubox
10 57 0.003858627 ubox
10 62 0.999332623 ubox
11 56 0.003890602 ubox
11 61 0.999543771 ubox
12 17 0.004634375 ubox
12 20 0.004645831 ubox
12 30 0.025024976 ubox
12 50 0.034779154 ubox
12 55 0.003557778 ubox
12 60 0.997982314 ubox
13 18 0.015329943 ubox
13 19 0.013856283 ubox
13 26 0.011851118 ubox
13 29 0.085102632 ubox
13 38 0.006442201 ubox
13 39 0.931181373 ubox
13 49 0.064377451 ubox
13 59 0.130732888 ubox
14 18 0.010593595 ubox
14 19 0.008996142 ubox
14 26 0.005111863 ubox
14 28 0.091622923 ubox
14 36 0.008757236 ubox
14 38 0.932241282 ubox
14 39 0.005368062 ubox
14 45 0.015901751 ubox
14 48 0.091947954 ubox
14 49 0.009745826 ubox
14 56 0.004588871 ubox
14 59 0.020778454 ubox
15 20 0.059956320 ubox
15 27 0.091403132 ubox
15 30 0.050419401 ubox
15 35 0.008432566 ubox
15 37 0.926616180 ubox
15 44 0.018236652 ubox
15 47 0.093149552 ubox
15 55 0.004288347 ubox
15 58 0.028816801 ubox
15 60 0.003235674 ubox
16 29 0.061110248 ubox
16 46 0.095228336 ubox
17 26 0.892850939 ubox
17 28 0.061256281 ubox
17 36 0.204071818 ubox
17 38 0.006876233 ubox
17 39 0.005013479 ubox
17 45 0.096678666 ubox
17 98 0.004066510 ubox
18 22 0.009146462 ubox
18 23 0.013702066 ubox
18 24 0.025350677 ubox
18 25 0.893243621 ubox
18 27 0.058722508 ubox
18 31 0.007866950 ubox
18 32 0.017382420 ubox
18 33 0.010450747 ubox
18 34 0.073193531 ubox
18 35 0.203445777 ubox
18 37 0.004075434 ubox
18 41 0.048473350 ubox
18 42 0.012919212 ubox
18 43 0.019044774 ubox
18 44 0.096568964 ubox
18 97 0.004070811 ubox
19 23 0.025480106 ubox
19 24 0.877924562 ubox
19 25 0.039309736 ubox
19 27 0.017266094 ubox
19 30 0.008606551 ubox
19 31 0.019319869 ubox
19 32 0.014269199 ubox
19 33 0.073086510 ubox
19 34 0.198769474 ubox
19 35 0.004407810 ubox
19 40 0.054990364 ubox
19 41 0.014466558 ubox
19 42 0.021638290 ubox
19 43 0.095304589 ubox
19 44 0.006998111 ubox
19 96 0.004068687 ubox
20 26 0.056092375 ubox
20 28 0.009965196 ubox
20 29 0.010317426 ubox
20 38 0.009461407 ubox
20 39 0.055806288 ubox
20 95 0.004052672 ubox
21 29 0.016237173 ubox
22 29 0.041084181 ubox
23 29 0.046408623 ubox
24 29 0.061750057 ubox
25 29 0.018240009 ubox
26 30 0.008133299 ubox
26 35 0.003888235 ubox
26 37 0.316186263 ubox
27 36 0.967649327 ubox
27 38 0.022454577 ubox
27 45 0.003547204 ubox
28 35 0.968505090 ubox
28 37 0.022500035 ubox
28 44 0.003677268 ubox
29 33 0.010352915 ubox
29 34 0.958769609 ubox
29 35 0.004509125 ubox
29 37 0.006213134 ubox
29 40 0.018033125 ubox
29 43 0.003794147 ubox
30 36 0.020193490 ubox
30 38 0.007143421 ubox
30 39 0.028587283 ubox
34 46 0.011718208 ubox
35 39 0.008440570 ubox
35 45 0.013954767 ubox
36 44 0.014601666 ubox
37 45 0.021084578 ubox
37 56 0.006794424 ubox
38 44 0.023938706 ubox
38 55 0.006824820 ubox
39 44 0.013778670 ubox
39 54 0.006814178 ubox
44 56 0.005888773 ubox
44 59 0.987813002 ubox
45 55 0.005854313 ubox
45 58 0.994611318 ubox
46 54 0.005738851 ubox
46 57 0.994984866 ubox
47 56 0.995574966 ubox
48 55 0.994750460 ubox
49 54 0.993304397 ubox
49 55 0.029415459 ubox
49 58 0.009912917 ubox
50 56 0.014857406 ubox
50 59 0.014168971 ubox
54 59 0.025911277 ubox
55 59 0.006024476 ubox
65 91 0.005323950 ubox
69 86 0.998908610 ubox
70 85 0.999966442 ubox
71 84 0.999665234 ubox
72 83 0.999187557 ubox
73 82 0.999913242 ubox
74 80 0.005768064 ubox
74 81 0.999728375 ubox
75 79 0.012844197 ubox
75 80 0.998917441 ubox
76 80 0.003180744 ubox
86 91 0.004929964 ubox
91 95 0.043036367 ubox
91 98 0.103771519 ubox
91 101 0.045530544 ubox
91 104 0.035240533 ubox
91 107 0.010426545 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
