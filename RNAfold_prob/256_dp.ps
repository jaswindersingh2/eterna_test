%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (256)
} def

/sequence { (\
GGAAAAAACAACAAGUAGAAAACUACAGUGAAGACAAACUGACAAAAGACAGAGUCAACACAAGUUGAUUCUAACUUCGGUUAGAAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.211073964 ubox
1 12 0.131831522 ubox
1 23 0.009683469 ubox
1 24 0.007546752 ubox
1 26 0.008894405 ubox
1 35 0.044043827 ubox
1 39 0.012853925 ubox
1 40 0.004504334 ubox
1 95 0.077605541 ubox
1 98 0.085151965 ubox
1 101 0.087121927 ubox
1 104 0.087192433 ubox
1 107 0.022001594 ubox
2 9 0.092901713 ubox
2 12 0.038419420 ubox
2 23 0.007987215 ubox
2 35 0.026730519 ubox
2 39 0.006137385 ubox
2 78 0.004135368 ubox
2 95 0.040090060 ubox
2 98 0.044012913 ubox
2 101 0.044819672 ubox
2 104 0.044454884 ubox
2 107 0.014507310 ubox
3 77 0.003992360 ubox
4 76 0.003401325 ubox
5 29 0.003555153 ubox
6 29 0.004373954 ubox
7 29 0.006656355 ubox
7 66 0.004313409 ubox
7 69 0.003820326 ubox
7 82 0.005930731 ubox
8 16 0.034354290 ubox
8 29 0.058644724 ubox
8 65 0.004584454 ubox
8 81 0.006301078 ubox
9 15 0.035840721 ubox
9 18 0.011099687 ubox
9 28 0.060031423 ubox
9 30 0.226721519 ubox
9 33 0.082639646 ubox
9 64 0.004627473 ubox
9 67 0.034899121 ubox
9 80 0.006333633 ubox
9 84 0.008210208 ubox
9 91 0.043840150 ubox
10 29 0.205510202 ubox
10 66 0.035040790 ubox
10 82 0.005141007 ubox
11 29 0.277427875 ubox
11 65 0.035056899 ubox
11 81 0.005507582 ubox
12 18 0.009095685 ubox
12 28 0.300032315 ubox
12 30 0.216954166 ubox
12 33 0.009801820 ubox
12 64 0.035028554 ubox
12 80 0.005521145 ubox
12 84 0.008137519 ubox
12 91 0.042135247 ubox
13 24 0.004224596 ubox
13 29 0.211197834 ubox
13 77 0.004649807 ubox
14 24 0.097168908 ubox
14 29 0.021512365 ubox
14 76 0.005286670 ubox
15 23 0.100400416 ubox
15 26 0.985008611 ubox
15 35 0.026302741 ubox
15 75 0.005357427 ubox
15 95 0.010487157 ubox
15 98 0.012660022 ubox
15 101 0.012735219 ubox
15 104 0.012979689 ubox
15 107 0.005847778 ubox
16 21 0.005725621 ubox
16 22 0.098082276 ubox
16 25 0.986495232 ubox
16 27 0.003314275 ubox
16 34 0.026036471 ubox
16 74 0.004710225 ubox
16 94 0.009850874 ubox
16 97 0.012018156 ubox
16 100 0.012073807 ubox
16 103 0.012316641 ubox
16 106 0.005663371 ubox
17 24 0.986173380 ubox
18 23 0.978069760 ubox
18 24 0.004804261 ubox
18 26 0.008328085 ubox
18 35 0.004552690 ubox
18 95 0.006671635 ubox
18 98 0.006536262 ubox
18 101 0.006793275 ubox
18 104 0.005169088 ubox
19 24 0.004839658 ubox
20 29 0.003725210 ubox
21 29 0.003845341 ubox
21 66 0.005875942 ubox
21 82 0.003723171 ubox
22 29 0.030488725 ubox
22 65 0.006316074 ubox
22 81 0.003981495 ubox
23 28 0.030909879 ubox
23 30 0.013669830 ubox
23 33 0.013293364 ubox
23 64 0.006377742 ubox
23 80 0.004016073 ubox
23 84 0.004914433 ubox
23 91 0.007072037 ubox
24 32 0.013100036 ubox
24 63 0.006304261 ubox
24 79 0.003807002 ubox
24 83 0.004906828 ubox
24 90 0.006850128 ubox
24 99 0.003551653 ubox
25 82 0.004558442 ubox
26 30 0.005958199 ubox
26 33 0.010703306 ubox
26 41 0.031718708 ubox
26 91 0.003194286 ubox
27 40 0.055298201 ubox
27 81 0.004639762 ubox
28 35 0.443416189 ubox
28 39 0.067326896 ubox
28 43 0.004808015 ubox
28 61 0.056547909 ubox
28 95 0.488669905 ubox
28 98 0.113099297 ubox
28 101 0.038077800 ubox
28 104 0.034691958 ubox
28 107 0.011322709 ubox
29 33 0.008856020 ubox
29 34 0.439585212 ubox
29 36 0.112258197 ubox
29 37 0.020955320 ubox
29 38 0.071913606 ubox
29 42 0.004780535 ubox
29 60 0.056614173 ubox
29 79 0.005792463 ubox
29 85 0.004265278 ubox
29 87 0.004427989 ubox
29 88 0.004378999 ubox
29 89 0.004695956 ubox
29 90 0.007049380 ubox
29 91 0.008998666 ubox
29 92 0.013096687 ubox
29 93 0.023631319 ubox
29 94 0.486152847 ubox
29 96 0.062924760 ubox
29 97 0.106255261 ubox
29 99 0.014926200 ubox
29 100 0.036087512 ubox
29 102 0.013492452 ubox
29 103 0.033054019 ubox
29 105 0.010844713 ubox
29 106 0.010925665 ubox
30 35 0.127320448 ubox
30 39 0.006262287 ubox
30 59 0.056559659 ubox
30 78 0.006651401 ubox
30 95 0.077601701 ubox
30 98 0.018366582 ubox
30 101 0.016587762 ubox
30 104 0.012412635 ubox
31 40 0.004120380 ubox
31 77 0.006648359 ubox
32 40 0.008017642 ubox
32 76 0.006628170 ubox
33 39 0.009550907 ubox
33 56 0.056960040 ubox
33 75 0.006588292 ubox
33 95 0.015114795 ubox
33 98 0.011096030 ubox
33 101 0.008732448 ubox
33 104 0.006068586 ubox
34 55 0.057016633 ubox
35 54 0.056970248 ubox
35 84 0.043030516 ubox
35 91 0.038763510 ubox
36 82 0.004592656 ubox
37 81 0.003501233 ubox
37 82 0.086746703 ubox
38 81 0.092810739 ubox
39 48 0.008881163 ubox
39 52 0.057871140 ubox
39 80 0.093513205 ubox
39 84 0.984855444 ubox
39 91 0.005299215 ubox
40 47 0.008874197 ubox
40 51 0.057953190 ubox
40 79 0.093453958 ubox
40 83 0.990688122 ubox
40 90 0.004540091 ubox
41 50 0.057936493 ubox
41 78 0.093479422 ubox
41 82 0.992433472 ubox
42 77 0.085401225 ubox
42 81 0.993239528 ubox
43 48 0.032397316 ubox
43 79 0.008341818 ubox
43 80 0.993360382 ubox
44 76 0.004690469 ubox
44 77 0.004497964 ubox
45 76 0.005058194 ubox
45 77 0.026180444 ubox
46 76 0.021729905 ubox
46 77 0.976138702 ubox
47 76 0.992560249 ubox
47 77 0.007006273 ubox
48 75 0.992127394 ubox
48 76 0.006955767 ubox
48 77 0.009005237 ubox
48 78 0.004341441 ubox
49 72 0.004965294 ubox
49 76 0.009533530 ubox
49 77 0.004222884 ubox
51 72 0.978988838 ubox
52 71 0.998107162 ubox
53 70 0.997643466 ubox
54 69 0.997382882 ubox
55 68 0.998182254 ubox
56 67 0.998344392 ubox
57 66 0.997778392 ubox
58 65 0.997112307 ubox
59 64 0.995588616 ubox
64 95 0.007991722 ubox
64 98 0.035400501 ubox
64 101 0.013715674 ubox
64 104 0.011898597 ubox
64 107 0.003638558 ubox
65 89 0.003372898 ubox
65 90 0.006756709 ubox
65 94 0.007923921 ubox
65 97 0.035435235 ubox
65 100 0.013723074 ubox
65 103 0.011906898 ubox
65 106 0.003679271 ubox
66 88 0.003886776 ubox
66 89 0.007863101 ubox
66 93 0.007652685 ubox
66 96 0.035446883 ubox
66 99 0.013701620 ubox
66 102 0.011895002 ubox
66 105 0.003693119 ubox
67 95 0.035408767 ubox
67 98 0.013653312 ubox
67 101 0.011856283 ubox
67 104 0.003684733 ubox
69 86 0.041787596 ubox
69 90 0.003449471 ubox
69 93 0.030306055 ubox
69 94 0.003511016 ubox
69 96 0.003261840 ubox
70 85 0.049396285 ubox
70 92 0.030988272 ubox
71 84 0.050649454 ubox
71 91 0.030975169 ubox
72 83 0.050915696 ubox
72 90 0.029918785 ubox
73 82 0.051191996 ubox
74 81 0.051227302 ubox
75 80 0.051200500 ubox
76 86 0.029630455 ubox
76 93 0.004826748 ubox
77 85 0.031969162 ubox
77 92 0.005687746 ubox
78 84 0.032190776 ubox
78 91 0.005910815 ubox
80 95 0.004395876 ubox
80 98 0.003340495 ubox
81 88 0.003865772 ubox
81 94 0.004388943 ubox
81 97 0.003337905 ubox
82 87 0.003806649 ubox
82 93 0.004211936 ubox
82 96 0.003171857 ubox
84 95 0.006897195 ubox
84 98 0.005229675 ubox
84 101 0.004315995 ubox
84 104 0.003598641 ubox
91 95 0.038755110 ubox
91 98 0.091701707 ubox
91 101 0.039431297 ubox
91 104 0.029937044 ubox
91 107 0.008842228 ubox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
39 84 0.9500000 lbox
40 83 0.9500000 lbox
41 82 0.9500000 lbox
42 81 0.9500000 lbox
43 80 0.9500000 lbox
46 77 0.9500000 lbox
47 76 0.9500000 lbox
48 75 0.9500000 lbox
51 72 0.9500000 lbox
52 71 0.9500000 lbox
53 70 0.9500000 lbox
54 69 0.9500000 lbox
55 68 0.9500000 lbox
56 67 0.9500000 lbox
57 66 0.9500000 lbox
58 65 0.9500000 lbox
59 64 0.9500000 lbox
showpage
end
%%EOF
