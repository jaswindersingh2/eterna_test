%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (378)
} def

/sequence { (\
GGAAAAGUUGUAAGCUUAGUGAAACACUAAGUGGUGAAACACCAGGGGUCAAAGACCCCCUUACAACAAAGCCCAUUCGUGGGCUUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 67 0.003719358 ubox
1 86 0.003360202 ubox
1 95 0.066400117 ubox
1 98 0.066821403 ubox
1 101 0.069195232 ubox
1 104 0.076884852 ubox
1 107 0.019505040 ubox
2 67 0.004000255 ubox
2 86 0.005741554 ubox
2 95 0.035053072 ubox
2 98 0.035182233 ubox
2 101 0.036525127 ubox
2 104 0.037183902 ubox
2 107 0.012152746 ubox
3 85 0.004067708 ubox
3 86 0.005051715 ubox
4 86 0.004661373 ubox
5 86 0.004659749 ubox
6 86 0.003850726 ubox
7 67 0.982537204 ubox
7 95 0.008001045 ubox
7 98 0.100817820 ubox
7 101 0.096365307 ubox
7 104 0.097241910 ubox
7 107 0.033989380 ubox
8 66 0.983521530 ubox
8 94 0.007525282 ubox
8 97 0.100906722 ubox
8 100 0.096428014 ubox
8 103 0.097299626 ubox
8 106 0.034364055 ubox
9 65 0.984111175 ubox
9 93 0.005911074 ubox
9 96 0.100867599 ubox
9 99 0.096376435 ubox
9 102 0.097239047 ubox
9 105 0.034497190 ubox
10 64 0.984788808 ubox
10 95 0.100830642 ubox
10 98 0.096335289 ubox
10 101 0.097196958 ubox
10 104 0.034508441 ubox
11 63 0.984471967 ubox
11 93 0.004465079 ubox
11 94 0.097120177 ubox
11 96 0.003651601 ubox
11 97 0.092849058 ubox
11 99 0.003663307 ubox
11 100 0.093679188 ubox
11 103 0.033259505 ubox
12 61 0.005670988 ubox
12 62 0.983378405 ubox
13 32 0.010237008 ubox
13 61 0.975908228 ubox
13 62 0.007150110 ubox
14 32 0.263410241 ubox
14 60 0.944934896 ubox
14 61 0.005991072 ubox
14 95 0.008746934 ubox
14 98 0.007938177 ubox
15 31 0.992602464 ubox
16 30 0.997921004 ubox
16 31 0.004702869 ubox
17 29 0.999143412 ubox
17 30 0.004200623 ubox
18 28 0.999650507 ubox
19 27 0.999960630 ubox
20 26 0.998767212 ubox
21 25 0.982826862 ubox
31 42 0.017844522 ubox
32 41 0.021316285 ubox
32 44 0.868394922 ubox
33 40 0.022673979 ubox
33 42 0.004569660 ubox
33 43 0.999343209 ubox
34 40 0.004640550 ubox
34 42 0.999593921 ubox
35 39 0.004442261 ubox
35 41 0.998391139 ubox
35 44 0.007135394 ubox
36 40 0.982457124 ubox
36 43 0.007913477 ubox
44 61 0.051620337 ubox
44 62 0.006021346 ubox
45 58 0.012660395 ubox
45 59 0.995857300 ubox
45 60 0.057791207 ubox
46 57 0.012306426 ubox
46 58 0.998532977 ubox
46 59 0.052287929 ubox
47 56 0.011907677 ubox
47 57 0.998877730 ubox
47 58 0.045579829 ubox
48 56 0.999203782 ubox
48 57 0.037669692 ubox
49 54 0.008332613 ubox
49 55 0.998754083 ubox
50 54 0.990348072 ubox
60 91 0.032394677 ubox
61 65 0.004175230 ubox
61 66 0.004909762 ubox
61 68 0.006787746 ubox
61 69 0.005137503 ubox
61 88 0.006797745 ubox
61 90 0.032263798 ubox
61 92 0.007756582 ubox
61 93 0.018283660 ubox
61 94 0.011208567 ubox
62 66 0.003402995 ubox
62 68 0.008072227 ubox
62 69 0.004525804 ubox
62 87 0.007774536 ubox
62 89 0.029865207 ubox
62 90 0.003466823 ubox
62 91 0.007845349 ubox
62 92 0.020037782 ubox
62 93 0.013229867 ubox
63 86 0.006448649 ubox
64 91 0.027466512 ubox
65 86 0.005730441 ubox
66 86 0.003707937 ubox
67 91 0.007684154 ubox
68 85 0.004089835 ubox
68 86 0.051520749 ubox
69 85 0.039601167 ubox
69 86 0.926514476 ubox
70 85 0.990841110 ubox
70 86 0.020649609 ubox
71 84 0.999944119 ubox
71 85 0.003243658 ubox
72 83 0.999993473 ubox
73 82 0.999991566 ubox
74 79 0.003654520 ubox
74 81 0.999707686 ubox
75 80 0.831859374 ubox
85 91 0.003502152 ubox
85 92 0.009467883 ubox
85 93 0.006276743 ubox
85 94 0.006256369 ubox
86 90 0.005687743 ubox
86 91 0.013117459 ubox
86 92 0.010638585 ubox
86 93 0.012659072 ubox
86 94 0.005310199 ubox
86 96 0.004653564 ubox
86 97 0.003443157 ubox
86 99 0.003639340 ubox
86 102 0.003183710 ubox
91 95 0.043960199 ubox
91 98 0.104244558 ubox
91 101 0.044940154 ubox
91 104 0.034696768 ubox
91 107 0.010265266 ubox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
45 59 0.9500000 lbox
46 58 0.9500000 lbox
47 57 0.9500000 lbox
48 56 0.9500000 lbox
49 55 0.9500000 lbox
50 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
