%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (363)
} def

/sequence { (\
GGAAAGCGGCAUGGAAAAACAUGGGCAAAGCCACCGCAGCCACCGGAAAACGGCAAGGAAACUUGGGCGCUGCAGUUCGCUGCAGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.005666829 ubox
1 32 0.044642888 ubox
1 35 0.013042883 ubox
1 40 0.008499372 ubox
1 41 0.185306443 ubox
1 44 0.006297613 ubox
1 68 0.011489583 ubox
1 86 0.005665249 ubox
1 95 0.133945235 ubox
1 98 0.134786950 ubox
1 101 0.137856626 ubox
1 104 0.138487963 ubox
1 107 0.034964958 ubox
2 7 0.004218192 ubox
2 31 0.044661973 ubox
2 34 0.013004171 ubox
2 37 0.003186137 ubox
2 40 0.185133705 ubox
2 41 0.018924679 ubox
2 43 0.006303205 ubox
2 68 0.009677210 ubox
2 86 0.003936117 ubox
2 95 0.070655842 ubox
2 98 0.070899855 ubox
2 101 0.072418274 ubox
2 104 0.072143493 ubox
2 107 0.023540953 ubox
5 81 0.003475370 ubox
6 26 0.054070978 ubox
6 31 0.007854788 ubox
6 37 0.996104970 ubox
6 68 0.028522134 ubox
6 80 0.003561442 ubox
6 95 0.005419397 ubox
6 98 0.008716798 ubox
6 101 0.008607940 ubox
6 104 0.008526179 ubox
7 25 0.054102014 ubox
7 30 0.007881335 ubox
7 36 0.997347025 ubox
7 67 0.028500740 ubox
7 79 0.003561897 ubox
7 91 0.004839131 ubox
8 26 0.004656851 ubox
8 32 0.003651534 ubox
8 34 0.004811364 ubox
8 35 0.997282538 ubox
8 41 0.007631401 ubox
8 78 0.003545617 ubox
8 95 0.005901817 ubox
8 98 0.005912888 ubox
8 101 0.005911077 ubox
8 104 0.005857490 ubox
9 26 0.003520131 ubox
9 31 0.003803787 ubox
9 34 0.992832845 ubox
9 40 0.007637762 ubox
9 95 0.007761823 ubox
9 98 0.007573982 ubox
9 101 0.007533339 ubox
9 104 0.004262267 ubox
10 23 0.994854893 ubox
10 24 0.004944519 ubox
10 25 0.003328855 ubox
10 30 0.003669997 ubox
10 39 0.007405860 ubox
11 22 0.997708108 ubox
12 19 0.003164110 ubox
12 21 0.998259699 ubox
12 33 0.032513517 ubox
12 36 0.005093438 ubox
13 20 0.998379049 ubox
13 32 0.035092685 ubox
13 35 0.005672372 ubox
14 20 0.013009838 ubox
14 31 0.035029752 ubox
14 34 0.005670933 ubox
20 24 0.010416518 ubox
20 25 0.021576820 ubox
22 33 0.036180211 ubox
23 32 0.048909368 ubox
23 34 0.003817682 ubox
24 31 0.051981503 ubox
24 32 0.992884684 ubox
24 35 0.004689013 ubox
24 41 0.033537116 ubox
25 31 0.994087053 ubox
25 32 0.008224427 ubox
25 34 0.004732877 ubox
25 40 0.033580047 ubox
26 30 0.986885503 ubox
26 39 0.033564966 ubox
30 35 0.004345179 ubox
30 37 0.037989503 ubox
30 68 0.023865312 ubox
31 36 0.037899095 ubox
31 67 0.023861640 ubox
32 66 0.023771095 ubox
33 76 0.003231497 ubox
34 53 0.007925312 ubox
34 65 0.005326986 ubox
34 66 0.005051973 ubox
34 67 0.004946990 ubox
34 75 0.003463334 ubox
35 52 0.007961526 ubox
35 65 0.005251105 ubox
35 66 0.004972052 ubox
36 51 0.007909015 ubox
36 62 0.007207161 ubox
36 64 0.004837849 ubox
36 68 0.004294749 ubox
36 73 0.004440047 ubox
37 67 0.004282824 ubox
37 72 0.004444453 ubox
38 63 0.005183870 ubox
38 71 0.004446752 ubox
39 54 0.009641788 ubox
39 62 0.005365823 ubox
39 68 0.973686102 ubox
39 70 0.004393157 ubox
39 95 0.007605109 ubox
39 98 0.007446217 ubox
39 101 0.007589570 ubox
39 104 0.007598046 ubox
40 46 0.008591257 ubox
40 53 0.010304839 ubox
40 58 0.029090376 ubox
40 66 0.013538205 ubox
40 67 0.974857398 ubox
40 69 0.004365772 ubox
40 91 0.005641881 ubox
41 45 0.008538157 ubox
41 52 0.010194988 ubox
41 57 0.029135455 ubox
41 65 0.015051289 ubox
41 66 0.973636761 ubox
41 67 0.004864513 ubox
41 91 0.010096458 ubox
42 64 0.014130982 ubox
43 52 0.007294592 ubox
43 53 0.994818466 ubox
43 65 0.009370163 ubox
43 66 0.003573607 ubox
43 67 0.003990199 ubox
44 52 0.999317592 ubox
44 53 0.011060878 ubox
44 65 0.003845730 ubox
44 66 0.003975596 ubox
45 51 0.998094233 ubox
45 62 0.003539531 ubox
45 63 0.008766795 ubox
45 64 0.003553809 ubox
46 51 0.018513735 ubox
46 62 0.009008532 ubox
51 57 0.009229485 ubox
51 58 0.004692289 ubox
51 67 0.004118328 ubox
52 68 0.007743655 ubox
53 68 0.008634403 ubox
54 65 0.995440160 ubox
54 66 0.012346380 ubox
54 67 0.008572331 ubox
55 64 0.997754078 ubox
56 63 0.998154995 ubox
56 64 0.013765177 ubox
57 62 0.997872623 ubox
57 63 0.015705021 ubox
57 64 0.004223507 ubox
57 95 0.003936573 ubox
58 62 0.017069225 ubox
58 63 0.003638398 ubox
62 91 0.017431885 ubox
63 90 0.017502167 ubox
63 92 0.005499423 ubox
64 89 0.017299960 ubox
64 91 0.005814399 ubox
66 95 0.005343756 ubox
66 98 0.003990264 ubox
66 101 0.003551917 ubox
67 86 0.004289379 ubox
68 85 0.003906274 ubox
68 91 0.010449833 ubox
69 86 0.998871106 ubox
70 85 0.999951808 ubox
71 84 0.999739106 ubox
72 83 0.999977946 ubox
73 82 0.999977439 ubox
74 81 0.998533724 ubox
75 80 0.990242621 ubox
86 91 0.005451609 ubox
91 95 0.046174223 ubox
91 98 0.107899920 ubox
91 101 0.045704646 ubox
91 104 0.033998976 ubox
91 107 0.010028027 ubox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
