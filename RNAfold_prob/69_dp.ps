%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (69)
} def

/sequence { (\
GGAAAAAGAUGACAAUCGAAAGAUUGCCAAGGGAUCAAAAGAUCACUACAAAAGUAGCCGAGGUCAUCGAUCGAGUUCGCUCGAUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.009640173 ubox
1 17 0.003537040 ubox
1 28 0.006038154 ubox
1 59 0.037201690 ubox
1 65 0.006709718 ubox
1 68 0.006935309 ubox
1 86 0.005319323 ubox
1 95 0.069356032 ubox
1 98 0.069807030 ubox
1 101 0.071420105 ubox
1 104 0.071826545 ubox
1 107 0.018143578 ubox
2 17 0.008101662 ubox
2 27 0.006032917 ubox
2 58 0.037111056 ubox
2 64 0.005308653 ubox
2 65 0.010134974 ubox
2 67 0.004532834 ubox
2 68 0.013186894 ubox
2 86 0.009267114 ubox
2 95 0.036602004 ubox
2 98 0.036740796 ubox
2 101 0.037542504 ubox
2 104 0.037455067 ubox
2 107 0.012223148 ubox
3 16 0.007722667 ubox
3 64 0.009609302 ubox
3 67 0.012194401 ubox
3 85 0.008546386 ubox
4 10 0.006028113 ubox
7 81 0.008736915 ubox
8 13 0.005375292 ubox
8 17 0.103441032 ubox
8 59 0.005797897 ubox
8 65 0.014328536 ubox
8 67 0.003163830 ubox
8 68 0.987177840 ubox
8 80 0.009262951 ubox
8 82 0.008769601 ubox
8 86 0.006434636 ubox
8 95 0.008227513 ubox
8 98 0.014038013 ubox
8 101 0.013890203 ubox
8 104 0.013920955 ubox
8 107 0.004866710 ubox
9 16 0.103369177 ubox
9 64 0.013893784 ubox
9 67 0.988381543 ubox
9 81 0.008728045 ubox
9 85 0.006105154 ubox
10 15 0.102197460 ubox
10 18 0.009591068 ubox
10 29 0.045286469 ubox
10 63 0.011529606 ubox
10 66 0.988446489 ubox
10 79 0.011803780 ubox
10 84 0.004953571 ubox
10 96 0.016152747 ubox
10 99 0.015793035 ubox
10 102 0.015834695 ubox
10 105 0.011899437 ubox
11 17 0.015651873 ubox
11 27 0.015323575 ubox
11 28 0.050960924 ubox
11 65 0.988741952 ubox
11 68 0.006898149 ubox
11 77 0.005029850 ubox
11 78 0.012370701 ubox
11 82 0.005161125 ubox
11 95 0.017000859 ubox
11 98 0.016647370 ubox
11 101 0.016698651 ubox
11 104 0.013017119 ubox
12 16 0.013632416 ubox
12 64 0.959794831 ubox
12 67 0.006315547 ubox
12 76 0.005733335 ubox
12 77 0.011887073 ubox
12 81 0.005112163 ubox
13 18 0.005830676 ubox
13 26 0.559825606 ubox
13 60 0.003192905 ubox
13 62 0.020289489 ubox
13 63 0.812299887 ubox
13 75 0.006182010 ubox
13 79 0.004035508 ubox
14 24 0.005969075 ubox
14 25 0.638599333 ubox
14 77 0.003177251 ubox
15 24 0.653095863 ubox
15 25 0.009186916 ubox
15 43 0.046885000 ubox
16 23 0.655695772 ubox
16 32 0.008068411 ubox
16 42 0.052425022 ubox
16 60 0.008881571 ubox
16 61 0.733395715 ubox
16 62 0.005725876 ubox
16 74 0.014878049 ubox
16 92 0.007761327 ubox
17 22 0.655997477 ubox
17 26 0.020510964 ubox
17 31 0.011008157 ubox
17 32 0.007888063 ubox
17 41 0.053439196 ubox
17 57 0.005695043 ubox
17 60 0.738737662 ubox
17 62 0.007449490 ubox
17 73 0.015191171 ubox
17 91 0.008211202 ubox
18 25 0.022053053 ubox
18 27 0.013917280 ubox
18 28 0.010870340 ubox
18 44 0.004247470 ubox
18 58 0.048785465 ubox
18 59 0.730886044 ubox
18 68 0.003738018 ubox
18 72 0.015206086 ubox
18 95 0.004403268 ubox
18 98 0.004393795 ubox
18 101 0.004462703 ubox
18 104 0.004468963 ubox
19 24 0.025890025 ubox
19 25 0.041236583 ubox
19 43 0.004328318 ubox
19 55 0.016955986 ubox
19 67 0.003607038 ubox
19 71 0.015051452 ubox
20 24 0.033037083 ubox
20 25 0.026821949 ubox
20 55 0.051714690 ubox
21 25 0.014152428 ubox
21 55 0.046015835 ubox
22 27 0.064446832 ubox
22 28 0.104237228 ubox
22 36 0.253645132 ubox
22 44 0.052100708 ubox
22 55 0.054806883 ubox
22 58 0.080550444 ubox
22 59 0.011342381 ubox
22 65 0.003510698 ubox
22 68 0.118561439 ubox
23 35 0.253862612 ubox
23 43 0.052120276 ubox
23 55 0.311130156 ubox
23 67 0.118627373 ubox
24 29 0.013816413 ubox
24 30 0.024728145 ubox
24 31 0.060246648 ubox
24 32 0.031864895 ubox
24 33 0.006102339 ubox
24 34 0.252558609 ubox
24 38 0.011938592 ubox
24 42 0.051644915 ubox
24 51 0.125423296 ubox
24 52 0.050719244 ubox
24 53 0.211456094 ubox
24 54 0.311916701 ubox
24 56 0.008538555 ubox
24 57 0.083450419 ubox
24 66 0.114465012 ubox
25 29 0.023905962 ubox
25 30 0.078226331 ubox
25 31 0.042083978 ubox
25 32 0.044530451 ubox
25 33 0.248227482 ubox
25 34 0.024236065 ubox
25 37 0.014693293 ubox
25 40 0.003611284 ubox
25 41 0.050206318 ubox
25 45 0.003937218 ubox
25 50 0.139752336 ubox
25 51 0.052525739 ubox
25 52 0.211335654 ubox
25 53 0.303179445 ubox
25 54 0.013999880 ubox
25 56 0.086811216 ubox
25 60 0.004129398 ubox
25 62 0.003223635 ubox
25 66 0.016002233 ubox
26 35 0.007061598 ubox
26 36 0.015530136 ubox
26 44 0.003178642 ubox
26 49 0.142054648 ubox
26 55 0.087583059 ubox
26 58 0.029111214 ubox
26 59 0.005906923 ubox
26 64 0.137251151 ubox
26 65 0.021379552 ubox
27 31 0.222983287 ubox
27 32 0.253491488 ubox
27 33 0.055336875 ubox
27 54 0.087430627 ubox
27 57 0.027680807 ubox
27 60 0.009016168 ubox
27 62 0.032045933 ubox
27 63 0.537372927 ubox
28 32 0.073466368 ubox
28 33 0.011103336 ubox
28 54 0.004165572 ubox
28 60 0.016807709 ubox
28 62 0.545317885 ubox
28 63 0.017669272 ubox
29 47 0.013647544 ubox
29 55 0.007934184 ubox
30 35 0.009990059 ubox
30 47 0.315788136 ubox
31 35 0.004368829 ubox
31 36 0.022790797 ubox
31 44 0.011184703 ubox
31 46 0.325372585 ubox
31 47 0.282380165 ubox
31 49 0.010460277 ubox
31 58 0.010326796 ubox
31 59 0.554766770 ubox
31 68 0.004594991 ubox
31 95 0.003913367 ubox
31 98 0.003962921 ubox
31 101 0.004039091 ubox
31 104 0.004042931 ubox
32 36 0.008575602 ubox
32 43 0.008576809 ubox
32 44 0.036355981 ubox
32 46 0.294600394 ubox
32 47 0.009131439 ubox
32 49 0.015690514 ubox
32 58 0.553352846 ubox
32 59 0.018426866 ubox
32 67 0.004095299 ubox
32 95 0.004229744 ubox
32 98 0.003634094 ubox
32 101 0.003705910 ubox
32 104 0.003687459 ubox
33 43 0.019341924 ubox
33 44 0.957910064 ubox
33 46 0.006283601 ubox
33 58 0.012050280 ubox
33 65 0.006700834 ubox
33 68 0.003746598 ubox
34 43 0.963840349 ubox
34 64 0.006751651 ubox
34 67 0.003748761 ubox
35 40 0.003439635 ubox
35 42 0.964207459 ubox
35 63 0.006757984 ubox
35 66 0.003677189 ubox
36 41 0.962878461 ubox
36 62 0.006798614 ubox
37 43 0.007063683 ubox
38 43 0.008302777 ubox
39 43 0.005106180 ubox
40 47 0.007730330 ubox
41 46 0.008637096 ubox
41 58 0.012991988 ubox
41 59 0.003348393 ubox
41 65 0.009685846 ubox
42 64 0.009733590 ubox
43 57 0.004482148 ubox
43 61 0.033320453 ubox
43 63 0.009616680 ubox
44 57 0.006429583 ubox
44 60 0.039780513 ubox
44 62 0.010264429 ubox
45 55 0.067576868 ubox
46 54 0.070948562 ubox
46 57 0.869483829 ubox
46 60 0.003872209 ubox
46 62 0.008567654 ubox
46 63 0.003780841 ubox
47 52 0.004590693 ubox
47 53 0.069349368 ubox
47 56 0.875962784 ubox
47 57 0.003249579 ubox
47 61 0.008087743 ubox
47 62 0.003604610 ubox
48 55 0.877714714 ubox
49 54 0.876380751 ubox
49 57 0.013634207 ubox
49 60 0.007136169 ubox
49 62 0.006186270 ubox
49 63 0.003528719 ubox
50 55 0.004254021 ubox
51 55 0.003259158 ubox
54 58 0.006479558 ubox
54 59 0.009265281 ubox
57 64 0.019867757 ubox
58 62 0.029446529 ubox
58 63 0.058617347 ubox
59 63 0.010890908 ubox
59 69 0.010976687 ubox
60 65 0.006894471 ubox
60 68 0.032934895 ubox
60 95 0.004348676 ubox
60 98 0.007384747 ubox
61 67 0.032635058 ubox
62 68 0.006795671 ubox
62 95 0.008392927 ubox
63 67 0.004432416 ubox
63 68 0.007290009 ubox
63 95 0.009636582 ubox
63 98 0.003652885 ubox
64 92 0.023334817 ubox
64 94 0.008801120 ubox
64 97 0.003376089 ubox
65 91 0.025090622 ubox
67 87 0.008636158 ubox
67 88 0.013070069 ubox
67 89 0.007162870 ubox
67 90 0.006097435 ubox
67 92 0.012903448 ubox
68 91 0.013917300 ubox
69 86 0.998298658 ubox
70 85 0.999357047 ubox
71 84 0.999575078 ubox
72 83 0.999842989 ubox
73 82 0.999841946 ubox
74 81 0.998977645 ubox
75 80 0.990589958 ubox
81 92 0.004084447 ubox
82 91 0.004452525 ubox
85 92 0.007936702 ubox
86 91 0.010704347 ubox
91 95 0.043133663 ubox
91 98 0.103864168 ubox
91 101 0.045506135 ubox
91 104 0.035176202 ubox
91 107 0.010406522 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
