%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (97)
} def

/sequence { (\
GGAAAAAGCACCCUAUCGAAAGAUAGGCGACCCGAUGAAAAUCGAGUACGAAAGUACGGGAGCGGUGCACAUGUAUUCGUACAUGUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.003237801 ubox
1 95 0.067413745 ubox
1 98 0.067861539 ubox
1 101 0.069414135 ubox
1 104 0.069731133 ubox
1 107 0.017606737 ubox
2 11 0.003361378 ubox
2 95 0.035586187 ubox
2 98 0.035726764 ubox
2 101 0.036492301 ubox
2 104 0.036356448 ubox
2 107 0.011864257 ubox
8 63 0.003874225 ubox
8 68 0.998804898 ubox
8 86 0.003930963 ubox
9 62 0.003872784 ubox
9 67 0.999859413 ubox
9 85 0.004019833 ubox
10 66 0.999661299 ubox
10 84 0.003480754 ubox
11 29 0.007069686 ubox
11 64 0.003866701 ubox
11 65 0.999810886 ubox
12 27 0.055073508 ubox
12 64 0.996393166 ubox
12 65 0.005773268 ubox
13 22 0.005717534 ubox
13 26 0.996274386 ubox
13 62 0.010911031 ubox
13 64 0.007024441 ubox
14 21 0.005559191 ubox
14 25 0.999264596 ubox
14 26 0.003366968 ubox
14 61 0.009810762 ubox
15 24 0.999375685 ubox
16 23 0.999597975 ubox
16 59 0.006486472 ubox
17 22 0.999393816 ubox
17 26 0.004160420 ubox
17 58 0.007676641 ubox
18 57 0.007193145 ubox
26 32 0.006043276 ubox
26 63 0.003432868 ubox
27 31 0.006794102 ubox
27 32 0.005347898 ubox
27 63 0.994882123 ubox
28 34 0.003540476 ubox
28 44 0.003326084 ubox
28 50 0.026528042 ubox
28 62 0.995937021 ubox
28 64 0.029504951 ubox
29 33 0.003460243 ubox
29 43 0.003361298 ubox
29 49 0.026771428 ubox
29 63 0.031121388 ubox
30 47 0.028581055 ubox
31 46 0.028947108 ubox
31 58 0.012774209 ubox
31 59 0.937562273 ubox
31 60 0.338690599 ubox
31 62 0.005950266 ubox
31 65 0.003390215 ubox
32 44 0.004247748 ubox
32 46 0.006128502 ubox
32 58 0.935652120 ubox
32 59 0.339123401 ubox
32 60 0.016417473 ubox
32 64 0.003419294 ubox
33 44 0.934062345 ubox
33 58 0.328958282 ubox
33 59 0.015810804 ubox
34 43 0.977732728 ubox
34 57 0.198608305 ubox
35 42 0.975731183 ubox
35 55 0.102303061 ubox
36 40 0.010455572 ubox
36 41 0.964454541 ubox
36 44 0.025622396 ubox
36 45 0.007774674 ubox
36 53 0.004157214 ubox
36 54 0.102012901 ubox
36 56 0.141248889 ubox
37 43 0.041515992 ubox
37 55 0.139602580 ubox
38 42 0.036154195 ubox
38 55 0.037865905 ubox
39 55 0.004101055 ubox
42 51 0.191162908 ubox
42 52 0.005173754 ubox
42 61 0.006934788 ubox
43 50 0.195047628 ubox
43 60 0.007391151 ubox
44 49 0.190062154 ubox
44 57 0.004157198 ubox
46 57 0.977236645 ubox
46 82 0.007060793 ubox
47 56 0.979230121 ubox
47 81 0.007074482 ubox
48 55 0.979480139 ubox
48 80 0.007084902 ubox
49 54 0.979224826 ubox
49 58 0.006995133 ubox
49 79 0.007087460 ubox
50 57 0.008356352 ubox
50 78 0.007079444 ubox
51 77 0.006677731 ubox
52 76 0.003846311 ubox
54 63 0.011164042 ubox
54 68 0.009599378 ubox
54 76 0.005604748 ubox
54 82 0.005264300 ubox
55 62 0.010946849 ubox
55 67 0.009604595 ubox
55 75 0.006817502 ubox
55 81 0.005270944 ubox
56 66 0.009564887 ubox
56 74 0.006946681 ubox
56 80 0.005272295 ubox
57 62 0.004599100 ubox
57 64 0.019476357 ubox
57 65 0.009177967 ubox
57 73 0.006949483 ubox
57 79 0.005273488 ubox
58 63 0.032370274 ubox
58 72 0.006480739 ubox
58 78 0.005267985 ubox
59 63 0.007568440 ubox
59 77 0.005178734 ubox
60 70 0.003877861 ubox
60 76 0.004797876 ubox
62 68 0.006984349 ubox
62 74 0.005052501 ubox
63 67 0.006941717 ubox
63 73 0.005073589 ubox
64 72 0.004693244 ubox
68 91 0.003718125 ubox
69 86 0.951128166 ubox
70 85 0.999080474 ubox
71 80 0.004873910 ubox
71 84 0.999172733 ubox
72 79 0.005138947 ubox
72 83 0.999253710 ubox
72 96 0.013655836 ubox
72 99 0.007279831 ubox
72 105 0.003795685 ubox
73 78 0.005458630 ubox
73 82 0.999642964 ubox
73 95 0.015178003 ubox
73 98 0.008090076 ubox
73 104 0.004217181 ubox
74 79 0.004272489 ubox
74 81 0.991280389 ubox
74 94 0.014982906 ubox
74 97 0.007983805 ubox
74 103 0.004070860 ubox
75 80 0.893237715 ubox
76 81 0.006947915 ubox
76 93 0.016915676 ubox
77 92 0.017576731 ubox
78 91 0.017631179 ubox
79 98 0.004170695 ubox
79 101 0.005118920 ubox
79 104 0.003338663 ubox
80 89 0.003977984 ubox
80 97 0.004125546 ubox
80 100 0.005000113 ubox
80 103 0.003260328 ubox
84 96 0.010279836 ubox
84 99 0.006372265 ubox
84 102 0.004566000 ubox
84 105 0.003966035 ubox
85 95 0.013136802 ubox
85 98 0.008348298 ubox
85 101 0.006241990 ubox
85 104 0.005582831 ubox
86 90 0.003434100 ubox
86 91 0.006469587 ubox
86 92 0.005957723 ubox
86 93 0.007652715 ubox
86 94 0.013449882 ubox
86 97 0.008533544 ubox
86 100 0.006391950 ubox
86 103 0.005739603 ubox
91 95 0.043038035 ubox
91 98 0.103773709 ubox
91 101 0.045518410 ubox
91 104 0.035227639 ubox
91 107 0.010422604 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
