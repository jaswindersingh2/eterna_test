%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (444)
} def

/sequence { (\
GGAAAACAGAUCGGCAGUCAAAAGACGACAAAAGUCGCCAAAACCAAACAAAAGUUUGGGAUCUGAAAGAAGUUGUUCGCAACUUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.029569358 ubox
1 86 0.004805439 ubox
1 95 0.066395689 ubox
1 98 0.066813685 ubox
1 101 0.068652427 ubox
1 104 0.069153226 ubox
1 107 0.017579846 ubox
2 7 0.008430793 ubox
2 12 0.004926291 ubox
2 85 0.003342159 ubox
2 86 0.005458139 ubox
2 95 0.035041448 ubox
2 98 0.035161079 ubox
2 101 0.036083163 ubox
2 104 0.036045657 ubox
2 107 0.011843382 ubox
3 11 0.004749421 ubox
3 85 0.004747644 ubox
7 65 0.994360579 ubox
7 91 0.004058144 ubox
8 64 0.999029374 ubox
9 63 0.999771509 ubox
10 62 0.999507008 ubox
11 41 0.003615905 ubox
11 60 0.003236433 ubox
11 61 0.999350665 ubox
11 66 0.003904566 ubox
12 59 0.003440959 ubox
12 60 0.998542916 ubox
12 65 0.004177364 ubox
13 18 0.007698662 ubox
13 19 0.039591684 ubox
13 26 0.005084249 ubox
13 29 0.013713496 ubox
13 36 0.015871207 ubox
13 38 0.004020228 ubox
13 39 0.973962757 ubox
13 64 0.004027807 ubox
14 18 0.025785349 ubox
14 19 0.013405595 ubox
14 26 0.004190014 ubox
14 29 0.021847370 ubox
14 35 0.015925241 ubox
14 38 0.974968670 ubox
14 39 0.004102233 ubox
14 63 0.003993693 ubox
15 24 0.021131309 ubox
15 27 0.007542810 ubox
15 34 0.015902739 ubox
15 37 0.973399939 ubox
16 35 0.023975468 ubox
17 26 0.975705923 ubox
17 29 0.045540218 ubox
17 35 0.006114854 ubox
17 36 0.021003740 ubox
17 38 0.003865966 ubox
17 39 0.003265869 ubox
17 62 0.003310034 ubox
18 22 0.004625791 ubox
18 23 0.006934148 ubox
18 24 0.004840101 ubox
18 25 0.978330492 ubox
18 28 0.045765644 ubox
18 33 0.005304556 ubox
18 37 0.003362162 ubox
18 61 0.004346658 ubox
19 24 0.977362435 ubox
19 27 0.045766768 ubox
19 34 0.018607058 ubox
19 60 0.004370667 ubox
24 29 0.008080348 ubox
24 36 0.118169698 ubox
24 38 0.059044410 ubox
24 39 0.081660072 ubox
25 35 0.118333958 ubox
26 34 0.118343906 ubox
26 37 0.148808599 ubox
27 35 0.003324801 ubox
27 36 0.988574531 ubox
28 35 0.989316014 ubox
29 34 0.987609062 ubox
29 37 0.003281366 ubox
30 35 0.003774616 ubox
34 39 0.005408827 ubox
38 59 0.007948823 ubox
39 58 0.007965854 ubox
40 57 0.007438483 ubox
41 56 0.006738716 ubox
41 57 0.003377939 ubox
41 62 0.003890083 ubox
42 55 0.005554849 ubox
42 56 0.004416840 ubox
43 55 0.005236554 ubox
44 54 0.005844262 ubox
44 58 0.003208681 ubox
44 59 0.997920318 ubox
45 58 0.999924418 ubox
45 59 0.003625762 ubox
46 57 0.999359850 ubox
47 56 0.998598696 ubox
48 55 0.998653369 ubox
49 54 0.997167211 ubox
60 95 0.003485437 ubox
62 92 0.016319501 ubox
63 91 0.017611666 ubox
64 90 0.017615196 ubox
69 78 0.003808858 ubox
69 85 0.004446822 ubox
69 86 0.983062353 ubox
69 101 0.034237052 ubox
69 104 0.023874604 ubox
69 107 0.014212997 ubox
70 77 0.003795182 ubox
70 84 0.003499953 ubox
70 85 0.983959716 ubox
71 76 0.003586456 ubox
71 84 0.984096245 ubox
72 83 0.984705431 ubox
72 98 0.104174322 ubox
72 101 0.071398246 ubox
72 104 0.117456739 ubox
72 107 0.019392476 ubox
73 82 0.984227760 ubox
73 97 0.104283499 ubox
73 100 0.071467125 ubox
73 103 0.117574771 ubox
73 106 0.019611165 ubox
74 81 0.983133563 ubox
74 82 0.004055663 ubox
74 96 0.104349757 ubox
74 99 0.071491952 ubox
74 102 0.117634849 ubox
74 105 0.019698523 ubox
75 80 0.977584731 ubox
75 95 0.104402736 ubox
75 98 0.071530889 ubox
75 101 0.117705812 ubox
75 104 0.019721744 ubox
76 93 0.055766662 ubox
76 94 0.088055258 ubox
76 97 0.070836367 ubox
76 100 0.117142037 ubox
76 103 0.019585265 ubox
77 92 0.080329715 ubox
77 93 0.065112266 ubox
77 94 0.003230310 ubox
77 96 0.065943173 ubox
77 99 0.111152045 ubox
77 100 0.003826653 ubox
77 102 0.018178539 ubox
78 91 0.097947982 ubox
79 86 0.003940408 ubox
79 95 0.047413649 ubox
79 98 0.075054464 ubox
79 101 0.005894470 ubox
80 91 0.014180405 ubox
83 91 0.057588629 ubox
84 89 0.003835975 ubox
84 90 0.057117182 ubox
84 91 0.005127061 ubox
84 92 0.009726260 ubox
84 93 0.111382843 ubox
84 94 0.006330414 ubox
85 89 0.047584443 ubox
85 90 0.005065308 ubox
85 91 0.009264889 ubox
85 92 0.121859823 ubox
85 93 0.005272284 ubox
86 91 0.122421127 ubox
91 95 0.042376748 ubox
91 98 0.102178640 ubox
91 101 0.044826752 ubox
91 104 0.034695854 ubox
91 107 0.010265422 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
