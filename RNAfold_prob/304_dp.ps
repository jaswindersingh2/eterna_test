%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (304)
} def

/sequence { (\
GGAAAAAAGUGCAAGAUCGAAGGAUCAGUCGGGACGAGGAGGCGAAGGGCUCGGUCGGGACAAGCACACGAUGUCUUCGGACAUCGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.008584495 ubox
1 67 0.004106004 ubox
1 69 0.003204927 ubox
1 95 0.067482553 ubox
1 98 0.067954924 ubox
1 101 0.069534076 ubox
1 104 0.069932470 ubox
1 107 0.017661322 ubox
2 69 0.003383826 ubox
2 95 0.035623513 ubox
2 98 0.035774791 ubox
2 101 0.036560552 ubox
2 104 0.036455965 ubox
2 107 0.011896911 ubox
3 10 0.007503501 ubox
9 61 0.005047604 ubox
9 65 0.004614815 ubox
9 67 0.996611427 ubox
9 69 0.009162547 ubox
9 95 0.014562605 ubox
9 98 0.014909841 ubox
9 101 0.015076019 ubox
9 104 0.015173776 ubox
9 107 0.005302767 ubox
10 60 0.005035576 ubox
10 64 0.004381713 ubox
10 66 0.997871876 ubox
10 68 0.009271864 ubox
10 94 0.014027061 ubox
10 96 0.008420866 ubox
10 97 0.013676445 ubox
10 99 0.007815379 ubox
10 100 0.013842686 ubox
10 102 0.007864246 ubox
10 103 0.013912551 ubox
10 105 0.006593379 ubox
10 106 0.004911745 ubox
11 65 0.998578343 ubox
11 67 0.009060328 ubox
11 95 0.010029110 ubox
11 98 0.009498427 ubox
11 101 0.009583393 ubox
11 104 0.007422227 ubox
12 58 0.004688680 ubox
12 64 0.997541505 ubox
12 91 0.006678190 ubox
13 29 0.003951821 ubox
14 29 0.003373794 ubox
15 26 0.998119792 ubox
15 30 0.011365801 ubox
15 56 0.007557089 ubox
15 61 0.014709550 ubox
16 25 0.999102697 ubox
16 29 0.011358180 ubox
16 55 0.007565597 ubox
17 23 0.005082952 ubox
17 24 0.999224511 ubox
17 28 0.011059470 ubox
17 32 0.008562183 ubox
17 54 0.007561476 ubox
17 58 0.008930850 ubox
17 60 0.015336143 ubox
18 22 0.009265753 ubox
18 23 0.999085545 ubox
18 31 0.012758788 ubox
18 53 0.007562883 ubox
18 57 0.009085149 ubox
18 59 0.015442784 ubox
19 26 0.016143116 ubox
19 30 0.012918127 ubox
19 52 0.007492929 ubox
19 56 0.008998699 ubox
20 25 0.014771488 ubox
20 29 0.012716480 ubox
20 51 0.006027638 ubox
20 55 0.008784403 ubox
21 51 0.003725922 ubox
22 50 0.005210130 ubox
23 50 0.003715446 ubox
23 52 0.007104265 ubox
23 56 0.015471867 ubox
24 51 0.006985431 ubox
24 55 0.015528799 ubox
25 49 0.008393761 ubox
25 54 0.015562403 ubox
26 48 0.008672623 ubox
26 53 0.015534281 ubox
27 51 0.014617552 ubox
28 35 0.007202148 ubox
28 43 0.005805656 ubox
28 50 0.014835475 ubox
28 61 0.986980442 ubox
28 65 0.012257399 ubox
28 67 0.004235361 ubox
29 34 0.007016280 ubox
29 37 0.016103938 ubox
29 42 0.005796675 ubox
29 45 0.009241226 ubox
29 49 0.014801548 ubox
29 54 0.003529998 ubox
29 58 0.026144050 ubox
29 59 0.051818967 ubox
29 60 0.987501236 ubox
29 62 0.007760625 ubox
29 63 0.012435327 ubox
29 64 0.012093706 ubox
29 66 0.004200158 ubox
30 36 0.017218179 ubox
30 38 0.003297775 ubox
30 41 0.005785720 ubox
30 44 0.009310213 ubox
30 48 0.014760479 ubox
30 53 0.004333977 ubox
30 57 0.034158025 ubox
30 58 0.082659408 ubox
30 59 0.983730256 ubox
30 64 0.004167352 ubox
31 35 0.016205708 ubox
31 43 0.009262122 ubox
31 52 0.004362268 ubox
31 56 0.035309926 ubox
31 61 0.072468679 ubox
32 51 0.004314295 ubox
32 55 0.032535252 ubox
32 56 0.143675811 ubox
32 61 0.064698176 ubox
33 43 0.005583316 ubox
33 50 0.004275421 ubox
33 55 0.087425122 ubox
33 56 0.964639835 ubox
33 61 0.010636728 ubox
34 55 0.967025206 ubox
35 41 0.005266596 ubox
35 42 0.005955108 ubox
35 44 0.012132125 ubox
35 53 0.190068749 ubox
35 54 0.954929676 ubox
35 57 0.183942990 ubox
35 58 0.031659906 ubox
36 43 0.012067594 ubox
36 52 0.223108426 ubox
36 55 0.006127970 ubox
36 56 0.190559617 ubox
37 51 0.218121853 ubox
37 55 0.188744231 ubox
38 43 0.003789202 ubox
38 50 0.209309014 ubox
38 51 0.026631036 ubox
38 52 0.141969217 ubox
38 56 0.003229739 ubox
39 50 0.023974676 ubox
39 51 0.063714290 ubox
39 52 0.953343257 ubox
40 51 0.962484588 ubox
41 50 0.959827961 ubox
41 51 0.135841128 ubox
41 52 0.012102142 ubox
42 50 0.182356603 ubox
43 47 0.035800664 ubox
43 48 0.945977852 ubox
43 49 0.208429366 ubox
43 53 0.006201831 ubox
44 52 0.006329919 ubox
45 51 0.006132776 ubox
53 61 0.006573824 ubox
54 61 0.008534591 ubox
55 60 0.007915433 ubox
57 61 0.004691529 ubox
65 91 0.006333993 ubox
67 91 0.003641167 ubox
69 86 0.980695660 ubox
69 91 0.005414549 ubox
70 85 0.999897087 ubox
71 84 0.999725960 ubox
72 83 0.999582114 ubox
73 82 0.999965280 ubox
74 80 0.007345819 ubox
74 81 0.999741879 ubox
75 79 0.013562143 ubox
75 80 0.998906849 ubox
76 80 0.003167087 ubox
77 87 0.003786114 ubox
78 86 0.003966295 ubox
79 85 0.003953293 ubox
85 91 0.003541155 ubox
86 95 0.018827225 ubox
86 98 0.007639839 ubox
86 101 0.006117996 ubox
86 104 0.005276420 ubox
91 95 0.043082344 ubox
91 98 0.103826264 ubox
91 101 0.045523822 ubox
91 104 0.035213267 ubox
91 107 0.010417785 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
