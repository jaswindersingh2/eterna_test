%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAAGCUGCGUAUCUAAUGAUACGGUGACGCACUAAUGUGCACGACUAAUGUCGGUUGCCGCAGCGCUGCGGUUCGCUGCAGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

/coor [
[78.98535919 207.84059143]
[83.78205109 193.62820435]
[91.27326202 180.63275146]
[101.16795349 169.35911560]
[113.08171082 160.24525452]
[126.55168915 153.64527893]
[141.05456543 149.81556702]
[156.02537537 148.90487671]
[143.99353027 139.94749451]
[131.96168518 130.99012756]
[119.92983246 122.03274536]
[107.89798737 113.07536316]
[92.97566223 111.55083466]
[79.38104248 117.89011383]
[65.78642273 124.22938538]
[52.19181061 130.56866455]
[38.59719086 136.90792847]
[29.63938141 150.64436340]
[13.28127766 149.48483276]
[6.35069895 134.62216187]
[15.97722816 121.34578705]
[32.25791931 123.31331635]
[45.85253525 116.97404480]
[59.44715118 110.63476562]
[73.04177094 104.29549408]
[86.63638306 97.95622253]
[91.14697266 83.65046692]
[83.64697266 70.66008759]
[76.14697266 57.66970444]
[68.64697266 44.67932510]
[61.14697266 31.68894196]
[53.64697266 18.69856071]
[43.83905792 7.34933996]
[32.07282639 -1.95419252]
[20.30658913 -11.25772476]
[8.54035473 -20.56125641]
[-7.75523043 -22.40135002]
[-14.06053448 -37.53988266]
[-3.88920140 -50.40362930]
[12.29537392 -47.75947189]
[17.84388733 -32.32749176]
[29.61012268 -23.02396011]
[41.37635803 -13.72042751]
[53.14259338 -4.41689491]
[59.63778305 -8.16689491]
[79.12335205 -19.41689491]
[76.94937897 -34.25851822]
[74.77539825 -49.10014343]
[72.60141754 -63.94176865]
[62.01118851 -76.46291351]
[67.81356812 -91.80124664]
[84.03956604 -94.17800140]
[93.99726868 -81.14818573]
[87.44304657 -66.11574554]
[89.61701965 -51.27412033]
[91.79100037 -36.43249893]
[93.96498108 -21.59087372]
[66.63735199 11.19856167]
[74.13735199 24.18894196]
[81.63735199 37.17932510]
[89.13735199 50.16970444]
[96.63735199 63.16008759]
[104.13735199 76.15046692]
[116.85536194 101.04351807]
[128.88720703 110.00089264]
[140.91906738 118.95827484]
[152.95091248 127.91564941]
[164.98275757 136.87303162]
[179.62719727 140.11962891]
[194.31730652 137.08636475]
[209.00741577 134.05310059]
[223.69752502 131.01983643]
[238.38763428 127.98657227]
[253.07774353 124.95330811]
[267.76785278 121.92004395]
[279.65203857 110.61968994]
[295.30181885 115.52040863]
[298.61801147 131.58076477]
[286.18920898 142.27923584]
[270.80111694 136.61015320]
[256.11099243 139.64341736]
[241.42089844 142.67668152]
[226.73078918 145.70994568]
[212.04067993 148.74320984]
[197.35057068 151.77647400]
[182.66046143 154.80973816]
[195.84500122 161.96289062]
[207.37037659 171.56320190]
[216.78881836 183.23765564]
[223.73440552 196.53273010]
[227.93730164 210.93188477]
[229.23423767 225.87570190]
[227.57479858 240.78363037]
[223.02348328 255.07647705]
[215.75709534 268.19897461]
[206.05795288 279.64126587]
[194.30285645 288.95886230]
[180.94848633 295.78976440]
[166.51368713 299.86856079]
[151.55924988 301.03680420]
[136.66616821 299.24911499]
[122.41301727 294.57495117]
[109.35356903 287.19586182]
[97.99517059 277.39859009]
[88.77910614 265.56372070]
[82.06341553 252.15104675]
[78.10901642 237.68168640]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 68]
[9 67]
[10 66]
[11 65]
[12 64]
[13 26]
[14 25]
[15 24]
[16 23]
[17 22]
[27 63]
[28 62]
[29 61]
[30 60]
[31 59]
[32 58]
[33 44]
[34 43]
[35 42]
[36 41]
[46 57]
[47 56]
[48 55]
[49 54]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
