%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (692)
} def

/sequence { (\
GGAAAGGCGUCGCAAAGGGAGGCCACGGGCGAACUAAAUGAUCACCCAGCCUGGCGGAAACACCUGGCACAAAGAUUCGUCUUUGUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 24 0.003919375 ubox
1 26 0.044269368 ubox
1 47 0.005863672 ubox
1 51 0.009291605 ubox
1 68 0.005816923 ubox
1 70 0.007829041 ubox
1 78 0.022588703 ubox
1 82 0.006379317 ubox
1 86 0.010190259 ubox
1 95 0.241827459 ubox
1 98 0.243458061 ubox
1 101 0.249057005 ubox
1 104 0.250332924 ubox
1 107 0.063225116 ubox
2 24 0.004047657 ubox
2 26 0.159042006 ubox
2 46 0.005273164 ubox
2 50 0.009279518 ubox
2 68 0.011511274 ubox
2 70 0.004048999 ubox
2 77 0.021889864 ubox
2 78 0.032686556 ubox
2 81 0.007392187 ubox
2 86 0.010582196 ubox
2 95 0.125903988 ubox
2 98 0.126417166 ubox
2 101 0.129139884 ubox
2 104 0.128728607 ubox
2 107 0.042019577 ubox
3 76 0.020266692 ubox
3 77 0.032309046 ubox
3 80 0.006804706 ubox
3 84 0.008915288 ubox
3 86 0.010556910 ubox
4 76 0.028111836 ubox
4 83 0.009184545 ubox
4 86 0.009740213 ubox
5 65 0.012284873 ubox
5 82 0.009240801 ubox
5 86 0.009736994 ubox
6 23 0.004409432 ubox
6 24 0.998521218 ubox
6 26 0.006972647 ubox
6 64 0.012366364 ubox
6 81 0.009050223 ubox
6 95 0.009920748 ubox
6 98 0.010165794 ubox
6 101 0.009987035 ubox
6 104 0.009788021 ubox
6 107 0.003413621 ubox
7 23 0.999807458 ubox
7 24 0.004243671 ubox
7 63 0.012365167 ubox
7 80 0.008984014 ubox
8 21 0.009743694 ubox
8 22 0.999614671 ubox
8 79 0.008985488 ubox
9 23 0.003802884 ubox
9 26 0.003891111 ubox
9 61 0.012086328 ubox
9 78 0.008445421 ubox
10 18 0.009221056 ubox
10 19 0.031935187 ubox
10 20 0.996719583 ubox
10 21 0.003427306 ubox
10 22 0.003835989 ubox
10 25 0.003860438 ubox
10 57 0.003950204 ubox
10 60 0.011531611 ubox
10 75 0.004287245 ubox
11 17 0.012509888 ubox
11 18 0.053939957 ubox
11 19 0.997857391 ubox
11 21 0.004579347 ubox
11 31 0.003194463 ubox
11 56 0.007026224 ubox
11 74 0.004456479 ubox
12 23 0.004860046 ubox
12 30 0.003200345 ubox
12 55 0.007073186 ubox
13 17 0.786612569 ubox
13 18 0.233315848 ubox
13 19 0.006472714 ubox
13 22 0.004867082 ubox
13 29 0.003191460 ubox
13 54 0.006997905 ubox
13 57 0.009572764 ubox
13 74 0.004770886 ubox
17 24 0.009172060 ubox
17 55 0.003939740 ubox
18 23 0.009173617 ubox
20 52 0.012196528 ubox
21 51 0.012902991 ubox
22 50 0.012921709 ubox
23 49 0.012913859 ubox
24 91 0.004237007 ubox
25 86 0.008569127 ubox
26 49 0.012041507 ubox
26 53 0.011688345 ubox
26 85 0.008240514 ubox
26 91 0.060723976 ubox
27 35 0.004885248 ubox
27 46 0.016414497 ubox
27 47 0.998475045 ubox
27 52 0.012476346 ubox
27 82 0.012903372 ubox
27 95 0.004714137 ubox
27 98 0.004730408 ubox
27 101 0.004818981 ubox
27 104 0.004829185 ubox
28 34 0.005137342 ubox
28 45 0.016335710 ubox
28 46 0.999569920 ubox
28 47 0.008514848 ubox
28 51 0.012599608 ubox
28 81 0.013975070 ubox
29 45 0.999454141 ubox
29 46 0.007988843 ubox
29 50 0.012600853 ubox
29 80 0.014015125 ubox
30 40 0.007331115 ubox
30 49 0.012597752 ubox
30 79 0.014048206 ubox
31 39 0.005357506 ubox
31 43 0.997459851 ubox
31 78 0.014044049 ubox
32 39 0.006712392 ubox
32 42 0.982807334 ubox
32 77 0.013456474 ubox
33 39 0.023335908 ubox
33 42 0.041386048 ubox
33 76 0.011467529 ubox
34 40 0.937699074 ubox
34 74 0.009133189 ubox
35 40 0.032061724 ubox
35 41 0.032112021 ubox
35 73 0.008827627 ubox
39 48 0.008362611 ubox
39 71 0.003733656 ubox
40 47 0.009220366 ubox
40 70 0.003780676 ubox
40 77 0.004365856 ubox
41 76 0.007743028 ubox
42 75 0.009483009 ubox
43 74 0.009484823 ubox
49 68 0.998381169 ubox
50 57 0.003735716 ubox
50 67 0.999489952 ubox
51 56 0.003741736 ubox
51 66 0.996741260 ubox
51 67 0.007006230 ubox
52 62 0.013141751 ubox
52 66 0.008738305 ubox
52 69 0.011551885 ubox
53 61 0.013335359 ubox
53 63 0.013914932 ubox
53 64 0.995002538 ubox
53 65 0.044832836 ubox
53 68 0.023058132 ubox
54 61 0.007870382 ubox
54 63 0.997564748 ubox
54 64 0.047593709 ubox
54 65 0.005406556 ubox
54 68 0.009958593 ubox
55 66 0.024259241 ubox
55 67 0.009026067 ubox
56 61 0.966756986 ubox
56 63 0.045542297 ubox
56 64 0.015797618 ubox
56 65 0.025276714 ubox
57 61 0.046758905 ubox
57 63 0.015965442 ubox
57 64 0.025330879 ubox
57 65 0.004511259 ubox
64 91 0.006568142 ubox
65 90 0.006638562 ubox
68 91 0.003741750 ubox
69 80 0.007195656 ubox
69 86 0.948711935 ubox
70 74 0.003228898 ubox
70 79 0.008429626 ubox
70 85 0.996892093 ubox
71 84 0.996840343 ubox
72 83 0.996290180 ubox
73 82 0.997076828 ubox
74 81 0.997078114 ubox
74 95 0.006699832 ubox
74 98 0.008785715 ubox
74 104 0.004587948 ubox
75 80 0.883711905 ubox
76 93 0.008206232 ubox
76 96 0.003751160 ubox
76 97 0.003471877 ubox
76 103 0.006159958 ubox
76 106 0.003623042 ubox
77 92 0.008908565 ubox
77 96 0.003376135 ubox
77 102 0.006859978 ubox
77 103 0.003788725 ubox
77 105 0.004222956 ubox
78 91 0.008965322 ubox
79 95 0.012912619 ubox
79 98 0.006893078 ubox
79 101 0.037929412 ubox
79 104 0.024753024 ubox
79 107 0.007396190 ubox
80 92 0.031584195 ubox
80 94 0.011420569 ubox
80 97 0.006297621 ubox
80 100 0.037726135 ubox
80 103 0.024600032 ubox
80 106 0.007413040 ubox
81 91 0.034110752 ubox
82 90 0.033947761 ubox
82 91 0.003342672 ubox
82 92 0.009925269 ubox
82 93 0.005786196 ubox
83 89 0.033111351 ubox
83 90 0.004948532 ubox
83 91 0.010180030 ubox
83 92 0.006263323 ubox
83 93 0.003623154 ubox
83 94 0.004329916 ubox
83 97 0.041155656 ubox
83 100 0.026503487 ubox
83 103 0.011167370 ubox
83 106 0.007479424 ubox
84 88 0.027589630 ubox
84 89 0.005760884 ubox
84 90 0.010153808 ubox
84 91 0.006257646 ubox
84 92 0.003813926 ubox
84 93 0.004645205 ubox
84 96 0.044179261 ubox
84 99 0.028347587 ubox
84 102 0.013159910 ubox
84 105 0.009380348 ubox
85 95 0.045540822 ubox
85 98 0.029139203 ubox
85 101 0.014001993 ubox
85 104 0.010138440 ubox
86 90 0.005058657 ubox
86 91 0.008837173 ubox
86 92 0.008148447 ubox
86 93 0.010880965 ubox
86 94 0.044881318 ubox
86 96 0.003783157 ubox
86 97 0.028545775 ubox
86 100 0.013771205 ubox
86 103 0.010013758 ubox
91 95 0.054369123 ubox
91 98 0.119098683 ubox
91 101 0.046079911 ubox
91 104 0.029884690 ubox
91 107 0.008701226 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
