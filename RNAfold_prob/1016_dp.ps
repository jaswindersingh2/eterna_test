%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1016)
} def

/sequence { (\
GGAAAAGUGAAACACAAGAGCAAAGCUCAAGAUGCAAAGCAUCAAGCAGAAACUGCAAGUCAAAGACAUGAGAACUUCGGUUCUCAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.008250827 ubox
1 13 0.026786890 ubox
1 15 0.022448744 ubox
1 21 0.004757959 ubox
1 56 0.004440518 ubox
1 61 0.057485717 ubox
1 67 0.045313196 ubox
1 69 0.006751422 ubox
1 85 0.007831816 ubox
1 95 0.303938924 ubox
1 98 0.307691583 ubox
1 101 0.328456484 ubox
1 104 0.338216690 ubox
1 107 0.085290120 ubox
2 8 0.007650797 ubox
2 13 0.018629142 ubox
2 15 0.015507787 ubox
2 43 0.003457064 ubox
2 60 0.045259618 ubox
2 61 0.079369527 ubox
2 67 0.024879373 ubox
2 69 0.004948483 ubox
2 84 0.003727311 ubox
2 85 0.009141504 ubox
2 95 0.160227306 ubox
2 98 0.162091857 ubox
2 101 0.169187444 ubox
2 104 0.169288507 ubox
2 107 0.055232565 ubox
3 8 0.012694402 ubox
3 60 0.074403204 ubox
3 69 0.010097929 ubox
3 84 0.007420397 ubox
4 8 0.007349667 ubox
4 60 0.005347822 ubox
4 69 0.009280064 ubox
5 60 0.004191954 ubox
5 69 0.010028909 ubox
5 82 0.004410774 ubox
6 27 0.006418533 ubox
6 54 0.004709253 ubox
6 60 0.005155340 ubox
6 69 0.009643777 ubox
6 81 0.004778224 ubox
7 13 0.094422368 ubox
7 15 0.707938608 ubox
7 21 0.003582030 ubox
7 26 0.006932459 ubox
7 40 0.004475571 ubox
7 53 0.004842217 ubox
7 61 0.006516400 ubox
7 67 0.049877469 ubox
7 69 0.017655035 ubox
7 95 0.250408614 ubox
7 98 0.287629454 ubox
7 101 0.268579863 ubox
7 104 0.266352918 ubox
7 107 0.093005758 ubox
8 12 0.085223070 ubox
8 14 0.708364168 ubox
8 16 0.094073215 ubox
8 17 0.028114368 ubox
8 20 0.003538398 ubox
8 25 0.006874352 ubox
8 29 0.004259503 ubox
8 39 0.004457454 ubox
8 52 0.004680200 ubox
8 57 0.004560921 ubox
8 58 0.005001468 ubox
8 62 0.064761634 ubox
8 63 0.004208831 ubox
8 64 0.004054029 ubox
8 65 0.003571198 ubox
8 66 0.048755444 ubox
8 68 0.022585254 ubox
8 79 0.004979845 ubox
8 86 0.007926750 ubox
8 87 0.015830938 ubox
8 88 0.018887310 ubox
8 89 0.017457506 ubox
8 90 0.018041639 ubox
8 91 0.011889210 ubox
8 92 0.019352738 ubox
8 93 0.020184693 ubox
8 94 0.242159165 ubox
8 96 0.169860867 ubox
8 97 0.265064461 ubox
8 99 0.153204455 ubox
8 100 0.247114720 ubox
8 102 0.145776941 ubox
8 103 0.244634282 ubox
8 105 0.121596910 ubox
8 106 0.086292155 ubox
9 13 0.698684893 ubox
9 15 0.130782048 ubox
9 28 0.005241478 ubox
9 61 0.071738807 ubox
9 67 0.022803941 ubox
9 78 0.005108215 ubox
9 85 0.006726721 ubox
9 95 0.201494893 ubox
9 98 0.183575152 ubox
9 101 0.177479330 ubox
9 104 0.136946720 ubox
9 107 0.017041018 ubox
10 27 0.004793847 ubox
10 60 0.066263097 ubox
10 69 0.003452208 ubox
10 77 0.005046331 ubox
10 84 0.005099862 ubox
11 60 0.004221179 ubox
11 69 0.003195931 ubox
11 76 0.004552724 ubox
12 60 0.028796499 ubox
13 18 0.006926895 ubox
13 20 0.005832422 ubox
13 34 0.005256597 ubox
13 59 0.032590721 ubox
13 65 0.009294854 ubox
13 91 0.105776514 ubox
14 33 0.005224742 ubox
14 60 0.039813587 ubox
15 31 0.011352646 ubox
15 59 0.041882729 ubox
15 65 0.007946158 ubox
15 91 0.081582725 ubox
16 69 0.004612538 ubox
17 27 0.005583063 ubox
17 69 0.005441504 ubox
17 84 0.004627387 ubox
18 26 0.005889338 ubox
18 28 0.998032452 ubox
18 43 0.004280720 ubox
18 83 0.004935949 ubox
18 95 0.005584080 ubox
18 98 0.005540413 ubox
18 101 0.005683198 ubox
18 104 0.005615185 ubox
19 27 0.999187467 ubox
19 42 0.004268852 ubox
19 82 0.004933942 ubox
20 26 0.999443823 ubox
20 40 0.004957797 ubox
20 56 0.008926747 ubox
20 81 0.004933015 ubox
21 25 0.992179090 ubox
21 39 0.004958415 ubox
21 55 0.008935585 ubox
21 80 0.004920523 ubox
22 54 0.008617907 ubox
23 77 0.004408763 ubox
24 76 0.004516325 ubox
25 35 0.005044894 ubox
25 47 0.009570008 ubox
25 75 0.004496191 ubox
26 34 0.005049744 ubox
26 46 0.009589801 ubox
26 49 0.006091191 ubox
26 72 0.004693989 ubox
26 91 0.004792604 ubox
27 45 0.009544681 ubox
27 48 0.006037719 ubox
27 71 0.004740373 ubox
27 90 0.004544251 ubox
27 92 0.009396136 ubox
28 46 0.005435131 ubox
28 70 0.004742942 ubox
28 91 0.010471250 ubox
29 69 0.004906051 ubox
31 43 0.998350004 ubox
32 42 0.999400943 ubox
33 41 0.999439291 ubox
33 57 0.003352980 ubox
34 40 0.999853332 ubox
34 56 0.003790081 ubox
35 39 0.992585350 ubox
35 55 0.003789911 ubox
36 54 0.003451436 ubox
43 59 0.003674918 ubox
43 91 0.003795437 ubox
44 60 0.008402157 ubox
45 54 0.013479955 ubox
45 60 0.005162988 ubox
46 53 0.013860070 ubox
46 56 0.998281940 ubox
47 55 0.999338229 ubox
48 54 0.996857235 ubox
49 53 0.975009691 ubox
49 54 0.005959364 ubox
49 56 0.006062841 ubox
52 60 0.005633146 ubox
53 59 0.006133497 ubox
53 65 0.003802993 ubox
54 58 0.005562898 ubox
54 64 0.003782898 ubox
55 67 0.003539559 ubox
56 65 0.004683446 ubox
57 69 0.058314161 ubox
57 77 0.003165314 ubox
58 69 0.049847278 ubox
58 76 0.003327729 ubox
59 67 0.941149696 ubox
59 69 0.006204544 ubox
59 75 0.003376500 ubox
59 95 0.072371772 ubox
59 98 0.033713510 ubox
59 101 0.006952233 ubox
59 104 0.004801013 ubox
60 64 0.005857974 ubox
60 65 0.011627000 ubox
60 66 0.941829570 ubox
60 68 0.007666663 ubox
60 71 0.006506746 ubox
60 92 0.029799521 ubox
60 93 0.003975191 ubox
60 94 0.070073280 ubox
60 96 0.004526198 ubox
60 97 0.032600377 ubox
60 100 0.006594247 ubox
60 103 0.004532331 ubox
61 65 0.934184634 ubox
61 70 0.008142494 ubox
61 91 0.032124613 ubox
62 69 0.008854419 ubox
63 69 0.004856949 ubox
64 69 0.011016789 ubox
65 95 0.005516445 ubox
65 98 0.003217664 ubox
67 91 0.015739746 ubox
69 86 0.896945278 ubox
69 87 0.041219834 ubox
69 88 0.011326300 ubox
69 89 0.008344091 ubox
69 90 0.006024866 ubox
70 78 0.003540140 ubox
70 85 0.999528804 ubox
71 77 0.003480040 ubox
71 84 0.999699398 ubox
72 83 0.999928710 ubox
73 82 0.999583545 ubox
74 81 0.999053388 ubox
75 79 0.012352857 ubox
75 80 0.998413287 ubox
76 80 0.004071890 ubox
79 95 0.003314491 ubox
81 93 0.003497547 ubox
82 92 0.004871519 ubox
83 91 0.005148776 ubox
84 90 0.004970338 ubox
84 92 0.006143532 ubox
85 91 0.008056351 ubox
91 95 0.070273743 ubox
91 98 0.140550952 ubox
91 101 0.045582284 ubox
91 104 0.015319449 ubox
91 107 0.003615791 ubox
1 95 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
