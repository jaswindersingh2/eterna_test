%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (753)
} def

/sequence { (\
GGAAAGAGGCGGCAAAGGCGGCUCAAGCGGGUGCAAAAAGGACGCGCACUGGACGCAAAAGGGUGCAGUCAGCUCUUCGGAGCUGAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 24 0.016323901 ubox
1 28 0.005298968 ubox
1 49 0.003388058 ubox
1 70 0.006269122 ubox
1 95 0.241619367 ubox
1 98 0.243249664 ubox
1 101 0.248973131 ubox
1 104 0.250106491 ubox
1 107 0.063147919 ubox
2 23 0.008535278 ubox
2 24 0.028497658 ubox
2 28 0.008483451 ubox
2 69 0.004089024 ubox
2 70 0.006205683 ubox
2 95 0.127493785 ubox
2 98 0.128018516 ubox
2 101 0.130781877 ubox
2 104 0.130287201 ubox
2 107 0.042514090 ubox
3 23 0.022460603 ubox
3 69 0.005314520 ubox
4 69 0.003187680 ubox
5 23 0.011622750 ubox
5 69 0.003184843 ubox
6 22 0.012385338 ubox
6 23 0.003870737 ubox
6 24 0.952243241 ubox
6 95 0.041543487 ubox
6 98 0.041764543 ubox
6 101 0.041663037 ubox
6 104 0.040813760 ubox
6 107 0.014226873 ubox
7 23 0.946547498 ubox
8 19 0.004911865 ubox
8 22 0.917466436 ubox
8 23 0.287858427 ubox
8 24 0.092272954 ubox
8 95 0.019162820 ubox
8 98 0.019158552 ubox
8 101 0.019109558 ubox
8 104 0.018967225 ubox
8 107 0.006617174 ubox
9 19 0.022395240 ubox
9 22 0.396527988 ubox
9 23 0.010506463 ubox
9 66 0.010539187 ubox
10 17 0.005238580 ubox
10 18 0.022406671 ubox
10 20 0.886395400 ubox
10 21 0.459989737 ubox
10 65 0.010565095 ubox
11 19 0.859702169 ubox
11 23 0.004657275 ubox
11 64 0.010490224 ubox
12 19 0.509002026 ubox
12 22 0.005310867 ubox
13 17 0.724495768 ubox
13 18 0.551674491 ubox
13 21 0.005303931 ubox
13 62 0.010373481 ubox
18 56 0.010614709 ubox
19 55 0.010619913 ubox
20 54 0.010520240 ubox
20 95 0.004397040 ubox
22 52 0.007482041 ubox
23 51 0.006553735 ubox
23 52 0.005695005 ubox
23 92 0.026670736 ubox
24 51 0.007496782 ubox
24 91 0.036829672 ubox
25 50 0.007388393 ubox
27 45 0.010386296 ubox
27 47 0.998534141 ubox
27 95 0.003390856 ubox
27 98 0.004401267 ubox
27 101 0.004457588 ubox
27 104 0.004495446 ubox
28 44 0.010396951 ubox
28 46 0.999589568 ubox
28 52 0.005290837 ubox
29 43 0.010084270 ubox
29 45 0.999400525 ubox
29 47 0.012020377 ubox
29 50 0.003193762 ubox
30 43 0.008841103 ubox
30 45 0.005410328 ubox
30 49 0.003278331 ubox
30 50 0.005849231 ubox
30 95 0.003245105 ubox
30 98 0.003250954 ubox
30 101 0.003311040 ubox
31 43 0.999282490 ubox
31 45 0.012643807 ubox
31 47 0.018907572 ubox
31 49 0.006051678 ubox
32 39 0.005048793 ubox
32 40 0.003601583 ubox
32 41 0.016013985 ubox
32 42 0.996595847 ubox
32 44 0.012776050 ubox
32 46 0.018939037 ubox
32 48 0.006131507 ubox
33 43 0.012811159 ubox
33 45 0.018985644 ubox
33 47 0.006189241 ubox
34 40 0.976317566 ubox
34 41 0.119169810 ubox
34 44 0.018972654 ubox
34 46 0.006184497 ubox
46 66 0.004145935 ubox
47 65 0.004194557 ubox
48 64 0.004374903 ubox
48 69 0.680780321 ubox
49 63 0.004390646 ubox
49 68 0.995833688 ubox
49 91 0.003849015 ubox
50 62 0.004296983 ubox
50 67 0.998932000 ubox
50 90 0.003308877 ubox
51 66 0.999457987 ubox
52 66 0.010907106 ubox
52 70 0.004045043 ubox
53 64 0.996605895 ubox
53 69 0.005117887 ubox
54 61 0.008418416 ubox
54 62 0.014134119 ubox
54 63 0.999029851 ubox
54 65 0.025030421 ubox
54 68 0.005970066 ubox
55 64 0.025766853 ubox
55 66 0.014960806 ubox
56 61 0.931201631 ubox
56 62 0.088768857 ubox
56 63 0.025856724 ubox
56 65 0.015030642 ubox
57 64 0.013728252 ubox
68 95 0.004141758 ubox
69 86 0.684225063 ubox
69 87 0.031371464 ubox
69 88 0.006773003 ubox
69 89 0.004861118 ubox
69 90 0.003512491 ubox
70 85 0.998533574 ubox
70 91 0.003405622 ubox
71 84 0.999608857 ubox
72 83 0.999988407 ubox
73 82 0.999989271 ubox
74 80 0.005758244 ubox
74 81 0.999740060 ubox
75 79 0.012834385 ubox
75 80 0.998927226 ubox
76 80 0.003170512 ubox
85 95 0.003942522 ubox
91 95 0.054761615 ubox
91 98 0.119794766 ubox
91 101 0.046257381 ubox
91 104 0.029852879 ubox
91 107 0.008684337 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
48 69 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
