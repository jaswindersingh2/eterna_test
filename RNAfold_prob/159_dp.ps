%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (159)
} def

/sequence { (\
GGAAAAAAGCGGUACGCGCGCGGACAAACUGCAAAAGCAAGGGUGCGACGGGAAGUACAAGCAAAAAAGACAUCGUUCGCGAUGUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.038624699 ubox
1 58 0.003797871 ubox
1 62 0.007947415 ubox
1 86 0.003608529 ubox
1 95 0.067801484 ubox
1 98 0.068235561 ubox
1 101 0.069799966 ubox
1 104 0.070106632 ubox
1 107 0.017701204 ubox
2 10 0.011923912 ubox
2 62 0.005701130 ubox
2 86 0.003475248 ubox
2 95 0.035782856 ubox
2 98 0.035916297 ubox
2 101 0.036677595 ubox
2 104 0.036542721 ubox
2 107 0.011924188 ubox
9 17 0.010075674 ubox
9 19 0.032852364 ubox
9 21 0.004134007 ubox
9 32 0.004811567 ubox
9 56 0.008848058 ubox
9 62 0.986872457 ubox
9 95 0.005901542 ubox
9 98 0.006736829 ubox
9 101 0.006801345 ubox
9 104 0.006851811 ubox
10 16 0.010174744 ubox
10 18 0.032917434 ubox
10 20 0.004144684 ubox
10 31 0.004816668 ubox
10 50 0.004140679 ubox
10 51 0.015941565 ubox
10 55 0.009052960 ubox
10 61 0.987527160 ubox
10 91 0.006388101 ubox
11 15 0.009525567 ubox
11 17 0.032849878 ubox
11 19 0.004129442 ubox
11 30 0.004812316 ubox
11 49 0.003791266 ubox
11 56 0.003218724 ubox
11 58 0.015436218 ubox
11 62 0.011929838 ubox
11 95 0.008637414 ubox
11 98 0.008596435 ubox
11 101 0.008772747 ubox
11 104 0.008722193 ubox
11 107 0.003299001 ubox
12 29 0.004810224 ubox
12 46 0.003559613 ubox
12 49 0.017432781 ubox
12 58 0.996318747 ubox
12 95 0.003545687 ubox
12 98 0.003518971 ubox
12 101 0.003588516 ubox
13 28 0.004646129 ubox
13 45 0.003618646 ubox
13 48 0.017484285 ubox
13 54 0.003882820 ubox
13 57 0.998476567 ubox
13 94 0.003360071 ubox
13 97 0.003336832 ubox
13 100 0.003402670 ubox
14 44 0.003626833 ubox
14 56 0.998327585 ubox
15 43 0.003627755 ubox
15 47 0.018544821 ubox
15 50 0.012426074 ubox
15 52 0.031313861 ubox
15 55 0.997083105 ubox
16 46 0.019299977 ubox
16 49 0.016153162 ubox
17 23 0.003812964 ubox
17 41 0.003423879 ubox
17 45 0.019301233 ubox
17 47 0.016927636 ubox
17 50 0.041943196 ubox
17 51 0.066428805 ubox
17 52 0.927464271 ubox
18 38 0.004205910 ubox
18 44 0.019283998 ubox
18 46 0.017014123 ubox
18 49 0.042956200 ubox
19 37 0.004216126 ubox
19 43 0.019280426 ubox
19 45 0.017013567 ubox
19 47 0.043040512 ubox
19 50 0.992985862 ubox
19 51 0.046313713 ubox
19 52 0.076720157 ubox
20 32 0.034936558 ubox
20 44 0.016888062 ubox
20 46 0.043105349 ubox
20 49 0.993276224 ubox
20 62 0.003549977 ubox
21 31 0.034993168 ubox
21 41 0.016681862 ubox
21 43 0.016847509 ubox
21 45 0.043013028 ubox
21 47 0.971692232 ubox
21 50 0.084244356 ubox
21 51 0.003549233 ubox
21 61 0.003548451 ubox
22 29 0.012139009 ubox
22 30 0.034939345 ubox
22 44 0.037731289 ubox
22 46 0.970981796 ubox
22 49 0.084063227 ubox
23 29 0.034905063 ubox
23 44 0.005481597 ubox
23 46 0.211957198 ubox
23 49 0.003920153 ubox
24 44 0.961712316 ubox
25 37 0.003523221 ubox
25 41 0.019729824 ubox
25 42 0.039044464 ubox
25 43 0.962554285 ubox
25 45 0.250527883 ubox
25 47 0.006410215 ubox
26 44 0.250756564 ubox
27 44 0.004973144 ubox
28 44 0.012692765 ubox
29 37 0.047966777 ubox
29 41 0.465747948 ubox
29 42 0.056357131 ubox
29 43 0.013561847 ubox
30 35 0.003619860 ubox
30 36 0.047878771 ubox
30 37 0.005652133 ubox
30 39 0.914626086 ubox
30 40 0.331053090 ubox
30 41 0.038882125 ubox
30 42 0.010247094 ubox
31 38 0.996627066 ubox
32 37 0.995420400 ubox
37 46 0.008791390 ubox
37 62 0.030051760 ubox
38 45 0.008803962 ubox
38 61 0.030046775 ubox
39 44 0.007658411 ubox
43 58 0.033499161 ubox
44 57 0.033583875 ubox
45 56 0.033605267 ubox
45 62 0.003582605 ubox
46 55 0.033611949 ubox
46 61 0.003581473 ubox
48 56 0.005016226 ubox
49 55 0.005190909 ubox
51 58 0.004768055 ubox
55 62 0.009007428 ubox
56 61 0.008741575 ubox
61 95 0.008711500 ubox
62 91 0.006676760 ubox
69 86 0.998553302 ubox
70 85 0.999690574 ubox
71 84 0.999972254 ubox
72 83 0.999593384 ubox
73 82 0.999745068 ubox
74 81 0.999910857 ubox
75 80 0.974034172 ubox
85 92 0.005812811 ubox
86 91 0.008807727 ubox
91 95 0.043067644 ubox
91 98 0.103808995 ubox
91 101 0.045529365 ubox
91 104 0.035225661 ubox
91 107 0.010421684 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
30 39 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
