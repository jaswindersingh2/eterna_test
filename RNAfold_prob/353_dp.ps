%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (353)
} def

/sequence { (\
GGAAAGGCCGUAGAAAAAACUACCGCAAAGCGAGGCCAGGCAGACAAAAAGUCGUACAAAAGUACGCCGUCAGACUUCGGUCUGACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.012720464 ubox
1 31 0.009742789 ubox
1 37 0.016237481 ubox
1 41 0.043244212 ubox
1 45 0.010168244 ubox
1 67 0.005812517 ubox
1 68 0.154324040 ubox
1 86 0.008022510 ubox
1 95 0.134741166 ubox
1 98 0.135591059 ubox
1 101 0.138689295 ubox
1 104 0.139315595 ubox
1 107 0.035174819 ubox
2 8 0.012720293 ubox
2 31 0.014075712 ubox
2 36 0.015956951 ubox
2 37 0.003381377 ubox
2 41 0.055348760 ubox
2 67 0.153784553 ubox
2 68 0.012663606 ubox
2 86 0.004187662 ubox
2 95 0.070915301 ubox
2 98 0.071169940 ubox
2 101 0.072689293 ubox
2 104 0.072414374 ubox
2 107 0.023629931 ubox
6 31 0.007729754 ubox
6 37 0.996873767 ubox
6 68 0.038901348 ubox
6 95 0.008066699 ubox
6 98 0.008074323 ubox
6 101 0.008056147 ubox
6 104 0.007893064 ubox
7 26 0.042545135 ubox
7 31 0.008790391 ubox
7 36 0.997993722 ubox
7 41 0.015128335 ubox
7 67 0.038912187 ubox
8 25 0.042597509 ubox
8 30 0.008768880 ubox
8 35 0.997993304 ubox
8 40 0.015167399 ubox
8 66 0.038730274 ubox
9 25 0.009900504 ubox
9 32 0.004543028 ubox
9 34 0.996749393 ubox
9 35 0.003743090 ubox
9 39 0.015155237 ubox
10 20 0.030832940 ubox
10 23 0.995007270 ubox
10 24 0.012796227 ubox
10 26 0.004204345 ubox
10 31 0.009437248 ubox
11 18 0.004066177 ubox
11 19 0.030217027 ubox
11 22 0.997581807 ubox
11 25 0.003953867 ubox
11 30 0.009159174 ubox
11 32 0.011433542 ubox
11 33 0.009223982 ubox
12 21 0.997932711 ubox
13 20 0.993009692 ubox
13 21 0.003522589 ubox
13 23 0.005661089 ubox
13 31 0.015665510 ubox
14 21 0.005287223 ubox
15 21 0.003881163 ubox
16 21 0.003611504 ubox
20 25 0.008645775 ubox
20 30 0.003987908 ubox
21 29 0.003919484 ubox
21 33 0.003301617 ubox
23 32 0.003993221 ubox
23 34 0.004834720 ubox
24 30 0.023599959 ubox
24 32 0.981521862 ubox
25 31 0.991349655 ubox
25 36 0.007905260 ubox
25 41 0.015237473 ubox
26 30 0.984171528 ubox
26 32 0.019970850 ubox
26 35 0.007935218 ubox
26 40 0.015247646 ubox
30 36 0.018053590 ubox
30 41 0.032205396 ubox
30 67 0.003615648 ubox
31 35 0.017970900 ubox
31 40 0.032224771 ubox
31 66 0.003634815 ubox
32 37 0.003762331 ubox
32 65 0.003283199 ubox
34 41 0.009527341 ubox
34 68 0.019095225 ubox
35 41 0.023371626 ubox
35 67 0.019118763 ubox
36 40 0.023258792 ubox
36 66 0.019031982 ubox
39 45 0.044482328 ubox
39 53 0.057726256 ubox
39 57 0.010456481 ubox
39 67 0.003891444 ubox
39 68 0.967581321 ubox
39 86 0.003607420 ubox
39 95 0.012730843 ubox
39 98 0.012769661 ubox
39 101 0.012986759 ubox
39 104 0.013026361 ubox
39 107 0.004558892 ubox
40 45 0.014525712 ubox
40 52 0.061372570 ubox
40 55 0.013228097 ubox
40 67 0.968787162 ubox
40 68 0.005126151 ubox
40 86 0.003453261 ubox
40 95 0.007597624 ubox
40 98 0.007771953 ubox
40 101 0.007893802 ubox
40 104 0.007883198 ubox
41 51 0.061674344 ubox
41 54 0.013703462 ubox
41 66 0.967316521 ubox
41 84 0.006539292 ubox
41 91 0.009733019 ubox
42 52 0.003951635 ubox
42 55 0.005665996 ubox
42 83 0.006606040 ubox
43 52 0.005749714 ubox
43 53 0.980346338 ubox
43 65 0.009816915 ubox
43 82 0.006607993 ubox
43 95 0.005986518 ubox
43 98 0.005873835 ubox
43 101 0.006005396 ubox
43 104 0.005522554 ubox
44 52 0.982013261 ubox
44 55 0.004005694 ubox
44 63 0.028531239 ubox
44 81 0.006602059 ubox
45 51 0.981496629 ubox
45 54 0.004250562 ubox
45 62 0.028631475 ubox
45 80 0.006581285 ubox
45 91 0.005519138 ubox
46 52 0.003732761 ubox
47 52 0.004355270 ubox
49 77 0.005297541 ubox
50 76 0.006257458 ubox
51 57 0.011656500 ubox
51 65 0.003978245 ubox
51 67 0.078622675 ubox
51 68 0.097626166 ubox
51 75 0.006478926 ubox
51 95 0.008302520 ubox
51 98 0.008255658 ubox
51 101 0.008402462 ubox
51 104 0.008447899 ubox
52 56 0.010535907 ubox
52 64 0.003869425 ubox
52 66 0.016571047 ubox
52 74 0.006457636 ubox
52 94 0.007828652 ubox
52 97 0.007799694 ubox
52 100 0.007940024 ubox
52 103 0.007986889 ubox
53 62 0.003810707 ubox
53 66 0.160488969 ubox
53 73 0.005522565 ubox
53 91 0.003317822 ubox
54 65 0.997503263 ubox
55 64 0.998665217 ubox
56 63 0.998634956 ubox
57 62 0.996912422 ubox
65 91 0.003737859 ubox
67 91 0.005435465 ubox
68 91 0.008995553 ubox
69 86 0.998167863 ubox
70 85 0.999544725 ubox
71 84 0.999958186 ubox
72 83 0.999731415 ubox
73 82 0.999960004 ubox
74 81 0.999670004 ubox
75 79 0.011785997 ubox
75 80 0.998675244 ubox
76 80 0.004029139 ubox
86 91 0.005939597 ubox
91 95 0.046254595 ubox
91 98 0.108016635 ubox
91 101 0.045717835 ubox
91 104 0.033973463 ubox
91 107 0.010019421 ubox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
