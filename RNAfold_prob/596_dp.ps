%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (596)
} def

/sequence { (\
GGAAAAAGAUAUUAUAAUAUUAUAAUAUGCAAAAAAAAAAAAAGCAUAUUAUAAUAUUAUAAUAUCAACACAUUUUUCGAAAUGUGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 66 0.003643972 ubox
1 69 0.008339786 ubox
1 71 0.013930385 ubox
1 78 0.036539636 ubox
1 95 0.066968122 ubox
1 98 0.067600868 ubox
1 101 0.069180095 ubox
1 104 0.069518045 ubox
1 107 0.017556193 ubox
2 66 0.005350156 ubox
2 69 0.006559476 ubox
2 71 0.008388581 ubox
2 77 0.036309485 ubox
2 78 0.095818460 ubox
2 95 0.035349658 ubox
2 98 0.035496355 ubox
2 101 0.036254539 ubox
2 104 0.036118310 ubox
2 107 0.011786072 ubox
3 65 0.004736992 ubox
3 75 0.003385055 ubox
3 76 0.036174282 ubox
3 77 0.095973761 ubox
4 74 0.003569323 ubox
4 75 0.035938355 ubox
4 76 0.095913282 ubox
5 73 0.003497809 ubox
5 74 0.035431733 ubox
5 75 0.095885769 ubox
5 76 0.003369679 ubox
6 73 0.033097923 ubox
6 74 0.095635994 ubox
6 75 0.003928650 ubox
7 73 0.094002399 ubox
7 74 0.004326004 ubox
8 66 0.998460538 ubox
8 69 0.003202519 ubox
8 71 0.007173421 ubox
9 65 0.999491533 ubox
10 64 0.999441348 ubox
11 63 0.999450085 ubox
12 62 0.999027286 ubox
13 61 0.999232624 ubox
14 60 0.999439380 ubox
15 59 0.999439380 ubox
16 58 0.999232803 ubox
17 57 0.999029105 ubox
18 56 0.999454737 ubox
19 55 0.999454737 ubox
20 54 0.999029105 ubox
21 53 0.999232803 ubox
22 52 0.999439380 ubox
23 51 0.999439410 ubox
24 50 0.999232832 ubox
25 49 0.999029255 ubox
26 48 0.999455840 ubox
27 47 0.999484346 ubox
28 46 0.999594666 ubox
29 45 0.999983102 ubox
30 44 0.999101712 ubox
65 92 0.005520297 ubox
66 91 0.007756386 ubox
68 85 0.007109457 ubox
69 84 0.007209975 ubox
69 86 0.983940604 ubox
69 91 0.006170749 ubox
70 83 0.006692374 ubox
70 85 0.988265539 ubox
71 84 0.988941440 ubox
71 86 0.008947832 ubox
71 91 0.010475787 ubox
72 83 0.988349068 ubox
72 85 0.008962653 ubox
73 80 0.011928770 ubox
73 81 0.040272143 ubox
73 82 0.985735392 ubox
73 84 0.008638779 ubox
73 89 0.008050675 ubox
73 90 0.009268150 ubox
73 91 0.059194379 ubox
73 92 0.013251606 ubox
73 93 0.006894925 ubox
73 94 0.004100854 ubox
73 96 0.003663059 ubox
74 79 0.014190314 ubox
74 80 0.056460489 ubox
74 81 0.961620584 ubox
74 82 0.032662984 ubox
74 88 0.008910411 ubox
74 89 0.009895957 ubox
74 90 0.088133746 ubox
74 91 0.013093211 ubox
74 92 0.007193460 ubox
74 93 0.004511615 ubox
74 96 0.003405407 ubox
75 79 0.062309706 ubox
75 80 0.836861145 ubox
75 81 0.044796811 ubox
75 82 0.010712505 ubox
75 87 0.009049066 ubox
75 88 0.009572524 ubox
75 89 0.093864009 ubox
75 90 0.011726167 ubox
75 91 0.006488749 ubox
75 92 0.004204827 ubox
75 94 0.015478152 ubox
76 80 0.045709003 ubox
76 81 0.013554716 ubox
76 82 0.004671941 ubox
76 86 0.008640472 ubox
76 87 0.009041067 ubox
76 88 0.095454877 ubox
76 89 0.009870320 ubox
76 90 0.004588785 ubox
76 91 0.003710262 ubox
76 93 0.017994168 ubox
77 81 0.005877121 ubox
77 86 0.008215775 ubox
77 87 0.096225234 ubox
77 88 0.007499384 ubox
77 92 0.018565761 ubox
78 84 0.009566442 ubox
78 86 0.096553706 ubox
78 91 0.018647028 ubox
79 83 0.006073605 ubox
79 85 0.080126341 ubox
79 98 0.016996279 ubox
79 101 0.015116634 ubox
79 104 0.008767128 ubox
80 85 0.007770454 ubox
83 92 0.004283096 ubox
83 96 0.074809627 ubox
83 97 0.003197739 ubox
83 99 0.036200518 ubox
83 102 0.025261819 ubox
83 105 0.021619276 ubox
84 95 0.082614646 ubox
84 98 0.039970132 ubox
84 101 0.027936231 ubox
84 104 0.024002835 ubox
85 90 0.004540793 ubox
85 92 0.003321157 ubox
85 94 0.082485725 ubox
85 96 0.018682153 ubox
85 97 0.036869047 ubox
85 99 0.007598275 ubox
85 100 0.027033102 ubox
85 102 0.005993661 ubox
85 103 0.023344389 ubox
86 95 0.026262976 ubox
86 98 0.010651089 ubox
86 101 0.008411857 ubox
86 104 0.004316432 ubox
91 95 0.042865810 ubox
91 98 0.103289600 ubox
91 101 0.045208813 ubox
91 104 0.034987417 ubox
91 107 0.010351655 ubox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 59 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
18 56 0.9500000 lbox
19 55 0.9500000 lbox
20 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
23 51 0.9500000 lbox
24 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
