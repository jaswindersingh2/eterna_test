%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (305)
} def

/sequence { (\
GGAAAAAAGUACAAGAUCAAAAGAUCAGUCAACUGAAACGGAGGAAACGCCGGCAGAAGACAAGUACAGAUCUUCUUCGGAGGAUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.005914715 ubox
1 12 0.027742530 ubox
1 67 0.012619527 ubox
1 86 0.003719606 ubox
1 95 0.070372956 ubox
1 98 0.070913222 ubox
1 101 0.072838980 ubox
1 104 0.073547639 ubox
1 107 0.018569367 ubox
2 10 0.003504635 ubox
2 12 0.009892336 ubox
2 67 0.007028018 ubox
2 86 0.003966090 ubox
2 95 0.037127182 ubox
2 98 0.037298105 ubox
2 101 0.038304987 ubox
2 104 0.038156029 ubox
2 107 0.012453158 ubox
3 10 0.007784687 ubox
4 10 0.005427700 ubox
5 10 0.004564807 ubox
8 34 0.004441386 ubox
8 65 0.003712881 ubox
9 30 0.003393961 ubox
9 33 0.004608520 ubox
9 67 0.973607866 ubox
9 95 0.055868839 ubox
9 98 0.054543491 ubox
9 101 0.055281685 ubox
9 104 0.055462000 ubox
9 107 0.019374912 ubox
10 32 0.004425870 ubox
10 63 0.003725741 ubox
10 66 0.974767485 ubox
10 87 0.003215633 ubox
10 88 0.003697335 ubox
10 89 0.004078030 ubox
10 90 0.004003467 ubox
10 91 0.003717065 ubox
10 92 0.005364137 ubox
10 93 0.005911468 ubox
10 94 0.053866329 ubox
10 96 0.003798831 ubox
10 97 0.052618325 ubox
10 99 0.003596759 ubox
10 100 0.053329477 ubox
10 102 0.003557434 ubox
10 103 0.053501564 ubox
10 106 0.018885015 ubox
11 29 0.005800305 ubox
11 65 0.974789956 ubox
12 28 0.006249310 ubox
12 64 0.973649709 ubox
12 91 0.018722309 ubox
15 26 0.998292449 ubox
15 61 0.007017472 ubox
16 25 0.999279239 ubox
17 24 0.999263492 ubox
17 60 0.006937737 ubox
18 23 0.997849058 ubox
18 59 0.006981528 ubox
24 65 0.004966813 ubox
25 36 0.012375149 ubox
25 64 0.004971928 ubox
26 35 0.014067156 ubox
27 34 0.015441506 ubox
27 65 0.004166444 ubox
28 33 0.015471033 ubox
28 61 0.996511574 ubox
29 36 0.011144271 ubox
29 60 0.997775166 ubox
30 35 0.011917699 ubox
30 59 0.997117836 ubox
33 53 0.004050757 ubox
33 56 0.996079030 ubox
33 59 0.015918066 ubox
34 52 0.003862988 ubox
34 55 0.997172859 ubox
34 56 0.013506463 ubox
34 57 0.023658533 ubox
34 58 0.017532073 ubox
35 51 0.003818847 ubox
35 54 0.991454267 ubox
39 49 0.058236141 ubox
39 52 0.989227867 ubox
39 53 0.024420329 ubox
40 48 0.058517128 ubox
40 50 0.007202518 ubox
40 51 0.997836216 ubox
41 48 0.012143398 ubox
41 50 0.996300410 ubox
41 51 0.013018528 ubox
43 48 0.931442656 ubox
43 50 0.011638646 ubox
43 51 0.015576882 ubox
44 48 0.069477705 ubox
44 50 0.015638913 ubox
44 86 0.004797884 ubox
45 85 0.004795153 ubox
48 82 0.005134989 ubox
50 80 0.005800411 ubox
51 79 0.005811995 ubox
52 78 0.005806827 ubox
53 61 0.004736025 ubox
53 77 0.005693603 ubox
54 59 0.006297626 ubox
55 76 0.006201850 ubox
56 61 0.004358651 ubox
56 75 0.006454022 ubox
57 74 0.006453260 ubox
58 73 0.006452118 ubox
59 72 0.006454865 ubox
60 71 0.006270507 ubox
61 69 0.004947424 ubox
64 95 0.014580615 ubox
64 98 0.006491108 ubox
64 101 0.005998186 ubox
64 104 0.005197055 ubox
65 87 0.004113379 ubox
65 88 0.007254922 ubox
65 89 0.005707510 ubox
65 90 0.009295105 ubox
65 91 0.005214323 ubox
65 92 0.005398569 ubox
65 94 0.014024119 ubox
65 97 0.006232601 ubox
65 100 0.005773429 ubox
65 103 0.005005570 ubox
67 91 0.009278998 ubox
69 86 0.998400721 ubox
70 85 0.999415614 ubox
71 83 0.006628543 ubox
71 84 0.999602209 ubox
72 82 0.012507088 ubox
72 83 0.999821438 ubox
73 81 0.016097993 ubox
73 82 0.998858665 ubox
73 93 0.008843691 ubox
74 80 0.016824054 ubox
74 81 0.998905268 ubox
74 92 0.009873927 ubox
75 79 0.020009240 ubox
75 80 0.998517159 ubox
75 91 0.009996019 ubox
76 80 0.003238088 ubox
76 90 0.009976517 ubox
77 89 0.009771323 ubox
80 86 0.009768235 ubox
81 85 0.008499712 ubox
85 92 0.007515902 ubox
86 91 0.010216489 ubox
91 95 0.043712006 ubox
91 98 0.104646457 ubox
91 101 0.045571014 ubox
91 104 0.034991888 ubox
91 107 0.010342958 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
