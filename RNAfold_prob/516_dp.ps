%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (516)
} def

/sequence { (\
GGAAAACUCGCAUUUAGAAACAAGUGACCAAAAGGACACUUGAGAAAAAACUAAACUAAAUAGCGAGUUGUUGUAUUCGUACAACAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.089835804 ubox
1 8 0.014616845 ubox
1 9 0.004740428 ubox
1 69 0.005347835 ubox
1 95 0.036806428 ubox
1 98 0.037094068 ubox
1 101 0.056366208 ubox
1 104 0.066729816 ubox
1 107 0.017310531 ubox
2 7 0.030530939 ubox
2 8 0.004691641 ubox
2 9 0.009009239 ubox
2 68 0.003808320 ubox
2 69 0.009317464 ubox
2 72 0.007153140 ubox
2 78 0.003223417 ubox
2 95 0.019428427 ubox
2 98 0.019526617 ubox
2 101 0.029673112 ubox
2 104 0.034773965 ubox
2 107 0.011648516 ubox
3 8 0.008847689 ubox
3 68 0.007111572 ubox
3 69 0.016936456 ubox
3 71 0.008187675 ubox
3 72 0.004228242 ubox
3 77 0.003215328 ubox
4 68 0.009924280 ubox
4 69 0.039098425 ubox
4 71 0.004078045 ubox
5 68 0.037332537 ubox
5 69 0.599798390 ubox
6 68 0.814171502 ubox
6 69 0.013247479 ubox
7 67 0.884669385 ubox
8 66 0.989313122 ubox
9 65 0.999697252 ubox
10 64 0.999968260 ubox
11 63 0.999716003 ubox
12 57 0.004566013 ubox
12 61 0.987511256 ubox
13 20 0.003185669 ubox
13 50 0.004348551 ubox
13 55 0.014189894 ubox
13 59 0.006016870 ubox
13 60 0.996522131 ubox
13 62 0.011046473 ubox
14 19 0.003355130 ubox
14 49 0.005058998 ubox
14 54 0.017167626 ubox
14 58 0.004940693 ubox
14 59 0.997485337 ubox
14 60 0.017790920 ubox
15 48 0.005062372 ubox
15 53 0.019174440 ubox
15 58 0.998329376 ubox
15 59 0.013978669 ubox
16 52 0.020070313 ubox
16 57 0.998313405 ubox
17 51 0.020494651 ubox
17 56 0.993242889 ubox
17 57 0.004432779 ubox
18 52 0.027074643 ubox
19 52 0.051616284 ubox
20 41 0.004275439 ubox
20 52 0.082817249 ubox
21 42 0.994022115 ubox
21 44 0.011195188 ubox
22 41 0.998130153 ubox
22 52 0.004032883 ubox
23 40 0.999121787 ubox
23 41 0.003829981 ubox
23 52 0.011718145 ubox
24 39 0.999825671 ubox
24 51 0.012180582 ubox
25 38 0.999577433 ubox
25 48 0.003436554 ubox
25 50 0.012038320 ubox
26 37 0.997779347 ubox
28 34 0.033024282 ubox
28 35 0.996888386 ubox
29 34 0.996670754 ubox
29 35 0.017258596 ubox
29 44 0.007764669 ubox
32 41 0.016335762 ubox
33 40 0.016647875 ubox
34 39 0.016687328 ubox
40 47 0.004243509 ubox
40 48 0.003874567 ubox
40 49 0.004956820 ubox
40 54 0.004231973 ubox
40 55 0.004459844 ubox
41 46 0.007353838 ubox
41 47 0.006773814 ubox
41 48 0.008637243 ubox
41 49 0.004966453 ubox
41 50 0.005143102 ubox
41 53 0.007164977 ubox
41 54 0.007959330 ubox
41 55 0.003361531 ubox
42 51 0.019704116 ubox
42 52 0.006444829 ubox
43 52 0.689200833 ubox
43 57 0.013305729 ubox
44 51 0.707081050 ubox
44 52 0.043464226 ubox
44 56 0.015521993 ubox
45 52 0.076706981 ubox
46 52 0.055469040 ubox
47 52 0.060146510 ubox
48 52 0.031446149 ubox
48 57 0.003310971 ubox
52 58 0.004072392 ubox
52 62 0.004247639 ubox
53 57 0.003947603 ubox
53 61 0.004291211 ubox
67 98 0.005184605 ubox
67 101 0.410316236 ubox
67 104 0.216129711 ubox
67 107 0.022627657 ubox
68 84 0.003371898 ubox
68 86 0.004241016 ubox
68 87 0.192030647 ubox
68 88 0.012550594 ubox
68 89 0.005120491 ubox
68 90 0.003579531 ubox
68 97 0.005625859 ubox
68 99 0.004891444 ubox
68 100 0.450290116 ubox
68 102 0.005756667 ubox
68 103 0.237144675 ubox
68 105 0.003375920 ubox
68 106 0.037025820 ubox
69 83 0.004388076 ubox
69 86 0.380967462 ubox
69 87 0.017525494 ubox
69 88 0.004823756 ubox
69 89 0.003526398 ubox
69 96 0.007018746 ubox
69 99 0.585655297 ubox
69 100 0.013536164 ubox
69 102 0.308266249 ubox
69 103 0.007380692 ubox
69 105 0.069558187 ubox
70 82 0.005510373 ubox
70 85 0.545500554 ubox
70 95 0.008688365 ubox
70 98 0.735183352 ubox
70 101 0.386915658 ubox
70 104 0.098558029 ubox
70 107 0.016867588 ubox
71 81 0.005397199 ubox
71 84 0.545662271 ubox
71 87 0.006000649 ubox
71 94 0.008523115 ubox
71 97 0.735262558 ubox
71 100 0.386899289 ubox
71 103 0.098519747 ubox
71 106 0.017123169 ubox
72 79 0.004428584 ubox
72 83 0.545818207 ubox
72 86 0.007008189 ubox
72 93 0.007513950 ubox
72 96 0.735470584 ubox
72 99 0.386806671 ubox
72 102 0.098316038 ubox
72 105 0.017222638 ubox
73 78 0.004934994 ubox
73 82 0.546151036 ubox
73 85 0.007232595 ubox
73 95 0.735876577 ubox
73 98 0.386958019 ubox
73 101 0.098281982 ubox
73 104 0.017248958 ubox
74 81 0.541585464 ubox
74 84 0.007031737 ubox
74 93 0.009383979 ubox
74 94 0.726307937 ubox
74 96 0.019040924 ubox
74 97 0.381841655 ubox
74 99 0.005934014 ubox
74 100 0.095082205 ubox
74 103 0.016708595 ubox
75 80 0.488023934 ubox
76 81 0.004312294 ubox
76 87 0.005034791 ubox
76 88 0.009078973 ubox
76 89 0.005225706 ubox
76 90 0.016176431 ubox
76 91 0.011430100 ubox
76 92 0.070049562 ubox
76 93 0.794239210 ubox
76 94 0.029082092 ubox
76 96 0.015561933 ubox
76 97 0.020826237 ubox
76 99 0.008381048 ubox
76 100 0.005038866 ubox
77 86 0.005548064 ubox
77 87 0.009677569 ubox
77 88 0.005391342 ubox
77 89 0.015756317 ubox
77 90 0.011751984 ubox
77 91 0.058021184 ubox
77 92 0.819053592 ubox
77 93 0.025742746 ubox
77 94 0.011042014 ubox
77 96 0.023425408 ubox
77 97 0.030703075 ubox
77 99 0.008585134 ubox
77 100 0.005377158 ubox
78 91 0.820927235 ubox
79 85 0.064058181 ubox
79 95 0.071513150 ubox
79 98 0.018866191 ubox
80 84 0.057764312 ubox
80 86 0.014124817 ubox
80 87 0.050478088 ubox
80 88 0.074684314 ubox
80 89 0.185636529 ubox
80 90 0.061267899 ubox
80 91 0.012250161 ubox
80 92 0.015783520 ubox
80 93 0.017983294 ubox
80 94 0.069263639 ubox
80 96 0.003770887 ubox
80 97 0.018331003 ubox
82 91 0.049581824 ubox
85 91 0.019003296 ubox
91 95 0.023594795 ubox
91 98 0.056783092 ubox
91 101 0.024876888 ubox
91 104 0.019253195 ubox
91 107 0.005696372 ubox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 61 0.9500000 lbox
13 60 0.9500000 lbox
14 59 0.9500000 lbox
15 58 0.9500000 lbox
16 57 0.9500000 lbox
17 56 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
70 98 0.9500000 lbox
71 97 0.9500000 lbox
72 96 0.9500000 lbox
73 95 0.9500000 lbox
74 94 0.9500000 lbox
76 93 0.9500000 lbox
77 92 0.9500000 lbox
78 91 0.9500000 lbox
showpage
end
%%EOF
