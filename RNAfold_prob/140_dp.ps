%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (140)
} def

/sequence { (\
GGAAAAAAGGACAUGAGACGACGGUAAAUCCGGAAACGAGAGACGGUACGACGGCAUGAACCAAAAAAGAUCGACUUCGGUCGAUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.012122471 ubox
1 19 0.006474607 ubox
1 22 0.005835437 ubox
1 61 0.004799426 ubox
1 62 0.071902814 ubox
1 86 0.003670769 ubox
1 95 0.067290744 ubox
1 98 0.067711354 ubox
1 101 0.069293913 ubox
1 104 0.069835479 ubox
1 107 0.017636009 ubox
2 12 0.003523914 ubox
2 61 0.070006692 ubox
2 62 0.015406818 ubox
2 86 0.004039761 ubox
2 95 0.035516437 ubox
2 98 0.035642258 ubox
2 101 0.036433168 ubox
2 104 0.036315354 ubox
2 107 0.011851704 ubox
8 14 0.003746786 ubox
9 19 0.009642785 ubox
9 22 0.007326807 ubox
9 31 0.004495602 ubox
9 61 0.385420634 ubox
9 62 0.869310238 ubox
9 95 0.017865811 ubox
9 98 0.017680295 ubox
9 101 0.018347912 ubox
9 104 0.018415419 ubox
9 107 0.006436855 ubox
10 19 0.008875397 ubox
10 22 0.004643782 ubox
10 30 0.004526707 ubox
10 55 0.004716439 ubox
10 61 0.868975437 ubox
10 62 0.055296355 ubox
10 95 0.011822767 ubox
10 98 0.010845484 ubox
10 101 0.010937379 ubox
10 104 0.010897000 ubox
10 107 0.003555628 ubox
11 29 0.004362997 ubox
12 17 0.009228240 ubox
12 20 0.006164522 ubox
12 42 0.004085952 ubox
12 54 0.004634216 ubox
12 58 0.993139516 ubox
12 91 0.004274719 ubox
13 57 0.995658839 ubox
14 21 0.003522517 ubox
14 40 0.003767379 ubox
14 53 0.007505199 ubox
14 56 0.995807861 ubox
14 59 0.008180444 ubox
14 96 0.008474984 ubox
14 99 0.008425629 ubox
14 102 0.007736969 ubox
14 105 0.007498375 ubox
15 19 0.004137087 ubox
15 22 0.007578461 ubox
15 52 0.010578431 ubox
15 55 0.994198181 ubox
15 57 0.004188137 ubox
15 95 0.009211524 ubox
15 98 0.009159673 ubox
15 101 0.008511029 ubox
15 104 0.008288667 ubox
16 57 0.008749112 ubox
17 22 0.006901575 ubox
17 37 0.011464579 ubox
17 49 0.004599448 ubox
17 52 0.685614058 ubox
17 55 0.014597821 ubox
17 95 0.003552512 ubox
17 98 0.003893184 ubox
17 101 0.003928337 ubox
17 104 0.003788028 ubox
18 25 0.020833013 ubox
18 47 0.005019803 ubox
19 24 0.021504214 ubox
19 38 0.008422456 ubox
19 46 0.005009254 ubox
19 50 0.961283397 ubox
19 53 0.183914787 ubox
19 54 0.020489674 ubox
19 91 0.003308062 ubox
20 37 0.008248714 ubox
20 47 0.004392815 ubox
20 49 0.961034320 ubox
20 52 0.184621118 ubox
20 55 0.008584429 ubox
20 95 0.003493563 ubox
20 98 0.003493419 ubox
20 101 0.003480777 ubox
21 47 0.970488465 ubox
22 32 0.054668594 ubox
22 45 0.070153680 ubox
22 46 0.972200739 ubox
22 50 0.161607142 ubox
22 53 0.012376301 ubox
22 54 0.039930016 ubox
23 31 0.055719127 ubox
23 44 0.077030366 ubox
23 47 0.014442399 ubox
23 49 0.151144183 ubox
23 52 0.012318105 ubox
23 62 0.068242221 ubox
24 30 0.055683839 ubox
24 44 0.965241879 ubox
24 47 0.012353606 ubox
24 49 0.100424781 ubox
24 52 0.046076558 ubox
24 61 0.068314429 ubox
25 41 0.003542566 ubox
25 42 0.032429999 ubox
25 43 0.933294208 ubox
25 45 0.019788778 ubox
25 46 0.027787889 ubox
25 48 0.115656351 ubox
25 51 0.045899373 ubox
25 60 0.067214417 ubox
26 47 0.114733959 ubox
27 47 0.008799153 ubox
27 57 0.008812125 ubox
28 47 0.012286586 ubox
28 57 0.065206835 ubox
29 38 0.005350862 ubox
29 39 0.446618007 ubox
29 40 0.071950742 ubox
29 41 0.799851077 ubox
29 42 0.015726470 ubox
29 43 0.030354837 ubox
29 46 0.004050784 ubox
29 48 0.010282174 ubox
29 56 0.065169793 ubox
30 38 0.347850499 ubox
30 40 0.818435301 ubox
30 42 0.033791277 ubox
30 45 0.003727523 ubox
30 46 0.136036143 ubox
30 54 0.069541338 ubox
31 38 0.919696724 ubox
31 40 0.033511375 ubox
31 42 0.005868906 ubox
31 45 0.136152231 ubox
31 53 0.069578000 ubox
32 37 0.960596319 ubox
32 44 0.135940476 ubox
32 49 0.003411934 ubox
32 52 0.069454709 ubox
33 37 0.041374691 ubox
33 44 0.003907824 ubox
33 49 0.010353654 ubox
35 47 0.006801559 ubox
36 47 0.060302192 ubox
37 42 0.018923162 ubox
37 45 0.042189502 ubox
37 46 0.061759370 ubox
37 50 0.006766097 ubox
37 53 0.006318215 ubox
38 44 0.042277382 ubox
38 49 0.006882141 ubox
38 52 0.006323616 ubox
39 47 0.003429753 ubox
40 44 0.006469195 ubox
40 49 0.004718507 ubox
42 49 0.004286936 ubox
42 55 0.005945963 ubox
44 50 0.006319979 ubox
44 53 0.043002026 ubox
44 54 0.007762792 ubox
45 49 0.006021701 ubox
45 52 0.043390162 ubox
45 62 0.016131616 ubox
46 52 0.009487523 ubox
46 61 0.016160481 ubox
47 51 0.008625199 ubox
47 60 0.015895839 ubox
49 54 0.009026579 ubox
49 58 0.015202427 ubox
50 57 0.009853666 ubox
53 62 0.029283304 ubox
54 61 0.029217485 ubox
61 91 0.005733941 ubox
62 69 0.004025987 ubox
62 91 0.023652725 ubox
69 82 0.010930895 ubox
69 86 0.998415616 ubox
70 81 0.010945911 ubox
70 85 0.999436518 ubox
71 80 0.010942718 ubox
71 84 0.999644812 ubox
72 79 0.010970535 ubox
72 83 0.999907132 ubox
73 78 0.010821800 ubox
73 82 0.999907877 ubox
74 81 0.999631724 ubox
75 79 0.011786961 ubox
75 80 0.998636896 ubox
76 80 0.004029068 ubox
85 92 0.007672765 ubox
86 91 0.010322252 ubox
91 95 0.043111743 ubox
91 98 0.103849780 ubox
91 101 0.045519346 ubox
91 104 0.035195200 ubox
91 107 0.010411941 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
