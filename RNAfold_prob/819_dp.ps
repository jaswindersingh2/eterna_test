%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (819)
} def

/sequence { (\
GGAAAAGGGAUACCGAGUAUGAGUAUCCUGAGUCCGAAAAGAGACCAGAGAUACCAUACCGAGUACCACUACGGCUUCGGUUGUAGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.004393746 ubox
1 67 0.064246729 ubox
1 70 0.004958642 ubox
1 72 0.016992213 ubox
1 75 0.033929106 ubox
1 76 0.030799073 ubox
1 78 0.036684433 ubox
1 95 0.065849265 ubox
1 98 0.066564218 ubox
1 101 0.071096598 ubox
1 104 0.072554536 ubox
1 107 0.018439142 ubox
2 13 0.004450118 ubox
2 66 0.064221290 ubox
2 69 0.005675199 ubox
2 72 0.023132081 ubox
2 75 0.035672153 ubox
2 77 0.036310470 ubox
2 78 0.036138636 ubox
2 95 0.034762226 ubox
2 98 0.035100945 ubox
2 101 0.036404179 ubox
2 104 0.036813956 ubox
2 107 0.012078541 ubox
3 70 0.004576574 ubox
3 76 0.035001603 ubox
3 77 0.035958344 ubox
4 64 0.003211434 ubox
4 70 0.006218086 ubox
4 76 0.033437393 ubox
4 77 0.003705244 ubox
5 70 0.021141285 ubox
5 76 0.004658447 ubox
5 77 0.006179853 ubox
6 70 0.150430662 ubox
6 76 0.007450502 ubox
7 13 0.004805240 ubox
7 14 0.023291172 ubox
7 66 0.008778532 ubox
7 67 0.290493785 ubox
7 69 0.163583932 ubox
7 70 0.018880768 ubox
7 72 0.013444279 ubox
7 75 0.007764229 ubox
7 95 0.057084168 ubox
7 98 0.057243764 ubox
7 101 0.055485015 ubox
7 104 0.055271930 ubox
7 107 0.019316378 ubox
8 13 0.023878798 ubox
8 14 0.004449804 ubox
8 66 0.286279673 ubox
8 67 0.943775977 ubox
8 69 0.020344094 ubox
8 70 0.008916849 ubox
8 95 0.008229571 ubox
8 98 0.008071210 ubox
8 101 0.007530888 ubox
8 104 0.007436695 ubox
9 13 0.004493182 ubox
9 64 0.004572518 ubox
9 66 0.945817481 ubox
9 67 0.093142683 ubox
9 69 0.009420425 ubox
9 95 0.003850939 ubox
9 98 0.003680625 ubox
9 101 0.003656858 ubox
9 104 0.003398690 ubox
10 64 0.045290243 ubox
11 62 0.010623389 ubox
11 63 0.048080565 ubox
11 65 0.981230816 ubox
12 64 0.993649824 ubox
13 61 0.011128930 ubox
13 63 0.994655483 ubox
14 61 0.996958488 ubox
14 63 0.005426505 ubox
15 60 0.997180062 ubox
17 59 0.999700561 ubox
17 60 0.004839505 ubox
18 58 0.999710339 ubox
19 57 0.999499106 ubox
20 56 0.999563271 ubox
21 55 0.999677785 ubox
23 54 0.999732131 ubox
24 53 0.999713141 ubox
25 52 0.999495707 ubox
26 50 0.004774457 ubox
26 51 0.999710667 ubox
27 50 0.999783642 ubox
28 48 0.999464428 ubox
29 47 0.999491741 ubox
29 48 0.017533729 ubox
29 49 0.003597484 ubox
30 45 0.004901021 ubox
30 46 0.999455095 ubox
32 45 0.999493023 ubox
33 42 0.019379143 ubox
33 43 0.006253653 ubox
33 44 0.999553283 ubox
34 41 0.020288829 ubox
34 43 0.998344959 ubox
35 41 0.850751718 ubox
35 43 0.046070669 ubox
60 73 0.003936227 ubox
60 79 0.010129511 ubox
61 72 0.003956582 ubox
61 78 0.010319658 ubox
62 70 0.004432055 ubox
62 76 0.003465732 ubox
62 77 0.009875717 ubox
63 69 0.004497984 ubox
63 75 0.004474183 ubox
63 76 0.008495867 ubox
63 95 0.004965714 ubox
64 68 0.004064904 ubox
64 74 0.003717947 ubox
64 94 0.004823238 ubox
66 73 0.003324021 ubox
66 74 0.011806748 ubox
66 91 0.007111506 ubox
67 73 0.011865859 ubox
67 91 0.007104016 ubox
68 84 0.003670831 ubox
69 74 0.015480405 ubox
69 79 0.003453959 ubox
69 83 0.003827287 ubox
69 86 0.975683870 ubox
69 91 0.007519965 ubox
70 85 0.982866767 ubox
70 86 0.004365985 ubox
70 90 0.005963649 ubox
71 81 0.004126302 ubox
71 84 0.985142484 ubox
72 79 0.098211209 ubox
72 80 0.004490958 ubox
72 83 0.985544237 ubox
73 78 0.097755777 ubox
73 81 0.003720143 ubox
73 82 0.982328498 ubox
73 95 0.003591809 ubox
73 101 0.005841108 ubox
73 104 0.020967907 ubox
73 107 0.011518325 ubox
74 78 0.005964286 ubox
74 81 0.984541591 ubox
74 95 0.005553551 ubox
74 101 0.005317945 ubox
74 104 0.016557238 ubox
74 107 0.007280323 ubox
75 79 0.013440295 ubox
75 80 0.984414327 ubox
75 83 0.003180997 ubox
76 88 0.006088347 ubox
76 93 0.009550425 ubox
76 100 0.004954629 ubox
76 102 0.008283473 ubox
76 103 0.009540750 ubox
76 105 0.009266144 ubox
76 106 0.008968552 ubox
77 87 0.006925880 ubox
77 92 0.010432896 ubox
77 99 0.004770487 ubox
77 100 0.005951386 ubox
77 102 0.009366879 ubox
77 103 0.007837824 ubox
77 105 0.009239041 ubox
77 106 0.005068322 ubox
78 86 0.007035272 ubox
78 91 0.010513716 ubox
79 98 0.003827378 ubox
79 101 0.009397698 ubox
79 104 0.011910294 ubox
80 95 0.005745526 ubox
80 98 0.087155668 ubox
80 101 0.123567358 ubox
80 104 0.069043152 ubox
80 107 0.018901146 ubox
81 88 0.008724480 ubox
81 94 0.005728390 ubox
81 97 0.087342002 ubox
81 100 0.123838723 ubox
81 103 0.069183235 ubox
81 106 0.019221692 ubox
82 87 0.008712794 ubox
82 93 0.005633279 ubox
82 96 0.087431591 ubox
82 99 0.123965892 ubox
82 102 0.069221224 ubox
82 105 0.019381292 ubox
83 95 0.087482602 ubox
83 98 0.124049199 ubox
83 101 0.069253614 ubox
83 104 0.019419817 ubox
84 93 0.008169125 ubox
84 94 0.084826190 ubox
84 96 0.004204321 ubox
84 97 0.121638660 ubox
84 100 0.067641859 ubox
84 103 0.018911248 ubox
86 95 0.106504170 ubox
86 98 0.042583236 ubox
86 101 0.012181958 ubox
86 104 0.003764397 ubox
91 95 0.043318186 ubox
91 98 0.103079444 ubox
91 101 0.044897475 ubox
91 104 0.034523266 ubox
91 107 0.010205962 ubox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 41 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
