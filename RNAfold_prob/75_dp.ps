%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (75)
} def

/sequence { (\
GGAAAAAGACACGUCACGAAAGUGACCCGAGCCGUCGAAAGACGAGUGCGAAAGCACGCGAGGGUGUCGAUCAACUUCGGUUGAUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.010965212 ubox
1 12 0.005063787 ubox
1 68 0.004485279 ubox
1 86 0.003566960 ubox
1 95 0.067482808 ubox
1 98 0.067909933 ubox
1 101 0.069462121 ubox
1 104 0.069773209 ubox
1 107 0.017617148 ubox
2 68 0.006848737 ubox
2 72 0.003335757 ubox
2 86 0.003793227 ubox
2 95 0.035622724 ubox
2 98 0.035751002 ubox
2 101 0.036517019 ubox
2 104 0.036377524 ubox
2 107 0.011870298 ubox
3 67 0.005809136 ubox
3 71 0.003284865 ubox
8 67 0.003178562 ubox
8 68 0.997625213 ubox
8 95 0.003492868 ubox
8 98 0.003485585 ubox
8 101 0.003503972 ubox
8 104 0.003509954 ubox
9 65 0.003389200 ubox
9 67 0.998968009 ubox
10 24 0.008715994 ubox
10 64 0.003443954 ubox
10 66 0.999267638 ubox
11 23 0.008896505 ubox
11 65 0.997511390 ubox
11 67 0.003281222 ubox
12 22 0.008914227 ubox
12 63 0.008093640 ubox
12 64 0.995531350 ubox
12 66 0.003587956 ubox
13 26 0.993837082 ubox
13 27 0.007706644 ubox
13 95 0.005623599 ubox
13 98 0.005634929 ubox
13 101 0.005751267 ubox
13 104 0.005767024 ubox
14 25 0.997780602 ubox
14 62 0.005487579 ubox
14 94 0.005237914 ubox
14 97 0.005248789 ubox
14 100 0.005356926 ubox
14 103 0.005371377 ubox
15 24 0.999900575 ubox
15 62 0.003258125 ubox
16 23 0.999570158 ubox
17 22 0.999231192 ubox
17 60 0.004081241 ubox
18 59 0.004058615 ubox
22 57 0.004034803 ubox
23 56 0.004097557 ubox
24 55 0.004097000 ubox
25 65 0.050123285 ubox
26 63 0.023561657 ubox
26 64 0.070886343 ubox
27 31 0.006170651 ubox
27 41 0.003896847 ubox
27 60 0.004673734 ubox
27 62 0.029432063 ubox
27 63 0.985133469 ubox
27 64 0.011890316 ubox
28 34 0.004098356 ubox
28 37 0.051931948 ubox
28 50 0.014628007 ubox
28 58 0.003248251 ubox
28 60 0.030832179 ubox
28 62 0.987313683 ubox
28 63 0.023524102 ubox
29 33 0.004742959 ubox
29 36 0.052550915 ubox
29 49 0.014670015 ubox
29 59 0.030303209 ubox
30 35 0.051191516 ubox
30 47 0.007783065 ubox
31 47 0.026956511 ubox
31 59 0.987270638 ubox
31 65 0.003751902 ubox
32 44 0.006032178 ubox
32 46 0.029936876 ubox
32 58 0.985377452 ubox
32 60 0.006062036 ubox
32 63 0.010082464 ubox
32 64 0.004161409 ubox
33 41 0.003238911 ubox
33 44 0.987837650 ubox
33 58 0.009219467 ubox
33 62 0.009881374 ubox
33 63 0.004796422 ubox
34 43 0.998164668 ubox
35 42 0.998084588 ubox
35 45 0.022199961 ubox
35 61 0.005117307 ubox
36 41 0.997757991 ubox
36 44 0.023740424 ubox
36 60 0.005082549 ubox
37 43 0.023497383 ubox
37 59 0.004753663 ubox
43 60 0.051735961 ubox
43 62 0.004050345 ubox
44 59 0.057839289 ubox
46 55 0.006126248 ubox
46 57 0.996941180 ubox
46 59 0.005525063 ubox
47 54 0.006059968 ubox
47 56 0.998483521 ubox
47 58 0.005252541 ubox
47 60 0.018764100 ubox
48 55 0.999274885 ubox
48 57 0.005014907 ubox
48 59 0.033351319 ubox
49 54 0.998890082 ubox
49 58 0.033378401 ubox
50 55 0.004312941 ubox
50 57 0.032851795 ubox
54 67 0.004570267 ubox
55 63 0.003219455 ubox
55 66 0.004902026 ubox
56 65 0.004928125 ubox
57 62 0.008445451 ubox
57 63 0.007937506 ubox
57 64 0.004939800 ubox
57 66 0.003297909 ubox
58 65 0.006651688 ubox
59 63 0.010535743 ubox
59 64 0.007240900 ubox
64 95 0.007469137 ubox
65 94 0.007260219 ubox
66 95 0.003597860 ubox
67 87 0.003726537 ubox
67 88 0.005619694 ubox
67 92 0.008918168 ubox
68 91 0.009998044 ubox
69 78 0.004194593 ubox
69 86 0.998445644 ubox
70 77 0.004140337 ubox
70 85 0.999458763 ubox
71 84 0.999663773 ubox
72 79 0.003162733 ubox
72 83 0.999937950 ubox
73 82 0.999382514 ubox
74 81 0.999064634 ubox
75 79 0.012374861 ubox
75 80 0.998418242 ubox
76 80 0.004073076 ubox
80 98 0.007331844 ubox
81 97 0.007350934 ubox
82 96 0.007355069 ubox
83 95 0.007338729 ubox
85 92 0.009387348 ubox
86 91 0.011697026 ubox
91 95 0.043042664 ubox
91 98 0.103775423 ubox
91 101 0.045527225 ubox
91 104 0.035233714 ubox
91 107 0.010424388 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
