%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (904)
} def

/sequence { (\
GGAAAGCAAGUACGGUCCCAAGCGAAAGCAGCGAAAGCAAAGGAGACAAAGUACAAGCGAAAGCAAGCGUACGUCUUCGGAUGUACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.187752851 ubox
1 13 0.006021944 ubox
1 18 0.014687013 ubox
1 19 0.005726464 ubox
1 64 0.213910582 ubox
1 68 0.028534758 ubox
1 86 0.004370955 ubox
1 95 0.178428646 ubox
1 98 0.074348684 ubox
1 101 0.064517210 ubox
1 104 0.064597337 ubox
1 107 0.016286234 ubox
2 7 0.080240086 ubox
2 17 0.014861523 ubox
2 18 0.005559849 ubox
2 58 0.003240234 ubox
2 64 0.096419698 ubox
2 68 0.023481844 ubox
2 95 0.051847948 ubox
2 98 0.033115691 ubox
2 101 0.032737587 ubox
2 104 0.032566735 ubox
2 107 0.010621521 ubox
3 16 0.014739905 ubox
6 13 0.014781152 ubox
6 16 0.003530635 ubox
6 52 0.003260769 ubox
6 54 0.003202639 ubox
6 58 0.457649270 ubox
6 64 0.014646926 ubox
6 68 0.200278493 ubox
6 84 0.003410126 ubox
6 86 0.004777577 ubox
6 95 0.031823371 ubox
6 98 0.031189166 ubox
6 101 0.031027731 ubox
6 104 0.030285855 ubox
6 107 0.010542924 ubox
7 14 0.007463825 ubox
7 15 0.003686300 ubox
7 51 0.003332861 ubox
7 57 0.457883041 ubox
7 59 0.005766698 ubox
7 63 0.014605940 ubox
7 67 0.200318666 ubox
7 83 0.003489779 ubox
7 91 0.067160911 ubox
9 52 0.003695621 ubox
10 54 0.639305174 ubox
10 64 0.003639062 ubox
10 72 0.003274959 ubox
10 86 0.764688503 ubox
10 95 0.009973992 ubox
10 98 0.009760689 ubox
10 101 0.009814023 ubox
10 104 0.009772361 ubox
10 107 0.003405722 ubox
11 53 0.640021016 ubox
11 63 0.003492593 ubox
11 71 0.003297562 ubox
11 85 0.765715808 ubox
11 94 0.009350925 ubox
11 97 0.009209666 ubox
11 100 0.009287508 ubox
11 103 0.009254333 ubox
11 106 0.003262598 ubox
12 52 0.639980364 ubox
12 70 0.003314012 ubox
12 84 0.765770996 ubox
13 24 0.003594597 ubox
13 51 0.637744499 ubox
13 69 0.003324835 ubox
13 83 0.762241087 ubox
14 19 0.004977910 ubox
14 23 0.003921306 ubox
14 47 0.020134338 ubox
14 68 0.003362296 ubox
14 82 0.541741335 ubox
14 95 0.003969717 ubox
14 98 0.003937509 ubox
14 101 0.003940917 ubox
14 104 0.003553245 ubox
15 47 0.636216229 ubox
15 82 0.530921919 ubox
16 44 0.052032218 ubox
16 45 0.006956256 ubox
16 46 0.639554898 ubox
16 48 0.006515160 ubox
16 80 0.026966965 ubox
16 81 0.753879922 ubox
17 43 0.052914433 ubox
17 45 0.639617127 ubox
17 79 0.029629279 ubox
17 80 0.761017227 ubox
18 42 0.052963828 ubox
18 43 0.636412564 ubox
18 45 0.003383743 ubox
18 79 0.758009737 ubox
18 80 0.081120229 ubox
19 24 0.026544375 ubox
19 28 0.014087160 ubox
19 31 0.008824982 ubox
19 33 0.014116488 ubox
19 37 0.007461651 ubox
19 42 0.635795275 ubox
19 43 0.049268265 ubox
19 45 0.003404506 ubox
19 79 0.094308718 ubox
20 77 0.025150761 ubox
21 76 0.025048993 ubox
22 29 0.973976863 ubox
22 32 0.089479053 ubox
22 38 0.161280420 ubox
22 74 0.005159519 ubox
22 75 0.024152363 ubox
23 28 0.974614543 ubox
23 31 0.089556042 ubox
23 33 0.015787037 ubox
23 37 0.161473671 ubox
23 42 0.004423936 ubox
23 73 0.024519587 ubox
24 29 0.032741555 ubox
24 32 0.017248636 ubox
24 38 0.004801059 ubox
24 72 0.024154137 ubox
25 70 0.003597134 ubox
26 70 0.007270285 ubox
28 32 0.056811279 ubox
28 38 0.040642981 ubox
28 68 0.024103162 ubox
29 33 0.018723626 ubox
29 37 0.040673580 ubox
29 67 0.024083350 ubox
31 38 0.974368079 ubox
31 64 0.019764841 ubox
32 37 0.975010455 ubox
32 42 0.003763854 ubox
32 63 0.019783539 ubox
33 38 0.033152038 ubox
37 58 0.019743683 ubox
37 84 0.007803384 ubox
38 57 0.019727789 ubox
38 83 0.007992094 ubox
39 82 0.007811516 ubox
42 47 0.010295453 ubox
42 54 0.007809613 ubox
42 77 0.004415325 ubox
42 78 0.759344656 ubox
43 52 0.003939316 ubox
43 54 0.005165436 ubox
43 77 0.763486718 ubox
43 78 0.042438623 ubox
44 52 0.003559067 ubox
44 76 0.765032208 ubox
44 77 0.030355394 ubox
45 54 0.003537442 ubox
45 75 0.765936963 ubox
45 76 0.005974060 ubox
45 78 0.006860275 ubox
46 52 0.006739860 ubox
46 74 0.765483804 ubox
46 77 0.006726455 ubox
47 51 0.006784027 ubox
47 73 0.764259912 ubox
48 70 0.004002376 ubox
48 74 0.003761614 ubox
49 70 0.008853603 ubox
49 74 0.005337732 ubox
50 70 0.014392909 ubox
51 58 0.004640807 ubox
51 68 0.062787998 ubox
51 70 0.005875406 ubox
51 72 0.760509686 ubox
51 86 0.035556236 ubox
51 95 0.003620657 ubox
51 98 0.003509109 ubox
51 101 0.003532498 ubox
51 104 0.003503498 ubox
52 57 0.004507168 ubox
52 67 0.061352627 ubox
52 69 0.008956183 ubox
52 71 0.761572017 ubox
52 85 0.035601270 ubox
52 94 0.003492421 ubox
52 97 0.003387170 ubox
52 100 0.003410256 ubox
52 103 0.003381945 ubox
53 70 0.760696782 ubox
53 84 0.035612034 ubox
54 63 0.004753211 ubox
54 67 0.036578885 ubox
54 69 0.754606604 ubox
54 83 0.035620578 ubox
55 70 0.006866541 ubox
55 82 0.035358962 ubox
56 70 0.003450293 ubox
57 64 0.545781759 ubox
57 68 0.689128983 ubox
57 70 0.015564995 ubox
57 98 0.005191375 ubox
58 63 0.546218178 ubox
58 67 0.691780679 ubox
58 69 0.017482681 ubox
58 79 0.035667102 ubox
59 64 0.056891607 ubox
59 68 0.049300654 ubox
59 78 0.035716316 ubox
59 95 0.023041512 ubox
59 98 0.011711130 ubox
59 101 0.003800335 ubox
60 77 0.035399588 ubox
61 76 0.033882501 ubox
61 77 0.004455114 ubox
62 76 0.006305732 ubox
63 68 0.032903147 ubox
63 70 0.004744115 ubox
63 74 0.034203332 ubox
63 75 0.007678558 ubox
63 84 0.004317036 ubox
63 95 0.011258763 ubox
63 98 0.004058126 ubox
63 101 0.003336862 ubox
64 69 0.005257517 ubox
64 73 0.035191837 ubox
64 83 0.004417608 ubox
64 91 0.053005943 ubox
65 82 0.004385474 ubox
67 72 0.004605080 ubox
67 74 0.003473470 ubox
67 84 0.006477009 ubox
67 86 0.006755887 ubox
67 95 0.006965715 ubox
67 98 0.005312722 ubox
67 101 0.004958965 ubox
67 104 0.004431197 ubox
68 73 0.003640779 ubox
68 79 0.004459643 ubox
68 83 0.006629104 ubox
68 91 0.024974228 ubox
69 78 0.004459393 ubox
69 82 0.006595996 ubox
69 86 0.640013100 ubox
70 81 0.005658974 ubox
70 85 0.640854283 ubox
71 84 0.641058798 ubox
72 79 0.006606888 ubox
72 83 0.641196136 ubox
73 78 0.006748818 ubox
73 82 0.640744942 ubox
74 81 0.641095338 ubox
75 79 0.007472372 ubox
75 80 0.640581129 ubox
82 96 0.004944868 ubox
82 99 0.003535625 ubox
83 95 0.005903866 ubox
83 98 0.004228516 ubox
83 101 0.003491913 ubox
84 94 0.005717362 ubox
84 97 0.004116341 ubox
84 100 0.003400201 ubox
86 91 0.006073585 ubox
91 95 0.042496942 ubox
91 98 0.102216618 ubox
91 101 0.044736935 ubox
91 104 0.034539959 ubox
91 107 0.010215844 ubox
10 86 0.9500000 lbox
11 85 0.9500000 lbox
12 84 0.9500000 lbox
13 83 0.9500000 lbox
14 82 0.9500000 lbox
16 81 0.9500000 lbox
17 80 0.9500000 lbox
18 79 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
42 78 0.9500000 lbox
43 77 0.9500000 lbox
44 76 0.9500000 lbox
45 75 0.9500000 lbox
46 74 0.9500000 lbox
47 73 0.9500000 lbox
51 72 0.9500000 lbox
52 71 0.9500000 lbox
53 70 0.9500000 lbox
54 69 0.9500000 lbox
57 68 0.9500000 lbox
58 67 0.9500000 lbox
showpage
end
%%EOF
