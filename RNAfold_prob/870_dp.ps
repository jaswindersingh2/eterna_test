%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (870)
} def

/sequence { (\
GGAAAGGAAGGACGAGAAAGCCGAAAGCGCGCGGAGACAGCGAACGCACGCGAAAGACGGACCAAAAAGGGUGGCUUCGGCCGCCCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.107272547 ubox
1 21 0.005752595 ubox
1 22 0.066002110 ubox
1 58 0.017894064 ubox
1 62 0.013360383 ubox
1 63 0.282671185 ubox
1 86 0.012665041 ubox
1 95 0.079115604 ubox
1 98 0.081081446 ubox
1 101 0.088488306 ubox
1 104 0.091199754 ubox
1 107 0.023177140 ubox
2 13 0.035938877 ubox
2 21 0.065997747 ubox
2 22 0.003737294 ubox
2 28 0.003912364 ubox
2 30 0.003252856 ubox
2 58 0.011158059 ubox
2 62 0.281455812 ubox
2 63 0.022464672 ubox
2 85 0.012065165 ubox
2 86 0.003179107 ubox
2 95 0.041629651 ubox
2 98 0.042757982 ubox
2 101 0.044454936 ubox
2 104 0.044806763 ubox
2 107 0.014683908 ubox
6 13 0.269915211 ubox
6 21 0.008385820 ubox
6 22 0.063917700 ubox
6 28 0.006271067 ubox
6 49 0.003428494 ubox
6 58 0.113094282 ubox
6 62 0.013793070 ubox
6 63 0.203178252 ubox
6 85 0.012730870 ubox
6 86 0.042406536 ubox
6 95 0.063300214 ubox
6 98 0.067376264 ubox
6 101 0.068235445 ubox
6 104 0.067554387 ubox
6 107 0.023618025 ubox
7 13 0.082518518 ubox
7 21 0.063915488 ubox
7 22 0.006478399 ubox
7 28 0.005030772 ubox
7 58 0.043563000 ubox
7 62 0.201551653 ubox
7 63 0.029750911 ubox
7 84 0.012797835 ubox
7 85 0.042281543 ubox
7 86 0.003174672 ubox
7 95 0.047149811 ubox
7 98 0.051678779 ubox
7 101 0.043836574 ubox
7 104 0.042048281 ubox
7 107 0.013703271 ubox
10 21 0.014195964 ubox
10 22 0.384746783 ubox
10 45 0.006725041 ubox
10 58 0.024702891 ubox
10 62 0.152907277 ubox
10 63 0.235007109 ubox
10 82 0.043566949 ubox
10 85 0.008559278 ubox
10 86 0.013646105 ubox
10 95 0.056274319 ubox
10 98 0.053731815 ubox
10 101 0.054957581 ubox
10 104 0.050904782 ubox
10 107 0.017596806 ubox
11 21 0.385654778 ubox
11 22 0.030124050 ubox
11 58 0.027060204 ubox
11 62 0.234244652 ubox
11 63 0.020350233 ubox
11 81 0.042882713 ubox
11 84 0.008646146 ubox
11 85 0.013446113 ubox
11 95 0.035830436 ubox
11 98 0.038919650 ubox
11 101 0.037015055 ubox
11 104 0.034606564 ubox
11 107 0.011195975 ubox
13 20 0.422309934 ubox
13 23 0.089003343 ubox
13 42 0.007723613 ubox
13 52 0.007121526 ubox
13 56 0.023467624 ubox
13 59 0.228323171 ubox
13 60 0.062103772 ubox
13 69 0.012008910 ubox
13 79 0.040057850 ubox
13 80 0.011462135 ubox
13 83 0.014142765 ubox
13 91 0.033061476 ubox
14 21 0.022582030 ubox
14 22 0.090806801 ubox
14 41 0.007756305 ubox
14 51 0.006402586 ubox
14 58 0.226324211 ubox
14 62 0.012331464 ubox
14 63 0.054863408 ubox
14 78 0.040544789 ubox
14 82 0.014065739 ubox
14 95 0.038175505 ubox
14 98 0.037704770 ubox
14 101 0.037478209 ubox
14 104 0.032569037 ubox
14 107 0.012088830 ubox
15 77 0.037408200 ubox
16 21 0.061682431 ubox
16 22 0.028223562 ubox
16 38 0.003616748 ubox
16 49 0.003636994 ubox
16 58 0.028614615 ubox
16 62 0.046980473 ubox
16 63 0.124016270 ubox
16 76 0.015490503 ubox
16 78 0.015922306 ubox
16 95 0.032551316 ubox
16 98 0.032309714 ubox
16 101 0.031727732 ubox
16 104 0.031274804 ubox
16 107 0.010900796 ubox
17 77 0.013071416 ubox
18 76 0.009451104 ubox
18 77 0.018569678 ubox
19 76 0.039678686 ubox
20 28 0.017497534 ubox
20 30 0.013768639 ubox
20 32 0.012284222 ubox
20 47 0.005559971 ubox
20 51 0.153466174 ubox
20 58 0.074271867 ubox
20 62 0.393237741 ubox
20 63 0.083540698 ubox
20 75 0.043769550 ubox
20 81 0.013494198 ubox
20 95 0.027025671 ubox
20 98 0.026823547 ubox
20 101 0.027105666 ubox
20 104 0.026963677 ubox
20 107 0.009405895 ubox
21 27 0.017394745 ubox
21 29 0.013623263 ubox
21 31 0.012307528 ubox
21 34 0.016057403 ubox
21 46 0.004959585 ubox
21 50 0.123611875 ubox
21 52 0.085675939 ubox
21 56 0.035708713 ubox
21 59 0.015179425 ubox
21 60 0.858744234 ubox
21 74 0.043765585 ubox
21 80 0.013543498 ubox
21 91 0.005201221 ubox
22 27 0.013374236 ubox
22 29 0.013984018 ubox
22 33 0.016104939 ubox
22 46 0.010280735 ubox
22 50 0.138705887 ubox
22 52 0.092332091 ubox
22 56 0.130091936 ubox
22 59 0.861028295 ubox
22 60 0.011112148 ubox
22 73 0.043684838 ubox
22 79 0.013543175 ubox
22 91 0.005587130 ubox
23 28 0.014814135 ubox
23 30 0.003303334 ubox
23 32 0.016067005 ubox
23 45 0.010665824 ubox
23 47 0.012612864 ubox
23 49 0.166051025 ubox
23 51 0.094054824 ubox
23 58 0.855296636 ubox
23 62 0.005096366 ubox
23 63 0.006988327 ubox
23 72 0.017311266 ubox
23 78 0.013523099 ubox
23 95 0.012260263 ubox
23 98 0.012343250 ubox
23 101 0.012599573 ubox
23 104 0.012551522 ubox
23 107 0.004749518 ubox
24 77 0.012273326 ubox
25 76 0.009855963 ubox
25 77 0.004902094 ubox
26 76 0.006947847 ubox
27 41 0.003987187 ubox
27 45 0.049673014 ubox
27 47 0.238904591 ubox
27 49 0.007771809 ubox
27 51 0.946429420 ubox
27 58 0.003202078 ubox
27 63 0.006679131 ubox
27 75 0.008514441 ubox
28 40 0.003987241 ubox
28 42 0.024488905 ubox
28 46 0.239104685 ubox
28 50 0.947070670 ubox
28 52 0.184110826 ubox
28 56 0.005418148 ubox
28 59 0.005271617 ubox
28 74 0.008416065 ubox
29 41 0.024719045 ubox
29 45 0.235039421 ubox
29 47 0.014554662 ubox
29 49 0.946884551 ubox
29 51 0.184614842 ubox
29 58 0.005349834 ubox
29 62 0.009465155 ubox
30 40 0.024728983 ubox
30 42 0.216888228 ubox
30 46 0.015075588 ubox
30 50 0.184090622 ubox
30 52 0.081574337 ubox
30 60 0.006678489 ubox
30 73 0.003807689 ubox
31 38 0.005416086 ubox
31 41 0.221370448 ubox
31 45 0.014573075 ubox
31 47 0.957606022 ubox
31 49 0.113718173 ubox
31 51 0.082009491 ubox
31 72 0.003287289 ubox
32 40 0.221331706 ubox
32 42 0.112316467 ubox
32 46 0.960002041 ubox
32 50 0.082012257 ubox
32 59 0.016521366 ubox
32 71 0.003258212 ubox
33 38 0.103950684 ubox
33 41 0.112380947 ubox
33 45 0.958662177 ubox
33 47 0.081489883 ubox
33 49 0.081782936 ubox
33 58 0.017012940 ubox
34 38 0.033940654 ubox
34 41 0.060001243 ubox
34 45 0.029451895 ubox
34 47 0.048697559 ubox
36 41 0.531062935 ubox
36 45 0.068911854 ubox
36 47 0.023602222 ubox
38 42 0.048797467 ubox
38 46 0.021013339 ubox
38 52 0.004589623 ubox
40 45 0.011264696 ubox
40 47 0.026629586 ubox
40 51 0.025329306 ubox
41 46 0.026889637 ubox
41 50 0.025358201 ubox
42 49 0.024995080 ubox
45 52 0.004993451 ubox
45 59 0.006681374 ubox
46 51 0.005010222 ubox
46 58 0.006756261 ubox
46 62 0.011140152 ubox
47 56 0.005972442 ubox
47 60 0.008169928 ubox
49 56 0.020271451 ubox
49 59 0.104765597 ubox
49 60 0.022365445 ubox
50 58 0.105587548 ubox
50 62 0.007306848 ubox
51 56 0.101333631 ubox
51 59 0.049261908 ubox
51 60 0.020741338 ubox
52 58 0.069744665 ubox
52 62 0.012488735 ubox
52 63 0.021629473 ubox
52 101 0.007243127 ubox
52 104 0.004381713 ubox
55 76 0.004075774 ubox
56 62 0.020566223 ubox
56 63 0.053203175 ubox
56 75 0.004842104 ubox
56 95 0.003292939 ubox
56 98 0.024656237 ubox
56 101 0.012604448 ubox
56 104 0.003307386 ubox
58 74 0.004847807 ubox
58 91 0.004364552 ubox
59 63 0.016806278 ubox
59 95 0.043135907 ubox
59 98 0.021068097 ubox
59 101 0.005115293 ubox
59 104 0.004158632 ubox
60 72 0.004015381 ubox
60 95 0.027661257 ubox
60 98 0.005321149 ubox
61 72 0.039295851 ubox
62 69 0.004804786 ubox
62 70 0.024338083 ubox
62 71 0.041689593 ubox
62 74 0.003648065 ubox
62 91 0.028461592 ubox
63 69 0.025056051 ubox
63 70 0.041657108 ubox
63 73 0.003666741 ubox
63 91 0.078247514 ubox
64 72 0.003454647 ubox
69 85 0.003184091 ubox
69 86 0.997564658 ubox
70 85 0.998758797 ubox
70 86 0.004320790 ubox
71 84 0.998908252 ubox
72 83 0.998525397 ubox
73 82 0.998896258 ubox
74 81 0.998921767 ubox
75 79 0.011531242 ubox
75 80 0.998095368 ubox
76 80 0.003699783 ubox
86 91 0.006925858 ubox
91 95 0.045424902 ubox
91 98 0.106385407 ubox
91 101 0.045313458 ubox
91 104 0.034031764 ubox
91 107 0.010033411 ubox
21 60 0.9500000 lbox
22 59 0.9500000 lbox
23 58 0.9500000 lbox
27 51 0.9500000 lbox
28 50 0.9500000 lbox
29 49 0.9500000 lbox
31 47 0.9500000 lbox
32 46 0.9500000 lbox
33 45 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
