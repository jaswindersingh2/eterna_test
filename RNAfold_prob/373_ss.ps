%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAACGUUUUCAGGGCGAUCACUGAUCGCCGCAGCGUCGCUGCCCGAUCAUUGAUCGGCUGAAAACAGAAAUCAUUCGUGAUUUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

/coor [
[125.14833069 218.49090576]
[131.97052002 205.13211060]
[141.38078308 193.45104980]
[152.98124695 183.94163513]
[166.28146362 177.00588989]
[180.71907043 172.93708801]
[195.68093872 171.90713501]
[183.14862061 163.66450500]
[170.61630249 155.42187500]
[158.08398438 147.17922974]
[145.55168152 138.93659973]
[133.01936340 130.69396973]
[120.48703766 122.45133209]
[107.95471954 114.20869446]
[96.32851410 115.86457825]
[86.61182404 109.26938629]
[83.85825348 97.85323334]
[71.57096863 89.24958801]
[59.28369141 80.64594269]
[46.99641037 72.04229736]
[34.70912933 63.43864822]
[22.42184830 54.83500290]
[6.67947578 53.25757599]
[0.69183797 39.61948395]
[-11.59544277 31.01583862]
[-23.88272285 22.41219330]
[-36.17000580 13.80854607]
[-48.45728302 5.20489979]
[-60.74456406 -3.39874697]
[-73.66197205 -1.94113946]
[-83.74773407 -9.48753929]
[-85.85419464 -21.49777031]
[-97.88603973 -30.45514870]
[-109.91789246 -39.41252899]
[-121.94973755 -48.36990738]
[-133.98158264 -57.32728577]
[-150.29714966 -61.93585205]
[-150.38528442 -78.88957214]
[-134.11851501 -83.66751862]
[-125.02420807 -69.35913086]
[-112.99236298 -60.40175629]
[-100.96051025 -51.44437408]
[-88.92866516 -42.48699570]
[-76.89681244 -33.52961731]
[-59.44406509 -32.51133347]
[-52.14091873 -15.68602753]
[-39.85363770 -7.08238125]
[-27.56635666 1.52126539]
[-15.27907658 10.12491226]
[-2.99179626 18.72855759]
[9.29548454 27.33220482]
[24.15898895 28.29424286]
[31.02549553 42.54772186]
[43.31277466 51.15136719]
[55.60005569 59.75501633]
[67.88733673 68.35865784]
[80.17461395 76.96231079]
[92.46189880 85.56595612]
[109.14505768 86.52659607]
[116.19735718 101.67637634]
[128.72967529 109.91901398]
[141.26199341 118.16164398]
[153.79431152 126.40428162]
[166.32662964 134.64691162]
[178.85894775 142.88955688]
[191.39126587 151.13218689]
[203.92358398 159.37481689]
[209.78833008 159.20962524]
[214.74668884 161.44596863]
[229.43679810 158.41270447]
[244.12690735 155.37944031]
[258.81701660 152.34617615]
[273.50711060 149.31291199]
[288.19723511 146.27964783]
[302.88732910 143.24638367]
[314.77154541 131.94602966]
[330.42129517 136.84675598]
[333.73748779 152.90710449]
[321.30871582 163.60557556]
[305.92059326 157.93649292]
[291.23049927 160.96975708]
[276.54037476 164.00302124]
[261.85028076 167.03628540]
[247.16017151 170.06954956]
[232.47006226 173.10281372]
[217.77995300 176.13607788]
[231.30679321 182.61869812]
[243.22178650 191.73094177]
[253.02116394 203.08753967]
[260.29058838 216.20832825]
[264.72274780 230.53858948]
[266.13021851 245.47239685]
[264.45352173 260.37838745]
[259.76348877 274.62634277]
[252.25849915 287.61383057]
[242.25579834 298.79174805]
[230.17831421 307.68753052]
[216.53669739 313.92498779]
[201.90771484 317.24047852]
[186.90985107 317.49380493]
[172.17723083 314.67425537]
[158.33274841 308.90100098]
[145.96174622 300.41818237]
[135.58726501 289.58441162]
[127.64794159 276.85778809]
[122.47944641 262.77636719]
[120.30030060 247.93550110]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 67]
[8 66]
[9 65]
[10 64]
[11 63]
[12 62]
[13 61]
[14 60]
[17 58]
[18 57]
[19 56]
[20 55]
[21 54]
[22 53]
[24 51]
[25 50]
[26 49]
[27 48]
[28 47]
[29 46]
[32 44]
[33 43]
[34 42]
[35 41]
[36 40]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
