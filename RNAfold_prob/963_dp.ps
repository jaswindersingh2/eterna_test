%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (963)
} def

/sequence { (\
GGAAAGAUUGAGAUCGAAAGAUCACUAUGAAUGGAAAAAACAUUUAUGGAGCUCGAAAGGGCACAGUCGUAAUGCUUCGGCAUUGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 64 0.009949973 ubox
1 68 0.015654177 ubox
1 86 0.003390289 ubox
1 95 0.069801777 ubox
1 98 0.070403014 ubox
1 101 0.072683925 ubox
1 104 0.077279185 ubox
1 107 0.019578372 ubox
2 9 0.006559573 ubox
2 64 0.005233929 ubox
2 67 0.011938235 ubox
2 68 0.029062456 ubox
2 95 0.036809261 ubox
2 98 0.037089647 ubox
2 101 0.038317197 ubox
2 104 0.038648504 ubox
2 107 0.012625491 ubox
3 8 0.006343777 ubox
3 9 0.005255437 ubox
3 67 0.027223381 ubox
4 8 0.004273762 ubox
4 9 0.003598930 ubox
4 70 0.004567679 ubox
6 23 0.005871998 ubox
6 64 0.014693841 ubox
6 68 0.984712028 ubox
6 95 0.015396949 ubox
6 98 0.040486429 ubox
6 101 0.041607388 ubox
6 104 0.041377931 ubox
6 107 0.014475515 ubox
7 22 0.005871453 ubox
7 67 0.985986208 ubox
8 21 0.005793402 ubox
8 66 0.985287168 ubox
8 88 0.006576027 ubox
8 89 0.006693693 ubox
8 90 0.008046975 ubox
8 91 0.004386536 ubox
8 92 0.006014423 ubox
8 93 0.010215228 ubox
8 94 0.008124947 ubox
8 96 0.003386022 ubox
8 97 0.063014735 ubox
8 99 0.003755320 ubox
8 100 0.058722464 ubox
8 102 0.003733613 ubox
8 103 0.057561362 ubox
8 106 0.045644073 ubox
9 20 0.005669557 ubox
9 24 0.006143360 ubox
9 63 0.003639317 ubox
9 65 0.983985733 ubox
9 87 0.007029134 ubox
9 88 0.007209807 ubox
9 89 0.008360126 ubox
9 90 0.005393741 ubox
9 91 0.005965776 ubox
9 92 0.010577431 ubox
9 93 0.008517758 ubox
9 96 0.069987313 ubox
9 97 0.003197635 ubox
9 99 0.065589230 ubox
9 102 0.064655881 ubox
9 105 0.054120982 ubox
10 23 0.006781048 ubox
10 25 0.007465721 ubox
10 64 0.980445831 ubox
10 68 0.021558210 ubox
10 86 0.004085210 ubox
10 95 0.070757392 ubox
10 98 0.066389446 ubox
10 101 0.065517107 ubox
10 104 0.055218627 ubox
10 107 0.003587074 ubox
11 22 0.006256289 ubox
11 67 0.020196226 ubox
12 23 0.998170849 ubox
12 62 0.009255290 ubox
13 22 0.999157610 ubox
14 21 0.999294479 ubox
14 60 0.010474212 ubox
14 61 0.003735828 ubox
15 20 0.999116000 ubox
15 59 0.012198024 ubox
15 60 0.003804842 ubox
16 23 0.012782376 ubox
17 22 0.011692047 ubox
20 54 0.013087206 ubox
21 53 0.012894395 ubox
23 51 0.011214705 ubox
25 48 0.031647880 ubox
25 49 0.992161548 ubox
26 48 0.997931756 ubox
26 49 0.005677450 ubox
27 47 0.998983164 ubox
28 46 0.999098699 ubox
29 45 0.999306438 ubox
30 44 0.999253262 ubox
31 43 0.999049361 ubox
32 42 0.999513538 ubox
33 41 0.999398468 ubox
34 41 0.025451009 ubox
47 65 0.003229249 ubox
48 64 0.005790011 ubox
49 64 0.011096863 ubox
49 68 0.005312852 ubox
50 67 0.005618801 ubox
51 62 0.998772106 ubox
52 59 0.003662530 ubox
52 60 0.004665928 ubox
52 61 0.999802808 ubox
53 58 0.003471770 ubox
53 59 0.004340002 ubox
53 60 0.998334033 ubox
53 61 0.005680837 ubox
54 59 0.996988112 ubox
54 60 0.036409680 ubox
60 68 0.003354390 ubox
61 67 0.003368180 ubox
62 66 0.003382720 ubox
64 91 0.021425369 ubox
66 81 0.004547153 ubox
66 95 0.007906243 ubox
66 98 0.004651408 ubox
67 80 0.004553059 ubox
67 87 0.014837918 ubox
67 88 0.025689588 ubox
67 89 0.005194849 ubox
67 90 0.005167299 ubox
67 92 0.021995116 ubox
67 94 0.006738822 ubox
67 97 0.004338179 ubox
68 79 0.004565288 ubox
68 91 0.023889860 ubox
69 78 0.004559937 ubox
69 86 0.998700967 ubox
69 95 0.004296693 ubox
69 98 0.003891987 ubox
70 85 0.999333636 ubox
70 94 0.003841352 ubox
70 97 0.003555055 ubox
71 84 0.998745370 ubox
72 83 0.998981165 ubox
73 82 0.999550957 ubox
74 81 0.999953925 ubox
74 86 0.003170910 ubox
75 79 0.011547617 ubox
75 80 0.999132734 ubox
75 85 0.003170017 ubox
75 91 0.004768246 ubox
76 80 0.003704547 ubox
76 90 0.004776931 ubox
77 89 0.004714800 ubox
80 86 0.004853908 ubox
81 85 0.004819829 ubox
86 91 0.005541381 ubox
91 95 0.043759160 ubox
91 98 0.104511331 ubox
91 101 0.045418708 ubox
91 104 0.034889030 ubox
91 107 0.010320137 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
