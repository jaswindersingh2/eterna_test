%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (188)
} def

/sequence { (\
GGAAAUGGAUUGUCCCGUACCGCACAAGCGUGUACUUUAGGCAUGGCAUCUGCCUGCCCGGACUCUCCGAAACACUUCGGUGUUUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.027495171 ubox
1 15 0.011112383 ubox
1 16 0.005976971 ubox
1 21 0.003466302 ubox
1 66 0.008291304 ubox
1 68 0.075458012 ubox
1 73 0.048874337 ubox
1 75 0.030932209 ubox
1 76 0.011485780 ubox
1 78 0.025854456 ubox
1 86 0.008015130 ubox
1 95 0.067844962 ubox
1 98 0.068758484 ubox
1 101 0.071137928 ubox
1 104 0.072058729 ubox
1 107 0.018305365 ubox
2 6 0.010828053 ubox
2 11 0.003491807 ubox
2 14 0.011246208 ubox
2 15 0.005823187 ubox
2 20 0.003471373 ubox
2 65 0.009664247 ubox
2 67 0.075479562 ubox
2 68 0.003529319 ubox
2 73 0.034673484 ubox
2 75 0.013266206 ubox
2 77 0.025541023 ubox
2 78 0.029263203 ubox
2 85 0.006412132 ubox
2 86 0.009813105 ubox
2 95 0.035333076 ubox
2 98 0.036122109 ubox
2 101 0.037435792 ubox
2 104 0.037498711 ubox
2 107 0.012268014 ubox
3 10 0.003469042 ubox
3 13 0.010686561 ubox
3 64 0.009495048 ubox
3 66 0.064687048 ubox
3 76 0.024484314 ubox
3 77 0.029101910 ubox
3 84 0.005405766 ubox
3 85 0.009080688 ubox
4 11 0.005227154 ubox
4 64 0.004566377 ubox
4 66 0.003832208 ubox
4 76 0.027083021 ubox
4 77 0.003571310 ubox
4 84 0.007144027 ubox
5 10 0.004308030 ubox
5 11 0.007521393 ubox
5 18 0.005293235 ubox
5 64 0.011407302 ubox
5 76 0.004503581 ubox
5 83 0.004755114 ubox
6 17 0.005745189 ubox
6 69 0.106797593 ubox
6 70 0.011078241 ubox
6 71 0.003448311 ubox
6 72 0.004194048 ubox
6 74 0.010967337 ubox
6 79 0.004190488 ubox
6 82 0.003765578 ubox
6 87 0.007598510 ubox
6 88 0.009718774 ubox
6 89 0.010122197 ubox
6 90 0.016700063 ubox
6 91 0.005061863 ubox
6 92 0.011445316 ubox
6 93 0.011453838 ubox
6 94 0.009759092 ubox
6 96 0.012547531 ubox
6 97 0.009998125 ubox
6 99 0.020304654 ubox
6 100 0.010264767 ubox
6 102 0.021087540 ubox
6 103 0.008995761 ubox
6 105 0.021536778 ubox
6 106 0.008770913 ubox
7 15 0.025088941 ubox
7 16 0.028454367 ubox
7 64 0.006758629 ubox
7 65 0.024092738 ubox
7 66 0.061278212 ubox
7 67 0.006852111 ubox
7 68 0.991261478 ubox
7 73 0.007583965 ubox
7 78 0.006733425 ubox
7 95 0.009452829 ubox
7 98 0.019517049 ubox
7 101 0.021449150 ubox
7 104 0.022196835 ubox
8 14 0.025381361 ubox
8 15 0.028391812 ubox
8 63 0.005002590 ubox
8 64 0.023149191 ubox
8 65 0.080671958 ubox
8 66 0.004590157 ubox
8 67 0.992610571 ubox
8 68 0.005738586 ubox
8 77 0.006734517 ubox
8 98 0.008653422 ubox
8 101 0.009266784 ubox
8 104 0.009296903 ubox
9 13 0.022156274 ubox
9 64 0.076964918 ubox
9 66 0.987433239 ubox
9 76 0.006657294 ubox
10 70 0.003310091 ubox
10 97 0.016851985 ubox
10 100 0.018756952 ubox
10 103 0.014153110 ubox
10 106 0.010577467 ubox
11 74 0.007195876 ubox
11 96 0.018484073 ubox
11 99 0.020638479 ubox
11 102 0.016038842 ubox
11 105 0.012571569 ubox
12 63 0.998077661 ubox
12 73 0.007292593 ubox
12 95 0.018640235 ubox
12 98 0.020712220 ubox
12 101 0.016208646 ubox
12 104 0.012790840 ubox
13 62 0.998296867 ubox
13 72 0.006883814 ubox
13 92 0.004320230 ubox
13 94 0.017813253 ubox
13 97 0.019456432 ubox
13 100 0.015230177 ubox
13 103 0.012021293 ubox
14 60 0.003820102 ubox
14 61 0.996243514 ubox
14 91 0.004789739 ubox
15 60 0.991946995 ubox
15 61 0.066465779 ubox
16 40 0.004030099 ubox
16 60 0.093484343 ubox
16 91 0.011271910 ubox
17 35 0.997164043 ubox
17 36 0.008387391 ubox
17 58 0.003423031 ubox
17 59 0.033666069 ubox
18 32 0.005551678 ubox
18 34 0.999099057 ubox
19 31 0.006401247 ubox
19 33 0.999421220 ubox
20 30 0.004758820 ubox
20 32 0.999307900 ubox
21 30 0.998939130 ubox
21 32 0.017689798 ubox
22 29 0.999439679 ubox
22 31 0.024725027 ubox
22 33 0.017163325 ubox
23 28 0.998010385 ubox
23 30 0.024833535 ubox
23 32 0.018070078 ubox
24 31 0.018506112 ubox
25 30 0.018484971 ubox
36 60 0.004409648 ubox
36 62 0.023272227 ubox
37 60 0.004586552 ubox
37 61 0.025455970 ubox
37 62 0.008341784 ubox
38 56 0.042559133 ubox
38 60 0.029332313 ubox
38 61 0.009058836 ubox
39 55 0.047317033 ubox
40 54 0.047799598 ubox
40 57 0.003243183 ubox
40 58 0.992286647 ubox
40 59 0.091047674 ubox
41 53 0.047802123 ubox
41 57 0.996621355 ubox
41 58 0.065958134 ubox
42 52 0.047798358 ubox
42 56 0.998592459 ubox
43 51 0.045772349 ubox
43 55 0.976472774 ubox
45 49 0.006100667 ubox
45 50 0.031379150 ubox
45 51 0.003650186 ubox
45 53 0.009423857 ubox
45 54 0.998485730 ubox
45 58 0.007106743 ubox
46 50 0.004777952 ubox
46 53 0.998762050 ubox
46 57 0.007179300 ubox
47 52 0.997330709 ubox
47 56 0.007201950 ubox
48 55 0.006581760 ubox
59 69 0.024297202 ubox
60 65 0.005321963 ubox
60 68 0.038614976 ubox
61 67 0.038636101 ubox
62 66 0.033616375 ubox
64 92 0.024020507 ubox
65 91 0.025240250 ubox
66 89 0.004055757 ubox
66 90 0.023986531 ubox
67 80 0.075756226 ubox
67 91 0.003315412 ubox
68 79 0.079843538 ubox
69 73 0.004186600 ubox
69 75 0.007302631 ubox
69 77 0.004103054 ubox
69 78 0.111740407 ubox
69 85 0.005038003 ubox
69 86 0.981360740 ubox
70 76 0.004840573 ubox
70 77 0.110597000 ubox
70 84 0.004851340 ubox
70 85 0.983024215 ubox
71 76 0.096255741 ubox
71 77 0.004252593 ubox
71 83 0.003690520 ubox
71 84 0.982668563 ubox
72 76 0.004144930 ubox
72 81 0.011273972 ubox
72 83 0.983710716 ubox
73 79 0.010598591 ubox
73 80 0.012998450 ubox
73 82 0.984258191 ubox
74 81 0.983867575 ubox
75 79 0.012869705 ubox
75 80 0.983008905 ubox
76 80 0.004058357 ubox
76 99 0.004571343 ubox
76 100 0.016307970 ubox
76 102 0.008232949 ubox
76 103 0.009328363 ubox
77 99 0.018138762 ubox
77 100 0.013804467 ubox
77 102 0.010073899 ubox
79 98 0.097432773 ubox
79 101 0.011453050 ubox
79 104 0.004209166 ubox
80 98 0.080165519 ubox
80 101 0.011153699 ubox
80 104 0.004884964 ubox
81 96 0.148699492 ubox
81 97 0.056877342 ubox
81 99 0.004161624 ubox
81 100 0.008178657 ubox
81 103 0.003587014 ubox
82 95 0.176269404 ubox
82 98 0.004681618 ubox
83 94 0.176400920 ubox
83 97 0.004424974 ubox
84 93 0.176772465 ubox
84 96 0.003306430 ubox
85 92 0.177435267 ubox
86 91 0.177443486 ubox
91 95 0.042386376 ubox
91 98 0.102120339 ubox
91 101 0.044777319 ubox
91 104 0.034640341 ubox
91 107 0.010246115 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
