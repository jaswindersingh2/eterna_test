%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (632)
} def

/sequence { (\
GGAAAAAGAUUAAUACAUGGAUCUAUGGACGAAAAAAAAAAAAGUUUAUAGAUUUAUGUAUUGGUCAAAAUUAUAUUCGUAUAAUUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 66 0.003356087 ubox
1 71 0.003855047 ubox
1 72 0.008092065 ubox
1 74 0.008313339 ubox
1 78 0.022826233 ubox
1 86 0.003340068 ubox
1 95 0.065723981 ubox
1 98 0.066179206 ubox
1 101 0.067696907 ubox
1 104 0.068015326 ubox
1 107 0.017175200 ubox
2 66 0.004595694 ubox
2 71 0.008550653 ubox
2 72 0.034198477 ubox
2 74 0.004746985 ubox
2 77 0.022576679 ubox
2 78 0.028822710 ubox
2 86 0.006421723 ubox
2 95 0.034686810 ubox
2 98 0.034832580 ubox
2 101 0.035581736 ubox
2 104 0.035453638 ubox
2 107 0.011570749 ubox
3 65 0.003867721 ubox
3 71 0.033979980 ubox
3 72 0.018910768 ubox
3 74 0.003190404 ubox
3 76 0.021603020 ubox
3 77 0.028709156 ubox
3 85 0.004931783 ubox
3 86 0.005510845 ubox
4 71 0.019346708 ubox
4 72 0.014624823 ubox
4 74 0.006022774 ubox
4 76 0.026690174 ubox
4 85 0.003676405 ubox
4 86 0.005081156 ubox
5 71 0.014885260 ubox
5 72 0.012746743 ubox
5 74 0.007746178 ubox
5 85 0.003417103 ubox
5 86 0.005086938 ubox
6 71 0.012172286 ubox
6 72 0.019428134 ubox
6 74 0.006645214 ubox
6 85 0.003426162 ubox
6 86 0.005254279 ubox
7 71 0.020049715 ubox
7 72 0.007906472 ubox
7 74 0.004213866 ubox
7 85 0.003705274 ubox
7 86 0.004005674 ubox
8 66 0.998491192 ubox
9 65 0.999586109 ubox
10 64 0.998733732 ubox
11 63 0.997650665 ubox
12 62 0.998630301 ubox
13 61 0.998997961 ubox
14 60 0.999475341 ubox
15 59 0.999733532 ubox
16 58 0.999976009 ubox
17 57 0.999587838 ubox
18 56 0.999100310 ubox
19 55 0.997737441 ubox
20 54 0.998585087 ubox
21 53 0.999472062 ubox
22 52 0.999747036 ubox
23 51 0.999982327 ubox
24 50 0.999690187 ubox
25 49 0.999487269 ubox
26 48 0.999088528 ubox
27 47 0.997734364 ubox
28 46 0.998587177 ubox
29 45 0.999646512 ubox
30 44 0.999578954 ubox
65 92 0.005196680 ubox
66 91 0.007162086 ubox
67 72 0.005998092 ubox
67 74 0.005861986 ubox
67 76 0.003943603 ubox
67 77 0.005536123 ubox
67 85 0.004829537 ubox
67 86 0.025799959 ubox
68 72 0.003699148 ubox
68 74 0.005409847 ubox
68 76 0.005858922 ubox
68 77 0.009986221 ubox
68 85 0.019600854 ubox
68 86 0.059073140 ubox
69 74 0.005957420 ubox
69 76 0.009951755 ubox
69 77 0.013083313 ubox
69 85 0.044844231 ubox
69 86 0.883444535 ubox
70 74 0.003791968 ubox
70 76 0.014309731 ubox
70 77 0.009094232 ubox
70 80 0.009156772 ubox
70 82 0.011738061 ubox
70 85 0.944678827 ubox
70 86 0.021472797 ubox
71 75 0.012974433 ubox
71 79 0.009127895 ubox
71 81 0.011046381 ubox
71 83 0.006742970 ubox
71 84 0.954349825 ubox
71 87 0.004852995 ubox
71 88 0.026627694 ubox
71 89 0.006869571 ubox
71 90 0.007119263 ubox
71 92 0.005041841 ubox
71 93 0.004549963 ubox
71 94 0.004829211 ubox
71 96 0.003627440 ubox
71 97 0.011401743 ubox
71 99 0.003987322 ubox
71 100 0.005745558 ubox
72 79 0.004382642 ubox
72 81 0.039229563 ubox
72 83 0.958206545 ubox
72 84 0.006642054 ubox
72 87 0.030470343 ubox
72 88 0.007218896 ubox
72 89 0.007593290 ubox
72 91 0.005211222 ubox
72 92 0.004737735 ubox
72 93 0.004745927 ubox
72 94 0.004188805 ubox
72 96 0.012597868 ubox
72 97 0.007733571 ubox
72 99 0.006372319 ubox
73 80 0.042135747 ubox
73 82 0.958380670 ubox
73 85 0.008489080 ubox
73 86 0.029844989 ubox
74 79 0.040890360 ubox
74 81 0.949322667 ubox
74 83 0.049961346 ubox
74 84 0.007998064 ubox
74 87 0.014315776 ubox
74 92 0.003590291 ubox
74 93 0.004362237 ubox
74 94 0.011907745 ubox
74 96 0.007024414 ubox
74 97 0.006218767 ubox
75 80 0.855637939 ubox
75 82 0.053725990 ubox
75 85 0.017063216 ubox
75 86 0.014623480 ubox
76 81 0.053658796 ubox
76 83 0.010955706 ubox
76 84 0.018333789 ubox
76 87 0.003336211 ubox
76 88 0.006088449 ubox
76 89 0.006334415 ubox
76 90 0.004944495 ubox
76 91 0.006967143 ubox
76 92 0.006303641 ubox
76 93 0.124209392 ubox
76 94 0.008180504 ubox
76 97 0.005917336 ubox
76 100 0.005536609 ubox
76 103 0.004487046 ubox
76 106 0.003674228 ubox
77 81 0.004332823 ubox
77 83 0.017133510 ubox
77 84 0.007197688 ubox
77 87 0.006371454 ubox
77 88 0.006696385 ubox
77 89 0.005221591 ubox
77 90 0.009386966 ubox
77 91 0.005590702 ubox
77 92 0.142607274 ubox
77 93 0.007537281 ubox
77 96 0.006700957 ubox
77 97 0.004161227 ubox
77 99 0.006385328 ubox
77 100 0.003786039 ubox
77 102 0.005161298 ubox
77 105 0.004274765 ubox
78 91 0.144472471 ubox
79 85 0.009229803 ubox
79 86 0.010706524 ubox
79 95 0.031450772 ubox
79 98 0.028400399 ubox
79 101 0.022007530 ubox
79 104 0.019187009 ubox
79 107 0.006095227 ubox
80 84 0.008873134 ubox
80 87 0.043164846 ubox
80 88 0.013002458 ubox
80 89 0.032107039 ubox
80 90 0.011789583 ubox
80 94 0.030527434 ubox
80 97 0.027558019 ubox
80 100 0.021341576 ubox
80 103 0.018610691 ubox
80 106 0.005933547 ubox
81 85 0.004212047 ubox
81 86 0.045267715 ubox
82 87 0.017554556 ubox
82 88 0.013369664 ubox
82 89 0.009994253 ubox
82 90 0.005281745 ubox
82 91 0.005549918 ubox
82 92 0.009089115 ubox
82 93 0.005127409 ubox
82 96 0.003936635 ubox
85 89 0.004161907 ubox
85 90 0.007522227 ubox
85 91 0.005407877 ubox
85 92 0.021010668 ubox
85 93 0.013448854 ubox
85 94 0.014685921 ubox
85 97 0.005564346 ubox
85 100 0.004138763 ubox
85 103 0.003450413 ubox
86 90 0.007116451 ubox
86 91 0.022933834 ubox
86 92 0.016351124 ubox
86 93 0.018931055 ubox
86 94 0.006530893 ubox
86 96 0.007096745 ubox
86 97 0.004306518 ubox
86 99 0.005430199 ubox
86 100 0.003230754 ubox
86 102 0.004652328 ubox
86 105 0.003732315 ubox
91 95 0.042489624 ubox
91 98 0.102468398 ubox
91 101 0.044976805 ubox
91 104 0.034819482 ubox
91 107 0.010301626 ubox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 59 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
18 56 0.9500000 lbox
19 55 0.9500000 lbox
20 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
23 51 0.9500000 lbox
24 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
