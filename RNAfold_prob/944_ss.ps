%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAUGUAGAGUACAAAAGUACACGUUUUUAGAAAAAAACUAAAAACGACUACAAAAGUAGACUACAUUCCAUUUUCGAAUGGAAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

/coor [
[212.00186157 180.80633545]
[199.23510742 172.93168640]
[186.46835327 165.05703735]
[173.70159912 157.18238831]
[166.24121094 156.33657837]
[160.68275452 148.88845825]
[148.15043640 140.64582825]
[135.61811829 132.40319824]
[123.08580017 124.16056061]
[110.55348206 115.91792297]
[96.34245300 118.74509430]
[84.23663330 110.78297424]
[81.20388794 96.61439514]
[68.67156982 88.37175751]
[56.13925171 80.12911987]
[42.42506790 86.90174866]
[27.26236534 85.90711975]
[14.71672153 77.51229095]
[8.10174656 64.05501556]
[9.10412216 49.19363022]
[-3.42819548 40.95099640]
[-15.96051216 32.70836258]
[-31.24875832 35.69287872]
[-43.84088898 27.15514565]
[-46.59195328 12.56174850]
[-59.12426758 4.31911373]
[-71.65658569 -3.92352104]
[-84.18890381 -12.16615582]
[-96.72122192 -20.40879059]
[-109.25354004 -28.65142441]
[-121.78585815 -36.89405823]
[-134.31817627 -45.13669586]
[-146.85049438 -53.37932968]
[-161.77822876 -48.72138977]
[-176.18762207 -54.79624176]
[-183.27496338 -68.73551941]
[-179.69383240 -83.95753479]
[-167.13514709 -93.27490234]
[-151.52873230 -92.28826141]
[-140.24343872 -81.46346283]
[-138.60784912 -65.91164398]
[-126.07553864 -57.66901016]
[-113.54322052 -49.42637634]
[-101.01090240 -41.18374252]
[-88.47858429 -32.94110870]
[-75.94626617 -24.69847298]
[-63.41395187 -16.45583916]
[-50.88163376 -8.21320343]
[-38.34931564 0.02943113]
[-23.85978508 -3.22464895]
[-11.03281307 4.95602703]
[-7.71787786 20.17604637]
[4.81443930 28.41868019]
[17.34675598 36.66131592]
[30.59570122 29.85462379]
[45.57244110 30.59844780]
[58.24978638 38.79303741]
[65.16870880 52.32172394]
[64.38188934 67.59680939]
[76.91419983 75.83943939]
[89.44651794 84.08207703]
[103.65754700 81.25490570]
[115.76336670 89.21702576]
[118.79611206 103.38560486]
[131.32843018 111.62824249]
[143.86074829 119.87088013]
[156.39306641 128.11351013]
[168.92538452 136.35614014]
[181.57624817 144.41563416]
[194.34300232 152.29028320]
[207.10975647 160.16493225]
[219.87651062 168.03958130]
[227.74743652 167.98207092]
[233.64819336 171.94523621]
[248.64819336 171.94523621]
[263.64819336 171.94523621]
[278.64819336 171.94523621]
[293.64819336 171.94523621]
[305.96340942 161.66346741]
[321.65090942 165.02235413]
[328.67657471 179.44523621]
[321.65090942 193.86811829]
[305.96340942 197.22700500]
[293.64819336 186.94523621]
[278.64819336 186.94523621]
[263.64819336 186.94523621]
[248.64819336 186.94523621]
[233.64819336 186.94523621]
[245.80223083 195.73609924]
[255.06321716 207.53585815]
[260.71401978 221.43077087]
[262.31701660 236.34486389]
[259.74813843 251.12326050]
[253.20628357 264.62155151]
[243.19802856 275.79449463]
[230.49838257 283.77691650]
[216.09074402 287.95062256]
[201.09080505 287.99249268]
[186.66009521 283.89923096]
[173.91607666 275.98785400]
[163.84562683 264.87094116]
[157.22853088 251.40934753]
[154.57719421 236.64552307]
[156.09695435 221.72271729]
[161.67010498 207.79647827]
[170.86509705 195.94522095]
[182.96987915 187.08666992]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 72]
[2 71]
[3 70]
[4 69]
[6 68]
[7 67]
[8 66]
[9 65]
[10 64]
[13 61]
[14 60]
[15 59]
[20 54]
[21 53]
[22 52]
[25 49]
[26 48]
[27 47]
[28 46]
[29 45]
[30 44]
[31 43]
[32 42]
[33 41]
[74 88]
[75 87]
[76 86]
[77 85]
[78 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
