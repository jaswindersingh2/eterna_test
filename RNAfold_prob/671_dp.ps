%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (671)
} def

/sequence { (\
GGAAAGAUCAAGGAAGAAAAAAAAAAUUCCAAGAAGGAAAAAAAAAACUUCAAGAUCAAAAAAAAAAAGAUCUUCUUCGGAAGAUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.014924034 ubox
1 30 0.033578793 ubox
1 57 0.010384238 ubox
1 76 0.003721809 ubox
1 78 0.005426098 ubox
1 86 0.003721621 ubox
1 95 0.068671712 ubox
1 98 0.069511631 ubox
1 101 0.070735033 ubox
1 104 0.070930057 ubox
1 107 0.017907128 ubox
2 8 0.010957036 ubox
2 9 0.036537595 ubox
2 29 0.033607927 ubox
2 56 0.006402317 ubox
2 57 0.016483485 ubox
2 75 0.004416805 ubox
2 77 0.005395414 ubox
2 78 0.003681065 ubox
2 86 0.004131075 ubox
2 95 0.035937012 ubox
2 98 0.036390283 ubox
2 101 0.036813213 ubox
2 104 0.036662012 ubox
2 107 0.011962746 ubox
3 8 0.033475149 ubox
3 28 0.033154104 ubox
3 56 0.015141567 ubox
3 74 0.003618624 ubox
3 76 0.005292799 ubox
3 77 0.003425651 ubox
4 27 0.029359610 ubox
4 74 0.006819791 ubox
5 27 0.004081425 ubox
5 73 0.008605186 ubox
6 57 0.988418750 ubox
6 72 0.009481919 ubox
6 86 0.071221293 ubox
6 95 0.010751509 ubox
6 98 0.008412255 ubox
6 101 0.008324394 ubox
6 104 0.008158409 ubox
7 56 0.989392798 ubox
7 71 0.009485908 ubox
7 85 0.071290382 ubox
8 14 0.003175528 ubox
8 17 0.010851858 ubox
8 32 0.003232002 ubox
8 34 0.011394342 ubox
8 54 0.003523351 ubox
8 55 0.989263235 ubox
8 70 0.009487822 ubox
8 84 0.071281152 ubox
8 92 0.029603752 ubox
9 13 0.003328332 ubox
9 16 0.011359302 ubox
9 33 0.012341241 ubox
9 54 0.986280927 ubox
9 69 0.009482132 ubox
9 83 0.071155207 ubox
9 91 0.031421202 ubox
10 50 0.013464635 ubox
11 49 0.013870686 ubox
11 50 0.009231523 ubox
12 29 0.008600441 ubox
12 30 0.592199786 ubox
12 48 0.013876483 ubox
12 49 0.009500431 ubox
12 51 0.121413674 ubox
12 78 0.003312908 ubox
13 28 0.008454460 ubox
13 29 0.592806267 ubox
13 30 0.005521092 ubox
13 48 0.009498736 ubox
13 50 0.094789017 ubox
13 51 0.789962557 ubox
13 78 0.066317078 ubox
14 27 0.009767883 ubox
14 28 0.591131913 ubox
14 49 0.077927020 ubox
14 50 0.794119240 ubox
14 77 0.066349058 ubox
15 27 0.575757773 ubox
15 28 0.009924653 ubox
15 49 0.795074148 ubox
15 50 0.006362209 ubox
15 76 0.066333970 ubox
16 27 0.010309198 ubox
16 28 0.005078097 ubox
16 29 0.032970130 ubox
16 30 0.004301986 ubox
16 48 0.793991594 ubox
16 49 0.007836060 ubox
16 50 0.007129662 ubox
16 51 0.019470262 ubox
16 75 0.066299971 ubox
17 27 0.009477249 ubox
17 28 0.033749511 ubox
17 49 0.009259390 ubox
17 50 0.019504600 ubox
17 74 0.058085715 ubox
18 27 0.035163137 ubox
18 28 0.005240724 ubox
18 49 0.018039079 ubox
18 73 0.032805339 ubox
19 27 0.008589942 ubox
19 28 0.007897768 ubox
20 27 0.012016798 ubox
20 28 0.005778485 ubox
21 27 0.008669870 ubox
21 28 0.006764486 ubox
22 27 0.009124251 ubox
22 28 0.004512628 ubox
23 27 0.005539886 ubox
27 35 0.034992000 ubox
27 36 0.009665603 ubox
27 37 0.003890157 ubox
27 38 0.049843985 ubox
27 39 0.735712700 ubox
27 40 0.029711589 ubox
27 41 0.007660870 ubox
27 42 0.003670133 ubox
28 34 0.035713052 ubox
28 35 0.008517905 ubox
28 36 0.003781174 ubox
28 37 0.045650222 ubox
28 38 0.795578894 ubox
28 39 0.022971924 ubox
28 40 0.003362210 ubox
28 55 0.003945597 ubox
29 33 0.035542057 ubox
29 36 0.045717519 ubox
29 37 0.799696397 ubox
29 54 0.004181568 ubox
30 36 0.799204954 ubox
30 37 0.005421848 ubox
30 54 0.005703503 ubox
31 50 0.006922990 ubox
32 49 0.007788163 ubox
33 48 0.007851770 ubox
33 51 0.594552025 ubox
33 57 0.003392982 ubox
33 78 0.003811264 ubox
34 50 0.595027478 ubox
34 56 0.003309555 ubox
34 77 0.003812960 ubox
35 49 0.594978392 ubox
35 50 0.011178951 ubox
35 76 0.003806132 ubox
36 48 0.594987057 ubox
36 49 0.014386369 ubox
36 51 0.016688043 ubox
36 75 0.003793191 ubox
37 48 0.017363586 ubox
37 50 0.016484422 ubox
37 51 0.026083445 ubox
38 49 0.015807171 ubox
38 50 0.025894630 ubox
39 49 0.023880925 ubox
39 50 0.004558481 ubox
40 49 0.005913612 ubox
40 50 0.004191192 ubox
41 49 0.004519661 ubox
41 50 0.007010819 ubox
42 49 0.007279099 ubox
42 50 0.005365857 ubox
43 49 0.005680121 ubox
43 50 0.006256687 ubox
44 49 0.006152768 ubox
44 50 0.003736717 ubox
45 49 0.003215036 ubox
52 74 0.034628959 ubox
53 73 0.060957569 ubox
54 72 0.071929278 ubox
54 101 0.006128612 ubox
55 71 0.071977314 ubox
56 70 0.071982671 ubox
57 69 0.071940480 ubox
69 86 0.995813697 ubox
70 85 0.996824079 ubox
71 84 0.997030199 ubox
72 83 0.997303905 ubox
73 81 0.008136261 ubox
73 82 0.996749124 ubox
73 93 0.008215918 ubox
74 80 0.011422690 ubox
74 81 0.996812748 ubox
74 92 0.011115670 ubox
75 79 0.016102241 ubox
75 80 0.996230561 ubox
75 91 0.012078083 ubox
76 80 0.003240006 ubox
76 90 0.012062292 ubox
77 84 0.003635847 ubox
77 89 0.011826401 ubox
78 83 0.003907817 ubox
80 86 0.011937537 ubox
81 85 0.010387847 ubox
85 92 0.007599020 ubox
86 91 0.010230516 ubox
91 95 0.043058218 ubox
91 98 0.103771276 ubox
91 101 0.045506189 ubox
91 104 0.035201798 ubox
91 107 0.010414526 ubox
6 57 0.9500000 lbox
7 56 0.9500000 lbox
8 55 0.9500000 lbox
9 54 0.9500000 lbox
13 51 0.9500000 lbox
14 50 0.9500000 lbox
15 49 0.9500000 lbox
16 48 0.9500000 lbox
27 39 0.9500000 lbox
28 38 0.9500000 lbox
29 37 0.9500000 lbox
30 36 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
