%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1080)
} def

/sequence { (\
GGAAAAAAGUAUAAUACACGAUGCGUUUCGCAAUCGAAAAGCGUAGUAAAAUACACGCAGUAUAAUACGUAGACAUUCGUGUCUACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.007024611 ubox
1 68 0.006785996 ubox
1 86 0.004104638 ubox
1 95 0.069002407 ubox
1 98 0.069582929 ubox
1 101 0.071225700 ubox
1 104 0.071640023 ubox
1 107 0.018089818 ubox
2 29 0.004243134 ubox
2 68 0.004969690 ubox
2 95 0.036423271 ubox
2 98 0.036626917 ubox
2 101 0.037446791 ubox
2 104 0.037311655 ubox
2 107 0.012175411 ubox
3 28 0.004218939 ubox
4 27 0.004110371 ubox
5 26 0.003624415 ubox
7 70 0.004293590 ubox
8 15 0.004067930 ubox
8 66 0.003280633 ubox
9 15 0.003443334 ubox
9 17 0.044448038 ubox
9 19 0.004605879 ubox
9 24 0.012842154 ubox
9 54 0.026951613 ubox
9 63 0.015718130 ubox
9 66 0.008991279 ubox
9 68 0.991026492 ubox
9 95 0.025874862 ubox
9 98 0.025772768 ubox
9 101 0.025977817 ubox
9 104 0.026022308 ubox
9 107 0.009087642 ubox
10 14 0.003291180 ubox
10 16 0.044211854 ubox
10 18 0.004577883 ubox
10 23 0.012852977 ubox
10 53 0.026982546 ubox
10 62 0.016141396 ubox
10 64 0.009762865 ubox
10 65 0.008978842 ubox
10 67 0.992428427 ubox
10 94 0.024903609 ubox
10 97 0.024785573 ubox
10 100 0.024978754 ubox
10 103 0.025020389 ubox
10 106 0.008828886 ubox
11 15 0.039218877 ubox
11 22 0.012835524 ubox
11 52 0.026919837 ubox
11 61 0.016144307 ubox
11 63 0.010471803 ubox
11 66 0.991642089 ubox
12 21 0.012730021 ubox
12 51 0.026017079 ubox
12 60 0.015727716 ubox
12 62 0.010442513 ubox
12 64 0.039493468 ubox
12 65 0.962033337 ubox
12 67 0.006065107 ubox
12 92 0.005983141 ubox
13 61 0.009720038 ubox
13 63 0.039404252 ubox
13 66 0.006360647 ubox
14 61 0.008336765 ubox
14 63 0.962306869 ubox
15 38 0.004351180 ubox
15 39 0.003424620 ubox
15 40 0.005616611 ubox
15 48 0.025879664 ubox
15 60 0.008374841 ubox
15 62 0.991941166 ubox
15 64 0.007183805 ubox
16 47 0.026476158 ubox
16 61 0.992789139 ubox
16 63 0.007060669 ubox
17 46 0.026399025 ubox
17 60 0.991659429 ubox
17 91 0.006831078 ubox
18 26 0.023404278 ubox
18 44 0.005764640 ubox
18 47 0.029623563 ubox
18 61 0.006495367 ubox
19 25 0.028548594 ubox
19 30 0.025860220 ubox
19 36 0.974967081 ubox
19 43 0.005746335 ubox
19 46 0.029927371 ubox
19 57 0.022183615 ubox
19 60 0.006884086 ubox
20 24 0.026879033 ubox
20 29 0.026364588 ubox
20 34 0.012461666 ubox
20 35 0.993729272 ubox
20 42 0.004595151 ubox
20 56 0.021976081 ubox
20 58 0.003491725 ubox
21 28 0.025986890 ubox
21 34 0.990436270 ubox
21 44 0.048971538 ubox
22 32 0.703176009 ubox
22 33 0.698120918 ubox
22 43 0.050191662 ubox
22 45 0.015503297 ubox
22 55 0.004264327 ubox
22 59 0.027777016 ubox
23 31 0.994907166 ubox
23 42 0.053239183 ubox
23 44 0.016679872 ubox
23 54 0.003965209 ubox
23 58 0.028065670 ubox
24 30 0.995536469 ubox
24 36 0.003297094 ubox
24 41 0.053215162 ubox
24 43 0.016805159 ubox
24 57 0.028063670 ubox
25 29 0.931330151 ubox
25 31 0.027401924 ubox
25 35 0.003316811 ubox
25 42 0.016921238 ubox
25 52 0.003744283 ubox
25 56 0.027710164 ubox
25 95 0.011418328 ubox
26 30 0.025680916 ubox
26 39 0.056927154 ubox
26 40 0.003870697 ubox
26 41 0.016357610 ubox
26 51 0.004090796 ubox
26 55 0.024268093 ubox
26 94 0.011419199 ubox
27 38 0.071654312 ubox
27 39 0.003993809 ubox
27 40 0.013161996 ubox
27 45 0.004773301 ubox
27 46 0.006297855 ubox
27 50 0.004890299 ubox
27 93 0.011389507 ubox
28 37 0.074205187 ubox
28 39 0.011023788 ubox
28 45 0.006431190 ubox
28 49 0.004698939 ubox
28 53 0.003554597 ubox
28 92 0.011372895 ubox
29 36 0.074561832 ubox
29 43 0.015408111 ubox
29 91 0.011346807 ubox
30 35 0.069768957 ubox
30 42 0.016728079 ubox
30 47 0.004293010 ubox
31 36 0.012136903 ubox
31 41 0.016717499 ubox
31 46 0.004358185 ubox
35 43 0.004632382 ubox
36 42 0.004799414 ubox
38 61 0.012885769 ubox
39 61 0.003604705 ubox
41 56 0.026755358 ubox
41 58 0.996292214 ubox
42 57 0.997315768 ubox
43 54 0.054494983 ubox
43 56 0.996664534 ubox
43 58 0.005711012 ubox
44 51 0.003462633 ubox
44 53 0.060848661 ubox
44 55 0.990193353 ubox
44 57 0.005549256 ubox
45 52 0.071222817 ubox
46 52 0.034357128 ubox
46 54 0.981503006 ubox
46 56 0.007485213 ubox
46 58 0.006219974 ubox
46 68 0.019662958 ubox
47 51 0.033046393 ubox
47 53 0.975265160 ubox
47 55 0.007565122 ubox
47 57 0.006087531 ubox
47 67 0.019675694 ubox
48 52 0.864612123 ubox
48 66 0.019241550 ubox
51 63 0.023271075 ubox
52 62 0.024128280 ubox
53 61 0.024227446 ubox
54 60 0.024222414 ubox
57 98 0.003882216 ubox
59 66 0.004721899 ubox
60 66 0.004572676 ubox
60 68 0.053954938 ubox
60 95 0.027588225 ubox
60 98 0.005136610 ubox
61 65 0.004359119 ubox
61 67 0.053674480 ubox
61 94 0.026792410 ubox
61 97 0.004950170 ubox
62 66 0.047597407 ubox
63 92 0.014162911 ubox
65 82 0.003375421 ubox
66 81 0.003567926 ubox
66 88 0.003468001 ubox
66 89 0.006903558 ubox
66 90 0.003907849 ubox
67 80 0.003603092 ubox
68 79 0.003608685 ubox
68 91 0.004759553 ubox
69 78 0.003634217 ubox
69 86 0.998197988 ubox
69 95 0.003897431 ubox
70 85 0.999421638 ubox
71 84 0.999652146 ubox
72 83 0.999960958 ubox
73 80 0.004762710 ubox
73 82 0.999821558 ubox
74 79 0.007433461 ubox
74 81 0.999537629 ubox
75 80 0.831726735 ubox
79 95 0.004213871 ubox
80 94 0.004086355 ubox
82 92 0.004285003 ubox
83 91 0.004615603 ubox
84 90 0.004512986 ubox
86 91 0.005427371 ubox
91 95 0.043188941 ubox
91 98 0.103946872 ubox
91 101 0.045519697 ubox
91 104 0.035160755 ubox
91 107 0.010400457 ubox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
