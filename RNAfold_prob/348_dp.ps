%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (348)
} def

/sequence { (\
GGAAAGGACGACCGAAGAAGGUCCGCAAAGCGAGUCCAGGCACAGGAAGACUGCUCUGAAAAGAGGCCGACCGUCUUCGGACGGUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.008413098 ubox
1 13 0.003310053 ubox
1 31 0.003499843 ubox
1 37 0.085006359 ubox
1 41 0.026560049 ubox
1 43 0.008922145 ubox
1 67 0.005454818 ubox
1 68 0.143921397 ubox
1 86 0.007673472 ubox
1 95 0.133670399 ubox
1 98 0.133065607 ubox
1 101 0.136109767 ubox
1 104 0.136684809 ubox
1 107 0.034506782 ubox
2 9 0.006194982 ubox
2 12 0.003301891 ubox
2 31 0.004514017 ubox
2 36 0.085004121 ubox
2 37 0.003643354 ubox
2 41 0.037166030 ubox
2 67 0.143473180 ubox
2 68 0.011198100 ubox
2 85 0.003327433 ubox
2 86 0.009007660 ubox
2 95 0.069695234 ubox
2 98 0.069837646 ubox
2 101 0.071317442 ubox
2 104 0.071037463 ubox
2 107 0.023178301 ubox
3 35 0.080018574 ubox
3 85 0.006980501 ubox
4 35 0.003551582 ubox
6 13 0.006259872 ubox
6 24 0.016101189 ubox
6 26 0.005121446 ubox
6 31 0.012669108 ubox
6 37 0.973795794 ubox
6 68 0.021526218 ubox
6 85 0.003530691 ubox
6 86 0.105595976 ubox
6 95 0.011616579 ubox
6 98 0.011158246 ubox
6 101 0.010963527 ubox
6 104 0.010662191 ubox
6 107 0.003701314 ubox
7 12 0.006230586 ubox
7 23 0.016114896 ubox
7 24 0.004198362 ubox
7 26 0.020339526 ubox
7 31 0.017374745 ubox
7 36 0.974899983 ubox
7 37 0.003353563 ubox
7 67 0.021489483 ubox
7 85 0.059181126 ubox
7 86 0.155939145 ubox
7 95 0.006780766 ubox
7 98 0.006687307 ubox
7 101 0.005660545 ubox
7 104 0.005390363 ubox
8 22 0.015685245 ubox
8 35 0.974478122 ubox
8 85 0.155359466 ubox
9 21 0.015061744 ubox
9 25 0.018501173 ubox
9 30 0.010781979 ubox
9 32 0.003201176 ubox
9 34 0.972936230 ubox
9 66 0.014365562 ubox
9 83 0.145129531 ubox
9 84 0.132178152 ubox
9 91 0.005983586 ubox
10 22 0.003663994 ubox
10 23 0.977430035 ubox
10 24 0.016759601 ubox
10 82 0.166381371 ubox
10 86 0.008071775 ubox
11 22 0.979758655 ubox
11 85 0.008073252 ubox
12 21 0.980179733 ubox
12 80 0.196693980 ubox
12 84 0.007358852 ubox
13 20 0.979956352 ubox
13 79 0.197057104 ubox
13 83 0.007064879 ubox
14 78 0.197106779 ubox
14 82 0.004245798 ubox
15 77 0.197063210 ubox
16 76 0.197019140 ubox
17 75 0.197101336 ubox
18 74 0.186090436 ubox
19 74 0.005694586 ubox
20 37 0.008961276 ubox
20 72 0.196811342 ubox
21 36 0.008967431 ubox
21 71 0.197110682 ubox
21 82 0.003951621 ubox
22 33 0.004683761 ubox
22 70 0.197071613 ubox
22 81 0.004915273 ubox
23 32 0.005529906 ubox
23 34 0.009473500 ubox
23 69 0.196683857 ubox
23 80 0.004928966 ubox
24 30 0.023250879 ubox
24 32 0.966426216 ubox
24 34 0.003464303 ubox
24 69 0.006787683 ubox
24 79 0.004930499 ubox
25 31 0.976116384 ubox
25 35 0.004480996 ubox
25 41 0.003804854 ubox
25 67 0.180479553 ubox
25 68 0.007572757 ubox
25 78 0.004910481 ubox
26 30 0.969048762 ubox
26 32 0.019762459 ubox
26 34 0.005002207 ubox
26 40 0.003802237 ubox
26 58 0.003825777 ubox
26 66 0.180438246 ubox
27 57 0.004605815 ubox
27 77 0.003934069 ubox
28 76 0.003808507 ubox
29 52 0.011901557 ubox
29 55 0.017958961 ubox
30 37 0.003761447 ubox
30 41 0.173826003 ubox
30 51 0.012258920 ubox
30 54 0.021627059 ubox
30 74 0.004302483 ubox
31 39 0.008177987 ubox
31 40 0.173926310 ubox
31 49 0.006422827 ubox
31 53 0.023127027 ubox
31 63 0.026069778 ubox
31 65 0.003553221 ubox
31 73 0.004990362 ubox
32 37 0.010377572 ubox
32 41 0.004664279 ubox
32 52 0.013841543 ubox
32 56 0.003205201 ubox
32 72 0.004989792 ubox
33 52 0.034136957 ubox
33 55 0.003254238 ubox
33 57 0.005308234 ubox
34 41 0.020174999 ubox
34 51 0.036298874 ubox
34 54 0.003245051 ubox
34 56 0.005422344 ubox
34 67 0.003452773 ubox
34 71 0.005308677 ubox
34 95 0.004453920 ubox
34 98 0.004209224 ubox
34 101 0.004208870 ubox
34 104 0.004136712 ubox
35 40 0.019139929 ubox
35 47 0.027031196 ubox
35 50 0.035103404 ubox
35 59 0.023031365 ubox
35 60 0.007758769 ubox
35 66 0.003420892 ubox
35 70 0.005335609 ubox
35 92 0.003671574 ubox
35 94 0.004163885 ubox
35 97 0.003968613 ubox
35 100 0.003971879 ubox
35 103 0.003904276 ubox
36 46 0.029282343 ubox
36 49 0.034082356 ubox
36 58 0.018283591 ubox
36 65 0.003307943 ubox
36 69 0.005291673 ubox
36 91 0.003935865 ubox
37 45 0.029801019 ubox
37 46 0.010643267 ubox
37 53 0.013050840 ubox
37 58 0.027040098 ubox
37 91 0.003247679 ubox
38 52 0.016472871 ubox
38 57 0.031305552 ubox
39 43 0.007405649 ubox
39 51 0.016734824 ubox
39 52 0.004528464 ubox
39 55 0.015357527 ubox
39 56 0.031292179 ubox
39 57 0.007318200 ubox
39 67 0.004307009 ubox
39 68 0.963086246 ubox
39 95 0.011179261 ubox
39 98 0.011081296 ubox
39 101 0.011303771 ubox
39 104 0.011321606 ubox
39 107 0.003952411 ubox
40 51 0.004910165 ubox
40 54 0.027157972 ubox
40 55 0.021649312 ubox
40 56 0.007985543 ubox
40 67 0.964287138 ubox
40 68 0.004595413 ubox
40 95 0.006674074 ubox
40 98 0.006639076 ubox
40 101 0.006759183 ubox
40 104 0.006728647 ubox
41 45 0.009042036 ubox
41 46 0.013836642 ubox
41 49 0.008765455 ubox
41 53 0.026904484 ubox
41 65 0.005169057 ubox
41 66 0.963105957 ubox
41 91 0.008562806 ubox
42 52 0.021699324 ubox
42 55 0.006839136 ubox
43 49 0.016039384 ubox
43 53 0.989982979 ubox
43 58 0.014448498 ubox
43 63 0.012816616 ubox
43 65 0.012124970 ubox
44 52 0.994277225 ubox
44 55 0.005962265 ubox
44 57 0.014842941 ubox
45 51 0.994558011 ubox
45 52 0.027841278 ubox
45 54 0.007265107 ubox
45 56 0.014800623 ubox
45 57 0.008402364 ubox
45 68 0.004612734 ubox
46 51 0.033764246 ubox
46 52 0.003455212 ubox
46 54 0.003961794 ubox
46 55 0.013481992 ubox
46 56 0.008573762 ubox
46 67 0.004557926 ubox
47 52 0.006776444 ubox
47 55 0.007447784 ubox
48 55 0.005465401 ubox
48 57 0.026844859 ubox
49 54 0.007270483 ubox
49 56 0.027068255 ubox
49 68 0.004539349 ubox
49 86 0.004739901 ubox
50 55 0.024387549 ubox
50 85 0.004744628 ubox
51 66 0.003866885 ubox
51 84 0.004745638 ubox
52 83 0.004740660 ubox
53 67 0.021540261 ubox
53 68 0.003978822 ubox
53 82 0.004734008 ubox
54 63 0.010493691 ubox
54 65 0.993302267 ubox
54 66 0.018651323 ubox
55 62 0.010027712 ubox
55 64 0.997229762 ubox
55 65 0.007996939 ubox
55 66 0.008239105 ubox
55 81 0.004689817 ubox
56 63 0.997829048 ubox
56 65 0.037568561 ubox
56 80 0.004705699 ubox
57 61 0.010546832 ubox
57 62 0.987787116 ubox
57 64 0.037452736 ubox
57 79 0.004702072 ubox
58 78 0.004695070 ubox
59 77 0.004346564 ubox
62 76 0.003337603 ubox
63 75 0.003889346 ubox
64 74 0.003813780 ubox
65 72 0.003939984 ubox
65 86 0.010459887 ubox
66 71 0.003922041 ubox
66 85 0.013226269 ubox
67 84 0.013629670 ubox
67 91 0.004644676 ubox
68 83 0.013639754 ubox
68 91 0.007025414 ubox
69 82 0.013611000 ubox
69 86 0.978794294 ubox
70 85 0.979936828 ubox
71 80 0.013642964 ubox
71 84 0.980242791 ubox
72 79 0.013659578 ubox
72 83 0.980234703 ubox
73 78 0.013499963 ubox
73 82 0.980214424 ubox
74 80 0.007202632 ubox
74 81 0.980012826 ubox
75 79 0.013295550 ubox
75 80 0.979194330 ubox
84 95 0.013597291 ubox
84 98 0.005659257 ubox
84 101 0.004443189 ubox
84 104 0.003987037 ubox
85 92 0.018140143 ubox
85 94 0.013143483 ubox
85 97 0.005343229 ubox
85 100 0.004202067 ubox
85 103 0.003786420 ubox
86 91 0.020752192 ubox
91 95 0.046082356 ubox
91 98 0.107766198 ubox
91 101 0.045687350 ubox
91 104 0.034022055 ubox
91 107 0.010035530 ubox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
