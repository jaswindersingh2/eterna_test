%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (274)
} def

/sequence { (\
GGAAAAAAGUAGAACUACGAAAGUAGAGAGUGGAGGAGGAUGGGAAACGAUCACUCUGCUCAACUACAGAUAUAAUUCGUUAUAUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.010963056 ubox
1 15 0.015580238 ubox
1 16 0.013131713 ubox
1 18 0.019779629 ubox
1 64 0.011015399 ubox
1 65 0.017959999 ubox
1 67 0.017412033 ubox
1 78 0.007765036 ubox
1 86 0.004946997 ubox
1 95 0.077251212 ubox
1 98 0.077886468 ubox
1 101 0.080256621 ubox
1 104 0.081862037 ubox
1 107 0.020785247 ubox
2 10 0.005970561 ubox
2 15 0.013957002 ubox
2 18 0.007922664 ubox
2 64 0.018960157 ubox
2 67 0.009955208 ubox
2 77 0.007668017 ubox
2 78 0.008581040 ubox
2 86 0.006639597 ubox
2 95 0.040777499 ubox
2 98 0.040961984 ubox
2 101 0.042264203 ubox
2 104 0.042370461 ubox
2 107 0.013835854 ubox
3 10 0.010078327 ubox
3 16 0.003272041 ubox
3 65 0.004204974 ubox
3 76 0.007268384 ubox
3 77 0.008526107 ubox
3 85 0.005722853 ubox
4 10 0.007306049 ubox
4 16 0.003202060 ubox
4 65 0.003660626 ubox
4 76 0.007723812 ubox
5 10 0.007984473 ubox
6 10 0.004971962 ubox
7 16 0.006653914 ubox
7 65 0.004782734 ubox
8 16 0.090757697 ubox
8 65 0.087273076 ubox
9 15 0.094246286 ubox
9 16 0.004786746 ubox
9 18 0.179693885 ubox
9 64 0.090560979 ubox
9 67 0.887119791 ubox
9 83 0.004089936 ubox
9 85 0.005380299 ubox
9 95 0.087780611 ubox
9 98 0.101780552 ubox
9 101 0.102007875 ubox
9 104 0.102655626 ubox
9 107 0.035852558 ubox
10 14 0.084983784 ubox
10 17 0.179123491 ubox
10 19 0.003869756 ubox
10 27 0.005363652 ubox
10 62 0.004007989 ubox
10 63 0.087334852 ubox
10 66 0.888146851 ubox
10 82 0.004192132 ubox
10 84 0.005805495 ubox
10 87 0.005007662 ubox
10 88 0.005856525 ubox
10 89 0.006030437 ubox
10 90 0.005916365 ubox
10 91 0.005471457 ubox
10 92 0.007148237 ubox
10 93 0.007212677 ubox
10 94 0.084699563 ubox
10 96 0.006807584 ubox
10 97 0.098772007 ubox
10 99 0.006394396 ubox
10 100 0.098967913 ubox
10 102 0.006330473 ubox
10 103 0.099605055 ubox
10 105 0.005300727 ubox
10 106 0.035150304 ubox
11 16 0.169237370 ubox
11 65 0.887847149 ubox
11 81 0.004061751 ubox
11 83 0.005736841 ubox
12 16 0.004343767 ubox
12 18 0.017569821 ubox
12 61 0.006600394 ubox
12 64 0.882621846 ubox
12 65 0.004477427 ubox
12 67 0.010312150 ubox
12 78 0.009901552 ubox
12 86 0.013739437 ubox
12 95 0.057546900 ubox
12 98 0.056748953 ubox
12 101 0.057673451 ubox
12 104 0.029805375 ubox
12 107 0.008082421 ubox
13 60 0.005030828 ubox
13 65 0.003938915 ubox
13 77 0.009879489 ubox
13 85 0.013407153 ubox
14 24 0.044722246 ubox
14 76 0.009151043 ubox
14 80 0.003528774 ubox
14 83 0.005761996 ubox
15 19 0.007592720 ubox
15 23 0.046484383 ubox
15 26 0.948861074 ubox
15 79 0.003450856 ubox
15 91 0.023060585 ubox
16 21 0.006427776 ubox
16 22 0.045734396 ubox
16 25 0.954527246 ubox
16 26 0.003930926 ubox
16 74 0.006473810 ubox
16 82 0.004912271 ubox
16 90 0.022276510 ubox
16 93 0.003251869 ubox
17 24 0.955042146 ubox
17 73 0.006368450 ubox
17 80 0.017550821 ubox
17 81 0.003559483 ubox
18 23 0.954820750 ubox
18 26 0.007693585 ubox
18 79 0.018461450 ubox
18 91 0.008572417 ubox
19 67 0.006448125 ubox
19 78 0.018513023 ubox
19 95 0.010753355 ubox
19 98 0.010624501 ubox
19 101 0.010811454 ubox
19 104 0.010829217 ubox
19 107 0.004098961 ubox
20 77 0.018360719 ubox
21 76 0.016898213 ubox
22 65 0.030875610 ubox
23 64 0.032081536 ubox
23 67 0.287626165 ubox
23 95 0.003756256 ubox
23 98 0.004332617 ubox
23 101 0.004388881 ubox
23 104 0.004386045 ubox
24 63 0.031792016 ubox
24 66 0.287997656 ubox
24 94 0.003583733 ubox
24 97 0.004168079 ubox
24 100 0.004221051 ubox
24 103 0.004218801 ubox
25 65 0.287974579 ubox
26 61 0.004721836 ubox
26 64 0.286796049 ubox
26 67 0.003200320 ubox
27 57 0.005706170 ubox
27 60 0.004428895 ubox
27 65 0.011676647 ubox
28 56 0.005872609 ubox
28 59 0.003681515 ubox
28 61 0.996590554 ubox
28 64 0.009277910 ubox
28 67 0.026180927 ubox
29 55 0.005882829 ubox
29 60 0.997824866 ubox
29 65 0.047331089 ubox
30 54 0.005896338 ubox
30 59 0.998113044 ubox
30 61 0.010781674 ubox
30 64 0.048555016 ubox
30 67 0.011661624 ubox
31 53 0.005891153 ubox
31 58 0.995936004 ubox
31 62 0.024740600 ubox
31 63 0.043563159 ubox
31 66 0.011649605 ubox
32 52 0.005681312 ubox
32 57 0.979344548 ubox
32 59 0.008940832 ubox
32 60 0.021392818 ubox
32 61 0.030091185 ubox
32 65 0.011468633 ubox
33 51 0.005245877 ubox
33 56 0.982482453 ubox
33 59 0.028917930 ubox
33 60 0.022508699 ubox
33 61 0.042811266 ubox
33 64 0.010909999 ubox
34 55 0.980224427 ubox
34 57 0.021504802 ubox
34 60 0.043038025 ubox
35 48 0.004581021 ubox
35 54 0.969136223 ubox
35 55 0.054595043 ubox
35 56 0.019302196 ubox
35 57 0.174034318 ubox
35 59 0.040088126 ubox
36 52 0.153708616 ubox
36 54 0.125670327 ubox
36 55 0.014446868 ubox
36 56 0.183390556 ubox
36 61 0.009889993 ubox
37 51 0.149824166 ubox
37 55 0.186028588 ubox
37 57 0.021517300 ubox
37 60 0.009885006 ubox
38 48 0.023912289 ubox
38 51 0.048947596 ubox
38 52 0.211206194 ubox
38 54 0.189406812 ubox
38 56 0.021466875 ubox
38 59 0.009865522 ubox
39 48 0.046829756 ubox
39 51 0.152104349 ubox
39 52 0.957976268 ubox
39 54 0.003752570 ubox
39 55 0.012810367 ubox
40 51 0.972251103 ubox
40 57 0.008681438 ubox
41 45 0.004921995 ubox
41 46 0.027570189 ubox
41 47 0.033716529 ubox
41 49 0.160030205 ubox
41 50 0.971292574 ubox
41 53 0.018094133 ubox
42 48 0.183446612 ubox
42 52 0.018183897 ubox
42 55 0.007219747 ubox
42 56 0.005362802 ubox
43 48 0.966151228 ubox
43 51 0.017230753 ubox
43 54 0.007481463 ubox
43 55 0.005264292 ubox
44 48 0.012441017 ubox
44 52 0.006774683 ubox
44 54 0.005230509 ubox
45 51 0.006529293 ubox
64 79 0.003181022 ubox
64 91 0.138883369 ubox
65 82 0.003235795 ubox
65 87 0.006819236 ubox
65 88 0.012058234 ubox
65 89 0.010151982 ubox
65 90 0.135485716 ubox
65 91 0.008578351 ubox
65 92 0.008809294 ubox
65 93 0.003457835 ubox
66 80 0.005750744 ubox
66 81 0.003211719 ubox
67 79 0.006220281 ubox
67 91 0.011240698 ubox
69 77 0.004013358 ubox
69 78 0.033312582 ubox
69 81 0.004231952 ubox
69 86 0.996385061 ubox
70 76 0.004366258 ubox
70 77 0.032885179 ubox
70 80 0.004378506 ubox
70 83 0.010768260 ubox
70 85 0.997412852 ubox
71 75 0.004044893 ubox
71 79 0.004314259 ubox
71 82 0.011526832 ubox
71 84 0.997354136 ubox
72 81 0.011797519 ubox
72 83 0.997336417 ubox
72 85 0.003176154 ubox
73 79 0.003293630 ubox
73 82 0.996982462 ubox
73 84 0.003751304 ubox
74 80 0.019224376 ubox
74 81 0.982318425 ubox
74 83 0.003904021 ubox
75 80 0.773628096 ubox
75 81 0.038924633 ubox
75 83 0.003601570 ubox
76 82 0.004828785 ubox
76 93 0.018065946 ubox
76 100 0.004455221 ubox
77 92 0.020735522 ubox
77 99 0.005257098 ubox
77 100 0.003368530 ubox
78 91 0.020995930 ubox
79 86 0.006233214 ubox
79 95 0.018795162 ubox
79 98 0.033709801 ubox
79 101 0.008538612 ubox
79 104 0.006356737 ubox
80 88 0.003821990 ubox
80 89 0.009635000 ubox
80 90 0.004228815 ubox
80 94 0.018730512 ubox
80 97 0.033638465 ubox
80 100 0.008488353 ubox
80 103 0.006316856 ubox
81 87 0.003910361 ubox
81 88 0.010666625 ubox
81 89 0.004401885 ubox
81 93 0.018064234 ubox
81 96 0.031365720 ubox
81 99 0.007840719 ubox
81 102 0.005841894 ubox
83 90 0.004015504 ubox
83 91 0.003974024 ubox
83 92 0.003166719 ubox
83 94 0.019494539 ubox
85 92 0.038356146 ubox
86 91 0.039794903 ubox
91 95 0.044427347 ubox
91 98 0.104894292 ubox
91 101 0.044987087 ubox
91 104 0.034118402 ubox
91 107 0.010070434 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
31 58 0.9500000 lbox
32 57 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
