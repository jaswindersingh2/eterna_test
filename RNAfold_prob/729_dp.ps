%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (729)
} def

/sequence { (\
GGAAAGUCGGUGCAAAGGACGGACAAGUAGUCAGGAAAACAGAGUACAGACGCUACGAAAGAAGGGUCGAUUUACUUCGGUAGAUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.004820921 ubox
1 24 0.025006245 ubox
1 32 0.004638871 ubox
1 47 0.004359723 ubox
1 68 0.006895129 ubox
1 86 0.013025605 ubox
1 95 0.242376292 ubox
1 98 0.244007845 ubox
1 101 0.249462742 ubox
1 104 0.250592662 ubox
1 107 0.063269428 ubox
2 7 0.003605727 ubox
2 8 0.006351519 ubox
2 24 0.018423209 ubox
2 28 0.004448760 ubox
2 31 0.004503851 ubox
2 32 0.005173643 ubox
2 68 0.008011418 ubox
2 78 0.003829058 ubox
2 85 0.004311746 ubox
2 86 0.014251980 ubox
2 95 0.127926950 ubox
2 98 0.128385997 ubox
2 101 0.131115165 ubox
2 104 0.130617502 ubox
2 107 0.042621424 ubox
3 7 0.005547893 ubox
3 31 0.005150220 ubox
3 67 0.005484768 ubox
3 77 0.003790348 ubox
3 85 0.010524021 ubox
4 76 0.003405915 ubox
5 45 0.007971468 ubox
6 20 0.052456237 ubox
6 24 0.995690747 ubox
6 51 0.003415798 ubox
6 95 0.015696337 ubox
6 98 0.018209296 ubox
6 101 0.018714863 ubox
6 104 0.018464917 ubox
6 107 0.006477146 ubox
7 18 0.004481792 ubox
7 19 0.052452280 ubox
7 22 0.015247470 ubox
7 23 0.997105672 ubox
7 43 0.009182035 ubox
7 50 0.003428593 ubox
7 92 0.011634014 ubox
7 94 0.012703151 ubox
7 97 0.015714210 ubox
7 100 0.016294758 ubox
7 103 0.016109939 ubox
7 106 0.005720147 ubox
8 17 0.006993066 ubox
8 18 0.052275567 ubox
8 21 0.025303527 ubox
8 22 0.996571535 ubox
8 42 0.009282047 ubox
8 49 0.003418088 ubox
8 91 0.012072486 ubox
9 20 0.028913656 ubox
9 95 0.009121939 ubox
9 98 0.009748060 ubox
9 101 0.009715545 ubox
9 104 0.005219699 ubox
10 20 0.995828242 ubox
10 24 0.022687613 ubox
10 40 0.009196235 ubox
10 47 0.010040926 ubox
10 95 0.005685349 ubox
10 98 0.005647565 ubox
10 101 0.005558820 ubox
10 104 0.003773272 ubox
11 15 0.004303537 ubox
11 16 0.012997523 ubox
11 17 0.007677305 ubox
11 18 0.037974183 ubox
11 19 0.993100805 ubox
11 21 0.007608308 ubox
11 23 0.022679330 ubox
11 39 0.009206398 ubox
11 46 0.010071575 ubox
11 94 0.005519225 ubox
11 96 0.005316405 ubox
11 97 0.005200033 ubox
11 99 0.005175457 ubox
11 100 0.005147137 ubox
11 103 0.003490000 ubox
12 20 0.009508613 ubox
12 24 0.003624298 ubox
12 45 0.010077661 ubox
12 95 0.006085613 ubox
12 98 0.005913941 ubox
12 101 0.003605822 ubox
13 17 0.808137074 ubox
13 18 0.221640882 ubox
13 21 0.022254399 ubox
13 22 0.005278932 ubox
13 44 0.010059442 ubox
13 91 0.003318917 ubox
17 24 0.008521333 ubox
17 40 0.005783371 ubox
18 32 0.010621097 ubox
19 31 0.010629000 ubox
20 30 0.010626957 ubox
20 34 0.006761012 ubox
21 95 0.004686097 ubox
21 98 0.004463236 ubox
21 101 0.004539248 ubox
21 104 0.004508805 ubox
22 32 0.012750627 ubox
23 31 0.012801315 ubox
24 30 0.012798907 ubox
24 91 0.005232941 ubox
27 32 0.005058822 ubox
27 40 0.005742859 ubox
27 47 0.996999441 ubox
27 56 0.003695256 ubox
27 95 0.010079272 ubox
27 98 0.013975371 ubox
27 101 0.013691061 ubox
27 104 0.014032971 ubox
27 107 0.004898894 ubox
28 39 0.005592784 ubox
28 46 0.998205273 ubox
28 55 0.003699329 ubox
28 94 0.009100107 ubox
28 97 0.013185238 ubox
28 100 0.012877023 ubox
28 103 0.013226670 ubox
28 106 0.004665452 ubox
29 45 0.994947604 ubox
29 54 0.003677710 ubox
30 40 0.008448261 ubox
30 45 0.003893047 ubox
30 47 0.006743227 ubox
30 51 0.003171806 ubox
30 53 0.003559392 ubox
30 95 0.010813377 ubox
30 98 0.010821752 ubox
30 101 0.011281140 ubox
30 104 0.005834859 ubox
31 39 0.008181879 ubox
31 43 0.995549221 ubox
31 46 0.006334951 ubox
31 50 0.003291155 ubox
31 52 0.003229425 ubox
31 92 0.007578215 ubox
31 94 0.009802039 ubox
31 97 0.010027147 ubox
31 100 0.010496816 ubox
31 103 0.005429001 ubox
32 42 0.995296114 ubox
32 44 0.006071655 ubox
32 49 0.003425176 ubox
32 91 0.008140183 ubox
34 40 0.857067269 ubox
34 47 0.006622114 ubox
34 95 0.003199941 ubox
35 40 0.253121145 ubox
39 45 0.006448052 ubox
39 81 0.003653880 ubox
40 44 0.006626553 ubox
40 80 0.003770781 ubox
42 47 0.005428413 ubox
42 77 0.004484126 ubox
43 76 0.004839163 ubox
44 75 0.005062058 ubox
44 95 0.005190905 ubox
44 98 0.005012985 ubox
44 101 0.005048399 ubox
44 104 0.004988189 ubox
45 74 0.005052912 ubox
45 94 0.005008890 ubox
45 97 0.004840064 ubox
45 100 0.004874209 ubox
45 103 0.004815737 ubox
46 73 0.004849671 ubox
49 67 0.003219583 ubox
49 68 0.998177059 ubox
49 86 0.003195533 ubox
50 67 0.999540462 ubox
51 65 0.006652529 ubox
51 66 0.999575257 ubox
52 67 0.004857898 ubox
53 61 0.004426592 ubox
53 64 0.998287314 ubox
53 65 0.037974871 ubox
53 66 0.005358231 ubox
53 83 0.005871049 ubox
54 59 0.003353526 ubox
54 60 0.006094611 ubox
54 61 0.007650992 ubox
54 62 0.036217124 ubox
54 63 0.986113935 ubox
54 64 0.036502355 ubox
54 65 0.005128068 ubox
54 82 0.005894295 ubox
55 81 0.005878276 ubox
56 61 0.833245444 ubox
56 64 0.005529217 ubox
56 65 0.005053121 ubox
56 80 0.005619671 ubox
57 68 0.003300915 ubox
58 67 0.003257369 ubox
59 77 0.005105997 ubox
60 76 0.005197844 ubox
61 75 0.005248992 ubox
62 73 0.004563881 ubox
63 72 0.004578793 ubox
64 71 0.004298532 ubox
64 95 0.004523256 ubox
67 92 0.005520188 ubox
68 91 0.006346704 ubox
69 78 0.005359025 ubox
69 86 0.998156487 ubox
70 77 0.005290931 ubox
70 85 0.999279299 ubox
71 84 0.999256722 ubox
72 83 0.998677452 ubox
73 82 0.998741282 ubox
74 81 0.999462341 ubox
75 79 0.012092601 ubox
75 80 0.998613589 ubox
75 91 0.004314409 ubox
76 80 0.004050487 ubox
76 90 0.004320086 ubox
77 84 0.004153144 ubox
77 89 0.004175738 ubox
77 92 0.003496529 ubox
78 83 0.004429211 ubox
78 91 0.003538679 ubox
80 86 0.004123867 ubox
85 92 0.010931030 ubox
86 91 0.014429444 ubox
91 95 0.054617848 ubox
91 98 0.119603353 ubox
91 101 0.046257524 ubox
91 104 0.029951680 ubox
91 107 0.008718389 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
