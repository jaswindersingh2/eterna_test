%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (815)
} def

/sequence { (\
GGAAAAAGCAGACCCACUUUCACAAAGGUCACACCGAAAAGAGUGGACACUUUGGAAAGGGAGUCGCAUUAAUUAUUCGUAAUUAAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.031379983 ubox
1 67 0.003321427 ubox
1 70 0.003644884 ubox
1 73 0.009293950 ubox
1 74 0.018781178 ubox
1 76 0.005213668 ubox
1 77 0.003675634 ubox
1 78 0.069834858 ubox
1 80 0.007790949 ubox
1 95 0.063783662 ubox
1 98 0.064341126 ubox
1 101 0.065819402 ubox
1 104 0.066132236 ubox
1 107 0.016702819 ubox
2 9 0.020070130 ubox
2 69 0.004326808 ubox
2 70 0.013869267 ubox
2 73 0.019445454 ubox
2 74 0.042283774 ubox
2 76 0.005172997 ubox
2 77 0.069215381 ubox
2 78 0.097288670 ubox
2 95 0.033614563 ubox
2 98 0.033830461 ubox
2 101 0.034541094 ubox
2 104 0.034422230 ubox
2 107 0.011236029 ubox
3 69 0.013864381 ubox
3 70 0.032262816 ubox
3 73 0.042316926 ubox
3 74 0.023714615 ubox
3 76 0.066894242 ubox
3 77 0.097226240 ubox
4 69 0.035938886 ubox
4 70 0.034006167 ubox
4 73 0.025199092 ubox
4 74 0.033442645 ubox
4 76 0.093472502 ubox
4 77 0.004644492 ubox
5 69 0.036205444 ubox
5 70 0.146586592 ubox
5 73 0.032016587 ubox
5 74 0.038897413 ubox
5 76 0.005437808 ubox
6 69 0.160254169 ubox
6 70 0.105150701 ubox
6 73 0.034724933 ubox
6 74 0.057014353 ubox
6 77 0.003317334 ubox
7 69 0.119762233 ubox
7 70 0.019344581 ubox
7 73 0.059041360 ubox
7 74 0.006233830 ubox
7 76 0.003750596 ubox
8 67 0.980628802 ubox
8 69 0.013918486 ubox
8 70 0.005107671 ubox
8 95 0.006855269 ubox
8 98 0.006839023 ubox
8 101 0.006827312 ubox
8 104 0.006829667 ubox
9 66 0.978474965 ubox
9 91 0.008314834 ubox
10 64 0.008079077 ubox
10 69 0.003346121 ubox
10 70 0.004834794 ubox
11 64 0.013135218 ubox
11 65 0.998834736 ubox
12 64 0.999479844 ubox
13 61 0.011152613 ubox
13 63 0.999399422 ubox
14 60 0.011707267 ubox
14 61 0.993918253 ubox
14 63 0.004955855 ubox
15 59 0.010597437 ubox
15 60 0.993159981 ubox
15 61 0.083114774 ubox
17 59 0.997799897 ubox
17 60 0.021898733 ubox
18 57 0.006833288 ubox
18 58 0.998971768 ubox
18 59 0.021853457 ubox
19 56 0.006510135 ubox
19 57 0.998300270 ubox
19 58 0.022616660 ubox
20 55 0.005729413 ubox
20 56 0.999108215 ubox
20 57 0.023136049 ubox
21 54 0.005207160 ubox
21 55 0.998467403 ubox
22 53 0.004895061 ubox
23 54 0.998121375 ubox
24 52 0.006382806 ubox
24 53 0.999224094 ubox
25 51 0.006967702 ubox
25 52 0.998554466 ubox
25 53 0.003244705 ubox
26 51 0.999218844 ubox
26 52 0.004106200 ubox
27 50 0.998116358 ubox
27 51 0.004515991 ubox
28 48 0.997550079 ubox
28 50 0.005283928 ubox
29 46 0.021856393 ubox
29 47 0.998590251 ubox
29 49 0.005665616 ubox
30 45 0.040125161 ubox
30 46 0.997183559 ubox
31 44 0.052087335 ubox
32 43 0.052747632 ubox
32 45 0.996616780 ubox
33 44 0.998041799 ubox
34 41 0.031123416 ubox
34 43 0.996859118 ubox
35 41 0.849943179 ubox
35 43 0.046536380 ubox
35 45 0.003351514 ubox
64 92 0.007115743 ubox
65 91 0.008311578 ubox
66 78 0.004148381 ubox
66 80 0.008639674 ubox
66 95 0.003449984 ubox
67 79 0.008919587 ubox
67 91 0.010791486 ubox
68 73 0.004391528 ubox
68 74 0.011485308 ubox
68 76 0.016464711 ubox
68 77 0.010164555 ubox
68 80 0.008761087 ubox
68 83 0.062619732 ubox
68 84 0.005632500 ubox
69 75 0.017995167 ubox
69 79 0.008754672 ubox
69 81 0.003553292 ubox
69 82 0.067744233 ubox
69 85 0.018389288 ubox
69 86 0.781449826 ubox
69 87 0.051926179 ubox
69 88 0.024917974 ubox
69 89 0.018306741 ubox
69 90 0.018978526 ubox
69 91 0.006363513 ubox
69 92 0.009994859 ubox
69 93 0.008162076 ubox
69 94 0.006543058 ubox
69 96 0.003596848 ubox
69 97 0.005870410 ubox
69 99 0.004711618 ubox
69 100 0.013121078 ubox
69 103 0.003949991 ubox
70 75 0.006364120 ubox
70 79 0.004824509 ubox
70 81 0.069837926 ubox
70 82 0.003856352 ubox
70 85 0.901582636 ubox
70 86 0.042526769 ubox
70 87 0.018715169 ubox
70 88 0.014531948 ubox
70 89 0.018402633 ubox
70 90 0.006360518 ubox
70 91 0.009293822 ubox
70 92 0.007925818 ubox
70 93 0.006446807 ubox
70 96 0.006031577 ubox
70 97 0.003493300 ubox
70 99 0.014536258 ubox
70 100 0.004358534 ubox
70 102 0.004009184 ubox
71 76 0.004699126 ubox
71 77 0.009010517 ubox
71 80 0.068874645 ubox
71 83 0.003745374 ubox
71 84 0.914489711 ubox
72 76 0.007819783 ubox
72 77 0.012279791 ubox
72 80 0.017225321 ubox
72 83 0.916518897 ubox
72 84 0.008006999 ubox
73 79 0.018526328 ubox
73 81 0.010879406 ubox
73 82 0.916411682 ubox
73 85 0.006847279 ubox
73 86 0.071997807 ubox
73 87 0.008147081 ubox
73 88 0.008072592 ubox
73 89 0.007661002 ubox
73 90 0.009090448 ubox
73 91 0.003182188 ubox
73 92 0.007544261 ubox
73 93 0.007047996 ubox
73 94 0.010534500 ubox
73 96 0.017310973 ubox
73 97 0.017042983 ubox
73 100 0.006716750 ubox
73 103 0.005585134 ubox
73 106 0.003996678 ubox
74 79 0.009873986 ubox
74 81 0.902710316 ubox
74 82 0.008549123 ubox
74 85 0.082301792 ubox
74 86 0.008148629 ubox
74 87 0.008465235 ubox
74 88 0.008067738 ubox
74 89 0.009486493 ubox
74 90 0.004302628 ubox
74 91 0.007858871 ubox
74 92 0.006808701 ubox
74 93 0.009247952 ubox
74 94 0.014586488 ubox
74 96 0.019012359 ubox
74 97 0.007674026 ubox
74 99 0.007457859 ubox
74 102 0.006206136 ubox
74 105 0.004453483 ubox
75 80 0.813800981 ubox
75 83 0.018864019 ubox
75 84 0.082797699 ubox
76 81 0.016005030 ubox
76 82 0.021163467 ubox
76 85 0.010856804 ubox
76 86 0.008429967 ubox
76 87 0.014246675 ubox
76 88 0.006370809 ubox
76 89 0.007373448 ubox
76 90 0.007073675 ubox
76 91 0.004039514 ubox
76 92 0.007308103 ubox
76 93 0.161947716 ubox
76 94 0.011581293 ubox
76 96 0.003312533 ubox
76 97 0.010604826 ubox
76 100 0.009811081 ubox
76 103 0.006843631 ubox
76 106 0.005098763 ubox
77 81 0.018435309 ubox
77 82 0.013952974 ubox
77 85 0.008763918 ubox
77 86 0.015470154 ubox
77 87 0.006642129 ubox
77 88 0.007679489 ubox
77 89 0.007400246 ubox
77 90 0.004892323 ubox
77 91 0.006473329 ubox
77 92 0.185888398 ubox
77 93 0.010396399 ubox
77 96 0.011831341 ubox
77 97 0.006712087 ubox
77 99 0.011113184 ubox
77 100 0.006126237 ubox
77 102 0.007722552 ubox
77 103 0.004022086 ubox
77 105 0.005944038 ubox
77 106 0.003527616 ubox
78 91 0.188346067 ubox
79 83 0.003826873 ubox
79 84 0.012269302 ubox
79 95 0.053489750 ubox
79 98 0.049077378 ubox
79 101 0.031996758 ubox
79 104 0.028476192 ubox
79 107 0.009086958 ubox
80 85 0.007129821 ubox
80 86 0.008104656 ubox
80 87 0.013826363 ubox
80 88 0.016841338 ubox
80 89 0.042958088 ubox
80 90 0.014998876 ubox
80 91 0.003484333 ubox
80 92 0.004201297 ubox
80 93 0.006783897 ubox
80 94 0.051758690 ubox
80 96 0.003297005 ubox
80 97 0.048036270 ubox
80 100 0.031123382 ubox
80 103 0.027685254 ubox
80 106 0.008869593 ubox
83 87 0.008646656 ubox
83 88 0.009540478 ubox
83 89 0.010259656 ubox
83 90 0.030169893 ubox
83 91 0.013404409 ubox
83 92 0.030807026 ubox
83 93 0.014610904 ubox
83 94 0.034313834 ubox
83 97 0.012565808 ubox
83 100 0.009878422 ubox
83 103 0.004375497 ubox
83 106 0.003221096 ubox
84 88 0.010098731 ubox
84 89 0.029074048 ubox
84 90 0.016125034 ubox
84 91 0.031842583 ubox
84 92 0.015926270 ubox
84 93 0.035900380 ubox
84 94 0.004152525 ubox
84 96 0.012456964 ubox
84 97 0.003234061 ubox
84 99 0.009703356 ubox
84 102 0.004664479 ubox
84 105 0.003637586 ubox
91 95 0.042047146 ubox
91 98 0.101394041 ubox
91 101 0.044513921 ubox
91 104 0.034482071 ubox
91 107 0.010202299 ubox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 41 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
