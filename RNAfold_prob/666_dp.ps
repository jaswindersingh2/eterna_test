%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (666)
} def

/sequence { (\
GGAAAGAACAAGUACAAAAAAAAAAAGUACAAGAUCAAAAAAAAAAAGAUCAAGUUCAAAAAAAAAAAGUAAAUCUUCGGAUUUACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.055677845 ubox
1 15 0.007647725 ubox
1 57 0.053212182 ubox
1 86 0.004339985 ubox
1 95 0.071843357 ubox
1 98 0.072506002 ubox
1 101 0.074274914 ubox
1 104 0.075813269 ubox
1 107 0.019161759 ubox
2 9 0.026120337 ubox
2 36 0.003236768 ubox
2 56 0.051406652 ubox
2 57 0.066342351 ubox
2 95 0.037725783 ubox
2 98 0.037999498 ubox
2 101 0.038789550 ubox
2 104 0.039265582 ubox
2 107 0.012824233 ubox
3 55 0.047416117 ubox
3 56 0.065490100 ubox
4 55 0.056322712 ubox
4 56 0.004774982 ubox
5 55 0.005131006 ubox
5 56 0.003251905 ubox
6 15 0.006544582 ubox
6 30 0.004183830 ubox
6 36 0.052808165 ubox
6 55 0.003219156 ubox
6 56 0.006313636 ubox
6 57 0.958403308 ubox
6 95 0.018251174 ubox
6 98 0.018124721 ubox
6 101 0.018237410 ubox
6 104 0.019383175 ubox
6 107 0.006778561 ubox
7 35 0.052139309 ubox
7 55 0.005901913 ubox
7 56 0.959209532 ubox
8 28 0.006780583 ubox
8 55 0.958811572 ubox
9 27 0.006981330 ubox
9 33 0.046767917 ubox
9 54 0.957941642 ubox
9 91 0.017982787 ubox
10 56 0.003365725 ubox
11 28 0.003936556 ubox
11 55 0.003456824 ubox
12 30 0.995572272 ubox
12 51 0.005229530 ubox
12 95 0.009356159 ubox
12 98 0.009194844 ubox
12 101 0.009355504 ubox
12 104 0.009760699 ubox
12 107 0.003416942 ubox
13 18 0.003880518 ubox
13 19 0.003570394 ubox
13 20 0.004558925 ubox
13 22 0.004391624 ubox
13 26 0.003566041 ubox
13 29 0.996765837 ubox
13 94 0.008974258 ubox
13 97 0.008822749 ubox
13 100 0.008976294 ubox
13 103 0.009360520 ubox
13 106 0.003311042 ubox
14 28 0.996871943 ubox
15 27 0.996105209 ubox
19 28 0.004226247 ubox
21 28 0.004520659 ubox
22 28 0.003540242 ubox
23 28 0.003838362 ubox
27 56 0.004451381 ubox
27 57 0.038063570 ubox
27 95 0.007219583 ubox
27 98 0.007167878 ubox
27 101 0.007360244 ubox
27 104 0.007826364 ubox
28 94 0.006965129 ubox
28 97 0.006918919 ubox
28 100 0.007104561 ubox
28 103 0.007554465 ubox
29 55 0.045510420 ubox
30 54 0.049014995 ubox
31 55 0.006594872 ubox
31 56 0.007790110 ubox
32 55 0.008571208 ubox
33 51 0.995729657 ubox
33 57 0.007808079 ubox
34 50 0.996701164 ubox
34 56 0.007638120 ubox
35 49 0.996770801 ubox
35 92 0.004080105 ubox
36 48 0.996167588 ubox
36 54 0.004848613 ubox
36 91 0.004354567 ubox
48 56 0.005159698 ubox
48 57 0.042734699 ubox
49 55 0.005668579 ubox
49 56 0.042167649 ubox
50 54 0.005489630 ubox
54 95 0.018031023 ubox
54 98 0.027794887 ubox
54 101 0.101135065 ubox
54 104 0.021936629 ubox
54 107 0.003327406 ubox
55 60 0.004399423 ubox
55 61 0.007313966 ubox
55 62 0.010498148 ubox
55 63 0.009009568 ubox
55 64 0.011756511 ubox
55 65 0.007008499 ubox
55 66 0.010131648 ubox
55 67 0.005181332 ubox
55 68 0.004792637 ubox
55 93 0.013058916 ubox
55 94 0.016279782 ubox
55 97 0.027610534 ubox
55 100 0.100527737 ubox
55 103 0.021883048 ubox
55 106 0.003325498 ubox
56 60 0.007054921 ubox
56 61 0.010583861 ubox
56 62 0.009758554 ubox
56 63 0.012445587 ubox
56 64 0.007648419 ubox
56 65 0.011473256 ubox
56 66 0.005527887 ubox
56 67 0.005113913 ubox
56 92 0.016435005 ubox
56 93 0.013588975 ubox
56 96 0.025178703 ubox
56 99 0.090674745 ubox
56 102 0.019870685 ubox
57 91 0.018212955 ubox
68 76 0.003303525 ubox
69 75 0.003359920 ubox
69 86 0.998046069 ubox
69 95 0.008076889 ubox
69 98 0.006126416 ubox
70 85 0.999271246 ubox
70 94 0.007689496 ubox
70 97 0.005727805 ubox
71 84 0.999051270 ubox
72 83 0.998460509 ubox
73 82 0.998857233 ubox
74 80 0.007465326 ubox
74 81 0.999464965 ubox
74 92 0.012406458 ubox
75 79 0.013661509 ubox
75 80 0.998772046 ubox
75 91 0.012933527 ubox
76 80 0.003191608 ubox
76 90 0.012834566 ubox
76 93 0.003334942 ubox
77 89 0.012374007 ubox
77 92 0.003695633 ubox
78 91 0.003741215 ubox
79 86 0.006817862 ubox
80 86 0.010384664 ubox
86 91 0.005529358 ubox
91 95 0.043196752 ubox
91 98 0.103745897 ubox
91 101 0.045331993 ubox
91 104 0.034936336 ubox
91 107 0.010331907 ubox
6 57 0.9500000 lbox
7 56 0.9500000 lbox
8 55 0.9500000 lbox
9 54 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
