%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (193)
} def

/sequence { (\
GGAAAACCGCGCCUCACAGCCACUACAGUGCGCUGGCAUGGAUCUGCUCGAGCAAUCCCGAGGAUCGGUUCGGGUUUCGACCCGAAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.007351092 ubox
1 8 0.029627125 ubox
1 10 0.004777745 ubox
1 45 0.018382605 ubox
1 70 0.003515173 ubox
1 71 0.019582819 ubox
1 83 0.003987504 ubox
1 95 0.067381959 ubox
1 98 0.067823671 ubox
1 101 0.069366794 ubox
1 104 0.069677699 ubox
1 107 0.017591667 ubox
2 7 0.029612825 ubox
2 44 0.020600583 ubox
2 69 0.004546191 ubox
2 70 0.017979873 ubox
2 71 0.042994127 ubox
2 78 0.004345426 ubox
2 82 0.003956545 ubox
2 95 0.035528953 ubox
2 98 0.035661256 ubox
2 101 0.036421996 ubox
2 104 0.036283134 ubox
2 107 0.011839243 ubox
3 43 0.020424971 ubox
3 69 0.012101656 ubox
3 70 0.040951922 ubox
3 77 0.004355958 ubox
4 69 0.020110324 ubox
4 70 0.030701051 ubox
4 76 0.004294167 ubox
5 43 0.003579893 ubox
5 69 0.039854650 ubox
5 70 0.466050897 ubox
6 69 0.864478649 ubox
6 70 0.010287074 ubox
7 41 0.028556423 ubox
7 67 0.003394052 ubox
7 68 0.997692605 ubox
7 73 0.005216187 ubox
8 40 0.029519373 ubox
8 67 0.998823905 ubox
8 68 0.005183699 ubox
8 72 0.005230389 ubox
9 37 0.003545332 ubox
9 39 0.029465498 ubox
9 44 0.003228679 ubox
9 66 0.995652733 ubox
9 71 0.005230507 ubox
10 36 0.003540472 ubox
10 67 0.013096872 ubox
11 37 0.032849526 ubox
11 65 0.080570221 ubox
11 66 0.013152539 ubox
11 69 0.006334300 ubox
12 36 0.032823361 ubox
12 41 0.008120404 ubox
12 63 0.999107708 ubox
12 68 0.006741024 ubox
13 35 0.028669279 ubox
13 40 0.008353153 ubox
13 62 0.999306498 ubox
13 67 0.006731308 ubox
14 38 0.005151007 ubox
14 61 0.998981165 ubox
14 92 0.003410133 ubox
15 36 0.015236518 ubox
15 60 0.997709662 ubox
15 91 0.003544888 ubox
16 39 0.017317241 ubox
17 35 0.994667918 ubox
17 36 0.031240522 ubox
17 40 0.007890949 ubox
18 24 0.004653199 ubox
18 34 0.997346756 ubox
18 39 0.009647115 ubox
19 23 0.004774357 ubox
19 26 0.005245920 ubox
19 31 0.007118191 ubox
19 33 0.997840009 ubox
19 37 0.059868675 ubox
20 30 0.005684761 ubox
20 32 0.997704822 ubox
20 36 0.059931592 ubox
21 28 0.007112146 ubox
21 30 0.997057310 ubox
21 32 0.008477671 ubox
21 35 0.059873944 ubox
22 29 0.995936931 ubox
22 34 0.058280337 ubox
23 28 0.991653779 ubox
23 30 0.027089781 ubox
23 32 0.046145626 ubox
24 28 0.008575148 ubox
24 30 0.009659787 ubox
24 32 0.010811071 ubox
25 29 0.008242166 ubox
26 30 0.008534275 ubox
26 32 0.013575032 ubox
26 35 0.004240420 ubox
27 34 0.005278608 ubox
28 33 0.006100892 ubox
28 39 0.022535578 ubox
29 38 0.024041844 ubox
30 37 0.024619036 ubox
31 36 0.024618151 ubox
32 53 0.005441579 ubox
33 52 0.005448150 ubox
34 51 0.005033629 ubox
35 48 0.009547944 ubox
35 49 0.004709468 ubox
35 59 0.009317062 ubox
36 47 0.051892551 ubox
36 53 0.080980042 ubox
36 58 0.008526258 ubox
36 59 0.137842978 ubox
37 46 0.052020732 ubox
37 52 0.081048422 ubox
37 60 0.012279480 ubox
38 45 0.047652915 ubox
38 56 0.004696701 ubox
38 69 0.011438113 ubox
39 50 0.071257228 ubox
39 51 0.035043307 ubox
39 54 0.004460403 ubox
39 55 0.004702979 ubox
39 60 0.007740011 ubox
39 68 0.013476274 ubox
40 44 0.009727933 ubox
40 47 0.005691016 ubox
40 48 0.005978191 ubox
40 49 0.071935674 ubox
40 53 0.004880679 ubox
40 57 0.008302429 ubox
40 58 0.977580829 ubox
40 59 0.161144378 ubox
40 83 0.004385691 ubox
41 47 0.018661273 ubox
41 48 0.059363612 ubox
41 49 0.036694331 ubox
41 53 0.003773804 ubox
41 56 0.007531564 ubox
41 57 0.983898047 ubox
41 58 0.140823687 ubox
41 59 0.005163314 ubox
41 66 0.019341030 ubox
41 82 0.004383318 ubox
42 48 0.035397007 ubox
42 56 0.985919649 ubox
42 65 0.019804838 ubox
43 51 0.012706379 ubox
43 54 0.014615598 ubox
43 55 0.963012749 ubox
43 64 0.019859927 ubox
43 80 0.005175720 ubox
43 92 0.005215644 ubox
44 50 0.013921978 ubox
44 52 0.069435518 ubox
44 63 0.019770631 ubox
44 67 0.003267398 ubox
44 68 0.003460315 ubox
44 79 0.005355090 ubox
44 91 0.005505519 ubox
45 51 0.069581567 ubox
45 52 0.006644854 ubox
45 54 0.976846303 ubox
45 55 0.009726571 ubox
45 62 0.008945606 ubox
45 64 0.011760793 ubox
45 67 0.003478579 ubox
45 90 0.005112373 ubox
46 53 0.991630698 ubox
46 66 0.003547030 ubox
46 75 0.015887371 ubox
47 52 0.988421796 ubox
47 62 0.025950043 ubox
47 74 0.017988471 ubox
48 52 0.007706157 ubox
48 61 0.027635066 ubox
48 73 0.018332223 ubox
49 60 0.028005187 ubox
49 67 0.003207771 ubox
49 72 0.018578303 ubox
50 57 0.036604227 ubox
50 58 0.005401096 ubox
50 59 0.029802211 ubox
50 66 0.003228030 ubox
50 71 0.018634905 ubox
51 56 0.035941277 ubox
51 70 0.018626526 ubox
52 57 0.009375045 ubox
52 58 0.008584387 ubox
52 59 0.005112828 ubox
52 69 0.018640125 ubox
53 68 0.018578664 ubox
55 65 0.018726544 ubox
56 64 0.019330075 ubox
57 63 0.019379119 ubox
57 74 0.003651984 ubox
58 62 0.019238435 ubox
58 68 0.011886602 ubox
58 73 0.003709585 ubox
59 67 0.012256927 ubox
59 72 0.003718061 ubox
60 66 0.012268698 ubox
60 71 0.003723399 ubox
61 65 0.010674273 ubox
61 70 0.003716854 ubox
62 69 0.003511214 ubox
62 95 0.005079164 ubox
65 85 0.005695984 ubox
65 92 0.022316879 ubox
66 84 0.006117660 ubox
66 91 0.023872488 ubox
67 83 0.006124331 ubox
68 82 0.006110035 ubox
68 95 0.004062748 ubox
69 85 0.009605124 ubox
69 86 0.428126169 ubox
69 87 0.027864715 ubox
69 88 0.010920546 ubox
69 89 0.007538780 ubox
69 90 0.005431793 ubox
69 91 0.003764018 ubox
69 93 0.005716098 ubox
69 94 0.004104331 ubox
69 97 0.003182585 ubox
70 80 0.006371553 ubox
70 85 0.848860909 ubox
70 86 0.038932674 ubox
70 87 0.008505975 ubox
70 88 0.006038956 ubox
70 89 0.004359393 ubox
70 92 0.010453092 ubox
71 79 0.006742653 ubox
71 84 0.995530541 ubox
71 91 0.012044520 ubox
72 78 0.006720153 ubox
72 82 0.003941886 ubox
72 83 0.999313238 ubox
72 98 0.010491208 ubox
73 77 0.004353596 ubox
73 81 0.004558457 ubox
73 82 0.999334471 ubox
74 81 0.998780073 ubox
74 95 0.026474969 ubox
75 79 0.035982148 ubox
75 80 0.923269058 ubox
75 87 0.014274011 ubox
75 94 0.026587832 ubox
76 80 0.028212904 ubox
76 86 0.019109090 ubox
76 93 0.026818546 ubox
77 85 0.020099929 ubox
77 92 0.026900764 ubox
78 84 0.020220520 ubox
78 91 0.026909765 ubox
79 83 0.018921804 ubox
84 95 0.003749031 ubox
91 95 0.043004065 ubox
91 98 0.103694837 ubox
91 101 0.045496599 ubox
91 104 0.035214077 ubox
91 107 0.010418666 ubox
6 69 0.9500000 lbox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
