%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (38)
} def

/sequence { (\
GGAAAUAGGAGCGCCCGGAAACGGGCCGGACCGCUCUAACGAGCAUCCCGAAAGGGAGGGACGGCUCCGUACGGGUUCGCCCGUACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.027771725 ubox
1 68 0.012230084 ubox
1 86 0.014041587 ubox
1 95 0.068654323 ubox
1 98 0.068165494 ubox
1 101 0.069525202 ubox
1 104 0.069838782 ubox
1 107 0.017631942 ubox
2 6 0.013932361 ubox
2 67 0.012020942 ubox
2 86 0.009273680 ubox
2 95 0.035817299 ubox
2 98 0.035783832 ubox
2 101 0.036525819 ubox
2 104 0.036388990 ubox
2 107 0.011873562 ubox
3 66 0.011042162 ubox
4 84 0.003600655 ubox
5 70 0.005526920 ubox
5 84 0.018658757 ubox
6 69 0.005778572 ubox
6 83 0.018002222 ubox
6 85 0.020840434 ubox
6 87 0.007671580 ubox
6 88 0.009116317 ubox
6 89 0.009486325 ubox
6 90 0.015647404 ubox
6 91 0.007715229 ubox
6 92 0.010720282 ubox
6 93 0.010719570 ubox
6 94 0.009130425 ubox
6 96 0.009151907 ubox
6 97 0.009169308 ubox
6 99 0.009317067 ubox
6 100 0.009198791 ubox
6 102 0.008055516 ubox
6 103 0.008009847 ubox
6 105 0.007796188 ubox
6 106 0.007791140 ubox
7 84 0.021964781 ubox
8 16 0.003462519 ubox
8 32 0.008212193 ubox
8 37 0.014966547 ubox
8 68 0.996069366 ubox
8 81 0.020921869 ubox
8 82 0.063700768 ubox
8 98 0.003171364 ubox
9 15 0.003459462 ubox
9 31 0.008219908 ubox
9 36 0.015646433 ubox
9 67 0.997318218 ubox
9 68 0.003740469 ubox
9 80 0.020961457 ubox
9 81 0.063762994 ubox
9 82 0.016408925 ubox
10 35 0.015750646 ubox
10 66 0.997193272 ubox
11 34 0.015777721 ubox
11 65 0.997316276 ubox
11 78 0.020247899 ubox
11 80 0.065504370 ubox
12 28 0.008169056 ubox
12 33 0.015764424 ubox
12 63 0.007318212 ubox
12 64 0.996020266 ubox
12 79 0.065448602 ubox
13 26 0.994992294 ubox
13 27 0.011603286 ubox
13 32 0.009773750 ubox
13 62 0.004134084 ubox
13 76 0.043922344 ubox
13 77 0.003610850 ubox
13 78 0.052307060 ubox
14 25 0.997471713 ubox
14 60 0.004230154 ubox
14 75 0.069138158 ubox
15 24 0.997523101 ubox
15 29 0.008582397 ubox
15 59 0.004222807 ubox
15 74 0.069348190 ubox
16 23 0.997503084 ubox
16 28 0.008603680 ubox
16 58 0.004205229 ubox
16 73 0.069346995 ubox
17 22 0.994740603 ubox
17 27 0.008641004 ubox
17 72 0.069122968 ubox
18 22 0.007104446 ubox
18 26 0.008626526 ubox
18 72 0.003936502 ubox
19 70 0.003436566 ubox
20 70 0.007414369 ubox
21 70 0.065282314 ubox
22 69 0.069026927 ubox
23 32 0.003806922 ubox
23 67 0.009825270 ubox
23 68 0.068865720 ubox
24 31 0.003809146 ubox
24 66 0.011632710 ubox
24 67 0.068598958 ubox
25 65 0.069613054 ubox
25 66 0.007627286 ubox
26 64 0.075546180 ubox
27 50 0.004884698 ubox
27 63 0.987097774 ubox
28 32 0.006256129 ubox
28 37 0.004917870 ubox
28 49 0.004889058 ubox
28 62 0.997058147 ubox
29 36 0.005169633 ubox
29 48 0.004832694 ubox
29 62 0.014376998 ubox
30 35 0.004659405 ubox
31 58 0.005187282 ubox
31 59 0.995473422 ubox
31 60 0.061227676 ubox
31 64 0.003372054 ubox
32 58 0.994253486 ubox
32 59 0.061225604 ubox
32 63 0.004154568 ubox
33 44 0.998216618 ubox
34 43 0.999264417 ubox
34 56 0.032116732 ubox
35 42 0.998929136 ubox
35 55 0.032145613 ubox
36 41 0.997067563 ubox
36 54 0.032163595 ubox
37 41 0.004751775 ubox
37 53 0.031535598 ubox
40 50 0.031586298 ubox
40 63 0.006799321 ubox
41 49 0.031497526 ubox
41 62 0.006843515 ubox
41 67 0.015973283 ubox
42 66 0.016076365 ubox
43 47 0.010205972 ubox
43 48 0.012971374 ubox
43 65 0.016118959 ubox
44 59 0.006740506 ubox
44 64 0.016063265 ubox
46 56 0.006759938 ubox
46 57 0.933192083 ubox
46 61 0.046264382 ubox
47 55 0.010377107 ubox
47 56 0.997539683 ubox
47 60 0.050158330 ubox
48 54 0.010322358 ubox
48 55 0.997828839 ubox
48 56 0.024506859 ubox
48 59 0.050179049 ubox
49 54 0.997441625 ubox
49 55 0.024742490 ubox
49 58 0.050177676 ubox
58 62 0.004001273 ubox
59 68 0.004730014 ubox
60 67 0.004736242 ubox
61 66 0.004270167 ubox
69 86 0.995805736 ubox
69 95 0.003879061 ubox
70 85 0.997029363 ubox
71 84 0.997304861 ubox
72 83 0.997545568 ubox
73 81 0.007045657 ubox
73 82 0.997538547 ubox
74 80 0.009952915 ubox
74 81 0.997501949 ubox
75 80 0.991323079 ubox
75 81 0.003770580 ubox
82 91 0.004032868 ubox
83 95 0.010808948 ubox
83 98 0.007892891 ubox
83 101 0.006689986 ubox
83 104 0.005796668 ubox
84 94 0.010477168 ubox
84 97 0.007690583 ubox
84 100 0.006520270 ubox
84 103 0.005624192 ubox
86 91 0.008889511 ubox
91 95 0.043057733 ubox
91 98 0.103787277 ubox
91 101 0.045521896 ubox
91 104 0.035225601 ubox
91 107 0.010419495 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
