%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (372)
} def

/sequence { (\
GGAAACGCCUUACCGCGGAUCAAUGAUCCGCCCGUCUAUGACGGCUGAUCAAUGAUCAGGGUAAGGCCUGAAACUUUCGAGUUUCAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.296871574 ubox
1 68 0.052681119 ubox
1 69 0.054424111 ubox
1 74 0.034941394 ubox
1 75 0.016212914 ubox
1 78 0.053258221 ubox
1 85 0.008230622 ubox
1 95 0.063453916 ubox
1 98 0.067162887 ubox
1 101 0.068298149 ubox
1 104 0.068567052 ubox
1 107 0.017306392 ubox
2 6 0.044224728 ubox
2 67 0.035758293 ubox
2 68 0.071196090 ubox
2 69 0.005242115 ubox
2 74 0.018672587 ubox
2 76 0.003933607 ubox
2 77 0.053211506 ubox
2 78 0.066435194 ubox
2 84 0.007175090 ubox
2 85 0.064861765 ubox
2 95 0.033578239 ubox
2 98 0.034975024 ubox
2 101 0.035617652 ubox
2 104 0.035463665 ubox
2 107 0.011569138 ubox
3 69 0.024505302 ubox
3 75 0.004082577 ubox
3 76 0.052918305 ubox
3 77 0.066481607 ubox
3 83 0.006588635 ubox
3 84 0.065032565 ubox
4 69 0.023025039 ubox
4 75 0.050237773 ubox
4 76 0.065734449 ubox
4 82 0.005438565 ubox
4 83 0.065015843 ubox
5 69 0.106442924 ubox
5 75 0.059749646 ubox
5 82 0.065049558 ubox
6 70 0.035866237 ubox
6 79 0.004448858 ubox
6 81 0.064979667 ubox
6 91 0.035936883 ubox
7 67 0.995668897 ubox
7 68 0.057643931 ubox
7 69 0.004745556 ubox
8 66 0.999975830 ubox
9 65 0.999987245 ubox
10 64 0.999428168 ubox
11 63 0.999291407 ubox
12 62 0.999708759 ubox
13 60 0.009216080 ubox
13 61 0.999828294 ubox
14 59 0.012551991 ubox
14 60 0.998883846 ubox
14 61 0.015052410 ubox
15 31 0.772888721 ubox
15 32 0.004676161 ubox
16 30 0.774452815 ubox
16 59 0.511694638 ubox
16 60 0.003498075 ubox
17 29 0.774514729 ubox
17 57 0.058392924 ubox
18 28 0.774525465 ubox
18 56 0.030645152 ubox
18 57 0.625703916 ubox
19 27 0.774276548 ubox
19 56 0.631461243 ubox
20 25 0.005460081 ubox
20 26 0.773684260 ubox
20 55 0.632359920 ubox
21 25 0.767265897 ubox
21 54 0.632500466 ubox
22 53 0.627333006 ubox
23 53 0.021279179 ubox
24 51 0.627333932 ubox
24 52 0.021278691 ubox
25 50 0.632501549 ubox
26 49 0.632370924 ubox
27 48 0.632322239 ubox
28 47 0.629885226 ubox
29 47 0.043929379 ubox
30 45 0.623045703 ubox
30 46 0.057051347 ubox
31 44 0.509468021 ubox
32 43 0.360962162 ubox
32 44 0.854334005 ubox
33 40 0.012296862 ubox
33 43 0.932354603 ubox
34 39 0.008252135 ubox
34 42 0.999363667 ubox
35 40 0.007474062 ubox
35 41 0.998751994 ubox
36 40 0.990349185 ubox
45 59 0.771048585 ubox
46 58 0.773836014 ubox
47 57 0.774510766 ubox
48 56 0.774270466 ubox
49 54 0.005460377 ubox
49 55 0.773678636 ubox
50 54 0.767260381 ubox
68 79 0.034188275 ubox
68 81 0.009503527 ubox
68 91 0.100354076 ubox
69 79 0.132656623 ubox
69 80 0.014584236 ubox
69 86 0.884767646 ubox
69 87 0.040780872 ubox
69 88 0.011245198 ubox
69 89 0.009168527 ubox
69 90 0.070737995 ubox
69 91 0.004136982 ubox
69 96 0.004730119 ubox
69 99 0.006402604 ubox
69 102 0.006279515 ubox
69 105 0.013705718 ubox
69 106 0.003488089 ubox
70 74 0.007989078 ubox
70 75 0.003335553 ubox
70 76 0.005973753 ubox
70 77 0.014359002 ubox
70 78 0.169450655 ubox
70 85 0.964870962 ubox
70 95 0.004486462 ubox
70 98 0.006664318 ubox
70 101 0.006589062 ubox
70 104 0.014768943 ubox
71 75 0.005526151 ubox
71 76 0.014992923 ubox
71 77 0.167124501 ubox
71 84 0.964699275 ubox
72 76 0.127382535 ubox
72 77 0.007016333 ubox
72 83 0.963838061 ubox
73 82 0.964612277 ubox
74 79 0.016063143 ubox
74 81 0.964682407 ubox
74 91 0.005611764 ubox
75 79 0.027367475 ubox
75 80 0.891991554 ubox
75 81 0.005640715 ubox
75 90 0.005579407 ubox
75 94 0.010196734 ubox
75 97 0.005214125 ubox
75 99 0.003413165 ubox
75 100 0.009666106 ubox
75 102 0.004157189 ubox
75 103 0.004351212 ubox
76 80 0.027703579 ubox
76 89 0.005456621 ubox
76 93 0.011703887 ubox
76 96 0.005844315 ubox
76 97 0.006980646 ubox
76 99 0.010357047 ubox
76 100 0.016196273 ubox
76 102 0.004626878 ubox
77 88 0.005033894 ubox
77 92 0.012033747 ubox
77 96 0.007844347 ubox
77 97 0.006216783 ubox
77 99 0.017721486 ubox
77 100 0.005220834 ubox
77 102 0.003460170 ubox
78 91 0.012072016 ubox
79 85 0.005231444 ubox
79 98 0.028809400 ubox
79 101 0.006171468 ubox
80 84 0.004560678 ubox
81 95 0.251758574 ubox
81 98 0.006746276 ubox
81 101 0.003272330 ubox
82 94 0.252100702 ubox
82 97 0.006378696 ubox
83 93 0.252146506 ubox
83 96 0.004743017 ubox
84 92 0.252472084 ubox
85 91 0.252399463 ubox
91 95 0.041283864 ubox
91 98 0.099657038 ubox
91 101 0.043776921 ubox
91 104 0.033924689 ubox
91 107 0.010038050 ubox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
45 59 0.9500000 lbox
46 58 0.9500000 lbox
47 57 0.9500000 lbox
48 56 0.9500000 lbox
49 55 0.9500000 lbox
50 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
