%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1060)
} def

/sequence { (\
GGAAAAUUGGGAACUCCUGACCCUCCACGAGCGGUCCAGUGCCGCGUCAAUGACCGGCUGGAGGUCCCUCGACCUUUCGAGGUCGAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.015691188 ubox
1 8 0.026788119 ubox
1 26 0.007195993 ubox
1 67 0.003462876 ubox
1 68 0.003348659 ubox
1 70 0.004238864 ubox
1 74 0.004464464 ubox
1 95 0.070973219 ubox
1 98 0.070001308 ubox
1 101 0.070249496 ubox
1 104 0.070487374 ubox
1 107 0.017800177 ubox
2 7 0.019086841 ubox
2 8 0.036661117 ubox
2 25 0.007201683 ubox
2 66 0.003479397 ubox
2 69 0.004826385 ubox
2 70 0.011019444 ubox
2 73 0.004465724 ubox
2 95 0.037330862 ubox
2 98 0.036352032 ubox
2 101 0.036692762 ubox
2 104 0.036550701 ubox
2 107 0.011928090 ubox
3 7 0.032865455 ubox
3 8 0.029111353 ubox
3 24 0.007062117 ubox
3 65 0.003250918 ubox
3 69 0.011519357 ubox
4 8 0.014027690 ubox
4 69 0.004941270 ubox
5 69 0.006771298 ubox
6 69 0.009397390 ubox
7 20 0.007362021 ubox
7 87 0.009807168 ubox
7 88 0.022146496 ubox
7 89 0.024115625 ubox
7 90 0.029957355 ubox
7 91 0.013409491 ubox
7 92 0.021118668 ubox
7 93 0.024835236 ubox
7 94 0.020081607 ubox
7 96 0.007131673 ubox
7 97 0.021425562 ubox
7 99 0.007198629 ubox
7 100 0.020675689 ubox
7 102 0.006733759 ubox
7 103 0.019897383 ubox
7 105 0.006690999 ubox
7 106 0.019707001 ubox
8 19 0.007747393 ubox
8 86 0.007811198 ubox
8 87 0.023949797 ubox
8 88 0.025847048 ubox
8 89 0.030675000 ubox
8 90 0.017061532 ubox
8 91 0.020915977 ubox
8 92 0.026918124 ubox
8 93 0.022293057 ubox
8 94 0.010082270 ubox
8 96 0.023979495 ubox
8 97 0.010088446 ubox
8 99 0.023313400 ubox
8 100 0.009350637 ubox
8 102 0.022659028 ubox
8 103 0.009198627 ubox
8 105 0.022510107 ubox
8 106 0.009120644 ubox
9 18 0.008986882 ubox
9 67 0.012418981 ubox
9 68 0.997571440 ubox
9 69 0.005838656 ubox
9 95 0.016752001 ubox
9 98 0.016150898 ubox
9 101 0.015869951 ubox
9 104 0.015784888 ubox
10 17 0.009242261 ubox
10 66 0.012291808 ubox
10 67 0.999799708 ubox
10 68 0.009940805 ubox
11 16 0.009215032 ubox
11 65 0.011118322 ubox
11 66 0.999778574 ubox
11 67 0.009256994 ubox
12 65 0.810907821 ubox
13 40 0.004714144 ubox
13 65 0.041383155 ubox
14 39 0.004862687 ubox
14 63 0.996204983 ubox
14 64 0.044455942 ubox
15 38 0.004805828 ubox
15 62 0.999294360 ubox
15 63 0.022372570 ubox
16 60 0.006290836 ubox
16 61 0.999564672 ubox
16 63 0.003541830 ubox
16 64 0.014458060 ubox
17 39 0.128151708 ubox
17 60 0.989178156 ubox
17 61 0.012345767 ubox
17 63 0.014483273 ubox
18 38 0.293502741 ubox
18 39 0.043551538 ubox
18 60 0.014035397 ubox
18 62 0.014012681 ubox
19 35 0.004184022 ubox
19 36 0.969590868 ubox
19 37 0.221609878 ubox
19 58 0.047447903 ubox
19 59 0.008701572 ubox
19 66 0.004342603 ubox
20 35 0.997851060 ubox
20 65 0.004390652 ubox
21 33 0.004621587 ubox
21 34 0.998551243 ubox
21 39 0.003164996 ubox
21 56 0.009055958 ubox
21 57 0.048384405 ubox
21 64 0.003641109 ubox
22 33 0.998425406 ubox
22 34 0.007210585 ubox
22 56 0.048299245 ubox
22 57 0.009473772 ubox
22 64 0.007650459 ubox
23 29 0.007213744 ubox
23 31 0.997149129 ubox
23 33 0.008320922 ubox
23 52 0.003270873 ubox
23 56 0.009609505 ubox
23 63 0.008079518 ubox
24 29 0.006730207 ubox
24 30 0.996642975 ubox
24 31 0.017286109 ubox
24 53 0.036166927 ubox
24 62 0.008467408 ubox
25 29 0.988288246 ubox
25 31 0.012177288 ubox
25 34 0.004498996 ubox
25 52 0.036567501 ubox
25 61 0.008471031 ubox
26 31 0.017261418 ubox
26 33 0.004538785 ubox
26 52 0.028542732 ubox
26 60 0.008468557 ubox
27 51 0.028104479 ubox
27 59 0.007787596 ubox
29 47 0.011803441 ubox
29 48 0.044067848 ubox
29 58 0.003981065 ubox
29 70 0.004568790 ubox
30 47 0.043020990 ubox
30 69 0.004776203 ubox
31 40 0.003309771 ubox
31 45 0.051309994 ubox
31 68 0.005028512 ubox
32 39 0.003594628 ubox
32 44 0.051378919 ubox
32 56 0.005822293 ubox
33 43 0.051379753 ubox
33 55 0.006192352 ubox
33 67 0.005611058 ubox
34 42 0.051373345 ubox
34 54 0.006195063 ubox
34 66 0.005612858 ubox
35 41 0.048922336 ubox
35 53 0.006190268 ubox
35 62 0.006198664 ubox
36 41 0.009667385 ubox
36 52 0.005663912 ubox
36 61 0.011246457 ubox
36 64 0.005033405 ubox
37 60 0.035074631 ubox
37 61 0.003753843 ubox
37 63 0.005065833 ubox
38 51 0.003427565 ubox
38 59 0.048793258 ubox
39 58 0.024465345 ubox
39 59 0.093465642 ubox
40 49 0.003802388 ubox
40 57 0.008365328 ubox
40 60 0.009871010 ubox
41 48 0.003967006 ubox
41 58 0.996579340 ubox
41 59 0.010616893 ubox
42 46 0.003431562 ubox
42 57 0.998596458 ubox
43 56 0.998627197 ubox
44 54 0.005582149 ubox
44 55 0.998059506 ubox
45 52 0.017431568 ubox
46 51 0.011653599 ubox
46 54 0.997914464 ubox
46 58 0.003329826 ubox
47 52 0.008281987 ubox
47 53 0.997379894 ubox
47 57 0.003330083 ubox
48 52 0.988992397 ubox
48 56 0.003328664 ubox
68 81 0.003851883 ubox
68 91 0.006642985 ubox
69 80 0.004819725 ubox
69 86 0.949930466 ubox
69 87 0.043554536 ubox
69 88 0.009467383 ubox
69 89 0.006753307 ubox
69 90 0.006355228 ubox
69 91 0.003491145 ubox
69 92 0.005124366 ubox
70 79 0.004909767 ubox
70 85 0.998881997 ubox
70 91 0.004688954 ubox
71 78 0.004903934 ubox
71 84 0.999927071 ubox
72 77 0.004416305 ubox
72 83 0.999832258 ubox
73 82 0.999941139 ubox
74 79 0.003332104 ubox
74 81 0.999638760 ubox
74 82 0.004231345 ubox
75 79 0.028243908 ubox
75 80 0.924295416 ubox
75 81 0.005875130 ubox
75 88 0.005959742 ubox
76 80 0.028596367 ubox
76 87 0.006674243 ubox
77 86 0.006928217 ubox
78 85 0.006977395 ubox
79 84 0.006882758 ubox
83 92 0.003216674 ubox
84 91 0.003517112 ubox
91 95 0.043138735 ubox
91 98 0.103864675 ubox
91 101 0.045506283 ubox
91 104 0.035171749 ubox
91 107 0.010396625 ubox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
