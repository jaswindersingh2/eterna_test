%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (594)
} def

/sequence { (\
GGAAAAGGAUAUGUAUAUAUGUAUAUGUAUAAAAAAAAAAAAGAUAUAUGUAUAUGUAUAUAUAUUGGGUAUCUUUUCGAAGAUACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 66 0.003646173 ubox
1 73 0.008313876 ubox
1 74 0.014760175 ubox
1 78 0.022425009 ubox
1 86 0.005884594 ubox
1 95 0.065569802 ubox
1 98 0.066611292 ubox
1 101 0.071134485 ubox
1 104 0.071637462 ubox
1 107 0.018123926 ubox
2 66 0.006154039 ubox
2 70 0.004011234 ubox
2 72 0.007812302 ubox
2 73 0.017099317 ubox
2 77 0.020337982 ubox
2 78 0.154468296 ubox
2 95 0.034585911 ubox
2 98 0.035109895 ubox
2 101 0.036347568 ubox
2 104 0.036241768 ubox
2 107 0.011835316 ubox
3 65 0.004973304 ubox
3 66 0.010011187 ubox
3 70 0.007827149 ubox
3 72 0.016783186 ubox
3 76 0.018771493 ubox
3 77 0.153326836 ubox
4 65 0.006877596 ubox
4 66 0.012835824 ubox
4 70 0.014542083 ubox
4 75 0.015727214 ubox
4 76 0.151763778 ubox
4 77 0.029886123 ubox
5 65 0.008922610 ubox
5 66 0.017939904 ubox
5 70 0.005074010 ubox
5 74 0.010771343 ubox
5 75 0.150268214 ubox
5 76 0.038447089 ubox
6 65 0.012579637 ubox
6 66 0.024412011 ubox
6 74 0.148906144 ubox
6 75 0.045048194 ubox
7 65 0.015143812 ubox
7 66 0.039476214 ubox
7 72 0.003375762 ubox
7 73 0.146577812 ubox
7 74 0.051451815 ubox
7 86 0.003514889 ubox
7 95 0.059652883 ubox
7 98 0.060067327 ubox
7 101 0.058218927 ubox
7 104 0.057783269 ubox
7 107 0.020169575 ubox
8 65 0.029422563 ubox
8 66 0.917334090 ubox
8 70 0.003630693 ubox
8 72 0.090444201 ubox
8 73 0.058490706 ubox
8 95 0.014913312 ubox
8 98 0.014792858 ubox
8 101 0.013844601 ubox
8 104 0.013587717 ubox
8 107 0.004430728 ubox
9 63 0.010510278 ubox
9 65 0.979927674 ubox
9 66 0.021971803 ubox
9 70 0.013448119 ubox
9 72 0.064141158 ubox
10 62 0.010755010 ubox
10 64 0.994217935 ubox
10 67 0.003992744 ubox
10 69 0.011318382 ubox
10 71 0.065829592 ubox
11 61 0.010619180 ubox
11 63 0.996511873 ubox
11 65 0.023359723 ubox
11 66 0.003221359 ubox
11 70 0.065376620 ubox
12 60 0.010451849 ubox
12 62 0.996533615 ubox
12 64 0.026957908 ubox
12 69 0.064455589 ubox
13 59 0.010327062 ubox
13 61 0.996962823 ubox
13 63 0.028853424 ubox
14 58 0.010219054 ubox
14 60 0.997179943 ubox
14 62 0.028944319 ubox
14 67 0.059503152 ubox
15 57 0.010088101 ubox
15 59 0.997006107 ubox
15 61 0.029008984 ubox
15 65 0.045551230 ubox
15 66 0.042699846 ubox
16 56 0.009960076 ubox
16 58 0.997008947 ubox
16 60 0.029049293 ubox
16 64 0.062039095 ubox
17 55 0.009717994 ubox
17 57 0.997188789 ubox
17 59 0.029059601 ubox
17 63 0.063083798 ubox
17 65 0.006064575 ubox
18 54 0.009509541 ubox
18 56 0.996979682 ubox
18 58 0.029081665 ubox
18 62 0.063144387 ubox
18 64 0.006405665 ubox
19 53 0.009279940 ubox
19 55 0.996660587 ubox
19 57 0.029094099 ubox
19 61 0.063153848 ubox
19 63 0.006415116 ubox
20 52 0.009057853 ubox
20 54 0.996658315 ubox
20 56 0.028983681 ubox
20 60 0.063137097 ubox
20 62 0.006409591 ubox
21 51 0.008590398 ubox
21 53 0.996970415 ubox
21 55 0.029276120 ubox
21 59 0.063156292 ubox
21 61 0.006404662 ubox
22 50 0.008664586 ubox
22 52 0.997185352 ubox
22 54 0.029570487 ubox
22 58 0.063170159 ubox
22 60 0.006402337 ubox
23 49 0.009249178 ubox
23 51 0.997180182 ubox
23 53 0.029694927 ubox
23 57 0.063170030 ubox
23 59 0.006396706 ubox
24 48 0.009662301 ubox
24 50 0.996951613 ubox
24 52 0.029805543 ubox
24 56 0.063155643 ubox
24 58 0.006392403 ubox
25 47 0.010103810 ubox
25 49 0.996585889 ubox
25 51 0.029925390 ubox
25 55 0.063134504 ubox
25 57 0.006388076 ubox
26 46 0.010491973 ubox
26 48 0.996550123 ubox
26 50 0.029911975 ubox
26 54 0.063133863 ubox
26 56 0.006357398 ubox
27 45 0.010886392 ubox
27 47 0.996777707 ubox
27 49 0.031434178 ubox
27 53 0.063147643 ubox
27 55 0.006347470 ubox
28 44 0.010880733 ubox
28 46 0.996700028 ubox
28 48 0.032383829 ubox
28 52 0.063149980 ubox
28 54 0.006372366 ubox
29 45 0.992303917 ubox
29 47 0.032946105 ubox
29 51 0.063096626 ubox
29 53 0.006368672 ubox
30 34 0.004559490 ubox
30 35 0.009462201 ubox
30 36 0.009462108 ubox
30 37 0.013090419 ubox
30 38 0.009452464 ubox
30 39 0.019569497 ubox
30 40 0.013114910 ubox
30 41 0.016839531 ubox
30 42 0.022920490 ubox
30 43 0.061021307 ubox
30 44 0.955094507 ubox
30 46 0.033313531 ubox
30 50 0.062791469 ubox
30 52 0.006341573 ubox
31 45 0.032183255 ubox
31 49 0.058323142 ubox
31 51 0.006052467 ubox
32 45 0.005175619 ubox
32 47 0.006644922 ubox
32 49 0.003243699 ubox
33 45 0.005425765 ubox
33 47 0.016129816 ubox
34 45 0.005259502 ubox
34 47 0.004752923 ubox
35 45 0.008155219 ubox
35 47 0.004729282 ubox
36 45 0.009171887 ubox
37 45 0.004234452 ubox
38 45 0.004498164 ubox
63 92 0.004306714 ubox
65 88 0.011106342 ubox
65 89 0.022674064 ubox
65 90 0.102884628 ubox
65 91 0.014173792 ubox
65 92 0.025876082 ubox
65 93 0.010819272 ubox
65 94 0.004880824 ubox
65 97 0.007175938 ubox
65 100 0.019911148 ubox
65 103 0.005615144 ubox
65 106 0.004836631 ubox
66 87 0.018283287 ubox
66 88 0.039462238 ubox
66 89 0.183155857 ubox
66 90 0.040580121 ubox
66 91 0.037511177 ubox
66 92 0.018744495 ubox
66 93 0.009366428 ubox
66 94 0.003614434 ubox
66 96 0.014343465 ubox
66 97 0.003994469 ubox
66 99 0.040006482 ubox
66 100 0.003554970 ubox
66 102 0.011233203 ubox
66 105 0.009693023 ubox
67 78 0.003992136 ubox
67 86 0.018651422 ubox
67 95 0.020762103 ubox
67 98 0.058783637 ubox
67 101 0.016363479 ubox
67 104 0.014140806 ubox
68 77 0.003968164 ubox
68 86 0.045900393 ubox
68 95 0.025491254 ubox
68 98 0.020109706 ubox
68 101 0.014871476 ubox
68 104 0.012593732 ubox
68 107 0.003664413 ubox
69 76 0.003687020 ubox
69 86 0.977007345 ubox
69 95 0.108075891 ubox
69 98 0.009231567 ubox
69 101 0.005348389 ubox
70 85 0.979548688 ubox
70 93 0.005232704 ubox
70 94 0.106864663 ubox
70 97 0.008647816 ubox
70 100 0.004966415 ubox
71 84 0.979752785 ubox
72 80 0.003609887 ubox
72 83 0.980037914 ubox
72 92 0.113745646 ubox
73 79 0.003923063 ubox
73 82 0.980256320 ubox
73 91 0.115684402 ubox
74 79 0.004701654 ubox
74 80 0.039424855 ubox
74 81 0.966534080 ubox
74 82 0.003969345 ubox
74 90 0.115550783 ubox
75 79 0.050401106 ubox
75 80 0.840484942 ubox
75 81 0.031093295 ubox
75 89 0.115226834 ubox
75 90 0.004002164 ubox
75 94 0.015448037 ubox
76 80 0.036696742 ubox
76 81 0.005364435 ubox
76 88 0.114352871 ubox
76 89 0.005258072 ubox
76 93 0.018185892 ubox
77 83 0.011822707 ubox
77 87 0.108969828 ubox
77 88 0.006007139 ubox
77 92 0.019040293 ubox
78 82 0.012844856 ubox
78 91 0.019257391 ubox
79 84 0.005695043 ubox
79 86 0.088095434 ubox
79 95 0.005131309 ubox
79 98 0.005522357 ubox
79 101 0.003925434 ubox
79 104 0.003516765 ubox
80 84 0.016409363 ubox
82 86 0.008658937 ubox
82 95 0.008713734 ubox
82 98 0.005369055 ubox
82 101 0.004495759 ubox
82 104 0.003699892 ubox
84 89 0.003262056 ubox
84 90 0.003373227 ubox
84 92 0.003412409 ubox
84 93 0.006493788 ubox
86 91 0.016320381 ubox
91 95 0.043777268 ubox
91 98 0.104425400 ubox
91 101 0.045335082 ubox
91 104 0.034701860 ubox
91 107 0.010255043 ubox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 59 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
18 56 0.9500000 lbox
19 55 0.9500000 lbox
20 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
23 51 0.9500000 lbox
24 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
