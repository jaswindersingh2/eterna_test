%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1025)
} def

/sequence { (\
GGAAAAGCCAAAGGCAAGCAGAAACUGCAAGCAUCAAAGAUGCAACACGAAACGUGAAGCGAAACGCACAUAUACUUCGGUAUAUGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.008673853 ubox
1 9 0.095427110 ubox
1 15 0.003290728 ubox
1 19 0.003843482 ubox
1 46 0.010197924 ubox
1 48 0.009678478 ubox
1 53 0.007236073 ubox
1 60 0.016620990 ubox
1 65 0.019559287 ubox
1 67 0.022418460 ubox
1 69 0.020172665 ubox
1 78 0.004843768 ubox
1 95 0.402852431 ubox
1 98 0.405564316 ubox
1 101 0.414791725 ubox
1 104 0.416678514 ubox
1 107 0.105207305 ubox
2 8 0.095474281 ubox
2 9 0.013719976 ubox
2 15 0.004089758 ubox
2 19 0.006358728 ubox
2 46 0.006902024 ubox
2 48 0.005647853 ubox
2 53 0.004611719 ubox
2 60 0.014297789 ubox
2 65 0.015027312 ubox
2 67 0.014986127 ubox
2 69 0.010627242 ubox
2 77 0.004733728 ubox
2 78 0.006890432 ubox
2 95 0.212640764 ubox
2 98 0.213473799 ubox
2 101 0.218026455 ubox
2 104 0.217211584 ubox
2 107 0.070879623 ubox
3 76 0.004475540 ubox
3 77 0.006829078 ubox
4 76 0.006152020 ubox
7 15 0.988862330 ubox
7 60 0.010249659 ubox
7 67 0.055031112 ubox
7 81 0.010573604 ubox
7 95 0.017079820 ubox
7 98 0.017034320 ubox
7 101 0.016635566 ubox
7 104 0.016500342 ubox
7 107 0.005762331 ubox
8 13 0.010698159 ubox
8 14 0.990097759 ubox
8 59 0.010191162 ubox
8 66 0.054975492 ubox
8 80 0.010816351 ubox
8 91 0.011333781 ubox
9 13 0.982908943 ubox
9 14 0.010790684 ubox
9 79 0.010803456 ubox
9 91 0.016669703 ubox
11 77 0.010110004 ubox
12 76 0.010470635 ubox
13 75 0.010458105 ubox
13 95 0.033542268 ubox
13 98 0.033414992 ubox
13 101 0.034099696 ubox
13 104 0.034233227 ubox
13 107 0.011956060 ubox
14 28 0.020407900 ubox
14 32 0.015834030 ubox
14 60 0.059715042 ubox
14 67 0.021385532 ubox
14 95 0.020326760 ubox
14 98 0.020277066 ubox
14 101 0.020644414 ubox
14 104 0.020596241 ubox
14 107 0.006718515 ubox
15 27 0.020444987 ubox
15 31 0.015950047 ubox
15 59 0.059708000 ubox
15 66 0.021405514 ubox
15 86 0.003403436 ubox
15 91 0.026993741 ubox
16 26 0.016508109 ubox
17 26 0.017557637 ubox
18 25 0.021078710 ubox
18 28 0.997900756 ubox
18 67 0.006361941 ubox
18 95 0.005908099 ubox
18 98 0.006160989 ubox
18 101 0.006159952 ubox
18 104 0.006204968 ubox
19 27 0.998998200 ubox
19 66 0.006348154 ubox
19 91 0.003336181 ubox
20 26 0.996519110 ubox
21 25 0.974679275 ubox
21 26 0.005962681 ubox
21 28 0.006295630 ubox
21 65 0.003324603 ubox
21 95 0.003709597 ubox
21 101 0.003402785 ubox
21 104 0.003202703 ubox
25 91 0.007898931 ubox
26 61 0.006413970 ubox
26 68 0.005771754 ubox
26 90 0.007693495 ubox
26 96 0.006945324 ubox
26 99 0.006865370 ubox
26 102 0.006869284 ubox
26 105 0.006850700 ubox
27 60 0.007742483 ubox
27 67 0.006588166 ubox
27 95 0.007503046 ubox
27 98 0.007419320 ubox
27 101 0.007435943 ubox
27 104 0.007417315 ubox
28 59 0.007738940 ubox
28 66 0.006581042 ubox
28 91 0.004840059 ubox
31 43 0.998610455 ubox
31 67 0.006132699 ubox
32 39 0.003411180 ubox
32 42 0.999671286 ubox
32 66 0.006127695 ubox
33 41 0.999183799 ubox
34 39 0.008314555 ubox
34 40 0.998566375 ubox
34 92 0.003393757 ubox
35 39 0.990281143 ubox
35 91 0.003603243 ubox
39 65 0.003747622 ubox
41 61 0.012594055 ubox
42 60 0.020438703 ubox
43 59 0.020551829 ubox
45 55 0.033334970 ubox
45 81 0.005426404 ubox
46 54 0.034355439 ubox
46 56 0.988218434 ubox
46 80 0.005622579 ubox
46 91 0.004231699 ubox
47 55 0.992480798 ubox
48 54 0.993005100 ubox
48 56 0.015150494 ubox
48 61 0.004308657 ubox
48 66 0.024486757 ubox
48 79 0.006675933 ubox
49 53 0.928998066 ubox
49 55 0.012747526 ubox
49 60 0.004352767 ubox
49 65 0.024828124 ubox
49 67 0.006713287 ubox
49 78 0.006723284 ubox
50 55 0.003380394 ubox
50 77 0.006696258 ubox
51 76 0.006265875 ubox
53 59 0.003225632 ubox
53 61 0.031100005 ubox
53 66 0.060290934 ubox
54 60 0.031406538 ubox
54 65 0.061507310 ubox
54 67 0.033706242 ubox
54 69 0.003860210 ubox
54 71 0.004251645 ubox
54 73 0.004152936 ubox
54 95 0.008168903 ubox
54 98 0.008994231 ubox
54 101 0.010529173 ubox
54 104 0.008396202 ubox
55 59 0.029382034 ubox
55 64 0.061389958 ubox
55 66 0.033724535 ubox
55 68 0.004388094 ubox
55 70 0.004450228 ubox
55 72 0.004185689 ubox
55 94 0.007929234 ubox
55 96 0.005324343 ubox
55 97 0.008307705 ubox
55 99 0.005296988 ubox
55 100 0.009934459 ubox
55 102 0.004934881 ubox
55 103 0.007735380 ubox
55 105 0.003947467 ubox
56 65 0.033738944 ubox
56 67 0.003786270 ubox
56 69 0.004794298 ubox
56 71 0.003869004 ubox
56 95 0.006700578 ubox
56 98 0.006637908 ubox
56 101 0.006172813 ubox
56 104 0.004648013 ubox
59 65 0.015558905 ubox
59 67 0.985734546 ubox
59 95 0.007351066 ubox
59 98 0.004461362 ubox
60 66 0.986726465 ubox
60 79 0.003354720 ubox
60 91 0.004853152 ubox
61 65 0.923123533 ubox
61 67 0.019376796 ubox
61 78 0.003382658 ubox
61 95 0.011431314 ubox
62 77 0.003356910 ubox
65 91 0.030541736 ubox
67 86 0.004449747 ubox
67 91 0.007907127 ubox
68 85 0.004230854 ubox
69 86 0.994092539 ubox
69 91 0.004690174 ubox
70 83 0.003648892 ubox
70 85 0.998566972 ubox
71 82 0.003890440 ubox
71 84 0.999151675 ubox
72 81 0.003945586 ubox
72 83 0.999262090 ubox
73 80 0.003894811 ubox
73 82 0.999292451 ubox
74 81 0.999377146 ubox
75 79 0.012005772 ubox
75 80 0.998520144 ubox
76 80 0.004045921 ubox
76 88 0.008670381 ubox
76 93 0.003591498 ubox
77 87 0.009803028 ubox
77 92 0.003993600 ubox
78 86 0.009953419 ubox
78 91 0.004037293 ubox
79 85 0.009314847 ubox
85 90 0.003578379 ubox
85 92 0.003973146 ubox
85 96 0.012825813 ubox
85 99 0.004455725 ubox
86 95 0.020975038 ubox
86 98 0.007216101 ubox
86 101 0.004406206 ubox
91 95 0.071749627 ubox
91 98 0.145181559 ubox
91 101 0.047624876 ubox
91 104 0.015335841 ubox
91 107 0.003635353 ubox
1 95 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
