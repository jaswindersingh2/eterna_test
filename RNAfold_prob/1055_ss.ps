%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAACUCGGUCUUGCCUGGGCCGCCUUGCGAGCCCGUUUGACGCGUCAAUGACCGUCUGGCACGACCAAGGGCGUUCGCGCCCUUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

/coor [
[108.95814514 255.37557983]
[111.81945038 240.65101624]
[117.42758942 226.73883057]
[125.57805634 214.14637756]
[135.97363281 203.33287048]
[148.23521423 194.69262695]
[161.91564941 188.54075623]
[176.51606750 185.10159302]
[191.50811768 184.50077820]
[179.74188232 175.19723511]
[167.97564697 165.89370728]
[156.20941162 156.59017944]
[141.42700195 154.76553345]
[135.40087891 140.13691711]
[123.63464355 130.83337402]
[111.86840820 121.52984619]
[100.10217285 112.22631836]
[86.00678253 107.09601593]
[71.01313019 106.65974426]
[56.01947403 106.22347260]
[41.02581787 105.78720093]
[26.03216553 105.35092926]
[11.03375149 105.13277435]
[-3.96624875 105.13277435]
[-18.96624947 105.13277435]
[-34.80538177 111.17910767]
[-45.00013733 97.63277435]
[-34.80538177 84.08643341]
[-18.96624947 90.13277435]
[-3.96624875 90.13277435]
[11.03375149 90.13277435]
[17.82745361 86.93611908]
[26.46843529 90.35727692]
[41.46208954 90.79354858]
[56.45574570 91.22982025]
[71.44940186 91.66609192]
[86.44305420 92.10235596]
[91.09481812 86.21923828]
[85.55643463 72.27914429]
[100.39835358 74.45300293]
[105.05011749 68.56988525]
[101.16783142 54.08100128]
[97.28554535 39.59211349]
[93.40325928 25.10322762]
[88.08157349 17.48413658]
[89.62532806 10.13636112]
[86.16608429 -4.45931244]
[82.70684814 -19.05498505]
[73.17073059 -33.07278824]
[84.00085449 -46.11674500]
[99.53312683 -39.32079315]
[97.30252075 -22.51422310]
[100.76175690 -7.91855049]
[104.22100067 6.67712259]
[107.89215088 21.22094154]
[111.77443695 35.70982742]
[115.65671539 50.19871521]
[119.53900146 64.68760681]
[121.74127197 87.88826752]
[109.40570068 100.46008301]
[121.17193604 109.76361084]
[132.93817139 119.06714630]
[144.70440674 128.37068176]
[160.32843018 130.86077881]
[165.51295471 144.82394409]
[177.27919006 154.12747192]
[189.04542542 163.43099976]
[200.81166077 172.73454285]
[215.40733337 176.19377136]
[230.09744263 173.16050720]
[244.78755188 170.12724304]
[259.47766113 167.09397888]
[274.16775513 164.06071472]
[288.85787964 161.02745056]
[303.54797363 157.99418640]
[315.43218994 146.69383240]
[331.08193970 151.59455872]
[334.39813232 167.65490723]
[321.96936035 178.35337830]
[306.58123779 172.68429565]
[291.89114380 175.71755981]
[277.20101929 178.75082397]
[262.51092529 181.78408813]
[247.82081604 184.81735229]
[233.13070679 187.85061646]
[218.44059753 190.88388062]
[231.56494141 198.14689636]
[243.06936646 207.77229309]
[252.53430176 219.40908813]
[259.61462402 232.63290405]
[264.05209351 246.96150208]
[265.68490601 261.87237549]
[264.45355225 276.82174683]
[260.40286255 291.26446533]
[253.68063354 304.67382812]
[244.53195190 316.56088257]
[233.29045105 326.49206543]
[220.36610413 334.10528564]
[206.23019409 339.12289429]
[191.39823914 341.36187744]
[176.41111755 340.74060059]
[161.81535339 337.28176880]
[148.14321899 331.11145020]
[135.89329529 322.45468140]
[125.51232147 311.62716675]
[117.37884521 299.02371216]
[111.78946686 285.10400391]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 68]
[10 67]
[11 66]
[12 65]
[14 63]
[15 62]
[16 61]
[17 60]
[18 37]
[19 36]
[20 35]
[21 34]
[22 33]
[23 31]
[24 30]
[25 29]
[41 58]
[42 57]
[43 56]
[44 55]
[46 54]
[47 53]
[48 52]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
