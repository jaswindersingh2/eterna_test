%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1013)
} def

/sequence { (\
GGAAAAGCGAAACGCAACCUCAAAGAGGAAUGCAUAAAAUGCAAAAGACAAAGUCUAACGGAAACCGAUCUUGACUUCGGUCAAGAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.032384527 ubox
1 13 0.013580167 ubox
1 15 0.006609861 ubox
1 19 0.024357248 ubox
1 21 0.009091029 ubox
1 49 0.011545786 ubox
1 55 0.010013834 ubox
1 56 0.042427677 ubox
1 59 0.035184782 ubox
1 65 0.013775445 ubox
1 66 0.271228217 ubox
1 69 0.003547988 ubox
1 70 0.004923930 ubox
1 71 0.007306710 ubox
1 82 0.007602578 ubox
1 95 0.383701324 ubox
1 98 0.386791743 ubox
1 101 0.395362168 ubox
1 104 0.397191793 ubox
1 107 0.100276476 ubox
2 8 0.020779753 ubox
2 13 0.008996698 ubox
2 15 0.006904223 ubox
2 18 0.024764461 ubox
2 19 0.004898738 ubox
2 20 0.008140527 ubox
2 21 0.013321924 ubox
2 49 0.006016231 ubox
2 54 0.007878311 ubox
2 55 0.044998883 ubox
2 56 0.004633793 ubox
2 59 0.021894625 ubox
2 65 0.270043288 ubox
2 66 0.025837317 ubox
2 69 0.005538313 ubox
2 70 0.011592397 ubox
2 82 0.007374242 ubox
2 95 0.202476318 ubox
2 98 0.203406735 ubox
2 101 0.207727620 ubox
2 104 0.206958290 ubox
2 107 0.067527440 ubox
3 20 0.013098615 ubox
3 54 0.041982038 ubox
3 56 0.004807472 ubox
3 69 0.012810849 ubox
3 81 0.004968684 ubox
4 56 0.005728999 ubox
4 69 0.006890553 ubox
5 56 0.004466721 ubox
5 69 0.006869960 ubox
6 56 0.004725549 ubox
6 69 0.006935605 ubox
7 13 0.016339883 ubox
7 15 0.980440876 ubox
7 42 0.086038809 ubox
7 59 0.006383475 ubox
7 66 0.003827299 ubox
7 95 0.026516048 ubox
7 98 0.027059753 ubox
7 101 0.025942189 ubox
7 104 0.025692055 ubox
7 107 0.008967899 ubox
8 14 0.981627338 ubox
8 41 0.086112284 ubox
8 60 0.039916454 ubox
8 61 0.005401468 ubox
8 67 0.017756273 ubox
8 91 0.030336764 ubox
9 13 0.918373343 ubox
9 15 0.021816768 ubox
9 40 0.077577226 ubox
9 59 0.039260789 ubox
9 65 0.003345716 ubox
9 66 0.017650953 ubox
9 95 0.024783348 ubox
9 98 0.024126358 ubox
9 101 0.024128889 ubox
9 104 0.023969959 ubox
9 107 0.009067827 ubox
10 35 0.006325008 ubox
10 40 0.004233204 ubox
11 35 0.004616352 ubox
12 35 0.028066838 ubox
13 60 0.016620440 ubox
13 67 0.007050978 ubox
13 91 0.022552131 ubox
14 33 0.108949246 ubox
14 42 0.004223857 ubox
14 54 0.004640880 ubox
14 59 0.016424698 ubox
14 66 0.006547533 ubox
14 95 0.022483958 ubox
14 98 0.022452966 ubox
14 101 0.022814066 ubox
14 104 0.022826218 ubox
14 107 0.008640970 ubox
15 32 0.109095843 ubox
15 41 0.004226899 ubox
15 53 0.004819801 ubox
15 60 0.004727987 ubox
15 67 0.003336180 ubox
15 91 0.028386876 ubox
16 31 0.107556913 ubox
16 40 0.004014082 ubox
16 69 0.003216331 ubox
17 31 0.020183804 ubox
18 25 0.004102428 ubox
18 27 0.010226564 ubox
18 28 0.993555163 ubox
18 61 0.005343761 ubox
18 91 0.007530986 ubox
19 25 0.012389500 ubox
19 27 0.998070196 ubox
19 28 0.018061859 ubox
19 60 0.005323797 ubox
19 91 0.009371723 ubox
20 24 0.011257275 ubox
20 25 0.006651019 ubox
20 26 0.997335580 ubox
20 27 0.016221577 ubox
20 28 0.010226575 ubox
20 29 0.024950209 ubox
20 90 0.008529108 ubox
20 92 0.016840624 ubox
21 25 0.988967627 ubox
21 27 0.013231132 ubox
21 28 0.026271233 ubox
21 91 0.017689568 ubox
25 95 0.004264265 ubox
25 98 0.006090607 ubox
25 101 0.006168950 ubox
25 104 0.006237860 ubox
27 66 0.004450193 ubox
27 95 0.006564321 ubox
27 98 0.006589198 ubox
27 101 0.006720210 ubox
27 104 0.006688541 ubox
28 65 0.004442435 ubox
28 95 0.007526433 ubox
28 98 0.007505110 ubox
28 101 0.007616543 ubox
28 104 0.006399999 ubox
30 40 0.006641117 ubox
30 69 0.003277916 ubox
31 38 0.003737824 ubox
31 39 0.006865168 ubox
31 43 0.893183296 ubox
31 44 0.041008602 ubox
31 45 0.011259228 ubox
31 68 0.004148970 ubox
31 87 0.005950045 ubox
31 88 0.005955887 ubox
31 89 0.005957478 ubox
31 90 0.005976117 ubox
31 92 0.006436819 ubox
31 93 0.005929519 ubox
31 94 0.005045294 ubox
31 96 0.006196408 ubox
31 97 0.005011148 ubox
31 99 0.006191460 ubox
31 100 0.005062472 ubox
31 102 0.006224859 ubox
31 103 0.005012833 ubox
31 105 0.006208782 ubox
31 106 0.004961647 ubox
32 42 0.993011493 ubox
32 95 0.004600848 ubox
32 98 0.004532345 ubox
32 101 0.004637279 ubox
32 104 0.004667913 ubox
33 41 0.993203792 ubox
34 40 0.972538033 ubox
35 39 0.862290068 ubox
36 40 0.005271778 ubox
40 45 0.005453483 ubox
40 50 0.004137675 ubox
40 62 0.006532048 ubox
40 96 0.008415199 ubox
40 99 0.008302274 ubox
40 102 0.008427525 ubox
40 105 0.008454332 ubox
41 49 0.004593594 ubox
41 59 0.003261894 ubox
41 95 0.009297651 ubox
41 98 0.009179651 ubox
41 101 0.009321065 ubox
41 104 0.009351384 ubox
42 47 0.004269210 ubox
42 60 0.008215037 ubox
42 61 0.005356973 ubox
42 91 0.005080653 ubox
43 56 0.003405976 ubox
44 56 0.012274806 ubox
45 54 0.003932485 ubox
45 56 0.043736666 ubox
46 54 0.005164328 ubox
46 56 0.952026391 ubox
47 54 0.004543827 ubox
47 55 0.988054453 ubox
47 56 0.006551365 ubox
47 82 0.046117816 ubox
47 95 0.003785333 ubox
47 98 0.006740876 ubox
47 101 0.004380812 ubox
47 104 0.003209851 ubox
48 54 0.986959003 ubox
48 56 0.003302873 ubox
48 81 0.046166936 ubox
49 53 0.977218377 ubox
49 60 0.004619212 ubox
49 67 0.005601258 ubox
49 79 0.004723441 ubox
49 80 0.046007795 ubox
49 91 0.003369839 ubox
50 56 0.004181778 ubox
51 56 0.005276701 ubox
51 77 0.044883196 ubox
52 76 0.046102731 ubox
53 59 0.014461843 ubox
53 65 0.005098108 ubox
53 69 0.006425240 ubox
53 75 0.046400189 ubox
53 95 0.012441512 ubox
53 98 0.009747692 ubox
53 101 0.010189405 ubox
53 104 0.009153543 ubox
54 58 0.013179962 ubox
54 61 0.010205696 ubox
54 62 0.032582521 ubox
54 64 0.004446811 ubox
54 68 0.008372917 ubox
54 74 0.046395125 ubox
54 92 0.031482094 ubox
54 94 0.010589123 ubox
54 97 0.009039641 ubox
54 100 0.009623227 ubox
54 103 0.008646580 ubox
55 60 0.013032057 ubox
55 61 0.034905620 ubox
55 67 0.008189144 ubox
55 73 0.046296280 ubox
55 91 0.033975315 ubox
56 60 0.031529553 ubox
56 61 0.004737947 ubox
56 62 0.004341013 ubox
56 63 0.005221022 ubox
56 68 0.009897756 ubox
56 90 0.032789867 ubox
56 92 0.003340840 ubox
57 69 0.052212332 ubox
57 71 0.013986897 ubox
57 72 0.011490631 ubox
58 69 0.044343488 ubox
58 71 0.011336365 ubox
59 67 0.923042560 ubox
59 85 0.006570317 ubox
59 91 0.005266494 ubox
60 65 0.064105138 ubox
60 66 0.940593511 ubox
60 69 0.003208933 ubox
60 71 0.006623558 ubox
60 82 0.003554555 ubox
60 95 0.044321855 ubox
60 98 0.010151928 ubox
61 65 0.925450165 ubox
61 66 0.039839095 ubox
61 70 0.007746476 ubox
61 82 0.006468430 ubox
61 95 0.013456975 ubox
62 69 0.007579258 ubox
62 81 0.004766206 ubox
64 81 0.024661593 ubox
65 80 0.027506215 ubox
65 91 0.021130582 ubox
66 79 0.027532324 ubox
66 91 0.043872458 ubox
67 78 0.027532535 ubox
67 95 0.006538382 ubox
67 98 0.004862983 ubox
67 101 0.004113898 ubox
67 104 0.003399006 ubox
68 77 0.027440437 ubox
69 86 0.930523793 ubox
69 87 0.042767175 ubox
69 88 0.009410481 ubox
69 89 0.006642132 ubox
69 90 0.004784264 ubox
69 92 0.009590649 ubox
70 85 0.997834125 ubox
70 91 0.009938719 ubox
71 84 0.997765429 ubox
71 90 0.009297888 ubox
72 83 0.997918675 ubox
72 89 0.006990789 ubox
73 82 0.998492923 ubox
74 81 0.998206527 ubox
75 79 0.011769049 ubox
75 80 0.997213086 ubox
76 80 0.004023298 ubox
76 87 0.005611513 ubox
77 86 0.006387628 ubox
78 85 0.006469739 ubox
81 92 0.004743836 ubox
82 91 0.006946212 ubox
85 95 0.004082148 ubox
91 95 0.069440109 ubox
91 98 0.141519549 ubox
91 101 0.047301176 ubox
91 104 0.018013836 ubox
91 107 0.004658713 ubox
1 95 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
