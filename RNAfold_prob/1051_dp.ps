%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1051)
} def

/sequence { (\
GGAAAAGGCAAAGCCAAGGUCAAAGACCAAGUAGCAAAGCUACAAGCUGAAACAGCAAGCCAAAGGCAGCACCACUUCGGUGGUGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.017788992 ubox
1 15 0.025673445 ubox
1 21 0.009182812 ubox
1 28 0.003745661 ubox
1 53 0.003247433 ubox
1 56 0.004341646 ubox
1 60 0.004157815 ubox
1 61 0.115226826 ubox
1 67 0.031737991 ubox
1 86 0.015831243 ubox
1 95 0.400516193 ubox
1 98 0.403041235 ubox
1 101 0.412286205 ubox
1 104 0.414148016 ubox
1 107 0.104559409 ubox
2 9 0.014685410 ubox
2 14 0.025750727 ubox
2 15 0.004791850 ubox
2 20 0.009004699 ubox
2 21 0.016000047 ubox
2 27 0.003609802 ubox
2 56 0.003227920 ubox
2 60 0.114924301 ubox
2 61 0.007534618 ubox
2 67 0.015675008 ubox
2 86 0.011438041 ubox
2 95 0.211396680 ubox
2 98 0.212160758 ubox
2 101 0.216684003 ubox
2 104 0.215859086 ubox
2 107 0.070434944 ubox
3 20 0.015954527 ubox
7 14 0.017309748 ubox
7 15 0.985671507 ubox
7 21 0.004450897 ubox
7 28 0.003450180 ubox
7 41 0.005937797 ubox
7 48 0.003732128 ubox
7 61 0.096068536 ubox
7 67 0.003967332 ubox
7 95 0.025516152 ubox
7 98 0.026085533 ubox
7 101 0.024890882 ubox
7 104 0.024655153 ubox
7 107 0.008608072 ubox
8 14 0.987252707 ubox
8 15 0.009323698 ubox
8 20 0.004480309 ubox
8 27 0.003451485 ubox
8 40 0.006210347 ubox
8 47 0.003911115 ubox
8 60 0.096177584 ubox
8 67 0.008487491 ubox
8 95 0.012488667 ubox
8 98 0.012467538 ubox
8 101 0.011429718 ubox
8 104 0.011205947 ubox
8 107 0.003652770 ubox
9 13 0.980087723 ubox
9 19 0.004464328 ubox
9 39 0.006210757 ubox
9 46 0.003917520 ubox
9 59 0.096077770 ubox
9 65 0.003886661 ubox
9 66 0.008487215 ubox
9 91 0.015698449 ubox
12 48 0.004836930 ubox
13 20 0.004226237 ubox
13 35 0.006304447 ubox
13 47 0.004947274 ubox
13 56 0.003346488 ubox
13 60 0.007710315 ubox
13 67 0.091267725 ubox
13 95 0.012373490 ubox
13 98 0.012064587 ubox
13 101 0.011873170 ubox
13 104 0.011786796 ubox
13 107 0.004112820 ubox
14 19 0.004508036 ubox
14 34 0.006296117 ubox
14 46 0.004925269 ubox
14 55 0.003311501 ubox
14 59 0.007715648 ubox
14 66 0.091363029 ubox
14 91 0.011308409 ubox
15 31 0.003835603 ubox
15 65 0.091265235 ubox
15 91 0.018123128 ubox
18 27 0.007942376 ubox
18 28 0.998145679 ubox
18 61 0.008905167 ubox
18 95 0.009408786 ubox
18 98 0.008359144 ubox
18 101 0.008539952 ubox
18 104 0.008536436 ubox
19 27 0.999311777 ubox
19 28 0.004507866 ubox
19 60 0.008902490 ubox
19 95 0.006134265 ubox
19 98 0.005953147 ubox
19 101 0.006125365 ubox
19 104 0.006067601 ubox
20 25 0.008298720 ubox
20 26 0.998543573 ubox
20 59 0.008290555 ubox
20 92 0.008851998 ubox
20 94 0.005658534 ubox
20 97 0.005606502 ubox
20 100 0.005785667 ubox
20 103 0.005731130 ubox
21 25 0.990139628 ubox
21 91 0.009447919 ubox
25 95 0.003288000 ubox
25 98 0.003207410 ubox
28 91 0.005604091 ubox
30 41 0.019013719 ubox
31 40 0.019722867 ubox
31 43 0.997901563 ubox
31 95 0.006380047 ubox
31 98 0.006072712 ubox
31 101 0.006146667 ubox
31 104 0.006058654 ubox
32 39 0.019344157 ubox
32 42 0.999124114 ubox
32 94 0.005473194 ubox
32 97 0.005129972 ubox
32 100 0.005196163 ubox
32 103 0.005111248 ubox
33 41 0.999368528 ubox
34 40 0.999630920 ubox
35 39 0.992364102 ubox
38 48 0.006177517 ubox
39 47 0.006535226 ubox
39 60 0.003250724 ubox
40 46 0.006536036 ubox
40 59 0.003267717 ubox
41 45 0.005897592 ubox
46 53 0.005150201 ubox
46 56 0.998021792 ubox
46 60 0.023635145 ubox
46 67 0.006828961 ubox
47 55 0.999071256 ubox
47 59 0.023814896 ubox
47 66 0.006814651 ubox
48 54 0.997844459 ubox
48 57 0.017346513 ubox
48 58 0.021785020 ubox
48 65 0.006648842 ubox
49 53 0.981956903 ubox
49 56 0.020660148 ubox
59 67 0.981211408 ubox
60 65 0.010009060 ubox
60 66 0.982213690 ubox
61 65 0.975079196 ubox
61 66 0.010201847 ubox
61 91 0.006190932 ubox
65 95 0.003867837 ubox
66 86 0.049102677 ubox
67 85 0.049225672 ubox
67 91 0.006224449 ubox
68 84 0.049168246 ubox
69 86 0.997488265 ubox
70 82 0.049245576 ubox
70 85 0.998758081 ubox
71 81 0.049253563 ubox
71 84 0.998574970 ubox
72 80 0.049263288 ubox
72 83 0.998775478 ubox
73 79 0.049231938 ubox
73 82 0.998773448 ubox
74 81 0.998287612 ubox
75 79 0.011930416 ubox
75 80 0.997373679 ubox
76 80 0.004033161 ubox
86 91 0.009204410 ubox
91 95 0.071405016 ubox
91 98 0.144677468 ubox
91 101 0.047631651 ubox
91 104 0.015921308 ubox
91 107 0.003866856 ubox
1 95 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
