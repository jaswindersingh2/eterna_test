%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (473)
} def

/sequence { (\
GGAAAACUUUGGGCGAGACAAUAGUCCCUGACGAGGCGCAAAACCACACACAAGUGUGGCCAAAGAAACAUAUGCUUCGGCAUGUGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.027201544 ubox
1 8 0.007396143 ubox
1 39 0.006615849 ubox
1 61 0.048321711 ubox
1 69 0.021301569 ubox
1 95 0.067863255 ubox
1 98 0.068449611 ubox
1 101 0.069737968 ubox
1 104 0.070079012 ubox
1 107 0.017697262 ubox
2 7 0.011280693 ubox
2 37 0.004185384 ubox
2 39 0.006769735 ubox
2 60 0.048196822 ubox
2 69 0.014339182 ubox
2 95 0.035865991 ubox
2 98 0.035899965 ubox
2 101 0.036639220 ubox
2 104 0.036528317 ubox
2 107 0.011920613 ubox
3 8 0.003388669 ubox
6 25 0.006123386 ubox
7 12 0.005254092 ubox
7 17 0.003819605 ubox
7 24 0.006582169 ubox
7 33 0.007527345 ubox
7 35 0.015316086 ubox
7 36 0.034046250 ubox
7 65 0.987611084 ubox
7 91 0.024215588 ubox
8 16 0.003853829 ubox
8 23 0.006424257 ubox
8 31 0.003871523 ubox
8 34 0.015108550 ubox
8 35 0.034222192 ubox
8 42 0.056010922 ubox
8 43 0.007019968 ubox
8 63 0.003945592 ubox
8 64 0.993435413 ubox
8 65 0.010347562 ubox
8 66 0.006969032 ubox
8 67 0.004031097 ubox
8 90 0.023857216 ubox
9 15 0.003696595 ubox
9 21 0.009729657 ubox
9 30 0.003902032 ubox
9 31 0.014161379 ubox
9 33 0.013253042 ubox
9 34 0.034216233 ubox
9 41 0.062292421 ubox
9 42 0.007811031 ubox
9 43 0.013210960 ubox
9 62 0.003264241 ubox
9 63 0.994216586 ubox
9 64 0.011276103 ubox
9 65 0.006702554 ubox
9 66 0.003934636 ubox
9 88 0.003385129 ubox
9 89 0.022637884 ubox
9 97 0.008438580 ubox
9 100 0.008223214 ubox
9 103 0.008359979 ubox
9 106 0.008310727 ubox
10 20 0.011079662 ubox
10 30 0.016253200 ubox
10 31 0.007251191 ubox
10 33 0.034162526 ubox
10 40 0.063863364 ubox
10 41 0.007505188 ubox
10 42 0.015625150 ubox
10 62 0.995162019 ubox
10 63 0.009024745 ubox
10 64 0.005358464 ubox
10 65 0.003263624 ubox
10 87 0.003344363 ubox
10 88 0.020581879 ubox
10 96 0.009824846 ubox
10 99 0.009623773 ubox
10 102 0.009794253 ubox
10 105 0.009748252 ubox
11 19 0.011417350 ubox
11 27 0.017238896 ubox
11 28 0.009770750 ubox
11 29 0.020322147 ubox
11 32 0.033158537 ubox
11 39 0.064294584 ubox
11 60 0.003394577 ubox
11 61 0.994860405 ubox
11 95 0.010011179 ubox
11 98 0.009813923 ubox
11 101 0.009991044 ubox
11 104 0.009946192 ubox
12 19 0.014982071 ubox
12 26 0.025451227 ubox
12 27 0.009939148 ubox
12 28 0.023336355 ubox
12 29 0.014407475 ubox
12 32 0.003212637 ubox
12 37 0.004897021 ubox
12 39 0.004150774 ubox
12 60 0.990886646 ubox
12 61 0.049734176 ubox
13 19 0.046260396 ubox
13 22 0.012492746 ubox
13 25 0.048506622 ubox
13 26 0.011985113 ubox
13 27 0.025055553 ubox
13 28 0.033287465 ubox
13 29 0.008975690 ubox
13 32 0.018711953 ubox
13 37 0.081455701 ubox
13 39 0.860481140 ubox
13 60 0.065792268 ubox
14 24 0.051102060 ubox
14 30 0.027296289 ubox
14 33 0.010008822 ubox
14 35 0.007744050 ubox
14 36 0.080350097 ubox
14 38 0.861512318 ubox
14 58 0.028593285 ubox
14 59 0.072006686 ubox
15 19 0.026727510 ubox
15 22 0.008707161 ubox
15 26 0.060487070 ubox
15 27 0.077018360 ubox
15 28 0.079586994 ubox
15 29 0.019275783 ubox
15 32 0.010424930 ubox
15 37 0.849865544 ubox
15 39 0.012803765 ubox
15 57 0.012470618 ubox
16 22 0.031454583 ubox
16 25 0.060777797 ubox
16 29 0.011644811 ubox
16 57 0.003351865 ubox
17 22 0.009556924 ubox
17 25 0.005244555 ubox
17 26 0.909076361 ubox
17 27 0.009315178 ubox
17 28 0.009241289 ubox
17 32 0.027207651 ubox
17 37 0.016647541 ubox
17 39 0.010122745 ubox
18 22 0.009468299 ubox
18 25 0.911426427 ubox
19 24 0.910072257 ubox
19 30 0.038437721 ubox
19 33 0.046076834 ubox
19 35 0.049350613 ubox
19 36 0.067587741 ubox
19 38 0.004691548 ubox
20 25 0.004330798 ubox
20 29 0.037907695 ubox
21 29 0.004860059 ubox
22 30 0.068672349 ubox
22 31 0.006091986 ubox
22 33 0.011909033 ubox
22 34 0.039591452 ubox
22 35 0.004849351 ubox
22 36 0.003523272 ubox
22 40 0.028388403 ubox
22 41 0.042217821 ubox
22 42 0.010356534 ubox
22 43 0.008552435 ubox
23 29 0.073706140 ubox
24 28 0.072528053 ubox
24 29 0.007235278 ubox
24 32 0.161536180 ubox
24 37 0.038053216 ubox
24 39 0.300610581 ubox
25 31 0.161585449 ubox
25 34 0.019675015 ubox
25 36 0.035586782 ubox
25 38 0.293368207 ubox
25 40 0.009175175 ubox
26 30 0.160233403 ubox
26 33 0.019833837 ubox
26 35 0.035437663 ubox
26 36 0.038400972 ubox
26 38 0.063983223 ubox
27 33 0.020544796 ubox
27 35 0.041049590 ubox
27 36 0.959841995 ubox
27 38 0.010300781 ubox
28 33 0.044198981 ubox
28 35 0.968990019 ubox
28 36 0.038765001 ubox
28 38 0.003580546 ubox
29 33 0.011475310 ubox
29 34 0.959396522 ubox
29 35 0.038831613 ubox
29 36 0.007664679 ubox
29 38 0.016843359 ubox
29 40 0.076607239 ubox
29 41 0.010176377 ubox
29 42 0.004208331 ubox
29 82 0.003174417 ubox
30 37 0.023583051 ubox
30 39 0.082979921 ubox
30 81 0.003495825 ubox
32 36 0.008902374 ubox
32 38 0.080846122 ubox
32 79 0.005306641 ubox
33 37 0.075920013 ubox
33 39 0.013426915 ubox
33 78 0.005371305 ubox
34 77 0.005368552 ubox
35 39 0.006138758 ubox
35 44 0.004856219 ubox
35 45 0.006138871 ubox
35 61 0.009609118 ubox
35 76 0.005366158 ubox
36 44 0.006280267 ubox
36 60 0.009632688 ubox
36 75 0.005369796 ubox
37 59 0.007252934 ubox
37 65 0.006737755 ubox
37 74 0.005366425 ubox
38 44 0.008516962 ubox
38 45 0.003178502 ubox
38 73 0.004671773 ubox
39 65 0.003900585 ubox
44 58 0.006662946 ubox
44 59 0.992394193 ubox
45 56 0.012831526 ubox
45 58 0.999456079 ubox
45 59 0.003173298 ubox
46 55 0.013020127 ubox
46 57 0.999579401 ubox
47 54 0.013024280 ubox
47 56 0.999832109 ubox
47 58 0.008771455 ubox
48 55 0.999102160 ubox
48 57 0.008956647 ubox
49 54 0.997308058 ubox
49 56 0.009023432 ubox
49 58 0.004301015 ubox
50 55 0.007539277 ubox
50 57 0.004372365 ubox
51 56 0.004383850 ubox
60 65 0.006766144 ubox
61 65 0.004163408 ubox
68 85 0.015735321 ubox
69 84 0.016143883 ubox
69 86 0.994328150 ubox
69 91 0.004704004 ubox
70 83 0.013857894 ubox
70 85 0.998923139 ubox
71 82 0.007501719 ubox
71 84 0.999043186 ubox
72 83 0.998969352 ubox
73 82 0.999509005 ubox
74 81 0.999958246 ubox
75 79 0.011550411 ubox
75 80 0.999137268 ubox
76 80 0.003704549 ubox
83 96 0.010202784 ubox
83 99 0.004879901 ubox
83 102 0.003398760 ubox
84 95 0.015901445 ubox
84 98 0.007614519 ubox
84 101 0.005315272 ubox
84 104 0.004604362 ubox
85 94 0.015927180 ubox
85 96 0.006858044 ubox
85 97 0.007046204 ubox
85 100 0.005159955 ubox
85 103 0.004492458 ubox
86 95 0.012483296 ubox
86 98 0.005067208 ubox
86 101 0.004055886 ubox
86 104 0.003323218 ubox
91 95 0.043049248 ubox
91 98 0.103768494 ubox
91 101 0.045508575 ubox
91 104 0.035210063 ubox
91 107 0.010417330 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
