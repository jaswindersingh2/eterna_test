%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (373)
} def

/sequence { (\
GGAAACGUUUUCAGGGCGAUCACUGAUCGCCGCAGCGUCGCUGCCCGAUCAUUGAUCGGCUGAAAACAGAAAUCAUUCGUGAUUUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.301699870 ubox
1 67 0.003626684 ubox
1 74 0.015018741 ubox
1 78 0.005470621 ubox
1 86 0.007693037 ubox
1 95 0.065680858 ubox
1 98 0.064980939 ubox
1 101 0.066567929 ubox
1 104 0.066826507 ubox
1 107 0.016870293 ubox
2 6 0.044828250 ubox
2 67 0.003870870 ubox
2 73 0.013813670 ubox
2 74 0.015058657 ubox
2 77 0.005227708 ubox
2 78 0.007336322 ubox
2 85 0.006855986 ubox
2 86 0.007902134 ubox
2 95 0.034811885 ubox
2 98 0.033933693 ubox
2 101 0.034799717 ubox
2 104 0.034663177 ubox
2 107 0.011310201 ubox
3 73 0.014743415 ubox
3 76 0.004980983 ubox
3 77 0.007300592 ubox
3 84 0.006355307 ubox
3 85 0.007430305 ubox
4 76 0.006687780 ubox
4 83 0.005045491 ubox
4 84 0.006176414 ubox
5 80 0.003325286 ubox
5 83 0.004363577 ubox
6 69 0.022730678 ubox
6 79 0.003509287 ubox
6 81 0.003806738 ubox
6 91 0.037620853 ubox
7 67 0.997538009 ubox
7 95 0.010606338 ubox
7 98 0.007404790 ubox
7 101 0.006968104 ubox
7 104 0.006902863 ubox
8 65 0.003420948 ubox
8 66 0.998492684 ubox
8 94 0.010161354 ubox
8 97 0.006861644 ubox
8 100 0.006428531 ubox
8 103 0.006364889 ubox
9 64 0.003659159 ubox
9 65 0.998228560 ubox
9 66 0.005390145 ubox
9 93 0.008850008 ubox
9 96 0.004667669 ubox
9 99 0.004359157 ubox
9 102 0.004314830 ubox
10 63 0.003293518 ubox
10 64 0.998393915 ubox
10 65 0.006558278 ubox
10 92 0.007336374 ubox
10 93 0.003378844 ubox
11 63 0.999439351 ubox
11 64 0.006939640 ubox
11 91 0.005537204 ubox
11 92 0.003715936 ubox
12 62 0.999276257 ubox
12 91 0.003932294 ubox
13 61 0.958790404 ubox
14 60 0.826107663 ubox
14 61 0.276426477 ubox
15 31 0.484243529 ubox
15 60 0.559419861 ubox
15 61 0.021115878 ubox
16 30 0.484678189 ubox
16 60 0.031002387 ubox
17 29 0.484680049 ubox
17 58 0.872853815 ubox
17 59 0.023505501 ubox
18 28 0.484673516 ubox
18 57 0.874641515 ubox
19 27 0.484528794 ubox
19 56 0.874463325 ubox
20 25 0.003416962 ubox
20 26 0.484158406 ubox
20 55 0.874462405 ubox
21 25 0.480141924 ubox
21 54 0.874642674 ubox
22 52 0.020735835 ubox
22 53 0.865426001 ubox
24 51 0.865669537 ubox
25 50 0.874643015 ubox
26 49 0.874462337 ubox
27 48 0.874460190 ubox
28 47 0.874610985 ubox
29 44 0.007346797 ubox
29 45 0.031250451 ubox
29 46 0.866565000 ubox
30 43 0.008102556 ubox
32 41 0.010115638 ubox
32 44 0.997627543 ubox
32 45 0.031918128 ubox
33 40 0.010127958 ubox
33 43 0.999906983 ubox
34 42 0.999684761 ubox
35 41 0.999864569 ubox
35 44 0.004886953 ubox
36 40 0.992595679 ubox
36 43 0.004897436 ubox
37 42 0.003457362 ubox
45 58 0.003552004 ubox
45 59 0.480434416 ubox
46 58 0.484577890 ubox
47 57 0.484672117 ubox
48 56 0.484527456 ubox
49 54 0.003417007 ubox
49 55 0.484157098 ubox
50 54 0.480140636 ubox
69 74 0.008061096 ubox
69 78 0.044464661 ubox
69 85 0.005580722 ubox
69 86 0.994926547 ubox
70 77 0.043906648 ubox
70 84 0.005098701 ubox
70 85 0.995853081 ubox
71 76 0.036550771 ubox
71 83 0.003813005 ubox
71 84 0.995233411 ubox
72 83 0.995747944 ubox
73 82 0.996519020 ubox
74 79 0.005589128 ubox
74 81 0.996450413 ubox
75 80 0.829153394 ubox
76 93 0.005733733 ubox
76 100 0.010567474 ubox
76 103 0.004091029 ubox
77 92 0.006583361 ubox
77 99 0.012288845 ubox
77 100 0.007620430 ubox
77 102 0.004706536 ubox
78 91 0.006663844 ubox
79 95 0.005756332 ubox
79 98 0.071381822 ubox
79 101 0.011069347 ubox
79 104 0.003477698 ubox
80 87 0.004313393 ubox
80 94 0.005401606 ubox
80 96 0.026857435 ubox
80 97 0.069605816 ubox
80 99 0.008773480 ubox
80 100 0.009559852 ubox
80 103 0.003188523 ubox
81 86 0.004632640 ubox
81 95 0.032840996 ubox
81 98 0.010717953 ubox
83 93 0.003880617 ubox
83 94 0.075627700 ubox
84 92 0.003939509 ubox
84 93 0.078506928 ubox
85 91 0.003656200 ubox
85 92 0.079644348 ubox
86 91 0.079905938 ubox
91 95 0.042776244 ubox
91 98 0.103243357 ubox
91 101 0.045344826 ubox
91 104 0.035133739 ubox
91 107 0.010395706 ubox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
17 58 0.9500000 lbox
18 57 0.9500000 lbox
19 56 0.9500000 lbox
20 55 0.9500000 lbox
21 54 0.9500000 lbox
22 53 0.9500000 lbox
24 51 0.9500000 lbox
25 50 0.9500000 lbox
26 49 0.9500000 lbox
27 48 0.9500000 lbox
28 47 0.9500000 lbox
29 46 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
