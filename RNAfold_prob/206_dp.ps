%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (206)
} def

/sequence { (\
GGAAAAGACGGGUUCAGAUCCAGAAAACUGAGAUCAAAAGAUGAGACAAAAGUCCAUCAGAACGGGUCUGAAGCCUUCGGGCUUCAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.015403893 ubox
1 15 0.003718649 ubox
1 68 0.003485445 ubox
1 69 0.007800012 ubox
1 83 0.004320504 ubox
1 85 0.012864693 ubox
1 95 0.067335707 ubox
1 98 0.067863025 ubox
1 101 0.069413055 ubox
1 104 0.069833281 ubox
1 107 0.017626807 ubox
2 9 0.007716240 ubox
2 14 0.003633657 ubox
2 15 0.010112823 ubox
2 68 0.009928033 ubox
2 69 0.004246477 ubox
2 82 0.005262083 ubox
2 84 0.012438663 ubox
2 85 0.010911697 ubox
2 95 0.035526806 ubox
2 98 0.035694021 ubox
2 101 0.036457897 ubox
2 104 0.036377488 ubox
2 107 0.011855343 ubox
3 13 0.003419565 ubox
3 14 0.010106813 ubox
3 67 0.009327258 ubox
3 69 0.008153814 ubox
3 83 0.011853961 ubox
3 84 0.010647482 ubox
4 13 0.009798751 ubox
4 69 0.010460386 ubox
4 83 0.009486639 ubox
5 69 0.038029851 ubox
6 67 0.004038725 ubox
6 69 0.829073597 ubox
7 15 0.004657467 ubox
7 67 0.004947745 ubox
7 68 0.995981038 ubox
7 78 0.019756215 ubox
7 98 0.005579700 ubox
7 101 0.005692082 ubox
7 104 0.004830103 ubox
8 14 0.004436501 ubox
8 67 0.996575452 ubox
8 77 0.019529197 ubox
9 64 0.010632232 ubox
9 65 0.043627658 ubox
9 66 0.992873608 ubox
10 15 0.006304298 ubox
10 63 0.009556885 ubox
10 68 0.006550414 ubox
10 69 0.003178131 ubox
10 75 0.020242150 ubox
10 76 0.003794106 ubox
10 95 0.006165148 ubox
10 98 0.007616882 ubox
10 101 0.005920341 ubox
10 104 0.005184424 ubox
11 20 0.003198676 ubox
11 63 0.042825763 ubox
11 67 0.006356937 ubox
11 68 0.004088977 ubox
11 74 0.020262038 ubox
11 75 0.004054592 ubox
11 95 0.010459281 ubox
11 98 0.004041396 ubox
11 101 0.003957969 ubox
11 104 0.003872228 ubox
12 63 0.994325782 ubox
12 67 0.003246452 ubox
12 74 0.004060279 ubox
12 95 0.010458943 ubox
12 98 0.007552356 ubox
12 101 0.007288572 ubox
12 104 0.006649097 ubox
13 39 0.007420955 ubox
13 60 0.004154836 ubox
13 61 0.008590643 ubox
13 62 0.997769879 ubox
13 66 0.003294738 ubox
13 72 0.020272017 ubox
13 73 0.003311417 ubox
13 93 0.011809530 ubox
13 94 0.009212339 ubox
13 97 0.007437803 ubox
13 100 0.007196692 ubox
13 103 0.006566301 ubox
14 38 0.009010268 ubox
14 59 0.003710171 ubox
14 60 0.008764593 ubox
14 61 0.998169356 ubox
14 65 0.004500406 ubox
14 71 0.020582582 ubox
14 92 0.015612091 ubox
14 93 0.007334632 ubox
14 96 0.006494240 ubox
14 99 0.006347148 ubox
14 102 0.005796297 ubox
15 60 0.997319922 ubox
15 64 0.004593428 ubox
15 70 0.020742409 ubox
15 91 0.016420778 ubox
16 69 0.020779425 ubox
17 35 0.998231815 ubox
17 68 0.020804666 ubox
18 34 0.999212700 ubox
18 67 0.020795891 ubox
19 31 0.003293488 ubox
19 32 0.004908307 ubox
19 33 0.999361788 ubox
19 66 0.020767611 ubox
20 32 0.999468334 ubox
20 65 0.020754585 ubox
21 30 0.999114330 ubox
21 64 0.020049400 ubox
22 29 0.997984584 ubox
23 28 0.989720318 ubox
23 29 0.017348138 ubox
23 35 0.007595263 ubox
23 63 0.004963439 ubox
24 29 0.004267012 ubox
24 34 0.007217506 ubox
28 60 0.005672125 ubox
29 36 0.013029758 ubox
29 59 0.005669923 ubox
30 35 0.014197406 ubox
30 58 0.005204212 ubox
31 57 0.004768355 ubox
31 69 0.003860688 ubox
32 68 0.004641272 ubox
33 42 0.003282282 ubox
33 67 0.004645984 ubox
34 41 0.003527931 ubox
34 66 0.004638976 ubox
35 40 0.003698657 ubox
35 65 0.004631649 ubox
40 58 0.998269521 ubox
41 57 0.999254247 ubox
42 56 0.999257736 ubox
42 59 0.017147609 ubox
43 54 0.009293621 ubox
43 55 0.999389015 ubox
43 58 0.019043852 ubox
44 53 0.012929090 ubox
44 57 0.018175060 ubox
45 53 0.005996423 ubox
45 54 0.999570754 ubox
45 55 0.003355032 ubox
46 53 0.999292899 ubox
47 52 0.997439295 ubox
59 69 0.009092381 ubox
60 68 0.011904244 ubox
61 67 0.011418357 ubox
64 84 0.003772521 ubox
64 95 0.046100703 ubox
64 98 0.004046845 ubox
65 83 0.005029487 ubox
65 95 0.006996225 ubox
66 82 0.005395816 ubox
66 95 0.004469025 ubox
67 81 0.005397503 ubox
67 87 0.004212768 ubox
67 88 0.009299912 ubox
67 92 0.048870019 ubox
67 94 0.003499054 ubox
68 80 0.005400924 ubox
68 91 0.049493293 ubox
69 79 0.005397821 ubox
69 86 0.514003313 ubox
69 87 0.023670738 ubox
69 88 0.006517449 ubox
69 89 0.005147040 ubox
69 90 0.034928406 ubox
70 78 0.005407571 ubox
70 84 0.003293214 ubox
70 85 0.998527516 ubox
71 77 0.005330911 ubox
71 84 0.999107141 ubox
72 76 0.004062775 ubox
72 83 0.999147708 ubox
73 82 0.999755442 ubox
74 80 0.011632785 ubox
74 81 0.999686311 ubox
75 79 0.016317136 ubox
75 80 0.998861857 ubox
75 81 0.003222912 ubox
76 80 0.004106233 ubox
81 95 0.004921010 ubox
82 91 0.003914564 ubox
83 90 0.003897015 ubox
83 93 0.009795899 ubox
84 89 0.003423068 ubox
84 92 0.013143628 ubox
85 91 0.014322890 ubox
91 95 0.042983133 ubox
91 98 0.103632524 ubox
91 101 0.045464785 ubox
91 104 0.035186018 ubox
91 107 0.010410264 ubox
6 69 0.9500000 lbox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
