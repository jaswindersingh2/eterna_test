%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (739)
} def

/sequence { (\
GGAAAGCCGUGGCAAAGGCAGGGCAAGAGAGCAGGAAUACAGCACUCAGUGAUCGCGUGAGAGAGCACCAUCUACUUCGGUAGAUGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.007378136 ubox
1 24 0.015313973 ubox
1 32 0.004348758 ubox
1 47 0.006218640 ubox
1 54 0.013861396 ubox
1 56 0.013273022 ubox
1 66 0.007171159 ubox
1 68 0.028235755 ubox
1 69 0.042742815 ubox
1 95 0.241358044 ubox
1 98 0.243015014 ubox
1 101 0.248630678 ubox
1 104 0.249800603 ubox
1 107 0.063082665 ubox
2 7 0.007364978 ubox
2 24 0.009026041 ubox
2 46 0.004507515 ubox
2 47 0.008327708 ubox
2 53 0.009135257 ubox
2 54 0.030460063 ubox
2 56 0.005490814 ubox
2 66 0.005644839 ubox
2 68 0.047530814 ubox
2 69 0.006341705 ubox
2 95 0.127391345 ubox
2 98 0.127918279 ubox
2 101 0.130689931 ubox
2 104 0.130220212 ubox
2 107 0.042501292 ubox
3 46 0.007656098 ubox
3 53 0.028539395 ubox
5 50 0.004477676 ubox
6 19 0.052092196 ubox
6 24 0.997403708 ubox
6 95 0.006727351 ubox
6 98 0.006767884 ubox
6 101 0.006754186 ubox
6 104 0.006617910 ubox
7 18 0.052153034 ubox
7 22 0.007896966 ubox
7 23 0.998547811 ubox
8 17 0.052147753 ubox
8 21 0.009162537 ubox
8 22 0.998366810 ubox
9 19 0.009107973 ubox
10 15 0.009298394 ubox
10 16 0.005735890 ubox
10 18 0.009099162 ubox
10 20 0.991703907 ubox
10 21 0.029551552 ubox
11 19 0.963294419 ubox
12 19 0.261602789 ubox
13 17 0.811739419 ubox
13 18 0.354978580 ubox
18 56 0.003572399 ubox
19 55 0.003568694 ubox
21 54 0.007718041 ubox
21 95 0.004813048 ubox
21 98 0.004832463 ubox
21 101 0.004912029 ubox
21 104 0.004924423 ubox
22 53 0.005736523 ubox
22 54 0.006375733 ubox
22 95 0.004304879 ubox
22 98 0.004278247 ubox
22 101 0.004360045 ubox
22 104 0.004342159 ubox
23 32 0.007713728 ubox
23 50 0.005320085 ubox
23 53 0.006304992 ubox
23 66 0.003644021 ubox
24 31 0.007734789 ubox
24 49 0.005615160 ubox
24 51 0.011056951 ubox
24 65 0.003653398 ubox
24 91 0.005304277 ubox
25 50 0.012813088 ubox
26 46 0.015951697 ubox
26 50 0.008836211 ubox
27 32 0.007892033 ubox
27 45 0.016919307 ubox
27 47 0.991573835 ubox
27 54 0.024826962 ubox
27 95 0.007545181 ubox
27 98 0.007561430 ubox
27 101 0.007712894 ubox
27 104 0.007732488 ubox
28 46 0.992626514 ubox
28 53 0.024835311 ubox
29 40 0.003333921 ubox
29 45 0.989145888 ubox
29 47 0.061087201 ubox
29 54 0.005601633 ubox
29 95 0.005342615 ubox
29 98 0.005355680 ubox
29 101 0.005499090 ubox
29 104 0.005465111 ubox
30 46 0.060568392 ubox
30 53 0.005248684 ubox
31 40 0.008114542 ubox
31 43 0.993415973 ubox
31 45 0.054477253 ubox
31 47 0.006207017 ubox
31 50 0.024754164 ubox
31 56 0.013577326 ubox
31 58 0.005276175 ubox
31 66 0.009166065 ubox
31 98 0.003222500 ubox
31 101 0.003276067 ubox
31 104 0.003242293 ubox
32 42 0.993495080 ubox
32 49 0.024747470 ubox
32 51 0.005017338 ubox
32 55 0.013540207 ubox
32 57 0.005521405 ubox
32 59 0.004416275 ubox
32 65 0.009160201 ubox
32 91 0.003395847 ubox
33 38 0.033463638 ubox
33 46 0.013738896 ubox
33 50 0.004945511 ubox
33 58 0.004387593 ubox
34 38 0.017381653 ubox
34 40 0.853421518 ubox
34 43 0.035812277 ubox
34 45 0.014661809 ubox
34 46 0.005027348 ubox
34 47 0.010458234 ubox
34 54 0.005446219 ubox
34 56 0.005839152 ubox
34 95 0.004040706 ubox
34 98 0.004036226 ubox
34 101 0.004057235 ubox
34 104 0.003827905 ubox
35 40 0.253182480 ubox
35 43 0.012427802 ubox
35 45 0.006018740 ubox
35 46 0.008717578 ubox
35 47 0.018626354 ubox
35 53 0.004690621 ubox
35 54 0.020928252 ubox
35 56 0.003929444 ubox
36 46 0.017982268 ubox
36 53 0.020926239 ubox
38 44 0.005769264 ubox
38 51 0.021214252 ubox
38 59 0.005826741 ubox
39 50 0.021861222 ubox
39 58 0.006280849 ubox
40 49 0.021893506 ubox
40 51 0.004770622 ubox
40 57 0.006277367 ubox
41 50 0.004644396 ubox
42 47 0.004539425 ubox
42 50 0.003331148 ubox
42 56 0.007613495 ubox
42 66 0.053871913 ubox
43 49 0.003677082 ubox
43 51 0.008104098 ubox
43 55 0.007600249 ubox
43 59 0.003597614 ubox
43 63 0.009302710 ubox
43 65 0.053888083 ubox
44 50 0.008325524 ubox
44 58 0.003659212 ubox
45 49 0.008267004 ubox
45 51 0.003754433 ubox
45 57 0.003661466 ubox
45 61 0.065802657 ubox
45 63 0.017541859 ubox
45 65 0.010816240 ubox
45 91 0.004041488 ubox
46 52 0.005191636 ubox
46 60 0.066054937 ubox
46 62 0.017470639 ubox
46 64 0.010941144 ubox
46 90 0.003836155 ubox
46 92 0.008976151 ubox
47 51 0.005310115 ubox
47 59 0.066113560 ubox
47 61 0.017357988 ubox
47 63 0.010951321 ubox
47 91 0.009732323 ubox
48 53 0.008673612 ubox
48 58 0.064077580 ubox
49 54 0.034127396 ubox
49 56 0.075841628 ubox
49 58 0.007297846 ubox
49 66 0.456981037 ubox
49 68 0.850303699 ubox
49 69 0.004751937 ubox
49 95 0.050722207 ubox
49 98 0.039729152 ubox
49 101 0.032476167 ubox
49 104 0.033312371 ubox
49 107 0.011877142 ubox
50 55 0.072827037 ubox
50 57 0.027818366 ubox
50 59 0.003215951 ubox
50 60 0.010411356 ubox
50 63 0.010460008 ubox
50 64 0.004858330 ubox
50 65 0.456968711 ubox
50 67 0.852812803 ubox
50 87 0.005438481 ubox
50 94 0.050098836 ubox
50 96 0.022063453 ubox
50 97 0.036903269 ubox
50 99 0.017386251 ubox
50 100 0.029996027 ubox
50 102 0.017587816 ubox
50 103 0.030865151 ubox
50 105 0.015353585 ubox
50 106 0.011093599 ubox
51 56 0.035195183 ubox
51 66 0.846670747 ubox
51 68 0.016470998 ubox
51 95 0.026926738 ubox
51 98 0.021195818 ubox
51 101 0.021419913 ubox
51 104 0.017297442 ubox
52 58 0.010339481 ubox
52 85 0.006512797 ubox
53 57 0.009601513 ubox
53 60 0.035805097 ubox
53 62 0.475073630 ubox
53 63 0.006635144 ubox
53 64 0.763998367 ubox
53 65 0.018518663 ubox
53 67 0.014929008 ubox
53 84 0.006624362 ubox
53 90 0.004608181 ubox
53 92 0.052701534 ubox
53 93 0.005670249 ubox
53 94 0.009568921 ubox
53 96 0.004196560 ubox
53 97 0.006753585 ubox
53 99 0.004446189 ubox
53 100 0.007466633 ubox
53 102 0.003903104 ubox
53 103 0.003588810 ubox
54 59 0.036516415 ubox
54 61 0.476528182 ubox
54 63 0.832363116 ubox
54 65 0.027309038 ubox
54 83 0.006634873 ubox
54 91 0.054237668 ubox
55 66 0.178880986 ubox
55 68 0.028005183 ubox
55 69 0.008451727 ubox
55 81 0.005587838 ubox
55 95 0.006683477 ubox
55 98 0.006912973 ubox
55 101 0.005813081 ubox
55 104 0.003952581 ubox
56 61 0.600636054 ubox
56 63 0.066155490 ubox
56 65 0.179425474 ubox
56 80 0.005942242 ubox
56 91 0.013082306 ubox
57 66 0.042036002 ubox
57 68 0.133246149 ubox
57 95 0.006562373 ubox
57 98 0.021477985 ubox
57 101 0.005653271 ubox
58 62 0.005855481 ubox
58 63 0.058768354 ubox
58 64 0.019122209 ubox
58 65 0.041616372 ubox
58 67 0.133600596 ubox
58 94 0.006509231 ubox
58 96 0.007317784 ubox
58 97 0.021155812 ubox
58 99 0.003398017 ubox
58 100 0.005335804 ubox
59 66 0.133386130 ubox
59 77 0.006031886 ubox
59 95 0.008138362 ubox
59 98 0.003971122 ubox
60 76 0.006338566 ubox
61 66 0.006052322 ubox
61 68 0.003779723 ubox
61 75 0.006548228 ubox
61 95 0.004220082 ubox
62 73 0.006837057 ubox
63 68 0.005352671 ubox
63 72 0.006885903 ubox
64 71 0.006791820 ubox
66 91 0.006458453 ubox
68 86 0.016842751 ubox
68 91 0.019359474 ubox
69 86 0.996042916 ubox
69 91 0.004703164 ubox
70 85 0.999044319 ubox
71 84 0.999627610 ubox
72 83 0.999946950 ubox
73 82 0.999663326 ubox
74 81 0.999553432 ubox
75 79 0.011974344 ubox
75 80 0.998685420 ubox
76 80 0.004044456 ubox
77 87 0.003177988 ubox
78 86 0.003217310 ubox
85 96 0.007484978 ubox
86 95 0.012463305 ubox
86 98 0.004684909 ubox
86 101 0.003401738 ubox
91 95 0.054586807 ubox
91 98 0.119473477 ubox
91 101 0.046168459 ubox
91 104 0.029852500 ubox
91 107 0.008687704 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
