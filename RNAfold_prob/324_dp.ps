%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (324)
} def

/sequence { (\
GGAAAAUAAAUUUAUAUAAUAAAAUAAUAAUUAUAUAGAAAUAUAUAAUUAUUAAUUAUAUAAAUUUAAUAAAUAUUCGUAUUUAUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.009394045 ubox
1 74 0.025871547 ubox
1 76 0.004820164 ubox
1 78 0.056552012 ubox
1 80 0.005944753 ubox
1 95 0.064972999 ubox
1 98 0.065737197 ubox
1 101 0.067242365 ubox
1 104 0.067558616 ubox
1 107 0.017059996 ubox
2 7 0.005535381 ubox
2 67 0.005194583 ubox
2 70 0.006020501 ubox
2 74 0.011176815 ubox
2 76 0.003684901 ubox
2 77 0.056127107 ubox
2 78 0.078662377 ubox
2 83 0.003433734 ubox
2 84 0.007423617 ubox
2 86 0.003603770 ubox
2 95 0.034305588 ubox
2 98 0.034566592 ubox
2 101 0.035319684 ubox
2 104 0.035192519 ubox
2 107 0.011485509 ubox
3 7 0.005159209 ubox
3 66 0.004689412 ubox
3 67 0.005722794 ubox
3 70 0.019556638 ubox
3 74 0.008661289 ubox
3 76 0.054053064 ubox
3 77 0.078581190 ubox
3 82 0.003283724 ubox
3 83 0.007566177 ubox
3 84 0.004737697 ubox
3 86 0.003329258 ubox
4 66 0.004834761 ubox
4 67 0.008585776 ubox
4 70 0.019807027 ubox
4 74 0.013953003 ubox
4 76 0.074954449 ubox
4 77 0.004164152 ubox
4 82 0.007057940 ubox
4 83 0.004843862 ubox
4 84 0.012750113 ubox
5 65 0.003196971 ubox
5 66 0.007879906 ubox
5 67 0.008803341 ubox
5 70 0.087331031 ubox
5 74 0.019954178 ubox
5 76 0.004864019 ubox
5 77 0.009179358 ubox
5 82 0.004309026 ubox
5 83 0.013551465 ubox
5 84 0.003412775 ubox
6 65 0.006417024 ubox
6 66 0.006684077 ubox
6 67 0.009614986 ubox
6 70 0.062523934 ubox
6 74 0.050342283 ubox
6 76 0.011052616 ubox
6 80 0.005196656 ubox
6 82 0.013615097 ubox
6 83 0.003463296 ubox
6 86 0.004334955 ubox
7 64 0.004929837 ubox
7 68 0.927777323 ubox
7 69 0.047409257 ubox
7 71 0.009829377 ubox
7 72 0.006997610 ubox
7 73 0.033686669 ubox
7 75 0.009927443 ubox
7 79 0.003914489 ubox
7 81 0.011326838 ubox
7 85 0.003650808 ubox
7 88 0.003242348 ubox
7 89 0.003550178 ubox
7 90 0.004434990 ubox
7 92 0.003918846 ubox
7 93 0.003441867 ubox
8 66 0.008682746 ubox
8 67 0.983171393 ubox
8 70 0.008503982 ubox
8 74 0.008119924 ubox
8 80 0.009190902 ubox
8 84 0.003305705 ubox
9 65 0.007366572 ubox
9 66 0.993737489 ubox
9 67 0.012839516 ubox
10 65 0.997514467 ubox
10 66 0.010036644 ubox
11 64 0.998435794 ubox
12 63 0.998486506 ubox
13 62 0.999177833 ubox
14 61 0.999432582 ubox
15 60 0.999468096 ubox
16 59 0.999400525 ubox
17 58 0.999238350 ubox
18 57 0.998111581 ubox
19 56 0.994773888 ubox
19 57 0.009356986 ubox
19 59 0.011480971 ubox
20 54 0.024160705 ubox
20 55 0.982776464 ubox
20 58 0.017615524 ubox
21 53 0.029678987 ubox
21 56 0.020010803 ubox
21 57 0.020426681 ubox
22 52 0.019336887 ubox
22 53 0.048298192 ubox
22 56 0.023384364 ubox
22 57 0.031780182 ubox
23 52 0.033015981 ubox
23 53 0.027553292 ubox
23 56 0.052189114 ubox
23 57 0.016459260 ubox
24 52 0.026984389 ubox
24 53 0.017523630 ubox
24 56 0.027745523 ubox
25 51 0.025274318 ubox
25 54 0.986534867 ubox
25 55 0.023953287 ubox
26 50 0.023266142 ubox
26 52 0.008128763 ubox
26 53 0.995509676 ubox
27 49 0.018840019 ubox
27 52 0.997665183 ubox
28 48 0.014648744 ubox
28 51 0.999059324 ubox
29 50 0.998949572 ubox
30 46 0.003170342 ubox
30 49 0.998800482 ubox
31 48 0.998866034 ubox
32 45 0.007233862 ubox
32 47 0.999186036 ubox
33 44 0.008491139 ubox
33 46 0.999385406 ubox
34 43 0.009472477 ubox
34 45 0.999404372 ubox
34 47 0.004215947 ubox
35 42 0.010059193 ubox
35 44 0.999334143 ubox
35 46 0.005178503 ubox
36 41 0.010264894 ubox
36 43 0.997457700 ubox
36 45 0.006162007 ubox
37 42 0.978990725 ubox
37 44 0.006734670 ubox
38 42 0.010630568 ubox
65 89 0.020424505 ubox
65 90 0.025103559 ubox
65 91 0.003324273 ubox
65 92 0.006255304 ubox
66 87 0.004394303 ubox
66 88 0.033895515 ubox
66 89 0.041603373 ubox
66 90 0.008766010 ubox
66 91 0.008582684 ubox
66 92 0.004235074 ubox
67 85 0.004114877 ubox
67 87 0.043481955 ubox
67 88 0.050923780 ubox
67 89 0.011121676 ubox
67 90 0.011014982 ubox
67 91 0.004604052 ubox
68 77 0.007153605 ubox
68 83 0.017391065 ubox
68 84 0.004852850 ubox
68 86 0.033399863 ubox
69 74 0.005456999 ubox
69 76 0.013301856 ubox
69 77 0.006107737 ubox
69 80 0.016282409 ubox
69 82 0.032260501 ubox
69 83 0.005372734 ubox
69 84 0.005036909 ubox
69 86 0.894661906 ubox
70 75 0.013162389 ubox
70 79 0.016576564 ubox
70 81 0.033954198 ubox
70 85 0.933206103 ubox
70 87 0.013283473 ubox
70 88 0.005431943 ubox
70 89 0.007421288 ubox
70 90 0.003904265 ubox
70 92 0.004091029 ubox
70 99 0.005696743 ubox
71 76 0.003922155 ubox
71 77 0.006607184 ubox
71 80 0.033800355 ubox
71 83 0.005838818 ubox
71 84 0.939818916 ubox
71 86 0.012215982 ubox
72 76 0.005805478 ubox
72 77 0.006557575 ubox
72 80 0.003858384 ubox
72 82 0.006007656 ubox
72 83 0.940451870 ubox
72 84 0.013273878 ubox
72 86 0.004366579 ubox
73 80 0.019983383 ubox
73 82 0.940224884 ubox
73 83 0.013755540 ubox
73 84 0.008843119 ubox
73 86 0.073622233 ubox
74 79 0.020769188 ubox
74 81 0.931762879 ubox
74 85 0.076884043 ubox
74 87 0.049147783 ubox
74 93 0.003672276 ubox
74 94 0.010779916 ubox
74 96 0.007342553 ubox
74 97 0.005762343 ubox
74 99 0.005438275 ubox
74 100 0.003566969 ubox
74 102 0.003419894 ubox
75 80 0.839831365 ubox
75 82 0.021722528 ubox
75 83 0.005858876 ubox
75 84 0.077161127 ubox
75 86 0.052064097 ubox
76 81 0.025251206 ubox
76 85 0.052179037 ubox
76 87 0.003609998 ubox
76 88 0.004939112 ubox
76 89 0.007714143 ubox
76 90 0.004314278 ubox
76 91 0.003725177 ubox
76 92 0.005882194 ubox
76 93 0.128660640 ubox
76 94 0.008708378 ubox
76 96 0.003805737 ubox
76 97 0.017634536 ubox
76 99 0.003779375 ubox
76 100 0.010566555 ubox
76 103 0.005350344 ubox
76 106 0.004099074 ubox
77 81 0.004522909 ubox
77 87 0.005236736 ubox
77 88 0.008309226 ubox
77 89 0.004564934 ubox
77 90 0.004996508 ubox
77 91 0.005227866 ubox
77 92 0.147848907 ubox
77 93 0.008173213 ubox
77 96 0.020612878 ubox
77 97 0.013174224 ubox
77 99 0.012250658 ubox
77 100 0.006237932 ubox
77 102 0.006173257 ubox
77 103 0.003255224 ubox
77 105 0.004770128 ubox
78 91 0.149803564 ubox
79 84 0.008522181 ubox
79 86 0.017855866 ubox
79 95 0.106932514 ubox
79 98 0.049693877 ubox
79 101 0.025648626 ubox
79 104 0.022442932 ubox
79 107 0.007142776 ubox
80 85 0.017520500 ubox
80 87 0.020292096 ubox
80 88 0.013159122 ubox
80 89 0.034219683 ubox
80 90 0.013502903 ubox
80 91 0.003565384 ubox
80 92 0.005290217 ubox
80 93 0.007100078 ubox
80 94 0.105248203 ubox
80 96 0.005930900 ubox
80 97 0.048684720 ubox
80 100 0.024923594 ubox
80 103 0.021800730 ubox
80 106 0.006966805 ubox
81 86 0.019547971 ubox
82 87 0.029771512 ubox
82 88 0.019749764 ubox
82 89 0.016790568 ubox
82 90 0.021713658 ubox
82 91 0.021183704 ubox
82 92 0.084073992 ubox
82 93 0.072707962 ubox
82 94 0.021007891 ubox
82 96 0.004177543 ubox
82 97 0.004756002 ubox
82 100 0.003680265 ubox
83 87 0.017813256 ubox
83 88 0.016531843 ubox
83 89 0.023049704 ubox
83 90 0.027003944 ubox
83 91 0.084779581 ubox
83 92 0.077101597 ubox
83 93 0.024331151 ubox
83 94 0.025683893 ubox
83 96 0.005035092 ubox
83 97 0.010105455 ubox
83 99 0.003931545 ubox
83 100 0.007691125 ubox
83 103 0.003622820 ubox
84 88 0.019692442 ubox
84 89 0.026033300 ubox
84 90 0.079690939 ubox
84 91 0.075318524 ubox
84 92 0.023948763 ubox
84 93 0.027016004 ubox
84 94 0.003756063 ubox
84 96 0.010067276 ubox
84 99 0.007596869 ubox
84 102 0.003838881 ubox
86 90 0.007996418 ubox
86 91 0.009536262 ubox
86 92 0.008324370 ubox
86 93 0.010336802 ubox
86 94 0.006932205 ubox
86 96 0.003875679 ubox
86 97 0.004568374 ubox
91 95 0.042133157 ubox
91 98 0.101600777 ubox
91 101 0.044593385 ubox
91 104 0.034529957 ubox
91 107 0.010215954 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
10 65 0.9500000 lbox
11 64 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
16 59 0.9500000 lbox
17 58 0.9500000 lbox
18 57 0.9500000 lbox
19 56 0.9500000 lbox
20 55 0.9500000 lbox
25 54 0.9500000 lbox
26 53 0.9500000 lbox
27 52 0.9500000 lbox
28 51 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
34 45 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
