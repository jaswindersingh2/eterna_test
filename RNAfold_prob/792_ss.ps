%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAACGAGUCCGAGAUAGAGAUACCAGAGACCGAAAAGAGUCCUGAGUAUCCUAUCCGAGACCGACUAAGGUUUCGACCUUAGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

/coor [
[97.26116180 221.19982910]
[102.09485626 206.99998474]
[109.64608765 194.03932190]
[119.61547089 182.83166504]
[131.60775757 173.82139587]
[145.14749146 167.36570740]
[159.69784546 163.72056580]
[174.68368530 163.03059387]
[162.39640808 154.42694092]
[154.99781799 153.14878845]
[149.88183594 145.39007568]
[137.84997559 136.43269348]
[125.81813049 127.47531128]
[113.65727997 118.69387054]
[101.37000275 110.09022522]
[93.35583496 108.37255859]
[88.85541534 101.05335236]
[76.82357025 92.09597015]
[64.79172516 83.13859558]
[52.75987625 74.18121338]
[40.72802734 65.22383881]
[31.82798386 62.54800034]
[28.48157310 55.82680130]
[16.71533966 46.52326965]
[4.94910383 37.21973801]
[-6.81713104 27.91620445]
[-18.58336639 18.61267281]
[-30.48366547 9.48125076]
[-42.51551437 0.52387196]
[-54.54736328 -8.43350697]
[-63.44740677 -11.10934162]
[-66.79381561 -17.83054161]
[-78.56005096 -27.13407326]
[-90.32628632 -36.43760681]
[-102.22658539 -45.56902695]
[-118.24475861 -44.67592621]
[-128.82228088 -56.73808289]
[-125.84497070 -72.50244904]
[-111.59677887 -79.87594604]
[-97.00769043 -73.20226288]
[-93.26920319 -57.60087585]
[-85.91091156 -56.10806656]
[-81.02275085 -48.20384216]
[-69.25651550 -38.90031052]
[-57.49028397 -29.59677696]
[-45.58998489 -20.46535492]
[-33.55813599 -11.50797558]
[-21.52628708 -2.55059695]
[-14.16799259 -1.05778778]
[-9.27983379 6.84643745]
[2.48640132 16.14996910]
[14.25263596 25.45350266]
[26.01887131 34.75703430]
[37.78510666 44.06056595]
[49.68540573 53.19198990]
[61.71725464 62.14936829]
[73.74909973 71.10674286]
[85.78095245 80.06412506]
[97.81279755 89.02150726]
[109.97364807 97.80294800]
[122.26093292 106.40659332]
[131.23503113 108.82244110]
[134.77551270 115.44346619]
[146.80735779 124.40084839]
[158.83920288 133.35823059]
[171.00006104 142.13966370]
[183.28733826 150.74331665]
[188.91981506 150.71133423]
[193.68559265 152.89038086]
[208.37570190 149.85711670]
[223.06581116 146.82385254]
[237.75592041 143.79058838]
[252.44602966 140.75732422]
[267.13613892 137.72406006]
[281.82626343 134.69079590]
[293.71044922 123.39044189]
[309.36019897 128.29116821]
[312.67639160 144.35151672]
[300.24761963 155.04998779]
[284.85949707 149.38090515]
[270.16940308 152.41416931]
[255.47929382 155.44743347]
[240.78918457 158.48069763]
[226.09907532 161.51396179]
[211.40896606 164.54722595]
[196.71885681 167.58049011]
[210.20434570 174.14872742]
[222.12115479 183.25857544]
[231.99685669 194.54887390]
[239.43986511 207.57197571]
[244.15512085 221.81158447]
[245.95567322 236.70312500]
[244.77012634 251.65620422]
[240.64549255 266.07797241]
[233.74528503 279.39666748]
[224.34309387 291.08419800]
[212.81169128 300.67724609]
[199.60823059 307.79544067]
[185.25621033 312.15661621]
[170.32464600 313.58779907]
[155.40551758 312.03228760]
[141.09033203 307.55175781]
[127.94662476 300.32382202]
[116.49551392 290.63504028]
[107.19099426 278.86959839]
[100.40196991 265.49389648]
[96.39759827 251.03828430]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 67]
[9 66]
[11 65]
[12 64]
[13 63]
[14 61]
[15 60]
[17 59]
[18 58]
[19 57]
[20 56]
[21 55]
[23 54]
[24 53]
[25 52]
[26 51]
[27 50]
[28 48]
[29 47]
[30 46]
[32 45]
[33 44]
[34 43]
[35 41]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
