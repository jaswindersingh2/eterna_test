%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (891)
} def

/sequence { (\
GGAAAGGAAGAUGACUGGCAAGCAAAAGCAGCAAAAGCAAAGCACAGAAACAUCAAGCAAAAGCAACCUAGCGUUUUCGAACGCUAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.004274575 ubox
1 54 0.003364012 ubox
1 58 0.011441090 ubox
1 64 0.066691341 ubox
1 67 0.023766229 ubox
1 68 0.307514391 ubox
1 69 0.021230066 ubox
1 78 0.011308688 ubox
1 82 0.009897731 ubox
1 84 0.014600693 ubox
1 85 0.019642134 ubox
1 95 0.105039828 ubox
1 98 0.107729951 ubox
1 101 0.118165245 ubox
1 104 0.119037548 ubox
1 107 0.030152774 ubox
2 19 0.018689834 ubox
2 54 0.005085937 ubox
2 58 0.013757357 ubox
2 64 0.030077856 ubox
2 67 0.306671566 ubox
2 68 0.032719123 ubox
2 69 0.003720101 ubox
2 72 0.008343278 ubox
2 77 0.011336002 ubox
2 78 0.003918398 ubox
2 82 0.008540073 ubox
2 84 0.020734051 ubox
2 95 0.055338790 ubox
2 98 0.056875797 ubox
2 101 0.058897151 ubox
2 104 0.058749641 ubox
2 107 0.019186603 ubox
3 53 0.004714830 ubox
3 69 0.004610327 ubox
3 76 0.011340176 ubox
3 77 0.003897239 ubox
4 69 0.013483898 ubox
4 75 0.011304938 ubox
4 76 0.003808730 ubox
5 12 0.003958001 ubox
5 16 0.026233218 ubox
5 69 0.286612177 ubox
5 74 0.010983914 ubox
5 75 0.003485418 ubox
5 85 0.003276753 ubox
6 15 0.026817465 ubox
6 19 0.004179566 ubox
6 54 0.009651445 ubox
6 58 0.169795828 ubox
6 64 0.014385502 ubox
6 67 0.027825314 ubox
6 68 0.389647826 ubox
6 69 0.027160805 ubox
6 78 0.003374818 ubox
6 95 0.090268706 ubox
6 98 0.090770092 ubox
6 101 0.090610626 ubox
6 104 0.088778625 ubox
6 107 0.030948606 ubox
7 38 0.004444565 ubox
7 53 0.007776174 ubox
7 54 0.036541971 ubox
7 58 0.055111941 ubox
7 64 0.014313248 ubox
7 67 0.388343154 ubox
7 68 0.036915128 ubox
7 72 0.010717523 ubox
7 78 0.042162550 ubox
7 95 0.067744916 ubox
7 98 0.067652770 ubox
7 101 0.057277994 ubox
7 104 0.054472357 ubox
7 107 0.017722142 ubox
8 53 0.035339757 ubox
8 77 0.042218464 ubox
9 16 0.008572103 ubox
9 53 0.006971210 ubox
9 69 0.003521018 ubox
9 76 0.042160480 ubox
10 15 0.008791679 ubox
10 45 0.003456095 ubox
10 51 0.030402349 ubox
10 53 0.003273919 ubox
10 54 0.993678497 ubox
10 58 0.003889192 ubox
10 64 0.005052175 ubox
10 68 0.003528292 ubox
10 75 0.042200739 ubox
10 95 0.006175626 ubox
10 98 0.009770283 ubox
10 101 0.009829806 ubox
10 104 0.009224386 ubox
10 107 0.003190683 ubox
11 53 0.994770562 ubox
11 74 0.042255385 ubox
12 20 0.004104238 ubox
12 24 0.010299064 ubox
12 33 0.015791223 ubox
12 39 0.007499161 ubox
12 44 0.005591297 ubox
12 49 0.016415865 ubox
12 50 0.024530887 ubox
12 52 0.994716125 ubox
12 55 0.026973571 ubox
12 59 0.004825775 ubox
12 65 0.003982748 ubox
12 73 0.042234056 ubox
12 96 0.010919081 ubox
12 99 0.010917704 ubox
12 102 0.010454682 ubox
12 105 0.007783216 ubox
13 19 0.004568592 ubox
13 23 0.011471040 ubox
13 32 0.017454884 ubox
13 38 0.008219191 ubox
13 43 0.006065031 ubox
13 51 0.993936904 ubox
13 54 0.029902844 ubox
13 58 0.005178566 ubox
13 64 0.004204042 ubox
13 72 0.042221280 ubox
13 95 0.011450600 ubox
13 98 0.011457372 ubox
13 101 0.011027913 ubox
13 104 0.008522679 ubox
14 53 0.029774468 ubox
15 22 0.015833481 ubox
15 28 0.003671153 ubox
15 31 0.021282966 ubox
15 37 0.007134340 ubox
15 42 0.006128708 ubox
15 47 0.995835274 ubox
15 63 0.003492153 ubox
15 71 0.041299600 ubox
15 91 0.004746952 ubox
16 21 0.015879871 ubox
16 24 0.010972602 ubox
16 27 0.003644853 ubox
16 30 0.021343697 ubox
16 33 0.004249681 ubox
16 36 0.006875870 ubox
16 41 0.006019084 ubox
16 44 0.003919378 ubox
16 46 0.996796723 ubox
16 47 0.003346140 ubox
16 48 0.007368915 ubox
16 49 0.004009516 ubox
16 50 0.003982235 ubox
16 52 0.005479015 ubox
16 55 0.005094888 ubox
16 62 0.003348162 ubox
16 70 0.041185549 ubox
16 90 0.004586441 ubox
16 96 0.006032007 ubox
16 99 0.005831647 ubox
16 102 0.005474673 ubox
16 105 0.004964335 ubox
17 23 0.012209884 ubox
17 29 0.017475982 ubox
17 32 0.004270699 ubox
17 43 0.004512077 ubox
17 45 0.995380430 ubox
17 51 0.005587515 ubox
17 54 0.005466436 ubox
17 68 0.016965518 ubox
17 69 0.038974155 ubox
17 95 0.006603793 ubox
17 98 0.006409518 ubox
17 101 0.006081148 ubox
17 104 0.005599909 ubox
18 23 0.011061429 ubox
18 29 0.110194064 ubox
18 32 0.081956313 ubox
18 38 0.022312804 ubox
18 43 0.978556680 ubox
18 45 0.011260288 ubox
18 53 0.004604727 ubox
18 58 0.004962077 ubox
18 64 0.005201045 ubox
18 67 0.016924455 ubox
18 68 0.038212840 ubox
19 28 0.111023134 ubox
19 31 0.081999213 ubox
19 37 0.022336966 ubox
19 42 0.978152727 ubox
19 47 0.005602482 ubox
19 57 0.004992035 ubox
19 63 0.005372094 ubox
22 29 0.889419476 ubox
22 32 0.073511373 ubox
22 38 0.393489709 ubox
22 43 0.053969979 ubox
22 64 0.024931130 ubox
23 28 0.889070560 ubox
23 31 0.073596469 ubox
23 37 0.393795158 ubox
23 42 0.054359568 ubox
23 63 0.024930991 ubox
28 32 0.056494283 ubox
28 38 0.085669338 ubox
28 43 0.036703557 ubox
28 58 0.015738212 ubox
29 37 0.085759249 ubox
29 42 0.036846462 ubox
29 57 0.015742359 ubox
31 38 0.889500192 ubox
31 43 0.069721213 ubox
31 64 0.005417064 ubox
32 37 0.889149699 ubox
32 42 0.069753284 ubox
32 63 0.005416765 ubox
37 43 0.091927542 ubox
37 58 0.006721887 ubox
37 64 0.013062454 ubox
38 42 0.091359588 ubox
38 47 0.005565465 ubox
38 57 0.006724413 ubox
38 63 0.013061054 ubox
42 51 0.006552396 ubox
42 58 0.024772015 ubox
42 64 0.008074464 ubox
43 57 0.024767373 ubox
43 63 0.008075509 ubox
46 53 0.004594893 ubox
47 51 0.004207219 ubox
47 54 0.037449271 ubox
48 53 0.034292712 ubox
51 57 0.004155126 ubox
53 92 0.006533573 ubox
54 91 0.007228464 ubox
56 69 0.009637882 ubox
56 85 0.006753525 ubox
57 64 0.904325942 ubox
57 67 0.012354661 ubox
57 68 0.012044302 ubox
57 84 0.006968127 ubox
57 95 0.009304309 ubox
57 98 0.032779711 ubox
57 101 0.007931467 ubox
57 104 0.003556988 ubox
58 63 0.904002461 ubox
58 83 0.006955852 ubox
58 91 0.003508374 ubox
59 77 0.004887209 ubox
60 69 0.003458440 ubox
60 75 0.003223194 ubox
60 76 0.005004546 ubox
60 77 0.004437338 ubox
61 75 0.004985529 ubox
61 76 0.004788490 ubox
62 69 0.020094690 ubox
62 74 0.004631697 ubox
62 75 0.004869625 ubox
63 67 0.012299980 ubox
63 68 0.026825998 ubox
63 72 0.009358149 ubox
63 74 0.004916234 ubox
63 95 0.015475548 ubox
63 98 0.005247520 ubox
63 101 0.004057588 ubox
63 104 0.003573684 ubox
64 71 0.009388512 ubox
64 73 0.004933855 ubox
64 91 0.068926641 ubox
65 69 0.003312827 ubox
67 91 0.037235587 ubox
68 91 0.107206667 ubox
69 86 0.908196037 ubox
69 87 0.042272741 ubox
69 88 0.015544161 ubox
69 89 0.013182833 ubox
69 90 0.084396220 ubox
69 91 0.005424602 ubox
69 92 0.003935770 ubox
69 93 0.003344416 ubox
70 85 0.990823063 ubox
71 84 0.998844373 ubox
72 83 0.998878595 ubox
73 78 0.003364780 ubox
73 82 0.998763482 ubox
73 95 0.008870222 ubox
73 98 0.005618987 ubox
74 79 0.004461654 ubox
74 80 0.040193281 ubox
74 81 0.984872450 ubox
74 94 0.008177914 ubox
74 97 0.005501646 ubox
75 79 0.051342996 ubox
75 80 0.856360994 ubox
75 81 0.031457177 ubox
75 93 0.007374621 ubox
75 94 0.006857223 ubox
75 96 0.003932552 ubox
76 80 0.037221812 ubox
76 81 0.004846878 ubox
76 92 0.006489316 ubox
76 93 0.009145884 ubox
77 91 0.005185809 ubox
77 92 0.010091840 ubox
78 91 0.010686886 ubox
79 84 0.003269509 ubox
82 91 0.006101175 ubox
84 91 0.010007825 ubox
85 90 0.010123613 ubox
85 92 0.003987705 ubox
91 95 0.046170685 ubox
91 98 0.107165112 ubox
91 101 0.045201597 ubox
91 104 0.033505070 ubox
91 107 0.009868703 ubox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
17 45 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
57 64 0.9500000 lbox
58 63 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
