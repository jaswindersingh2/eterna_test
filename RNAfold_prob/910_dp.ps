%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (910)
} def

/sequence { (\
GGAAAGCAAGAUCGCAGGCAAGCGAAAGCAGCGAAAGCAAAGCACUGAAAGAUCAAGCGAAAGCAAGCGGUAUUCUUCGGAGUACCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.129762960 ubox
1 13 0.003690427 ubox
1 15 0.003742002 ubox
1 19 0.003580647 ubox
1 32 0.005760318 ubox
1 38 0.009675050 ubox
1 43 0.031734925 ubox
1 45 0.014462536 ubox
1 46 0.012785194 ubox
1 54 0.009322200 ubox
1 58 0.004211017 ubox
1 64 0.317167438 ubox
1 68 0.047514835 ubox
1 86 0.017513949 ubox
1 95 0.107821329 ubox
1 98 0.110081295 ubox
1 101 0.110262907 ubox
1 104 0.110865846 ubox
1 107 0.027996994 ubox
2 7 0.063647956 ubox
2 13 0.017834604 ubox
2 19 0.006323453 ubox
2 32 0.004337816 ubox
2 38 0.004805226 ubox
2 43 0.019953311 ubox
2 45 0.014206301 ubox
2 53 0.007291028 ubox
2 54 0.013727400 ubox
2 58 0.005156341 ubox
2 64 0.142984940 ubox
2 68 0.042426800 ubox
2 78 0.003912513 ubox
2 85 0.016841953 ubox
2 86 0.003740879 ubox
2 95 0.056478515 ubox
2 98 0.055686390 ubox
2 101 0.056633641 ubox
2 104 0.056443870 ubox
2 107 0.018420527 ubox
3 12 0.017675971 ubox
3 46 0.004457046 ubox
3 53 0.013014707 ubox
3 77 0.003370521 ubox
5 12 0.004082568 ubox
5 46 0.007357070 ubox
5 76 0.003688469 ubox
6 15 0.036678749 ubox
6 19 0.014365561 ubox
6 29 0.107636108 ubox
6 32 0.037834668 ubox
6 38 0.104311238 ubox
6 43 0.050217825 ubox
6 45 0.007587502 ubox
6 54 0.004787953 ubox
6 58 0.678431875 ubox
6 64 0.058766466 ubox
6 68 0.341227149 ubox
6 75 0.004233420 ubox
6 83 0.006131400 ubox
6 95 0.051426416 ubox
6 98 0.051481262 ubox
6 101 0.051320507 ubox
6 104 0.050269721 ubox
6 107 0.017522847 ubox
7 14 0.036834039 ubox
7 18 0.014372554 ubox
7 28 0.107636134 ubox
7 31 0.037828463 ubox
7 37 0.104307363 ubox
7 42 0.050208600 ubox
7 47 0.010565359 ubox
7 51 0.004037942 ubox
7 57 0.678777766 ubox
7 59 0.008870969 ubox
7 63 0.058740494 ubox
7 67 0.341295791 ubox
7 82 0.006182473 ubox
7 91 0.067529074 ubox
8 46 0.009313323 ubox
8 74 0.003560477 ubox
9 46 0.011644491 ubox
9 53 0.010515788 ubox
9 73 0.003239074 ubox
10 15 0.012507042 ubox
10 29 0.024361822 ubox
10 38 0.028124581 ubox
10 45 0.012595360 ubox
10 54 0.947423265 ubox
10 58 0.004497174 ubox
10 64 0.026926503 ubox
10 68 0.009413228 ubox
10 95 0.025229544 ubox
10 98 0.024603578 ubox
10 101 0.025019487 ubox
10 104 0.024962442 ubox
10 107 0.008712904 ubox
11 53 0.948180459 ubox
11 71 0.008839691 ubox
12 25 0.225042374 ubox
12 26 0.009875950 ubox
12 34 0.180107321 ubox
12 35 0.007693858 ubox
12 48 0.003396123 ubox
12 50 0.020194831 ubox
12 51 0.003659806 ubox
12 52 0.947852042 ubox
12 60 0.051414485 ubox
12 70 0.009327389 ubox
12 92 0.010825379 ubox
13 24 0.238417852 ubox
13 33 0.189524195 ubox
13 47 0.003461791 ubox
13 51 0.945443672 ubox
13 59 0.052963707 ubox
13 69 0.013267387 ubox
13 91 0.011376796 ubox
14 19 0.004195392 ubox
14 23 0.240557910 ubox
14 29 0.006473578 ubox
14 32 0.190241207 ubox
14 38 0.013320261 ubox
14 43 0.017925674 ubox
14 58 0.052966688 ubox
14 64 0.003774578 ubox
14 68 0.032892476 ubox
15 22 0.240352571 ubox
15 28 0.006475013 ubox
15 31 0.190168172 ubox
15 37 0.013322529 ubox
15 42 0.017897925 ubox
15 47 0.939207715 ubox
15 57 0.052612110 ubox
15 63 0.003772738 ubox
15 67 0.032896436 ubox
16 46 0.944848222 ubox
17 23 0.005639450 ubox
17 29 0.014569355 ubox
17 45 0.943811912 ubox
17 46 0.050773852 ubox
17 54 0.008768357 ubox
17 95 0.004255874 ubox
17 98 0.004249464 ubox
17 101 0.004328694 ubox
17 104 0.004278595 ubox
18 23 0.007364559 ubox
18 29 0.198463467 ubox
18 32 0.057406254 ubox
18 38 0.032339321 ubox
18 43 0.935140438 ubox
18 45 0.050847847 ubox
18 46 0.005791326 ubox
18 53 0.007786148 ubox
18 54 0.011947896 ubox
18 58 0.003531625 ubox
18 64 0.031756330 ubox
18 68 0.024255867 ubox
19 24 0.009336587 ubox
19 28 0.198742728 ubox
19 31 0.057408123 ubox
19 33 0.003203225 ubox
19 37 0.032368902 ubox
19 42 0.934827875 ubox
19 47 0.025845607 ubox
19 51 0.006245877 ubox
19 57 0.003534026 ubox
19 63 0.031726975 ubox
19 67 0.024276699 ubox
20 46 0.024027917 ubox
21 46 0.010345720 ubox
22 29 0.911931938 ubox
22 32 0.089552698 ubox
22 38 0.225847596 ubox
22 43 0.061512348 ubox
22 45 0.012051652 ubox
22 58 0.008939872 ubox
22 64 0.017976622 ubox
22 68 0.004966634 ubox
23 28 0.912531884 ubox
23 31 0.089581454 ubox
23 33 0.019374225 ubox
23 37 0.226130855 ubox
23 42 0.061708507 ubox
23 47 0.007259433 ubox
23 51 0.003465888 ubox
23 57 0.008927844 ubox
23 59 0.008703826 ubox
23 63 0.017979990 ubox
23 67 0.004967163 ubox
24 29 0.031815726 ubox
24 32 0.021553434 ubox
24 38 0.006786156 ubox
24 43 0.011080461 ubox
24 45 0.005746263 ubox
24 46 0.006193824 ubox
24 58 0.008502312 ubox
25 46 0.007402519 ubox
26 46 0.005132220 ubox
27 46 0.011278334 ubox
28 32 0.079579780 ubox
28 38 0.067160936 ubox
28 43 0.175813550 ubox
28 45 0.011340513 ubox
28 58 0.018086936 ubox
28 64 0.013593054 ubox
28 68 0.039316492 ubox
28 95 0.004723029 ubox
28 98 0.004698502 ubox
28 101 0.004784459 ubox
28 104 0.004784448 ubox
29 33 0.026286098 ubox
29 37 0.067209969 ubox
29 42 0.175946089 ubox
29 47 0.024324082 ubox
29 57 0.018066707 ubox
29 63 0.013591643 ubox
29 67 0.039319683 ubox
29 91 0.005397952 ubox
30 46 0.024456127 ubox
31 38 0.934487175 ubox
31 43 0.083663766 ubox
31 45 0.023404778 ubox
31 58 0.003841182 ubox
31 64 0.031309061 ubox
31 68 0.067887057 ubox
32 37 0.935085047 ubox
32 42 0.083815019 ubox
32 57 0.003842667 ubox
32 63 0.031336265 ubox
32 67 0.067953280 ubox
32 69 0.003225822 ubox
33 38 0.033270931 ubox
33 43 0.021162939 ubox
33 45 0.005456094 ubox
33 54 0.005556532 ubox
33 68 0.014560883 ubox
34 46 0.003813409 ubox
34 53 0.005394998 ubox
36 46 0.013571714 ubox
37 43 0.099207793 ubox
37 45 0.014423394 ubox
37 58 0.031046248 ubox
37 64 0.124750320 ubox
37 68 0.024889872 ubox
37 95 0.003473007 ubox
37 98 0.003511495 ubox
37 101 0.003510547 ubox
37 104 0.003508402 ubox
38 42 0.098603320 ubox
38 47 0.022521762 ubox
38 51 0.003340177 ubox
38 57 0.031009113 ubox
38 59 0.003859424 ubox
38 63 0.124738252 ubox
38 67 0.024886511 ubox
38 91 0.003933881 ubox
39 46 0.021509006 ubox
40 46 0.004467524 ubox
41 46 0.004844164 ubox
41 53 0.003813357 ubox
42 53 0.003590661 ubox
42 54 0.011259461 ubox
42 58 0.135709573 ubox
42 64 0.017828141 ubox
42 68 0.047266901 ubox
42 83 0.017946878 ubox
42 95 0.006853788 ubox
42 98 0.006741945 ubox
42 101 0.007008902 ubox
42 104 0.006981754 ubox
43 47 0.005772946 ubox
43 51 0.015346142 ubox
43 57 0.135555317 ubox
43 59 0.044319769 ubox
43 63 0.017766589 ubox
43 67 0.047269470 ubox
43 82 0.018370627 ubox
43 91 0.007811567 ubox
44 53 0.006812213 ubox
45 51 0.033754292 ubox
45 57 0.051888869 ubox
45 59 0.006848806 ubox
45 63 0.013821626 ubox
45 67 0.007381384 ubox
45 80 0.022766383 ubox
45 91 0.014952439 ubox
46 50 0.030605801 ubox
46 51 0.008554294 ubox
46 52 0.011199845 ubox
46 55 0.243276118 ubox
46 56 0.042237945 ubox
46 59 0.004882224 ubox
46 60 0.004132457 ubox
46 62 0.013788570 ubox
46 65 0.009917993 ubox
46 66 0.006985526 ubox
46 79 0.022833618 ubox
46 90 0.013761113 ubox
46 96 0.010629695 ubox
46 99 0.012797801 ubox
46 102 0.010555585 ubox
46 105 0.010316128 ubox
47 53 0.003196822 ubox
47 54 0.261973087 ubox
47 58 0.005862888 ubox
47 64 0.010407115 ubox
47 78 0.022926648 ubox
47 95 0.011423198 ubox
47 98 0.013763331 ubox
47 101 0.011346523 ubox
47 104 0.011101639 ubox
48 53 0.239387376 ubox
48 77 0.020457254 ubox
49 53 0.008180646 ubox
49 76 0.017188542 ubox
49 77 0.010364212 ubox
50 76 0.014641140 ubox
51 58 0.012507562 ubox
51 68 0.010714049 ubox
51 74 0.013179082 ubox
51 75 0.017945275 ubox
51 95 0.006278850 ubox
51 98 0.004786787 ubox
51 101 0.004756473 ubox
51 104 0.004546564 ubox
52 73 0.013897834 ubox
52 74 0.017537997 ubox
53 60 0.017562395 ubox
53 66 0.005075143 ubox
53 72 0.013613034 ubox
53 92 0.018870882 ubox
54 59 0.018540066 ubox
54 67 0.016782346 ubox
54 70 0.007289945 ubox
54 91 0.020024037 ubox
55 71 0.004965650 ubox
56 71 0.003267998 ubox
57 64 0.552763005 ubox
57 68 0.435834542 ubox
57 98 0.007960938 ubox
58 63 0.553188690 ubox
58 67 0.436395904 ubox
58 69 0.006490730 ubox
59 64 0.066104220 ubox
59 68 0.067759920 ubox
59 95 0.034248717 ubox
59 98 0.017404387 ubox
59 101 0.005648328 ubox
59 104 0.004691863 ubox
63 68 0.048970354 ubox
63 95 0.016754843 ubox
63 98 0.006042265 ubox
63 101 0.005166711 ubox
63 104 0.004579900 ubox
64 69 0.003482414 ubox
64 91 0.078918274 ubox
67 86 0.006095936 ubox
67 95 0.010567863 ubox
67 98 0.015916684 ubox
67 101 0.010329590 ubox
67 104 0.006747629 ubox
68 91 0.037956248 ubox
69 86 0.998273760 ubox
70 85 0.999435325 ubox
70 95 0.016500676 ubox
70 98 0.008500623 ubox
71 84 0.999219828 ubox
71 94 0.016304300 ubox
71 97 0.008402212 ubox
72 83 0.999141682 ubox
73 81 0.008623059 ubox
73 82 0.998471164 ubox
73 93 0.020310070 ubox
74 80 0.010119206 ubox
74 81 0.998547990 ubox
74 92 0.021489609 ubox
75 79 0.015228887 ubox
75 80 0.998163504 ubox
75 82 0.003180612 ubox
75 91 0.021612777 ubox
76 80 0.003237654 ubox
76 89 0.003651766 ubox
76 90 0.021223036 ubox
77 88 0.004869476 ubox
77 89 0.019874475 ubox
79 85 0.003435152 ubox
79 86 0.019072485 ubox
80 85 0.018982652 ubox
80 86 0.010268499 ubox
86 91 0.006942573 ubox
91 95 0.045017643 ubox
91 98 0.106041260 ubox
91 101 0.045356142 ubox
91 104 0.034140447 ubox
91 107 0.010075355 ubox
6 58 0.9500000 lbox
7 57 0.9500000 lbox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
17 45 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
