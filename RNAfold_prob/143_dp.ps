%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (143)
} def

/sequence { (\
GGAAAAAAGGAGAUGAGGUCCUGUGAAAGCCAGAAAUGAGCGCAGAGAGAGCGGCAUCGGCCAAAAAAGGUAUUAUUCGUAAUACCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 21 0.014154590 ubox
1 31 0.033334718 ubox
1 61 0.004489812 ubox
1 62 0.125158999 ubox
1 86 0.013227495 ubox
1 95 0.068966921 ubox
1 98 0.069415993 ubox
1 101 0.071046472 ubox
1 104 0.071560542 ubox
1 107 0.018100175 ubox
2 20 0.014296355 ubox
2 30 0.033363069 ubox
2 61 0.125012271 ubox
2 62 0.006928978 ubox
2 78 0.003339910 ubox
2 85 0.012872301 ubox
2 95 0.036400322 ubox
2 98 0.036542990 ubox
2 101 0.037354092 ubox
2 104 0.037248634 ubox
2 107 0.012174465 ubox
3 19 0.013992781 ubox
3 77 0.003311236 ubox
4 24 0.003267764 ubox
4 83 0.003206186 ubox
5 24 0.008509599 ubox
6 24 0.016759856 ubox
7 14 0.005133147 ubox
7 22 0.003662715 ubox
7 24 0.008710278 ubox
8 14 0.010582905 ubox
8 22 0.083455645 ubox
8 80 0.005845784 ubox
9 14 0.005645084 ubox
9 21 0.088457384 ubox
9 22 0.004782356 ubox
9 58 0.007646148 ubox
9 61 0.136841378 ubox
9 62 0.957517788 ubox
9 78 0.007872743 ubox
9 86 0.007926916 ubox
9 95 0.014939571 ubox
9 98 0.017912536 ubox
9 101 0.027700485 ubox
9 104 0.030193415 ubox
9 107 0.010736235 ubox
10 20 0.088594280 ubox
10 21 0.005232231 ubox
10 57 0.007090963 ubox
10 58 0.013176750 ubox
10 61 0.957359756 ubox
10 62 0.023225329 ubox
10 77 0.007559092 ubox
10 78 0.007845796 ubox
10 85 0.007887254 ubox
10 95 0.009892995 ubox
10 98 0.009666913 ubox
10 101 0.010322463 ubox
10 104 0.010452158 ubox
10 107 0.003432521 ubox
11 19 0.087682608 ubox
11 22 0.003261341 ubox
11 57 0.012938941 ubox
11 76 0.006978388 ubox
11 77 0.007312261 ubox
12 20 0.009592702 ubox
12 21 0.003249103 ubox
12 52 0.004038896 ubox
12 55 0.007819922 ubox
12 58 0.987737121 ubox
12 61 0.003347442 ubox
12 76 0.003697127 ubox
12 77 0.003189150 ubox
12 95 0.012792848 ubox
12 98 0.027764645 ubox
12 101 0.030961723 ubox
12 104 0.021376720 ubox
12 107 0.006940263 ubox
13 19 0.009651139 ubox
13 57 0.987802412 ubox
13 76 0.004887997 ubox
13 80 0.006271507 ubox
14 18 0.009128471 ubox
14 53 0.008401858 ubox
14 56 0.987534192 ubox
14 59 0.012032879 ubox
14 75 0.006143340 ubox
14 79 0.006361249 ubox
14 93 0.003782145 ubox
14 96 0.030352613 ubox
14 97 0.003322359 ubox
14 99 0.034365896 ubox
14 100 0.003325820 ubox
14 102 0.026724170 ubox
14 105 0.019202912 ubox
15 52 0.024494569 ubox
15 55 0.985669783 ubox
15 58 0.013859541 ubox
15 74 0.006148255 ubox
15 78 0.006401338 ubox
15 95 0.031329135 ubox
15 98 0.035500064 ubox
15 101 0.028092330 ubox
15 104 0.021046267 ubox
16 57 0.013190534 ubox
16 73 0.006038407 ubox
16 77 0.006328603 ubox
17 31 0.004853991 ubox
17 52 0.871145238 ubox
17 62 0.012275847 ubox
17 76 0.005327046 ubox
17 95 0.004513843 ubox
17 98 0.003966041 ubox
17 101 0.003981571 ubox
17 104 0.003835863 ubox
18 30 0.004861892 ubox
18 52 0.435342202 ubox
18 55 0.013992302 ubox
18 61 0.012288634 ubox
18 73 0.003865412 ubox
18 95 0.017213432 ubox
18 98 0.014109047 ubox
18 101 0.011472472 ubox
18 104 0.004372076 ubox
19 29 0.004174978 ubox
19 46 0.004582755 ubox
19 47 0.005000038 ubox
19 48 0.105775581 ubox
19 49 0.010553943 ubox
19 50 0.918182478 ubox
19 51 0.354110849 ubox
19 54 0.014422826 ubox
19 60 0.011499105 ubox
19 72 0.003948727 ubox
19 92 0.004697683 ubox
19 94 0.014770711 ubox
19 97 0.012324867 ubox
19 100 0.010141993 ubox
19 103 0.003883978 ubox
20 45 0.004113636 ubox
20 47 0.125208651 ubox
20 49 0.930822465 ubox
20 51 0.051720529 ubox
20 53 0.014391829 ubox
20 59 0.011296989 ubox
20 60 0.004252562 ubox
20 70 0.009174663 ubox
20 91 0.005159260 ubox
21 33 0.010261308 ubox
21 45 0.193525830 ubox
21 47 0.926818524 ubox
21 49 0.301424466 ubox
21 51 0.013789726 ubox
21 54 0.003562290 ubox
21 59 0.004260275 ubox
21 69 0.009183345 ubox
22 32 0.010358833 ubox
22 44 0.194548955 ubox
22 45 0.004228056 ubox
22 46 0.923407299 ubox
22 47 0.016224047 ubox
22 48 0.302461169 ubox
22 50 0.013957175 ubox
22 53 0.003570598 ubox
22 68 0.009206304 ubox
22 96 0.012009303 ubox
22 99 0.012728096 ubox
22 102 0.012274043 ubox
22 105 0.012247744 ubox
23 30 0.007110630 ubox
23 31 0.010063245 ubox
23 43 0.195552554 ubox
23 52 0.005144017 ubox
23 57 0.004376705 ubox
23 62 0.003764811 ubox
23 95 0.019697677 ubox
23 98 0.021688891 ubox
23 101 0.021605731 ubox
23 104 0.021664028 ubox
23 107 0.005382229 ubox
24 29 0.007548805 ubox
24 32 0.004664848 ubox
24 42 0.194982632 ubox
24 44 0.921488632 ubox
24 45 0.031917440 ubox
24 46 0.280325297 ubox
24 47 0.013132885 ubox
24 48 0.013034288 ubox
24 51 0.005083882 ubox
24 56 0.004492062 ubox
24 63 0.012321670 ubox
24 65 0.004430227 ubox
24 66 0.006494005 ubox
24 67 0.003446123 ubox
24 94 0.019075000 ubox
24 96 0.010663522 ubox
24 97 0.019967025 ubox
24 99 0.010499011 ubox
24 100 0.019901631 ubox
24 102 0.010630762 ubox
24 103 0.019922364 ubox
24 105 0.008199132 ubox
24 106 0.005022491 ubox
25 30 0.007607140 ubox
25 31 0.005272818 ubox
25 41 0.137265020 ubox
25 43 0.917165267 ubox
25 55 0.004403503 ubox
25 62 0.013915749 ubox
25 95 0.013352775 ubox
25 98 0.013145576 ubox
25 101 0.013298501 ubox
25 104 0.009249586 ubox
27 37 0.004608840 ubox
28 37 0.038105680 ubox
29 37 0.028622799 ubox
29 41 0.980162675 ubox
29 43 0.023783637 ubox
29 52 0.006203048 ubox
29 55 0.004604684 ubox
29 61 0.062515473 ubox
29 62 0.004181258 ubox
30 38 0.044955529 ubox
30 40 0.982233412 ubox
30 42 0.024476095 ubox
30 51 0.006200624 ubox
30 54 0.004628976 ubox
30 60 0.062850387 ubox
31 38 0.983162118 ubox
31 40 0.030415871 ubox
31 53 0.004512909 ubox
31 59 0.062629242 ubox
32 37 0.948941131 ubox
32 57 0.003225473 ubox
33 37 0.047517057 ubox
33 57 0.005169071 ubox
33 58 0.054915373 ubox
33 62 0.003912652 ubox
34 57 0.048798617 ubox
35 57 0.006486795 ubox
36 57 0.034288304 ubox
37 44 0.006392429 ubox
37 53 0.007914760 ubox
37 56 0.056147169 ubox
37 59 0.008483497 ubox
37 96 0.004826374 ubox
37 99 0.004830855 ubox
37 102 0.004874677 ubox
37 105 0.004773659 ubox
38 43 0.006517222 ubox
38 52 0.009590363 ubox
38 55 0.057951561 ubox
38 58 0.015486146 ubox
38 95 0.005302627 ubox
38 98 0.005307619 ubox
38 101 0.005364633 ubox
38 104 0.005274807 ubox
39 57 0.015393257 ubox
40 52 0.035431514 ubox
40 55 0.016999453 ubox
41 49 0.009671996 ubox
41 51 0.035425808 ubox
41 53 0.060616839 ubox
41 54 0.012269618 ubox
42 52 0.079221705 ubox
43 47 0.003241056 ubox
43 49 0.025345314 ubox
43 51 0.079215647 ubox
45 52 0.005251728 ubox
47 52 0.005329549 ubox
47 58 0.004191195 ubox
48 57 0.004186910 ubox
49 58 0.005288344 ubox
49 62 0.004586899 ubox
50 57 0.005224457 ubox
51 61 0.006067461 ubox
52 59 0.003310664 ubox
52 60 0.005998688 ubox
53 58 0.003666919 ubox
53 62 0.135602241 ubox
54 58 0.003535890 ubox
54 61 0.135837892 ubox
55 60 0.135589898 ubox
59 95 0.016826178 ubox
59 98 0.008776603 ubox
60 71 0.015857991 ubox
60 95 0.012184857 ubox
61 70 0.016292112 ubox
61 91 0.003661496 ubox
62 69 0.016362310 ubox
62 91 0.011015304 ubox
69 86 0.998680645 ubox
70 85 0.999748616 ubox
71 84 0.999503191 ubox
72 83 0.999193552 ubox
73 79 0.003407560 ubox
73 81 0.009638114 ubox
73 82 0.998254803 ubox
74 79 0.008885323 ubox
74 81 0.983126257 ubox
74 82 0.007243475 ubox
74 84 0.003796857 ubox
75 80 0.886282221 ubox
75 83 0.005072910 ubox
76 81 0.014354702 ubox
76 82 0.006217920 ubox
76 93 0.006202921 ubox
77 81 0.006326059 ubox
77 92 0.007027562 ubox
78 91 0.007111931 ubox
86 91 0.006125646 ubox
91 95 0.043375351 ubox
91 98 0.104067067 ubox
91 101 0.045468224 ubox
91 104 0.035077160 ubox
91 107 0.010375767 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
