%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1068)
} def

/sequence { (\
GGAAAAAACCACAGGGGAGUAAUAGAAACUAAUUACAAAAGUUCACAGAAACUGGAACACCCCAGUGGUCGCGUAUUCGUACGCGAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.007389624 ubox
1 10 0.012533026 ubox
1 70 0.007366047 ubox
1 95 0.067370237 ubox
1 98 0.067792298 ubox
1 101 0.069334322 ubox
1 104 0.069645553 ubox
1 107 0.017583844 ubox
2 9 0.013350568 ubox
2 69 0.004238775 ubox
2 70 0.012687002 ubox
2 95 0.035561398 ubox
2 98 0.035687212 ubox
2 101 0.036447698 ubox
2 104 0.036309028 ubox
2 107 0.011847929 ubox
3 69 0.010124582 ubox
4 69 0.004346939 ubox
5 69 0.005955526 ubox
6 69 0.008260514 ubox
7 69 0.032680563 ubox
8 69 0.712831929 ubox
9 67 0.003397274 ubox
9 68 0.997630561 ubox
10 67 0.999874018 ubox
11 66 0.999651610 ubox
12 65 0.996070832 ubox
12 67 0.003990960 ubox
13 66 0.003738735 ubox
14 62 0.032887576 ubox
14 63 0.994502573 ubox
15 61 0.033252345 ubox
15 62 0.996165254 ubox
15 63 0.080632963 ubox
16 60 0.033500815 ubox
16 61 0.996129473 ubox
16 62 0.080721919 ubox
17 60 0.991659940 ubox
17 61 0.080608467 ubox
18 23 0.007415042 ubox
18 30 0.095980830 ubox
18 33 0.003193472 ubox
18 34 0.016794008 ubox
19 29 0.098987094 ubox
19 33 0.018210747 ubox
19 34 0.003525943 ubox
19 36 0.991045798 ubox
19 58 0.030763005 ubox
19 60 0.009555483 ubox
20 25 0.003361515 ubox
20 26 0.003246791 ubox
20 27 0.008110603 ubox
20 28 0.096849985 ubox
20 31 0.010779839 ubox
20 32 0.017387257 ubox
20 35 0.992165573 ubox
20 57 0.029599994 ubox
20 59 0.009392684 ubox
21 30 0.011795173 ubox
21 33 0.019481381 ubox
21 34 0.991359395 ubox
22 30 0.004807267 ubox
22 33 0.985349959 ubox
22 34 0.007670696 ubox
23 27 0.004621052 ubox
23 28 0.008099748 ubox
23 31 0.423485050 ubox
23 32 0.886892965 ubox
23 35 0.006873862 ubox
23 54 0.029291376 ubox
24 30 0.593594455 ubox
24 33 0.014076317 ubox
24 34 0.007344471 ubox
24 53 0.029723611 ubox
25 29 0.582840146 ubox
25 30 0.159658128 ubox
25 33 0.006167691 ubox
25 34 0.011962827 ubox
25 36 0.010357091 ubox
25 44 0.007192200 ubox
25 52 0.029642059 ubox
26 30 0.046151284 ubox
26 33 0.012085710 ubox
26 34 0.008881971 ubox
26 43 0.006016033 ubox
27 33 0.008676935 ubox
27 34 0.009396349 ubox
27 42 0.004382698 ubox
27 43 0.007936829 ubox
28 33 0.007956614 ubox
28 42 0.010194327 ubox
29 41 0.011160783 ubox
29 48 0.022890986 ubox
30 37 0.003907655 ubox
30 39 0.004456804 ubox
30 40 0.011009842 ubox
30 47 0.022194231 ubox
31 43 0.007158330 ubox
32 42 0.007558990 ubox
33 38 0.004414416 ubox
33 39 0.007319399 ubox
33 40 0.012585674 ubox
33 41 0.007571785 ubox
34 38 0.007012564 ubox
34 39 0.013254050 ubox
34 40 0.009303750 ubox
35 42 0.027522973 ubox
36 41 0.027894208 ubox
40 53 0.025985375 ubox
41 52 0.026849935 ubox
41 58 0.996670126 ubox
42 50 0.007085453 ubox
42 51 0.026057642 ubox
42 56 0.011137901 ubox
42 57 0.997595310 ubox
43 49 0.009653044 ubox
43 50 0.023265342 ubox
43 55 0.013225151 ubox
43 56 0.998201571 ubox
43 57 0.009944025 ubox
44 48 0.011421572 ubox
44 54 0.016381497 ubox
44 55 0.997537681 ubox
45 53 0.017622681 ubox
46 54 0.995355130 ubox
47 53 0.994558310 ubox
48 52 0.972800156 ubox
48 53 0.007989027 ubox
66 89 0.003209370 ubox
68 95 0.003194622 ubox
69 86 0.653694057 ubox
69 87 0.029981364 ubox
69 88 0.006529066 ubox
69 89 0.004650149 ubox
69 90 0.003360356 ubox
69 92 0.003263687 ubox
70 85 0.994070774 ubox
70 91 0.004194910 ubox
71 80 0.003747290 ubox
71 84 0.999931303 ubox
72 79 0.003933889 ubox
72 83 0.999943821 ubox
73 78 0.004123209 ubox
73 82 0.999857088 ubox
73 84 0.003186132 ubox
74 79 0.004297469 ubox
74 81 0.991510205 ubox
74 83 0.003163155 ubox
75 80 0.893444884 ubox
76 81 0.007051765 ubox
76 87 0.005720174 ubox
77 86 0.006431005 ubox
78 85 0.006502396 ubox
79 84 0.006336298 ubox
85 95 0.005038072 ubox
85 98 0.003906929 ubox
85 101 0.003363117 ubox
91 95 0.043037238 ubox
91 98 0.103777164 ubox
91 101 0.045530805 ubox
91 104 0.035240775 ubox
91 107 0.010426609 ubox
8 69 0.9500000 lbox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 32 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
