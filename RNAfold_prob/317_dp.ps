%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (317)
} def

/sequence { (\
GGAAAGCCCGCUCAAAAACGAGCGCGAAUCGCAGGGCACCGAGCCUAAAUGGCCCACGAAAGUGGCGGUGCCCUUUUCGAAGGGCAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.003563717 ubox
1 8 0.024629411 ubox
1 9 0.047893246 ubox
1 32 0.004860679 ubox
1 40 0.005187943 ubox
1 78 0.005306337 ubox
1 85 0.003227197 ubox
1 95 0.023917237 ubox
1 98 0.020656046 ubox
1 101 0.019068644 ubox
1 104 0.017091301 ubox
1 107 0.004108913 ubox
2 7 0.024709975 ubox
2 8 0.047835150 ubox
2 9 0.004076751 ubox
2 30 0.005213826 ubox
2 39 0.005190812 ubox
2 77 0.005290141 ubox
2 78 0.006418168 ubox
2 85 0.003311078 ubox
2 95 0.009185085 ubox
2 98 0.008004081 ubox
2 101 0.007833971 ubox
2 104 0.007175470 ubox
3 29 0.004905101 ubox
3 76 0.005250708 ubox
3 77 0.006413532 ubox
4 75 0.004910287 ubox
4 76 0.006287735 ubox
5 75 0.005748336 ubox
6 25 0.005697705 ubox
6 32 0.004423632 ubox
6 37 0.011961919 ubox
6 85 0.996691177 ubox
7 24 0.005158508 ubox
7 26 0.012286338 ubox
7 31 0.004419233 ubox
7 36 0.011974993 ubox
7 83 0.008592753 ubox
7 84 0.997733498 ubox
8 26 0.015596150 ubox
8 35 0.011974953 ubox
8 82 0.010048914 ubox
8 83 0.997665721 ubox
8 84 0.004646168 ubox
9 24 0.108665687 ubox
9 26 0.004800516 ubox
9 34 0.011951556 ubox
9 79 0.004638714 ubox
9 82 0.990931640 ubox
9 83 0.005948729 ubox
10 23 0.998595175 ubox
10 25 0.012938277 ubox
11 22 0.999631456 ubox
11 24 0.012621992 ubox
12 21 0.999506590 ubox
12 80 0.018226422 ubox
13 20 0.998612842 ubox
13 22 0.010594800 ubox
13 79 0.018522885 ubox
14 77 0.008901151 ubox
15 76 0.009003882 ubox
15 77 0.011251032 ubox
16 75 0.008432236 ubox
16 76 0.011467694 ubox
17 74 0.005001366 ubox
17 75 0.010621584 ubox
18 74 0.005319599 ubox
19 31 0.006394375 ubox
19 79 0.005636176 ubox
20 30 0.006526706 ubox
20 78 0.005835452 ubox
21 29 0.006470865 ubox
21 77 0.005661733 ubox
22 32 0.016024340 ubox
22 76 0.003664973 ubox
23 31 0.016159287 ubox
24 29 0.004287464 ubox
24 30 0.017881693 ubox
24 32 0.813758133 ubox
24 78 0.007898658 ubox
24 85 0.057009027 ubox
25 31 0.814571418 ubox
25 79 0.390120333 ubox
25 82 0.016990101 ubox
25 83 0.004363766 ubox
25 84 0.057302913 ubox
26 30 0.762065867 ubox
26 32 0.015787743 ubox
26 76 0.006753589 ubox
26 77 0.012862298 ubox
26 78 0.395529250 ubox
27 75 0.007303184 ubox
27 76 0.026620359 ubox
27 77 0.393189614 ubox
28 74 0.004235807 ubox
28 75 0.034587791 ubox
28 76 0.355448691 ubox
28 77 0.019649425 ubox
29 80 0.387406133 ubox
29 81 0.017863841 ubox
30 79 0.414094636 ubox
31 73 0.008527611 ubox
31 74 0.022983183 ubox
31 75 0.139879243 ubox
31 76 0.073203658 ubox
31 77 0.006881098 ubox
31 78 0.413449391 ubox
31 85 0.003314352 ubox
32 79 0.008040101 ubox
32 84 0.003311832 ubox
33 74 0.940506248 ubox
33 75 0.046594463 ubox
33 76 0.024323673 ubox
33 77 0.015279673 ubox
34 73 0.999563539 ubox
34 74 0.010205799 ubox
35 72 0.999883705 ubox
35 73 0.008492231 ubox
36 71 0.999904688 ubox
36 72 0.006007831 ubox
37 70 0.999917981 ubox
38 69 0.999755621 ubox
39 68 0.999972701 ubox
40 67 0.999932376 ubox
41 54 0.015670779 ubox
41 66 0.986014197 ubox
43 53 0.997255882 ubox
43 54 0.006016282 ubox
43 66 0.005270232 ubox
44 51 0.003242338 ubox
44 52 0.999632023 ubox
44 65 0.005686804 ubox
45 51 0.999408547 ubox
45 52 0.006894677 ubox
45 64 0.005662101 ubox
46 51 0.007824828 ubox
50 58 0.003582357 ubox
51 57 0.004002837 ubox
52 66 0.005773625 ubox
53 65 0.008062579 ubox
54 64 0.008547730 ubox
54 65 0.991171279 ubox
55 64 0.999853243 ubox
55 65 0.003523075 ubox
56 63 0.999588673 ubox
57 62 0.999253113 ubox
57 64 0.004046529 ubox
69 86 0.007638327 ubox
70 85 0.011982350 ubox
71 84 0.011991929 ubox
72 83 0.011993173 ubox
73 79 0.004252002 ubox
73 82 0.012060106 ubox
74 79 0.010344516 ubox
74 80 0.023835498 ubox
74 81 0.029309664 ubox
75 79 0.030135853 ubox
75 80 0.040653131 ubox
75 81 0.052696444 ubox
75 82 0.003457303 ubox
75 94 0.008570785 ubox
76 80 0.048684194 ubox
76 81 0.031837016 ubox
76 93 0.010061827 ubox
77 81 0.021230784 ubox
77 92 0.010395842 ubox
78 82 0.004021649 ubox
78 83 0.004392936 ubox
78 91 0.010436421 ubox
82 95 0.003237285 ubox
85 91 0.005367063 ubox
91 95 0.042271334 ubox
91 98 0.102872665 ubox
91 101 0.045568217 ubox
91 104 0.035616673 ubox
91 107 0.010545459 ubox
6 85 0.9500000 lbox
7 84 0.9500000 lbox
8 83 0.9500000 lbox
9 82 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
33 74 0.9500000 lbox
34 73 0.9500000 lbox
35 72 0.9500000 lbox
36 71 0.9500000 lbox
37 70 0.9500000 lbox
38 69 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
showpage
end
%%EOF
