%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (439)
} def

/sequence { (\
GGAAAGCCGAGCGCCAGCGGAAACGCGCAGAAAUGCGGCAAUACAGCGCCUAAGCGCUGGCUCGGGUCUACGGACUUCGGUCCGUAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.005252529 ubox
1 8 0.017472733 ubox
1 68 0.097588902 ubox
1 69 0.233276559 ubox
1 71 0.014817503 ubox
1 83 0.003665044 ubox
1 95 0.064954950 ubox
1 98 0.065613240 ubox
1 101 0.067268343 ubox
1 104 0.067585419 ubox
1 107 0.017067130 ubox
2 7 0.017715936 ubox
2 63 0.004512596 ubox
2 67 0.042508760 ubox
2 68 0.361040052 ubox
2 69 0.019056458 ubox
2 71 0.005190339 ubox
2 82 0.003666552 ubox
2 95 0.032841496 ubox
2 98 0.033116714 ubox
2 101 0.033815926 ubox
2 104 0.033692733 ubox
2 107 0.010995351 ubox
3 62 0.003432837 ubox
3 67 0.329066583 ubox
3 69 0.062720038 ubox
3 81 0.003460950 ubox
4 67 0.059399552 ubox
4 69 0.028102055 ubox
5 62 0.013538428 ubox
5 67 0.685842097 ubox
5 69 0.051196694 ubox
6 61 0.015015376 ubox
6 67 0.131921818 ubox
6 68 0.068714405 ubox
6 69 0.004035648 ubox
6 95 0.024665218 ubox
6 98 0.024830860 ubox
6 101 0.024735509 ubox
6 104 0.024233144 ubox
6 107 0.008448511 ubox
7 60 0.015013881 ubox
7 65 0.991376230 ubox
7 66 0.116625399 ubox
8 59 0.014989526 ubox
8 64 0.996211206 ubox
8 65 0.082824246 ubox
9 58 0.007355283 ubox
9 63 0.999792226 ubox
10 58 0.013007909 ubox
10 62 0.999661329 ubox
11 57 0.015017898 ubox
11 61 0.999424829 ubox
11 62 0.003256295 ubox
11 63 0.006044192 ubox
12 56 0.015020657 ubox
12 60 0.998432391 ubox
13 18 0.006429651 ubox
13 24 0.003764367 ubox
13 26 0.004459875 ubox
13 28 0.018721900 ubox
13 36 0.007213839 ubox
13 39 0.981098383 ubox
13 55 0.015027502 ubox
13 61 0.029416240 ubox
14 19 0.005121173 ubox
14 20 0.033176134 ubox
14 25 0.004580988 ubox
14 27 0.018485659 ubox
14 35 0.007108559 ubox
14 37 0.003843489 ubox
14 38 0.982111675 ubox
14 54 0.014958780 ubox
14 59 0.006700463 ubox
14 60 0.032692206 ubox
15 19 0.033046993 ubox
15 20 0.007238842 ubox
15 27 0.003933411 ubox
15 30 0.006947202 ubox
15 35 0.003266484 ubox
15 37 0.980948038 ubox
15 38 0.003736575 ubox
15 59 0.036069849 ubox
16 34 0.005749120 ubox
16 58 0.036279182 ubox
17 24 0.006685421 ubox
17 26 0.993184347 ubox
17 28 0.032037943 ubox
17 36 0.053156352 ubox
17 39 0.010036744 ubox
17 57 0.036215935 ubox
18 25 0.995888932 ubox
18 27 0.032170522 ubox
18 35 0.053151637 ubox
18 38 0.009982364 ubox
18 56 0.036205692 ubox
19 24 0.993325429 ubox
19 26 0.033409970 ubox
19 34 0.050256063 ubox
19 55 0.035665627 ubox
20 24 0.008818016 ubox
20 26 0.004965398 ubox
21 42 0.003189212 ubox
23 51 0.009838088 ubox
24 30 0.037505130 ubox
24 37 0.013426904 ubox
24 38 0.014799605 ubox
24 48 0.003365127 ubox
25 36 0.015443059 ubox
25 39 0.033734879 ubox
25 47 0.003271527 ubox
25 49 0.031759521 ubox
26 30 0.004244211 ubox
26 35 0.015465523 ubox
26 37 0.070044128 ubox
26 38 0.024004567 ubox
26 48 0.031772879 ubox
27 34 0.011544187 ubox
27 36 0.995434292 ubox
27 39 0.026320729 ubox
27 47 0.031260734 ubox
28 35 0.996408660 ubox
28 37 0.003257389 ubox
28 38 0.026205879 ubox
28 46 0.031223307 ubox
29 34 0.961218661 ubox
30 34 0.007601838 ubox
30 36 0.024340283 ubox
30 39 0.005036476 ubox
30 44 0.015528014 ubox
32 42 0.006922536 ubox
33 42 0.016319323 ubox
34 40 0.014004172 ubox
34 41 0.017066383 ubox
34 45 0.007804038 ubox
35 39 0.014332995 ubox
35 44 0.007846063 ubox
37 42 0.010797873 ubox
37 44 0.008629742 ubox
37 50 0.019918155 ubox
38 42 0.005019034 ubox
38 47 0.010462278 ubox
38 49 0.020398992 ubox
39 46 0.010480013 ubox
39 48 0.020398739 ubox
44 59 0.996960043 ubox
45 58 0.998767928 ubox
46 55 0.003604598 ubox
46 57 0.999216965 ubox
47 54 0.003732373 ubox
47 56 0.999209539 ubox
48 55 0.999108752 ubox
49 54 0.995592687 ubox
50 54 0.023858434 ubox
63 91 0.003444135 ubox
64 95 0.018242836 ubox
65 95 0.008122306 ubox
66 75 0.003918673 ubox
66 95 0.053947215 ubox
66 98 0.029444659 ubox
66 101 0.022562069 ubox
66 104 0.019401220 ubox
66 107 0.005517631 ubox
67 74 0.003934330 ubox
67 86 0.007742624 ubox
67 87 0.044702919 ubox
67 88 0.102062895 ubox
67 89 0.024336983 ubox
67 90 0.023465995 ubox
67 91 0.007338725 ubox
67 92 0.192884237 ubox
67 93 0.010872973 ubox
67 94 0.041155579 ubox
67 97 0.025956732 ubox
67 100 0.020591784 ubox
67 103 0.017855567 ubox
67 106 0.005177694 ubox
68 73 0.003939618 ubox
68 91 0.224888752 ubox
69 86 0.908660445 ubox
69 87 0.042345318 ubox
69 88 0.015721187 ubox
69 89 0.015362478 ubox
69 90 0.176346722 ubox
69 91 0.005795165 ubox
69 92 0.007447576 ubox
69 93 0.004251135 ubox
69 96 0.003323519 ubox
70 85 0.992601624 ubox
71 84 0.999526120 ubox
72 83 0.999969333 ubox
73 82 0.999984354 ubox
74 81 0.999685357 ubox
75 79 0.011785143 ubox
75 80 0.998690284 ubox
76 80 0.004029603 ubox
84 95 0.009561446 ubox
84 98 0.003968735 ubox
85 94 0.009747806 ubox
85 97 0.003967275 ubox
91 95 0.042129333 ubox
91 98 0.101390712 ubox
91 101 0.044398359 ubox
91 104 0.034295501 ubox
91 107 0.010144064 ubox
5 67 0.9500000 lbox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
