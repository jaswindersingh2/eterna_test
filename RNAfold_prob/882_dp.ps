%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (882)
} def

/sequence { (\
GGAAAAGAAGAAGACUUGGAAGCAAAAGCAGCAAAAGCAAACCAAAGAAACUUCAACCAAAAGGAACUUGGACACUUCGGUGUCCAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.006506654 ubox
1 43 0.021536975 ubox
1 54 0.009694350 ubox
1 57 0.022228234 ubox
1 58 0.511503946 ubox
1 67 0.030240101 ubox
1 68 0.013706092 ubox
1 85 0.005356379 ubox
1 95 0.097984886 ubox
1 98 0.098765383 ubox
1 101 0.101669956 ubox
1 104 0.102190711 ubox
1 107 0.025805240 ubox
2 23 0.003653807 ubox
2 42 0.021461272 ubox
2 53 0.009116577 ubox
2 54 0.013452760 ubox
2 57 0.511139403 ubox
2 58 0.042035971 ubox
2 67 0.021716545 ubox
2 84 0.005297883 ubox
2 95 0.051687127 ubox
2 98 0.051974045 ubox
2 101 0.053127536 ubox
2 104 0.052942255 ubox
2 107 0.017271422 ubox
3 52 0.008219866 ubox
3 53 0.013083752 ubox
3 68 0.003878396 ubox
3 69 0.003324525 ubox
3 83 0.004180557 ubox
4 52 0.010369073 ubox
4 68 0.003897497 ubox
4 69 0.003198300 ubox
5 17 0.016476153 ubox
5 53 0.016164702 ubox
5 68 0.003833968 ubox
5 69 0.015640210 ubox
6 16 0.018231941 ubox
6 52 0.017972673 ubox
6 53 0.004368342 ubox
6 68 0.021169704 ubox
7 15 0.018750058 ubox
7 51 0.018163258 ubox
7 52 0.003309577 ubox
7 53 0.008117280 ubox
7 54 0.837195760 ubox
7 57 0.073501658 ubox
7 58 0.037870756 ubox
7 67 0.023414322 ubox
7 95 0.036986211 ubox
7 98 0.037244644 ubox
7 101 0.036007283 ubox
7 104 0.035740539 ubox
7 107 0.012489025 ubox
8 17 0.026815637 ubox
8 52 0.006989939 ubox
8 53 0.838153362 ubox
8 69 0.005851511 ubox
9 16 0.029182444 ubox
9 52 0.837678647 ubox
9 53 0.004607346 ubox
9 68 0.007578083 ubox
10 15 0.029748218 ubox
10 32 0.004522805 ubox
10 51 0.835089030 ubox
10 52 0.005024372 ubox
10 53 0.004178728 ubox
10 54 0.531614655 ubox
10 67 0.007953667 ubox
10 95 0.008216079 ubox
10 98 0.008194087 ubox
10 101 0.008398048 ubox
10 104 0.008420731 ubox
11 16 0.003749445 ubox
11 17 0.004815643 ubox
11 52 0.004280589 ubox
11 53 0.532133434 ubox
11 69 0.003930559 ubox
12 16 0.003965914 ubox
12 52 0.532169724 ubox
12 68 0.005143624 ubox
13 23 0.006275324 ubox
13 29 0.031352390 ubox
13 38 0.018467645 ubox
13 43 0.004320029 ubox
13 51 0.531703223 ubox
13 54 0.008582077 ubox
13 67 0.005694375 ubox
13 95 0.008052399 ubox
13 98 0.008067655 ubox
13 101 0.008940556 ubox
13 104 0.008568138 ubox
14 53 0.008456881 ubox
15 19 0.004272245 ubox
15 22 0.009561254 ubox
15 28 0.048336742 ubox
15 37 0.027842007 ubox
15 47 0.661036970 ubox
15 63 0.013500196 ubox
15 64 0.005962073 ubox
15 91 0.018278588 ubox
16 21 0.009227470 ubox
16 25 0.044957460 ubox
16 26 0.006356845 ubox
16 27 0.048149483 ubox
16 34 0.013664270 ubox
16 35 0.007221206 ubox
16 36 0.027652005 ubox
16 40 0.008448745 ubox
16 44 0.009177560 ubox
16 45 0.775404654 ubox
16 46 0.542218658 ubox
16 47 0.015288900 ubox
16 48 0.032500282 ubox
16 49 0.011124192 ubox
16 50 0.008591278 ubox
16 56 0.013287303 ubox
16 60 0.029957623 ubox
16 62 0.011962400 ubox
16 63 0.005353481 ubox
16 90 0.017919818 ubox
16 97 0.017407409 ubox
16 100 0.017266742 ubox
16 103 0.017228966 ubox
16 106 0.016899037 ubox
17 24 0.051513195 ubox
17 25 0.006198582 ubox
17 26 0.047083683 ubox
17 30 0.009340946 ubox
17 33 0.016312725 ubox
17 34 0.006836400 ubox
17 35 0.026790029 ubox
17 39 0.009995638 ubox
17 44 0.906864846 ubox
17 45 0.384840130 ubox
17 46 0.008486170 ubox
17 47 0.022828233 ubox
17 48 0.008455685 ubox
17 49 0.008026083 ubox
17 55 0.015587968 ubox
17 59 0.034974265 ubox
17 61 0.006638742 ubox
17 89 0.016406540 ubox
17 96 0.020414459 ubox
17 99 0.020277376 ubox
17 102 0.020294167 ubox
17 105 0.019928679 ubox
18 23 0.053551970 ubox
18 29 0.010619274 ubox
18 32 0.016843877 ubox
18 38 0.010364756 ubox
18 42 0.021877749 ubox
18 43 0.986924125 ubox
18 54 0.016025780 ubox
18 58 0.036353912 ubox
18 95 0.020986829 ubox
18 98 0.020850409 ubox
18 101 0.020888796 ubox
18 104 0.020534597 ubox
19 23 0.004818911 ubox
19 29 0.003409988 ubox
19 32 0.028360247 ubox
19 42 0.983429955 ubox
19 43 0.060620329 ubox
19 53 0.015440777 ubox
19 54 0.014771626 ubox
19 57 0.036103246 ubox
19 95 0.003538832 ubox
19 98 0.003470192 ubox
19 101 0.003425304 ubox
20 52 0.014527480 ubox
20 53 0.015329721 ubox
21 52 0.015050092 ubox
22 29 0.833552050 ubox
22 32 0.086569559 ubox
22 38 0.506803596 ubox
22 42 0.006997171 ubox
22 43 0.004342469 ubox
22 51 0.013382660 ubox
23 28 0.833233462 ubox
23 31 0.086672992 ubox
23 37 0.507197051 ubox
23 47 0.004431548 ubox
28 32 0.072758841 ubox
28 38 0.092783852 ubox
28 42 0.005543621 ubox
28 43 0.004403586 ubox
29 37 0.092895362 ubox
31 38 0.835330243 ubox
32 37 0.835005802 ubox
35 53 0.004677457 ubox
36 52 0.005223042 ubox
37 42 0.006892143 ubox
37 43 0.005535587 ubox
37 51 0.005289862 ubox
38 47 0.010839329 ubox
42 47 0.014256207 ubox
42 64 0.011071346 ubox
43 47 0.010282251 ubox
43 63 0.011109230 ubox
44 53 0.004859277 ubox
45 52 0.005030352 ubox
45 53 0.018119487 ubox
45 69 0.006258526 ubox
46 52 0.020685223 ubox
46 53 0.004430105 ubox
46 68 0.009396841 ubox
47 51 0.020655268 ubox
47 52 0.004244407 ubox
47 53 0.003867032 ubox
47 54 0.046786953 ubox
47 58 0.003376269 ubox
47 67 0.010789138 ubox
47 95 0.003227532 ubox
47 98 0.003920483 ubox
48 52 0.003684602 ubox
48 53 0.043808417 ubox
51 63 0.021564678 ubox
51 64 0.014960952 ubox
51 91 0.009294721 ubox
52 62 0.021437480 ubox
52 63 0.014970654 ubox
52 65 0.027226398 ubox
52 66 0.015143048 ubox
52 90 0.009205067 ubox
52 93 0.017950702 ubox
53 60 0.003351136 ubox
53 61 0.020216816 ubox
53 62 0.014494445 ubox
53 64 0.028923574 ubox
53 65 0.017851369 ubox
53 89 0.008277522 ubox
53 92 0.020102610 ubox
54 63 0.029972271 ubox
54 64 0.017722097 ubox
54 91 0.020388075 ubox
55 68 0.012083028 ubox
55 69 0.006877964 ubox
56 68 0.010056390 ubox
57 63 0.042835101 ubox
57 64 0.675329730 ubox
57 71 0.004974381 ubox
57 91 0.004598546 ubox
58 63 0.677473782 ubox
58 64 0.055168259 ubox
58 70 0.005416404 ubox
58 91 0.006306088 ubox
59 68 0.006312255 ubox
59 69 0.006780852 ubox
60 68 0.007810832 ubox
60 69 0.009054912 ubox
61 68 0.011135033 ubox
61 69 0.030363377 ubox
62 68 0.041117012 ubox
62 69 0.006676961 ubox
63 67 0.045207456 ubox
63 68 0.008301819 ubox
63 95 0.090439423 ubox
63 98 0.020859042 ubox
63 101 0.015299925 ubox
63 104 0.013319287 ubox
63 107 0.004335859 ubox
64 68 0.003712215 ubox
64 95 0.023933014 ubox
64 98 0.008298003 ubox
64 101 0.007143902 ubox
64 104 0.006295675 ubox
67 91 0.176399732 ubox
68 86 0.019209807 ubox
68 87 0.872807173 ubox
68 88 0.057405542 ubox
68 89 0.025683235 ubox
68 90 0.157930711 ubox
68 91 0.011454641 ubox
68 92 0.009479569 ubox
68 93 0.006400513 ubox
68 94 0.004326914 ubox
68 96 0.004007206 ubox
68 97 0.003505901 ubox
69 86 0.979133000 ubox
69 87 0.045720629 ubox
69 88 0.014149920 ubox
69 89 0.077302043 ubox
69 90 0.005555240 ubox
69 91 0.006167645 ubox
69 92 0.003469850 ubox
70 85 0.999920454 ubox
71 84 0.999972164 ubox
72 83 0.999858459 ubox
73 82 0.999968975 ubox
74 81 0.999493262 ubox
75 79 0.011945684 ubox
75 80 0.998578790 ubox
76 80 0.004038155 ubox
91 95 0.043915939 ubox
91 98 0.104083930 ubox
91 101 0.044834911 ubox
91 104 0.034017322 ubox
91 107 0.010047695 ubox
1 58 0.9500000 lbox
2 57 0.9500000 lbox
7 54 0.9500000 lbox
8 53 0.9500000 lbox
9 52 0.9500000 lbox
10 51 0.9500000 lbox
16 45 0.9500000 lbox
17 44 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
68 87 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
