%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (73)
} def

/sequence { (\
GGAAAAACGAGGCGUUCAACAGAACGGCUGGCCCUGAACACAGGAGUGGGACACCACGCUGGCCCUCGGCCGUGCUUCGGCGCGGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.050060727 ubox
1 64 0.005666130 ubox
1 65 0.008454159 ubox
1 95 0.067441876 ubox
1 98 0.067904697 ubox
1 101 0.069428134 ubox
1 104 0.069741577 ubox
1 107 0.017608313 ubox
2 8 0.012176008 ubox
2 63 0.005673407 ubox
2 64 0.008394284 ubox
2 67 0.004908864 ubox
2 95 0.035590767 ubox
2 98 0.035724550 ubox
2 101 0.036487796 ubox
2 104 0.036349610 ubox
2 107 0.011861034 ubox
3 66 0.004671258 ubox
6 16 0.004653132 ubox
7 15 0.005337915 ubox
8 14 0.005468096 ubox
8 31 0.015435034 ubox
8 68 0.989391924 ubox
8 91 0.005404841 ubox
9 13 0.005291288 ubox
9 67 0.999190211 ubox
9 98 0.003409686 ubox
9 101 0.003426690 ubox
9 104 0.003439618 ubox
10 29 0.021012947 ubox
10 66 0.999042112 ubox
11 28 0.021538383 ubox
11 64 0.009412914 ubox
11 65 0.998759693 ubox
11 66 0.003995496 ubox
11 95 0.003413118 ubox
11 98 0.003633209 ubox
11 101 0.003507523 ubox
11 104 0.003486988 ubox
12 25 0.004713808 ubox
12 28 0.005728514 ubox
12 63 0.010515715 ubox
12 64 0.944464753 ubox
12 65 0.008777022 ubox
13 22 0.007060508 ubox
13 26 0.941692040 ubox
13 27 0.004760894 ubox
13 62 0.010417113 ubox
14 20 0.006197289 ubox
14 25 0.999488670 ubox
14 39 0.004159373 ubox
14 63 0.007442478 ubox
15 19 0.005593892 ubox
15 23 0.003516204 ubox
15 24 0.999203216 ubox
15 38 0.004164263 ubox
15 62 0.006808829 ubox
16 22 0.004375751 ubox
16 23 0.999072956 ubox
16 37 0.004170863 ubox
16 61 0.003173957 ubox
17 22 0.997730840 ubox
17 36 0.004161880 ubox
17 61 0.003841050 ubox
18 35 0.003545854 ubox
18 60 0.003577996 ubox
20 30 0.006552892 ubox
20 61 0.003558977 ubox
21 29 0.006590935 ubox
21 60 0.003620615 ubox
22 28 0.006578123 ubox
22 59 0.003622587 ubox
22 67 0.003962728 ubox
23 66 0.003822126 ubox
25 61 0.004649106 ubox
26 55 0.003388686 ubox
26 60 0.006459762 ubox
26 63 0.007627128 ubox
26 64 0.302510579 ubox
27 52 0.007493583 ubox
27 54 0.003386314 ubox
27 59 0.007380849 ubox
27 63 0.997175788 ubox
27 64 0.006099428 ubox
28 50 0.012710999 ubox
28 58 0.007375771 ubox
28 61 0.004247082 ubox
28 62 0.999363130 ubox
29 49 0.012726144 ubox
29 61 0.995460758 ubox
30 39 0.003284289 ubox
30 59 0.003303359 ubox
30 60 0.995471386 ubox
30 64 0.016317791 ubox
31 47 0.012952375 ubox
31 59 0.999381798 ubox
31 63 0.016967709 ubox
32 44 0.003872842 ubox
32 46 0.013229206 ubox
32 58 0.997381537 ubox
32 62 0.016967606 ubox
33 43 0.004374925 ubox
33 44 0.997371766 ubox
33 58 0.003221886 ubox
33 61 0.013889338 ubox
34 43 0.999776368 ubox
34 44 0.008577743 ubox
35 42 0.999035102 ubox
35 43 0.007921660 ubox
36 41 0.993088591 ubox
36 67 0.003764754 ubox
37 66 0.003697843 ubox
41 61 0.008302046 ubox
42 60 0.008892142 ubox
43 59 0.008805902 ubox
43 60 0.008730748 ubox
44 59 0.010945233 ubox
45 60 0.007153427 ubox
46 54 0.007825416 ubox
46 57 0.997558504 ubox
46 59 0.007317179 ubox
47 53 0.007860724 ubox
47 56 0.999055416 ubox
47 58 0.007260705 ubox
48 52 0.007744344 ubox
48 54 0.003445322 ubox
48 55 0.999766472 ubox
48 57 0.008335395 ubox
48 65 0.004554773 ubox
49 54 0.999109587 ubox
49 55 0.011141623 ubox
49 64 0.004565994 ubox
50 54 0.013058872 ubox
50 63 0.004525055 ubox
52 61 0.003548585 ubox
53 60 0.003245956 ubox
54 62 0.011944831 ubox
55 61 0.012006993 ubox
56 60 0.009731576 ubox
58 98 0.004581454 ubox
60 96 0.007175351 ubox
61 95 0.007626208 ubox
64 91 0.005152396 ubox
65 91 0.019377825 ubox
66 89 0.010510637 ubox
66 90 0.017630784 ubox
66 92 0.004653120 ubox
67 91 0.004852975 ubox
68 86 0.007153762 ubox
68 95 0.003383613 ubox
69 86 0.998700042 ubox
70 85 0.999978125 ubox
71 84 0.999973178 ubox
72 83 0.999970078 ubox
73 82 0.999597826 ubox
74 81 0.999946682 ubox
75 79 0.011582417 ubox
75 80 0.999145381 ubox
76 80 0.003707108 ubox
86 91 0.005333233 ubox
91 95 0.043031306 ubox
91 98 0.103755758 ubox
91 101 0.045521778 ubox
91 104 0.035232083 ubox
91 107 0.010423980 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
29 61 0.9500000 lbox
30 60 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
