%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (131)
} def

/sequence { (\
GGAAAAAAGGAGAAGACACUGGAGCAAAGAGCAAAAGCAUCAGCACCAAGAGAACUUCAACCAAAAAAUAUCGUUUUCGAACGAUAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.006362041 ubox
1 19 0.003272355 ubox
1 47 0.003382937 ubox
1 58 0.006499590 ubox
1 61 0.006567717 ubox
1 62 0.119334403 ubox
1 69 0.011835119 ubox
1 78 0.006450772 ubox
1 95 0.066910321 ubox
1 98 0.067356191 ubox
1 101 0.068973355 ubox
1 104 0.069758020 ubox
1 107 0.017619594 ubox
2 46 0.003373004 ubox
2 57 0.006130163 ubox
2 58 0.008531317 ubox
2 61 0.118302741 ubox
2 62 0.015982907 ubox
2 69 0.009300275 ubox
2 72 0.003600626 ubox
2 77 0.006405363 ubox
2 78 0.009727781 ubox
2 95 0.035314045 ubox
2 98 0.035452545 ubox
2 101 0.036270211 ubox
2 104 0.036181012 ubox
2 107 0.011807680 ubox
3 56 0.005583342 ubox
3 57 0.008398672 ubox
3 69 0.006383291 ubox
3 71 0.003524407 ubox
3 76 0.006354005 ubox
3 77 0.009678596 ubox
4 56 0.007018440 ubox
4 69 0.004021463 ubox
4 75 0.006220737 ubox
4 76 0.009419114 ubox
5 74 0.005961201 ubox
5 75 0.009116476 ubox
5 77 0.004291489 ubox
6 57 0.004208602 ubox
6 74 0.008604435 ubox
6 76 0.005166361 ubox
7 56 0.003409442 ubox
7 57 0.026236445 ubox
7 75 0.005746867 ubox
8 20 0.013073500 ubox
8 56 0.028251000 ubox
8 57 0.008512737 ubox
8 74 0.006181584 ubox
9 17 0.016466890 ubox
9 19 0.015385434 ubox
9 20 0.005075876 ubox
9 47 0.010563522 ubox
9 55 0.028473007 ubox
9 56 0.009742973 ubox
9 58 0.232332629 ubox
9 61 0.351692176 ubox
9 62 0.792628398 ubox
9 82 0.005845005 ubox
9 95 0.025185407 ubox
9 98 0.025393223 ubox
9 101 0.025799971 ubox
9 104 0.025862059 ubox
9 107 0.009032970 ubox
10 17 0.011099039 ubox
10 19 0.007711745 ubox
10 46 0.010555062 ubox
10 55 0.009881064 ubox
10 57 0.233503175 ubox
10 58 0.047030143 ubox
10 61 0.791878689 ubox
10 62 0.059318359 ubox
10 72 0.006892383 ubox
10 95 0.016851622 ubox
10 98 0.015349365 ubox
10 101 0.015394039 ubox
10 104 0.015326648 ubox
10 107 0.004999300 ubox
11 20 0.011257060 ubox
11 56 0.234079508 ubox
11 57 0.046223786 ubox
11 71 0.006848285 ubox
12 17 0.010762652 ubox
12 19 0.012941615 ubox
12 44 0.009302148 ubox
12 55 0.233302963 ubox
12 56 0.039045272 ubox
12 57 0.015939533 ubox
12 58 0.964658465 ubox
12 61 0.003616209 ubox
12 78 0.009435218 ubox
12 95 0.005167576 ubox
12 98 0.005474930 ubox
12 101 0.005468667 ubox
12 104 0.003705646 ubox
13 56 0.015329240 ubox
13 57 0.966391677 ubox
13 77 0.009441726 ubox
14 20 0.006212841 ubox
14 56 0.966089533 ubox
14 57 0.007219627 ubox
14 76 0.009428741 ubox
15 19 0.007271312 ubox
15 41 0.009403599 ubox
15 47 0.006146811 ubox
15 55 0.963376462 ubox
15 56 0.007355734 ubox
15 57 0.004015594 ubox
15 58 0.009438401 ubox
15 75 0.009440277 ubox
15 95 0.003779286 ubox
15 98 0.003550759 ubox
15 101 0.003284603 ubox
16 40 0.009364862 ubox
16 56 0.004240267 ubox
16 57 0.009266180 ubox
16 74 0.009447455 ubox
17 50 0.099845196 ubox
17 52 0.486371326 ubox
17 73 0.009435045 ubox
17 91 0.003197397 ubox
19 37 0.009687642 ubox
19 43 0.034505570 ubox
19 50 0.807621431 ubox
19 52 0.144484609 ubox
19 91 0.003870640 ubox
20 36 0.009671064 ubox
20 42 0.034700979 ubox
20 48 0.794066886 ubox
20 49 0.572960806 ubox
20 50 0.020019847 ubox
20 51 0.102408258 ubox
20 52 0.004654957 ubox
20 63 0.003664422 ubox
20 90 0.003323423 ubox
21 41 0.034732269 ubox
21 46 0.016640975 ubox
21 47 0.996791341 ubox
21 58 0.003341638 ubox
21 62 0.004047523 ubox
22 40 0.033928301 ubox
22 46 0.995411149 ubox
22 47 0.024040439 ubox
22 57 0.003330230 ubox
22 61 0.004028924 ubox
23 56 0.003320944 ubox
24 32 0.033418479 ubox
24 38 0.034923272 ubox
24 44 0.996208872 ubox
24 46 0.007642275 ubox
25 31 0.033435275 ubox
25 37 0.034901174 ubox
25 43 0.996866771 ubox
26 40 0.006426537 ubox
27 40 0.026587759 ubox
28 40 0.212319799 ubox
29 38 0.027085883 ubox
29 40 0.140917679 ubox
29 41 0.916765114 ubox
30 40 0.913879017 ubox
31 38 0.990340850 ubox
31 44 0.003191708 ubox
32 37 0.990306754 ubox
32 43 0.003198263 ubox
37 44 0.032071245 ubox
38 43 0.032061563 ubox
40 51 0.003348637 ubox
41 50 0.003557644 ubox
44 50 0.007845950 ubox
44 52 0.006151643 ubox
46 52 0.004556126 ubox
47 52 0.010300192 ubox
48 57 0.012298149 ubox
49 56 0.017838139 ubox
50 55 0.018471765 ubox
50 57 0.004226411 ubox
50 58 0.034733507 ubox
50 62 0.005042272 ubox
50 78 0.007535644 ubox
51 56 0.004412732 ubox
51 57 0.034171717 ubox
51 77 0.007545609 ubox
52 56 0.023192500 ubox
52 58 0.018443630 ubox
52 61 0.005351095 ubox
52 62 0.003980610 ubox
52 76 0.007547745 ubox
53 57 0.016068172 ubox
53 75 0.007552136 ubox
54 74 0.007551370 ubox
55 73 0.007543271 ubox
55 91 0.003951372 ubox
56 65 0.003357965 ubox
56 90 0.003939879 ubox
56 93 0.004668886 ubox
57 64 0.003431565 ubox
57 66 0.003272345 ubox
57 89 0.003600634 ubox
57 92 0.005203507 ubox
58 91 0.005259701 ubox
60 69 0.003461474 ubox
61 91 0.014198058 ubox
62 91 0.042984052 ubox
63 69 0.005899806 ubox
64 69 0.007524164 ubox
65 69 0.004628820 ubox
65 77 0.003778595 ubox
66 75 0.003172608 ubox
66 76 0.004275509 ubox
66 85 0.004161269 ubox
67 75 0.004428159 ubox
67 85 0.005411944 ubox
68 74 0.004426971 ubox
68 85 0.009490265 ubox
69 73 0.004116310 ubox
69 84 0.006032014 ubox
69 86 0.934369328 ubox
69 87 0.043306417 ubox
69 88 0.016323697 ubox
69 89 0.010957561 ubox
69 90 0.007888790 ubox
69 91 0.003753925 ubox
69 92 0.004149173 ubox
69 93 0.003575891 ubox
70 85 0.990273650 ubox
71 80 0.030473777 ubox
71 84 0.997035131 ubox
71 92 0.008257579 ubox
72 79 0.032564685 ubox
72 83 0.998544349 ubox
72 91 0.008794398 ubox
73 78 0.032265526 ubox
73 82 0.998462508 ubox
73 95 0.024563840 ubox
73 98 0.015558011 ubox
73 101 0.005731735 ubox
73 104 0.003402370 ubox
74 79 0.004464314 ubox
74 80 0.040183300 ubox
74 81 0.984575826 ubox
74 87 0.003520121 ubox
74 88 0.003712010 ubox
74 89 0.005742239 ubox
74 94 0.022660265 ubox
74 97 0.015231454 ubox
74 100 0.005709468 ubox
74 103 0.003383999 ubox
75 79 0.051329063 ubox
75 80 0.856103113 ubox
75 81 0.031448553 ubox
75 86 0.003456690 ubox
75 87 0.004034492 ubox
75 88 0.006682851 ubox
75 93 0.020451761 ubox
75 94 0.018603868 ubox
75 96 0.010870923 ubox
75 99 0.004321160 ubox
76 80 0.037211400 ubox
76 81 0.004842634 ubox
76 86 0.003822088 ubox
76 87 0.006579671 ubox
76 92 0.018019795 ubox
76 93 0.024884049 ubox
77 84 0.008626235 ubox
77 86 0.005800055 ubox
77 91 0.014269639 ubox
77 92 0.027461642 ubox
78 83 0.009175767 ubox
78 91 0.029113242 ubox
82 91 0.007723180 ubox
85 92 0.003253242 ubox
91 95 0.043111390 ubox
91 98 0.103785958 ubox
91 101 0.045461861 ubox
91 104 0.035127355 ubox
91 107 0.010390781 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
