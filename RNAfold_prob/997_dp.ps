%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (997)
} def

/sequence { (\
GGAAAAGGCAAAGCCAAGCUCAAAGAGCAAGGAUCAAAGAUCCACGAGCAAAGCUCAACCGUAACGGAAAGGAUGUUCGCAUCCUUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.008294624 ubox
1 15 0.025923516 ubox
1 20 0.003692900 ubox
1 21 0.006023426 ubox
1 43 0.015678589 ubox
1 45 0.045176038 ubox
1 56 0.006087062 ubox
1 59 0.015443961 ubox
1 60 0.291102633 ubox
1 62 0.003394309 ubox
1 65 0.029122344 ubox
1 84 0.041479592 ubox
1 85 0.004882785 ubox
1 86 0.019405393 ubox
1 95 0.383986347 ubox
1 98 0.387228024 ubox
1 101 0.396086677 ubox
1 104 0.397886063 ubox
1 107 0.100455672 ubox
2 9 0.010407003 ubox
2 14 0.025989570 ubox
2 15 0.004645181 ubox
2 19 0.005519113 ubox
2 20 0.005054002 ubox
2 21 0.008762628 ubox
2 42 0.015573217 ubox
2 45 0.032052547 ubox
2 55 0.003474666 ubox
2 56 0.007074362 ubox
2 59 0.290054783 ubox
2 60 0.025755044 ubox
2 62 0.003974365 ubox
2 65 0.017355707 ubox
2 83 0.041493750 ubox
2 84 0.003893110 ubox
2 85 0.010333545 ubox
2 86 0.033153328 ubox
2 95 0.202641949 ubox
2 98 0.203808195 ubox
2 101 0.208141132 ubox
2 104 0.207354159 ubox
2 107 0.067661056 ubox
3 20 0.008579485 ubox
3 41 0.014692341 ubox
3 55 0.005845579 ubox
3 62 0.004475349 ubox
3 82 0.038737888 ubox
3 85 0.023495965 ubox
3 86 0.029167043 ubox
4 62 0.009744354 ubox
4 85 0.017465730 ubox
4 86 0.026913832 ubox
5 62 0.004900331 ubox
5 85 0.016261340 ubox
5 86 0.027046377 ubox
6 62 0.004107678 ubox
6 85 0.016537897 ubox
6 86 0.022235212 ubox
7 14 0.017443768 ubox
7 15 0.994338700 ubox
7 20 0.009540768 ubox
7 21 0.003314375 ubox
7 55 0.009225037 ubox
7 60 0.014703044 ubox
7 78 0.003287503 ubox
7 95 0.023962276 ubox
7 98 0.024570401 ubox
7 101 0.023434260 ubox
7 104 0.023211908 ubox
7 107 0.008104259 ubox
8 14 0.995882618 ubox
8 15 0.009257801 ubox
8 19 0.010955781 ubox
8 54 0.010040052 ubox
8 59 0.014605705 ubox
8 62 0.004045603 ubox
8 76 0.003859147 ubox
8 95 0.011511470 ubox
8 98 0.011528218 ubox
8 101 0.010557411 ubox
8 104 0.010350197 ubox
8 107 0.003374042 ubox
9 13 0.988654929 ubox
9 18 0.010990633 ubox
9 53 0.010053033 ubox
9 61 0.004125692 ubox
9 75 0.004402097 ubox
9 91 0.014437452 ubox
10 74 0.004183361 ubox
12 20 0.004351435 ubox
12 55 0.005292864 ubox
13 19 0.004630994 ubox
13 49 0.009613679 ubox
13 54 0.005511852 ubox
13 95 0.011881035 ubox
13 98 0.011610086 ubox
13 101 0.011424293 ubox
13 104 0.011341760 ubox
13 107 0.003957593 ubox
14 18 0.004603559 ubox
14 32 0.011028032 ubox
14 48 0.009602220 ubox
14 53 0.005498809 ubox
14 67 0.013510484 ubox
14 72 0.004665390 ubox
14 91 0.010825616 ubox
15 31 0.011165175 ubox
15 46 0.006797708 ubox
15 66 0.013544584 ubox
15 71 0.004664947 ubox
15 91 0.017347450 ubox
16 86 0.011231443 ubox
17 55 0.004841702 ubox
17 85 0.006946677 ubox
17 86 0.010895216 ubox
18 28 0.998347079 ubox
18 49 0.006531532 ubox
18 54 0.005140715 ubox
18 95 0.005677045 ubox
18 98 0.005401812 ubox
18 101 0.005514447 ubox
18 104 0.005507347 ubox
19 25 0.005922295 ubox
19 27 0.999439529 ubox
19 48 0.006538939 ubox
19 53 0.005141140 ubox
19 91 0.004914208 ubox
20 24 0.005490090 ubox
20 25 0.006523042 ubox
20 26 0.998662024 ubox
20 47 0.006536257 ubox
20 52 0.004968351 ubox
20 90 0.004638683 ubox
20 92 0.009109144 ubox
21 25 0.990278676 ubox
21 46 0.006516158 ubox
21 91 0.009659884 ubox
25 49 0.003717059 ubox
25 56 0.004950184 ubox
26 55 0.004955559 ubox
27 45 0.005821750 ubox
27 54 0.004953942 ubox
28 46 0.003871934 ubox
28 53 0.004940381 ubox
28 91 0.004268853 ubox
29 86 0.047635718 ubox
30 85 0.051875844 ubox
30 86 0.005598385 ubox
31 43 0.997338986 ubox
31 45 0.006977186 ubox
31 84 0.052336396 ubox
31 95 0.004850941 ubox
31 98 0.003675928 ubox
31 101 0.003710479 ubox
31 104 0.003678201 ubox
32 42 0.998434301 ubox
32 43 0.003642458 ubox
32 83 0.052339306 ubox
33 41 0.998131258 ubox
33 82 0.052300296 ubox
34 39 0.008288951 ubox
34 40 0.997361368 ubox
34 81 0.051635997 ubox
34 92 0.003468928 ubox
35 39 0.989088159 ubox
35 79 0.048912079 ubox
35 91 0.003515860 ubox
37 77 0.049343227 ubox
38 76 0.051149796 ubox
40 74 0.051934185 ubox
41 73 0.052320334 ubox
42 72 0.052335193 ubox
43 71 0.052279141 ubox
44 62 0.024638656 ubox
45 53 0.004957546 ubox
45 61 0.025864724 ubox
45 66 0.005121440 ubox
45 67 0.003336044 ubox
45 79 0.038623436 ubox
45 91 0.027219009 ubox
46 56 0.997291652 ubox
46 60 0.015217894 ubox
46 65 0.003783846 ubox
46 78 0.039381176 ubox
47 55 0.998492416 ubox
47 77 0.039361729 ubox
48 54 0.998744594 ubox
48 76 0.039362441 ubox
49 53 0.991484836 ubox
49 75 0.039372524 ubox
50 74 0.037070671 ubox
51 74 0.005791767 ubox
53 62 0.003169763 ubox
54 61 0.003243286 ubox
54 71 0.024181095 ubox
54 72 0.026843409 ubox
55 70 0.023190151 ubox
55 71 0.025837621 ubox
55 73 0.011286972 ubox
56 71 0.004768049 ubox
56 72 0.011325008 ubox
56 91 0.003504698 ubox
57 62 0.005122303 ubox
58 62 0.003702478 ubox
59 66 0.031628860 ubox
59 67 0.930347241 ubox
59 72 0.003635094 ubox
60 66 0.934473844 ubox
60 67 0.082984239 ubox
60 71 0.003672901 ubox
60 79 0.006258444 ubox
60 91 0.007618408 ubox
61 65 0.874368201 ubox
61 78 0.006506146 ubox
61 80 0.004310543 ubox
61 95 0.134067093 ubox
61 98 0.022024575 ubox
61 101 0.012578164 ubox
61 104 0.010767963 ubox
61 107 0.003791028 ubox
62 66 0.004547128 ubox
62 67 0.008439761 ubox
62 68 0.007166255 ubox
62 69 0.003541955 ubox
62 79 0.004265819 ubox
62 87 0.006113556 ubox
62 91 0.004275178 ubox
62 92 0.012512818 ubox
62 93 0.012021606 ubox
62 94 0.130929266 ubox
62 97 0.021273659 ubox
62 100 0.012164404 ubox
62 103 0.010406398 ubox
62 106 0.003697381 ubox
63 77 0.007686953 ubox
63 86 0.005609142 ubox
64 76 0.007956586 ubox
64 85 0.003400146 ubox
65 75 0.007976068 ubox
65 79 0.004027466 ubox
65 91 0.125864963 ubox
66 74 0.007529096 ubox
66 78 0.004087653 ubox
66 84 0.004251547 ubox
66 86 0.004335484 ubox
66 95 0.011724087 ubox
66 98 0.009151209 ubox
66 101 0.007546543 ubox
66 104 0.005791903 ubox
67 77 0.004002960 ubox
67 83 0.004252926 ubox
67 86 0.009809631 ubox
67 95 0.006702107 ubox
67 98 0.005124465 ubox
67 101 0.003410745 ubox
68 76 0.003827530 ubox
68 82 0.004147679 ubox
68 85 0.007302392 ubox
68 86 0.065512946 ubox
69 85 0.048755002 ubox
69 86 0.920783609 ubox
70 85 0.987033916 ubox
70 86 0.020826368 ubox
71 78 0.003912561 ubox
71 80 0.004410422 ubox
71 84 0.997632353 ubox
71 85 0.003661827 ubox
72 78 0.005480901 ubox
72 83 0.997698639 ubox
73 77 0.004776050 ubox
73 82 0.997438368 ubox
74 81 0.996657179 ubox
75 80 0.990878075 ubox
84 91 0.004790572 ubox
85 90 0.006272600 ubox
85 91 0.006198414 ubox
85 92 0.016749859 ubox
85 93 0.011109226 ubox
85 94 0.011260666 ubox
85 97 0.003787284 ubox
86 90 0.010014037 ubox
86 91 0.023041726 ubox
86 92 0.018650935 ubox
86 93 0.022246645 ubox
86 94 0.009421147 ubox
86 96 0.007381926 ubox
86 97 0.005504154 ubox
86 99 0.004969778 ubox
86 100 0.003686703 ubox
86 102 0.003372225 ubox
91 95 0.069158192 ubox
91 98 0.140784028 ubox
91 101 0.046923071 ubox
91 104 0.017494367 ubox
91 107 0.004488506 ubox
1 95 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
