%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (914)
} def

/sequence { (\
GGAAACCAAGUACGCAGCCAAGCAAAAGCAGCAAAAGCAAAGGACUGAAAGUACAAGCAAAAGCAAGGGAAUGACUUCGGUCAUUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.103733481 ubox
1 7 0.486886313 ubox
1 13 0.006692439 ubox
1 19 0.006579898 ubox
1 54 0.006107725 ubox
1 58 0.010977039 ubox
1 64 0.045992767 ubox
1 86 0.010054102 ubox
1 95 0.095368223 ubox
1 98 0.095604193 ubox
1 101 0.096757578 ubox
1 104 0.097238132 ubox
1 107 0.024551926 ubox
2 6 0.479497284 ubox
2 7 0.084495426 ubox
2 18 0.006580769 ubox
2 58 0.012468703 ubox
2 64 0.020639831 ubox
2 85 0.008394568 ubox
2 86 0.011614602 ubox
2 95 0.049550758 ubox
2 98 0.048686004 ubox
2 101 0.049642179 ubox
2 104 0.049464028 ubox
2 107 0.016141886 ubox
3 84 0.007297521 ubox
3 85 0.010844997 ubox
4 84 0.008256581 ubox
5 11 0.007003569 ubox
5 52 0.005641672 ubox
5 81 0.010434358 ubox
6 10 0.007333826 ubox
6 14 0.003763374 ubox
6 43 0.006497903 ubox
6 51 0.005837972 ubox
6 57 0.028952582 ubox
6 63 0.004214252 ubox
6 67 0.023158219 ubox
6 68 0.499558507 ubox
6 69 0.019702585 ubox
6 80 0.010921893 ubox
6 91 0.036143623 ubox
7 14 0.005414325 ubox
7 42 0.006531869 ubox
7 47 0.007230981 ubox
7 57 0.069291893 ubox
7 67 0.500056562 ubox
7 68 0.035795448 ubox
7 79 0.010914478 ubox
7 91 0.069759609 ubox
8 46 0.005192548 ubox
8 77 0.005172978 ubox
9 46 0.015864344 ubox
9 52 0.007301260 ubox
9 76 0.005218208 ubox
10 18 0.005783603 ubox
10 29 0.004773908 ubox
10 38 0.005282925 ubox
10 45 0.017041771 ubox
10 52 0.005397330 ubox
10 54 0.994428102 ubox
10 58 0.005628352 ubox
10 64 0.016897217 ubox
10 75 0.005189285 ubox
10 95 0.018727751 ubox
10 98 0.018405830 ubox
10 101 0.018794829 ubox
10 104 0.018903210 ubox
10 107 0.006615215 ubox
11 17 0.005730601 ubox
11 28 0.004688425 ubox
11 37 0.005183732 ubox
11 44 0.014820464 ubox
11 50 0.004075670 ubox
11 51 0.005253883 ubox
11 53 0.995829918 ubox
11 57 0.005037749 ubox
11 63 0.016120275 ubox
11 74 0.005135081 ubox
11 94 0.017721666 ubox
11 97 0.017428616 ubox
11 100 0.017797791 ubox
11 103 0.017901181 ubox
11 106 0.006330443 ubox
12 52 0.995924962 ubox
13 42 0.012995931 ubox
13 43 0.005880636 ubox
13 51 0.992455063 ubox
13 68 0.003798948 ubox
13 73 0.004014210 ubox
13 91 0.005255462 ubox
14 19 0.003289112 ubox
14 23 0.036134589 ubox
14 29 0.011089166 ubox
14 32 0.018993369 ubox
14 38 0.011692605 ubox
14 58 0.006565591 ubox
14 64 0.005971473 ubox
14 72 0.003557789 ubox
14 95 0.004690950 ubox
14 98 0.004725534 ubox
14 101 0.004732548 ubox
14 104 0.004266214 ubox
15 22 0.036143036 ubox
15 28 0.011092810 ubox
15 31 0.018986955 ubox
15 37 0.011687936 ubox
15 47 0.990531952 ubox
15 57 0.006504712 ubox
15 63 0.005950303 ubox
16 46 0.996392718 ubox
17 23 0.013116793 ubox
17 29 0.020686354 ubox
17 32 0.021567779 ubox
17 38 0.016724664 ubox
17 45 0.996723081 ubox
17 46 0.006860557 ubox
17 58 0.004500862 ubox
17 64 0.003194863 ubox
18 22 0.013097489 ubox
18 28 0.020498425 ubox
18 31 0.021650858 ubox
18 37 0.016798873 ubox
18 42 0.008992416 ubox
18 43 0.993340251 ubox
18 47 0.010180210 ubox
18 57 0.004485538 ubox
18 63 0.003185403 ubox
18 68 0.013775772 ubox
19 28 0.004382310 ubox
19 42 0.992232584 ubox
19 43 0.063351376 ubox
19 47 0.020682676 ubox
19 67 0.013800647 ubox
20 46 0.019963865 ubox
21 46 0.015532841 ubox
22 29 0.895413027 ubox
22 32 0.068994865 ubox
22 38 0.399202193 ubox
22 45 0.016737900 ubox
22 64 0.009405990 ubox
23 28 0.895059854 ubox
23 31 0.069081403 ubox
23 37 0.399511517 ubox
23 42 0.009268858 ubox
23 43 0.024857405 ubox
23 63 0.009398488 ubox
28 32 0.057310687 ubox
28 38 0.075482847 ubox
28 45 0.003240411 ubox
28 58 0.008459979 ubox
29 37 0.075573755 ubox
29 42 0.005622548 ubox
29 47 0.016268813 ubox
29 57 0.008459790 ubox
30 46 0.016363315 ubox
31 38 0.895650904 ubox
31 45 0.016244180 ubox
31 64 0.009702657 ubox
32 37 0.895298791 ubox
32 42 0.003751589 ubox
32 43 0.012370947 ubox
32 63 0.009699689 ubox
36 46 0.010996514 ubox
37 45 0.011362223 ubox
37 58 0.014305798 ubox
37 64 0.009297073 ubox
38 43 0.010724876 ubox
38 47 0.012839561 ubox
38 57 0.014303017 ubox
38 63 0.009294220 ubox
39 46 0.012187347 ubox
42 54 0.018180173 ubox
43 54 0.011264184 ubox
43 58 0.009924527 ubox
43 82 0.013236200 ubox
44 52 0.026734574 ubox
44 81 0.013280014 ubox
45 51 0.029482567 ubox
45 57 0.007513810 ubox
45 63 0.003442961 ubox
45 80 0.013290824 ubox
46 50 0.026585250 ubox
46 55 0.011947211 ubox
46 56 0.007066101 ubox
46 62 0.003442508 ubox
46 79 0.013280624 ubox
47 54 0.012925995 ubox
47 78 0.013284316 ubox
48 77 0.010987814 ubox
49 76 0.007895034 ubox
49 77 0.007372655 ubox
50 76 0.010458646 ubox
51 58 0.016496574 ubox
51 64 0.006318779 ubox
51 75 0.012851506 ubox
51 95 0.007299170 ubox
51 98 0.007111995 ubox
51 101 0.007409362 ubox
51 104 0.007813933 ubox
52 57 0.016010523 ubox
52 63 0.006201458 ubox
52 74 0.012711179 ubox
52 94 0.007041953 ubox
52 97 0.006865340 ubox
52 100 0.007168070 ubox
52 103 0.007545118 ubox
54 63 0.004393505 ubox
54 67 0.029675313 ubox
54 68 0.014393684 ubox
54 73 0.011009963 ubox
55 72 0.010715124 ubox
57 64 0.907359956 ubox
57 95 0.015850766 ubox
57 98 0.055971212 ubox
57 101 0.012428691 ubox
57 104 0.005216988 ubox
58 63 0.907073075 ubox
58 67 0.049093837 ubox
58 68 0.021888988 ubox
58 69 0.008526243 ubox
58 91 0.005738689 ubox
63 95 0.021362335 ubox
63 98 0.007300009 ubox
63 101 0.006352096 ubox
63 104 0.005435759 ubox
64 68 0.015794400 ubox
64 91 0.109439954 ubox
65 77 0.003822898 ubox
66 76 0.004327531 ubox
66 77 0.005202449 ubox
67 75 0.004395475 ubox
67 76 0.006172474 ubox
67 86 0.016578610 ubox
67 95 0.011574146 ubox
67 98 0.009508048 ubox
67 101 0.009511579 ubox
67 104 0.008785005 ubox
68 75 0.006334742 ubox
68 85 0.012617628 ubox
68 86 0.054494148 ubox
68 95 0.018739083 ubox
68 98 0.014710447 ubox
68 101 0.012374954 ubox
68 104 0.010874797 ubox
68 107 0.003185338 ubox
69 78 0.004524273 ubox
69 84 0.006450567 ubox
69 85 0.037752464 ubox
69 86 0.995976909 ubox
70 77 0.004469453 ubox
70 84 0.026766278 ubox
70 85 0.998055684 ubox
71 76 0.003723286 ubox
71 84 0.998368184 ubox
72 83 0.999383707 ubox
73 82 0.999825552 ubox
74 81 0.999537122 ubox
75 79 0.011784765 ubox
75 80 0.998542379 ubox
76 80 0.004028643 ubox
84 93 0.011515659 ubox
85 92 0.017185690 ubox
86 91 0.019117736 ubox
91 95 0.043936226 ubox
91 98 0.104512284 ubox
91 101 0.045189789 ubox
91 104 0.034429803 ubox
91 107 0.010173010 ubox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
17 45 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
57 64 0.9500000 lbox
58 63 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
