%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (956)
} def

/sequence { (\
GGAAAAAGAUGACUAGACAAGCAAAAAACAGUCAAUCAACAGAUCGACUGAGCCUAGCCAUCUAACAAGCGUACUUUCGGGUGCGUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.003407606 ubox
1 59 0.003255927 ubox
1 63 0.005146003 ubox
1 66 0.139803680 ubox
1 70 0.010813379 ubox
1 95 0.066720025 ubox
1 98 0.067147879 ubox
1 101 0.068674285 ubox
1 104 0.068988889 ubox
1 107 0.017418688 ubox
2 58 0.003242112 ubox
2 62 0.004766604 ubox
2 63 0.004923150 ubox
2 66 0.085802018 ubox
2 70 0.005709313 ubox
2 95 0.035088424 ubox
2 98 0.035218093 ubox
2 101 0.035968654 ubox
2 104 0.035835442 ubox
2 107 0.011693697 ubox
3 61 0.004234971 ubox
3 63 0.007630546 ubox
4 63 0.022451994 ubox
5 63 0.013967827 ubox
6 63 0.045272459 ubox
7 63 0.962295348 ubox
8 13 0.003257820 ubox
8 62 0.999118416 ubox
8 63 0.003302761 ubox
9 61 0.999096104 ubox
10 60 0.998893125 ubox
10 67 0.011449042 ubox
10 68 0.003418578 ubox
10 96 0.003585966 ubox
10 99 0.003407557 ubox
10 102 0.003460047 ubox
11 22 0.003178651 ubox
11 58 0.049979224 ubox
11 59 0.996388351 ubox
11 66 0.012682616 ubox
11 95 0.003777987 ubox
11 98 0.003594912 ubox
11 101 0.003652007 ubox
13 21 0.011163774 ubox
13 57 0.996083817 ubox
14 20 0.011074990 ubox
14 56 0.998112447 ubox
14 64 0.030589800 ubox
15 55 0.997884778 ubox
15 63 0.031963680 ubox
16 22 0.018611582 ubox
16 53 0.046731877 ubox
16 54 0.994803607 ubox
16 58 0.005600277 ubox
16 62 0.032101870 ubox
17 55 0.004219457 ubox
17 61 0.031268092 ubox
18 50 0.026506056 ubox
18 52 0.406170801 ubox
19 49 0.018695626 ubox
19 55 0.008924967 ubox
20 49 0.007309256 ubox
20 55 0.008957721 ubox
21 29 0.017139995 ubox
21 32 0.003283714 ubox
21 48 0.005548945 ubox
21 49 0.011659920 ubox
21 53 0.774666321 ubox
21 54 0.009952627 ubox
21 58 0.049108428 ubox
22 31 0.003745838 ubox
22 50 0.035931516 ubox
22 52 0.774154177 ubox
22 57 0.049137916 ubox
23 49 0.025386703 ubox
23 55 0.005562604 ubox
24 49 0.006866913 ubox
24 55 0.014184825 ubox
25 49 0.020261394 ubox
26 49 0.009956016 ubox
27 49 0.007757905 ubox
28 49 0.006289188 ubox
29 46 0.004625672 ubox
29 50 0.994590313 ubox
29 52 0.007083023 ubox
30 49 0.998466627 ubox
31 44 0.007193917 ubox
31 48 0.999885851 ubox
32 43 0.007610919 ubox
32 47 0.999767634 ubox
32 51 0.007652276 ubox
33 42 0.007675873 ubox
33 46 0.996730257 ubox
33 50 0.007934075 ubox
34 44 0.031038147 ubox
34 49 0.007838586 ubox
35 44 0.978286138 ubox
36 41 0.004916396 ubox
36 42 0.004976401 ubox
36 43 0.997083374 ubox
36 47 0.007673241 ubox
37 42 0.996068468 ubox
37 46 0.007825153 ubox
40 50 0.003207645 ubox
41 49 0.003233261 ubox
42 48 0.003228565 ubox
52 58 0.019234447 ubox
53 57 0.019141655 ubox
61 92 0.007947306 ubox
62 91 0.009677680 ubox
63 67 0.003379215 ubox
63 68 0.006499913 ubox
63 87 0.005081051 ubox
63 89 0.003523216 ubox
63 90 0.010525379 ubox
63 91 0.007236711 ubox
63 92 0.020751513 ubox
63 93 0.006214399 ubox
64 86 0.003777572 ubox
65 86 0.008338395 ubox
66 85 0.007234190 ubox
66 91 0.066623399 ubox
67 86 0.007734158 ubox
68 86 0.035252689 ubox
69 82 0.003211342 ubox
69 84 0.008760526 ubox
69 86 0.976021792 ubox
69 95 0.005913844 ubox
69 98 0.004631110 ubox
69 101 0.003770566 ubox
69 104 0.003472627 ubox
70 79 0.003849951 ubox
70 81 0.003225092 ubox
70 83 0.008761295 ubox
70 85 0.998839062 ubox
71 78 0.003871650 ubox
71 82 0.007887012 ubox
71 84 0.999885493 ubox
71 98 0.003896888 ubox
72 83 0.999655694 ubox
72 97 0.003849304 ubox
73 82 0.999422383 ubox
74 79 0.009075402 ubox
74 80 0.033400282 ubox
74 81 0.998892320 ubox
74 91 0.005245454 ubox
75 79 0.041260527 ubox
75 80 0.923615187 ubox
75 81 0.005544419 ubox
75 90 0.005182308 ubox
75 94 0.004196011 ubox
76 80 0.028524570 ubox
76 89 0.005011635 ubox
76 93 0.004481061 ubox
77 88 0.004259794 ubox
77 92 0.004539450 ubox
78 85 0.005863676 ubox
78 91 0.004541518 ubox
79 84 0.005914311 ubox
85 95 0.010597367 ubox
85 98 0.007022401 ubox
85 101 0.005586614 ubox
85 104 0.005161796 ubox
86 91 0.004481715 ubox
86 92 0.004139495 ubox
86 93 0.005332744 ubox
86 94 0.010726979 ubox
86 97 0.007069959 ubox
86 100 0.005599607 ubox
86 103 0.005175229 ubox
91 95 0.042914724 ubox
91 98 0.103500698 ubox
91 101 0.045411864 ubox
91 104 0.035154081 ubox
91 107 0.010401018 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
