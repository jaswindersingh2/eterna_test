%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (471)
} def

/sequence { (\
GGAAAAGAUAUCGGCAGACGAAAGUCGUCGAAAGACGCCAAAAGUUAUCGAAAGAUAACGAUAUCAAACGUAGUAUUCGUACUACGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.003879794 ubox
1 39 0.073135607 ubox
1 65 0.005807178 ubox
1 69 0.030052226 ubox
1 95 0.067471349 ubox
1 98 0.067957854 ubox
1 101 0.069538485 ubox
1 104 0.069843250 ubox
1 107 0.017633611 ubox
2 11 0.003467505 ubox
2 12 0.007837841 ubox
2 38 0.073152554 ubox
2 39 0.003600243 ubox
2 64 0.003859619 ubox
2 65 0.009797056 ubox
2 69 0.023780940 ubox
2 95 0.035590011 ubox
2 98 0.035747770 ubox
2 101 0.036522786 ubox
2 104 0.036376721 ubox
2 107 0.011870354 ubox
3 11 0.007567953 ubox
3 64 0.008910054 ubox
7 12 0.003526507 ubox
7 26 0.004392189 ubox
7 36 0.009269420 ubox
7 65 0.994346702 ubox
7 95 0.005278320 ubox
7 98 0.005050464 ubox
7 101 0.004820495 ubox
7 104 0.004781899 ubox
8 25 0.004450787 ubox
8 64 0.995366448 ubox
9 24 0.004275876 ubox
9 32 0.012229884 ubox
9 33 0.040626052 ubox
9 34 0.003314776 ubox
9 63 0.995329979 ubox
10 62 0.995255989 ubox
11 21 0.015642706 ubox
11 31 0.086324616 ubox
11 35 0.004363739 ubox
11 40 0.003200036 ubox
11 41 0.004734297 ubox
11 61 0.994904290 ubox
11 92 0.006951763 ubox
12 20 0.019661437 ubox
12 30 0.093033211 ubox
12 34 0.005207694 ubox
12 60 0.993562512 ubox
12 91 0.007365226 ubox
13 19 0.035833405 ubox
13 26 0.059928796 ubox
13 29 0.120574665 ubox
13 36 0.010209596 ubox
13 38 0.004656567 ubox
13 39 0.965407635 ubox
13 59 0.111790425 ubox
14 19 0.012923410 ubox
14 25 0.064152112 ubox
14 28 0.121033257 ubox
14 29 0.006975706 ubox
14 36 0.004815703 ubox
14 38 0.966710035 ubox
14 39 0.004376442 ubox
14 45 0.003842300 ubox
14 59 0.003305148 ubox
15 20 0.014033487 ubox
15 24 0.064522421 ubox
15 27 0.120739970 ubox
15 30 0.020938988 ubox
15 34 0.005170667 ubox
15 37 0.965319157 ubox
15 44 0.004246406 ubox
16 25 0.004061548 ubox
16 28 0.007734331 ubox
16 56 0.006663906 ubox
17 25 0.003998192 ubox
17 26 0.969220232 ubox
17 29 0.204667352 ubox
17 36 0.012882064 ubox
17 46 0.017036684 ubox
18 25 0.970906657 ubox
18 28 0.205514244 ubox
18 45 0.022386370 ubox
19 24 0.970734563 ubox
19 27 0.205710707 ubox
19 30 0.019584056 ubox
19 34 0.005719271 ubox
19 44 0.024064911 ubox
19 50 0.003363249 ubox
20 26 0.206857113 ubox
20 29 0.019749249 ubox
20 39 0.005277784 ubox
20 49 0.003388833 ubox
21 25 0.179975942 ubox
21 28 0.018638498 ubox
21 48 0.003332808 ubox
24 29 0.005952303 ubox
24 36 0.032352705 ubox
24 38 0.040740055 ubox
24 39 0.055227993 ubox
25 35 0.032423568 ubox
25 37 0.008581943 ubox
25 55 0.003181242 ubox
26 34 0.032437492 ubox
26 37 0.089597728 ubox
26 54 0.003212527 ubox
27 36 0.968086969 ubox
27 38 0.007945773 ubox
27 39 0.007706356 ubox
28 35 0.969341805 ubox
28 37 0.005050942 ubox
28 51 0.010877705 ubox
29 34 0.969345248 ubox
29 37 0.011914628 ubox
29 50 0.012144416 ubox
30 36 0.058007376 ubox
30 38 0.010576472 ubox
30 39 0.025777893 ubox
30 49 0.012732621 ubox
31 48 0.012274071 ubox
34 38 0.006229418 ubox
34 39 0.026649023 ubox
34 46 0.019645868 ubox
34 65 0.006085756 ubox
35 45 0.024085792 ubox
35 64 0.005957640 ubox
36 44 0.025535223 ubox
37 45 0.020254642 ubox
37 65 0.006540656 ubox
38 44 0.022850420 ubox
39 44 0.016935768 ubox
39 60 0.003854178 ubox
40 62 0.006035460 ubox
40 64 0.004230378 ubox
41 62 0.018312651 ubox
42 62 0.008903977 ubox
44 59 0.991069404 ubox
44 65 0.010499134 ubox
45 58 0.995992708 ubox
46 57 0.998490177 ubox
46 63 0.013244805 ubox
47 56 0.999126052 ubox
47 62 0.014145415 ubox
48 55 0.999427661 ubox
48 61 0.014259672 ubox
49 54 0.999228448 ubox
49 60 0.014290863 ubox
50 59 0.014259497 ubox
60 65 0.010188139 ubox
60 95 0.012490554 ubox
60 98 0.004000017 ubox
62 92 0.003353023 ubox
62 93 0.005553176 ubox
62 94 0.007736371 ubox
64 92 0.034594375 ubox
65 91 0.037539584 ubox
68 80 0.005327810 ubox
69 79 0.005529898 ubox
69 86 0.979593045 ubox
69 91 0.005564181 ubox
70 78 0.005512518 ubox
70 82 0.003350905 ubox
70 85 0.999410455 ubox
70 95 0.011693084 ubox
70 98 0.009873645 ubox
70 101 0.004720904 ubox
70 104 0.003267331 ubox
71 81 0.003356344 ubox
71 84 0.999254157 ubox
71 94 0.011173914 ubox
71 97 0.009704493 ubox
71 100 0.004629989 ubox
71 103 0.003199284 ubox
72 80 0.003310399 ubox
72 83 0.999219978 ubox
73 82 0.999475461 ubox
73 95 0.010410179 ubox
73 98 0.004880748 ubox
73 101 0.003304552 ubox
74 79 0.004273870 ubox
74 81 0.991113337 ubox
74 90 0.007487983 ubox
74 94 0.010109760 ubox
74 97 0.004741116 ubox
74 100 0.003176325 ubox
75 80 0.893087396 ubox
76 81 0.006940501 ubox
76 88 0.025504714 ubox
76 93 0.006858307 ubox
77 87 0.028743489 ubox
77 92 0.007079648 ubox
78 86 0.029106462 ubox
78 91 0.007091603 ubox
79 85 0.029051696 ubox
80 84 0.026173042 ubox
86 95 0.019103887 ubox
86 98 0.007758064 ubox
86 101 0.006217616 ubox
86 104 0.005366436 ubox
91 95 0.043006137 ubox
91 98 0.103688572 ubox
91 101 0.045484170 ubox
91 104 0.035197755 ubox
91 107 0.010413608 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
