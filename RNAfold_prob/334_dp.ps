%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (334)
} def

/sequence { (\
GGAAAGCACGACAAAAAAAUGUCGCCAAAGGCAGUGCAGGCACUGGAAAACAGGAUCGAAAGAUCGCCGCACAGUUUCGACUGUGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.017185217 ubox
1 9 0.012333224 ubox
1 26 0.034443996 ubox
1 32 0.008823450 ubox
1 37 0.009721933 ubox
1 41 0.024174603 ubox
1 43 0.003428307 ubox
1 67 0.005357201 ubox
1 68 0.141145597 ubox
1 78 0.004500669 ubox
1 86 0.005575398 ubox
1 95 0.133820252 ubox
1 98 0.134902622 ubox
1 101 0.137889887 ubox
1 104 0.138507995 ubox
1 107 0.034970690 ubox
2 7 0.010893561 ubox
2 9 0.008693907 ubox
2 25 0.034433795 ubox
2 32 0.004089497 ubox
2 37 0.004052245 ubox
2 41 0.033455220 ubox
2 67 0.140667326 ubox
2 68 0.011812052 ubox
2 77 0.004363006 ubox
2 78 0.008678733 ubox
2 86 0.003877354 ubox
2 95 0.070432088 ubox
2 98 0.070795220 ubox
2 101 0.072289866 ubox
2 104 0.072015940 ubox
2 107 0.023500328 ubox
3 35 0.008709215 ubox
3 76 0.004182984 ubox
3 77 0.008030213 ubox
4 75 0.003348996 ubox
4 76 0.007122358 ubox
4 77 0.004951651 ubox
5 75 0.005629830 ubox
5 76 0.006229872 ubox
6 25 0.015098368 ubox
6 26 0.013551628 ubox
6 32 0.013079769 ubox
6 35 0.005037464 ubox
6 37 0.981271605 ubox
6 41 0.006922158 ubox
6 67 0.036001791 ubox
6 75 0.007346077 ubox
6 86 0.143955133 ubox
6 95 0.010397364 ubox
6 98 0.011511363 ubox
6 101 0.011456939 ubox
6 104 0.011237431 ubox
6 107 0.003925345 ubox
7 24 0.013880321 ubox
7 31 0.013036625 ubox
7 34 0.005318246 ubox
7 36 0.982329560 ubox
7 40 0.006892630 ubox
7 66 0.036248269 ubox
7 74 0.008083641 ubox
7 85 0.144107151 ubox
7 91 0.012706778 ubox
8 35 0.981571535 ubox
8 84 0.143919442 ubox
9 24 0.096209031 ubox
9 34 0.979566607 ubox
9 39 0.003636711 ubox
9 83 0.143577347 ubox
9 91 0.006833903 ubox
10 23 0.995326087 ubox
10 82 0.026911555 ubox
11 22 0.996435907 ubox
12 21 0.996649703 ubox
12 30 0.004361671 ubox
12 31 0.007294162 ubox
13 20 0.910280669 ubox
14 20 0.032882126 ubox
15 20 0.010025110 ubox
16 20 0.004533309 ubox
20 33 0.072736815 ubox
20 38 0.005169317 ubox
21 32 0.073742171 ubox
21 37 0.005740537 ubox
21 81 0.025110187 ubox
22 31 0.073720107 ubox
22 33 0.004311216 ubox
22 36 0.005544892 ubox
22 80 0.025147115 ubox
23 30 0.073682346 ubox
23 79 0.025168120 ubox
24 32 0.989626395 ubox
24 37 0.005778640 ubox
24 41 0.026074931 ubox
24 78 0.024578112 ubox
24 81 0.004570786 ubox
25 30 0.012283919 ubox
25 31 0.991443836 ubox
25 34 0.003454351 ubox
25 36 0.005868610 ubox
25 40 0.026781281 ubox
25 46 0.009915823 ubox
25 53 0.005556274 ubox
25 54 0.003287156 ubox
25 79 0.004421864 ubox
26 30 0.984249924 ubox
26 31 0.011520204 ubox
26 34 0.005649265 ubox
26 39 0.026735305 ubox
26 45 0.009891999 ubox
26 53 0.005256648 ubox
26 79 0.005594585 ubox
26 91 0.003724047 ubox
27 44 0.009168051 ubox
27 77 0.003727170 ubox
28 76 0.003724155 ubox
28 77 0.004618487 ubox
29 35 0.005025761 ubox
29 76 0.004329964 ubox
29 77 0.028585526 ubox
30 35 0.007906275 ubox
30 37 0.015862543 ubox
30 41 0.010562466 ubox
30 43 0.003405690 ubox
30 68 0.051877168 ubox
30 75 0.003370738 ubox
30 76 0.030936424 ubox
30 95 0.003701105 ubox
30 98 0.004128467 ubox
30 101 0.004639126 ubox
30 104 0.004672906 ubox
31 37 0.021965693 ubox
31 41 0.011404778 ubox
31 67 0.051928448 ubox
31 75 0.032227704 ubox
32 36 0.021926338 ubox
32 39 0.010663887 ubox
32 40 0.011400512 ubox
32 45 0.058610441 ubox
32 66 0.050630614 ubox
32 74 0.032482674 ubox
33 44 0.063616836 ubox
34 41 0.041046303 ubox
34 43 0.064753249 ubox
34 64 0.007083426 ubox
34 72 0.150073063 ubox
34 95 0.008822262 ubox
34 98 0.009113370 ubox
34 101 0.009181353 ubox
34 104 0.008913104 ubox
35 40 0.040595737 ubox
35 42 0.065397247 ubox
35 47 0.005633376 ubox
35 63 0.007140551 ubox
35 71 0.150334781 ubox
35 94 0.008591330 ubox
35 96 0.005436611 ubox
35 97 0.008398074 ubox
35 99 0.005396644 ubox
35 100 0.008466917 ubox
35 102 0.005035383 ubox
35 103 0.008206010 ubox
35 105 0.004132614 ubox
36 41 0.065226571 ubox
36 67 0.003646714 ubox
36 70 0.150494150 ubox
36 95 0.006493524 ubox
36 98 0.006443012 ubox
36 101 0.006112781 ubox
36 104 0.004661492 ubox
37 45 0.007358166 ubox
37 66 0.003667592 ubox
37 69 0.150009384 ubox
37 91 0.004787639 ubox
38 44 0.007644256 ubox
39 43 0.007537474 ubox
39 57 0.013220671 ubox
39 67 0.003927984 ubox
39 68 0.979701863 ubox
39 95 0.010383049 ubox
39 98 0.010282617 ubox
39 101 0.010488937 ubox
39 104 0.010487391 ubox
39 107 0.003661975 ubox
40 56 0.013163832 ubox
40 67 0.980908907 ubox
40 68 0.004464101 ubox
40 95 0.006192010 ubox
40 98 0.006165718 ubox
40 101 0.006237532 ubox
40 104 0.006202375 ubox
41 54 0.007515897 ubox
41 66 0.979900332 ubox
41 91 0.007952994 ubox
43 53 0.993809883 ubox
43 62 0.003665864 ubox
44 49 0.006610976 ubox
44 50 0.004874551 ubox
44 52 0.996355269 ubox
44 53 0.005623782 ubox
44 61 0.003437800 ubox
45 51 0.996720988 ubox
46 51 0.021662431 ubox
51 66 0.003836430 ubox
53 65 0.005195944 ubox
53 67 0.014252322 ubox
53 68 0.006916591 ubox
54 64 0.003828135 ubox
54 65 0.998477074 ubox
54 67 0.006291055 ubox
55 64 0.999306498 ubox
56 63 0.999412901 ubox
57 62 0.999229015 ubox
57 66 0.009010017 ubox
58 65 0.015438407 ubox
59 64 0.014115835 ubox
64 92 0.005335297 ubox
65 91 0.005876979 ubox
67 91 0.004447823 ubox
68 91 0.007024050 ubox
69 86 0.987512131 ubox
70 85 0.988577365 ubox
71 84 0.988399634 ubox
72 83 0.988594669 ubox
73 82 0.993728522 ubox
74 78 0.007321327 ubox
74 81 0.993752544 ubox
74 95 0.040589354 ubox
75 79 0.035861135 ubox
75 80 0.918636323 ubox
75 94 0.040635371 ubox
76 80 0.028138850 ubox
76 93 0.040646788 ubox
77 92 0.040701994 ubox
78 91 0.040684303 ubox
81 91 0.003272606 ubox
82 87 0.004749191 ubox
82 88 0.007732798 ubox
82 89 0.005179052 ubox
82 90 0.003734723 ubox
82 96 0.007976376 ubox
82 99 0.005725365 ubox
82 102 0.004706030 ubox
82 105 0.003970186 ubox
83 95 0.008610705 ubox
83 98 0.006201933 ubox
83 101 0.005102683 ubox
83 104 0.004308103 ubox
84 94 0.008530028 ubox
84 97 0.006012182 ubox
84 100 0.004965424 ubox
84 103 0.004187632 ubox
86 91 0.006410035 ubox
91 95 0.046156778 ubox
91 98 0.107837229 ubox
91 101 0.045668880 ubox
91 104 0.033963867 ubox
91 107 0.010017335 ubox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
