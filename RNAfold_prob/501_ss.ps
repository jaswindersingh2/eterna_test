%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAGAUGAUUUAUGUACAAAAUAGAUUUAAUAUGGAAAUAUGUUAGAUUUGGUAUAUAGAUUAUUGAUUAUGUUCGUAUGAUUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

/coor [
[15.34907150 163.50735474]
[19.27591896 149.03047180]
[26.05425453 135.64936829]
[35.40295410 123.91898346]
[46.93428802 114.32584381]
[60.17000198 107.26780701]
[74.56115723 103.03760529]
[89.51004791 101.81066895]
[77.22277069 93.20702362]
[64.93548584 84.60337067]
[52.64820862 75.99972534]
[40.36092758 67.39608002]
[28.07364655 58.79243469]
[15.78636551 50.18878937]
[3.49908471 41.58514023]
[-8.78819561 32.98149490]
[-21.07547569 24.37784767]
[-33.36275864 15.77420139]
[-45.65003967 7.17055511]
[-57.93731689 -1.43309164]
[-62.63650131 -1.64467478]
[-66.56720734 -3.26547360]
[-69.36299133 -5.84926701]
[-70.85354614 -8.87422943]
[-71.07184601 -11.81852818]
[-82.27722168 -21.79046631]
[-93.48259735 -31.76240540]
[-104.68797302 -41.73434067]
[-115.89334869 -51.70627975]
[-127.09872437 -61.67821884]
[-138.30410767 -71.65015411]
[-149.50947571 -81.62209320]
[-160.71485901 -91.59403229]
[-171.92022705 -101.56597137]
[-183.12561035 -111.53791046]
[-194.33097839 -121.50984955]
[-205.53636169 -131.48178101]
[-221.69738770 -134.26626587]
[-227.11178589 -149.74580383]
[-216.20970154 -161.99638367]
[-200.20625305 -158.41564941]
[-195.56442261 -142.68716431]
[-184.35903931 -132.71522522]
[-173.15367126 -122.74328613]
[-161.94828796 -112.77134705]
[-150.74291992 -102.79940796]
[-139.53753662 -92.82746887]
[-128.33216858 -82.85552979]
[-117.12678528 -72.88359833]
[-105.92140961 -62.91165543]
[-94.71603394 -52.93972015]
[-83.51065826 -42.96778107]
[-72.30528259 -32.99584198]
[-61.09990692 -23.02390480]
[-49.33367157 -13.72037220]
[-37.04639053 -5.11672592]
[-24.75911140 3.48692083]
[-12.47183037 12.09056759]
[-0.18454933 20.69421387]
[12.10273170 29.29786110]
[24.39001274 37.90150833]
[36.67729187 46.50515366]
[48.96457291 55.10879898]
[61.25185394 63.71244812]
[73.53913116 72.31609344]
[85.82641602 80.91973877]
[98.11369324 89.52338409]
[112.80380249 92.55664825]
[127.49391174 89.52338409]
[142.18402100 86.49011993]
[156.87413025 83.45685577]
[171.56423950 80.42359924]
[186.25434875 77.39033508]
[200.94445801 74.35707092]
[215.63456726 71.32380676]
[227.51876831 60.02345276]
[243.16851807 64.92417145]
[246.48472595 80.98451996]
[234.05593872 91.68299103]
[218.66783142 86.01391602]
[203.97772217 89.04718018]
[189.28761292 92.08044434]
[174.59750366 95.11370850]
[159.90739441 98.14696503]
[145.21728516 101.18022919]
[130.52717590 104.21349335]
[115.83706665 107.24675751]
[129.07812500 114.29478455]
[140.61669922 123.87919617]
[149.97427368 135.60250854]
[156.76272583 148.97848511]
[160.70051575 163.45239258]
[161.62432861 178.42391968]
[159.49586487 193.27212524]
[154.40336609 207.38122559]
[146.55807495 220.16603088]
[136.28535461 231.09631348]
[124.01124573 239.71875000]
[110.24481964 245.67572021]
[95.55702972 248.72018433]
[80.55702972 248.72586060]
[65.86693573 245.69250488]
[52.09600830 239.74594116]
[39.81538773 231.13279724]
[29.53439903 220.21028137]
[21.67943573 207.43141174]
[16.57627869 193.32617188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 67]
[9 66]
[10 65]
[11 64]
[12 63]
[13 62]
[14 61]
[15 60]
[16 59]
[17 58]
[18 57]
[19 56]
[20 55]
[25 54]
[26 53]
[27 52]
[28 51]
[29 50]
[30 49]
[31 48]
[32 47]
[33 46]
[34 45]
[35 44]
[36 43]
[37 42]
[68 87]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
