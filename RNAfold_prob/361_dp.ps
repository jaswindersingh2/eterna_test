%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (361)
} def

/sequence { (\
GGAAAGCAGCGACUAAAAUGUCGGCCAAAGGCACUGCAGGCACACGAAAAGUGGAUGGAAACAUCGCCCGUGUCCUUCGGGACAUGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.013970247 ubox
1 10 0.003244917 ubox
1 26 0.003218776 ubox
1 32 0.003684349 ubox
1 35 0.004224682 ubox
1 37 0.008245928 ubox
1 41 0.034274206 ubox
1 43 0.010024287 ubox
1 67 0.007587412 ubox
1 68 0.096758550 ubox
1 69 0.033013795 ubox
1 95 0.137839506 ubox
1 98 0.138812498 ubox
1 101 0.141915821 ubox
1 104 0.142573291 ubox
1 107 0.035999270 ubox
2 7 0.009081740 ubox
2 34 0.004487531 ubox
2 37 0.004638202 ubox
2 41 0.047586170 ubox
2 67 0.096705809 ubox
2 68 0.033543476 ubox
2 69 0.007359480 ubox
2 95 0.072502846 ubox
2 98 0.072760575 ubox
2 101 0.074314401 ubox
2 104 0.074038500 ubox
2 107 0.024161177 ubox
3 35 0.006742336 ubox
5 35 0.006113037 ubox
6 25 0.013619107 ubox
6 32 0.008728197 ubox
6 34 0.006279283 ubox
6 37 0.994604006 ubox
6 41 0.011994326 ubox
6 67 0.035533464 ubox
6 95 0.011044242 ubox
6 98 0.011788468 ubox
6 101 0.011742609 ubox
6 104 0.011538166 ubox
6 107 0.004026622 ubox
7 24 0.013670668 ubox
7 31 0.008719074 ubox
7 36 0.995676888 ubox
7 40 0.011972156 ubox
7 66 0.035639524 ubox
7 91 0.013593436 ubox
8 35 0.994414976 ubox
9 25 0.012901068 ubox
9 34 0.988413233 ubox
9 37 0.013189002 ubox
9 67 0.006122054 ubox
9 95 0.011059011 ubox
9 98 0.010968092 ubox
9 101 0.011100940 ubox
9 104 0.010456006 ubox
9 107 0.003620805 ubox
10 23 0.987721100 ubox
10 24 0.009776258 ubox
10 36 0.012811274 ubox
10 66 0.005919681 ubox
11 22 0.999764564 ubox
11 32 0.007824094 ubox
12 21 0.999678948 ubox
13 20 0.999313506 ubox
13 30 0.005360673 ubox
13 31 0.005575558 ubox
14 18 0.030517514 ubox
14 20 0.007891043 ubox
14 29 0.005251377 ubox
14 30 0.005415418 ubox
15 19 0.031215542 ubox
19 33 0.014337424 ubox
19 38 0.004897521 ubox
20 26 0.003164636 ubox
20 32 0.014495023 ubox
20 37 0.005437704 ubox
21 31 0.014482685 ubox
21 36 0.005327783 ubox
22 30 0.014480766 ubox
23 32 0.012337748 ubox
23 34 0.017062377 ubox
23 68 0.003608147 ubox
24 32 0.995546557 ubox
24 37 0.004583702 ubox
24 41 0.044200859 ubox
24 67 0.003878751 ubox
25 30 0.013552264 ubox
25 31 0.996733187 ubox
25 36 0.004413170 ubox
25 40 0.044263043 ubox
25 66 0.003861983 ubox
25 80 0.003735082 ubox
26 30 0.989493399 ubox
26 31 0.010559729 ubox
26 39 0.044176938 ubox
26 79 0.003760473 ubox
28 77 0.004155456 ubox
29 35 0.021487692 ubox
29 76 0.004303027 ubox
30 34 0.021181034 ubox
30 35 0.007285171 ubox
30 37 0.021301387 ubox
30 41 0.003838897 ubox
30 68 0.012833888 ubox
30 75 0.004305769 ubox
31 37 0.018634761 ubox
31 41 0.005984378 ubox
31 67 0.012864238 ubox
31 74 0.004293066 ubox
32 36 0.018706345 ubox
32 39 0.003889339 ubox
32 40 0.005984753 ubox
32 53 0.005867313 ubox
32 66 0.012804449 ubox
33 52 0.007262328 ubox
34 39 0.005983156 ubox
34 40 0.006723749 ubox
34 51 0.007393145 ubox
34 80 0.005033880 ubox
34 91 0.006248785 ubox
35 39 0.006100545 ubox
35 42 0.008684527 ubox
35 50 0.007321190 ubox
35 79 0.005044843 ubox
35 90 0.006090609 ubox
35 96 0.005557909 ubox
35 99 0.005530860 ubox
35 102 0.005532861 ubox
35 105 0.005455911 ubox
36 41 0.009746105 ubox
36 67 0.004471402 ubox
36 71 0.005164819 ubox
36 78 0.005039661 ubox
36 95 0.005989481 ubox
36 98 0.005959678 ubox
36 101 0.005964487 ubox
36 104 0.005882149 ubox
37 66 0.004498339 ubox
37 70 0.005802089 ubox
37 91 0.003541924 ubox
38 76 0.006583039 ubox
39 45 0.009688853 ubox
39 67 0.005223963 ubox
39 68 0.977479580 ubox
39 69 0.012755781 ubox
39 75 0.007186457 ubox
39 95 0.015267079 ubox
39 98 0.015179259 ubox
39 101 0.015474915 ubox
39 104 0.015469476 ubox
39 107 0.005404162 ubox
40 45 0.004269809 ubox
40 52 0.004266685 ubox
40 67 0.979880198 ubox
40 68 0.010726049 ubox
40 74 0.007187957 ubox
40 95 0.009097911 ubox
40 98 0.009069130 ubox
40 101 0.009233621 ubox
40 104 0.009189920 ubox
41 46 0.003781571 ubox
41 51 0.004413582 ubox
41 53 0.061546212 ubox
41 54 0.006651423 ubox
41 66 0.978785434 ubox
41 91 0.011056042 ubox
42 52 0.066728337 ubox
42 73 0.007230520 ubox
43 51 0.067180295 ubox
43 53 0.993994592 ubox
43 72 0.007266664 ubox
44 52 0.995763926 ubox
44 71 0.007286699 ubox
45 51 0.995936542 ubox
45 53 0.022529753 ubox
45 70 0.007296707 ubox
46 52 0.018818200 ubox
46 65 0.003847149 ubox
46 69 0.007241701 ubox
47 52 0.003687049 ubox
47 64 0.003624809 ubox
51 62 0.003186851 ubox
51 64 0.003543952 ubox
51 67 0.021130456 ubox
51 68 0.011770204 ubox
51 98 0.003801277 ubox
51 101 0.003868351 ubox
51 104 0.004027157 ubox
52 61 0.003184655 ubox
52 63 0.004180859 ubox
52 66 0.020597937 ubox
52 97 0.003375767 ubox
52 100 0.003441801 ubox
52 103 0.003586549 ubox
53 62 0.004276457 ubox
53 65 0.016298690 ubox
53 67 0.009934849 ubox
53 95 0.003441723 ubox
53 98 0.003428554 ubox
53 101 0.003483035 ubox
54 64 0.008961129 ubox
54 65 0.998381437 ubox
55 64 0.999288693 ubox
56 63 0.999261733 ubox
56 99 0.003437747 ubox
57 62 0.999044349 ubox
57 65 0.004991516 ubox
57 68 0.006127327 ubox
57 98 0.003667929 ubox
58 62 0.007647858 ubox
58 64 0.003661659 ubox
58 65 0.013887894 ubox
58 67 0.006147094 ubox
59 64 0.012714742 ubox
64 92 0.005704702 ubox
65 91 0.006363993 ubox
66 83 0.003357930 ubox
67 81 0.005337403 ubox
67 86 0.003296428 ubox
67 91 0.006365072 ubox
68 80 0.005350542 ubox
68 86 0.008448575 ubox
68 91 0.009740996 ubox
69 79 0.005352157 ubox
69 86 0.991059390 ubox
69 91 0.008260861 ubox
70 78 0.005326761 ubox
70 85 0.998336063 ubox
71 84 0.999479307 ubox
72 83 0.999925164 ubox
73 81 0.007150382 ubox
73 82 0.999794134 ubox
74 80 0.013670029 ubox
74 81 0.999839114 ubox
75 79 0.017807665 ubox
75 80 0.999017471 ubox
75 81 0.003232811 ubox
76 80 0.004112787 ubox
77 87 0.003469534 ubox
78 86 0.003584717 ubox
79 85 0.003351153 ubox
85 96 0.008854269 ubox
85 99 0.003477137 ubox
86 95 0.016286903 ubox
86 98 0.006397151 ubox
86 101 0.004936504 ubox
86 104 0.004083010 ubox
91 95 0.046468184 ubox
91 98 0.108292420 ubox
91 101 0.045718294 ubox
91 104 0.033870200 ubox
91 107 0.009986365 ubox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
