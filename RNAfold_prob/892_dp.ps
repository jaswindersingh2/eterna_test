%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (892)
} def

/sequence { (\
GGAAAGCAAGUGCACGCCCAAGCGAAAGCACGGAAACGAAAGGAGCGAAAGCACAACCGAAAGGAAGCGCACGACUUCGGUCGUGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.172214720 ubox
1 18 0.009212626 ubox
1 19 0.006870636 ubox
1 37 0.022265054 ubox
1 52 0.005114781 ubox
1 54 0.007734917 ubox
1 57 0.004873850 ubox
1 58 0.068381534 ubox
1 68 0.043121067 ubox
1 86 0.005047083 ubox
1 95 0.115567764 ubox
1 98 0.118710739 ubox
1 101 0.117540824 ubox
1 104 0.118034674 ubox
1 107 0.029812196 ubox
2 7 0.082347680 ubox
2 17 0.009518361 ubox
2 18 0.006825215 ubox
2 37 0.018506346 ubox
2 52 0.003173751 ubox
2 54 0.004525403 ubox
2 57 0.068228668 ubox
2 58 0.007000855 ubox
2 68 0.036441653 ubox
2 86 0.003554136 ubox
2 95 0.060921944 ubox
2 98 0.059557696 ubox
2 101 0.060402095 ubox
2 104 0.060193353 ubox
2 107 0.019644729 ubox
6 13 0.043364050 ubox
6 17 0.008277295 ubox
6 29 0.009741528 ubox
6 37 0.016538940 ubox
6 46 0.023072620 ubox
6 52 0.016778720 ubox
6 54 0.008516359 ubox
6 57 0.024812678 ubox
6 58 0.052016198 ubox
6 68 0.559922885 ubox
6 86 0.033324222 ubox
6 95 0.062183767 ubox
6 98 0.062067174 ubox
6 101 0.061910784 ubox
6 104 0.060641359 ubox
6 107 0.021138529 ubox
7 12 0.043351268 ubox
7 16 0.008298740 ubox
7 28 0.009741278 ubox
7 32 0.017251094 ubox
7 33 0.057478670 ubox
7 38 0.005975342 ubox
7 43 0.004270265 ubox
7 45 0.023067053 ubox
7 51 0.016774548 ubox
7 59 0.018345089 ubox
7 63 0.005439309 ubox
7 64 0.007231614 ubox
7 67 0.560024244 ubox
7 85 0.033215761 ubox
7 91 0.083081207 ubox
8 84 0.016065914 ubox
10 29 0.013697160 ubox
10 31 0.246225798 ubox
10 52 0.024502468 ubox
10 54 0.963366254 ubox
10 68 0.004106720 ubox
10 95 0.012975254 ubox
10 98 0.012766711 ubox
10 101 0.012911787 ubox
10 104 0.012874760 ubox
10 107 0.004489811 ubox
11 24 0.009692742 ubox
11 28 0.013660083 ubox
11 30 0.248145955 ubox
11 47 0.006291244 ubox
11 51 0.024438215 ubox
11 53 0.964735203 ubox
11 67 0.003451285 ubox
11 87 0.040062634 ubox
11 94 0.011790259 ubox
11 96 0.003887318 ubox
11 97 0.011465169 ubox
11 99 0.003766135 ubox
11 100 0.011607968 ubox
11 102 0.003626257 ubox
11 103 0.011574789 ubox
11 106 0.004079625 ubox
12 23 0.010264317 ubox
12 29 0.249157245 ubox
12 46 0.006601419 ubox
12 52 0.965540584 ubox
12 68 0.009866510 ubox
12 86 0.043248659 ubox
12 95 0.004561435 ubox
12 98 0.004446839 ubox
12 101 0.004346867 ubox
12 104 0.003346517 ubox
13 22 0.010263327 ubox
13 28 0.249044709 ubox
13 45 0.006590910 ubox
13 51 0.965097494 ubox
13 67 0.009865310 ubox
13 85 0.043254901 ubox
14 84 0.043164046 ubox
15 24 0.249649846 ubox
15 38 0.008623192 ubox
15 47 0.964375711 ubox
15 83 0.043149886 ubox
16 23 0.250247073 ubox
16 37 0.008784842 ubox
16 46 0.966674057 ubox
16 68 0.007433006 ubox
16 81 0.006106019 ubox
16 82 0.042490718 ubox
17 22 0.249367868 ubox
17 24 0.007239238 ubox
17 33 0.006905848 ubox
17 43 0.007850217 ubox
17 45 0.966533710 ubox
17 47 0.004430883 ubox
17 67 0.007415757 ubox
17 80 0.029081475 ubox
18 22 0.006327625 ubox
18 32 0.007441141 ubox
18 33 0.099757477 ubox
18 42 0.010352986 ubox
18 43 0.956322263 ubox
18 45 0.004476631 ubox
18 79 0.028918196 ubox
18 80 0.031091558 ubox
19 24 0.003179894 ubox
19 32 0.099894117 ubox
19 33 0.005036441 ubox
19 42 0.955330127 ubox
19 43 0.075922779 ubox
19 79 0.031132146 ubox
20 77 0.018370723 ubox
21 76 0.019002754 ubox
22 29 0.903706401 ubox
22 31 0.014630452 ubox
22 37 0.027570787 ubox
22 46 0.005144816 ubox
22 52 0.004790630 ubox
22 75 0.019013814 ubox
23 28 0.904317044 ubox
23 32 0.056834549 ubox
23 33 0.010474106 ubox
23 38 0.317404198 ubox
23 42 0.005213994 ubox
23 45 0.005150075 ubox
23 51 0.004794751 ubox
23 73 0.018947795 ubox
24 29 0.028250126 ubox
24 31 0.056422083 ubox
24 37 0.313518367 ubox
24 72 0.018841052 ubox
28 37 0.013192434 ubox
28 46 0.011135007 ubox
28 68 0.018006208 ubox
28 70 0.007829808 ubox
28 86 0.006016842 ubox
29 33 0.078188015 ubox
29 38 0.009028954 ubox
29 42 0.004490027 ubox
29 45 0.011134285 ubox
29 67 0.017990876 ubox
29 69 0.007822300 ubox
29 85 0.006023356 ubox
30 84 0.005997912 ubox
31 38 0.878963418 ubox
31 42 0.011610926 ubox
31 43 0.007571804 ubox
31 47 0.008793789 ubox
31 59 0.005447559 ubox
31 67 0.004835092 ubox
31 83 0.005977730 ubox
32 37 0.897976400 ubox
32 46 0.014164267 ubox
32 52 0.007536941 ubox
32 54 0.005379478 ubox
32 58 0.011769626 ubox
32 68 0.015531889 ubox
32 82 0.005847837 ubox
32 86 0.006946509 ubox
32 95 0.012685959 ubox
32 98 0.012546201 ubox
32 101 0.012891697 ubox
32 104 0.013205481 ubox
32 107 0.004959974 ubox
33 37 0.033900249 ubox
33 46 0.015681430 ubox
33 52 0.005206151 ubox
33 57 0.011744070 ubox
33 68 0.011251675 ubox
33 81 0.004917350 ubox
33 86 0.013922309 ubox
33 95 0.007834824 ubox
33 98 0.007673512 ubox
33 101 0.007835816 ubox
33 104 0.008024453 ubox
36 84 0.047971039 ubox
37 42 0.093363143 ubox
37 43 0.056836390 ubox
37 45 0.009777691 ubox
37 47 0.029929544 ubox
37 59 0.031691076 ubox
37 63 0.026204361 ubox
37 64 0.009257290 ubox
37 67 0.003630689 ubox
37 79 0.004572970 ubox
37 83 0.051548591 ubox
37 91 0.007523029 ubox
38 46 0.030379020 ubox
38 57 0.003743281 ubox
38 58 0.032196976 ubox
38 68 0.004992989 ubox
38 78 0.004627243 ubox
38 82 0.051827256 ubox
38 95 0.008317674 ubox
38 98 0.009033942 ubox
38 101 0.008630157 ubox
38 104 0.008398087 ubox
38 107 0.003177239 ubox
39 77 0.004038269 ubox
39 81 0.051592881 ubox
41 76 0.003179829 ubox
42 46 0.003739039 ubox
42 52 0.005348880 ubox
42 54 0.089545891 ubox
42 57 0.006852430 ubox
42 58 0.039585441 ubox
42 68 0.004467169 ubox
42 75 0.003763849 ubox
42 78 0.063995230 ubox
42 95 0.019120294 ubox
42 98 0.011739169 ubox
42 101 0.011486282 ubox
42 104 0.011393855 ubox
42 107 0.003970670 ubox
43 52 0.006505849 ubox
43 54 0.083067808 ubox
43 57 0.039493179 ubox
43 68 0.004582127 ubox
43 77 0.064154188 ubox
43 95 0.007378547 ubox
43 98 0.006679173 ubox
43 101 0.006656770 ubox
43 104 0.006532021 ubox
44 76 0.064242811 ubox
45 52 0.230413713 ubox
45 54 0.010474299 ubox
45 68 0.015359142 ubox
45 75 0.064272269 ubox
45 95 0.003592767 ubox
46 51 0.230583744 ubox
46 59 0.004592745 ubox
46 67 0.015371722 ubox
46 73 0.063996089 ubox
46 91 0.019345374 ubox
47 52 0.011047440 ubox
47 54 0.006811662 ubox
47 58 0.004634038 ubox
47 72 0.063837792 ubox
51 68 0.055811559 ubox
51 70 0.059342737 ubox
51 86 0.064066933 ubox
52 59 0.004312264 ubox
52 67 0.055778776 ubox
52 69 0.059358341 ubox
52 85 0.064140305 ubox
53 84 0.064146722 ubox
54 59 0.008061419 ubox
54 63 0.012588635 ubox
54 64 0.003930311 ubox
54 67 0.072236197 ubox
54 83 0.063962110 ubox
54 91 0.004025585 ubox
56 81 0.064109420 ubox
57 63 0.031187958 ubox
57 64 0.934952230 ubox
57 67 0.011422084 ubox
57 80 0.064752947 ubox
57 91 0.003586034 ubox
58 63 0.938814799 ubox
58 64 0.088883027 ubox
58 67 0.040499988 ubox
58 69 0.006027143 ubox
58 79 0.064754245 ubox
58 91 0.006326205 ubox
59 68 0.036220055 ubox
59 78 0.064672033 ubox
59 95 0.015014931 ubox
59 98 0.008507046 ubox
59 101 0.003992920 ubox
59 104 0.003332490 ubox
60 77 0.056566015 ubox
61 76 0.043139998 ubox
61 77 0.030367017 ubox
62 76 0.043067572 ubox
62 77 0.004191653 ubox
63 68 0.063656848 ubox
63 70 0.003847074 ubox
63 72 0.025915085 ubox
63 75 0.052856388 ubox
63 76 0.012967009 ubox
63 95 0.018113339 ubox
63 98 0.006538178 ubox
63 101 0.005075283 ubox
63 104 0.004494368 ubox
64 68 0.015507507 ubox
64 70 0.007033345 ubox
64 72 0.008042307 ubox
64 75 0.015234074 ubox
64 78 0.005066068 ubox
64 95 0.007615362 ubox
65 77 0.005468029 ubox
66 76 0.006964191 ubox
67 72 0.030115450 ubox
67 75 0.007393631 ubox
67 86 0.016302590 ubox
67 95 0.010556213 ubox
67 98 0.007965912 ubox
67 101 0.007373291 ubox
67 104 0.006466045 ubox
68 73 0.007446610 ubox
68 85 0.015410523 ubox
68 91 0.038484817 ubox
69 84 0.010930885 ubox
69 86 0.994333395 ubox
70 83 0.009509170 ubox
70 85 0.995439023 ubox
71 81 0.003437607 ubox
71 84 0.995331476 ubox
72 80 0.003380138 ubox
72 83 0.995532068 ubox
73 82 0.995581432 ubox
74 81 0.995307013 ubox
75 79 0.011736904 ubox
75 80 0.994316520 ubox
76 80 0.004011648 ubox
86 91 0.006772890 ubox
91 95 0.045592074 ubox
91 98 0.106903869 ubox
91 101 0.045486128 ubox
91 104 0.034032999 ubox
91 107 0.010037820 ubox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
17 45 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
57 64 0.9500000 lbox
58 63 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
