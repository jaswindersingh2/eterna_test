%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (120)
} def

/sequence { (\
GGAAAAAAGCGCCAGACGGCCUAGCAAAGCACCAUGGUAGCAGCAAGAGCGGGACUGGAAGCAAAAAUCUAAGACUUCGGUCUUAGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.057326763 ubox
1 33 0.004821200 ubox
1 62 0.011283715 ubox
1 68 0.004435346 ubox
1 69 0.004056631 ubox
1 70 0.009447125 ubox
1 95 0.067382975 ubox
1 98 0.067839183 ubox
1 101 0.069412709 ubox
1 104 0.069696309 ubox
1 107 0.017597011 ubox
2 10 0.017714571 ubox
2 32 0.004815610 ubox
2 62 0.008265110 ubox
2 68 0.006789996 ubox
2 69 0.014234735 ubox
2 95 0.035546242 ubox
2 98 0.035694597 ubox
2 101 0.036446957 ubox
2 104 0.036309689 ubox
2 107 0.011848210 ubox
3 68 0.016639253 ubox
4 68 0.006091111 ubox
5 68 0.004057786 ubox
8 22 0.021621646 ubox
8 68 0.003207510 ubox
9 21 0.022443133 ubox
9 25 0.015121376 ubox
9 41 0.011593341 ubox
9 62 0.973495673 ubox
9 95 0.008514356 ubox
9 98 0.008542924 ubox
9 101 0.008657825 ubox
9 104 0.008686316 ubox
10 24 0.015126519 ubox
10 40 0.011607973 ubox
10 61 0.974078169 ubox
10 91 0.009520582 ubox
11 20 0.030672221 ubox
11 38 0.011525880 ubox
11 62 0.028892568 ubox
11 95 0.008493198 ubox
11 98 0.008473722 ubox
11 101 0.008646831 ubox
11 104 0.008596497 ubox
11 107 0.003251394 ubox
12 19 0.030716902 ubox
12 37 0.012278403 ubox
12 58 0.995865590 ubox
12 61 0.021773651 ubox
13 18 0.030673417 ubox
13 36 0.012281675 ubox
13 57 0.999318069 ubox
13 58 0.008095634 ubox
14 35 0.012189329 ubox
14 56 0.998932268 ubox
15 55 0.995900423 ubox
17 51 0.128394933 ubox
17 52 0.959238427 ubox
17 53 0.161256667 ubox
17 57 0.008345486 ubox
18 32 0.003743543 ubox
18 50 0.124095412 ubox
18 56 0.008431602 ubox
19 30 0.012201913 ubox
19 38 0.004598662 ubox
19 41 0.008542259 ubox
19 44 0.007028477 ubox
19 50 0.991042340 ubox
19 55 0.008508585 ubox
20 29 0.012090082 ubox
20 37 0.004709536 ubox
20 40 0.006122956 ubox
20 43 0.006987437 ubox
20 47 0.003368805 ubox
20 49 0.991877290 ubox
20 51 0.004759827 ubox
20 52 0.007619589 ubox
20 53 0.013663053 ubox
21 36 0.004715053 ubox
21 40 0.040414466 ubox
21 43 0.013705567 ubox
21 47 0.994040254 ubox
21 49 0.019325039 ubox
21 51 0.007545781 ubox
21 52 0.013692518 ubox
21 58 0.007440323 ubox
22 28 0.003242400 ubox
22 39 0.041129973 ubox
22 42 0.013720106 ubox
22 45 0.033878106 ubox
22 46 0.975027877 ubox
22 47 0.023726334 ubox
22 48 0.026060340 ubox
22 51 0.012270744 ubox
22 57 0.007466950 ubox
23 38 0.041283341 ubox
23 56 0.007484539 ubox
24 30 0.010446454 ubox
24 41 0.029511096 ubox
24 44 0.996547282 ubox
24 50 0.013601967 ubox
24 55 0.007471395 ubox
24 62 0.005496542 ubox
25 29 0.010384250 ubox
25 36 0.041444108 ubox
25 40 0.029574171 ubox
25 43 0.996673744 ubox
25 49 0.013598128 ubox
25 53 0.005084066 ubox
25 61 0.005494625 ubox
26 35 0.040571244 ubox
26 38 0.004169557 ubox
27 38 0.005562123 ubox
28 35 0.006417406 ubox
28 38 0.072880436 ubox
28 56 0.004623255 ubox
29 33 0.004819342 ubox
29 35 0.003489233 ubox
29 38 0.186406114 ubox
29 41 0.965516940 ubox
29 44 0.014992930 ubox
29 50 0.007488767 ubox
29 55 0.004690327 ubox
29 62 0.025590098 ubox
30 36 0.096322305 ubox
30 37 0.188989613 ubox
30 40 0.965579104 ubox
30 43 0.015014219 ubox
30 49 0.007480981 ubox
30 61 0.025581014 ubox
31 35 0.079046227 ubox
31 38 0.848418144 ubox
32 36 0.070403920 ubox
32 37 0.848760211 ubox
32 40 0.004891273 ubox
32 47 0.003867604 ubox
32 52 0.004802123 ubox
32 58 0.023443899 ubox
33 37 0.121883555 ubox
33 40 0.012000858 ubox
33 47 0.003396784 ubox
33 51 0.004796021 ubox
33 57 0.023470344 ubox
33 58 0.010750539 ubox
34 38 0.017186942 ubox
34 56 0.019572418 ubox
35 39 0.007155164 ubox
35 42 0.046754147 ubox
35 45 0.006861567 ubox
35 57 0.011479508 ubox
35 63 0.004825158 ubox
36 41 0.047291396 ubox
36 44 0.007097452 ubox
36 55 0.012098887 ubox
36 56 0.018629576 ubox
36 62 0.005359294 ubox
37 44 0.005162934 ubox
37 55 0.022482246 ubox
38 42 0.003610552 ubox
38 43 0.005067297 ubox
38 52 0.003372632 ubox
38 54 0.022356861 ubox
38 60 0.005021591 ubox
40 50 0.014636955 ubox
41 47 0.003483735 ubox
41 49 0.014637940 ubox
41 51 0.011599671 ubox
41 52 0.011400184 ubox
41 53 0.003473617 ubox
41 57 0.006534088 ubox
42 56 0.006584477 ubox
43 50 0.028933799 ubox
43 55 0.006558493 ubox
43 62 0.004283740 ubox
44 49 0.028931662 ubox
44 53 0.005969363 ubox
44 61 0.004282490 ubox
48 56 0.003461920 ubox
49 55 0.003486018 ubox
49 62 0.006654006 ubox
50 61 0.006659507 ubox
56 63 0.004788501 ubox
56 99 0.004799524 ubox
57 62 0.005292039 ubox
57 98 0.005229103 ubox
61 95 0.019794686 ubox
61 98 0.003952042 ubox
62 91 0.015874731 ubox
63 68 0.005424379 ubox
64 68 0.003614660 ubox
68 87 0.933883941 ubox
68 88 0.042835163 ubox
68 89 0.009244858 ubox
68 90 0.006644956 ubox
68 91 0.003173594 ubox
68 92 0.007960651 ubox
69 86 0.999380516 ubox
69 91 0.007684513 ubox
70 85 0.999551225 ubox
70 90 0.006042568 ubox
71 84 0.999268831 ubox
72 83 0.999419252 ubox
73 82 0.999975502 ubox
74 81 0.999687265 ubox
75 79 0.011786296 ubox
75 80 0.998692492 ubox
76 80 0.004029232 ubox
86 95 0.003248558 ubox
91 95 0.043047857 ubox
91 98 0.103769944 ubox
91 101 0.045516124 ubox
91 104 0.035217910 ubox
91 107 0.010419356 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
68 87 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
