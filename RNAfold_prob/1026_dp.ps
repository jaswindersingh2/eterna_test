%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1026)
} def

/sequence { (\
GGAAAAGCGAAACGCAAGCGGAAACCGCAAGCAUCAAAGAUGCAAGUACAAAGUACAAGCCAAAGGCAGAACAACUUCGGUUGUUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.029232134 ubox
1 13 0.012019526 ubox
1 15 0.006540557 ubox
1 26 0.006929022 ubox
1 49 0.010932803 ubox
1 56 0.011856905 ubox
1 60 0.003930820 ubox
1 61 0.109285697 ubox
1 67 0.011429400 ubox
1 72 0.012549021 ubox
1 75 0.008379400 ubox
1 76 0.008309938 ubox
1 78 0.054031090 ubox
1 86 0.031641560 ubox
1 95 0.397191981 ubox
1 98 0.400009607 ubox
1 101 0.411267111 ubox
1 104 0.413455572 ubox
1 107 0.104418354 ubox
2 8 0.020003279 ubox
2 13 0.008670804 ubox
2 15 0.007121694 ubox
2 25 0.006928629 ubox
2 49 0.006056936 ubox
2 56 0.006558372 ubox
2 60 0.109011497 ubox
2 61 0.007026334 ubox
2 67 0.008243540 ubox
2 72 0.006623175 ubox
2 75 0.009573879 ubox
2 77 0.052648373 ubox
2 78 0.077618039 ubox
2 85 0.023924909 ubox
2 86 0.032833955 ubox
2 95 0.209624620 ubox
2 98 0.210400516 ubox
2 101 0.216110035 ubox
2 104 0.215453462 ubox
2 107 0.070322645 ubox
3 76 0.049495469 ubox
3 77 0.076846770 ubox
3 84 0.018836602 ubox
3 85 0.028591883 ubox
4 76 0.068619855 ubox
4 77 0.005045390 ubox
4 84 0.016271531 ubox
5 76 0.005783070 ubox
5 77 0.004862779 ubox
5 82 0.015610692 ubox
6 76 0.005583172 ubox
6 81 0.017039508 ubox
7 13 0.015282085 ubox
7 15 0.983946510 ubox
7 19 0.008318769 ubox
7 28 0.018359019 ubox
7 43 0.004860036 ubox
7 54 0.004876212 ubox
7 60 0.007736833 ubox
7 67 0.055250293 ubox
7 75 0.004124464 ubox
7 95 0.026337003 ubox
7 98 0.026870942 ubox
7 101 0.025944605 ubox
7 104 0.025711843 ubox
7 107 0.008978446 ubox
8 14 0.985152074 ubox
8 18 0.008369234 ubox
8 27 0.018380777 ubox
8 42 0.004859428 ubox
8 53 0.004990267 ubox
8 59 0.007778721 ubox
8 66 0.055261158 ubox
8 79 0.048276867 ubox
8 91 0.029916043 ubox
9 13 0.921663292 ubox
9 15 0.022205136 ubox
9 26 0.018191596 ubox
9 35 0.006339531 ubox
9 41 0.003604130 ubox
9 78 0.048834383 ubox
9 86 0.003671421 ubox
9 95 0.024403026 ubox
9 98 0.023754689 ubox
9 101 0.023854191 ubox
9 104 0.023711284 ubox
9 107 0.008972811 ubox
10 34 0.006302401 ubox
10 77 0.048266992 ubox
11 76 0.043080892 ubox
13 20 0.014934085 ubox
13 21 0.004029375 ubox
13 79 0.005038231 ubox
13 91 0.022235432 ubox
14 19 0.014583711 ubox
14 32 0.013846319 ubox
14 47 0.004753367 ubox
14 60 0.054358296 ubox
14 67 0.011572172 ubox
14 72 0.005278650 ubox
14 75 0.005711092 ubox
14 78 0.004686339 ubox
14 95 0.023308282 ubox
14 98 0.023256356 ubox
14 101 0.023771236 ubox
14 104 0.023799941 ubox
14 107 0.009012543 ubox
15 20 0.006610810 ubox
15 31 0.014004326 ubox
15 46 0.004868895 ubox
15 59 0.054409911 ubox
15 66 0.011545121 ubox
15 69 0.004002810 ubox
15 91 0.029462523 ubox
16 77 0.003235371 ubox
18 28 0.998562017 ubox
18 95 0.005287258 ubox
18 98 0.005482586 ubox
18 101 0.005619796 ubox
18 104 0.005624183 ubox
19 27 0.999657006 ubox
20 25 0.020478912 ubox
20 26 0.999267608 ubox
21 25 0.983136230 ubox
21 26 0.009313783 ubox
28 46 0.003579280 ubox
28 91 0.003538136 ubox
29 47 0.004412848 ubox
31 43 0.998764019 ubox
32 42 0.999823257 ubox
33 41 0.999326151 ubox
34 39 0.008312222 ubox
34 40 0.998706189 ubox
35 39 0.990419329 ubox
42 60 0.005181846 ubox
43 59 0.005536468 ubox
45 54 0.013675440 ubox
46 54 0.003459919 ubox
46 56 0.989107834 ubox
46 67 0.006312093 ubox
46 95 0.013012970 ubox
46 98 0.012381441 ubox
46 101 0.012721211 ubox
46 104 0.012147241 ubox
46 107 0.004235273 ubox
47 52 0.010804878 ubox
47 53 0.004197659 ubox
47 55 0.990261461 ubox
47 66 0.006266985 ubox
47 94 0.012461223 ubox
47 97 0.011862901 ubox
47 100 0.012202056 ubox
47 103 0.011651550 ubox
47 106 0.004104795 ubox
48 54 0.989503549 ubox
49 53 0.979854771 ubox
49 79 0.005481891 ubox
49 91 0.004323488 ubox
51 77 0.007096760 ubox
52 76 0.007754806 ubox
53 60 0.007282199 ubox
53 67 0.003442228 ubox
53 72 0.007219367 ubox
53 75 0.007917948 ubox
53 95 0.013383689 ubox
53 98 0.012556491 ubox
53 101 0.011979901 ubox
53 104 0.011330660 ubox
53 107 0.003936804 ubox
54 59 0.007098209 ubox
54 66 0.003330210 ubox
54 71 0.007077544 ubox
54 74 0.007650171 ubox
54 94 0.012915142 ubox
54 97 0.012124311 ubox
54 100 0.011566759 ubox
54 103 0.010940115 ubox
54 106 0.003840342 ubox
56 69 0.005425442 ubox
56 91 0.004873468 ubox
58 82 0.010033658 ubox
59 67 0.989288420 ubox
59 81 0.012268881 ubox
60 65 0.010095289 ubox
60 66 0.990298147 ubox
60 80 0.012669098 ubox
61 65 0.983104673 ubox
61 66 0.010234842 ubox
61 79 0.013004953 ubox
63 77 0.013334097 ubox
64 76 0.014004432 ubox
65 72 0.004509025 ubox
65 75 0.014076678 ubox
65 76 0.003546231 ubox
66 75 0.003687746 ubox
67 91 0.005192080 ubox
68 76 0.018430604 ubox
68 77 0.003602183 ubox
69 75 0.022278988 ubox
69 76 0.004181958 ubox
69 77 0.004787523 ubox
69 78 0.060649468 ubox
69 85 0.004999700 ubox
69 86 0.988034696 ubox
70 76 0.005272935 ubox
70 77 0.059824919 ubox
70 84 0.004119927 ubox
70 85 0.989252119 ubox
71 76 0.048536707 ubox
71 84 0.989976658 ubox
72 79 0.013159585 ubox
72 83 0.990755565 ubox
73 82 0.990215204 ubox
74 81 0.989902027 ubox
75 79 0.012881141 ubox
75 80 0.989262121 ubox
76 80 0.004036738 ubox
76 102 0.003954253 ubox
76 103 0.003714569 ubox
77 100 0.003993518 ubox
77 102 0.003871734 ubox
79 98 0.006397385 ubox
79 101 0.012157410 ubox
79 104 0.005361149 ubox
80 98 0.125312757 ubox
80 101 0.036587394 ubox
80 104 0.024033299 ubox
80 107 0.006723625 ubox
81 97 0.125667355 ubox
81 100 0.036677540 ubox
81 103 0.024095980 ubox
81 106 0.006840375 ubox
82 96 0.125933211 ubox
82 99 0.036703779 ubox
82 102 0.024124903 ubox
82 105 0.006911422 ubox
83 95 0.126142873 ubox
83 98 0.036749286 ubox
83 101 0.024156828 ubox
83 104 0.006953019 ubox
84 93 0.066962670 ubox
84 94 0.107261807 ubox
84 97 0.035608479 ubox
84 100 0.023745137 ubox
84 103 0.006838249 ubox
85 92 0.097249596 ubox
85 93 0.082837457 ubox
85 96 0.029556886 ubox
85 99 0.020774728 ubox
85 102 0.006022073 ubox
86 91 0.118244888 ubox
91 95 0.070924664 ubox
91 98 0.143561259 ubox
91 101 0.047174542 ubox
91 104 0.015525287 ubox
91 107 0.003730542 ubox
1 95 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
