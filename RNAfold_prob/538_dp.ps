%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (538)
} def

/sequence { (\
GGAAAGAUUAUAUAAUCAAAGUAUACGAUGAAAAUGGUAUACGCGAAAAAGCAAAGAUUAUCAUAAUCUUAAGCGUUCGCGCUUAAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 69 0.005379860 ubox
1 70 0.007357853 ubox
1 74 0.009513991 ubox
1 78 0.006039899 ubox
1 95 0.068088728 ubox
1 98 0.068518899 ubox
1 101 0.070083813 ubox
1 104 0.070397313 ubox
1 107 0.017775285 ubox
2 68 0.007584100 ubox
2 69 0.006575183 ubox
2 70 0.017252075 ubox
2 74 0.006055275 ubox
2 77 0.006044515 ubox
2 78 0.005058956 ubox
2 82 0.003214302 ubox
2 84 0.004430382 ubox
2 95 0.035935375 ubox
2 98 0.036063879 ubox
2 101 0.036834889 ubox
2 104 0.036694533 ubox
2 107 0.011973653 ubox
3 67 0.006759200 ubox
3 69 0.013203373 ubox
3 70 0.038543925 ubox
3 76 0.006018555 ubox
3 77 0.005050259 ubox
3 83 0.003412510 ubox
3 84 0.003298388 ubox
4 69 0.040659044 ubox
4 70 0.544785377 ubox
4 76 0.003568350 ubox
4 84 0.003282232 ubox
5 69 0.856578508 ubox
5 70 0.012126345 ubox
5 83 0.003280396 ubox
6 17 0.038569150 ubox
6 68 0.998006771 ubox
7 16 0.038596643 ubox
7 67 0.998513159 ubox
8 15 0.038072723 ubox
8 66 0.997960813 ubox
9 14 0.033777688 ubox
9 65 0.998030213 ubox
10 64 0.997288395 ubox
11 63 0.985084460 ubox
12 61 0.985039109 ubox
13 60 0.997241507 ubox
14 59 0.997981777 ubox
15 58 0.997893947 ubox
16 46 0.004800225 ubox
16 57 0.998413586 ubox
16 92 0.004945628 ubox
17 45 0.005367699 ubox
17 56 0.997438578 ubox
17 91 0.005278272 ubox
21 42 0.997912553 ubox
21 52 0.004002935 ubox
22 41 0.999390834 ubox
22 51 0.003453139 ubox
23 40 0.999455155 ubox
24 39 0.999490668 ubox
25 38 0.999726884 ubox
26 36 0.006748953 ubox
26 37 0.999688279 ubox
27 35 0.006259337 ubox
28 35 0.985704916 ubox
29 33 0.011056862 ubox
29 34 0.980136557 ubox
29 36 0.004325005 ubox
30 35 0.003332649 ubox
42 81 0.009925193 ubox
43 52 0.994688112 ubox
43 80 0.031510037 ubox
43 82 0.013720618 ubox
44 51 0.995489618 ubox
44 79 0.031540557 ubox
44 81 0.013744160 ubox
45 52 0.028021137 ubox
45 78 0.031540229 ubox
45 80 0.013728223 ubox
46 77 0.031209061 ubox
47 76 0.027753762 ubox
47 77 0.003275574 ubox
48 76 0.004314113 ubox
48 77 0.010814388 ubox
49 76 0.009655582 ubox
51 74 0.032785318 ubox
52 73 0.032784896 ubox
54 70 0.034922890 ubox
55 69 0.040782073 ubox
56 62 0.005941657 ubox
56 68 0.043114649 ubox
57 61 0.005175680 ubox
57 67 0.043110644 ubox
58 66 0.043029147 ubox
59 65 0.042497056 ubox
60 64 0.037690503 ubox
67 88 0.003483072 ubox
67 92 0.009188969 ubox
68 91 0.011873578 ubox
69 85 0.010573926 ubox
69 86 0.455310615 ubox
69 87 0.030026510 ubox
69 88 0.013586349 ubox
69 89 0.009166632 ubox
69 90 0.012591125 ubox
69 91 0.004370237 ubox
69 92 0.003902506 ubox
70 85 0.806135597 ubox
70 86 0.037593504 ubox
70 87 0.014554589 ubox
70 88 0.009548134 ubox
70 89 0.009303435 ubox
70 90 0.004592739 ubox
70 91 0.004019753 ubox
71 83 0.009389373 ubox
71 84 0.965957030 ubox
72 83 0.994419711 ubox
72 84 0.014056418 ubox
73 80 0.026032679 ubox
73 82 0.998540797 ubox
74 79 0.026058160 ubox
74 81 0.998512145 ubox
75 80 0.972660448 ubox
75 82 0.004091809 ubox
75 95 0.010200865 ubox
75 98 0.021028608 ubox
75 101 0.005229301 ubox
76 81 0.003876831 ubox
76 93 0.008884133 ubox
76 94 0.008788654 ubox
76 97 0.020945530 ubox
76 100 0.005195647 ubox
77 92 0.011106001 ubox
77 93 0.006600213 ubox
77 96 0.019409402 ubox
77 99 0.004819108 ubox
78 91 0.012308150 ubox
79 95 0.004289847 ubox
81 95 0.003497873 ubox
82 91 0.031693759 ubox
83 89 0.003165556 ubox
83 90 0.031851367 ubox
83 91 0.003731075 ubox
83 92 0.008069935 ubox
83 93 0.003908717 ubox
83 94 0.004474788 ubox
84 88 0.004289088 ubox
84 89 0.029796549 ubox
84 90 0.006824237 ubox
84 91 0.010755162 ubox
84 92 0.005900470 ubox
84 93 0.008105821 ubox
91 95 0.043020894 ubox
91 98 0.103715191 ubox
91 101 0.045495243 ubox
91 104 0.035205426 ubox
91 107 0.010415876 ubox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 61 0.9500000 lbox
13 60 0.9500000 lbox
14 59 0.9500000 lbox
15 58 0.9500000 lbox
16 57 0.9500000 lbox
17 56 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
