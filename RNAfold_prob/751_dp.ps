%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (751)
} def

/sequence { (\
GGAAAGCCGGCGCUAUGGGCGGGCAAGUCGACGCGAAAAGAGUGGACAGACGCAGCGAAAGGUGGGUCGACCUAGUUCGCUAGGUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.011079615 ubox
1 24 0.006865411 ubox
1 29 0.017489588 ubox
1 47 0.003679364 ubox
1 68 0.007429626 ubox
1 86 0.012735840 ubox
1 95 0.239286530 ubox
1 98 0.240776636 ubox
1 101 0.246257213 ubox
1 104 0.247359367 ubox
1 107 0.062451416 ubox
2 7 0.011061037 ubox
2 24 0.009260253 ubox
2 28 0.017268516 ubox
2 29 0.012548243 ubox
2 67 0.004149473 ubox
2 68 0.008050029 ubox
2 85 0.004982110 ubox
2 86 0.012248137 ubox
2 95 0.126306818 ubox
2 98 0.126748683 ubox
2 101 0.129449271 ubox
2 104 0.128954438 ubox
2 107 0.042078192 ubox
3 28 0.012248757 ubox
3 67 0.005655418 ubox
3 85 0.008108045 ubox
6 20 0.015020161 ubox
6 24 0.997172202 ubox
6 63 0.003990240 ubox
6 67 0.003306005 ubox
6 95 0.009860693 ubox
6 98 0.009896913 ubox
6 101 0.009873426 ubox
6 104 0.009672233 ubox
6 107 0.003371721 ubox
7 19 0.014978162 ubox
7 22 0.066810235 ubox
7 23 0.997515483 ubox
7 62 0.004039724 ubox
7 66 0.003562210 ubox
8 18 0.014920736 ubox
8 21 0.077942390 ubox
8 22 0.996190265 ubox
8 61 0.004035248 ubox
8 65 0.003562465 ubox
9 20 0.086967781 ubox
9 24 0.004915509 ubox
10 16 0.009597487 ubox
10 20 0.987252254 ubox
10 24 0.005118607 ubox
10 63 0.003516792 ubox
11 17 0.005347552 ubox
11 18 0.096444624 ubox
11 19 0.986631955 ubox
11 21 0.125917288 ubox
11 23 0.005011928 ubox
11 57 0.004046986 ubox
11 62 0.003506794 ubox
12 16 0.007044728 ubox
12 20 0.128787803 ubox
12 56 0.004109541 ubox
13 17 0.787933297 ubox
13 18 0.168827606 ubox
13 19 0.128782806 ubox
13 21 0.004029525 ubox
13 55 0.004109246 ubox
14 18 0.116177574 ubox
14 54 0.004065364 ubox
19 53 0.004877557 ubox
20 52 0.004888312 ubox
21 51 0.004862993 ubox
23 95 0.003286468 ubox
23 98 0.003272186 ubox
23 101 0.003329444 ubox
23 104 0.003317342 ubox
24 91 0.005509476 ubox
26 43 0.003291841 ubox
27 47 0.997542431 ubox
27 95 0.007704679 ubox
27 98 0.008282894 ubox
27 101 0.008414997 ubox
27 104 0.008448316 ubox
28 36 0.004599591 ubox
28 41 0.003667938 ubox
28 45 0.004338923 ubox
28 46 0.998886591 ubox
28 92 0.005294538 ubox
28 94 0.006386741 ubox
28 97 0.007122825 ubox
28 100 0.007233978 ubox
28 103 0.007269778 ubox
29 35 0.004965265 ubox
29 40 0.003732112 ubox
29 44 0.006908777 ubox
29 45 0.999006195 ubox
29 91 0.005716229 ubox
30 34 0.004659908 ubox
30 43 0.004947827 ubox
30 47 0.011411078 ubox
30 95 0.003857873 ubox
30 98 0.003867615 ubox
30 101 0.003938432 ubox
31 43 0.992233726 ubox
32 40 0.009368132 ubox
32 42 0.990753068 ubox
32 44 0.090231370 ubox
33 43 0.093090624 ubox
34 40 0.883203336 ubox
34 42 0.093575414 ubox
49 68 0.977916786 ubox
49 86 0.200436554 ubox
50 67 0.979251516 ubox
50 85 0.200667712 ubox
51 64 0.004269667 ubox
51 65 0.006195360 ubox
51 66 0.979287458 ubox
51 83 0.003589592 ubox
51 84 0.200668260 ubox
52 63 0.005056609 ubox
53 62 0.005116523 ubox
53 64 0.978924055 ubox
53 65 0.019862603 ubox
53 83 0.049061368 ubox
54 63 0.975703266 ubox
54 81 0.199333485 ubox
55 63 0.067278539 ubox
55 80 0.200786388 ubox
56 61 0.965163730 ubox
56 62 0.108514771 ubox
56 79 0.200788262 ubox
57 78 0.200768845 ubox
58 76 0.004032426 ubox
58 77 0.199752961 ubox
59 76 0.177164884 ubox
59 77 0.007023913 ubox
60 73 0.179025488 ubox
60 76 0.008453327 ubox
60 77 0.011218297 ubox
61 72 0.187814370 ubox
61 73 0.003440500 ubox
61 76 0.034312493 ubox
62 71 0.187846291 ubox
62 72 0.003426428 ubox
62 73 0.006809163 ubox
63 69 0.010530017 ubox
63 70 0.186392503 ubox
63 74 0.057044901 ubox
64 68 0.017166900 ubox
64 71 0.004421257 ubox
64 72 0.038222432 ubox
64 73 0.059350091 ubox
65 71 0.038234239 ubox
65 72 0.059528322 ubox
66 71 0.059163829 ubox
67 92 0.003687512 ubox
68 91 0.004767825 ubox
69 86 0.978037338 ubox
70 85 0.979258577 ubox
71 84 0.979615984 ubox
72 83 0.979616623 ubox
73 82 0.979323763 ubox
74 81 0.978703768 ubox
75 80 0.970629254 ubox
85 92 0.008006623 ubox
86 91 0.012037974 ubox
91 95 0.054290225 ubox
91 98 0.119158931 ubox
91 101 0.046253671 ubox
91 104 0.030144123 ubox
91 107 0.008780937 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
