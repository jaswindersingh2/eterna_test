%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (883)
} def

/sequence { (\
GGAAAAGAACUAGAGGAGGAACCAAAAGGACCAAAAGGAAACCAUCCAAACUAGAACCAAAAGGAACUGAGGGCUUUCGAGCCCUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.038967557 ubox
1 11 0.015958759 ubox
1 23 0.010800479 ubox
1 32 0.007585217 ubox
1 43 0.007848258 ubox
1 47 0.052975428 ubox
1 52 0.004745755 ubox
1 57 0.011658489 ubox
1 58 0.168892698 ubox
1 67 0.036387402 ubox
1 68 0.021025775 ubox
1 95 0.111181191 ubox
1 98 0.112227932 ubox
1 101 0.116861538 ubox
1 104 0.117340699 ubox
1 107 0.029651660 ubox
2 10 0.017926077 ubox
2 11 0.004394950 ubox
2 22 0.010776456 ubox
2 31 0.007545271 ubox
2 42 0.007819143 ubox
2 46 0.053005750 ubox
2 51 0.005013192 ubox
2 57 0.168404977 ubox
2 58 0.017853761 ubox
2 67 0.028501530 ubox
2 95 0.058674084 ubox
2 98 0.059121200 ubox
2 101 0.060543985 ubox
2 104 0.060312689 ubox
2 107 0.019685108 ubox
3 11 0.003338952 ubox
3 45 0.050215787 ubox
3 68 0.003558814 ubox
4 11 0.005524742 ubox
4 68 0.003307183 ubox
5 11 0.004332162 ubox
5 68 0.003579987 ubox
6 11 0.004698503 ubox
6 52 0.013635697 ubox
6 68 0.029955039 ubox
7 22 0.003520589 ubox
7 31 0.011250511 ubox
7 32 0.004486733 ubox
7 42 0.005890314 ubox
7 43 0.009320700 ubox
7 51 0.014025833 ubox
7 57 0.157077903 ubox
7 58 0.095065518 ubox
7 67 0.035763395 ubox
7 95 0.067249557 ubox
7 98 0.067243093 ubox
7 101 0.065061100 ubox
7 104 0.064585243 ubox
7 107 0.022542682 ubox
8 52 0.003688795 ubox
8 68 0.003576606 ubox
10 15 0.011459605 ubox
10 16 0.015159617 ubox
10 18 0.018296645 ubox
10 19 0.014855597 ubox
10 28 0.019721020 ubox
10 29 0.006640853 ubox
10 37 0.017815264 ubox
10 38 0.014916525 ubox
10 54 0.979574609 ubox
10 63 0.013873612 ubox
10 64 0.006735103 ubox
10 91 0.029587018 ubox
11 15 0.013746302 ubox
11 16 0.003323835 ubox
11 17 0.018075254 ubox
11 18 0.014492846 ubox
11 27 0.019264474 ubox
11 28 0.006452809 ubox
11 36 0.017276817 ubox
11 37 0.014441260 ubox
11 48 0.004416881 ubox
11 49 0.006405560 ubox
11 50 0.003494855 ubox
11 53 0.985826603 ubox
11 54 0.004501728 ubox
11 55 0.006617299 ubox
11 62 0.013318208 ubox
11 63 0.006372220 ubox
11 88 0.003264493 ubox
11 89 0.003442767 ubox
11 90 0.028295698 ubox
11 91 0.003318622 ubox
11 92 0.003501174 ubox
11 93 0.003266983 ubox
11 99 0.003323332 ubox
11 100 0.003328428 ubox
11 102 0.003375660 ubox
11 103 0.003259089 ubox
11 105 0.003340470 ubox
11 106 0.003227021 ubox
12 52 0.986353113 ubox
12 68 0.004022574 ubox
13 23 0.009327218 ubox
13 46 0.008054036 ubox
13 47 0.007179661 ubox
13 51 0.985368893 ubox
13 67 0.005214635 ubox
13 95 0.011506905 ubox
13 98 0.014016458 ubox
13 101 0.014489406 ubox
13 104 0.014584421 ubox
13 107 0.005028116 ubox
14 45 0.008139139 ubox
14 52 0.017473394 ubox
14 68 0.005804797 ubox
15 22 0.015739236 ubox
15 23 0.070806250 ubox
15 32 0.030446636 ubox
15 43 0.009579961 ubox
15 46 0.024780522 ubox
15 47 0.978671429 ubox
15 51 0.018289460 ubox
15 52 0.007790271 ubox
15 58 0.021754298 ubox
15 67 0.006764348 ubox
15 95 0.011643519 ubox
15 98 0.013116767 ubox
15 101 0.013330944 ubox
15 104 0.013307617 ubox
15 107 0.004644092 ubox
16 22 0.070693573 ubox
16 23 0.008588440 ubox
16 31 0.030389372 ubox
16 32 0.009250261 ubox
16 42 0.009557221 ubox
16 45 0.024685718 ubox
16 46 0.979183921 ubox
16 47 0.010136720 ubox
16 51 0.008217534 ubox
16 57 0.021686356 ubox
16 67 0.003225058 ubox
16 95 0.010689610 ubox
16 98 0.011325193 ubox
16 101 0.011474288 ubox
16 104 0.008279051 ubox
17 45 0.972650398 ubox
17 52 0.005170548 ubox
17 68 0.004048547 ubox
18 22 0.006688171 ubox
18 23 0.027574321 ubox
18 31 0.014761585 ubox
18 32 0.230702080 ubox
18 42 0.054905453 ubox
18 43 0.938492250 ubox
18 45 0.003522537 ubox
18 46 0.005451432 ubox
18 47 0.096288646 ubox
18 51 0.005231408 ubox
18 58 0.006954822 ubox
18 67 0.004714743 ubox
18 95 0.007395797 ubox
18 98 0.007319614 ubox
18 101 0.007383669 ubox
18 104 0.005015598 ubox
19 23 0.009096652 ubox
19 31 0.230665341 ubox
19 32 0.032231885 ubox
19 42 0.937209657 ubox
19 43 0.102965137 ubox
19 45 0.004201233 ubox
19 46 0.096414506 ubox
19 57 0.006936687 ubox
19 95 0.005023326 ubox
19 98 0.004950673 ubox
19 101 0.004146875 ubox
20 45 0.091410458 ubox
21 45 0.004687608 ubox
22 28 0.094680824 ubox
22 29 0.627613136 ubox
22 37 0.041832238 ubox
22 38 0.713397496 ubox
22 64 0.008765339 ubox
23 28 0.629258383 ubox
23 29 0.048826754 ubox
23 37 0.714154980 ubox
23 38 0.068125683 ubox
23 63 0.008783202 ubox
24 45 0.004086656 ubox
25 45 0.003384175 ubox
26 45 0.011229564 ubox
27 45 0.006867605 ubox
27 68 0.004261095 ubox
28 32 0.103652095 ubox
28 42 0.023842722 ubox
28 43 0.100244312 ubox
28 47 0.033693820 ubox
28 58 0.011046525 ubox
28 67 0.005114186 ubox
29 42 0.100770517 ubox
29 46 0.033733319 ubox
29 57 0.011045722 ubox
30 45 0.033166878 ubox
31 37 0.038583792 ubox
31 38 0.595350443 ubox
31 54 0.004035381 ubox
31 64 0.005767767 ubox
32 37 0.597053947 ubox
32 38 0.046981963 ubox
32 54 0.005975218 ubox
32 63 0.005763091 ubox
35 45 0.007794748 ubox
36 45 0.006299929 ubox
36 52 0.005242096 ubox
37 42 0.047209041 ubox
37 43 0.152566478 ubox
37 46 0.004242420 ubox
37 47 0.152413010 ubox
37 51 0.005233944 ubox
37 58 0.005817110 ubox
38 42 0.150281216 ubox
38 43 0.027541978 ubox
38 46 0.152578100 ubox
38 47 0.004359125 ubox
38 57 0.005804198 ubox
39 45 0.146143612 ubox
40 45 0.007582363 ubox
42 64 0.003887348 ubox
43 63 0.003901417 ubox
45 55 0.007237708 ubox
45 65 0.030125342 ubox
46 54 0.007689660 ubox
46 64 0.032263363 ubox
47 54 0.006966295 ubox
47 63 0.032245861 ubox
51 63 0.015680968 ubox
51 64 0.009532359 ubox
51 91 0.010804560 ubox
52 59 0.003527942 ubox
52 62 0.015281762 ubox
52 63 0.009322862 ubox
52 69 0.005635448 ubox
52 90 0.010475875 ubox
53 68 0.038813831 ubox
54 58 0.005790654 ubox
54 67 0.055721419 ubox
54 95 0.005269835 ubox
54 98 0.005513729 ubox
54 101 0.009016562 ubox
54 104 0.005602194 ubox
55 68 0.018523304 ubox
56 68 0.009843794 ubox
57 63 0.048705832 ubox
57 64 0.770166977 ubox
57 91 0.005157389 ubox
58 63 0.772754406 ubox
58 64 0.064205924 ubox
58 69 0.004226909 ubox
58 91 0.007209532 ubox
59 68 0.006837640 ubox
60 68 0.004628380 ubox
61 68 0.007612383 ubox
62 68 0.028114255 ubox
63 67 0.033027597 ubox
63 68 0.003922943 ubox
63 95 0.062216209 ubox
63 98 0.015829945 ubox
63 101 0.012793781 ubox
63 104 0.011148667 ubox
63 107 0.003643420 ubox
64 95 0.016777456 ubox
64 98 0.006724816 ubox
64 101 0.006009973 ubox
64 104 0.005311329 ubox
67 91 0.112615557 ubox
68 87 0.919756767 ubox
68 88 0.042519064 ubox
68 89 0.012711113 ubox
68 90 0.079437124 ubox
68 91 0.006139731 ubox
68 92 0.004400969 ubox
68 93 0.003252711 ubox
69 86 0.999722055 ubox
70 85 0.999809992 ubox
71 84 0.999987602 ubox
72 83 0.999994546 ubox
73 82 0.999994993 ubox
74 81 0.999683986 ubox
75 79 0.028243610 ubox
75 80 0.924335655 ubox
75 81 0.005289622 ubox
76 80 0.028529662 ubox
86 91 0.004247060 ubox
91 95 0.045448897 ubox
91 98 0.106520132 ubox
91 101 0.045326777 ubox
91 104 0.033915171 ubox
91 107 0.010002352 ubox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
17 45 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
22 38 0.9500000 lbox
23 37 0.9500000 lbox
57 64 0.9500000 lbox
58 63 0.9500000 lbox
68 87 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
