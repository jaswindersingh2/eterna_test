%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:31 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (836)
} def

/sequence { (\
GGAAAGCACGGACGAAAAAGCCAAAAGCCGGCCGAAAGAGCCAAGGCAGGUAAAAAACCAAGCAAAAAUGUGUAAUUCGUUACACAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.108561634 ubox
1 9 0.113241727 ubox
1 13 0.025344380 ubox
1 21 0.006115526 ubox
1 22 0.115493088 ubox
1 29 0.061080792 ubox
1 33 0.017563516 ubox
1 42 0.045832381 ubox
1 58 0.005310145 ubox
1 59 0.087370648 ubox
1 63 0.051731452 ubox
1 69 0.012669993 ubox
1 78 0.172250511 ubox
1 80 0.003848989 ubox
1 83 0.005907559 ubox
1 85 0.009184554 ubox
1 95 0.139665016 ubox
1 98 0.143625287 ubox
1 101 0.142914115 ubox
1 104 0.143426228 ubox
1 107 0.036229391 ubox
2 7 0.076068411 ubox
2 9 0.077329005 ubox
2 13 0.009158449 ubox
2 21 0.115247693 ubox
2 22 0.010103520 ubox
2 28 0.061024283 ubox
2 29 0.006004570 ubox
2 32 0.017217879 ubox
2 33 0.005022449 ubox
2 41 0.045841390 ubox
2 58 0.086965409 ubox
2 59 0.006842993 ubox
2 63 0.036241882 ubox
2 69 0.004492432 ubox
2 77 0.172382489 ubox
2 78 0.089937705 ubox
2 85 0.003777010 ubox
2 95 0.072068309 ubox
2 98 0.071392967 ubox
2 101 0.071988890 ubox
2 104 0.071756704 ubox
2 107 0.023421927 ubox
3 69 0.005712143 ubox
3 76 0.170567945 ubox
3 77 0.089562583 ubox
4 69 0.004461314 ubox
4 76 0.083678562 ubox
4 77 0.006068855 ubox
5 51 0.007550035 ubox
5 69 0.005532199 ubox
5 73 0.004339747 ubox
5 76 0.006971790 ubox
5 81 0.007204441 ubox
6 13 0.029420779 ubox
6 21 0.089835571 ubox
6 22 0.008170016 ubox
6 28 0.045747448 ubox
6 29 0.003242210 ubox
6 32 0.047328533 ubox
6 33 0.008632864 ubox
6 41 0.007081330 ubox
6 47 0.034306253 ubox
6 51 0.022447398 ubox
6 58 0.003869510 ubox
6 59 0.004186811 ubox
6 63 0.742193925 ubox
6 71 0.006098541 ubox
6 73 0.200875036 ubox
6 80 0.007956255 ubox
6 83 0.005070931 ubox
6 85 0.018581344 ubox
6 95 0.072413946 ubox
6 98 0.071707052 ubox
6 101 0.071524512 ubox
6 104 0.070079789 ubox
6 107 0.024431190 ubox
7 11 0.012168383 ubox
7 14 0.066555826 ubox
7 20 0.090408710 ubox
7 27 0.046013596 ubox
7 31 0.047639679 ubox
7 38 0.009275263 ubox
7 40 0.007127908 ubox
7 45 0.006425321 ubox
7 46 0.034250226 ubox
7 49 0.009370005 ubox
7 50 0.022902660 ubox
7 62 0.742197097 ubox
7 70 0.006506467 ubox
7 72 0.202767011 ubox
7 79 0.008005213 ubox
7 91 0.093542754 ubox
8 51 0.026470456 ubox
8 69 0.006184761 ubox
8 71 0.202477809 ubox
8 73 0.004323801 ubox
8 80 0.010739004 ubox
9 14 0.068000406 ubox
9 20 0.025626836 ubox
9 27 0.003888734 ubox
9 30 0.075855709 ubox
9 34 0.053651033 ubox
9 38 0.005642318 ubox
9 45 0.015005542 ubox
9 49 0.015112114 ubox
9 50 0.027320600 ubox
9 62 0.033488925 ubox
9 70 0.202186406 ubox
9 72 0.004460441 ubox
9 79 0.011444831 ubox
9 91 0.067342926 ubox
10 21 0.024070914 ubox
10 22 0.917978132 ubox
10 29 0.080132553 ubox
10 33 0.054275884 ubox
10 42 0.038672458 ubox
10 58 0.009306074 ubox
10 59 0.207278653 ubox
10 63 0.010622060 ubox
10 69 0.043739949 ubox
10 78 0.011240635 ubox
10 81 0.003473474 ubox
10 83 0.027298247 ubox
10 85 0.008487910 ubox
10 95 0.023401727 ubox
10 98 0.022787144 ubox
10 101 0.023336662 ubox
10 104 0.023289951 ubox
10 107 0.008795332 ubox
11 21 0.918804940 ubox
11 22 0.057851304 ubox
11 28 0.080067174 ubox
11 32 0.053136620 ubox
11 41 0.038748181 ubox
11 42 0.004435014 ubox
11 58 0.207071993 ubox
11 59 0.016057930 ubox
11 63 0.010371408 ubox
11 77 0.010736897 ubox
11 81 0.081965301 ubox
11 83 0.004688823 ubox
11 95 0.013836898 ubox
11 98 0.015067826 ubox
11 101 0.015201717 ubox
11 104 0.014971925 ubox
11 107 0.004875989 ubox
12 51 0.005449626 ubox
12 76 0.009576063 ubox
12 80 0.085205502 ubox
13 20 0.890905370 ubox
13 27 0.070406063 ubox
13 30 0.051548763 ubox
13 31 0.012080861 ubox
13 34 0.009074645 ubox
13 38 0.006814519 ubox
13 40 0.020821871 ubox
13 50 0.005488273 ubox
13 62 0.009077835 ubox
13 79 0.085608008 ubox
13 91 0.013495542 ubox
14 21 0.031566559 ubox
14 22 0.031584717 ubox
14 29 0.052049219 ubox
14 33 0.009180034 ubox
14 58 0.007459334 ubox
14 59 0.005036957 ubox
14 63 0.010288430 ubox
14 78 0.085605682 ubox
14 95 0.015314513 ubox
14 98 0.015563891 ubox
14 101 0.015586660 ubox
14 104 0.013442280 ubox
14 107 0.004976546 ubox
15 77 0.084471013 ubox
16 76 0.074492886 ubox
16 77 0.006117929 ubox
17 76 0.008209384 ubox
18 51 0.006262004 ubox
18 73 0.003572695 ubox
19 51 0.014756702 ubox
19 73 0.013523320 ubox
20 28 0.045969358 ubox
20 29 0.003474113 ubox
20 32 0.048184775 ubox
20 33 0.004694288 ubox
20 47 0.032474335 ubox
20 51 0.218156683 ubox
20 58 0.004407753 ubox
20 59 0.004049745 ubox
20 63 0.085440570 ubox
20 71 0.021190463 ubox
20 73 0.032846682 ubox
20 95 0.012212091 ubox
20 98 0.011852930 ubox
20 101 0.011998043 ubox
20 104 0.012018334 ubox
20 107 0.004196662 ubox
21 27 0.045906492 ubox
21 31 0.048732148 ubox
21 46 0.032510097 ubox
21 49 0.008971952 ubox
21 50 0.223751528 ubox
21 62 0.085138259 ubox
21 70 0.020876396 ubox
21 72 0.033538421 ubox
21 91 0.010201218 ubox
22 27 0.006004302 ubox
22 30 0.048716843 ubox
22 45 0.032448462 ubox
22 49 0.223335018 ubox
22 50 0.007421399 ubox
22 62 0.007686638 ubox
22 70 0.032456420 ubox
22 72 0.006326549 ubox
22 91 0.018672912 ubox
23 51 0.012309397 ubox
23 69 0.029467829 ubox
23 71 0.005446399 ubox
24 51 0.004733990 ubox
24 69 0.003586877 ubox
25 51 0.006018463 ubox
26 51 0.006216895 ubox
27 41 0.017764043 ubox
27 47 0.976759288 ubox
27 51 0.130914861 ubox
27 63 0.014153033 ubox
27 95 0.004569990 ubox
27 98 0.004520680 ubox
27 101 0.004608581 ubox
27 104 0.004616846 ubox
28 40 0.017783968 ubox
28 45 0.012002172 ubox
28 46 0.977814444 ubox
28 50 0.134017811 ubox
28 62 0.014070712 ubox
28 91 0.003202167 ubox
29 38 0.017541530 ubox
29 45 0.972753773 ubox
29 49 0.133561637 ubox
29 91 0.006426571 ubox
30 41 0.007133531 ubox
30 42 0.978757147 ubox
30 47 0.003460544 ubox
31 41 0.983872240 ubox
31 42 0.022563501 ubox
31 47 0.148306726 ubox
31 63 0.003558179 ubox
32 38 0.003964550 ubox
32 40 0.980927014 ubox
32 46 0.148836760 ubox
32 62 0.003550278 ubox
33 38 0.917965503 ubox
33 40 0.078446982 ubox
33 45 0.148818762 ubox
33 91 0.003244837 ubox
34 41 0.015223244 ubox
34 42 0.013710116 ubox
38 42 0.010224114 ubox
40 47 0.055706111 ubox
40 51 0.022458109 ubox
40 63 0.003502431 ubox
41 46 0.055743539 ubox
41 50 0.023010957 ubox
41 62 0.003475558 ubox
42 49 0.022997515 ubox
45 59 0.008036132 ubox
45 63 0.021118204 ubox
45 95 0.005964509 ubox
45 98 0.005948357 ubox
45 101 0.006048364 ubox
45 104 0.006040388 ubox
46 58 0.008010173 ubox
46 63 0.106141255 ubox
47 62 0.106321775 ubox
49 58 0.043148753 ubox
49 59 0.949145279 ubox
49 63 0.016736215 ubox
49 85 0.006267547 ubox
50 58 0.950056358 ubox
50 59 0.021093268 ubox
50 63 0.025680533 ubox
50 83 0.010802466 ubox
50 101 0.003881692 ubox
50 104 0.005332686 ubox
51 55 0.006835764 ubox
51 56 0.046572926 ubox
51 57 0.927919293 ubox
51 60 0.004453589 ubox
51 61 0.012355361 ubox
51 62 0.025301516 ubox
51 82 0.010825592 ubox
51 100 0.003843632 ubox
51 103 0.005155718 ubox
52 81 0.010796273 ubox
53 80 0.010543176 ubox
56 77 0.004710359 ubox
57 73 0.008569717 ubox
57 76 0.004554063 ubox
58 62 0.006477871 ubox
58 72 0.008880975 ubox
59 70 0.008254949 ubox
60 69 0.013292856 ubox
60 73 0.009885621 ubox
61 69 0.018654704 ubox
61 73 0.004780188 ubox
62 69 0.007667239 ubox
62 71 0.042793563 ubox
62 73 0.058712390 ubox
62 95 0.029297168 ubox
62 98 0.005914191 ubox
62 101 0.005177150 ubox
62 104 0.004814360 ubox
63 70 0.045413191 ubox
63 72 0.060097897 ubox
63 91 0.062290603 ubox
64 69 0.041134540 ubox
64 71 0.054904813 ubox
65 69 0.009530030 ubox
67 77 0.003239972 ubox
67 81 0.006576862 ubox
68 76 0.004377206 ubox
68 80 0.007039583 ubox
69 75 0.004819312 ubox
69 79 0.007085285 ubox
69 84 0.015458459 ubox
69 86 0.876422917 ubox
69 87 0.040297314 ubox
69 88 0.011099674 ubox
69 89 0.007948742 ubox
69 90 0.005798766 ubox
69 96 0.006056325 ubox
69 99 0.021917720 ubox
69 102 0.016438427 ubox
69 105 0.011812958 ubox
70 78 0.007146259 ubox
70 83 0.017765607 ubox
70 85 0.973783919 ubox
70 95 0.006372512 ubox
70 98 0.024285166 ubox
70 101 0.018201051 ubox
70 104 0.013062630 ubox
71 82 0.017753274 ubox
71 84 0.973899721 ubox
71 94 0.006003805 ubox
71 96 0.016065283 ubox
71 97 0.020017108 ubox
71 99 0.013601298 ubox
71 100 0.013889076 ubox
71 102 0.008682325 ubox
71 103 0.010535093 ubox
72 81 0.017635669 ubox
72 83 0.974218164 ubox
72 95 0.021655468 ubox
72 98 0.018323071 ubox
72 101 0.011675288 ubox
72 104 0.003236944 ubox
73 82 0.973694458 ubox
73 94 0.020822482 ubox
73 97 0.017659103 ubox
73 100 0.011448740 ubox
73 103 0.003165694 ubox
74 80 0.018529074 ubox
74 81 0.959148012 ubox
75 80 0.755351564 ubox
75 81 0.037783495 ubox
76 93 0.039182352 ubox
76 94 0.005397806 ubox
76 97 0.009573404 ubox
77 92 0.044037184 ubox
77 93 0.004938729 ubox
77 96 0.010025479 ubox
77 97 0.004011265 ubox
77 99 0.003469350 ubox
78 91 0.044451359 ubox
79 85 0.031289858 ubox
79 95 0.091228899 ubox
79 98 0.039165391 ubox
79 101 0.030413956 ubox
79 104 0.027862961 ubox
79 107 0.009135841 ubox
80 84 0.028230107 ubox
80 87 0.007967768 ubox
80 88 0.011228339 ubox
80 89 0.021798057 ubox
80 90 0.010480702 ubox
80 91 0.006384161 ubox
80 92 0.005463680 ubox
80 93 0.006617213 ubox
80 94 0.091033199 ubox
80 97 0.038909130 ubox
80 100 0.030204276 ubox
80 103 0.027672225 ubox
80 106 0.009141204 ubox
81 86 0.008081339 ubox
81 87 0.011871029 ubox
81 88 0.024075724 ubox
81 89 0.011011274 ubox
81 90 0.008083917 ubox
81 91 0.005881549 ubox
81 92 0.008026755 ubox
81 93 0.086776375 ubox
81 96 0.036041395 ubox
81 99 0.027960622 ubox
81 102 0.025609623 ubox
81 105 0.008491981 ubox
83 91 0.073257785 ubox
85 91 0.030395785 ubox
91 95 0.046731715 ubox
91 98 0.107846116 ubox
91 101 0.045053657 ubox
91 104 0.032948856 ubox
91 107 0.009697422 ubox
6 63 0.9500000 lbox
7 62 0.9500000 lbox
10 22 0.9500000 lbox
11 21 0.9500000 lbox
13 20 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 42 0.9500000 lbox
31 41 0.9500000 lbox
32 40 0.9500000 lbox
33 38 0.9500000 lbox
49 59 0.9500000 lbox
50 58 0.9500000 lbox
51 57 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
