%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (935)
} def

/sequence { (\
GGAAAGCCGGGCCGGAACGCCGGAGAGGGCUCGACCUGACCGAGCCCUCGGCCCUAAUGGGCGCCGGCUUGAUGAUUCGUCAUCAAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.009133355 ubox
1 70 0.008175761 ubox
1 73 0.009959915 ubox
1 78 0.010920845 ubox
1 84 0.007959140 ubox
1 95 0.067417326 ubox
1 98 0.067870531 ubox
1 101 0.069451565 ubox
1 104 0.069762973 ubox
1 107 0.017613156 ubox
2 7 0.009103650 ubox
2 69 0.006224027 ubox
2 70 0.015020047 ubox
2 73 0.003490678 ubox
2 77 0.010895795 ubox
2 78 0.007454457 ubox
2 81 0.003992273 ubox
2 83 0.004953061 ubox
2 84 0.013062837 ubox
2 95 0.035583015 ubox
2 98 0.035725832 ubox
2 101 0.036508460 ubox
2 104 0.036369156 ubox
2 107 0.011867327 ubox
3 69 0.011675295 ubox
3 70 0.046457999 ubox
3 76 0.010837526 ubox
3 77 0.007446144 ubox
3 80 0.003878450 ubox
3 83 0.012170566 ubox
4 69 0.042703176 ubox
4 70 0.656861270 ubox
4 76 0.005280285 ubox
5 69 0.890141105 ubox
5 70 0.014649827 ubox
6 68 0.999379442 ubox
6 69 0.003183769 ubox
7 15 0.009138305 ubox
7 67 0.999884718 ubox
8 14 0.009166090 ubox
8 66 0.999858906 ubox
9 13 0.008577020 ubox
9 64 0.003690390 ubox
9 65 0.998072615 ubox
9 70 0.004661032 ubox
10 21 0.016391257 ubox
10 64 0.992993125 ubox
10 65 0.058383491 ubox
10 69 0.008109651 ubox
11 20 0.018438990 ubox
11 62 0.065967234 ubox
11 64 0.082232181 ubox
11 68 0.009546130 ubox
12 19 0.018258311 ubox
12 22 0.003535899 ubox
12 23 0.991278224 ubox
12 60 0.006801380 ubox
12 61 0.061910910 ubox
12 63 0.079494091 ubox
12 67 0.009559248 ubox
13 19 0.003569614 ubox
13 22 0.997588409 ubox
13 23 0.006507074 ubox
13 59 0.009373837 ubox
13 60 0.061467215 ubox
13 66 0.009558764 ubox
14 18 0.004218972 ubox
14 20 0.006303632 ubox
14 21 0.997667812 ubox
14 54 0.015833110 ubox
14 55 0.011451813 ubox
14 58 0.010899941 ubox
14 65 0.009554127 ubox
15 20 0.993207062 ubox
15 21 0.005236064 ubox
15 53 0.015830373 ubox
15 54 0.011573841 ubox
15 58 0.041589184 ubox
15 64 0.009505796 ubox
16 55 0.015822663 ubox
17 55 0.007205167 ubox
18 63 0.006872948 ubox
19 52 0.059490976 ubox
19 53 0.004842483 ubox
19 54 0.005388763 ubox
19 62 0.006986882 ubox
19 68 0.010574070 ubox
20 51 0.059770295 ubox
20 61 0.006969149 ubox
20 67 0.010588317 ubox
21 50 0.059749420 ubox
21 60 0.006943296 ubox
21 66 0.010588341 ubox
22 49 0.037061599 ubox
22 52 0.004769943 ubox
22 53 0.016168803 ubox
22 54 0.005420625 ubox
22 65 0.010609958 ubox
23 48 0.019143134 ubox
23 49 0.004429599 ubox
23 52 0.016214087 ubox
23 53 0.005375300 ubox
23 64 0.010571520 ubox
24 48 0.004726517 ubox
25 48 0.003217730 ubox
25 49 0.997619089 ubox
26 48 0.999454230 ubox
27 47 0.999983698 ubox
28 46 0.999994308 ubox
29 45 0.999995381 ubox
30 44 0.999990135 ubox
31 43 0.999847043 ubox
32 42 0.999954670 ubox
33 40 0.053583634 ubox
33 41 0.993278624 ubox
49 63 0.010644398 ubox
50 62 0.043592124 ubox
50 64 0.033781567 ubox
50 65 0.006093296 ubox
51 62 0.995917181 ubox
51 64 0.006309567 ubox
52 60 0.008727421 ubox
52 61 0.997951943 ubox
52 63 0.006461662 ubox
53 59 0.008747402 ubox
53 60 0.997962754 ubox
53 61 0.007192307 ubox
54 59 0.997429136 ubox
54 60 0.007692879 ubox
55 59 0.007367408 ubox
68 91 0.004386666 ubox
69 85 0.008878216 ubox
69 86 0.399644650 ubox
69 87 0.026115139 ubox
69 88 0.010711494 ubox
69 89 0.007765043 ubox
69 90 0.006693533 ubox
69 91 0.003669024 ubox
69 100 0.012552972 ubox
70 79 0.006365534 ubox
70 82 0.056845631 ubox
70 85 0.708152640 ubox
70 86 0.032553047 ubox
70 87 0.009146438 ubox
70 88 0.007602997 ubox
70 89 0.005296122 ubox
70 90 0.003249076 ubox
70 99 0.026489317 ubox
70 102 0.005680977 ubox
70 105 0.004147721 ubox
71 78 0.020649433 ubox
71 81 0.097560793 ubox
71 84 0.991639324 ubox
71 98 0.038251432 ubox
71 101 0.008079404 ubox
71 104 0.005866687 ubox
72 77 0.020213913 ubox
72 80 0.097607763 ubox
72 83 0.992019970 ubox
73 79 0.097360875 ubox
73 82 0.991961085 ubox
73 85 0.032636335 ubox
73 96 0.046587005 ubox
73 99 0.008819306 ubox
73 102 0.006640938 ubox
74 78 0.092785704 ubox
74 81 0.991951952 ubox
74 84 0.036453883 ubox
74 95 0.048735464 ubox
74 98 0.009199561 ubox
74 101 0.006930352 ubox
75 80 0.879168221 ubox
75 83 0.036280076 ubox
76 82 0.034514752 ubox
76 93 0.049265016 ubox
76 94 0.003228467 ubox
76 97 0.005109450 ubox
76 100 0.003328265 ubox
77 92 0.051297303 ubox
77 96 0.005082107 ubox
77 99 0.003316285 ubox
78 91 0.051413977 ubox
79 84 0.004913579 ubox
79 95 0.012360270 ubox
79 98 0.006347313 ubox
80 88 0.003492504 ubox
80 89 0.009224403 ubox
80 92 0.009178226 ubox
80 94 0.011955874 ubox
80 97 0.006132127 ubox
81 91 0.009547535 ubox
83 92 0.039781189 ubox
84 91 0.042606341 ubox
91 95 0.042935204 ubox
91 98 0.103530797 ubox
91 101 0.045426363 ubox
91 104 0.035160713 ubox
91 107 0.010402883 ubox
4 70 0.9500000 lbox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
