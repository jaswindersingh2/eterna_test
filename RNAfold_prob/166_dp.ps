%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (166)
} def

/sequence { (\
GGAAAAACGCAGAUGAGGGCCAAUCAAAGAGCAAAAGCAUCAGAAUGAGCGCGGCAUCAAGCAAAAACGCUCUGUUUCGACAGAGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.342309535 ubox
1 10 0.096748323 ubox
1 21 0.003605846 ubox
1 62 0.009340689 ubox
1 68 0.106879133 ubox
1 95 0.063604172 ubox
1 98 0.065357852 ubox
1 101 0.065599758 ubox
1 104 0.065714341 ubox
1 107 0.016590118 ubox
2 8 0.085798357 ubox
2 10 0.024837025 ubox
2 20 0.003603394 ubox
2 58 0.004835609 ubox
2 62 0.007178327 ubox
2 68 0.075194758 ubox
2 95 0.032908801 ubox
2 98 0.033167971 ubox
2 101 0.033690641 ubox
2 104 0.033543926 ubox
2 107 0.010945638 ubox
3 57 0.004709368 ubox
8 17 0.003932403 ubox
8 51 0.003797928 ubox
8 53 0.011284674 ubox
8 61 0.080590337 ubox
8 91 0.035493200 ubox
9 20 0.004704053 ubox
9 50 0.004178234 ubox
9 52 0.011371429 ubox
9 58 0.003265080 ubox
9 62 0.914880468 ubox
9 68 0.004477577 ubox
9 86 0.007351954 ubox
9 95 0.014988402 ubox
9 98 0.014927031 ubox
9 101 0.015193897 ubox
9 104 0.015269779 ubox
9 107 0.005784341 ubox
10 17 0.003395733 ubox
10 19 0.004720580 ubox
10 49 0.004165332 ubox
10 51 0.011358680 ubox
10 61 0.914728786 ubox
10 85 0.007318955 ubox
10 91 0.018339906 ubox
12 25 0.011643979 ubox
12 41 0.007723475 ubox
12 55 0.003711596 ubox
12 57 0.005218497 ubox
12 58 0.995818874 ubox
12 62 0.004563692 ubox
12 98 0.003597675 ubox
12 101 0.004248339 ubox
12 104 0.004085662 ubox
13 24 0.011650725 ubox
13 40 0.007736104 ubox
13 57 0.997454085 ubox
14 23 0.011382145 ubox
14 26 0.005539927 ubox
14 39 0.007735835 ubox
14 56 0.997281283 ubox
14 59 0.052136167 ubox
14 96 0.004199498 ubox
14 99 0.005169214 ubox
14 102 0.005084399 ubox
14 105 0.003780176 ubox
15 21 0.003668019 ubox
15 25 0.006128785 ubox
15 38 0.007728979 ubox
15 55 0.995203076 ubox
15 58 0.053178200 ubox
15 95 0.004414689 ubox
15 98 0.005441087 ubox
15 101 0.005370330 ubox
15 104 0.004144041 ubox
16 24 0.006075118 ubox
16 57 0.052693300 ubox
17 52 0.926518207 ubox
17 55 0.003879347 ubox
17 58 0.004765121 ubox
18 50 0.023756779 ubox
18 52 0.322448170 ubox
18 55 0.009193997 ubox
18 57 0.004358570 ubox
18 95 0.003293162 ubox
18 98 0.003263935 ubox
19 32 0.008754072 ubox
19 50 0.997486801 ubox
19 52 0.029736911 ubox
19 55 0.049112934 ubox
20 31 0.008750824 ubox
20 49 0.997522892 ubox
20 51 0.030612526 ubox
20 53 0.008081513 ubox
20 54 0.049458250 ubox
21 29 0.007735689 ubox
21 47 0.978747830 ubox
21 49 0.015789502 ubox
21 51 0.008397519 ubox
21 53 0.049360789 ubox
22 46 0.970164650 ubox
23 46 0.140627225 ubox
24 30 0.008376615 ubox
24 42 0.007856887 ubox
24 43 0.006534720 ubox
24 44 0.961477051 ubox
24 45 0.124862476 ubox
24 47 0.004791005 ubox
24 48 0.104848455 ubox
25 29 0.008860942 ubox
25 43 0.974882374 ubox
25 47 0.105649951 ubox
26 40 0.006436564 ubox
26 46 0.102349883 ubox
27 40 0.026751147 ubox
27 46 0.003198790 ubox
28 40 0.208662427 ubox
29 38 0.027015125 ubox
29 40 0.144779887 ubox
29 41 0.914756577 ubox
29 58 0.009648877 ubox
30 40 0.911927428 ubox
30 57 0.009624426 ubox
31 38 0.991271129 ubox
31 50 0.003509224 ubox
31 52 0.008642902 ubox
31 55 0.011114901 ubox
32 37 0.991236734 ubox
32 49 0.003509182 ubox
32 51 0.008643456 ubox
32 54 0.011129198 ubox
37 50 0.017891441 ubox
37 52 0.006082630 ubox
38 47 0.003198739 ubox
38 49 0.017875325 ubox
38 51 0.006082500 ubox
39 46 0.003505015 ubox
40 45 0.003335493 ubox
40 48 0.022525113 ubox
41 47 0.023093580 ubox
42 46 0.018731975 ubox
43 62 0.004015181 ubox
46 59 0.005432877 ubox
47 58 0.005742736 ubox
47 72 0.004255846 ubox
48 57 0.005722623 ubox
48 71 0.004267007 ubox
49 55 0.005006284 ubox
49 70 0.004270907 ubox
50 54 0.004977957 ubox
50 69 0.004270919 ubox
51 62 0.011681335 ubox
51 68 0.004238918 ubox
52 61 0.011699834 ubox
54 62 0.020384742 ubox
55 61 0.020415862 ubox
60 71 0.016539236 ubox
61 68 0.038421232 ubox
61 70 0.018546573 ubox
61 95 0.022297309 ubox
61 98 0.005005790 ubox
62 69 0.018646591 ubox
62 91 0.016595747 ubox
68 91 0.038266293 ubox
69 86 0.998683958 ubox
70 85 0.999743578 ubox
71 84 0.999636465 ubox
72 83 0.999789156 ubox
73 82 0.999548631 ubox
73 96 0.017928194 ubox
74 81 0.999221767 ubox
74 95 0.019422468 ubox
75 79 0.036004685 ubox
75 80 0.923689108 ubox
75 94 0.019417952 ubox
76 80 0.028233064 ubox
76 93 0.019406246 ubox
77 92 0.019425946 ubox
78 91 0.019427893 ubox
86 91 0.004932250 ubox
91 95 0.042873662 ubox
91 98 0.103464177 ubox
91 101 0.045435442 ubox
91 104 0.035199682 ubox
91 107 0.010414826 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
