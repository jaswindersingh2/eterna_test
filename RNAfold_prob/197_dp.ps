%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (197)
} def

/sequence { (\
GGAAAACUCAAGAACACGUUGGGAAAACCCAAACGAAAACUUCAGAGAAAACUCGAAGAGUUCAAGAGCUCCUAUUUCGAUAGGAGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.032187807 ubox
1 8 0.012456058 ubox
1 9 0.026745270 ubox
1 15 0.008190101 ubox
1 17 0.004000868 ubox
1 29 0.004450010 ubox
1 30 0.005219337 ubox
1 63 0.009793358 ubox
1 69 0.004149444 ubox
1 72 0.051204247 ubox
1 95 0.067770149 ubox
1 98 0.068919053 ubox
1 101 0.070260665 ubox
1 104 0.070528843 ubox
1 107 0.017806852 ubox
2 7 0.017780500 ubox
2 8 0.022671989 ubox
2 9 0.045876198 ubox
2 28 0.004477951 ubox
2 29 0.005197896 ubox
2 62 0.008183110 ubox
2 63 0.016365557 ubox
2 69 0.005609709 ubox
2 71 0.051367113 ubox
2 95 0.035583517 ubox
2 98 0.035991780 ubox
2 101 0.036602365 ubox
2 104 0.036458960 ubox
2 107 0.011896547 ubox
3 8 0.043039096 ubox
3 61 0.006021496 ubox
3 62 0.015118537 ubox
3 70 0.050899050 ubox
4 61 0.008356504 ubox
5 62 0.029378023 ubox
5 70 0.006065479 ubox
6 61 0.035931999 ubox
6 70 0.004253176 ubox
7 12 0.004852620 ubox
7 23 0.007334340 ubox
7 45 0.007585253 ubox
7 47 0.019134105 ubox
7 60 0.037656541 ubox
7 66 0.033060720 ubox
7 68 0.982327861 ubox
7 91 0.011155471 ubox
8 22 0.007360486 ubox
8 44 0.007554478 ubox
8 46 0.019275459 ubox
8 59 0.037461740 ubox
8 65 0.032861663 ubox
8 67 0.988504709 ubox
8 90 0.010196933 ubox
8 92 0.021996612 ubox
9 21 0.007392976 ubox
9 45 0.019223443 ubox
9 58 0.035520449 ubox
9 66 0.988434158 ubox
9 68 0.003324872 ubox
9 91 0.023048583 ubox
10 20 0.007405938 ubox
10 42 0.019923948 ubox
11 19 0.007253296 ubox
11 41 0.023458700 ubox
12 17 0.009229994 ubox
12 40 0.023931126 ubox
12 43 0.009904887 ubox
12 62 0.003463638 ubox
12 63 0.992797154 ubox
12 95 0.004260219 ubox
12 98 0.005901699 ubox
12 101 0.006025415 ubox
12 104 0.006051236 ubox
13 42 0.009885428 ubox
13 61 0.003462808 ubox
13 62 0.993223956 ubox
14 41 0.009250886 ubox
14 61 0.992481098 ubox
15 60 0.991503953 ubox
15 91 0.003567859 ubox
16 61 0.005789598 ubox
17 35 0.963694177 ubox
17 58 0.017044289 ubox
17 60 0.006522236 ubox
18 34 0.982955424 ubox
18 95 0.004581336 ubox
18 98 0.005849018 ubox
18 101 0.006079963 ubox
18 104 0.006136567 ubox
19 31 0.004843851 ubox
19 32 0.580772011 ubox
19 33 0.803182250 ubox
19 94 0.004173935 ubox
19 97 0.005487186 ubox
19 100 0.005723107 ubox
19 103 0.005781650 ubox
20 31 0.815345769 ubox
20 32 0.565980343 ubox
20 33 0.003679796 ubox
20 96 0.004557679 ubox
20 99 0.004812767 ubox
20 102 0.004877881 ubox
21 29 0.036320535 ubox
21 30 0.994290953 ubox
21 95 0.003720116 ubox
21 98 0.004005221 ubox
21 101 0.004080000 ubox
22 28 0.037495091 ubox
22 29 0.994779880 ubox
22 30 0.093596785 ubox
23 28 0.988625327 ubox
23 29 0.093708774 ubox
23 30 0.003814484 ubox
34 55 0.003536141 ubox
35 40 0.006795326 ubox
35 43 0.016428359 ubox
35 54 0.003671856 ubox
35 63 0.059275152 ubox
36 41 0.003671427 ubox
36 42 0.016480128 ubox
36 53 0.003567784 ubox
36 62 0.060283971 ubox
37 41 0.012674882 ubox
37 61 0.059526574 ubox
37 62 0.004424160 ubox
38 61 0.004819073 ubox
38 62 0.027970118 ubox
39 61 0.033593996 ubox
40 47 0.003821810 ubox
40 58 0.988332574 ubox
40 60 0.034778434 ubox
41 46 0.003564147 ubox
41 49 0.006199705 ubox
41 56 0.006852754 ubox
41 57 0.994328719 ubox
41 58 0.024843303 ubox
41 59 0.036210772 ubox
41 60 0.003202190 ubox
42 48 0.006857291 ubox
42 55 0.006510102 ubox
42 56 0.995488540 ubox
42 57 0.029097562 ubox
42 58 0.033837589 ubox
42 59 0.027294409 ubox
43 47 0.006876658 ubox
43 55 0.991640165 ubox
43 58 0.028765125 ubox
44 53 0.128649687 ubox
45 52 0.128771473 ubox
45 53 0.014006721 ubox
45 54 0.988748161 ubox
46 53 0.988609742 ubox
47 52 0.980380902 ubox
47 53 0.004516098 ubox
47 54 0.029534476 ubox
47 63 0.005078813 ubox
48 53 0.027675213 ubox
48 62 0.004654913 ubox
50 62 0.016825682 ubox
51 61 0.019928374 ubox
52 60 0.020650972 ubox
52 68 0.007461812 ubox
53 59 0.020827910 ubox
53 67 0.007509380 ubox
54 58 0.020675719 ubox
54 66 0.007502781 ubox
55 63 0.005018822 ubox
56 62 0.004969766 ubox
57 61 0.003792270 ubox
60 95 0.054984171 ubox
60 98 0.010366654 ubox
60 101 0.003868665 ubox
60 104 0.003183060 ubox
61 93 0.032494429 ubox
61 94 0.051610629 ubox
61 97 0.010032014 ubox
61 100 0.003704297 ubox
62 92 0.042082340 ubox
62 93 0.045189035 ubox
62 96 0.008275887 ubox
63 68 0.003245922 ubox
63 91 0.046891448 ubox
66 95 0.003257411 ubox
68 95 0.004466881 ubox
68 98 0.003481460 ubox
69 86 0.993570040 ubox
69 91 0.006168065 ubox
70 85 0.997979537 ubox
70 90 0.004018469 ubox
70 92 0.004465797 ubox
71 84 0.998627346 ubox
71 91 0.004647174 ubox
72 83 0.998625616 ubox
72 91 0.005302299 ubox
73 82 0.998096024 ubox
73 88 0.005531452 ubox
73 89 0.008592215 ubox
73 90 0.006193585 ubox
73 91 0.005963189 ubox
73 92 0.003249350 ubox
73 96 0.003304151 ubox
74 81 0.986454387 ubox
75 79 0.035365255 ubox
75 80 0.901001001 ubox
75 82 0.003380540 ubox
75 86 0.011493038 ubox
75 87 0.033670749 ubox
75 89 0.022712027 ubox
75 94 0.011194722 ubox
76 80 0.028551135 ubox
76 85 0.016232772 ubox
76 86 0.036175439 ubox
76 88 0.025814532 ubox
76 93 0.013298129 ubox
77 84 0.016721392 ubox
77 85 0.037148770 ubox
77 87 0.026514534 ubox
77 92 0.013750169 ubox
78 83 0.017014014 ubox
78 84 0.037241805 ubox
78 86 0.026618164 ubox
78 91 0.013802565 ubox
81 88 0.003893242 ubox
86 95 0.009907865 ubox
86 98 0.004023797 ubox
86 101 0.003224048 ubox
91 95 0.042940893 ubox
91 98 0.103521792 ubox
91 101 0.045410446 ubox
91 104 0.035139737 ubox
91 107 0.010396456 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
