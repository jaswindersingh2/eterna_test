%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (881)
} def

/sequence { (\
GGAAAGGAACUAGACUAGCAAGGAAAACCACCAAAAGGAAAGCAUAGAAACUAGAACCAAAAGGAACCUAGGCGAUUCGUCGCCUAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.012698911 ubox
1 11 0.005615218 ubox
1 19 0.004584231 ubox
1 29 0.005580913 ubox
1 32 0.011840205 ubox
1 57 0.004115582 ubox
1 58 0.052816883 ubox
1 67 0.020170344 ubox
1 68 0.146033279 ubox
1 69 0.008256628 ubox
1 95 0.072631724 ubox
1 98 0.073576951 ubox
1 101 0.076389750 ubox
1 104 0.076760105 ubox
1 107 0.019394349 ubox
2 10 0.006187325 ubox
2 19 0.018469812 ubox
2 28 0.005567095 ubox
2 31 0.011828668 ubox
2 57 0.052496706 ubox
2 58 0.006970702 ubox
2 67 0.145864523 ubox
2 68 0.012727486 ubox
2 95 0.038231419 ubox
2 98 0.038665464 ubox
2 101 0.039589013 ubox
2 104 0.039450120 ubox
2 107 0.012875565 ubox
4 69 0.004171441 ubox
5 11 0.007407985 ubox
5 16 0.030607263 ubox
5 52 0.028507711 ubox
5 69 0.087020720 ubox
6 10 0.007610255 ubox
6 15 0.031492486 ubox
6 16 0.005260914 ubox
6 19 0.003178652 ubox
6 29 0.013364604 ubox
6 32 0.005443051 ubox
6 51 0.029490148 ubox
6 52 0.010205964 ubox
6 57 0.048385983 ubox
6 58 0.944034722 ubox
6 67 0.008892687 ubox
6 68 0.118319598 ubox
6 69 0.008112312 ubox
6 95 0.028384871 ubox
6 98 0.028018229 ubox
6 101 0.027942080 ubox
6 104 0.027372037 ubox
6 107 0.009539645 ubox
7 15 0.005489999 ubox
7 28 0.013346957 ubox
7 31 0.005436349 ubox
7 51 0.010511485 ubox
7 57 0.944100067 ubox
7 58 0.026205448 ubox
7 67 0.117934003 ubox
7 68 0.011026430 ubox
7 95 0.020847892 ubox
7 98 0.020753342 ubox
7 101 0.017547582 ubox
7 104 0.016685822 ubox
7 107 0.005428139 ubox
10 18 0.016207320 ubox
10 22 0.009863221 ubox
10 23 0.004112009 ubox
10 47 0.035186372 ubox
10 54 0.993345231 ubox
10 63 0.015581077 ubox
10 64 0.008238311 ubox
10 91 0.010621266 ubox
11 17 0.016209150 ubox
11 21 0.009684330 ubox
11 22 0.003984541 ubox
11 46 0.035306388 ubox
11 53 0.995816331 ubox
11 62 0.014977968 ubox
11 63 0.007620322 ubox
11 90 0.010169324 ubox
12 16 0.014381842 ubox
12 45 0.035172397 ubox
12 52 0.995946327 ubox
13 19 0.009419681 ubox
13 43 0.010866270 ubox
13 51 0.994980733 ubox
13 57 0.005682800 ubox
13 58 0.012225155 ubox
13 95 0.003771822 ubox
13 98 0.003610206 ubox
13 101 0.003600235 ubox
13 104 0.003597579 ubox
14 45 0.004053124 ubox
15 22 0.026053961 ubox
15 23 0.014334556 ubox
15 37 0.005834512 ubox
15 38 0.004089955 ubox
15 42 0.034285961 ubox
15 47 0.989797402 ubox
15 54 0.050928702 ubox
15 91 0.005046918 ubox
16 21 0.025185994 ubox
16 22 0.014096281 ubox
16 36 0.005651703 ubox
16 37 0.003967076 ubox
16 41 0.033545175 ubox
16 44 0.006993965 ubox
16 46 0.990232629 ubox
16 47 0.010586806 ubox
16 48 0.018579308 ubox
16 49 0.006769280 ubox
16 50 0.011222491 ubox
16 53 0.051227641 ubox
16 90 0.004887613 ubox
17 45 0.982894389 ubox
17 52 0.051246247 ubox
18 29 0.003449653 ubox
18 31 0.006093967 ubox
18 32 0.005764720 ubox
18 43 0.982019755 ubox
18 45 0.004872581 ubox
18 51 0.050967033 ubox
19 23 0.004592558 ubox
19 37 0.007075610 ubox
19 38 0.025799533 ubox
19 42 0.982372578 ubox
19 47 0.029952490 ubox
20 45 0.009191355 ubox
21 45 0.015023588 ubox
21 69 0.005701355 ubox
22 28 0.120164125 ubox
22 29 0.903792799 ubox
22 31 0.035906834 ubox
22 32 0.105055596 ubox
22 43 0.027122048 ubox
22 45 0.004940351 ubox
22 68 0.007722872 ubox
23 28 0.899164287 ubox
23 29 0.075050382 ubox
23 31 0.105040626 ubox
23 32 0.026935147 ubox
23 43 0.040173659 ubox
23 45 0.003294773 ubox
23 67 0.007697559 ubox
24 45 0.006763499 ubox
28 37 0.035023026 ubox
28 38 0.157097924 ubox
28 42 0.009445095 ubox
28 64 0.003823259 ubox
29 37 0.157516083 ubox
29 38 0.018880446 ubox
29 42 0.010318211 ubox
29 63 0.003826910 ubox
31 37 0.059295749 ubox
31 38 0.913408290 ubox
31 42 0.003170827 ubox
31 64 0.011917146 ubox
32 37 0.916243795 ubox
32 38 0.074125862 ubox
32 42 0.003818727 ubox
32 47 0.003342163 ubox
32 63 0.011952191 ubox
36 45 0.004610354 ubox
36 52 0.007232747 ubox
36 69 0.003721790 ubox
37 43 0.023792493 ubox
37 51 0.007520970 ubox
37 58 0.015350250 ubox
37 68 0.005058789 ubox
38 43 0.012077415 ubox
38 57 0.015339953 ubox
38 67 0.005045125 ubox
39 45 0.004404522 ubox
40 45 0.004400393 ubox
41 52 0.016032095 ubox
42 51 0.016658527 ubox
43 47 0.007284909 ubox
43 54 0.012350567 ubox
45 50 0.003906192 ubox
45 53 0.022619202 ubox
46 52 0.023458129 ubox
47 51 0.023038505 ubox
51 63 0.005647232 ubox
51 64 0.003386544 ubox
51 71 0.005072985 ubox
52 62 0.005497162 ubox
52 63 0.003312326 ubox
52 70 0.006295355 ubox
53 69 0.007563799 ubox
54 67 0.013137219 ubox
54 68 0.009252268 ubox
57 63 0.016847697 ubox
57 64 0.265978228 ubox
58 63 0.266934184 ubox
58 64 0.022705784 ubox
59 69 0.003170926 ubox
60 69 0.007592428 ubox
61 69 0.006681111 ubox
62 69 0.085877647 ubox
63 67 0.027778461 ubox
63 68 0.116226231 ubox
63 69 0.030445157 ubox
63 95 0.074947652 ubox
63 98 0.025100715 ubox
63 101 0.018743510 ubox
63 104 0.016397575 ubox
63 107 0.005369613 ubox
64 68 0.040615579 ubox
64 69 0.007549197 ubox
64 95 0.028461756 ubox
64 98 0.009998087 ubox
64 101 0.008661670 ubox
64 104 0.007740732 ubox
65 69 0.004110837 ubox
67 91 0.049041133 ubox
68 91 0.126713872 ubox
69 86 0.941135415 ubox
69 87 0.044295305 ubox
69 88 0.016543727 ubox
69 89 0.015301805 ubox
69 90 0.099702123 ubox
69 91 0.005851452 ubox
69 92 0.004382984 ubox
69 93 0.003636915 ubox
70 85 0.994806183 ubox
71 81 0.003555919 ubox
71 84 0.999937890 ubox
72 80 0.003628889 ubox
72 83 0.999982983 ubox
73 79 0.003704769 ubox
73 82 0.999969571 ubox
74 78 0.003760177 ubox
74 81 0.998108207 ubox
75 80 0.884635326 ubox
85 90 0.003641876 ubox
91 95 0.043150451 ubox
91 98 0.103403039 ubox
91 101 0.045087630 ubox
91 104 0.034672984 ubox
91 107 0.010251572 ubox
6 58 0.9500000 lbox
7 57 0.9500000 lbox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
17 45 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
