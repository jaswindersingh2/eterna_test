%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (142)
} def

/sequence { (\
GGAAAAAAGCAGUAGGCGUGCGGUGGAGCCCGGAAACGAGGACAGCGACAGGAACUACGGGCAAAAAAGAUAUAGUUCGCUAUAUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.038858985 ubox
1 62 0.009011172 ubox
1 86 0.003706434 ubox
1 95 0.067321279 ubox
1 98 0.067787438 ubox
1 101 0.069346689 ubox
1 104 0.069642210 ubox
1 107 0.017583105 ubox
2 10 0.010196993 ubox
2 62 0.006659398 ubox
2 86 0.004525972 ubox
2 95 0.035532144 ubox
2 98 0.035683560 ubox
2 101 0.036440883 ubox
2 104 0.036300486 ubox
2 107 0.011845230 ubox
3 85 0.003637734 ubox
6 24 0.004682810 ubox
8 81 0.004960036 ubox
9 17 0.009109415 ubox
9 21 0.016165949 ubox
9 24 0.005746669 ubox
9 58 0.004550656 ubox
9 62 0.981773056 ubox
9 80 0.005138227 ubox
9 95 0.007064445 ubox
9 98 0.007121071 ubox
9 101 0.007234892 ubox
9 104 0.007272077 ubox
10 16 0.009105898 ubox
10 20 0.016185389 ubox
10 23 0.006058415 ubox
10 59 0.046304763 ubox
10 60 0.119540536 ubox
10 61 0.979017361 ubox
10 79 0.005132389 ubox
10 91 0.006825220 ubox
11 19 0.015877014 ubox
11 56 0.009302569 ubox
12 17 0.005451940 ubox
12 21 0.007864075 ubox
12 55 0.009524789 ubox
12 58 0.998460658 ubox
13 20 0.007862746 ubox
13 54 0.009184995 ubox
13 57 0.999216070 ubox
14 19 0.007591877 ubox
14 56 0.999115433 ubox
15 55 0.998864483 ubox
15 56 0.011238263 ubox
16 55 0.016303927 ubox
17 51 0.043640305 ubox
17 52 0.966832848 ubox
18 49 0.041912630 ubox
18 101 0.004061191 ubox
18 104 0.004465192 ubox
19 47 0.005391596 ubox
19 48 0.041817635 ubox
19 50 0.995128448 ubox
19 51 0.016034532 ubox
19 52 0.003561415 ubox
19 53 0.011279195 ubox
19 99 0.003885773 ubox
19 100 0.003384112 ubox
19 102 0.004507367 ubox
19 103 0.003616041 ubox
19 105 0.003712721 ubox
20 46 0.007611958 ubox
20 49 0.996689622 ubox
20 98 0.004668471 ubox
20 101 0.005491182 ubox
20 104 0.004230275 ubox
21 45 0.007651419 ubox
21 47 0.975966707 ubox
21 51 0.016196881 ubox
21 52 0.005082759 ubox
22 46 0.975381610 ubox
22 49 0.005065427 ubox
23 43 0.010212471 ubox
23 46 0.214912014 ubox
23 49 0.020651528 ubox
23 58 0.003377743 ubox
23 95 0.005256914 ubox
23 98 0.006359924 ubox
23 101 0.005149345 ubox
24 42 0.010214848 ubox
24 44 0.970642856 ubox
24 45 0.215219057 ubox
24 47 0.021218577 ubox
24 48 0.020628601 ubox
24 50 0.003943858 ubox
24 57 0.003634839 ubox
24 94 0.005093261 ubox
24 96 0.004022429 ubox
24 97 0.005648792 ubox
24 99 0.003524511 ubox
24 100 0.004577206 ubox
25 43 0.966100392 ubox
25 46 0.023227968 ubox
25 49 0.004223402 ubox
25 56 0.003662824 ubox
25 95 0.004977924 ubox
25 98 0.004314402 ubox
25 101 0.003360511 ubox
26 43 0.076437015 ubox
26 46 0.019820889 ubox
26 55 0.003661677 ubox
28 37 0.006485904 ubox
28 43 0.069997815 ubox
28 46 0.004311597 ubox
28 62 0.021309247 ubox
29 38 0.015192230 ubox
29 40 0.275642280 ubox
29 41 0.948395580 ubox
29 45 0.004211309 ubox
29 52 0.003472306 ubox
29 61 0.021334366 ubox
30 38 0.017829345 ubox
30 40 0.950711431 ubox
30 41 0.058308242 ubox
30 51 0.003459331 ubox
30 60 0.021334799 ubox
31 38 0.995191787 ubox
31 40 0.059357074 ubox
31 59 0.021333245 ubox
32 37 0.993262332 ubox
32 58 0.021251971 ubox
33 37 0.044257612 ubox
37 51 0.008301108 ubox
37 52 0.013727571 ubox
40 46 0.004496384 ubox
40 49 0.015907740 ubox
41 46 0.003912379 ubox
41 49 0.004532236 ubox
59 78 0.005254881 ubox
59 95 0.016296353 ubox
59 98 0.009572086 ubox
60 77 0.005266761 ubox
60 95 0.027675145 ubox
60 98 0.005516509 ubox
61 76 0.005292869 ubox
61 95 0.010219879 ubox
62 75 0.005297031 ubox
62 91 0.008228650 ubox
69 78 0.005520070 ubox
69 86 0.998397795 ubox
70 77 0.005448859 ubox
70 85 0.999409442 ubox
71 84 0.999353200 ubox
72 83 0.999382842 ubox
73 82 0.999392056 ubox
74 81 0.998952585 ubox
75 80 0.990721633 ubox
75 81 0.003187446 ubox
75 95 0.005095860 ubox
76 93 0.004247823 ubox
76 94 0.004420668 ubox
77 92 0.005306210 ubox
77 93 0.003549329 ubox
78 91 0.005887021 ubox
80 91 0.004075105 ubox
81 90 0.004059926 ubox
85 92 0.007938602 ubox
86 91 0.010494184 ubox
91 95 0.043026579 ubox
91 98 0.103723695 ubox
91 101 0.045500228 ubox
91 104 0.035210554 ubox
91 107 0.010417445 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
