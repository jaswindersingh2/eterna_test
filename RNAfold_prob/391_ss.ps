%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAACGUGCAUCCGUGCUGCAAAGCAGCACGUCUCAAAGAGACGCACAGAAACUGUGCGGAUGCACAGUCUCUCUUCGGAGAGACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

/coor [
[138.10862732 206.07174683]
[144.93081665 192.71295166]
[154.34107971 181.03189087]
[165.94154358 171.52247620]
[179.24176025 164.58673096]
[193.67936707 160.51792908]
[208.64123535 159.48797607]
[196.10891724 151.24534607]
[183.57659912 143.00271606]
[171.04428101 134.76007080]
[158.51196289 126.51744080]
[145.97964478 118.27481079]
[133.44732666 110.03217316]
[120.91501617 101.78953552]
[84.86264038 127.04949188]
[70.26696777 130.50872803]
[55.67129517 133.96797180]
[41.07562256 137.42721558]
[26.47994804 140.88644409]
[11.88427544 144.34568787]
[-2.71139741 147.80491638]
[-16.72920227 157.34103394]
[-29.77315712 146.51091003]
[-22.97720337 130.97865295]
[-6.17063570 133.20924377]
[8.42503738 129.75001526]
[23.02070999 126.29077148]
[37.61638260 122.83153534]
[52.21205521 119.37229919]
[66.80773163 115.91306305]
[81.40340424 112.45381927]
[84.43666840 97.76371002]
[72.40481567 88.80633545]
[60.37297058 79.84895325]
[48.34112167 70.89157867]
[36.30927658 61.93419647]
[19.99371529 57.32563019]
[19.90558052 40.37191391]
[36.17234039 35.59396362]
[45.26665497 49.90234756]
[57.29850006 58.85972595]
[69.33035278 67.81710815]
[81.36219788 76.77448273]
[93.39404297 85.73186493]
[106.38442993 78.23186493]
[104.64303589 63.33329010]
[102.90164185 48.43471527]
[101.16024780 33.53613663]
[99.41885376 18.63756180]
[97.67745972 3.73898745]
[89.83319092 -11.29110909]
[102.10439301 -22.98956490]
[116.74267578 -14.43637753]
[112.57603455 1.99759364]
[114.31742859 16.89616966]
[116.05882263 31.79474449]
[117.80021667 46.69332123]
[119.54161072 61.59189606]
[121.28300476 76.49047089]
[129.15765381 89.25721741]
[141.68997192 97.49985504]
[154.22229004 105.74249268]
[166.75460815 113.98512268]
[179.28692627 122.22776031]
[191.81922913 130.47039795]
[204.35154724 138.71302795]
[216.88386536 146.95565796]
[222.74862671 146.79046631]
[227.70698547 149.02680969]
[242.39709473 145.99354553]
[257.08718872 142.96028137]
[271.77731323 139.92701721]
[286.46740723 136.89375305]
[301.15753174 133.86048889]
[315.84762573 130.82722473]
[327.73184204 119.52687073]
[343.38159180 124.42758942]
[346.69778442 140.48794556]
[334.26901245 151.18641663]
[318.88088989 145.51733398]
[304.19079590 148.55059814]
[289.50067139 151.58386230]
[274.81057739 154.61712646]
[260.12045288 157.65039062]
[245.43035889 160.68365479]
[230.74024963 163.71691895]
[244.26708984 170.19953918]
[256.18206787 179.31178284]
[265.98144531 190.66838074]
[273.25088501 203.78916931]
[277.68304443 218.11943054]
[279.09051514 233.05325317]
[277.41378784 247.95924377]
[272.72378540 262.20718384]
[265.21878052 275.19467163]
[255.21609497 286.37258911]
[243.13861084 295.26837158]
[229.49699402 301.50585938]
[214.86799622 304.82135010]
[199.87013245 305.07464600]
[185.13752747 302.25509644]
[171.29304504 296.48184204]
[158.92204285 287.99902344]
[148.54756165 277.16525269]
[140.60823059 264.43862915]
[135.43974304 250.35720825]
[133.26058960 235.51634216]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 67]
[8 66]
[9 65]
[10 64]
[11 63]
[12 62]
[13 61]
[14 60]
[15 31]
[16 30]
[17 29]
[18 28]
[19 27]
[20 26]
[21 25]
[32 44]
[33 43]
[34 42]
[35 41]
[36 40]
[45 59]
[46 58]
[47 57]
[48 56]
[49 55]
[50 54]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
