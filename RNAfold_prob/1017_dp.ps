%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1017)
} def

/sequence { (\
GGAAAAGCGAAACGCAAGAUCAAAGAUCAAGAUACAAAGUAUCAAGGGCAAAGCCCAAGCCAAAGGCAGUUAUACUUCGGUAUAACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.029364643 ubox
1 13 0.012139888 ubox
1 15 0.006682006 ubox
1 21 0.029633935 ubox
1 43 0.003307551 ubox
1 56 0.007559528 ubox
1 60 0.003935708 ubox
1 61 0.109450855 ubox
1 67 0.011472971 ubox
1 78 0.004024522 ubox
1 86 0.027000788 ubox
1 95 0.399998599 ubox
1 98 0.402816402 ubox
1 101 0.411768406 ubox
1 104 0.413665923 ubox
1 107 0.104433703 ubox
2 8 0.020075542 ubox
2 13 0.008708875 ubox
2 15 0.007161047 ubox
2 20 0.027230925 ubox
2 21 0.045629120 ubox
2 28 0.004642408 ubox
2 43 0.005772681 ubox
2 55 0.006240983 ubox
2 56 0.003479658 ubox
2 60 0.109177718 ubox
2 61 0.007015537 ubox
2 67 0.008270445 ubox
2 77 0.003899207 ubox
2 78 0.005793724 ubox
2 86 0.013941390 ubox
2 95 0.210942418 ubox
2 98 0.211713239 ubox
2 101 0.216215066 ubox
2 104 0.215411226 ubox
2 107 0.070284106 ubox
3 20 0.044854749 ubox
3 27 0.004329497 ubox
3 42 0.005177687 ubox
3 76 0.003603810 ubox
3 77 0.005723331 ubox
4 76 0.004956406 ubox
6 81 0.006128270 ubox
7 13 0.015265066 ubox
7 15 0.985270895 ubox
7 40 0.003888205 ubox
7 60 0.007674758 ubox
7 67 0.055366999 ubox
7 95 0.026520061 ubox
7 98 0.027055058 ubox
7 101 0.025925243 ubox
7 104 0.025671121 ubox
7 107 0.008958976 ubox
8 14 0.986479009 ubox
8 39 0.003964341 ubox
8 59 0.007716183 ubox
8 66 0.055377951 ubox
8 79 0.007480009 ubox
8 91 0.030126939 ubox
9 13 0.922904329 ubox
9 15 0.022206375 ubox
9 21 0.006555534 ubox
9 28 0.003241470 ubox
9 43 0.004661909 ubox
9 78 0.007527357 ubox
9 95 0.024538455 ubox
9 98 0.023886372 ubox
9 101 0.023853075 ubox
9 104 0.023697218 ubox
9 107 0.008961565 ubox
10 20 0.006265009 ubox
10 42 0.004604745 ubox
10 77 0.007432167 ubox
11 76 0.006398209 ubox
12 40 0.004751125 ubox
13 18 0.007087070 ubox
13 39 0.004824944 ubox
13 91 0.022350691 ubox
14 60 0.054526089 ubox
14 67 0.011607120 ubox
14 95 0.023467678 ubox
14 98 0.023467025 ubox
14 101 0.023794588 ubox
14 104 0.023810161 ubox
14 107 0.009011961 ubox
15 31 0.005264010 ubox
15 59 0.054577807 ubox
15 66 0.011579978 ubox
15 91 0.029658966 ubox
17 27 0.003814183 ubox
18 27 0.003714017 ubox
18 28 0.988554845 ubox
18 35 0.003987884 ubox
18 95 0.015494614 ubox
18 98 0.012577936 ubox
18 101 0.013772941 ubox
18 104 0.012715758 ubox
18 107 0.004422513 ubox
19 27 0.989527915 ubox
19 33 0.008324556 ubox
20 24 0.003223590 ubox
20 25 0.008519273 ubox
20 26 0.988957441 ubox
20 29 0.003259440 ubox
20 32 0.008550725 ubox
20 92 0.039786803 ubox
20 93 0.003765803 ubox
20 99 0.003294809 ubox
21 25 0.980791442 ubox
21 31 0.008604846 ubox
21 91 0.042456142 ubox
22 27 0.003533305 ubox
25 43 0.004473232 ubox
25 95 0.016331996 ubox
25 98 0.012507076 ubox
25 101 0.012604535 ubox
25 104 0.012602511 ubox
25 107 0.004398410 ubox
26 42 0.004447702 ubox
27 41 0.004224701 ubox
27 45 0.004362451 ubox
27 92 0.045939579 ubox
27 93 0.004244493 ubox
28 39 0.003388928 ubox
28 91 0.049142479 ubox
31 35 0.003782700 ubox
31 43 0.996787305 ubox
31 95 0.003901312 ubox
31 98 0.003820986 ubox
31 101 0.004066794 ubox
31 104 0.004211930 ubox
32 40 0.006400315 ubox
32 42 0.997780572 ubox
32 83 0.004811350 ubox
33 39 0.006568939 ubox
33 41 0.997660792 ubox
33 82 0.005002211 ubox
34 40 0.996903543 ubox
34 81 0.005031119 ubox
35 39 0.987171289 ubox
35 80 0.005016294 ubox
37 77 0.004919169 ubox
38 76 0.005054836 ubox
39 43 0.003451092 ubox
39 75 0.005087162 ubox
39 95 0.029364703 ubox
39 98 0.008615293 ubox
39 101 0.008468438 ubox
39 104 0.008392360 ubox
40 74 0.005080319 ubox
40 94 0.028946794 ubox
40 97 0.008310278 ubox
40 100 0.008175233 ubox
40 103 0.008101765 ubox
41 73 0.005021169 ubox
42 72 0.004641205 ubox
42 92 0.029222707 ubox
43 91 0.029770938 ubox
46 55 0.017546338 ubox
46 56 0.998675423 ubox
47 54 0.017554311 ubox
47 55 0.999743578 ubox
47 56 0.008221832 ubox
47 61 0.005749866 ubox
48 54 0.999723635 ubox
48 55 0.007657860 ubox
48 60 0.005764285 ubox
49 53 0.992456925 ubox
49 59 0.005767092 ubox
53 67 0.004106387 ubox
54 66 0.004070510 ubox
55 65 0.004022999 ubox
59 67 0.989351771 ubox
59 81 0.008241352 ubox
60 65 0.010088495 ubox
60 66 0.990361253 ubox
60 80 0.008436068 ubox
61 65 0.983167210 ubox
61 66 0.010221106 ubox
61 79 0.008426405 ubox
63 77 0.008023711 ubox
64 76 0.008313727 ubox
65 75 0.008322014 ubox
67 91 0.005229046 ubox
68 76 0.003543716 ubox
69 75 0.004391105 ubox
69 86 0.997141239 ubox
69 95 0.007903157 ubox
69 98 0.005550757 ubox
70 74 0.003961667 ubox
70 85 0.998452867 ubox
70 94 0.007629956 ubox
70 97 0.005370576 ubox
71 84 0.999008492 ubox
71 93 0.006398974 ubox
71 96 0.004453896 ubox
72 83 0.999273304 ubox
73 82 0.999335545 ubox
74 81 0.999419551 ubox
75 79 0.011999327 ubox
75 80 0.998562346 ubox
75 91 0.008175211 ubox
76 80 0.004045743 ubox
76 90 0.008176078 ubox
76 93 0.003695678 ubox
77 89 0.008025053 ubox
77 92 0.004187999 ubox
78 91 0.004232392 ubox
79 86 0.003700639 ubox
80 86 0.007995559 ubox
81 85 0.007205567 ubox
86 91 0.011284337 ubox
91 95 0.071374391 ubox
91 98 0.144521081 ubox
91 101 0.047496780 ubox
91 104 0.015596012 ubox
91 107 0.003741075 ubox
1 95 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
