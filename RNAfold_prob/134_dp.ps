%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (134)
} def

/sequence { (\
GGAAAAAACGAGAACACACGAGACCAAAGGAGAAAACUACCAGGACUACGAGAAGUUCAACGAAAAAAGAGCUAUUUCGAUAGCUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.186687747 ubox
1 15 0.017294418 ubox
1 17 0.016044307 ubox
1 19 0.012316373 ubox
1 24 0.004966878 ubox
1 25 0.065300711 ubox
1 41 0.019160603 ubox
1 58 0.009857852 ubox
1 61 0.024465704 ubox
1 86 0.005739229 ubox
1 95 0.070808052 ubox
1 98 0.071165520 ubox
1 101 0.072546959 ubox
1 104 0.073183745 ubox
1 107 0.018486433 ubox
2 9 0.094140991 ubox
2 15 0.006585159 ubox
2 17 0.005317515 ubox
2 19 0.004361249 ubox
2 24 0.065195933 ubox
2 25 0.005767348 ubox
2 40 0.019094160 ubox
2 57 0.009473919 ubox
2 58 0.012059977 ubox
2 61 0.011791693 ubox
2 85 0.003470146 ubox
2 86 0.006780745 ubox
2 95 0.036519794 ubox
2 98 0.036847491 ubox
2 101 0.037409955 ubox
2 104 0.037315352 ubox
2 107 0.012175672 ubox
3 56 0.008935177 ubox
3 57 0.011857092 ubox
3 85 0.005860943 ubox
4 38 0.003557763 ubox
4 56 0.010477676 ubox
7 57 0.010350830 ubox
8 56 0.011684771 ubox
9 20 0.088476064 ubox
9 22 0.021651976 ubox
9 29 0.004516674 ubox
9 32 0.003693067 ubox
9 50 0.006624950 ubox
9 55 0.011892450 ubox
9 62 0.528082380 ubox
9 79 0.003774683 ubox
9 91 0.031035546 ubox
10 15 0.018221694 ubox
10 17 0.021612158 ubox
10 19 0.089767491 ubox
10 24 0.003693829 ubox
10 25 0.007867319 ubox
10 49 0.006590672 ubox
10 57 0.005605379 ubox
10 58 0.097118787 ubox
10 61 0.534327206 ubox
10 78 0.003834573 ubox
10 86 0.036095829 ubox
10 95 0.033585865 ubox
10 98 0.032936899 ubox
10 101 0.033492194 ubox
10 104 0.033621164 ubox
10 107 0.012736003 ubox
11 38 0.004999214 ubox
11 47 0.005431957 ubox
11 56 0.006310420 ubox
11 57 0.096423513 ubox
11 77 0.003815968 ubox
11 85 0.036013349 ubox
12 17 0.040087271 ubox
12 19 0.025177965 ubox
12 24 0.006448609 ubox
12 25 0.011119057 ubox
12 37 0.005121559 ubox
12 46 0.005427179 ubox
12 56 0.090809611 ubox
12 57 0.022478120 ubox
12 58 0.972545725 ubox
12 61 0.007076876 ubox
12 76 0.003681065 ubox
12 84 0.035733747 ubox
12 86 0.004232492 ubox
12 95 0.010513938 ubox
12 98 0.010220876 ubox
12 101 0.010352406 ubox
12 104 0.010382683 ubox
12 107 0.003614853 ubox
13 56 0.024675788 ubox
13 57 0.973873893 ubox
13 75 0.003400084 ubox
13 85 0.003864083 ubox
14 56 0.973735532 ubox
14 57 0.003168999 ubox
15 20 0.016226303 ubox
15 22 0.020091857 ubox
15 29 0.003487892 ubox
15 43 0.003830635 ubox
15 52 0.018742696 ubox
15 55 0.971276312 ubox
15 62 0.004411076 ubox
15 91 0.010464527 ubox
16 56 0.012271637 ubox
17 22 0.016534222 ubox
17 29 0.003958422 ubox
17 30 0.004179329 ubox
17 32 0.004162346 ubox
17 50 0.017940137 ubox
17 52 0.479387618 ubox
17 55 0.013474313 ubox
17 62 0.004387787 ubox
17 91 0.009791986 ubox
19 29 0.009270244 ubox
19 30 0.005868551 ubox
19 32 0.003999957 ubox
19 50 0.961398937 ubox
19 52 0.025778491 ubox
19 62 0.021830727 ubox
19 91 0.008650027 ubox
20 24 0.005336933 ubox
20 25 0.020937715 ubox
20 46 0.004771269 ubox
20 47 0.003731358 ubox
20 49 0.962503011 ubox
20 61 0.021818989 ubox
20 86 0.032336468 ubox
20 95 0.009263414 ubox
20 98 0.009144009 ubox
20 101 0.009309591 ubox
20 104 0.009356750 ubox
20 107 0.003546524 ubox
21 38 0.006306573 ubox
21 47 0.969587333 ubox
21 85 0.032342298 ubox
22 37 0.006445504 ubox
22 46 0.971257993 ubox
22 47 0.026055493 ubox
22 49 0.018403638 ubox
22 61 0.004425284 ubox
22 84 0.032183472 ubox
22 86 0.003443428 ubox
22 95 0.010285436 ubox
22 98 0.010080175 ubox
22 101 0.010293261 ubox
22 104 0.010278445 ubox
22 107 0.003587638 ubox
23 47 0.020801947 ubox
24 29 0.006488502 ubox
24 30 0.031731620 ubox
24 32 0.004585215 ubox
24 43 0.020698244 ubox
24 44 0.980157050 ubox
24 62 0.003441238 ubox
24 91 0.006895019 ubox
25 29 0.031650317 ubox
25 30 0.008716752 ubox
25 32 0.009617640 ubox
25 43 0.980795270 ubox
25 44 0.029574484 ubox
25 62 0.006577191 ubox
25 91 0.013758272 ubox
27 38 0.004193294 ubox
28 38 0.123434229 ubox
29 37 0.127326790 ubox
29 38 0.095208491 ubox
29 40 0.087326454 ubox
29 41 0.967264020 ubox
29 61 0.005333215 ubox
29 95 0.003904144 ubox
29 98 0.005627402 ubox
29 101 0.006137572 ubox
29 104 0.004883035 ubox
30 37 0.097852062 ubox
30 38 0.019675496 ubox
30 40 0.966615047 ubox
30 41 0.011884611 ubox
30 86 0.004463949 ubox
31 38 0.929529994 ubox
31 85 0.004459552 ubox
32 37 0.926586204 ubox
32 38 0.080283825 ubox
32 40 0.008532267 ubox
32 41 0.011784544 ubox
32 58 0.006884794 ubox
32 84 0.004431011 ubox
32 95 0.004506207 ubox
32 98 0.004636794 ubox
32 101 0.003746378 ubox
33 38 0.068278807 ubox
33 57 0.006338194 ubox
34 38 0.014675083 ubox
34 56 0.003492145 ubox
35 57 0.008531698 ubox
36 56 0.010872930 ubox
37 43 0.005443261 ubox
37 44 0.004997572 ubox
37 55 0.011439871 ubox
37 91 0.010129945 ubox
38 42 0.005083643 ubox
38 43 0.004805642 ubox
38 54 0.011210247 ubox
38 63 0.004880456 ubox
38 90 0.009827738 ubox
40 52 0.009880115 ubox
40 62 0.006814893 ubox
40 91 0.003324563 ubox
41 50 0.004851379 ubox
41 62 0.011651992 ubox
41 91 0.004488371 ubox
42 85 0.003984643 ubox
43 49 0.013209014 ubox
43 58 0.165905793 ubox
43 61 0.003913513 ubox
43 84 0.004113589 ubox
43 85 0.025969457 ubox
43 86 0.026032579 ubox
44 49 0.003826800 ubox
44 57 0.166716091 ubox
44 58 0.008248479 ubox
44 84 0.029216952 ubox
44 85 0.023041651 ubox
44 86 0.032669484 ubox
45 56 0.167226749 ubox
45 57 0.006321305 ubox
45 85 0.032727700 ubox
46 52 0.007104895 ubox
46 55 0.167396613 ubox
46 83 0.072038742 ubox
47 51 0.006481612 ubox
47 53 0.005990704 ubox
47 54 0.162234488 ubox
47 82 0.072275486 ubox
48 56 0.010952499 ubox
48 81 0.071897546 ubox
49 55 0.011940263 ubox
49 62 0.006554178 ubox
49 79 0.074936145 ubox
50 58 0.013319557 ubox
50 61 0.006590253 ubox
50 78 0.075148645 ubox
51 56 0.003177332 ubox
51 57 0.013164204 ubox
51 77 0.075038517 ubox
52 56 0.008953506 ubox
52 58 0.015012713 ubox
52 61 0.005499697 ubox
52 75 0.003895416 ubox
52 76 0.074660832 ubox
52 101 0.004350005 ubox
52 104 0.006067160 ubox
53 57 0.013082278 ubox
53 75 0.073490805 ubox
54 73 0.074216849 ubox
55 61 0.011850297 ubox
55 72 0.075324836 ubox
55 95 0.007121384 ubox
55 98 0.013823662 ubox
55 101 0.019996655 ubox
55 104 0.004625528 ubox
56 60 0.010695911 ubox
56 63 0.003228906 ubox
56 64 0.005683703 ubox
56 71 0.075291668 ubox
56 93 0.003880786 ubox
56 94 0.006738729 ubox
56 97 0.013742183 ubox
56 100 0.019883127 ubox
56 103 0.004579354 ubox
57 62 0.003241863 ubox
57 63 0.006646704 ubox
57 64 0.003226485 ubox
57 70 0.075267469 ubox
57 92 0.004880124 ubox
57 93 0.006079857 ubox
57 96 0.012581512 ubox
57 99 0.018182862 ubox
57 102 0.004134338 ubox
58 62 0.006302831 ubox
58 69 0.075227981 ubox
58 91 0.005403702 ubox
61 69 0.006226627 ubox
61 79 0.005375909 ubox
61 91 0.038466333 ubox
62 78 0.005484448 ubox
62 86 0.003165295 ubox
62 95 0.030041451 ubox
62 98 0.006064941 ubox
62 101 0.006149978 ubox
62 104 0.005991410 ubox
63 77 0.005454579 ubox
64 76 0.005343331 ubox
65 75 0.004858316 ubox
69 86 0.995656535 ubox
70 85 0.996793434 ubox
71 84 0.997127640 ubox
72 83 0.997127909 ubox
73 82 0.996595967 ubox
74 81 0.984971638 ubox
75 79 0.035311985 ubox
75 80 0.899646675 ubox
75 82 0.003347039 ubox
76 80 0.028507727 ubox
84 91 0.005596430 ubox
85 90 0.005215397 ubox
85 92 0.012607793 ubox
86 91 0.015035789 ubox
91 95 0.043363546 ubox
91 98 0.104113190 ubox
91 101 0.045474461 ubox
91 104 0.035029758 ubox
91 107 0.010357930 ubox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
