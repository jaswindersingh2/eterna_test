%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1054)
} def

/sequence { (\
GGAAAAGGCAAAGCCAAGAUCAAAGAUCAAGAAUCAAAGAUUCAAGUACAAAGUACAACGCAAAGCGAGCGGUUCUUCGGAGCUGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.008904843 ubox
1 15 0.028092189 ubox
1 21 0.031133844 ubox
1 35 0.003568887 ubox
1 43 0.009101188 ubox
1 49 0.011327086 ubox
1 56 0.012264353 ubox
1 59 0.032694835 ubox
1 61 0.025958046 ubox
1 66 0.024447183 ubox
1 86 0.016758635 ubox
1 95 0.400946385 ubox
1 98 0.403540249 ubox
1 101 0.412816458 ubox
1 104 0.414709072 ubox
1 107 0.104708128 ubox
2 9 0.010896766 ubox
2 14 0.028153763 ubox
2 15 0.004863541 ubox
2 20 0.028606000 ubox
2 21 0.047135936 ubox
2 28 0.003876554 ubox
2 35 0.006540885 ubox
2 42 0.008451611 ubox
2 43 0.012715614 ubox
2 49 0.006262675 ubox
2 56 0.006766266 ubox
2 59 0.023729675 ubox
2 61 0.016822954 ubox
2 66 0.021423518 ubox
2 86 0.011756949 ubox
2 95 0.211467404 ubox
2 98 0.212267357 ubox
2 101 0.216804977 ubox
2 104 0.215994320 ubox
2 107 0.070483837 ubox
3 20 0.046339762 ubox
3 27 0.003537324 ubox
3 34 0.006130784 ubox
3 41 0.007670987 ubox
3 42 0.012356419 ubox
3 84 0.004156552 ubox
4 41 0.010405486 ubox
7 14 0.017442302 ubox
7 15 0.993131834 ubox
7 66 0.003190563 ubox
7 95 0.025115667 ubox
7 98 0.025705493 ubox
7 101 0.024518982 ubox
7 104 0.024291808 ubox
7 107 0.008480411 ubox
8 14 0.994721998 ubox
8 15 0.009422318 ubox
8 61 0.017086140 ubox
8 66 0.044747166 ubox
8 86 0.006283937 ubox
8 95 0.011989670 ubox
8 98 0.011986745 ubox
8 101 0.010976772 ubox
8 104 0.010766797 ubox
8 107 0.003508284 ubox
9 13 0.987502805 ubox
9 60 0.017106847 ubox
9 65 0.044766838 ubox
9 85 0.006277868 ubox
9 91 0.015053187 ubox
10 84 0.005462034 ubox
13 61 0.042803272 ubox
13 66 0.010649678 ubox
13 95 0.012384076 ubox
13 98 0.012085070 ubox
13 101 0.011886829 ubox
13 104 0.011800090 ubox
13 107 0.004118136 ubox
14 60 0.042684489 ubox
14 65 0.010610816 ubox
14 91 0.011314993 ubox
15 31 0.003647306 ubox
15 60 0.003311335 ubox
15 91 0.018127242 ubox
17 27 0.003811031 ubox
18 27 0.003711591 ubox
18 28 0.987775258 ubox
18 35 0.007192639 ubox
18 42 0.025224206 ubox
18 43 0.012273034 ubox
18 95 0.015501919 ubox
18 98 0.012586485 ubox
18 101 0.013764780 ubox
18 104 0.012728267 ubox
18 107 0.004427701 ubox
19 27 0.988744936 ubox
19 34 0.007166884 ubox
19 41 0.028040876 ubox
19 42 0.009179914 ubox
20 24 0.003231553 ubox
20 25 0.008512583 ubox
20 26 0.988174614 ubox
20 29 0.003254223 ubox
20 32 0.004913645 ubox
20 33 0.005607770 ubox
20 40 0.029453328 ubox
20 68 0.004813444 ubox
20 92 0.039749563 ubox
20 93 0.003764286 ubox
20 99 0.003284334 ubox
21 25 0.980015076 ubox
21 31 0.006614375 ubox
21 39 0.029501785 ubox
21 67 0.005039578 ubox
21 91 0.042419436 ubox
22 27 0.003528567 ubox
25 35 0.030433810 ubox
25 42 0.012260442 ubox
25 43 0.006361594 ubox
25 49 0.004777340 ubox
25 95 0.016241913 ubox
25 98 0.012445383 ubox
25 101 0.012546164 ubox
25 104 0.012540862 ubox
25 107 0.004377217 ubox
26 34 0.030359507 ubox
26 41 0.013653596 ubox
26 42 0.004968909 ubox
26 47 0.003202146 ubox
27 33 0.029088537 ubox
27 40 0.014340209 ubox
27 45 0.004418257 ubox
27 68 0.005507249 ubox
27 92 0.045645088 ubox
27 93 0.004218806 ubox
28 39 0.014381621 ubox
28 46 0.006330327 ubox
28 67 0.005788408 ubox
28 91 0.048827169 ubox
29 47 0.004480257 ubox
30 41 0.003368200 ubox
31 35 0.004616634 ubox
31 42 0.006590688 ubox
31 43 0.995558082 ubox
31 95 0.006144906 ubox
31 98 0.004107830 ubox
31 101 0.004306287 ubox
31 104 0.004447710 ubox
32 41 0.006336739 ubox
32 42 0.996427712 ubox
33 41 0.995986245 ubox
33 42 0.004851956 ubox
34 39 0.008475466 ubox
34 40 0.995943066 ubox
34 92 0.010567956 ubox
35 39 0.987707341 ubox
35 91 0.011182406 ubox
39 43 0.004214198 ubox
39 95 0.020865166 ubox
39 98 0.003181290 ubox
41 93 0.028658511 ubox
42 92 0.031558422 ubox
43 91 0.031932497 ubox
45 54 0.013679118 ubox
46 54 0.003460699 ubox
46 56 0.988697130 ubox
46 59 0.009304956 ubox
46 61 0.005828931 ubox
46 66 0.009536926 ubox
46 95 0.013278105 ubox
46 98 0.012646646 ubox
46 101 0.012910293 ubox
46 104 0.012339954 ubox
46 107 0.004306196 ubox
47 52 0.010821504 ubox
47 53 0.004200658 ubox
47 55 0.989855421 ubox
47 58 0.009084823 ubox
47 60 0.005668936 ubox
47 65 0.009353174 ubox
47 94 0.012715216 ubox
47 97 0.012117060 ubox
47 100 0.012383133 ubox
47 103 0.011836213 ubox
47 106 0.004173641 ubox
48 54 0.989103134 ubox
49 53 0.979458414 ubox
49 91 0.004403554 ubox
53 59 0.013285250 ubox
53 61 0.013038187 ubox
53 66 0.006910222 ubox
53 95 0.013560557 ubox
53 98 0.012747669 ubox
53 101 0.012356629 ubox
53 104 0.011615332 ubox
53 107 0.003975350 ubox
54 58 0.012158405 ubox
54 60 0.012804122 ubox
54 65 0.006778005 ubox
54 94 0.013085753 ubox
54 97 0.012308692 ubox
54 100 0.011930758 ubox
54 103 0.011219707 ubox
54 106 0.003877892 ubox
56 65 0.004163452 ubox
56 91 0.004928385 ubox
59 65 0.045330298 ubox
59 67 0.963259736 ubox
59 71 0.012397601 ubox
59 91 0.004558010 ubox
60 66 0.981982761 ubox
60 70 0.013015401 ubox
60 86 0.007235230 ubox
60 95 0.013327277 ubox
60 98 0.004019885 ubox
61 65 0.974893196 ubox
61 67 0.027194329 ubox
61 69 0.013041601 ubox
61 85 0.007231419 ubox
61 91 0.003902801 ubox
62 84 0.005246899 ubox
64 84 0.005027037 ubox
65 83 0.007036734 ubox
65 86 0.003285958 ubox
66 82 0.007041647 ubox
66 85 0.003236226 ubox
66 91 0.024942203 ubox
69 86 0.998538021 ubox
70 79 0.007148773 ubox
70 85 0.999792346 ubox
71 78 0.007182106 ubox
71 84 0.999110661 ubox
72 77 0.006367186 ubox
72 83 0.999919829 ubox
72 95 0.003975233 ubox
73 81 0.008303722 ubox
73 82 0.999414123 ubox
73 93 0.004249799 ubox
73 94 0.003254430 ubox
74 80 0.009819986 ubox
74 81 0.999032834 ubox
74 92 0.005415483 ubox
75 79 0.015046184 ubox
75 80 0.998634031 ubox
75 91 0.005922994 ubox
76 80 0.003235281 ubox
76 90 0.005892048 ubox
77 89 0.005728057 ubox
80 86 0.005138341 ubox
86 91 0.009474588 ubox
91 95 0.071409457 ubox
91 98 0.144576085 ubox
91 101 0.047505943 ubox
91 104 0.015573310 ubox
91 107 0.003735316 ubox
1 95 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
