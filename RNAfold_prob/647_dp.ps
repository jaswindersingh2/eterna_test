%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (647)
} def

/sequence { (\
GGAAAGUGCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGCGCCAGGGACUUCGGUUUUUGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.008826806 ubox
1 9 0.064081780 ubox
1 66 0.007108162 ubox
1 68 0.004488887 ubox
1 69 0.048060731 ubox
1 75 0.029686946 ubox
1 76 0.013060998 ubox
1 78 0.038497269 ubox
1 95 0.060564144 ubox
1 98 0.064365797 ubox
1 101 0.065947720 ubox
1 104 0.066734013 ubox
1 107 0.016977701 ubox
2 7 0.006057196 ubox
2 9 0.034714131 ubox
2 66 0.003898539 ubox
2 68 0.040684826 ubox
2 69 0.028583888 ubox
2 75 0.015117838 ubox
2 77 0.034625472 ubox
2 78 0.111113479 ubox
2 95 0.031942085 ubox
2 98 0.033633170 ubox
2 101 0.034402624 ubox
2 104 0.034519556 ubox
2 107 0.011343237 ubox
3 7 0.032021266 ubox
3 76 0.029779395 ubox
3 77 0.094370532 ubox
4 76 0.071500435 ubox
4 77 0.083620912 ubox
5 76 0.107410257 ubox
6 66 0.020950556 ubox
6 68 0.933600869 ubox
6 69 0.022847141 ubox
6 75 0.123522588 ubox
6 95 0.011421569 ubox
6 98 0.018013016 ubox
6 101 0.019738343 ubox
6 104 0.019829308 ubox
6 107 0.006990157 ubox
7 11 0.003321746 ubox
7 12 0.014307275 ubox
7 13 0.013192395 ubox
7 14 0.016827581 ubox
7 15 0.010342470 ubox
7 16 0.015516291 ubox
7 17 0.007476390 ubox
7 18 0.006893799 ubox
7 19 0.006356606 ubox
7 20 0.005861272 ubox
7 21 0.005404537 ubox
7 22 0.004983393 ubox
7 23 0.004983386 ubox
7 24 0.004595059 ubox
7 25 0.004236992 ubox
7 26 0.004236985 ubox
7 27 0.003906820 ubox
7 28 0.003906814 ubox
7 29 0.003602377 ubox
7 30 0.003602370 ubox
7 31 0.003321654 ubox
7 32 0.003321645 ubox
7 62 0.004077750 ubox
7 63 0.006347545 ubox
7 64 0.005458972 ubox
7 65 0.020705231 ubox
7 67 0.935947277 ubox
7 70 0.005243583 ubox
7 73 0.009891201 ubox
7 74 0.122748020 ubox
7 94 0.010757520 ubox
7 97 0.017209275 ubox
7 99 0.009867404 ubox
7 100 0.018365796 ubox
7 102 0.008980427 ubox
7 103 0.018399657 ubox
7 105 0.007602570 ubox
7 106 0.006545670 ubox
8 66 0.938474371 ubox
8 68 0.040664172 ubox
8 69 0.004378324 ubox
8 98 0.011469004 ubox
8 101 0.010866445 ubox
8 104 0.008539681 ubox
9 65 0.937583634 ubox
9 67 0.040887837 ubox
9 71 0.013227422 ubox
9 72 0.114383767 ubox
9 73 0.011728659 ubox
51 85 0.003184771 ubox
52 84 0.003354212 ubox
52 85 0.004590932 ubox
53 83 0.003373175 ubox
53 84 0.004849239 ubox
53 85 0.006385914 ubox
54 82 0.003329694 ubox
54 83 0.004893623 ubox
54 84 0.006754033 ubox
54 85 0.009999910 ubox
55 82 0.004856187 ubox
55 83 0.006827379 ubox
55 84 0.010602770 ubox
55 85 0.015683644 ubox
56 81 0.004265508 ubox
56 82 0.006792599 ubox
56 83 0.010747488 ubox
56 84 0.016677845 ubox
56 85 0.007454939 ubox
57 81 0.006247610 ubox
57 82 0.010732474 ubox
57 83 0.016956817 ubox
57 84 0.007889565 ubox
57 85 0.007649932 ubox
58 81 0.010248735 ubox
58 82 0.016991253 ubox
58 83 0.007976815 ubox
58 84 0.008089054 ubox
58 85 0.006908358 ubox
59 81 0.016517674 ubox
59 82 0.007915290 ubox
59 83 0.008175116 ubox
59 84 0.007243000 ubox
59 85 0.008328369 ubox
60 77 0.004107766 ubox
60 81 0.006967251 ubox
60 82 0.008131760 ubox
60 83 0.007254723 ubox
60 84 0.008611885 ubox
60 85 0.036083515 ubox
61 76 0.004065896 ubox
61 77 0.004887827 ubox
61 81 0.007182082 ubox
61 82 0.007143679 ubox
61 83 0.008491428 ubox
61 84 0.038358028 ubox
61 85 0.035458011 ubox
62 76 0.004668200 ubox
62 77 0.011671718 ubox
62 81 0.005131897 ubox
62 82 0.008177051 ubox
62 83 0.038996538 ubox
62 84 0.037713007 ubox
62 85 0.015244372 ubox
63 76 0.012227922 ubox
63 77 0.070793349 ubox
63 81 0.004201187 ubox
63 82 0.039142875 ubox
63 83 0.038346419 ubox
63 84 0.016128986 ubox
63 85 0.021441802 ubox
64 76 0.078595260 ubox
64 81 0.037951101 ubox
64 82 0.037993269 ubox
64 83 0.016169355 ubox
64 84 0.022728633 ubox
65 69 0.004000698 ubox
65 75 0.079593328 ubox
65 81 0.035968004 ubox
65 82 0.014919545 ubox
65 83 0.022117427 ubox
65 95 0.005025962 ubox
65 98 0.003566791 ubox
65 101 0.003337696 ubox
65 104 0.003312970 ubox
66 71 0.019716037 ubox
66 72 0.019852717 ubox
66 73 0.077997993 ubox
66 79 0.041943682 ubox
66 80 0.035650299 ubox
66 86 0.004232212 ubox
66 91 0.040169554 ubox
67 75 0.007175537 ubox
67 78 0.041143912 ubox
67 81 0.044477849 ubox
67 95 0.003866059 ubox
67 98 0.003394622 ubox
67 101 0.003289210 ubox
67 104 0.004071718 ubox
67 107 0.003185396 ubox
68 72 0.021922758 ubox
68 73 0.010158069 ubox
68 79 0.014080782 ubox
68 80 0.046464063 ubox
68 86 0.011854865 ubox
68 91 0.013566030 ubox
69 73 0.012165771 ubox
69 79 0.052912392 ubox
69 80 0.003364141 ubox
69 86 0.937054655 ubox
69 91 0.004634466 ubox
70 76 0.036472882 ubox
70 77 0.020427035 ubox
70 84 0.004576916 ubox
70 85 0.938571286 ubox
71 75 0.037430690 ubox
71 76 0.018366535 ubox
71 77 0.013248839 ubox
71 78 0.063968400 ubox
71 83 0.004950298 ubox
71 84 0.936134998 ubox
71 85 0.003606265 ubox
71 95 0.005893755 ubox
71 98 0.014345476 ubox
71 101 0.027203874 ubox
71 104 0.094349919 ubox
71 107 0.008336682 ubox
72 76 0.009303774 ubox
72 77 0.050657750 ubox
72 78 0.039862089 ubox
72 82 0.004492346 ubox
72 83 0.935825888 ubox
72 84 0.004594567 ubox
72 95 0.004786896 ubox
72 98 0.013546978 ubox
72 101 0.043619725 ubox
72 104 0.059504973 ubox
72 107 0.005366417 ubox
73 77 0.026006955 ubox
73 78 0.032846343 ubox
73 82 0.939566084 ubox
73 83 0.004684735 ubox
73 95 0.003431398 ubox
73 98 0.011558053 ubox
73 101 0.036709636 ubox
73 104 0.017251302 ubox
74 81 0.940514962 ubox
74 82 0.003952020 ubox
75 79 0.016087985 ubox
75 80 0.939728028 ubox
75 91 0.008709797 ubox
76 80 0.003853277 ubox
76 88 0.024529257 ubox
76 90 0.007755249 ubox
76 93 0.015670672 ubox
76 96 0.006485362 ubox
76 97 0.019651006 ubox
76 99 0.027674329 ubox
76 100 0.028518306 ubox
76 102 0.004976208 ubox
76 103 0.006798211 ubox
76 105 0.005292205 ubox
76 106 0.005541681 ubox
77 87 0.027998691 ubox
77 89 0.004459029 ubox
77 92 0.017343619 ubox
77 96 0.019183640 ubox
77 97 0.022779383 ubox
77 99 0.028445654 ubox
77 100 0.009304171 ubox
77 102 0.007252732 ubox
77 103 0.004651300 ubox
77 105 0.005806369 ubox
78 86 0.028508998 ubox
78 91 0.017521220 ubox
79 85 0.026105285 ubox
79 95 0.019030039 ubox
79 98 0.034068019 ubox
79 101 0.013459953 ubox
79 104 0.010244211 ubox
80 84 0.016966930 ubox
80 95 0.317904750 ubox
80 98 0.022316593 ubox
80 101 0.061801016 ubox
80 104 0.025702643 ubox
80 107 0.006684171 ubox
81 88 0.009480354 ubox
81 89 0.004711780 ubox
81 92 0.005302611 ubox
81 93 0.009718955 ubox
81 94 0.318619359 ubox
81 97 0.022080929 ubox
81 100 0.061901187 ubox
81 103 0.025718626 ubox
81 106 0.006796328 ubox
82 87 0.008395908 ubox
82 88 0.005001321 ubox
82 89 0.003452205 ubox
82 90 0.003397514 ubox
82 91 0.005939325 ubox
82 92 0.013753596 ubox
82 93 0.318815712 ubox
82 94 0.012485287 ubox
82 96 0.019910619 ubox
82 99 0.057545976 ubox
82 102 0.023824927 ubox
82 105 0.006379869 ubox
83 87 0.004240240 ubox
83 89 0.003596775 ubox
83 90 0.006154055 ubox
83 91 0.014445526 ubox
83 92 0.319046718 ubox
83 93 0.016074260 ubox
83 94 0.017810114 ubox
83 99 0.003897108 ubox
84 89 0.005576824 ubox
84 90 0.014485793 ubox
84 91 0.317949288 ubox
84 92 0.017501913 ubox
84 93 0.019342097 ubox
84 94 0.010906569 ubox
84 97 0.062370561 ubox
84 100 0.025110250 ubox
84 103 0.008556617 ubox
84 106 0.004720877 ubox
85 89 0.012570985 ubox
85 90 0.308704634 ubox
85 91 0.018113024 ubox
85 92 0.019741385 ubox
85 93 0.011423598 ubox
85 94 0.003789036 ubox
85 96 0.066008774 ubox
85 99 0.026539988 ubox
85 102 0.009953280 ubox
85 105 0.006246816 ubox
86 95 0.066953480 ubox
86 98 0.026850584 ubox
86 101 0.010528166 ubox
86 104 0.006912551 ubox
91 95 0.040850107 ubox
91 98 0.098231154 ubox
91 101 0.043027790 ubox
91 104 0.033264220 ubox
91 107 0.009840462 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
