%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (599)
} def

/sequence { (\
GGAAAAACGUAGUUACGUAUACUUUAAGGCGAAAAAAAAAAAAGUUUUAGGGUAUGUGUAGCUAUGAAGAUUUGCUUCGGUAGAUUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.065424794 ubox
1 73 0.007445649 ubox
1 75 0.022481387 ubox
1 76 0.005230393 ubox
1 78 0.010368838 ubox
1 95 0.067062282 ubox
1 98 0.067686530 ubox
1 101 0.069194290 ubox
1 104 0.069517509 ubox
1 107 0.017552885 ubox
2 8 0.015817259 ubox
2 72 0.010544977 ubox
2 73 0.008567797 ubox
2 75 0.006224784 ubox
2 77 0.010279119 ubox
2 78 0.007680011 ubox
2 86 0.004804854 ubox
2 95 0.035384528 ubox
2 98 0.035596341 ubox
2 101 0.036357644 ubox
2 104 0.036225622 ubox
2 107 0.011821610 ubox
3 71 0.010894820 ubox
3 72 0.009515137 ubox
3 73 0.022846492 ubox
3 76 0.009922880 ubox
3 77 0.007624479 ubox
3 85 0.003617434 ubox
3 86 0.004105497 ubox
4 71 0.009424350 ubox
4 72 0.023009747 ubox
4 73 0.005132948 ubox
4 76 0.006933449 ubox
4 86 0.003796050 ubox
5 71 0.021635706 ubox
5 72 0.006230274 ubox
5 73 0.009869046 ubox
5 86 0.003812629 ubox
6 71 0.005897871 ubox
6 72 0.010356564 ubox
6 73 0.006934662 ubox
6 86 0.003598346 ubox
7 65 0.003367271 ubox
7 71 0.010322406 ubox
7 72 0.006919394 ubox
7 81 0.005009766 ubox
8 66 0.982123085 ubox
8 69 0.005192732 ubox
8 80 0.005180375 ubox
8 91 0.006736928 ubox
9 65 0.997690335 ubox
9 95 0.003759482 ubox
9 98 0.003764935 ubox
9 101 0.003842487 ubox
9 104 0.003864601 ubox
10 64 0.999431776 ubox
10 100 0.003169517 ubox
10 103 0.003187761 ubox
11 63 0.999680557 ubox
12 62 0.999983907 ubox
13 61 0.999512643 ubox
14 60 0.998901360 ubox
15 59 0.999716957 ubox
16 58 0.999815596 ubox
17 57 0.946442866 ubox
18 56 0.965611018 ubox
19 55 0.997847446 ubox
20 54 0.999422741 ubox
21 53 0.999729507 ubox
22 52 0.999971926 ubox
23 51 0.998796842 ubox
24 50 0.995913620 ubox
25 49 0.998695954 ubox
26 48 0.999137208 ubox
27 46 0.003596214 ubox
27 47 0.997628350 ubox
28 45 0.003469077 ubox
28 46 0.995741838 ubox
29 45 0.999170555 ubox
30 44 0.999607993 ubox
65 79 0.009874484 ubox
65 89 0.004316704 ubox
65 90 0.006387506 ubox
66 78 0.035991453 ubox
66 86 0.003238635 ubox
66 95 0.003610028 ubox
67 77 0.037216166 ubox
67 85 0.004361803 ubox
67 86 0.023910799 ubox
68 76 0.037610249 ubox
68 85 0.016488636 ubox
68 86 0.045350846 ubox
69 75 0.037599068 ubox
69 78 0.017925274 ubox
69 85 0.035372759 ubox
69 86 0.951888361 ubox
69 95 0.011906471 ubox
69 98 0.015525926 ubox
69 101 0.015200506 ubox
69 104 0.006922823 ubox
70 77 0.017702831 ubox
70 85 0.987168873 ubox
70 86 0.017252094 ubox
71 84 0.992922503 ubox
71 89 0.013238488 ubox
71 90 0.014615985 ubox
71 91 0.004637860 ubox
71 92 0.005326275 ubox
71 93 0.005742345 ubox
71 94 0.005282852 ubox
71 97 0.004734988 ubox
71 99 0.008295834 ubox
71 100 0.004913337 ubox
72 83 0.993421403 ubox
72 84 0.003583404 ubox
72 88 0.015172145 ubox
72 89 0.016707830 ubox
72 90 0.006618617 ubox
72 91 0.005683625 ubox
72 92 0.006187860 ubox
72 93 0.005871013 ubox
72 94 0.003168151 ubox
72 96 0.003885292 ubox
72 97 0.057746437 ubox
72 99 0.003826088 ubox
72 100 0.005661964 ubox
72 103 0.005367837 ubox
72 106 0.006067217 ubox
73 82 0.993270553 ubox
73 87 0.015441240 ubox
73 88 0.016945651 ubox
73 89 0.006905836 ubox
73 90 0.005608370 ubox
73 91 0.006096759 ubox
73 92 0.005909103 ubox
73 96 0.067797051 ubox
73 99 0.006553019 ubox
73 102 0.006302305 ubox
73 105 0.007136194 ubox
74 81 0.994754534 ubox
74 86 0.014961138 ubox
74 95 0.069446804 ubox
74 98 0.006668989 ubox
74 101 0.006444702 ubox
74 104 0.007303799 ubox
75 79 0.012003190 ubox
75 80 0.994324313 ubox
75 83 0.009099500 ubox
75 91 0.009719136 ubox
76 82 0.009056709 ubox
76 84 0.003475762 ubox
76 90 0.009681667 ubox
76 93 0.069051771 ubox
76 94 0.003702689 ubox
77 84 0.031389300 ubox
77 89 0.007871779 ubox
77 92 0.072930933 ubox
78 83 0.032484340 ubox
78 91 0.073088389 ubox
79 86 0.003455469 ubox
79 95 0.005362360 ubox
79 98 0.005065669 ubox
79 101 0.004014985 ubox
79 104 0.003278596 ubox
80 86 0.004247422 ubox
80 95 0.008691027 ubox
80 98 0.011820838 ubox
80 101 0.006303189 ubox
80 104 0.004952471 ubox
81 87 0.010932205 ubox
81 88 0.029306434 ubox
81 89 0.005848834 ubox
81 94 0.008489072 ubox
81 97 0.011601447 ubox
81 100 0.006162016 ubox
81 103 0.004839309 ubox
82 86 0.010246436 ubox
83 95 0.010217016 ubox
83 98 0.004679461 ubox
83 101 0.003593797 ubox
85 90 0.003168902 ubox
85 92 0.009118418 ubox
85 93 0.008412439 ubox
85 94 0.008485172 ubox
86 90 0.004222602 ubox
86 91 0.011311887 ubox
86 92 0.010555846 ubox
86 93 0.011703349 ubox
86 94 0.004138892 ubox
86 96 0.004249182 ubox
86 99 0.003328660 ubox
91 95 0.042909094 ubox
91 98 0.103457358 ubox
91 101 0.045390222 ubox
91 104 0.035127293 ubox
91 107 0.010392762 ubox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 59 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
18 56 0.9500000 lbox
19 55 0.9500000 lbox
20 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
23 51 0.9500000 lbox
24 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
