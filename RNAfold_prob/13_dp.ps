%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (13)
} def

/sequence { (\
GGAAAAAACGCGACGCGAGCGCGCGAAACGCAGCGCGAAACCCGACGCAAAGCGCGGGACGCGACGCGGCGCCGGUUCGCCGGCGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.030983361 ubox
1 95 0.068411991 ubox
1 98 0.068792043 ubox
1 101 0.070350259 ubox
1 104 0.070659312 ubox
1 107 0.017839477 ubox
2 9 0.015747822 ubox
2 95 0.036069780 ubox
2 98 0.036196514 ubox
2 101 0.036960107 ubox
2 104 0.036818309 ubox
2 107 0.012013894 ubox
9 21 0.004567506 ubox
9 23 0.034360554 ubox
9 25 0.085785563 ubox
9 68 0.985792804 ubox
9 85 0.005515562 ubox
9 91 0.005462392 ubox
10 20 0.004671487 ubox
10 22 0.035084197 ubox
10 24 0.087561346 ubox
10 31 0.009861625 ubox
10 67 0.994875324 ubox
10 84 0.005627409 ubox
10 86 0.012323819 ubox
11 19 0.004671201 ubox
11 21 0.035086294 ubox
11 23 0.087547653 ubox
11 25 0.020117331 ubox
11 30 0.009874492 ubox
11 66 0.994888474 ubox
11 83 0.005559009 ubox
11 85 0.012336348 ubox
12 20 0.035034318 ubox
12 22 0.087406478 ubox
12 24 0.020404328 ubox
12 29 0.009873512 ubox
12 65 0.992544365 ubox
12 84 0.011963395 ubox
14 19 0.032768258 ubox
14 21 0.086526015 ubox
14 23 0.020803950 ubox
14 25 0.024028980 ubox
14 63 0.992516080 ubox
14 68 0.004767808 ubox
14 82 0.011203920 ubox
15 20 0.084324472 ubox
15 22 0.021268508 ubox
15 24 0.024437095 ubox
15 62 0.994857290 ubox
15 67 0.004809918 ubox
15 80 0.010899075 ubox
15 81 0.008035413 ubox
16 21 0.021308041 ubox
16 23 0.024437538 ubox
16 61 0.994822540 ubox
16 63 0.003862672 ubox
16 66 0.004809864 ubox
16 79 0.013557888 ubox
17 22 0.023976438 ubox
17 36 0.003531030 ubox
17 60 0.975533943 ubox
17 62 0.003821979 ubox
17 65 0.004748290 ubox
17 78 0.013559610 ubox
18 77 0.013537170 ubox
19 34 0.014311261 ubox
19 36 0.692650188 ubox
19 41 0.004080613 ubox
19 60 0.010578938 ubox
19 62 0.003573931 ubox
19 76 0.013502979 ubox
20 33 0.014330074 ubox
20 35 0.693493381 ubox
20 37 0.702893071 ubox
20 56 0.009901004 ubox
20 57 0.006303874 ubox
20 58 0.007075706 ubox
20 61 0.003507149 ubox
20 75 0.013260651 ubox
21 31 0.012308988 ubox
21 34 0.693516480 ubox
21 36 0.712738690 ubox
21 55 0.010228906 ubox
21 72 0.005844195 ubox
21 73 0.003495136 ubox
22 30 0.012401067 ubox
22 33 0.693206835 ubox
22 35 0.712759304 ubox
22 37 0.019843009 ubox
22 54 0.010230484 ubox
22 56 0.008774040 ubox
22 71 0.005994411 ubox
22 74 0.003539671 ubox
23 29 0.012527680 ubox
23 31 0.689511024 ubox
23 34 0.712697962 ubox
23 36 0.020124231 ubox
23 53 0.010196956 ubox
23 55 0.008788591 ubox
23 70 0.005995323 ubox
23 72 0.011836375 ubox
24 30 0.691706318 ubox
24 33 0.712654305 ubox
24 35 0.020125182 ubox
24 52 0.010185940 ubox
24 54 0.008761263 ubox
24 69 0.005992284 ubox
24 71 0.012044657 ubox
25 29 0.647172728 ubox
25 31 0.087497915 ubox
25 34 0.020073415 ubox
25 53 0.008600831 ubox
25 70 0.011905454 ubox
29 52 0.003749673 ubox
29 68 0.099105937 ubox
30 48 0.007675278 ubox
30 67 0.099973089 ubox
31 47 0.007676622 ubox
31 66 0.099907760 ubox
33 48 0.011023958 ubox
33 65 0.028676102 ubox
33 67 0.008269730 ubox
34 44 0.007612587 ubox
34 47 0.011041774 ubox
34 63 0.100288047 ubox
34 66 0.008273343 ubox
35 43 0.007574795 ubox
35 46 0.011050950 ubox
35 62 0.100376852 ubox
35 65 0.008234345 ubox
36 44 0.011138638 ubox
36 61 0.100378123 ubox
36 63 0.008259474 ubox
37 41 0.004940437 ubox
37 42 0.006436883 ubox
37 43 0.011082690 ubox
37 60 0.104278654 ubox
37 62 0.008382998 ubox
41 57 0.008362896 ubox
41 58 0.995004724 ubox
42 56 0.006908762 ubox
42 57 0.999467499 ubox
42 58 0.026977920 ubox
43 54 0.003910261 ubox
43 56 0.999488968 ubox
43 57 0.026701296 ubox
44 53 0.003992675 ubox
44 55 0.999041873 ubox
46 52 0.010307937 ubox
46 54 0.999224213 ubox
46 56 0.007035946 ubox
47 53 0.999504682 ubox
47 55 0.009033100 ubox
48 52 0.992247993 ubox
48 54 0.009356225 ubox
68 86 0.006732124 ubox
68 95 0.003197636 ubox
69 86 0.998579686 ubox
70 85 0.999840247 ubox
71 84 0.999889636 ubox
72 83 0.999903704 ubox
73 82 0.999886417 ubox
74 80 0.007050634 ubox
74 81 0.999751328 ubox
75 80 0.993574840 ubox
86 91 0.005432334 ubox
91 95 0.043069938 ubox
91 98 0.103816863 ubox
91 101 0.045533773 ubox
91 104 0.035229079 ubox
91 107 0.010422825 ubox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
20 37 0.9500000 lbox
21 36 0.9500000 lbox
22 35 0.9500000 lbox
23 34 0.9500000 lbox
24 33 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
