%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (180)
} def

/sequence { (\
GGAAAAAAGGAGUACAGAGCCAGCGAAAGCCCGAAAGGAGCGCGGUGAGCACGGGUACGGCCAAAAAACGUGAUCUUCGGAUCGCGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.004242510 ubox
1 61 0.004537330 ubox
1 62 0.126260644 ubox
1 69 0.035358004 ubox
1 95 0.066873864 ubox
1 98 0.067370407 ubox
1 101 0.068928343 ubox
1 104 0.069340712 ubox
1 107 0.017519185 ubox
2 61 0.126152603 ubox
2 62 0.006518820 ubox
2 69 0.023342331 ubox
2 95 0.035292380 ubox
2 98 0.035457598 ubox
2 101 0.036229528 ubox
2 104 0.036116799 ubox
2 107 0.011786837 ubox
9 15 0.011615844 ubox
9 21 0.003686636 ubox
9 58 0.003571192 ubox
9 61 0.138651558 ubox
9 62 0.967153064 ubox
9 95 0.010285721 ubox
9 98 0.016986084 ubox
9 101 0.016922077 ubox
9 104 0.017193050 ubox
9 107 0.006014542 ubox
10 15 0.004000909 ubox
10 20 0.003699732 ubox
10 58 0.003341350 ubox
10 61 0.966996945 ubox
10 62 0.023471306 ubox
10 95 0.006712502 ubox
10 98 0.006306820 ubox
10 101 0.006328862 ubox
10 104 0.006309137 ubox
12 20 0.003172374 ubox
12 50 0.003236111 ubox
12 52 0.007394426 ubox
12 58 0.997856047 ubox
12 61 0.003805611 ubox
12 95 0.017155595 ubox
12 98 0.016902909 ubox
12 101 0.017279913 ubox
12 104 0.011695796 ubox
12 107 0.003731726 ubox
13 49 0.003178893 ubox
13 51 0.007299530 ubox
13 57 0.998025166 ubox
13 60 0.003592085 ubox
13 94 0.016533020 ubox
13 97 0.016305980 ubox
13 100 0.016670271 ubox
13 103 0.011288162 ubox
13 106 0.003639814 ubox
14 56 0.997819520 ubox
15 49 0.004006609 ubox
15 53 0.010371709 ubox
15 54 0.081066131 ubox
15 55 0.993549044 ubox
15 91 0.004532204 ubox
17 50 0.005542465 ubox
17 52 0.677089043 ubox
17 62 0.004608155 ubox
17 95 0.003758941 ubox
17 98 0.003570153 ubox
19 46 0.029476635 ubox
19 50 0.997458865 ubox
19 52 0.013551368 ubox
19 56 0.003281083 ubox
19 61 0.006408858 ubox
20 45 0.030683000 ubox
20 47 0.004039756 ubox
20 49 0.998611947 ubox
20 54 0.010744514 ubox
20 55 0.003489372 ubox
20 60 0.006425470 ubox
21 44 0.030647031 ubox
21 45 0.006602056 ubox
21 47 0.977255918 ubox
21 49 0.005745168 ubox
21 53 0.010723002 ubox
21 54 0.003537473 ubox
21 59 0.006347459 ubox
22 46 0.975517263 ubox
23 30 0.007449162 ubox
23 43 0.047070265 ubox
23 46 0.207834422 ubox
23 50 0.012027545 ubox
23 52 0.003884641 ubox
23 85 0.004035186 ubox
24 29 0.007470118 ubox
24 42 0.047142510 ubox
24 44 0.974674872 ubox
24 45 0.211734872 ubox
24 47 0.011194843 ubox
24 49 0.012035841 ubox
24 84 0.004039390 ubox
25 41 0.039657354 ubox
25 43 0.963998401 ubox
25 46 0.010959681 ubox
25 50 0.003887039 ubox
25 83 0.004037296 ubox
26 82 0.003861160 ubox
29 41 0.986730694 ubox
29 43 0.007902461 ubox
29 46 0.010768911 ubox
30 37 0.007537741 ubox
30 38 0.111098312 ubox
30 40 0.988254713 ubox
30 42 0.008389642 ubox
30 45 0.010845770 ubox
31 37 0.109930810 ubox
31 38 0.990123645 ubox
31 40 0.005519760 ubox
31 44 0.010831386 ubox
31 80 0.003991339 ubox
32 37 0.989998302 ubox
32 38 0.079911026 ubox
32 40 0.003487555 ubox
32 42 0.011062794 ubox
32 79 0.004043439 ubox
33 41 0.010993280 ubox
33 78 0.004084516 ubox
34 77 0.003624121 ubox
40 56 0.005391498 ubox
41 55 0.005523185 ubox
42 50 0.006104990 ubox
43 49 0.006110528 ubox
43 53 0.005727805 ubox
44 52 0.005730423 ubox
46 63 0.007562561 ubox
47 62 0.012298006 ubox
49 61 0.019182028 ubox
50 60 0.019244354 ubox
52 59 0.029007151 ubox
53 58 0.029173355 ubox
53 62 0.033139726 ubox
54 61 0.033126422 ubox
54 62 0.028297844 ubox
55 61 0.028364257 ubox
56 60 0.026566115 ubox
59 69 0.004584589 ubox
59 95 0.023112408 ubox
59 98 0.012044372 ubox
60 69 0.003342041 ubox
60 95 0.016824358 ubox
60 98 0.003302103 ubox
61 91 0.005052028 ubox
62 91 0.014660572 ubox
69 86 0.979798289 ubox
69 91 0.005414611 ubox
70 85 0.999830202 ubox
70 95 0.008234833 ubox
70 98 0.003754355 ubox
71 84 0.999493113 ubox
71 94 0.008186576 ubox
71 97 0.003491166 ubox
72 83 0.999877207 ubox
73 82 0.999671286 ubox
74 80 0.007368751 ubox
74 81 0.999538494 ubox
74 92 0.008701095 ubox
75 79 0.013603107 ubox
75 80 0.998827306 ubox
75 91 0.008957854 ubox
76 80 0.003185603 ubox
76 88 0.006908531 ubox
76 90 0.007695025 ubox
77 87 0.010271891 ubox
78 86 0.010928320 ubox
79 85 0.010918540 ubox
86 95 0.019218231 ubox
86 98 0.007799779 ubox
86 101 0.006247191 ubox
86 104 0.005390117 ubox
91 95 0.043066354 ubox
91 98 0.103768481 ubox
91 101 0.045489659 ubox
91 104 0.035188981 ubox
91 107 0.010410513 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
