%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1071)
} def

/sequence { (\
GGAAAAAAGAAGACUACAGAAAAUCAAAGAUAUUUCAAAACUAGAGUCAAAGACCUAGAGUAGACUUCUAACGCAUUCGUGCGUUAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 68 0.003231402 ubox
1 69 0.004600556 ubox
1 78 0.003808749 ubox
1 95 0.067416573 ubox
1 98 0.067863752 ubox
1 101 0.069415487 ubox
1 104 0.069733758 ubox
1 107 0.017606858 ubox
2 68 0.006462364 ubox
2 77 0.003781504 ubox
2 78 0.003641246 ubox
2 85 0.004899022 ubox
2 95 0.035589452 ubox
2 98 0.035728248 ubox
2 101 0.036494242 ubox
2 104 0.036357979 ubox
2 107 0.011864417 ubox
3 67 0.006095325 ubox
3 69 0.003845432 ubox
3 76 0.003630314 ubox
3 77 0.003632811 ubox
3 84 0.003206664 ubox
3 85 0.004401403 ubox
4 66 0.003699615 ubox
4 69 0.004923095 ubox
4 76 0.003363484 ubox
4 85 0.004060888 ubox
5 69 0.006806702 ubox
5 85 0.004059713 ubox
6 69 0.009432146 ubox
6 85 0.004056879 ubox
7 67 0.005805343 ubox
7 69 0.034350396 ubox
7 85 0.003530229 ubox
8 66 0.006608383 ubox
8 69 0.749122543 ubox
9 14 0.003239484 ubox
9 65 0.006757331 ubox
9 67 0.004795019 ubox
9 68 0.997652577 ubox
10 66 0.003986063 ubox
10 67 0.998540379 ubox
11 66 0.998518890 ubox
11 69 0.006337732 ubox
12 65 0.996816276 ubox
12 68 0.008438832 ubox
13 61 0.017436519 ubox
13 67 0.008355489 ubox
14 60 0.017653032 ubox
14 63 0.997172919 ubox
15 59 0.017126986 ubox
15 62 0.999204468 ubox
16 61 0.999083099 ubox
17 60 0.997881971 ubox
18 24 0.019544937 ubox
18 31 0.005895150 ubox
18 33 0.004661320 ubox
18 34 0.008830836 ubox
18 35 0.028171917 ubox
19 24 0.007384307 ubox
19 25 0.157235465 ubox
19 33 0.009713043 ubox
19 34 0.033037053 ubox
19 35 0.136433146 ubox
19 36 0.921469001 ubox
20 24 0.136964509 ubox
20 31 0.004772274 ubox
20 33 0.032019326 ubox
20 34 0.150711652 ubox
20 35 0.919982746 ubox
21 31 0.006320190 ubox
21 33 0.153137359 ubox
21 34 0.912327089 ubox
21 35 0.058799028 ubox
22 31 0.023470060 ubox
22 33 0.877503594 ubox
22 34 0.073475837 ubox
22 35 0.014709314 ubox
23 31 0.870108727 ubox
23 33 0.081036181 ubox
23 34 0.016655021 ubox
23 35 0.006045554 ubox
24 28 0.010851816 ubox
24 29 0.027223783 ubox
24 30 0.891505760 ubox
24 32 0.084095942 ubox
24 37 0.015206192 ubox
24 38 0.006834686 ubox
24 39 0.005973864 ubox
24 40 0.005857457 ubox
24 53 0.009224272 ubox
24 59 0.005341253 ubox
25 29 0.885135397 ubox
25 52 0.009406445 ubox
25 58 0.004805543 ubox
26 31 0.034657692 ubox
26 33 0.010678037 ubox
26 34 0.014177885 ubox
26 35 0.061926393 ubox
27 31 0.008868563 ubox
27 33 0.015013855 ubox
27 34 0.069297820 ubox
27 35 0.022451732 ubox
28 33 0.067966031 ubox
28 34 0.023950586 ubox
28 35 0.016320691 ubox
29 33 0.016919196 ubox
29 34 0.015597621 ubox
29 35 0.014274982 ubox
29 36 0.293708224 ubox
29 48 0.011200078 ubox
30 34 0.013486325 ubox
30 35 0.287532870 ubox
30 47 0.011189522 ubox
31 37 0.007011610 ubox
31 38 0.010528634 ubox
31 39 0.006627280 ubox
31 40 0.008451466 ubox
31 46 0.010638305 ubox
33 37 0.005567877 ubox
33 38 0.008307250 ubox
33 39 0.013633970 ubox
33 40 0.016603702 ubox
33 44 0.006937222 ubox
34 38 0.013070108 ubox
34 39 0.017396156 ubox
34 40 0.012654778 ubox
34 43 0.007510929 ubox
34 46 0.003182697 ubox
35 39 0.012501323 ubox
35 40 0.007911466 ubox
35 45 0.006533522 ubox
35 59 0.005687924 ubox
35 64 0.003701869 ubox
36 44 0.006660340 ubox
36 58 0.004793581 ubox
36 63 0.004000553 ubox
38 61 0.005480968 ubox
40 61 0.003773902 ubox
41 52 0.003180444 ubox
41 58 0.992923584 ubox
41 60 0.004084931 ubox
42 51 0.003174990 ubox
42 57 0.998842016 ubox
42 58 0.004336968 ubox
42 59 0.004925758 ubox
43 56 0.999365277 ubox
44 55 0.999422950 ubox
44 56 0.005602286 ubox
45 56 0.006563487 ubox
46 54 0.998383616 ubox
46 55 0.005711379 ubox
47 51 0.003201014 ubox
47 52 0.012199176 ubox
47 53 0.997844907 ubox
48 52 0.989453642 ubox
60 95 0.004899328 ubox
60 98 0.004691624 ubox
61 94 0.004746606 ubox
61 97 0.004596476 ubox
63 95 0.004083138 ubox
65 91 0.019571802 ubox
66 88 0.004047754 ubox
66 89 0.010250041 ubox
66 90 0.019256686 ubox
66 93 0.016833976 ubox
67 87 0.004934511 ubox
67 88 0.012172610 ubox
67 89 0.017772713 ubox
67 92 0.020869484 ubox
68 91 0.022161743 ubox
69 86 0.627469240 ubox
69 87 0.029462782 ubox
69 88 0.011338723 ubox
69 89 0.007496326 ubox
69 90 0.018216176 ubox
69 91 0.003789034 ubox
70 84 0.012226173 ubox
70 85 0.942392553 ubox
71 80 0.007620252 ubox
71 84 0.992765123 ubox
71 85 0.018306892 ubox
72 79 0.007877740 ubox
72 81 0.013666236 ubox
72 83 0.999419491 ubox
73 78 0.007386366 ubox
73 80 0.014020522 ubox
73 82 0.999780422 ubox
74 79 0.014371272 ubox
74 81 0.999512733 ubox
75 80 0.831695740 ubox
76 93 0.003423237 ubox
77 92 0.003921493 ubox
78 91 0.003969548 ubox
79 98 0.004884984 ubox
79 101 0.003527809 ubox
80 97 0.004825771 ubox
80 100 0.003417755 ubox
82 91 0.003854495 ubox
83 95 0.014165206 ubox
83 98 0.008183023 ubox
83 101 0.006421117 ubox
83 104 0.005267585 ubox
84 90 0.003224724 ubox
84 91 0.004418848 ubox
84 92 0.006523181 ubox
84 93 0.006354772 ubox
84 94 0.014409291 ubox
84 97 0.008327592 ubox
84 100 0.006534466 ubox
84 103 0.005366111 ubox
85 89 0.005086296 ubox
85 90 0.009119271 ubox
85 91 0.009895514 ubox
85 92 0.011395964 ubox
85 93 0.015074941 ubox
85 94 0.007001076 ubox
85 96 0.008454473 ubox
85 99 0.006588072 ubox
85 102 0.005444273 ubox
91 95 0.043012145 ubox
91 98 0.103705529 ubox
91 101 0.045497789 ubox
91 104 0.035213014 ubox
91 107 0.010418215 ubox
8 69 0.9500000 lbox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
