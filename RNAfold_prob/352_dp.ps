%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (352)
} def

/sequence { (\
GGAAAGACCGUGAGAAAAAUUACGUCAAAGACAGGUCAGCCAUCGGAAAACGAUACGGAAACGUAGGCGUACAGCUUCGGCUGUACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.016749842 ubox
1 9 0.052531847 ubox
1 26 0.009542454 ubox
1 32 0.079268224 ubox
1 37 0.014794905 ubox
1 40 0.007431854 ubox
1 41 0.162584006 ubox
1 68 0.013734205 ubox
1 86 0.008210742 ubox
1 95 0.135889269 ubox
1 98 0.136819326 ubox
1 101 0.139954305 ubox
1 104 0.140613132 ubox
1 107 0.035509553 ubox
2 8 0.052765173 ubox
2 9 0.008691371 ubox
2 25 0.009160185 ubox
2 26 0.021837194 ubox
2 32 0.019255997 ubox
2 36 0.013722376 ubox
2 37 0.024888775 ubox
2 40 0.162432693 ubox
2 41 0.016418145 ubox
2 44 0.003536418 ubox
2 68 0.011667725 ubox
2 86 0.004281758 ubox
2 95 0.071615351 ubox
2 98 0.071901869 ubox
2 101 0.073446310 ubox
2 104 0.073182753 ubox
2 107 0.023885186 ubox
3 25 0.021705701 ubox
3 36 0.024373913 ubox
3 43 0.003460388 ubox
6 25 0.003406830 ubox
6 26 0.362091783 ubox
6 32 0.004706942 ubox
6 36 0.003659884 ubox
6 37 0.921793013 ubox
6 68 0.015002086 ubox
6 95 0.011023433 ubox
6 98 0.010955239 ubox
6 101 0.010961016 ubox
6 104 0.010751162 ubox
6 107 0.003752056 ubox
7 25 0.361969888 ubox
7 36 0.923112330 ubox
8 24 0.256098003 ubox
8 30 0.006771879 ubox
8 34 0.006332578 ubox
8 35 0.923355950 ubox
8 58 0.003575605 ubox
8 67 0.021914605 ubox
8 91 0.007073058 ubox
9 14 0.003743141 ubox
9 24 0.289811671 ubox
9 30 0.004341158 ubox
9 34 0.917923752 ubox
9 35 0.004914942 ubox
9 57 0.003589865 ubox
9 66 0.021899626 ubox
9 91 0.007305953 ubox
10 20 0.019096584 ubox
10 21 0.003387568 ubox
10 23 0.967532624 ubox
10 26 0.005795849 ubox
10 32 0.178917135 ubox
10 56 0.003287030 ubox
10 95 0.005212292 ubox
10 98 0.006014707 ubox
10 101 0.006222283 ubox
10 104 0.006270153 ubox
11 16 0.009297941 ubox
11 17 0.008602737 ubox
11 18 0.011148945 ubox
11 19 0.019896961 ubox
11 22 0.968367316 ubox
11 24 0.005983624 ubox
11 27 0.060984272 ubox
11 28 0.005252764 ubox
11 29 0.007404063 ubox
11 30 0.013320193 ubox
11 31 0.171865116 ubox
11 33 0.081915473 ubox
11 38 0.003849580 ubox
11 94 0.004999038 ubox
11 97 0.005555547 ubox
11 99 0.003183951 ubox
11 100 0.005752539 ubox
11 102 0.003164302 ubox
11 103 0.005792910 ubox
12 20 0.003652677 ubox
12 21 0.968133115 ubox
12 23 0.015428298 ubox
12 25 0.009912872 ubox
12 26 0.083440425 ubox
12 32 0.084171572 ubox
12 37 0.004439813 ubox
12 95 0.003793785 ubox
12 98 0.003857917 ubox
12 101 0.003853195 ubox
13 20 0.953048515 ubox
13 21 0.013776918 ubox
13 25 0.082075598 ubox
13 36 0.004380338 ubox
14 20 0.012380606 ubox
14 21 0.021633303 ubox
14 23 0.053265034 ubox
14 25 0.003344059 ubox
14 26 0.079563730 ubox
15 20 0.021321174 ubox
15 21 0.018454932 ubox
15 25 0.075594862 ubox
16 20 0.014989340 ubox
16 21 0.014964274 ubox
16 25 0.016540453 ubox
17 21 0.008928548 ubox
17 25 0.015008812 ubox
18 25 0.019855698 ubox
19 25 0.026687823 ubox
20 24 0.025783951 ubox
20 27 0.003265909 ubox
20 28 0.005166556 ubox
20 29 0.011081480 ubox
20 30 0.003757251 ubox
20 31 0.010174240 ubox
21 27 0.005294775 ubox
21 28 0.010858759 ubox
21 29 0.003830587 ubox
21 30 0.010484913 ubox
21 31 0.005086938 ubox
21 33 0.003532938 ubox
22 36 0.003777659 ubox
23 30 0.021989419 ubox
23 34 0.006095795 ubox
23 35 0.004036639 ubox
24 32 0.868888870 ubox
24 37 0.007018952 ubox
24 68 0.010114263 ubox
24 95 0.004769827 ubox
24 98 0.004555720 ubox
24 101 0.004473336 ubox
24 104 0.005285529 ubox
25 29 0.005798392 ubox
25 30 0.011085212 ubox
25 31 0.869666842 ubox
25 33 0.005695437 ubox
25 35 0.009892721 ubox
25 67 0.010178080 ubox
25 92 0.014508558 ubox
25 94 0.004473371 ubox
25 97 0.004339727 ubox
25 100 0.004262554 ubox
25 103 0.005072556 ubox
26 30 0.862620312 ubox
26 34 0.016811271 ubox
26 35 0.008768711 ubox
26 66 0.010189348 ubox
26 91 0.015558526 ubox
27 36 0.005809428 ubox
28 36 0.004193390 ubox
29 36 0.013049930 ubox
30 36 0.005344507 ubox
30 37 0.111400974 ubox
30 40 0.003672345 ubox
30 41 0.005314515 ubox
30 44 0.006027471 ubox
30 68 0.007804891 ubox
30 95 0.014578080 ubox
30 98 0.021897244 ubox
30 101 0.016158679 ubox
30 104 0.015839123 ubox
30 107 0.005541858 ubox
31 36 0.098858429 ubox
31 43 0.005958527 ubox
31 64 0.008310412 ubox
32 39 0.008116239 ubox
32 63 0.008550485 ubox
32 66 0.008677357 ubox
32 67 0.005278487 ubox
32 91 0.014625931 ubox
33 64 0.009852364 ubox
34 40 0.007353458 ubox
34 41 0.067454573 ubox
34 44 0.003291388 ubox
34 62 0.005884343 ubox
34 68 0.003169112 ubox
34 86 0.086311380 ubox
34 95 0.032274204 ubox
34 98 0.019421890 ubox
34 101 0.019663635 ubox
34 104 0.019579150 ubox
34 107 0.006832446 ubox
35 40 0.067113438 ubox
35 41 0.003759047 ubox
35 43 0.003335724 ubox
35 51 0.005996868 ubox
35 62 0.012687902 ubox
35 68 0.044426506 ubox
35 84 0.004557693 ubox
35 86 0.045993433 ubox
35 95 0.036944483 ubox
35 98 0.035606318 ubox
35 101 0.035644783 ubox
35 104 0.035071328 ubox
35 107 0.011417744 ubox
36 42 0.003273261 ubox
36 50 0.005842987 ubox
36 59 0.009023663 ubox
36 61 0.011336199 ubox
36 67 0.044424515 ubox
36 85 0.045580981 ubox
36 92 0.055188783 ubox
36 93 0.004861027 ubox
36 94 0.034146782 ubox
36 96 0.003324479 ubox
36 97 0.033596046 ubox
36 99 0.003345923 ubox
36 100 0.033704890 ubox
36 102 0.003287821 ubox
36 103 0.033172172 ubox
36 106 0.010957635 ubox
37 58 0.009323261 ubox
37 66 0.044203327 ubox
37 69 0.003735220 ubox
37 83 0.098920709 ubox
37 91 0.058613774 ubox
38 82 0.099066151 ubox
39 56 0.005464162 ubox
39 62 0.005304493 ubox
39 64 0.005057442 ubox
39 68 0.970442708 ubox
39 81 0.099113737 ubox
39 95 0.007229925 ubox
39 98 0.007066398 ubox
39 101 0.007164506 ubox
39 104 0.007073678 ubox
40 46 0.013550324 ubox
40 57 0.004509687 ubox
40 58 0.037677437 ubox
40 63 0.004959834 ubox
40 66 0.003527378 ubox
40 67 0.971644323 ubox
40 80 0.099111448 ubox
40 91 0.005348815 ubox
41 45 0.013493261 ubox
41 57 0.037705357 ubox
41 66 0.970633460 ubox
41 67 0.003607666 ubox
41 79 0.098943410 ubox
41 91 0.009317617 ubox
42 54 0.668189609 ubox
42 64 0.022891205 ubox
42 77 0.007346727 ubox
43 53 0.944572821 ubox
43 58 0.007165476 ubox
43 59 0.004067227 ubox
43 63 0.008705647 ubox
43 65 0.024988177 ubox
43 92 0.005764812 ubox
44 52 0.990155008 ubox
44 57 0.009316131 ubox
44 58 0.004264620 ubox
44 63 0.086697050 ubox
44 91 0.006096767 ubox
45 51 0.989757325 ubox
45 56 0.009384255 ubox
45 62 0.086985610 ubox
45 75 0.014075889 ubox
45 76 0.016337076 ubox
45 78 0.004235590 ubox
46 51 0.022652707 ubox
46 56 0.003744044 ubox
46 62 0.009641958 ubox
46 68 0.003180119 ubox
46 72 0.003841994 ubox
46 75 0.017059461 ubox
46 77 0.004166769 ubox
47 76 0.003969559 ubox
50 64 0.005029425 ubox
50 70 0.029338204 ubox
51 57 0.073010035 ubox
51 58 0.020306871 ubox
51 63 0.005199833 ubox
51 66 0.007027439 ubox
51 67 0.013418040 ubox
51 69 0.030702543 ubox
52 56 0.068405817 ubox
52 62 0.005151909 ubox
52 68 0.036033959 ubox
54 65 0.693138818 ubox
54 66 0.004850344 ubox
55 64 0.966212734 ubox
56 63 0.990210779 ubox
56 66 0.004382832 ubox
57 62 0.988417032 ubox
57 64 0.006133810 ubox
57 68 0.004145692 ubox
57 98 0.004246170 ubox
58 62 0.010125756 ubox
58 64 0.003244393 ubox
58 78 0.003362833 ubox
59 64 0.003646139 ubox
59 77 0.003326534 ubox
62 67 0.009154621 ubox
62 79 0.003661160 ubox
62 91 0.003770801 ubox
63 68 0.005404771 ubox
63 72 0.003398725 ubox
63 78 0.009656485 ubox
63 95 0.004655509 ubox
63 98 0.003365032 ubox
64 71 0.003411590 ubox
64 94 0.004476566 ubox
64 97 0.003300647 ubox
65 70 0.003349613 ubox
65 76 0.003771703 ubox
65 77 0.064595452 ubox
66 75 0.003797098 ubox
66 76 0.091373553 ubox
66 78 0.004692293 ubox
66 95 0.006115944 ubox
66 98 0.004586844 ubox
66 101 0.004038043 ubox
67 75 0.094275121 ubox
67 77 0.003284642 ubox
68 74 0.094298719 ubox
68 91 0.009932924 ubox
69 75 0.003954005 ubox
69 86 0.993215194 ubox
69 95 0.003905392 ubox
70 74 0.003701203 ubox
70 85 0.994486511 ubox
71 84 0.994787998 ubox
72 83 0.995048184 ubox
73 82 0.994827543 ubox
74 81 0.995053485 ubox
75 79 0.011490332 ubox
75 80 0.994235651 ubox
76 80 0.003686194 ubox
86 91 0.006238563 ubox
91 95 0.046537343 ubox
91 98 0.108298402 ubox
91 101 0.045648286 ubox
91 104 0.033754575 ubox
91 107 0.009949161 ubox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
