%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (42)
} def

/sequence { (\
GGAAAUCGCAGCGCCUCCUAGGAGGCCUUGGCGGGCUAACGCCCAGCUGGACCCAGCGCUGAGGCUGCAUGCCCUUUCGAGGGCAUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.016503050 ubox
1 7 0.164429209 ubox
1 18 0.004810832 ubox
1 53 0.003354613 ubox
1 68 0.003627021 ubox
1 95 0.077917210 ubox
1 98 0.081421608 ubox
1 101 0.070140894 ubox
1 104 0.070098744 ubox
1 107 0.017688637 ubox
2 6 0.106952935 ubox
2 7 0.130436706 ubox
2 17 0.004819517 ubox
2 52 0.003363949 ubox
2 95 0.040798909 ubox
2 98 0.036139823 ubox
2 101 0.035382284 ubox
2 104 0.035229702 ubox
2 107 0.011492875 ubox
3 16 0.004645308 ubox
3 86 0.003526533 ubox
4 70 0.007848463 ubox
4 86 0.003256433 ubox
5 70 0.052897913 ubox
5 86 0.004274200 ubox
6 51 0.004604632 ubox
6 64 0.006383056 ubox
6 69 0.059909867 ubox
6 85 0.003430049 ubox
6 87 0.005786902 ubox
6 88 0.006899442 ubox
6 89 0.007186044 ubox
6 90 0.011855887 ubox
6 91 0.005846531 ubox
6 92 0.139159688 ubox
6 93 0.010663487 ubox
6 94 0.007038975 ubox
6 96 0.007561230 ubox
6 97 0.006964832 ubox
6 99 0.007664992 ubox
6 100 0.006975973 ubox
6 102 0.006624662 ubox
6 103 0.006072616 ubox
6 105 0.006409959 ubox
6 106 0.005905845 ubox
7 50 0.004770794 ubox
7 63 0.008010312 ubox
7 91 0.147432059 ubox
8 32 0.003568024 ubox
8 68 0.998805704 ubox
9 31 0.003266927 ubox
9 49 0.005119755 ubox
9 61 0.009216249 ubox
9 67 0.999856670 ubox
10 28 0.003370571 ubox
10 48 0.005125194 ubox
10 60 0.009253231 ubox
10 66 0.999625225 ubox
11 27 0.003790060 ubox
11 47 0.005126028 ubox
11 59 0.009259693 ubox
11 65 0.999827072 ubox
11 68 0.005236602 ubox
12 46 0.005110704 ubox
12 58 0.009250613 ubox
12 63 0.004157243 ubox
12 64 0.998537305 ubox
12 67 0.005237844 ubox
13 26 0.997484231 ubox
13 27 0.006259735 ubox
13 65 0.004630039 ubox
14 22 0.004717370 ubox
14 25 0.999907489 ubox
14 64 0.004958351 ubox
15 21 0.004747260 ubox
15 24 0.999942301 ubox
15 63 0.005297419 ubox
16 20 0.004282518 ubox
16 22 0.005760509 ubox
16 23 0.999695284 ubox
16 62 0.005330746 ubox
17 21 0.012835143 ubox
17 22 0.998821160 ubox
17 61 0.005300420 ubox
18 22 0.011569721 ubox
21 57 0.004183871 ubox
22 68 0.003840400 ubox
24 53 0.003442001 ubox
24 54 0.003807386 ubox
24 66 0.005694893 ubox
25 52 0.003523382 ubox
25 53 0.003765547 ubox
25 65 0.009268677 ubox
26 50 0.004189396 ubox
26 64 0.029981043 ubox
27 46 0.003220103 ubox
27 49 0.004324010 ubox
27 50 0.005207988 ubox
27 61 0.006052794 ubox
27 63 0.994135858 ubox
28 45 0.009059292 ubox
28 49 0.004107771 ubox
28 50 0.008107888 ubox
28 62 0.996960939 ubox
28 63 0.007193138 ubox
29 45 0.010028613 ubox
29 49 0.010093733 ubox
29 61 0.992908666 ubox
29 62 0.008042266 ubox
30 43 0.041024238 ubox
30 44 0.008925894 ubox
30 48 0.013081960 ubox
30 59 0.003176449 ubox
30 60 0.994186071 ubox
31 42 0.041638585 ubox
31 43 0.006469345 ubox
31 47 0.013739773 ubox
31 59 0.998279731 ubox
32 41 0.042088718 ubox
32 46 0.013761456 ubox
32 58 0.997249337 ubox
33 40 0.041999703 ubox
33 43 0.005653119 ubox
33 44 0.997785650 ubox
33 54 0.013857784 ubox
33 57 0.016799627 ubox
34 42 0.005195465 ubox
34 43 0.998942800 ubox
34 44 0.004662983 ubox
34 53 0.015347534 ubox
35 42 0.998943516 ubox
35 43 0.003531104 ubox
35 52 0.015352914 ubox
36 41 0.997237114 ubox
36 50 0.015326134 ubox
37 41 0.005560644 ubox
37 49 0.015291470 ubox
38 48 0.014377914 ubox
40 46 0.012342567 ubox
41 47 0.008226845 ubox
42 46 0.008189758 ubox
44 58 0.005178561 ubox
44 61 0.026803520 ubox
45 60 0.026549029 ubox
46 57 0.998084857 ubox
46 59 0.023898939 ubox
47 56 0.999439768 ubox
47 58 0.022931183 ubox
48 55 0.998995097 ubox
48 56 0.003771658 ubox
49 53 0.016008586 ubox
49 54 0.995750458 ubox
49 57 0.013194914 ubox
50 54 0.016746061 ubox
50 57 0.004389618 ubox
52 63 0.004453062 ubox
53 63 0.003866979 ubox
54 61 0.007729403 ubox
54 67 0.005834859 ubox
55 60 0.006978680 ubox
55 66 0.006119336 ubox
56 65 0.006158391 ubox
57 63 0.003492894 ubox
57 64 0.006156256 ubox
59 63 0.003927022 ubox
65 91 0.007062575 ubox
66 90 0.007014958 ubox
68 91 0.003552565 ubox
69 86 0.926491155 ubox
70 85 0.981131189 ubox
70 87 0.004827535 ubox
70 88 0.003445052 ubox
71 84 0.999948351 ubox
72 83 0.999984264 ubox
73 82 0.999973923 ubox
73 83 0.004264083 ubox
74 79 0.003448840 ubox
74 81 0.999666725 ubox
74 82 0.005996926 ubox
75 79 0.028245009 ubox
75 80 0.924321275 ubox
75 81 0.007208777 ubox
76 80 0.028773986 ubox
86 90 0.004291991 ubox
86 91 0.005206478 ubox
86 92 0.007201434 ubox
86 93 0.009184474 ubox
86 94 0.004798964 ubox
86 96 0.003434098 ubox
86 97 0.003162649 ubox
91 95 0.042592183 ubox
91 98 0.102670023 ubox
91 101 0.045032810 ubox
91 104 0.034842138 ubox
91 107 0.010306779 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
29 61 0.9500000 lbox
30 60 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
