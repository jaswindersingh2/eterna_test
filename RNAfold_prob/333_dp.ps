%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (333)
} def

/sequence { (\
GGAAAGCAGCUAGGAAAAACUAGGACAAAGUCACUGCAGGCACUGGAAAACAGGUAGGAAACUACGCCACUCACGUUCGCGUGAGUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.015072039 ubox
1 32 0.030998973 ubox
1 34 0.019489263 ubox
1 35 0.005098249 ubox
1 37 0.007162778 ubox
1 41 0.022760481 ubox
1 43 0.003368469 ubox
1 67 0.004880909 ubox
1 68 0.128480715 ubox
1 86 0.004324971 ubox
1 95 0.135322161 ubox
1 98 0.136237654 ubox
1 101 0.139287268 ubox
1 104 0.139929635 ubox
1 107 0.035331457 ubox
2 7 0.009098059 ubox
2 31 0.030128586 ubox
2 32 0.039099884 ubox
2 34 0.005342194 ubox
2 37 0.004594767 ubox
2 41 0.031498759 ubox
2 67 0.128063060 ubox
2 68 0.008860262 ubox
2 86 0.005976796 ubox
2 95 0.071273949 ubox
2 98 0.071509992 ubox
2 101 0.073036095 ubox
2 104 0.072764153 ubox
2 107 0.023745054 ubox
3 31 0.038899990 ubox
3 35 0.005000645 ubox
3 86 0.005975794 ubox
4 31 0.003892242 ubox
4 86 0.005514482 ubox
5 35 0.006264364 ubox
5 86 0.005512963 ubox
6 26 0.013306247 ubox
6 31 0.005936144 ubox
6 34 0.006437450 ubox
6 37 0.993232627 ubox
6 41 0.009665209 ubox
6 67 0.025101908 ubox
6 95 0.010521590 ubox
6 98 0.011198380 ubox
6 101 0.011160195 ubox
6 104 0.010968041 ubox
6 107 0.003828203 ubox
7 24 0.006934413 ubox
7 30 0.006434395 ubox
7 36 0.994302313 ubox
7 40 0.009642452 ubox
7 66 0.025282165 ubox
7 91 0.012840719 ubox
8 35 0.993083369 ubox
9 26 0.009147850 ubox
9 31 0.005568338 ubox
9 32 0.004974945 ubox
9 34 0.987544422 ubox
9 37 0.009358863 ubox
9 95 0.010476523 ubox
9 98 0.010400566 ubox
9 101 0.010528973 ubox
9 104 0.009918670 ubox
9 107 0.003435360 ubox
10 23 0.995345459 ubox
10 24 0.021255835 ubox
10 30 0.009954044 ubox
10 36 0.008801339 ubox
11 22 0.998890589 ubox
11 23 0.014596801 ubox
11 29 0.008897210 ubox
11 33 0.006660959 ubox
12 21 0.999275183 ubox
12 31 0.004287838 ubox
12 35 0.005837029 ubox
13 20 0.998997335 ubox
13 21 0.013800550 ubox
13 26 0.003267369 ubox
13 32 0.007172777 ubox
13 34 0.005970566 ubox
14 20 0.018196607 ubox
14 26 0.005061072 ubox
14 31 0.005312379 ubox
14 32 0.006102907 ubox
15 31 0.005564873 ubox
19 31 0.006963242 ubox
20 30 0.007800466 ubox
21 29 0.007634882 ubox
21 36 0.008123396 ubox
22 35 0.010464695 ubox
23 32 0.013035193 ubox
23 34 0.012379689 ubox
24 31 0.015081626 ubox
24 32 0.949135200 ubox
24 37 0.006397741 ubox
25 31 0.949261197 ubox
26 30 0.940035475 ubox
26 36 0.009184324 ubox
26 45 0.003855764 ubox
27 31 0.005337448 ubox
27 35 0.008790988 ubox
27 44 0.003819403 ubox
29 35 0.005926643 ubox
30 34 0.006292665 ubox
30 37 0.012646141 ubox
30 41 0.042530076 ubox
30 95 0.008201922 ubox
30 98 0.004435369 ubox
30 101 0.004947303 ubox
30 104 0.004960524 ubox
31 36 0.011776861 ubox
31 40 0.042543179 ubox
31 92 0.004824355 ubox
31 94 0.008009097 ubox
31 97 0.004218945 ubox
31 100 0.004735797 ubox
31 103 0.004750255 ubox
32 39 0.042403969 ubox
32 91 0.005210725 ubox
34 39 0.003861824 ubox
34 40 0.004920860 ubox
34 53 0.005393379 ubox
34 91 0.010866363 ubox
35 39 0.004465633 ubox
35 42 0.006735419 ubox
35 47 0.004590511 ubox
35 52 0.005399661 ubox
35 90 0.010570642 ubox
35 96 0.008097243 ubox
35 99 0.008054977 ubox
35 102 0.007759550 ubox
35 105 0.007555282 ubox
36 41 0.007560365 ubox
36 51 0.005390807 ubox
36 67 0.003555426 ubox
36 95 0.008667082 ubox
36 98 0.008620722 ubox
36 101 0.008339912 ubox
36 104 0.008140312 ubox
37 45 0.006988360 ubox
37 66 0.003592774 ubox
37 91 0.004703568 ubox
38 44 0.007260771 ubox
39 43 0.007158715 ubox
39 67 0.003378451 ubox
39 68 0.984430372 ubox
39 95 0.009883306 ubox
39 98 0.009790133 ubox
39 101 0.010003393 ubox
39 104 0.009982244 ubox
39 107 0.003485828 ubox
40 55 0.017217336 ubox
40 67 0.985478797 ubox
40 68 0.003556133 ubox
40 95 0.005790546 ubox
40 98 0.005772306 ubox
40 101 0.005878596 ubox
40 104 0.005848045 ubox
41 46 0.003275535 ubox
41 54 0.017938830 ubox
41 66 0.984462855 ubox
41 91 0.007414825 ubox
42 55 0.006396928 ubox
43 53 0.995909341 ubox
43 54 0.006395512 ubox
44 49 0.006586895 ubox
44 50 0.004856126 ubox
44 52 0.998429436 ubox
44 53 0.007300003 ubox
44 64 0.004467249 ubox
45 51 0.998729107 ubox
45 63 0.004717834 ubox
46 51 0.019503795 ubox
46 62 0.004721661 ubox
51 57 0.003925808 ubox
53 65 0.003773094 ubox
53 67 0.006316424 ubox
53 68 0.005851606 ubox
54 62 0.007615226 ubox
54 65 0.998190285 ubox
54 67 0.005946065 ubox
55 61 0.007462052 ubox
55 64 0.999188064 ubox
55 66 0.005238770 ubox
56 63 0.999315594 ubox
57 62 0.998722840 ubox
57 63 0.007086596 ubox
57 65 0.007336727 ubox
57 68 0.014073556 ubox
58 62 0.010010814 ubox
58 65 0.004423169 ubox
58 67 0.014080105 ubox
67 91 0.006006837 ubox
68 91 0.010694173 ubox
69 86 0.951216930 ubox
70 85 0.999242824 ubox
71 84 0.999777769 ubox
72 83 0.999981016 ubox
73 82 0.999785341 ubox
74 81 0.999889010 ubox
75 80 0.974023127 ubox
85 95 0.009355335 ubox
85 98 0.005999479 ubox
85 101 0.004606421 ubox
85 104 0.004093588 ubox
86 90 0.003776772 ubox
86 91 0.007149079 ubox
86 92 0.006593062 ubox
86 93 0.008436156 ubox
86 94 0.010152261 ubox
86 97 0.006480275 ubox
86 100 0.004957444 ubox
86 103 0.004410536 ubox
91 95 0.046289611 ubox
91 98 0.108056513 ubox
91 101 0.045708438 ubox
91 104 0.033946269 ubox
91 107 0.010010969 ubox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
