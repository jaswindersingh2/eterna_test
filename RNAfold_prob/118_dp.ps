%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (118)
} def

/sequence { (\
GGAAAAGAUAUGAUGCAAAAGCAAAAAACUAUAGUAUGAGAGUGGUGUGGAGCGCAUGAUAUCAAAAAGUUGUUCUUCGGAAUAACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 63 0.004381838 ubox
1 95 0.034910355 ubox
1 98 0.035332544 ubox
1 101 0.066638079 ubox
1 104 0.068585662 ubox
1 107 0.017348178 ubox
2 63 0.007596689 ubox
2 95 0.018429207 ubox
2 98 0.018601850 ubox
2 101 0.035097069 ubox
2 104 0.035774009 ubox
2 107 0.011691188 ubox
3 62 0.006759410 ubox
6 30 0.004288597 ubox
7 29 0.004432753 ubox
7 63 0.998194197 ubox
8 62 0.999189346 ubox
9 58 0.003279873 ubox
9 61 0.999127932 ubox
9 66 0.003507448 ubox
10 57 0.004169892 ubox
10 60 0.999103979 ubox
11 26 0.003898153 ubox
11 56 0.004837958 ubox
11 58 0.003847651 ubox
11 59 0.994360789 ubox
11 64 0.016735649 ubox
12 55 0.005102641 ubox
12 57 0.003869067 ubox
12 63 0.018512882 ubox
13 57 0.994298566 ubox
13 62 0.018496814 ubox
14 23 0.020809674 ubox
14 54 0.008612784 ubox
14 56 0.999050285 ubox
14 61 0.018412857 ubox
15 22 0.027244919 ubox
15 53 0.012073096 ubox
15 55 0.999327672 ubox
15 60 0.018168265 ubox
16 21 0.028029327 ubox
16 52 0.012658776 ubox
16 54 0.998505549 ubox
16 58 0.017920235 ubox
17 57 0.017431143 ubox
19 48 0.004318140 ubox
20 30 0.012827368 ubox
20 46 0.007732840 ubox
20 48 0.008760193 ubox
21 29 0.015382769 ubox
21 35 0.005631894 ubox
21 46 0.011000759 ubox
21 48 0.332939029 ubox
21 53 0.849081818 ubox
21 55 0.009899159 ubox
22 34 0.005775505 ubox
22 42 0.003225338 ubox
22 44 0.008984437 ubox
22 45 0.010992229 ubox
22 47 0.334289033 ubox
22 49 0.166334838 ubox
22 50 0.070980023 ubox
22 52 0.848394854 ubox
22 54 0.010216789 ubox
23 43 0.008794154 ubox
23 46 0.318277243 ubox
23 48 0.157841198 ubox
24 43 0.006586235 ubox
24 46 0.017125229 ubox
24 48 0.025953769 ubox
25 43 0.013173496 ubox
25 46 0.056206248 ubox
25 48 0.074524382 ubox
26 37 0.005101745 ubox
26 43 0.088896045 ubox
26 46 0.014401947 ubox
26 48 0.194465364 ubox
27 43 0.016296645 ubox
27 46 0.024299071 ubox
27 48 0.048092336 ubox
28 35 0.011901040 ubox
28 43 0.304630042 ubox
28 46 0.634848839 ubox
28 48 0.032444438 ubox
29 34 0.012307759 ubox
29 38 0.032156789 ubox
29 40 0.145186825 ubox
29 42 0.306693297 ubox
29 44 0.012498556 ubox
29 45 0.647356097 ubox
29 47 0.032594502 ubox
29 49 0.040474271 ubox
29 50 0.673945298 ubox
29 52 0.010379583 ubox
30 36 0.007148610 ubox
30 38 0.032526266 ubox
30 39 0.143533867 ubox
30 40 0.014974071 ubox
30 41 0.293951041 ubox
30 44 0.646851496 ubox
30 47 0.004215177 ubox
30 49 0.676134139 ubox
30 51 0.009047675 ubox
31 35 0.008293441 ubox
31 37 0.047901395 ubox
31 43 0.644527320 ubox
31 46 0.008064170 ubox
31 48 0.677856698 ubox
32 36 0.043572909 ubox
32 38 0.091722321 ubox
32 39 0.142554033 ubox
32 40 0.049977678 ubox
32 41 0.045336890 ubox
32 42 0.633941256 ubox
32 44 0.027515775 ubox
32 45 0.007710732 ubox
32 47 0.678040383 ubox
33 37 0.079896159 ubox
33 43 0.030527607 ubox
33 46 0.677291352 ubox
34 43 0.005948697 ubox
34 53 0.004432527 ubox
35 39 0.299495090 ubox
35 40 0.184523016 ubox
35 41 0.053231862 ubox
35 42 0.013762092 ubox
35 44 0.673936498 ubox
35 45 0.004290327 ubox
35 47 0.004574056 ubox
35 52 0.004405381 ubox
36 43 0.675001875 ubox
36 46 0.005799332 ubox
37 41 0.016693564 ubox
37 42 0.662563000 ubox
37 45 0.006254093 ubox
37 50 0.004162627 ubox
37 64 0.012642741 ubox
38 43 0.003940734 ubox
38 63 0.014117911 ubox
39 43 0.004437874 ubox
39 48 0.004669075 ubox
39 62 0.014059008 ubox
40 63 0.004834021 ubox
41 46 0.004186646 ubox
41 62 0.004789449 ubox
42 53 0.008155188 ubox
42 55 0.005480233 ubox
42 60 0.014392772 ubox
43 52 0.008137424 ubox
43 54 0.005497954 ubox
43 59 0.014976222 ubox
44 53 0.010807828 ubox
45 53 0.013067432 ubox
45 55 0.003575912 ubox
45 57 0.015502038 ubox
46 51 0.009482338 ubox
46 52 0.012982975 ubox
46 54 0.003677318 ubox
46 56 0.015609654 ubox
47 53 0.026002108 ubox
47 55 0.015926762 ubox
48 52 0.024347014 ubox
48 54 0.015894709 ubox
49 53 0.016390099 ubox
63 91 0.003579714 ubox
69 86 0.516584198 ubox
69 95 0.011487050 ubox
69 98 0.818992497 ubox
69 101 0.224397916 ubox
69 104 0.082339556 ubox
69 107 0.022538609 ubox
70 85 0.517090824 ubox
70 88 0.004728167 ubox
70 94 0.011178659 ubox
70 97 0.819823601 ubox
70 100 0.224512270 ubox
70 103 0.082352240 ubox
70 106 0.022782280 ubox
71 84 0.517097913 ubox
71 87 0.005438519 ubox
71 93 0.007694005 ubox
71 96 0.820379491 ubox
71 99 0.224264029 ubox
71 102 0.082154193 ubox
71 105 0.022847959 ubox
72 83 0.517455407 ubox
72 86 0.005539065 ubox
72 95 0.820788146 ubox
72 98 0.224269037 ubox
72 101 0.082114864 ubox
72 104 0.022859823 ubox
73 81 0.004381783 ubox
73 82 0.517475449 ubox
73 85 0.005289686 ubox
73 92 0.003937286 ubox
73 93 0.471203661 ubox
73 94 0.671224745 ubox
73 96 0.010997563 ubox
73 97 0.214296911 ubox
73 100 0.076942077 ubox
73 103 0.021436828 ubox
74 80 0.006186259 ubox
74 81 0.517651391 ubox
74 84 0.004066448 ubox
74 91 0.004344055 ubox
74 92 0.678956483 ubox
74 93 0.473926430 ubox
74 94 0.009970345 ubox
74 96 0.167820749 ubox
74 97 0.004908801 ubox
74 99 0.052698695 ubox
74 102 0.014707047 ubox
75 79 0.008596138 ubox
75 80 0.517365408 ubox
75 91 0.828078934 ubox
76 85 0.003315774 ubox
76 88 0.015510748 ubox
76 89 0.082768088 ubox
76 90 0.821649933 ubox
76 91 0.027205813 ubox
76 92 0.014833415 ubox
76 93 0.168579698 ubox
76 94 0.045977403 ubox
76 97 0.029635302 ubox
76 100 0.009451878 ubox
77 84 0.005570513 ubox
77 85 0.004811594 ubox
77 87 0.030151698 ubox
77 88 0.110396781 ubox
77 89 0.792220039 ubox
77 90 0.029422724 ubox
77 91 0.012620963 ubox
77 92 0.195023160 ubox
77 93 0.034952715 ubox
77 96 0.028593096 ubox
77 97 0.004411071 ubox
77 99 0.009390398 ubox
78 91 0.198963965 ubox
79 83 0.003927085 ubox
79 86 0.417501170 ubox
79 95 0.030085490 ubox
79 98 0.011126208 ubox
80 86 0.664878075 ubox
80 95 0.006361388 ubox
83 87 0.009314433 ubox
83 88 0.016624118 ubox
83 89 0.005712548 ubox
83 90 0.014057565 ubox
83 91 0.003725604 ubox
83 92 0.004758151 ubox
86 91 0.007647730 ubox
91 95 0.022340773 ubox
91 98 0.053810422 ubox
91 101 0.023579194 ubox
91 104 0.018246568 ubox
91 107 0.005398558 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
