%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (121)
} def

/sequence { (\
GGAAACUAGCGCGCCAGAGCCUGCGAAAGCCCGGAAGGAGCACGGAGAGCACGAGGCGGAGCAACAAUGGAAUAAUUCGUUAUUCCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.203644290 ubox
1 7 0.077434808 ubox
1 10 0.040595580 ubox
1 12 0.003344864 ubox
1 62 0.011189411 ubox
1 65 0.040749901 ubox
1 68 0.009253852 ubox
1 86 0.075967006 ubox
1 95 0.075433536 ubox
1 98 0.068131407 ubox
1 101 0.067395589 ubox
1 104 0.067646551 ubox
1 107 0.017075314 ubox
2 6 0.080717768 ubox
2 7 0.025384577 ubox
2 10 0.012651185 ubox
2 62 0.008934141 ubox
2 65 0.027381473 ubox
2 68 0.007520337 ubox
2 85 0.076010490 ubox
2 95 0.041499248 ubox
2 98 0.034772450 ubox
2 101 0.035261683 ubox
2 104 0.035121513 ubox
2 107 0.011458829 ubox
3 7 0.013460993 ubox
3 68 0.016734853 ubox
3 84 0.074885277 ubox
4 68 0.010243161 ubox
4 81 0.008178360 ubox
4 83 0.064724772 ubox
4 84 0.003706031 ubox
5 68 0.008351854 ubox
5 80 0.011967959 ubox
5 83 0.004676845 ubox
6 11 0.012507168 ubox
6 59 0.005778178 ubox
6 61 0.047110589 ubox
6 79 0.012234793 ubox
6 91 0.102638709 ubox
7 59 0.003202998 ubox
7 60 0.043770764 ubox
7 61 0.012443656 ubox
7 63 0.107999713 ubox
7 64 0.126977991 ubox
7 66 0.037197625 ubox
7 67 0.009572434 ubox
7 82 0.022974200 ubox
7 87 0.003794374 ubox
7 88 0.010508016 ubox
7 89 0.011985434 ubox
7 90 0.099390186 ubox
7 91 0.010624574 ubox
7 92 0.012184021 ubox
7 93 0.010813395 ubox
7 94 0.008878119 ubox
7 96 0.009268853 ubox
7 97 0.008815065 ubox
7 99 0.009396041 ubox
7 100 0.008637803 ubox
7 102 0.008970616 ubox
7 103 0.008326592 ubox
7 105 0.008937498 ubox
7 106 0.008260885 ubox
8 68 0.004679961 ubox
8 81 0.024022338 ubox
9 62 0.979036782 ubox
9 65 0.011497642 ubox
9 80 0.023605915 ubox
9 95 0.007417099 ubox
9 98 0.007438972 ubox
9 101 0.007536284 ubox
9 104 0.007552986 ubox
10 58 0.036224042 ubox
10 59 0.100204797 ubox
10 61 0.979356233 ubox
10 79 0.023612356 ubox
10 91 0.007079675 ubox
11 57 0.036669253 ubox
11 62 0.036161872 ubox
11 65 0.004727577 ubox
11 78 0.021004879 ubox
11 95 0.006148190 ubox
11 98 0.006153192 ubox
11 101 0.006283177 ubox
11 104 0.006235965 ubox
12 56 0.036619806 ubox
12 58 0.984143578 ubox
12 59 0.127839595 ubox
12 61 0.033908143 ubox
13 57 0.999033670 ubox
13 62 0.004337103 ubox
14 53 0.003339766 ubox
14 55 0.021856831 ubox
14 56 0.999094076 ubox
14 59 0.018691265 ubox
14 61 0.004323388 ubox
15 53 0.022087433 ubox
15 55 0.997796044 ubox
15 58 0.018705223 ubox
17 50 0.004000951 ubox
17 52 0.869598508 ubox
19 50 0.998135199 ubox
19 52 0.010826856 ubox
19 57 0.019257045 ubox
20 47 0.003419749 ubox
20 49 0.999286665 ubox
20 56 0.019278376 ubox
21 45 0.003761964 ubox
21 47 0.999131302 ubox
21 49 0.005506110 ubox
21 55 0.019274911 ubox
22 44 0.003707637 ubox
22 46 0.996168186 ubox
22 47 0.008445493 ubox
22 48 0.006571859 ubox
22 51 0.006282374 ubox
22 54 0.018815440 ubox
23 30 0.009486641 ubox
23 43 0.003732552 ubox
23 50 0.007310752 ubox
24 29 0.009517400 ubox
24 44 0.998899540 ubox
24 45 0.025934718 ubox
24 47 0.003349033 ubox
24 49 0.007304067 ubox
24 53 0.017531184 ubox
25 43 0.996809728 ubox
25 52 0.017514494 ubox
29 41 0.996075858 ubox
29 50 0.011679811 ubox
30 37 0.003428853 ubox
30 38 0.059075205 ubox
30 40 0.996420593 ubox
30 47 0.012870490 ubox
30 49 0.011657496 ubox
31 37 0.058526165 ubox
31 38 0.994446233 ubox
31 40 0.003879405 ubox
31 45 0.020778670 ubox
32 37 0.994218595 ubox
32 38 0.080419264 ubox
32 44 0.020823556 ubox
33 43 0.020785712 ubox
34 41 0.010306382 ubox
43 53 0.003653040 ubox
44 52 0.003724012 ubox
58 65 0.008717812 ubox
58 86 0.006935423 ubox
58 98 0.004630013 ubox
59 65 0.013019946 ubox
59 85 0.007237855 ubox
59 95 0.011721009 ubox
59 98 0.006566129 ubox
60 68 0.003338118 ubox
60 84 0.007222913 ubox
61 65 0.008466827 ubox
61 83 0.006760649 ubox
61 95 0.017323057 ubox
61 98 0.003400183 ubox
62 69 0.010128040 ubox
62 91 0.013324806 ubox
63 68 0.011770292 ubox
63 81 0.016100101 ubox
63 84 0.006154770 ubox
64 68 0.006163564 ubox
64 80 0.017467269 ubox
64 83 0.009217697 ubox
65 70 0.003490346 ubox
65 79 0.017608776 ubox
65 91 0.121336325 ubox
66 77 0.018939436 ubox
66 81 0.062771988 ubox
67 76 0.019772575 ubox
67 80 0.068834682 ubox
68 75 0.019762689 ubox
68 79 0.069333661 ubox
68 87 0.897538473 ubox
68 88 0.043610319 ubox
68 89 0.011334811 ubox
68 90 0.008096435 ubox
68 91 0.003833075 ubox
68 92 0.004151979 ubox
69 78 0.070485617 ubox
69 86 0.996723978 ubox
70 77 0.068032943 ubox
70 78 0.015897612 ubox
70 85 0.996933168 ubox
71 76 0.061322941 ubox
71 77 0.016072231 ubox
71 84 0.996564746 ubox
72 76 0.012384738 ubox
72 80 0.004029603 ubox
72 81 0.003330153 ubox
72 83 0.995856193 ubox
73 79 0.004411941 ubox
73 82 0.995913022 ubox
74 80 0.019217632 ubox
74 81 0.981284786 ubox
75 80 0.772814644 ubox
75 81 0.038897181 ubox
75 83 0.004129663 ubox
76 82 0.005183336 ubox
79 98 0.003570489 ubox
80 97 0.003558858 ubox
81 96 0.003320560 ubox
83 93 0.006217060 ubox
84 92 0.007186305 ubox
85 91 0.007275433 ubox
86 91 0.003457211 ubox
91 95 0.042465573 ubox
91 98 0.102406566 ubox
91 101 0.044937561 ubox
91 104 0.034787031 ubox
91 107 0.010289307 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
68 87 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
