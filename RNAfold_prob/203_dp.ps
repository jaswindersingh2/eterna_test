%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (203)
} def

/sequence { (\
GGAAAACAGAAGUAGACUAUUAGAAAACUAAAUAGAAAAGAACAGACAAAAGUCGUUCACUACAACUGAAGCGUAUUCGUACGCUUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.055263030 ubox
1 61 0.003770909 ubox
1 63 0.003558252 ubox
1 66 0.003260489 ubox
1 67 0.004286343 ubox
1 86 0.003180653 ubox
1 95 0.067643098 ubox
1 98 0.068080613 ubox
1 101 0.069600504 ubox
1 104 0.069930959 ubox
1 107 0.017661488 ubox
2 7 0.015818778 ubox
2 60 0.003981557 ubox
2 66 0.004542309 ubox
2 86 0.005435135 ubox
2 95 0.035694230 ubox
2 98 0.035810512 ubox
2 101 0.036571160 ubox
2 104 0.036439255 ubox
2 107 0.011891800 ubox
3 85 0.003854237 ubox
3 86 0.004780723 ubox
4 86 0.004410959 ubox
5 86 0.004127507 ubox
6 13 0.017123108 ubox
7 12 0.017764522 ubox
7 15 0.003417300 ubox
7 68 0.980007504 ubox
7 91 0.007728325 ubox
8 61 0.003625091 ubox
8 67 0.984528272 ubox
9 60 0.003783074 ubox
9 63 0.011774443 ubox
9 66 0.983640215 ubox
9 95 0.007153801 ubox
9 98 0.008549212 ubox
9 101 0.009094686 ubox
9 104 0.009166342 ubox
9 107 0.003209340 ubox
10 67 0.006312829 ubox
11 18 0.004150160 ubox
11 29 0.003558076 ubox
11 61 0.022526184 ubox
11 67 0.018123380 ubox
12 17 0.004303213 ubox
12 28 0.003692798 ubox
12 60 0.023297078 ubox
12 63 0.995606756 ubox
12 66 0.018512924 ubox
12 95 0.014385090 ubox
12 98 0.016769836 ubox
12 101 0.016992693 ubox
12 104 0.016296417 ubox
12 107 0.005654054 ubox
13 27 0.003584111 ubox
13 39 0.003285080 ubox
13 59 0.022190096 ubox
13 62 0.996753041 ubox
13 65 0.017746401 ubox
13 68 0.006821013 ubox
13 94 0.013871786 ubox
13 97 0.016268014 ubox
13 100 0.016480978 ubox
13 103 0.015807180 ubox
13 106 0.005541990 ubox
14 61 0.996278005 ubox
14 67 0.007578090 ubox
15 60 0.990401576 ubox
15 61 0.004215262 ubox
15 63 0.009516325 ubox
15 66 0.007617816 ubox
15 95 0.009470220 ubox
15 98 0.009448436 ubox
15 101 0.009213215 ubox
15 104 0.004838995 ubox
16 21 0.003397595 ubox
16 33 0.010578495 ubox
16 56 0.003457488 ubox
17 23 0.019560933 ubox
17 35 0.975079104 ubox
17 55 0.003386241 ubox
18 22 0.017732607 ubox
18 23 0.003752121 ubox
18 24 0.003451886 ubox
18 25 0.004464194 ubox
18 27 0.003358806 ubox
18 30 0.005832350 ubox
18 31 0.004776140 ubox
18 32 0.015810247 ubox
18 34 0.980600295 ubox
18 35 0.010314925 ubox
18 36 0.004792533 ubox
18 37 0.004068176 ubox
18 59 0.006987836 ubox
19 29 0.005814615 ubox
19 33 0.977020065 ubox
20 26 0.004454647 ubox
20 27 0.007568386 ubox
20 30 0.007500500 ubox
20 31 0.562802234 ubox
20 32 0.809637897 ubox
20 34 0.003183107 ubox
20 35 0.008821169 ubox
20 36 0.004233329 ubox
20 37 0.003989561 ubox
21 25 0.004442193 ubox
21 26 0.008741620 ubox
21 27 0.005933799 ubox
21 30 0.789062651 ubox
21 31 0.595415990 ubox
21 32 0.007429483 ubox
21 34 0.012343707 ubox
21 35 0.004127823 ubox
21 36 0.004270488 ubox
22 29 0.957803376 ubox
22 33 0.012503785 ubox
23 28 0.952374961 ubox
23 29 0.097313709 ubox
24 29 0.056548269 ubox
24 33 0.004998828 ubox
25 29 0.012200277 ubox
26 33 0.003635574 ubox
28 35 0.029226346 ubox
29 34 0.027513685 ubox
29 35 0.003338877 ubox
29 36 0.004258680 ubox
29 38 0.003927806 ubox
33 37 0.004360641 ubox
33 38 0.008342033 ubox
33 39 0.007690927 ubox
33 62 0.003828921 ubox
34 61 0.004189997 ubox
35 58 0.003381111 ubox
35 60 0.004284370 ubox
35 63 0.003202455 ubox
36 57 0.003337682 ubox
37 61 0.008099485 ubox
39 61 0.003500970 ubox
40 54 0.003455411 ubox
40 57 0.005569600 ubox
40 58 0.997827554 ubox
41 56 0.004907822 ubox
41 57 0.998664322 ubox
42 53 0.004331824 ubox
42 56 0.997953526 ubox
42 57 0.005627427 ubox
43 52 0.004985238 ubox
43 55 0.992299321 ubox
44 53 0.014615064 ubox
44 56 0.004188802 ubox
45 53 0.011386543 ubox
45 54 0.998470508 ubox
45 57 0.003743114 ubox
46 53 0.998760976 ubox
46 56 0.004187038 ubox
47 52 0.996968353 ubox
47 55 0.004391548 ubox
60 68 0.007936663 ubox
60 91 0.005083946 ubox
61 68 0.003733328 ubox
61 90 0.004939196 ubox
62 67 0.003534922 ubox
63 68 0.006973297 ubox
63 91 0.007936197 ubox
66 91 0.065552418 ubox
67 87 0.031388080 ubox
67 88 0.035331524 ubox
67 89 0.018074933 ubox
67 90 0.063295392 ubox
67 96 0.010464885 ubox
67 99 0.008155786 ubox
67 102 0.006529073 ubox
67 105 0.005600170 ubox
68 86 0.028965075 ubox
68 95 0.011665320 ubox
68 98 0.009092767 ubox
68 101 0.007280175 ubox
68 104 0.006245631 ubox
69 85 0.025305479 ubox
69 86 0.936881179 ubox
70 85 0.992335061 ubox
70 86 0.019378829 ubox
71 80 0.006936015 ubox
71 84 0.999917474 ubox
72 79 0.007128426 ubox
72 83 0.999946861 ubox
73 78 0.007181721 ubox
73 82 0.999861082 ubox
74 79 0.004297403 ubox
74 81 0.991514173 ubox
75 80 0.893448453 ubox
76 81 0.006988581 ubox
85 92 0.008489470 ubox
85 93 0.005638632 ubox
85 94 0.005714304 ubox
86 90 0.005097069 ubox
86 91 0.011757160 ubox
86 92 0.009540421 ubox
86 93 0.011391387 ubox
86 94 0.004837485 ubox
86 96 0.004257800 ubox
86 97 0.003186940 ubox
86 99 0.003384705 ubox
91 95 0.042996563 ubox
91 98 0.103602418 ubox
91 101 0.045422529 ubox
91 104 0.035130616 ubox
91 107 0.010393097 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 31 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
