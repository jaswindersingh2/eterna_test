%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (362)
} def

/sequence { (\
GGAAAGAUCGUCUGAAAAAAGACCCGAAACGGAGAUCAGCGAGUGGAAAACACGGAGGAAACUCCCGCCACUCUCUUCGGAGAGUGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.003454667 ubox
1 9 0.025198234 ubox
1 13 0.005547573 ubox
1 25 0.025449015 ubox
1 30 0.009439312 ubox
1 37 0.015662768 ubox
1 40 0.045434217 ubox
1 65 0.005913047 ubox
1 66 0.044681273 ubox
1 68 0.017815599 ubox
1 69 0.029078470 ubox
1 95 0.154516739 ubox
1 98 0.158081662 ubox
1 101 0.159846093 ubox
1 104 0.159889592 ubox
1 107 0.040369418 ubox
2 8 0.018598294 ubox
2 9 0.102524793 ubox
2 12 0.006069281 ubox
2 24 0.025435057 ubox
2 30 0.004776404 ubox
2 36 0.009109806 ubox
2 37 0.024408825 ubox
2 40 0.035614359 ubox
2 64 0.005860672 ubox
2 65 0.030522636 ubox
2 66 0.030790295 ubox
2 68 0.032559396 ubox
2 69 0.003835467 ubox
2 95 0.078821626 ubox
2 98 0.080988498 ubox
2 101 0.080800736 ubox
2 104 0.080404115 ubox
2 107 0.026238924 ubox
3 8 0.093829538 ubox
3 11 0.005843458 ubox
3 36 0.022712259 ubox
3 63 0.005463976 ubox
4 8 0.004012895 ubox
5 13 0.008959811 ubox
6 12 0.009285355 ubox
6 24 0.003998934 ubox
6 25 0.012737795 ubox
6 30 0.005359834 ubox
6 37 0.960301351 ubox
6 66 0.010309166 ubox
6 68 0.006345316 ubox
6 95 0.039869600 ubox
6 98 0.032378036 ubox
6 101 0.031966615 ubox
6 104 0.031306103 ubox
6 107 0.010913827 ubox
7 11 0.008081141 ubox
7 36 0.961281568 ubox
8 15 0.004990428 ubox
8 27 0.025171590 ubox
8 33 0.006510431 ubox
8 35 0.961300417 ubox
8 42 0.058470045 ubox
8 83 0.005982066 ubox
8 87 0.010447619 ubox
8 88 0.005671614 ubox
8 89 0.005488553 ubox
8 90 0.006540233 ubox
8 91 0.004396161 ubox
8 92 0.103696364 ubox
8 93 0.010042377 ubox
8 94 0.006637433 ubox
8 96 0.007218666 ubox
8 97 0.006645638 ubox
8 99 0.007147071 ubox
8 100 0.006271772 ubox
8 102 0.006993651 ubox
8 103 0.006048617 ubox
8 105 0.005238813 ubox
8 106 0.004788754 ubox
9 14 0.005341083 ubox
9 26 0.026814156 ubox
9 31 0.004238282 ubox
9 32 0.006502574 ubox
9 34 0.960155727 ubox
9 41 0.062546378 ubox
9 67 0.004671600 ubox
9 82 0.006382412 ubox
9 86 0.009607019 ubox
9 91 0.110036396 ubox
10 23 0.979602416 ubox
10 24 0.007938496 ubox
10 25 0.017007538 ubox
10 30 0.004230306 ubox
10 36 0.004819138 ubox
10 40 0.062192799 ubox
10 95 0.006652901 ubox
10 98 0.006875167 ubox
10 101 0.007135496 ubox
10 104 0.007096918 ubox
11 22 0.982565716 ubox
11 29 0.003456888 ubox
11 32 0.025615448 ubox
11 33 0.161824683 ubox
11 35 0.005367691 ubox
11 39 0.010919613 ubox
11 81 0.003251357 ubox
11 92 0.012963463 ubox
11 94 0.005381923 ubox
11 97 0.006047187 ubox
11 100 0.006345213 ubox
11 103 0.006322111 ubox
12 21 0.983303516 ubox
12 31 0.026025792 ubox
12 32 0.166062853 ubox
12 34 0.005520476 ubox
12 39 0.061203499 ubox
12 80 0.003336215 ubox
12 91 0.013812504 ubox
13 18 0.010861081 ubox
13 19 0.035206962 ubox
13 20 0.976551056 ubox
13 26 0.005090540 ubox
13 29 0.007611539 ubox
13 31 0.165801600 ubox
13 33 0.005494361 ubox
13 38 0.061837573 ubox
13 79 0.003334266 ubox
13 90 0.013372116 ubox
13 96 0.004881895 ubox
13 99 0.004863646 ubox
13 102 0.004621088 ubox
14 23 0.003908546 ubox
14 25 0.005939874 ubox
14 30 0.164334854 ubox
14 37 0.061767883 ubox
14 78 0.003338186 ubox
14 95 0.005093908 ubox
14 98 0.005075562 ubox
14 101 0.004847930 ubox
14 104 0.003436906 ubox
15 36 0.059520253 ubox
15 77 0.003257932 ubox
16 36 0.003982483 ubox
20 36 0.006842776 ubox
21 25 0.025539730 ubox
21 30 0.021835205 ubox
21 37 0.020831051 ubox
22 36 0.020977840 ubox
23 31 0.003397236 ubox
23 32 0.029694771 ubox
23 34 0.039711989 ubox
24 31 0.036688204 ubox
24 32 0.970342527 ubox
24 34 0.011563479 ubox
24 46 0.012186686 ubox
24 80 0.045386708 ubox
24 86 0.003936312 ubox
25 31 0.972563069 ubox
25 32 0.063548971 ubox
25 34 0.014088413 ubox
25 41 0.007986299 ubox
25 45 0.012212523 ubox
25 67 0.008037936 ubox
25 79 0.045496973 ubox
25 82 0.004100809 ubox
25 84 0.005428969 ubox
25 86 0.003318933 ubox
25 91 0.003582032 ubox
26 30 0.909896421 ubox
26 37 0.020405389 ubox
26 40 0.008000541 ubox
26 44 0.010550650 ubox
26 66 0.008360141 ubox
26 68 0.003903450 ubox
26 78 0.045488431 ubox
26 85 0.003234870 ubox
27 36 0.020141253 ubox
27 44 0.004129589 ubox
27 77 0.045087109 ubox
28 76 0.024316774 ubox
28 77 0.003703916 ubox
29 76 0.003790118 ubox
30 39 0.006415362 ubox
30 41 0.030496537 ubox
30 67 0.018330312 ubox
30 79 0.015991885 ubox
31 37 0.009879359 ubox
31 40 0.031126598 ubox
31 65 0.030516807 ubox
31 66 0.016410903 ubox
31 74 0.012458366 ubox
31 76 0.037137202 ubox
31 78 0.016140188 ubox
31 95 0.003488742 ubox
31 98 0.004911327 ubox
31 101 0.003978668 ubox
31 104 0.003963185 ubox
32 36 0.006448403 ubox
32 37 0.008998650 ubox
32 64 0.031893242 ubox
32 65 0.013319454 ubox
32 73 0.013056046 ubox
32 75 0.042993655 ubox
32 77 0.016168909 ubox
33 63 0.033130621 ubox
33 72 0.013062489 ubox
33 74 0.043027544 ubox
33 76 0.016284634 ubox
34 40 0.016748267 ubox
34 62 0.033040559 ubox
34 64 0.009005170 ubox
34 71 0.013025280 ubox
34 73 0.042958279 ubox
34 75 0.016323288 ubox
34 95 0.010604584 ubox
34 98 0.008071880 ubox
34 101 0.008022503 ubox
34 104 0.007560115 ubox
35 63 0.008909501 ubox
35 72 0.042100864 ubox
35 74 0.016234278 ubox
36 42 0.021573336 ubox
36 46 0.005815766 ubox
36 47 0.005129844 ubox
36 58 0.006998345 ubox
36 59 0.028996755 ubox
36 60 0.006654714 ubox
36 61 0.003295558 ubox
36 70 0.005431739 ubox
36 92 0.028746229 ubox
37 41 0.022885006 ubox
37 45 0.009219944 ubox
37 46 0.005400810 ubox
37 57 0.007294295 ubox
37 58 0.030052308 ubox
37 91 0.030772854 ubox
38 44 0.009214329 ubox
38 76 0.010485631 ubox
39 53 0.004857931 ubox
39 66 0.006413227 ubox
39 68 0.945138458 ubox
39 69 0.004991925 ubox
39 75 0.012115620 ubox
39 95 0.018620165 ubox
39 98 0.018794751 ubox
39 101 0.019242748 ubox
39 104 0.019270596 ubox
39 107 0.006728383 ubox
40 45 0.005150325 ubox
40 46 0.008822906 ubox
40 54 0.013518280 ubox
40 55 0.026835950 ubox
40 57 0.010133614 ubox
40 58 0.003890474 ubox
40 67 0.947375419 ubox
40 91 0.019817504 ubox
41 51 0.003303616 ubox
41 53 0.019443688 ubox
41 64 0.004459269 ubox
41 66 0.937886031 ubox
41 68 0.008162374 ubox
41 73 0.023284597 ubox
41 95 0.019056042 ubox
41 98 0.019115292 ubox
41 101 0.019499653 ubox
41 104 0.019327328 ubox
41 107 0.007308173 ubox
42 63 0.004894074 ubox
42 72 0.023460701 ubox
43 51 0.090493403 ubox
43 53 0.989979126 ubox
43 62 0.004939312 ubox
43 65 0.003830324 ubox
43 68 0.022868489 ubox
43 71 0.023683967 ubox
43 95 0.007195818 ubox
43 98 0.009329283 ubox
43 101 0.009466528 ubox
43 104 0.009310904 ubox
43 107 0.003245622 ubox
44 49 0.007644594 ubox
44 50 0.090119126 ubox
44 52 0.991510866 ubox
44 61 0.004882125 ubox
44 67 0.022893946 ubox
44 70 0.023695031 ubox
44 94 0.006865628 ubox
44 96 0.006138133 ubox
44 97 0.008346787 ubox
44 99 0.006187459 ubox
44 100 0.008467036 ubox
44 102 0.005837714 ubox
44 103 0.008309063 ubox
44 105 0.004766257 ubox
45 51 0.991886364 ubox
45 53 0.027307626 ubox
45 65 0.004553667 ubox
45 66 0.022864163 ubox
45 69 0.023747778 ubox
45 95 0.007332376 ubox
45 98 0.007391075 ubox
45 101 0.007073462 ubox
45 104 0.005373906 ubox
46 51 0.021421233 ubox
46 53 0.015402907 ubox
46 64 0.004592932 ubox
46 65 0.016127377 ubox
46 68 0.023755195 ubox
46 95 0.003792346 ubox
46 98 0.003770954 ubox
46 101 0.003730713 ubox
47 63 0.004470259 ubox
51 67 0.009045469 ubox
53 67 0.032570835 ubox
54 64 0.004121856 ubox
54 65 0.995524405 ubox
54 66 0.041034080 ubox
54 68 0.009669076 ubox
54 69 0.006905582 ubox
55 64 0.998514323 ubox
55 65 0.030255424 ubox
55 66 0.008004344 ubox
55 68 0.008180800 ubox
56 63 0.998702012 ubox
57 62 0.997943582 ubox
57 63 0.006334235 ubox
57 64 0.009194547 ubox
57 65 0.023435640 ubox
57 66 0.010272316 ubox
58 62 0.009561952 ubox
58 63 0.007194968 ubox
58 64 0.023538680 ubox
58 65 0.010278173 ubox
59 63 0.020493517 ubox
66 86 0.003900871 ubox
66 91 0.049248864 ubox
67 95 0.003786980 ubox
68 86 0.012441899 ubox
68 91 0.014187220 ubox
69 86 0.995446268 ubox
69 91 0.004655509 ubox
70 85 0.998174700 ubox
71 84 0.998676169 ubox
72 83 0.998558466 ubox
73 82 0.998694372 ubox
74 80 0.005758048 ubox
74 81 0.998454211 ubox
74 83 0.003542541 ubox
74 92 0.005647111 ubox
75 79 0.012824309 ubox
75 80 0.997643048 ubox
75 82 0.003705637 ubox
75 91 0.005934749 ubox
76 80 0.003168823 ubox
76 81 0.003457223 ubox
76 88 0.006747752 ubox
76 90 0.005217033 ubox
77 87 0.009576898 ubox
78 86 0.009979964 ubox
79 85 0.009433827 ubox
82 98 0.004126422 ubox
84 95 0.027870919 ubox
84 98 0.013279903 ubox
84 101 0.009214145 ubox
84 104 0.007879407 ubox
85 94 0.027886074 ubox
85 96 0.010376006 ubox
85 97 0.012274855 ubox
85 99 0.004155165 ubox
85 100 0.008934175 ubox
85 102 0.003216949 ubox
85 103 0.007677962 ubox
86 95 0.014564350 ubox
86 98 0.005783434 ubox
86 101 0.004475203 ubox
86 104 0.003277537 ubox
91 95 0.047351949 ubox
91 98 0.109101533 ubox
91 101 0.045410502 ubox
91 104 0.033051865 ubox
91 107 0.009728314 ubox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
