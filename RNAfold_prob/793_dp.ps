%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (793)
} def

/sequence { (\
GGAAAAACGACUCAGAUAUAGCUACUACAUAGUGCAACCAGUCACAUGAUAGUACUAUACUAGAGCGAUGAUAUGUUCGCAUAUCAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.100773706 ubox
1 11 0.003571103 ubox
1 66 0.006247289 ubox
1 78 0.003182319 ubox
1 95 0.067089146 ubox
1 98 0.067610642 ubox
1 101 0.069046774 ubox
1 104 0.069363448 ubox
1 107 0.017512259 ubox
2 8 0.024378406 ubox
2 11 0.003304802 ubox
2 13 0.007048138 ubox
2 66 0.006220829 ubox
2 69 0.003457454 ubox
2 77 0.003178608 ubox
2 78 0.003339973 ubox
2 85 0.003535797 ubox
2 95 0.035371186 ubox
2 98 0.035501656 ubox
2 101 0.036250856 ubox
2 104 0.036113881 ubox
2 107 0.011784207 ubox
3 12 0.006997183 ubox
3 69 0.007825127 ubox
3 77 0.003333031 ubox
3 84 0.003180915 ubox
4 69 0.024155698 ubox
4 76 0.003198425 ubox
5 69 0.024295280 ubox
6 69 0.103917901 ubox
7 69 0.075322350 ubox
8 65 0.005730575 ubox
8 67 0.957014060 ubox
8 91 0.010312935 ubox
9 66 0.977385883 ubox
9 69 0.004419380 ubox
9 95 0.008241304 ubox
9 98 0.008062591 ubox
9 101 0.008173686 ubox
9 104 0.008198625 ubox
10 69 0.003173682 ubox
11 63 0.023800560 ubox
11 65 0.998437316 ubox
12 62 0.023746638 ubox
12 63 0.014273738 ubox
12 64 0.998849505 ubox
12 92 0.003471761 ubox
13 63 0.998385169 ubox
13 91 0.003620903 ubox
14 61 0.944829486 ubox
15 60 0.950214006 ubox
15 61 0.091257872 ubox
16 58 0.014057364 ubox
16 61 0.060244457 ubox
17 57 0.011682226 ubox
17 59 0.990118859 ubox
18 56 0.009429750 ubox
18 58 0.998299225 ubox
19 57 0.999233966 ubox
20 56 0.999481395 ubox
21 53 0.008615054 ubox
21 55 0.999214132 ubox
21 56 0.005394078 ubox
21 66 0.012433007 ubox
22 52 0.011628135 ubox
22 65 0.012450095 ubox
23 51 0.011671625 ubox
23 54 0.993265513 ubox
23 64 0.012395312 ubox
24 50 0.011511045 ubox
24 53 0.999255947 ubox
25 52 0.999806385 ubox
25 63 0.011871628 ubox
26 49 0.006807430 ubox
26 51 0.999111705 ubox
26 62 0.011861651 ubox
27 50 0.992786557 ubox
27 61 0.011432499 ubox
28 48 0.993836002 ubox
29 47 0.993362002 ubox
29 50 0.005306348 ubox
29 58 0.011842315 ubox
30 46 0.983591161 ubox
30 48 0.031508055 ubox
30 49 0.007385204 ubox
30 57 0.012461542 ubox
31 42 0.024651524 ubox
31 47 0.033472728 ubox
31 56 0.012525553 ubox
32 42 0.003468196 ubox
32 43 0.016599081 ubox
32 45 0.996103025 ubox
32 47 0.014655622 ubox
32 55 0.012534358 ubox
33 40 0.028442200 ubox
33 44 0.996203188 ubox
33 46 0.015353943 ubox
33 54 0.012530396 ubox
34 39 0.028497008 ubox
34 42 0.171482413 ubox
34 43 0.983221407 ubox
34 45 0.015451178 ubox
34 53 0.012528172 ubox
35 41 0.807974795 ubox
35 52 0.012513685 ubox
36 42 0.132532659 ubox
37 42 0.026732586 ubox
37 50 0.006841877 ubox
39 48 0.011703594 ubox
40 47 0.011483603 ubox
41 50 0.003769618 ubox
42 49 0.004270058 ubox
43 48 0.004282976 ubox
65 80 0.020780516 ubox
66 79 0.021642862 ubox
66 91 0.040250255 ubox
67 78 0.021704685 ubox
67 85 0.003390218 ubox
67 95 0.005049428 ubox
67 98 0.004001465 ubox
67 101 0.003986806 ubox
67 104 0.003464645 ubox
68 77 0.021585023 ubox
68 84 0.003310963 ubox
69 79 0.005213584 ubox
69 86 0.891360097 ubox
69 87 0.041040867 ubox
69 88 0.011451654 ubox
69 89 0.008111672 ubox
69 90 0.005837286 ubox
69 99 0.006570195 ubox
69 102 0.005423845 ubox
69 105 0.004346173 ubox
70 78 0.007406368 ubox
70 85 0.999148602 ubox
70 98 0.007056796 ubox
70 101 0.005801455 ubox
70 104 0.004666411 ubox
71 77 0.007345886 ubox
71 84 0.999169631 ubox
72 83 0.998946827 ubox
73 82 0.998937072 ubox
74 81 0.998415496 ubox
74 96 0.013989386 ubox
74 99 0.005771217 ubox
74 102 0.008409083 ubox
75 80 0.992626994 ubox
75 82 0.003320974 ubox
75 95 0.015147013 ubox
75 98 0.006250599 ubox
75 101 0.009164701 ubox
75 104 0.003242297 ubox
76 81 0.003502605 ubox
76 93 0.009667841 ubox
76 94 0.012702035 ubox
76 97 0.006122752 ubox
76 100 0.009104189 ubox
76 103 0.003204375 ubox
77 92 0.013126489 ubox
77 93 0.009544155 ubox
77 96 0.005419765 ubox
77 99 0.008443173 ubox
78 91 0.015530685 ubox
79 95 0.003498466 ubox
79 98 0.003300977 ubox
84 92 0.012288219 ubox
85 91 0.013041031 ubox
91 95 0.042996809 ubox
91 98 0.103671326 ubox
91 101 0.045484226 ubox
91 104 0.035202294 ubox
91 107 0.010414935 ubox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 41 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
