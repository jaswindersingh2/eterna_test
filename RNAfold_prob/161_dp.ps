%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (161)
} def

/sequence { (\
GGAAAAAAGCGGAUCGGACCCGAGGGAGCCCGGAAACGAGGACCACGAGGACAGGAUCGAGCAAAAAAGUGCAUCUUCGGGUGCACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.046962636 ubox
1 15 0.003533153 ubox
1 62 0.009604162 ubox
1 86 0.004315327 ubox
1 95 0.067256761 ubox
1 98 0.067830255 ubox
1 101 0.069304009 ubox
1 104 0.069547800 ubox
1 107 0.017557422 ubox
2 10 0.014471118 ubox
2 15 0.008208000 ubox
2 62 0.007025384 ubox
2 95 0.035492670 ubox
2 98 0.035722580 ubox
2 101 0.036378083 ubox
2 104 0.036246575 ubox
2 107 0.011824733 ubox
3 14 0.007820281 ubox
9 46 0.003804279 ubox
9 62 0.979513212 ubox
9 84 0.004210856 ubox
9 95 0.007414335 ubox
9 98 0.007863967 ubox
9 101 0.007661403 ubox
9 104 0.007680825 ubox
10 22 0.004492135 ubox
10 38 0.003931906 ubox
10 59 0.072722246 ubox
10 61 0.979975725 ubox
10 83 0.004211977 ubox
10 91 0.010674611 ubox
11 15 0.003431371 ubox
11 21 0.004642071 ubox
11 37 0.003993610 ubox
11 43 0.003467626 ubox
11 44 0.011627376 ubox
11 58 0.062334051 ubox
11 62 0.012144637 ubox
11 95 0.013840297 ubox
11 98 0.010077910 ubox
11 101 0.010266226 ubox
11 104 0.010202780 ubox
11 107 0.003857869 ubox
12 20 0.004630309 ubox
12 43 0.011608900 ubox
12 57 0.043271385 ubox
12 58 0.994533139 ubox
12 62 0.005240397 ubox
12 86 0.007654377 ubox
13 57 0.996920732 ubox
14 33 0.003229869 ubox
14 39 0.013612631 ubox
14 54 0.003784787 ubox
14 55 0.056868842 ubox
14 56 0.996327990 ubox
14 60 0.012650337 ubox
14 85 0.005149908 ubox
14 92 0.010361344 ubox
15 32 0.003981706 ubox
15 38 0.013936482 ubox
15 54 0.093707900 ubox
15 55 0.993062602 ubox
15 59 0.013046357 ubox
15 91 0.010486563 ubox
16 30 0.005739840 ubox
16 31 0.004476005 ubox
16 37 0.014221141 ubox
16 52 0.209407467 ubox
16 58 0.012936565 ubox
16 84 0.050038595 ubox
16 86 0.003940980 ubox
17 29 0.005783467 ubox
17 30 0.004466547 ubox
17 52 0.552433026 ubox
17 57 0.011182102 ubox
17 84 0.006367067 ubox
18 82 0.051413993 ubox
19 26 0.009419086 ubox
19 28 0.003500737 ubox
19 49 0.190010421 ubox
19 50 0.846207325 ubox
19 54 0.009355673 ubox
19 55 0.009093108 ubox
19 81 0.051638689 ubox
20 25 0.009456707 ubox
20 26 0.006040849 ubox
20 33 0.016052723 ubox
20 47 0.010569709 ubox
20 49 0.846957574 ubox
20 50 0.489965890 ubox
20 54 0.008220850 ubox
20 80 0.051639627 ubox
21 25 0.006008299 ubox
21 32 0.016096957 ubox
21 47 0.859155662 ubox
21 49 0.491083375 ubox
21 50 0.010683895 ubox
21 79 0.051638759 ubox
22 31 0.016066373 ubox
22 46 0.857345856 ubox
22 78 0.051634572 ubox
23 77 0.051480850 ubox
24 29 0.005843194 ubox
24 30 0.014356785 ubox
24 43 0.004829441 ubox
24 44 0.616371243 ubox
24 46 0.445237455 ubox
24 75 0.003486739 ubox
24 76 0.050958734 ubox
25 29 0.014128158 ubox
25 43 0.615016475 ubox
25 44 0.722739138 ubox
25 46 0.105842102 ubox
25 75 0.050415496 ubox
25 76 0.003967321 ubox
26 43 0.722641321 ubox
26 44 0.240539628 ubox
26 46 0.008945592 ubox
26 74 0.030051273 ubox
26 75 0.005397123 ubox
27 74 0.006073862 ubox
28 37 0.004161796 ubox
28 43 0.139877665 ubox
28 44 0.007082353 ubox
28 72 0.019916242 ubox
29 38 0.010112526 ubox
29 40 0.409917798 ubox
29 41 0.895220562 ubox
29 71 0.019299600 ubox
30 38 0.021207199 ubox
30 40 0.896750716 ubox
30 41 0.128545408 ubox
30 69 0.007280176 ubox
31 38 0.988902082 ubox
31 40 0.128771864 ubox
31 69 0.007286428 ubox
32 37 0.987161296 ubox
32 44 0.003564982 ubox
33 37 0.042568250 ubox
33 43 0.003559856 ubox
37 54 0.003748958 ubox
37 59 0.003887368 ubox
38 58 0.003944932 ubox
39 57 0.003904206 ubox
40 46 0.003390682 ubox
40 52 0.006546908 ubox
40 58 0.003529645 ubox
40 84 0.004998126 ubox
41 52 0.005251951 ubox
41 58 0.009648936 ubox
42 57 0.009655759 ubox
42 82 0.005137162 ubox
43 49 0.004352226 ubox
43 50 0.017625441 ubox
43 55 0.011987630 ubox
43 81 0.005159858 ubox
44 49 0.017698185 ubox
44 54 0.012010567 ubox
44 61 0.004663662 ubox
44 80 0.005155461 ubox
46 54 0.004052760 ubox
46 59 0.048148206 ubox
46 79 0.005142227 ubox
47 52 0.003279523 ubox
47 58 0.049259063 ubox
47 78 0.005164085 ubox
48 57 0.049098755 ubox
48 77 0.005152783 ubox
49 76 0.005084268 ubox
50 58 0.004317961 ubox
50 75 0.005062591 ubox
51 57 0.004099964 ubox
51 74 0.004860846 ubox
52 59 0.003181471 ubox
59 75 0.004136643 ubox
59 95 0.008555692 ubox
59 98 0.004628408 ubox
60 74 0.005447064 ubox
61 70 0.009446959 ubox
61 72 0.047343006 ubox
61 95 0.010938295 ubox
62 69 0.010044894 ubox
62 71 0.047427687 ubox
62 91 0.008208428 ubox
63 70 0.043326248 ubox
69 86 0.996688007 ubox
69 95 0.003454172 ubox
70 85 0.997955706 ubox
71 84 0.998636180 ubox
72 83 0.998637433 ubox
73 82 0.998351885 ubox
74 80 0.012320725 ubox
74 81 0.997249725 ubox
75 79 0.016653035 ubox
75 80 0.994021036 ubox
75 81 0.026911564 ubox
76 80 0.024493964 ubox
86 91 0.007174232 ubox
91 95 0.043055320 ubox
91 98 0.103787187 ubox
91 101 0.045523499 ubox
91 104 0.035223726 ubox
91 107 0.010421079 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
