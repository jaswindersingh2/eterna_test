%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (989)
} def

/sequence { (\
GGAAAGGUCCAGUAUGAGAGUACAGUAUUAUAUGAAAAAAAUAUAAUAUAAAUUGAGAGAUUAGGACCGAUGUAUUUCGAUACAUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.011005079 ubox
1 68 0.007152311 ubox
1 86 0.003624162 ubox
1 95 0.067367013 ubox
1 98 0.067788832 ubox
1 101 0.069339967 ubox
1 104 0.069654478 ubox
1 107 0.017585840 ubox
2 9 0.011014966 ubox
2 67 0.006304107 ubox
2 68 0.004359092 ubox
2 78 0.004140297 ubox
2 86 0.003950528 ubox
2 95 0.035563609 ubox
2 98 0.035689541 ubox
2 101 0.036453257 ubox
2 104 0.036316181 ubox
2 107 0.011850061 ubox
3 8 0.010063210 ubox
3 71 0.004841646 ubox
3 77 0.004143255 ubox
4 76 0.004072506 ubox
5 75 0.003995777 ubox
6 68 0.998624213 ubox
7 67 0.999885463 ubox
7 68 0.003742040 ubox
8 66 0.999797890 ubox
9 64 0.003362494 ubox
9 65 0.999906357 ubox
10 25 0.003526689 ubox
10 64 0.998784399 ubox
11 21 0.008196625 ubox
11 54 0.004489612 ubox
11 61 0.023155551 ubox
11 62 0.413498026 ubox
12 21 0.004709553 ubox
12 23 0.872852039 ubox
12 28 0.003463450 ubox
12 61 0.415706968 ubox
12 62 0.039530213 ubox
12 83 0.005045369 ubox
13 18 0.004610452 ubox
13 19 0.008366657 ubox
13 20 0.005111791 ubox
13 22 0.873905349 ubox
13 27 0.003757336 ubox
13 58 0.012045770 ubox
13 59 0.016800408 ubox
13 60 0.410474744 ubox
13 63 0.023745485 ubox
13 82 0.005051464 ubox
14 21 0.871789218 ubox
14 26 0.003977643 ubox
14 61 0.055184231 ubox
14 62 0.024582602 ubox
14 81 0.005048881 ubox
15 19 0.012709719 ubox
15 20 0.855477250 ubox
15 22 0.009238909 ubox
15 24 0.049987812 ubox
15 25 0.003697611 ubox
15 55 0.004906711 ubox
15 56 0.022578436 ubox
15 57 0.114860283 ubox
15 58 0.145912325 ubox
15 59 0.081251334 ubox
15 60 0.056936018 ubox
15 63 0.047787972 ubox
15 80 0.004937806 ubox
16 21 0.009603654 ubox
16 23 0.055379191 ubox
16 54 0.010411101 ubox
16 61 0.003225071 ubox
16 62 0.048641159 ubox
17 21 0.005963809 ubox
17 53 0.010556094 ubox
17 54 0.023767631 ubox
17 61 0.048360187 ubox
18 23 0.020634314 ubox
18 53 0.020029008 ubox
18 54 0.165228132 ubox
18 77 0.004719373 ubox
19 53 0.164332633 ubox
19 54 0.318281281 ubox
19 76 0.004852319 ubox
20 53 0.323713368 ubox
20 54 0.086443301 ubox
20 75 0.004925127 ubox
21 50 0.027669497 ubox
21 51 0.052148686 ubox
21 52 0.311629776 ubox
21 55 0.023484990 ubox
21 56 0.023335766 ubox
21 57 0.019614697 ubox
21 58 0.009481434 ubox
21 74 0.005039021 ubox
22 49 0.019742482 ubox
22 53 0.017688926 ubox
22 54 0.022581121 ubox
22 73 0.005053394 ubox
23 55 0.055247231 ubox
23 72 0.005053464 ubox
24 49 0.045361236 ubox
24 53 0.016209937 ubox
24 54 0.057223220 ubox
24 62 0.004155239 ubox
24 71 0.004430504 ubox
25 44 0.007059293 ubox
25 47 0.004236902 ubox
25 49 0.963791803 ubox
25 53 0.040354348 ubox
26 43 0.007250102 ubox
26 46 0.003598751 ubox
26 48 0.993944880 ubox
26 50 0.009603918 ubox
26 52 0.033647479 ubox
27 42 0.007275420 ubox
27 47 0.998155353 ubox
27 49 0.009029309 ubox
28 41 0.007227573 ubox
28 46 0.998227844 ubox
28 48 0.006896593 ubox
28 51 0.028048267 ubox
29 40 0.006857221 ubox
29 45 0.998660233 ubox
29 50 0.030860174 ubox
30 44 0.998881012 ubox
30 49 0.031161565 ubox
31 38 0.003320709 ubox
31 43 0.998863618 ubox
31 45 0.003287932 ubox
31 48 0.031186442 ubox
32 42 0.998228829 ubox
32 44 0.003822040 ubox
32 47 0.031156388 ubox
33 37 0.003176116 ubox
33 38 0.018937255 ubox
33 39 0.025511371 ubox
33 40 0.074855038 ubox
33 41 0.991063480 ubox
33 43 0.004223253 ubox
33 46 0.030753884 ubox
34 42 0.004199810 ubox
35 42 0.003544266 ubox
35 44 0.007317991 ubox
37 42 0.004389976 ubox
48 54 0.004537907 ubox
49 55 0.005377243 ubox
49 56 0.006690720 ubox
49 58 0.006208187 ubox
49 60 0.003182826 ubox
49 63 0.033085179 ubox
50 54 0.013150581 ubox
50 61 0.009322714 ubox
50 62 0.050396798 ubox
51 61 0.043047028 ubox
51 62 0.555055684 ubox
52 61 0.593672647 ubox
52 62 0.034811189 ubox
53 57 0.008258198 ubox
53 58 0.019662676 ubox
53 59 0.024640279 ubox
53 60 0.597911606 ubox
53 63 0.021116997 ubox
53 64 0.017427761 ubox
54 58 0.024989555 ubox
54 59 0.583880412 ubox
54 60 0.054402809 ubox
54 63 0.314682610 ubox
55 61 0.009867915 ubox
55 62 0.335343601 ubox
56 61 0.328952065 ubox
56 62 0.036741810 ubox
57 61 0.027365446 ubox
57 62 0.026839695 ubox
58 62 0.015200428 ubox
69 78 0.005183790 ubox
69 86 0.998156816 ubox
69 98 0.007012905 ubox
69 101 0.011659400 ubox
70 77 0.005114630 ubox
70 85 0.999171182 ubox
71 84 0.999221857 ubox
71 96 0.009540667 ubox
71 99 0.016239756 ubox
71 102 0.003281343 ubox
72 83 0.999670362 ubox
72 95 0.010153913 ubox
72 98 0.017299531 ubox
72 101 0.003491383 ubox
73 82 0.999194745 ubox
73 94 0.009172163 ubox
73 96 0.003504052 ubox
73 97 0.016561870 ubox
73 100 0.003362272 ubox
74 81 0.987498007 ubox
75 79 0.035400356 ubox
75 80 0.901954270 ubox
75 92 0.003601012 ubox
75 94 0.017652605 ubox
76 80 0.028576274 ubox
76 89 0.003303114 ubox
76 91 0.003593094 ubox
76 93 0.020365051 ubox
77 88 0.003235556 ubox
77 90 0.003351442 ubox
77 92 0.020980183 ubox
78 91 0.021036614 ubox
79 86 0.006437310 ubox
80 85 0.005714336 ubox
81 88 0.005872128 ubox
85 92 0.008083177 ubox
86 91 0.010636761 ubox
91 95 0.043023538 ubox
91 98 0.103742881 ubox
91 101 0.045518871 ubox
91 104 0.035231834 ubox
91 107 0.010423982 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
