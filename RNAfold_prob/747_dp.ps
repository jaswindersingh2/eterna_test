%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (747)
} def

/sequence { (\
GGAAAGUAGGCGCAAAGGGCGUACAAGCUAACGGUAAAACGGUAAGCAGCUAAUGGGAAACGAUAAGCGUUGUUCUUCGGAACGACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.004244146 ubox
1 24 0.004974494 ubox
1 28 0.007256991 ubox
1 29 0.024107346 ubox
1 68 0.006051243 ubox
1 86 0.013637553 ubox
1 95 0.215399760 ubox
1 98 0.217383065 ubox
1 101 0.246166521 ubox
1 104 0.249329809 ubox
1 107 0.063059799 ubox
2 7 0.004873957 ubox
2 24 0.005728999 ubox
2 28 0.026290892 ubox
2 68 0.005185332 ubox
2 86 0.007132186 ubox
2 95 0.113682308 ubox
2 98 0.114458780 ubox
2 101 0.129274781 ubox
2 104 0.129600325 ubox
2 107 0.042336867 ubox
3 7 0.003212200 ubox
5 29 0.011815222 ubox
6 24 0.959046589 ubox
6 28 0.012332730 ubox
6 95 0.081549770 ubox
6 98 0.107087443 ubox
6 101 0.112847653 ubox
6 104 0.116038924 ubox
6 107 0.040590186 ubox
7 23 0.959928712 ubox
7 25 0.011157889 ubox
7 26 0.010385827 ubox
7 27 0.012103138 ubox
7 87 0.004277523 ubox
7 88 0.005534605 ubox
7 89 0.006858833 ubox
7 90 0.006730708 ubox
7 91 0.006074856 ubox
7 92 0.007714919 ubox
7 93 0.007187426 ubox
7 94 0.078416029 ubox
7 96 0.007397966 ubox
7 97 0.104046737 ubox
7 99 0.007965322 ubox
7 100 0.109486782 ubox
7 102 0.007049242 ubox
7 103 0.112713203 ubox
7 105 0.005841052 ubox
7 106 0.039840142 ubox
8 22 0.954030467 ubox
9 20 0.032521969 ubox
9 22 0.013391410 ubox
9 24 0.074743069 ubox
9 95 0.075246738 ubox
9 98 0.073869520 ubox
9 101 0.081363375 ubox
9 104 0.042211800 ubox
9 107 0.011453235 ubox
10 20 0.955486936 ubox
10 22 0.281201743 ubox
10 24 0.007264050 ubox
10 95 0.006807112 ubox
10 98 0.006499458 ubox
10 101 0.006841456 ubox
10 104 0.004429480 ubox
11 17 0.005596029 ubox
11 18 0.052112466 ubox
11 19 0.954640575 ubox
11 21 0.292131550 ubox
12 20 0.292481551 ubox
13 17 0.752399461 ubox
13 18 0.223447690 ubox
13 19 0.291912336 ubox
18 29 0.004595105 ubox
19 28 0.004775491 ubox
20 27 0.004779636 ubox
21 95 0.005461084 ubox
21 98 0.005257445 ubox
21 101 0.005798112 ubox
21 104 0.005693713 ubox
22 94 0.005282801 ubox
22 97 0.005088869 ubox
22 100 0.005612331 ubox
22 103 0.005511066 ubox
24 91 0.010711964 ubox
26 51 0.009528498 ubox
27 35 0.008016286 ubox
27 43 0.009574495 ubox
27 47 0.997266849 ubox
27 50 0.009870590 ubox
27 68 0.006356696 ubox
27 95 0.003841692 ubox
27 98 0.003794216 ubox
27 101 0.004271012 ubox
27 104 0.004301343 ubox
28 34 0.008202761 ubox
28 42 0.009792711 ubox
28 46 0.998291643 ubox
28 49 0.009863881 ubox
28 67 0.006362964 ubox
28 91 0.006932415 ubox
29 33 0.007392795 ubox
29 41 0.006370043 ubox
29 44 0.162803903 ubox
29 45 0.966432013 ubox
29 48 0.009243374 ubox
29 66 0.005923068 ubox
29 90 0.006658896 ubox
30 43 0.175211407 ubox
31 43 0.853281299 ubox
31 64 0.003319067 ubox
32 41 0.517956060 ubox
32 42 0.852583072 ubox
32 62 0.004104672 ubox
33 40 0.537775826 ubox
33 43 0.004813914 ubox
33 61 0.004079593 ubox
34 40 0.820563360 ubox
34 47 0.003247117 ubox
34 61 0.003880275 ubox
35 39 0.740110603 ubox
35 41 0.006133963 ubox
35 44 0.003356520 ubox
35 46 0.003193559 ubox
35 60 0.003807177 ubox
36 43 0.003279210 ubox
40 46 0.003324206 ubox
40 56 0.004444700 ubox
41 47 0.004555519 ubox
42 47 0.004677644 ubox
42 54 0.004372359 ubox
42 95 0.004731426 ubox
42 98 0.004639933 ubox
42 101 0.005083297 ubox
42 104 0.005082141 ubox
43 53 0.004307944 ubox
43 94 0.004558493 ubox
43 97 0.004482583 ubox
43 100 0.004910885 ubox
43 103 0.004909685 ubox
45 51 0.003856819 ubox
46 50 0.003851181 ubox
47 69 0.003167991 ubox
49 68 0.997835738 ubox
50 55 0.005625986 ubox
50 56 0.004467557 ubox
50 57 0.007993354 ubox
50 67 0.999066841 ubox
51 55 0.004049095 ubox
51 56 0.007702806 ubox
51 65 0.061863941 ubox
51 66 0.980941871 ubox
52 64 0.078109799 ubox
53 64 0.956598768 ubox
54 60 0.004431368 ubox
54 62 0.106038216 ubox
54 63 0.979502411 ubox
54 65 0.020814066 ubox
54 102 0.003626006 ubox
55 61 0.133760540 ubox
55 64 0.022565782 ubox
55 101 0.004014330 ubox
56 61 0.977995622 ubox
57 61 0.014962697 ubox
60 70 0.003281143 ubox
61 67 0.004983087 ubox
61 69 0.003450892 ubox
62 68 0.004820860 ubox
69 86 0.910651077 ubox
69 95 0.007231426 ubox
69 98 0.393980681 ubox
69 101 0.097631742 ubox
69 104 0.036276917 ubox
69 107 0.010557399 ubox
70 85 0.911860397 ubox
70 88 0.003463993 ubox
70 94 0.006839890 ubox
70 97 0.394428636 ubox
70 100 0.097684656 ubox
70 103 0.036277892 ubox
70 106 0.010649257 ubox
71 84 0.911614163 ubox
71 87 0.003930464 ubox
71 93 0.004820625 ubox
71 96 0.394713671 ubox
71 99 0.097554554 ubox
71 102 0.036178499 ubox
71 105 0.010664818 ubox
72 83 0.912574698 ubox
72 86 0.003947330 ubox
72 95 0.394909573 ubox
72 98 0.097540205 ubox
72 101 0.036140027 ubox
72 104 0.010660132 ubox
73 81 0.007377921 ubox
73 82 0.912171976 ubox
73 85 0.003561635 ubox
73 93 0.226694989 ubox
73 94 0.322807158 ubox
73 96 0.004790532 ubox
73 97 0.092803258 ubox
73 100 0.033941699 ubox
73 103 0.009997559 ubox
74 80 0.010347227 ubox
74 81 0.912120582 ubox
74 85 0.005275943 ubox
74 88 0.004232296 ubox
74 92 0.326149968 ubox
74 93 0.227967518 ubox
74 94 0.004292398 ubox
74 96 0.070886051 ubox
74 99 0.023562962 ubox
74 102 0.006842554 ubox
75 79 0.014584282 ubox
75 80 0.911568066 ubox
75 84 0.005937879 ubox
75 91 0.398008396 ubox
76 87 0.005864741 ubox
76 88 0.008095374 ubox
76 89 0.037885144 ubox
76 90 0.394827948 ubox
76 91 0.014408191 ubox
76 92 0.007179433 ubox
76 93 0.070548684 ubox
76 94 0.019654050 ubox
76 97 0.014132371 ubox
76 100 0.004298144 ubox
77 85 0.150158796 ubox
77 87 0.013656919 ubox
77 88 0.048755406 ubox
77 89 0.353206077 ubox
77 90 0.013273840 ubox
77 91 0.005720725 ubox
77 92 0.082032981 ubox
77 93 0.014642175 ubox
77 96 0.013488425 ubox
77 99 0.004163386 ubox
78 84 0.164753040 ubox
78 91 0.083684063 ubox
79 83 0.154189271 ubox
79 86 0.182863029 ubox
79 95 0.014595906 ubox
79 98 0.004637177 ubox
80 86 0.291288133 ubox
83 91 0.011280367 ubox
86 91 0.008259301 ubox
91 95 0.050914580 ubox
91 98 0.110306933 ubox
91 101 0.041958246 ubox
91 104 0.026688463 ubox
91 107 0.007743270 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
