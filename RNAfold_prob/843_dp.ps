%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:31 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (843)
} def

/sequence { (\
GGAAAGCAAGGACAAAAAAGCCAAAACGAGAUGAAAACAAUCAGUCGACUGAAAACAAGAAGCAAAAACUAUGUCUUCGGACAUAGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.158694159 ubox
1 13 0.053531420 ubox
1 21 0.011987585 ubox
1 22 0.176726813 ubox
1 27 0.042428013 ubox
1 32 0.008159668 ubox
1 38 0.013278775 ubox
1 46 0.010437542 ubox
1 49 0.021294082 ubox
1 50 0.033268778 ubox
1 56 0.055086608 ubox
1 63 0.044792526 ubox
1 69 0.010980706 ubox
1 82 0.003866893 ubox
1 95 0.121009463 ubox
1 98 0.124178965 ubox
1 101 0.124018755 ubox
1 104 0.124872728 ubox
1 107 0.031549632 ubox
2 7 0.078577244 ubox
2 13 0.015613782 ubox
2 21 0.175659858 ubox
2 22 0.021952738 ubox
2 27 0.016254489 ubox
2 38 0.005696248 ubox
2 42 0.003185376 ubox
2 45 0.007433067 ubox
2 46 0.016237653 ubox
2 49 0.035188220 ubox
2 50 0.004047791 ubox
2 56 0.027795322 ubox
2 63 0.033493588 ubox
2 69 0.004605841 ubox
2 78 0.003194212 ubox
2 95 0.063660037 ubox
2 98 0.062759446 ubox
2 101 0.063815478 ubox
2 104 0.063690928 ubox
2 107 0.020793943 ubox
3 32 0.003308143 ubox
3 45 0.014723444 ubox
3 50 0.005604723 ubox
3 77 0.003170394 ubox
4 50 0.006369078 ubox
5 32 0.005459149 ubox
5 50 0.052924526 ubox
6 13 0.049033430 ubox
6 21 0.209246026 ubox
6 22 0.016072471 ubox
6 27 0.039675340 ubox
6 38 0.004191649 ubox
6 45 0.014851213 ubox
6 46 0.004788438 ubox
6 49 0.054229167 ubox
6 50 0.003921272 ubox
6 56 0.021495020 ubox
6 63 0.565381036 ubox
6 69 0.003403737 ubox
6 95 0.062819577 ubox
6 98 0.063196430 ubox
6 101 0.063087570 ubox
6 104 0.061825160 ubox
6 107 0.021567648 ubox
7 11 0.022095357 ubox
7 20 0.210562134 ubox
7 28 0.014690264 ubox
7 30 0.014305630 ubox
7 33 0.016443163 ubox
7 44 0.015903548 ubox
7 47 0.019604717 ubox
7 51 0.065034821 ubox
7 59 0.030416777 ubox
7 62 0.565310820 ubox
7 73 0.003184216 ubox
7 79 0.003617226 ubox
7 86 0.008785339 ubox
7 91 0.082032388 ubox
8 32 0.015422553 ubox
8 50 0.060008107 ubox
9 32 0.004355451 ubox
9 50 0.018553089 ubox
9 77 0.005449738 ubox
10 21 0.038028356 ubox
10 22 0.849640032 ubox
10 27 0.027642816 ubox
10 38 0.016279460 ubox
10 46 0.004423070 ubox
10 49 0.019416347 ubox
10 50 0.006280930 ubox
10 56 0.011011062 ubox
10 63 0.022300710 ubox
10 76 0.006130825 ubox
10 95 0.031690883 ubox
10 98 0.030137794 ubox
10 101 0.030817401 ubox
10 104 0.030727437 ubox
10 107 0.010694015 ubox
11 21 0.850259256 ubox
11 22 0.053664369 ubox
11 27 0.010577101 ubox
11 38 0.006225257 ubox
11 42 0.003465700 ubox
11 46 0.060051900 ubox
11 49 0.006720388 ubox
11 56 0.009865361 ubox
11 63 0.033638223 ubox
11 75 0.006292989 ubox
11 95 0.019337106 ubox
11 98 0.018304957 ubox
11 101 0.018503401 ubox
11 104 0.018133844 ubox
11 107 0.005907554 ubox
12 41 0.003319450 ubox
12 45 0.060138808 ubox
12 74 0.006302008 ubox
13 20 0.757519616 ubox
13 28 0.009339907 ubox
13 30 0.007572478 ubox
13 33 0.018705913 ubox
13 44 0.060037863 ubox
13 51 0.008144534 ubox
13 59 0.013076604 ubox
13 62 0.014448262 ubox
13 73 0.006304470 ubox
13 91 0.021135445 ubox
14 32 0.017543957 ubox
14 50 0.007729621 ubox
14 72 0.005725749 ubox
15 32 0.003651761 ubox
16 32 0.003835392 ubox
16 41 0.006496779 ubox
17 32 0.004232575 ubox
18 32 0.003225823 ubox
18 50 0.003898039 ubox
19 32 0.007845662 ubox
19 50 0.065024874 ubox
20 27 0.036034466 ubox
20 32 0.004282210 ubox
20 38 0.008395557 ubox
20 45 0.003570311 ubox
20 46 0.003985828 ubox
20 49 0.065694196 ubox
20 50 0.004175631 ubox
20 56 0.019148071 ubox
20 63 0.098249285 ubox
20 95 0.018794685 ubox
20 98 0.018444950 ubox
20 101 0.018786085 ubox
20 104 0.018868646 ubox
20 107 0.006603215 ubox
21 28 0.030896327 ubox
21 30 0.028202682 ubox
21 33 0.007556181 ubox
21 44 0.003862182 ubox
21 47 0.018455479 ubox
21 51 0.022003208 ubox
21 59 0.005430775 ubox
21 62 0.097978879 ubox
21 80 0.003340138 ubox
21 91 0.014987424 ubox
22 28 0.047186768 ubox
22 30 0.028596950 ubox
22 33 0.080697669 ubox
22 47 0.044804724 ubox
22 51 0.163441829 ubox
22 59 0.010940677 ubox
22 62 0.006861520 ubox
22 79 0.003342836 ubox
22 86 0.003286416 ubox
22 91 0.026352869 ubox
23 32 0.079987408 ubox
23 45 0.004270511 ubox
23 50 0.157360358 ubox
24 32 0.011734214 ubox
24 45 0.005409117 ubox
24 50 0.086747599 ubox
25 32 0.019481848 ubox
25 45 0.008489528 ubox
25 50 0.039130875 ubox
26 32 0.012469945 ubox
26 45 0.122299011 ubox
26 50 0.034936286 ubox
27 33 0.069831568 ubox
27 44 0.130282247 ubox
27 47 0.790166517 ubox
27 51 0.036320330 ubox
27 59 0.011911605 ubox
27 62 0.016110819 ubox
27 91 0.018223458 ubox
28 32 0.043721573 ubox
28 38 0.031397787 ubox
28 42 0.061335843 ubox
28 45 0.008568821 ubox
28 46 0.805635653 ubox
28 49 0.054381804 ubox
28 50 0.028697108 ubox
28 56 0.008159483 ubox
28 63 0.027008113 ubox
28 95 0.018800104 ubox
28 98 0.020193379 ubox
28 101 0.021561364 ubox
28 104 0.021616421 ubox
28 107 0.008203343 ubox
29 41 0.061352380 ubox
29 45 0.786854099 ubox
29 50 0.024734115 ubox
30 38 0.049844350 ubox
30 41 0.016192635 ubox
30 42 0.368066385 ubox
30 45 0.031046977 ubox
30 46 0.176923842 ubox
30 49 0.025395530 ubox
30 56 0.009842579 ubox
30 63 0.074125630 ubox
30 95 0.016781476 ubox
30 98 0.034278132 ubox
30 101 0.034395610 ubox
30 104 0.034629219 ubox
30 107 0.012098527 ubox
31 41 0.369560124 ubox
31 45 0.173765434 ubox
32 36 0.010704566 ubox
32 37 0.037645511 ubox
32 39 0.168135749 ubox
32 40 0.358115019 ubox
32 43 0.743794398 ubox
32 44 0.113995005 ubox
32 47 0.024271790 ubox
32 48 0.004214680 ubox
32 53 0.004746277 ubox
32 54 0.003981575 ubox
32 55 0.005111845 ubox
32 57 0.034175908 ubox
32 58 0.010129695 ubox
32 59 0.009461313 ubox
32 60 0.018392788 ubox
32 61 0.035694319 ubox
32 62 0.016097853 ubox
32 64 0.041194129 ubox
32 65 0.003575045 ubox
32 87 0.004113324 ubox
32 88 0.003725710 ubox
32 89 0.003686595 ubox
32 90 0.003942503 ubox
32 92 0.004152650 ubox
32 93 0.005282225 ubox
32 94 0.004356051 ubox
32 96 0.042977193 ubox
32 97 0.004864348 ubox
32 99 0.042834417 ubox
32 100 0.004743517 ubox
32 102 0.043166391 ubox
32 103 0.004524767 ubox
32 105 0.032095582 ubox
32 106 0.003557296 ubox
33 38 0.199271756 ubox
33 41 0.008832953 ubox
33 42 0.762283312 ubox
33 46 0.028867046 ubox
33 49 0.004704441 ubox
33 56 0.037603339 ubox
33 63 0.045733485 ubox
33 95 0.045297085 ubox
33 98 0.045138046 ubox
33 101 0.045522257 ubox
33 104 0.035130170 ubox
33 107 0.004362741 ubox
34 41 0.719630821 ubox
34 45 0.027020427 ubox
35 41 0.040885677 ubox
36 41 0.011197810 ubox
37 41 0.004901551 ubox
37 45 0.021273419 ubox
38 44 0.024026312 ubox
38 47 0.007709088 ubox
38 51 0.052164261 ubox
38 59 0.013345224 ubox
38 62 0.004849535 ubox
38 91 0.016332526 ubox
39 50 0.051719994 ubox
40 50 0.003718458 ubox
41 48 0.056449698 ubox
41 52 0.468951611 ubox
41 53 0.021548927 ubox
41 54 0.004909880 ubox
41 55 0.003357695 ubox
41 60 0.008879853 ubox
41 66 0.003601509 ubox
41 92 0.007632626 ubox
42 47 0.057903711 ubox
42 51 0.501434444 ubox
42 59 0.009427687 ubox
42 91 0.008054886 ubox
43 50 0.501701203 ubox
44 49 0.497679990 ubox
44 56 0.027557656 ubox
44 63 0.069822408 ubox
44 82 0.004370899 ubox
44 95 0.009455935 ubox
44 98 0.010229832 ubox
44 101 0.010010406 ubox
44 104 0.010042881 ubox
44 107 0.003531940 ubox
45 52 0.062542178 ubox
45 53 0.003655625 ubox
45 54 0.004159112 ubox
45 55 0.025309044 ubox
45 60 0.055266382 ubox
45 61 0.004864168 ubox
45 62 0.042757975 ubox
45 64 0.010042751 ubox
45 65 0.005180168 ubox
45 81 0.004354486 ubox
45 92 0.010010253 ubox
45 94 0.008660707 ubox
45 97 0.009650921 ubox
45 100 0.009419169 ubox
45 103 0.009461173 ubox
45 106 0.003367000 ubox
46 51 0.068924607 ubox
46 59 0.061242357 ubox
46 62 0.069105113 ubox
46 80 0.003562875 ubox
46 91 0.011042676 ubox
47 56 0.034859553 ubox
47 63 0.059581201 ubox
47 82 0.008301764 ubox
47 95 0.007227207 ubox
47 98 0.006414530 ubox
47 101 0.006585032 ubox
47 104 0.004643483 ubox
49 59 0.379289649 ubox
49 62 0.160742257 ubox
49 80 0.032195121 ubox
49 86 0.004115433 ubox
49 91 0.025016344 ubox
50 54 0.012961865 ubox
50 55 0.046458289 ubox
50 57 0.237548750 ubox
50 58 0.369196469 ubox
50 59 0.036349158 ubox
50 60 0.030820488 ubox
50 61 0.161553475 ubox
50 62 0.007503383 ubox
50 64 0.072269375 ubox
50 65 0.012566361 ubox
50 66 0.012268979 ubox
50 67 0.011642164 ubox
50 68 0.009035298 ubox
50 79 0.032515862 ubox
50 85 0.004027171 ubox
50 90 0.024603195 ubox
50 96 0.011064686 ubox
50 99 0.010507917 ubox
50 102 0.011688430 ubox
50 105 0.015367562 ubox
51 56 0.268770055 ubox
51 63 0.078248978 ubox
51 78 0.032694684 ubox
51 84 0.003646172 ubox
51 95 0.011908381 ubox
51 98 0.011301412 ubox
51 101 0.012597515 ubox
51 104 0.016580132 ubox
52 77 0.032656309 ubox
53 76 0.030581094 ubox
55 74 0.032025170 ubox
56 62 0.071219368 ubox
56 73 0.032596863 ubox
56 91 0.005873798 ubox
57 72 0.031641917 ubox
58 70 0.019008464 ubox
59 63 0.037575526 ubox
59 69 0.019459408 ubox
59 70 0.004473052 ubox
59 78 0.010129665 ubox
59 95 0.059173427 ubox
59 98 0.028565082 ubox
59 101 0.006958384 ubox
59 104 0.006364749 ubox
60 70 0.003667128 ubox
60 77 0.010144244 ubox
61 70 0.024028763 ubox
61 76 0.010145681 ubox
62 69 0.025579651 ubox
62 75 0.010052910 ubox
62 95 0.039721157 ubox
62 98 0.008166179 ubox
62 101 0.007363068 ubox
62 104 0.006554455 ubox
63 73 0.010115345 ubox
63 86 0.003336972 ubox
63 91 0.088528364 ubox
64 72 0.009554118 ubox
69 86 0.992234777 ubox
69 91 0.007641714 ubox
70 85 0.998336571 ubox
70 86 0.004095729 ubox
70 90 0.006046286 ubox
71 84 0.998784489 ubox
72 83 0.998948289 ubox
73 82 0.999353229 ubox
74 80 0.007341588 ubox
74 81 0.999130079 ubox
75 79 0.013554088 ubox
75 80 0.998295583 ubox
76 80 0.003165211 ubox
82 91 0.003538590 ubox
86 95 0.012839861 ubox
86 98 0.005016238 ubox
86 101 0.003848837 ubox
86 104 0.003167925 ubox
91 95 0.046421001 ubox
91 98 0.107715163 ubox
91 101 0.045264318 ubox
91 104 0.033425982 ubox
91 107 0.009847981 ubox
10 22 0.9500000 lbox
11 21 0.9500000 lbox
13 20 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
32 43 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
