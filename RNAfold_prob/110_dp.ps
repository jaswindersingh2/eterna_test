%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (110)
} def

/sequence { (\
GGAAAAGUCUAGCGUGAAAAGCAAAAAAGUGCGGCACGAAAGUGGCGCACAGCCACGGUAGACAAAAAAUAUAUGUUCGCGUAUAUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 63 0.003674877 ubox
1 70 0.006375620 ubox
1 78 0.005609671 ubox
1 80 0.005916755 ubox
1 95 0.066956909 ubox
1 98 0.067612805 ubox
1 101 0.069191995 ubox
1 104 0.069547565 ubox
1 107 0.017566352 ubox
2 63 0.004016275 ubox
2 77 0.005573074 ubox
2 78 0.009912396 ubox
2 95 0.035347187 ubox
2 98 0.035597565 ubox
2 101 0.036372975 ubox
2 104 0.036257891 ubox
2 107 0.011836050 ubox
3 76 0.005484304 ubox
3 77 0.009889956 ubox
4 76 0.009466525 ubox
6 74 0.003285257 ubox
7 63 0.998205124 ubox
7 95 0.003715726 ubox
7 98 0.003731180 ubox
7 101 0.003611043 ubox
7 104 0.003585568 ubox
8 62 0.999560438 ubox
9 61 0.999977261 ubox
10 60 0.999668752 ubox
11 59 0.997166613 ubox
12 22 0.005773205 ubox
12 59 0.005888486 ubox
13 21 0.005778318 ubox
13 38 0.005299820 ubox
13 57 0.999550510 ubox
13 58 0.006015353 ubox
14 22 0.007954950 ubox
14 37 0.008692506 ubox
14 56 0.999859114 ubox
15 20 0.003702608 ubox
15 21 0.008056702 ubox
15 23 0.014969095 ubox
15 24 0.003823345 ubox
15 36 0.008699275 ubox
15 55 0.999396231 ubox
16 22 0.027529369 ubox
16 35 0.008697699 ubox
16 53 0.045994212 ubox
16 54 0.996191731 ubox
21 30 0.033125970 ubox
21 32 0.011052837 ubox
21 50 0.017549800 ubox
21 53 0.848934669 ubox
21 54 0.006536536 ubox
22 29 0.039571186 ubox
22 31 0.011115424 ubox
22 52 0.848362255 ubox
23 30 0.010519010 ubox
29 48 0.013267337 ubox
29 50 0.995660725 ubox
29 53 0.014247976 ubox
30 47 0.013284668 ubox
30 49 0.998714903 ubox
30 52 0.011493172 ubox
31 46 0.013326497 ubox
31 48 0.999833570 ubox
32 45 0.013323016 ubox
32 47 0.999828503 ubox
33 46 0.999629667 ubox
34 43 0.013039088 ubox
34 46 0.007821080 ubox
35 42 0.013057863 ubox
35 44 0.999662193 ubox
35 45 0.008178642 ubox
36 43 0.999508677 ubox
37 42 0.999171838 ubox
42 56 0.008718315 ubox
43 55 0.008735603 ubox
44 54 0.008763912 ubox
45 53 0.009253729 ubox
46 52 0.009254415 ubox
47 53 0.004610612 ubox
48 52 0.004590357 ubox
63 91 0.004754942 ubox
64 70 0.003236290 ubox
64 86 0.005677175 ubox
65 70 0.004134033 ubox
65 86 0.009334869 ubox
66 86 0.012908963 ubox
67 86 0.019555504 ubox
68 77 0.005745432 ubox
68 86 0.043362585 ubox
69 76 0.006357813 ubox
69 84 0.025648570 ubox
69 86 0.932647385 ubox
70 75 0.006143493 ubox
70 83 0.026602996 ubox
70 85 0.973517929 ubox
70 87 0.109629888 ubox
70 88 0.010119708 ubox
70 89 0.017970152 ubox
70 90 0.004929323 ubox
70 99 0.004141452 ubox
70 100 0.004378530 ubox
71 82 0.026648957 ubox
71 84 0.980115394 ubox
71 86 0.116018212 ubox
72 81 0.026359274 ubox
72 83 0.980959705 ubox
72 85 0.116554901 ubox
72 87 0.083636169 ubox
72 88 0.004057147 ubox
72 97 0.006872319 ubox
72 99 0.004032321 ubox
72 100 0.004190735 ubox
73 82 0.981253382 ubox
73 84 0.116491384 ubox
73 86 0.088445970 ubox
74 79 0.005796771 ubox
74 81 0.979689513 ubox
74 83 0.116078630 ubox
74 85 0.088982403 ubox
74 87 0.010983173 ubox
74 96 0.074410214 ubox
74 97 0.003367724 ubox
74 99 0.030828082 ubox
74 102 0.033273424 ubox
74 105 0.026434365 ubox
75 80 0.961924937 ubox
75 82 0.105049386 ubox
75 84 0.089123822 ubox
75 86 0.011975749 ubox
75 95 0.082560670 ubox
75 98 0.034200373 ubox
75 101 0.036921745 ubox
75 104 0.029347684 ubox
75 107 0.003255255 ubox
76 81 0.031050973 ubox
76 83 0.088132510 ubox
76 85 0.012019270 ubox
76 93 0.052170411 ubox
76 94 0.069215263 ubox
76 97 0.033491288 ubox
76 100 0.036652282 ubox
76 103 0.029125399 ubox
76 106 0.003282340 ubox
77 81 0.004807569 ubox
77 92 0.071502777 ubox
77 93 0.051862018 ubox
77 94 0.004611008 ubox
77 96 0.029529478 ubox
77 99 0.034100958 ubox
77 102 0.027054461 ubox
78 91 0.084609081 ubox
79 95 0.013865642 ubox
79 98 0.014365074 ubox
79 101 0.010735696 ubox
80 91 0.022439673 ubox
81 86 0.003376433 ubox
81 95 0.033000180 ubox
81 98 0.023839184 ubox
81 101 0.009075611 ubox
81 104 0.004739430 ubox
82 87 0.019442696 ubox
82 88 0.010532060 ubox
82 89 0.010000831 ubox
82 90 0.005933312 ubox
82 91 0.009170707 ubox
82 92 0.005788354 ubox
82 93 0.004012351 ubox
82 94 0.032239296 ubox
82 97 0.023173234 ubox
82 100 0.008815583 ubox
82 103 0.004599861 ubox
84 89 0.004529723 ubox
84 90 0.007361074 ubox
84 91 0.005623603 ubox
84 92 0.010807798 ubox
84 93 0.008557104 ubox
86 90 0.007041403 ubox
86 91 0.006215764 ubox
86 92 0.007353649 ubox
86 93 0.009862027 ubox
86 94 0.004782256 ubox
91 95 0.042799411 ubox
91 98 0.103192265 ubox
91 101 0.045275668 ubox
91 104 0.035038400 ubox
91 107 0.010366597 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
