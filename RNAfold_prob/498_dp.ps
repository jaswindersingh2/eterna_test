%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (498)
} def

/sequence { (\
GGAAAGGCGCGCGCCAGCGGAAACGCGGCGACAGCCGGCACAGCGCCGGGACACCGGCGGCGCGCAAGGCUCGGGUUCGCCCGGGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.160968836 ubox
1 39 0.010973913 ubox
1 41 0.019351055 ubox
1 65 0.003888605 ubox
1 86 0.003371021 ubox
1 95 0.077439571 ubox
1 98 0.080088722 ubox
1 101 0.082613496 ubox
1 104 0.083038254 ubox
1 107 0.020993834 ubox
2 8 0.058378544 ubox
2 39 0.008523117 ubox
2 41 0.004972401 ubox
2 95 0.040685499 ubox
2 98 0.041427511 ubox
2 101 0.042374795 ubox
2 104 0.042244015 ubox
2 107 0.013791756 ubox
6 15 0.008382293 ubox
6 36 0.343990199 ubox
6 65 0.037825184 ubox
6 70 0.003317163 ubox
6 71 0.004776421 ubox
6 95 0.055360016 ubox
6 98 0.055426074 ubox
6 101 0.055302085 ubox
6 104 0.054178803 ubox
6 107 0.018887119 ubox
7 14 0.008394735 ubox
7 35 0.344528909 ubox
7 36 0.006072557 ubox
7 63 0.020608264 ubox
7 65 0.731797504 ubox
7 70 0.005634378 ubox
7 86 0.005118977 ubox
7 95 0.025243657 ubox
7 98 0.025107051 ubox
7 101 0.021230823 ubox
7 104 0.020189742 ubox
7 107 0.006568410 ubox
8 13 0.008382751 ubox
8 34 0.344457192 ubox
8 37 0.004398808 ubox
8 62 0.020639886 ubox
8 64 0.733613411 ubox
8 68 0.053084345 ubox
8 69 0.005825351 ubox
8 85 0.005029225 ubox
8 91 0.028755489 ubox
9 32 0.019228983 ubox
9 35 0.009575177 ubox
9 36 0.003513057 ubox
9 61 0.020635271 ubox
9 63 0.733620073 ubox
9 65 0.584408507 ubox
10 34 0.009993262 ubox
10 60 0.020604563 ubox
10 62 0.733611054 ubox
10 64 0.585073775 ubox
11 18 0.004161490 ubox
11 32 0.113950336 ubox
11 41 0.016993597 ubox
11 61 0.733275097 ubox
11 63 0.585150050 ubox
12 17 0.004228008 ubox
12 30 0.345641114 ubox
12 59 0.047577000 ubox
12 60 0.730661826 ubox
12 62 0.585159497 ubox
13 18 0.004638828 ubox
13 26 0.003320129 ubox
13 29 0.363546459 ubox
13 39 0.707917180 ubox
13 41 0.005370363 ubox
13 44 0.005772983 ubox
13 58 0.066242430 ubox
13 61 0.585121197 ubox
14 19 0.003631893 ubox
14 20 0.023420652 ubox
14 25 0.003410211 ubox
14 28 0.363637299 ubox
14 38 0.708667695 ubox
14 43 0.005991632 ubox
14 57 0.066345218 ubox
14 59 0.016788347 ubox
14 60 0.585069191 ubox
15 19 0.023368456 ubox
15 20 0.006199134 ubox
15 27 0.362280873 ubox
15 37 0.707846998 ubox
15 56 0.066227806 ubox
15 59 0.577582775 ubox
15 60 0.006006704 ubox
17 24 0.014371169 ubox
17 26 0.968381073 ubox
17 35 0.010071866 ubox
17 39 0.017351256 ubox
17 41 0.003306939 ubox
17 44 0.143775115 ubox
17 46 0.009364739 ubox
17 58 0.010606101 ubox
18 25 0.984072987 ubox
18 34 0.010060087 ubox
18 38 0.017224325 ubox
18 43 0.143878054 ubox
18 45 0.010625303 ubox
18 56 0.035524544 ubox
18 57 0.008146822 ubox
19 24 0.982285993 ubox
19 26 0.008945214 ubox
19 32 0.003401350 ubox
19 41 0.033752785 ubox
19 44 0.023348429 ubox
19 55 0.036146358 ubox
20 24 0.010129082 ubox
20 26 0.003830296 ubox
20 32 0.003928879 ubox
20 39 0.007955162 ubox
20 41 0.053476766 ubox
20 44 0.016413445 ubox
20 54 0.036097143 ubox
24 30 0.005231765 ubox
24 37 0.006473400 ubox
24 38 0.075799628 ubox
24 49 0.005050094 ubox
24 50 0.034686951 ubox
25 29 0.004924576 ubox
25 39 0.065374768 ubox
25 41 0.003873977 ubox
25 44 0.003556150 ubox
26 37 0.236664131 ubox
26 38 0.046520875 ubox
26 43 0.003393672 ubox
26 48 0.036092957 ubox
27 32 0.006771057 ubox
27 36 0.928246126 ubox
27 39 0.030131240 ubox
27 41 0.017367321 ubox
27 47 0.036055096 ubox
27 55 0.026098057 ubox
27 58 0.009409560 ubox
28 35 0.929191168 ubox
28 36 0.003773370 ubox
28 39 0.029791517 ubox
28 44 0.008792972 ubox
28 46 0.036056037 ubox
28 54 0.026113397 ubox
28 58 0.004253133 ubox
29 34 0.928844230 ubox
29 37 0.031776140 ubox
29 38 0.029637871 ubox
29 43 0.008826800 ubox
29 45 0.036054213 ubox
29 56 0.009582412 ubox
29 57 0.004102601 ubox
30 35 0.014568615 ubox
30 36 0.037970800 ubox
30 39 0.028061189 ubox
30 41 0.009190781 ubox
30 44 0.035727344 ubox
30 52 0.023714754 ubox
30 55 0.009704491 ubox
32 37 0.029308698 ubox
32 38 0.019542030 ubox
32 43 0.029450996 ubox
32 50 0.007590326 ubox
33 71 0.004734955 ubox
34 39 0.019650000 ubox
34 41 0.027527154 ubox
34 44 0.028209933 ubox
34 58 0.004594489 ubox
34 61 0.009412915 ubox
34 70 0.005488988 ubox
35 43 0.029053611 ubox
35 49 0.030143486 ubox
35 57 0.004597936 ubox
35 60 0.009592604 ubox
35 69 0.005528640 ubox
36 43 0.028135959 ubox
36 48 0.030504943 ubox
36 56 0.004591049 ubox
36 59 0.009386271 ubox
36 68 0.009855821 ubox
37 41 0.031430331 ubox
37 44 0.147180809 ubox
37 47 0.068072542 ubox
37 55 0.003650304 ubox
37 63 0.008046111 ubox
37 65 0.035245986 ubox
37 95 0.018890879 ubox
37 98 0.018907157 ubox
37 101 0.019277138 ubox
37 104 0.019303680 ubox
37 107 0.007310124 ubox
38 44 0.447104596 ubox
38 46 0.068254960 ubox
38 54 0.003638903 ubox
38 61 0.016088135 ubox
38 63 0.059058671 ubox
38 65 0.336750887 ubox
39 43 0.444753564 ubox
39 45 0.068251259 ubox
39 60 0.016139268 ubox
39 62 0.059070937 ubox
39 64 0.337499657 ubox
41 59 0.009389032 ubox
41 60 0.036926949 ubox
41 62 0.327461639 ubox
41 64 0.005255683 ubox
43 61 0.103139112 ubox
43 63 0.014128964 ubox
44 59 0.800138150 ubox
44 60 0.073080109 ubox
44 62 0.014043342 ubox
45 58 0.996438479 ubox
45 61 0.013522183 ubox
46 57 0.996856846 ubox
46 60 0.013415971 ubox
47 56 0.996882766 ubox
47 59 0.013287306 ubox
48 54 0.003993077 ubox
48 55 0.998639194 ubox
48 58 0.012613598 ubox
49 54 0.997997335 ubox
49 55 0.014237647 ubox
50 54 0.015722617 ubox
50 55 0.005547381 ubox
61 68 0.004907649 ubox
63 68 0.007353523 ubox
63 91 0.010704083 ubox
65 91 0.015616867 ubox
68 86 0.052090035 ubox
68 95 0.023500517 ubox
68 98 0.018470692 ubox
68 101 0.015611610 ubox
68 104 0.013847638 ubox
68 107 0.004341790 ubox
69 86 0.997307102 ubox
70 84 0.016409608 ubox
70 85 0.999778634 ubox
71 84 0.999170883 ubox
72 83 0.999859293 ubox
73 81 0.007146104 ubox
73 82 0.999947189 ubox
74 80 0.010036363 ubox
74 81 0.999910678 ubox
75 80 0.993716916 ubox
75 81 0.003929283 ubox
86 91 0.005613302 ubox
91 95 0.044223590 ubox
91 98 0.105283827 ubox
91 101 0.045598166 ubox
91 104 0.034816844 ubox
91 107 0.010285752 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
