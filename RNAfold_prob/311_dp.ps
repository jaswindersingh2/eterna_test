%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (311)
} def

/sequence { (\
GGAAAGAGGGCACAAAAACGUGCGGCAAUGCCACCUCAGCCACUCUAAUUGAGGCACUUCGGUGCGGCUCCCAAUUUCGAUUGGGAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 32 0.020325916 ubox
1 35 0.013028714 ubox
1 37 0.006054406 ubox
1 40 0.008572206 ubox
1 41 0.187467254 ubox
1 43 0.003654862 ubox
1 65 0.007474396 ubox
1 68 0.007532204 ubox
1 69 0.003342742 ubox
1 71 0.008524939 ubox
1 72 0.010778132 ubox
1 95 0.133981226 ubox
1 98 0.134825182 ubox
1 101 0.137927421 ubox
1 104 0.138580964 ubox
1 107 0.034989097 ubox
2 31 0.020329604 ubox
2 34 0.012996071 ubox
2 36 0.003778013 ubox
2 37 0.009123195 ubox
2 40 0.187292928 ubox
2 41 0.019045068 ubox
2 68 0.006637689 ubox
2 70 0.008898116 ubox
2 71 0.010737350 ubox
2 78 0.004312135 ubox
2 95 0.070675262 ubox
2 98 0.070928508 ubox
2 101 0.072460456 ubox
2 104 0.072188114 ubox
2 107 0.023555842 ubox
3 36 0.007643577 ubox
3 63 0.007069226 ubox
3 69 0.006962209 ubox
3 77 0.004315161 ubox
4 76 0.004270000 ubox
5 29 0.003777603 ubox
5 36 0.005994014 ubox
5 46 0.007026448 ubox
5 75 0.004069641 ubox
6 35 0.006510315 ubox
6 37 0.996658464 ubox
6 45 0.007294301 ubox
6 60 0.008438544 ubox
6 95 0.006930335 ubox
6 98 0.010808117 ubox
6 101 0.010689822 ubox
6 104 0.010581505 ubox
6 107 0.003692758 ubox
7 36 0.998098861 ubox
7 44 0.007290625 ubox
7 59 0.008433161 ubox
8 26 0.004837445 ubox
8 34 0.004611809 ubox
8 35 0.998412959 ubox
8 36 0.003899487 ubox
8 37 0.003309787 ubox
8 43 0.007254629 ubox
8 58 0.008418482 ubox
8 72 0.003351769 ubox
8 95 0.008145386 ubox
8 98 0.008182270 ubox
8 101 0.008165429 ubox
8 104 0.008107699 ubox
9 23 0.003701902 ubox
9 32 0.006217014 ubox
9 34 0.996413625 ubox
9 35 0.005330515 ubox
9 41 0.004988987 ubox
9 57 0.008402659 ubox
9 71 0.003342915 ubox
9 95 0.011401308 ubox
9 98 0.011061800 ubox
9 101 0.010954565 ubox
9 104 0.007924453 ubox
10 21 0.005141611 ubox
10 23 0.999017054 ubox
10 31 0.007190277 ubox
10 40 0.004612233 ubox
11 20 0.005292680 ubox
11 22 0.999910947 ubox
11 30 0.007261093 ubox
11 39 0.004527123 ubox
12 21 0.999647048 ubox
12 29 0.006644109 ubox
13 20 0.998623407 ubox
13 22 0.004218844 ubox
14 21 0.003948061 ubox
19 24 0.003556263 ubox
22 31 0.003583970 ubox
23 30 0.003944293 ubox
24 29 0.004647352 ubox
24 31 0.018772569 ubox
24 32 0.997915838 ubox
24 35 0.006033892 ubox
24 41 0.010984478 ubox
25 31 0.998919559 ubox
25 32 0.007599524 ubox
25 34 0.006046557 ubox
25 40 0.010996982 ubox
25 68 0.003393817 ubox
26 30 0.991663847 ubox
26 39 0.010983510 ubox
26 67 0.003395578 ubox
29 38 0.004458446 ubox
30 35 0.003737573 ubox
30 37 0.004772918 ubox
30 65 0.003424243 ubox
30 68 0.006071695 ubox
31 67 0.006071137 ubox
32 66 0.005944937 ubox
33 63 0.004500576 ubox
34 54 0.009148068 ubox
34 62 0.004586568 ubox
35 53 0.013157141 ubox
35 61 0.004581339 ubox
35 91 0.004197683 ubox
36 52 0.013191438 ubox
36 90 0.003979224 ubox
36 92 0.007392046 ubox
37 51 0.013196391 ubox
37 91 0.008176130 ubox
38 50 0.012897449 ubox
38 58 0.003816266 ubox
38 69 0.613475331 ubox
39 49 0.010447787 ubox
39 55 0.007807788 ubox
39 57 0.003871631 ubox
39 68 0.974174693 ubox
39 95 0.007577578 ubox
39 98 0.007424858 ubox
39 101 0.007527785 ubox
39 104 0.007537407 ubox
40 54 0.007821962 ubox
40 66 0.004027475 ubox
40 67 0.975576040 ubox
40 91 0.005598883 ubox
41 51 0.003247175 ubox
41 53 0.007526637 ubox
41 66 0.974568949 ubox
41 67 0.003734240 ubox
41 91 0.010011264 ubox
42 50 0.003423732 ubox
43 51 0.014111040 ubox
43 53 0.994261789 ubox
43 64 0.017496777 ubox
43 91 0.003494170 ubox
44 52 0.996876577 ubox
44 53 0.003410831 ubox
44 85 0.006173663 ubox
44 90 0.003225886 ubox
44 92 0.015814955 ubox
45 51 0.997016629 ubox
45 53 0.036647234 ubox
45 62 0.009350211 ubox
45 64 0.003444011 ubox
45 84 0.007719677 ubox
45 91 0.016622817 ubox
46 51 0.005686461 ubox
46 52 0.035926063 ubox
46 53 0.003832285 ubox
46 61 0.008546097 ubox
46 83 0.007752687 ubox
46 90 0.016019925 ubox
47 59 0.003272246 ubox
47 82 0.007857328 ubox
48 58 0.003190670 ubox
48 63 0.016894307 ubox
48 81 0.007875838 ubox
49 62 0.017133338 ubox
49 80 0.007880191 ubox
49 97 0.004013537 ubox
49 100 0.004109542 ubox
49 103 0.004182007 ubox
49 106 0.004149930 ubox
50 56 0.003775707 ubox
50 61 0.017555172 ubox
50 79 0.007876328 ubox
50 96 0.004795749 ubox
50 99 0.004910099 ubox
50 102 0.005000714 ubox
50 105 0.004976618 ubox
51 55 0.003782930 ubox
51 60 0.018688930 ubox
51 68 0.028027084 ubox
51 78 0.007859564 ubox
51 95 0.004878058 ubox
51 98 0.004993617 ubox
51 101 0.005087851 ubox
51 104 0.005065316 ubox
52 58 0.003192572 ubox
52 59 0.018321404 ubox
52 77 0.007751824 ubox
53 57 0.003611844 ubox
53 58 0.014782730 ubox
53 65 0.003793495 ubox
53 68 0.003598331 ubox
53 76 0.006863284 ubox
54 63 0.004171414 ubox
54 65 0.998769420 ubox
54 68 0.003667984 ubox
55 62 0.004298587 ubox
55 64 0.999675817 ubox
55 67 0.003600470 ubox
56 63 0.999198682 ubox
57 61 0.011987682 ubox
57 62 0.998284926 ubox
57 64 0.003290921 ubox
58 62 0.004040530 ubox
65 91 0.004241896 ubox
66 72 0.006454032 ubox
66 95 0.007748173 ubox
66 98 0.005360552 ubox
66 101 0.004675038 ubox
66 104 0.004026506 ubox
67 71 0.006356464 ubox
67 95 0.003482052 ubox
68 91 0.018766827 ubox
69 86 0.750732620 ubox
69 87 0.034420784 ubox
69 88 0.007399224 ubox
69 89 0.005380305 ubox
69 90 0.012142227 ubox
69 92 0.003352963 ubox
70 84 0.003651472 ubox
70 85 0.998713023 ubox
71 84 0.999748586 ubox
71 85 0.003652737 ubox
72 83 0.999751149 ubox
72 91 0.005189454 ubox
73 81 0.006458328 ubox
73 82 0.998160249 ubox
74 81 0.968306778 ubox
74 82 0.013247904 ubox
75 79 0.034977368 ubox
75 80 0.884802373 ubox
75 87 0.006443123 ubox
75 88 0.012896356 ubox
75 94 0.005458176 ubox
76 80 0.028998781 ubox
76 86 0.007360552 ubox
76 87 0.014593512 ubox
76 93 0.006552957 ubox
77 85 0.007463514 ubox
77 86 0.014981044 ubox
77 92 0.006789432 ubox
78 84 0.007529493 ubox
78 85 0.015028165 ubox
78 91 0.006816497 ubox
81 88 0.004789098 ubox
82 87 0.004876848 ubox
82 96 0.003194884 ubox
83 95 0.003245421 ubox
91 95 0.046191034 ubox
91 98 0.107910972 ubox
91 101 0.045695335 ubox
91 104 0.033981433 ubox
91 107 0.010022482 ubox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
