%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (425)
} def

/sequence { (\
GGAAAAGAAGUUGCGCACAUCAAAGAUGUGCGAAGCAAAGCUUCGUUGACAAAGUCAACGCAAUUUCAUAAUUAAUUCGUUAAUUAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 67 0.009024556 ubox
1 72 0.009353922 ubox
1 73 0.018552325 ubox
1 78 0.030806180 ubox
1 95 0.064413485 ubox
1 98 0.065296914 ubox
1 101 0.066963425 ubox
1 104 0.067357795 ubox
1 107 0.017060463 ubox
2 66 0.008407649 ubox
2 67 0.014862089 ubox
2 69 0.006853111 ubox
2 72 0.019897099 ubox
2 73 0.034402795 ubox
2 77 0.030435083 ubox
2 78 0.044067346 ubox
2 81 0.003436497 ubox
2 85 0.003906424 ubox
2 95 0.033988861 ubox
2 98 0.034357709 ubox
2 101 0.035178841 ubox
2 104 0.035093762 ubox
2 107 0.011466878 ubox
3 65 0.007642477 ubox
3 66 0.014453711 ubox
3 69 0.023190333 ubox
3 72 0.034529694 ubox
3 73 0.017731459 ubox
3 76 0.028912819 ubox
3 77 0.043961133 ubox
3 80 0.003479885 ubox
3 84 0.003458246 ubox
3 85 0.003180793 ubox
4 64 0.004606886 ubox
4 65 0.012129312 ubox
4 69 0.021891556 ubox
4 72 0.018441468 ubox
4 73 0.015094534 ubox
4 76 0.040758652 ubox
5 64 0.007032139 ubox
5 69 0.095539503 ubox
5 72 0.015285589 ubox
5 73 0.024429901 ubox
5 77 0.003345906 ubox
5 85 0.003260859 ubox
6 69 0.063939046 ubox
6 72 0.025944903 ubox
6 73 0.011463434 ubox
6 76 0.003946650 ubox
7 44 0.005725916 ubox
7 66 0.005840906 ubox
7 67 0.997483724 ubox
7 101 0.006564386 ubox
7 104 0.006606737 ubox
8 43 0.005810423 ubox
8 65 0.005442507 ubox
8 66 0.998370691 ubox
9 42 0.005830392 ubox
9 64 0.004320730 ubox
9 65 0.996969758 ubox
10 36 0.005395608 ubox
10 41 0.005820936 ubox
10 64 0.998285194 ubox
10 98 0.018547610 ubox
10 101 0.018683722 ubox
10 104 0.018157406 ubox
10 107 0.006300337 ubox
11 35 0.005394951 ubox
11 40 0.005396633 ubox
11 63 0.998774045 ubox
11 97 0.018562436 ubox
11 100 0.018697388 ubox
11 103 0.018170304 ubox
11 106 0.006370553 ubox
12 34 0.004034337 ubox
12 37 0.004888610 ubox
12 62 0.998862633 ubox
12 96 0.018549387 ubox
12 99 0.018681123 ubox
12 102 0.018154019 ubox
12 105 0.006393552 ubox
13 36 0.005492451 ubox
13 61 0.999390148 ubox
13 95 0.018470785 ubox
13 98 0.018599369 ubox
13 101 0.018077363 ubox
13 104 0.006371520 ubox
14 32 0.056054411 ubox
14 35 0.005019833 ubox
14 60 0.997081192 ubox
15 31 0.995575415 ubox
15 59 0.080551967 ubox
16 30 0.999842929 ubox
17 29 0.999777322 ubox
18 28 0.999974817 ubox
19 27 0.999469616 ubox
20 25 0.008309657 ubox
20 26 0.998847953 ubox
21 25 0.990559421 ubox
30 46 0.014430984 ubox
31 45 0.080600087 ubox
32 43 0.004268995 ubox
32 44 0.996781594 ubox
33 42 0.003655976 ubox
33 43 0.998870211 ubox
34 42 0.999224392 ubox
35 41 0.999801318 ubox
36 40 0.992534096 ubox
42 63 0.003619264 ubox
43 62 0.005110574 ubox
44 60 0.054001473 ubox
45 59 0.994432628 ubox
46 58 0.997543686 ubox
47 57 0.999129841 ubox
48 56 0.999952583 ubox
49 55 0.998639015 ubox
50 54 0.988750994 ubox
62 73 0.003409210 ubox
62 77 0.003361250 ubox
63 72 0.003843334 ubox
63 76 0.003583034 ubox
64 71 0.003928337 ubox
64 75 0.003632572 ubox
64 89 0.004473706 ubox
64 90 0.004652618 ubox
64 91 0.006785043 ubox
64 92 0.004240821 ubox
64 94 0.017431136 ubox
65 70 0.003800712 ubox
65 74 0.003634787 ubox
65 88 0.005350977 ubox
65 89 0.005496276 ubox
65 90 0.010976952 ubox
65 91 0.004631636 ubox
65 92 0.003619849 ubox
65 93 0.022184619 ubox
66 87 0.005104096 ubox
66 88 0.005454144 ubox
66 89 0.012094171 ubox
66 90 0.004276548 ubox
66 91 0.003549063 ubox
66 92 0.023914922 ubox
67 91 0.024376207 ubox
68 72 0.003609336 ubox
68 73 0.013215028 ubox
68 76 0.012241678 ubox
68 77 0.009464943 ubox
68 80 0.008026203 ubox
68 81 0.003688429 ubox
68 84 0.012212686 ubox
68 85 0.008543493 ubox
69 74 0.006342174 ubox
69 75 0.013268151 ubox
69 79 0.008210341 ubox
69 82 0.081493268 ubox
69 83 0.009956398 ubox
69 86 0.818747089 ubox
69 87 0.038564210 ubox
69 88 0.019791580 ubox
69 89 0.017370267 ubox
69 90 0.028484064 ubox
69 91 0.008045825 ubox
69 92 0.013033214 ubox
69 93 0.005348057 ubox
69 94 0.003582190 ubox
69 96 0.003214561 ubox
69 99 0.005103300 ubox
69 100 0.006849049 ubox
70 76 0.003967108 ubox
70 77 0.009292585 ubox
70 81 0.086792877 ubox
70 84 0.005516275 ubox
70 85 0.869478447 ubox
71 76 0.008477189 ubox
71 77 0.010215510 ubox
71 80 0.087445925 ubox
71 81 0.006271620 ubox
71 84 0.878785596 ubox
71 85 0.009423007 ubox
72 79 0.083911712 ubox
72 82 0.004974323 ubox
72 83 0.880136942 ubox
72 86 0.006698584 ubox
72 87 0.257833711 ubox
72 88 0.017684220 ubox
72 89 0.008876209 ubox
72 90 0.006924270 ubox
72 91 0.003220169 ubox
72 92 0.006181460 ubox
72 93 0.005680002 ubox
72 94 0.007856924 ubox
72 96 0.007122266 ubox
72 97 0.031796142 ubox
72 99 0.003984430 ubox
72 100 0.006408232 ubox
72 102 0.003251214 ubox
72 103 0.005118483 ubox
72 106 0.003779438 ubox
73 79 0.005814114 ubox
73 82 0.880459849 ubox
73 83 0.004551857 ubox
73 86 0.296158881 ubox
73 87 0.014786363 ubox
73 88 0.007038030 ubox
73 89 0.005907575 ubox
73 90 0.003482461 ubox
73 91 0.006098887 ubox
73 92 0.005678277 ubox
73 93 0.007358742 ubox
73 94 0.007811246 ubox
73 96 0.036471125 ubox
73 97 0.006725154 ubox
73 99 0.007114819 ubox
73 100 0.003698732 ubox
73 102 0.005669317 ubox
73 105 0.004179359 ubox
74 80 0.017564472 ubox
74 81 0.867745126 ubox
74 85 0.299683637 ubox
75 80 0.683453398 ubox
75 81 0.036022432 ubox
75 84 0.299792759 ubox
75 85 0.006638242 ubox
76 82 0.012939423 ubox
76 83 0.294313030 ubox
76 86 0.003873435 ubox
76 87 0.008469029 ubox
76 88 0.006398078 ubox
76 89 0.005318326 ubox
76 90 0.006707124 ubox
76 91 0.003631236 ubox
76 92 0.008248946 ubox
76 93 0.163918483 ubox
76 94 0.012979786 ubox
76 96 0.004225836 ubox
76 97 0.018676986 ubox
76 99 0.004102225 ubox
76 100 0.014938647 ubox
76 103 0.009710596 ubox
76 106 0.007951350 ubox
77 82 0.245169676 ubox
77 83 0.007609994 ubox
77 86 0.009393811 ubox
77 87 0.006715326 ubox
77 88 0.005498497 ubox
77 89 0.006946847 ubox
77 90 0.004887247 ubox
77 91 0.007696881 ubox
77 92 0.187743089 ubox
77 93 0.013341899 ubox
77 96 0.021901811 ubox
77 97 0.014263444 ubox
77 99 0.017513379 ubox
77 100 0.010336852 ubox
77 102 0.011358029 ubox
77 103 0.006472050 ubox
77 105 0.009354055 ubox
77 106 0.005656757 ubox
78 91 0.190035887 ubox
79 84 0.004097986 ubox
79 85 0.009158544 ubox
79 95 0.111070699 ubox
79 98 0.080053710 ubox
79 101 0.050124783 ubox
79 104 0.044331504 ubox
79 107 0.014139523 ubox
80 86 0.008740964 ubox
80 87 0.018989477 ubox
80 88 0.038892799 ubox
80 89 0.086007994 ubox
80 90 0.036599666 ubox
80 91 0.009702286 ubox
80 92 0.008496409 ubox
80 93 0.007889428 ubox
80 94 0.110676418 ubox
80 97 0.079699818 ubox
80 100 0.049795872 ubox
80 103 0.044035278 ubox
80 106 0.014150775 ubox
81 86 0.019130630 ubox
81 87 0.040152710 ubox
81 88 0.095171669 ubox
81 89 0.037957232 ubox
81 90 0.013697194 ubox
81 91 0.009172084 ubox
81 92 0.009371152 ubox
81 93 0.105660207 ubox
81 94 0.003663584 ubox
81 96 0.074800567 ubox
81 97 0.003193606 ubox
81 99 0.046162777 ubox
81 102 0.040786080 ubox
81 105 0.013155424 ubox
84 88 0.004961910 ubox
84 89 0.008142976 ubox
84 90 0.069186991 ubox
84 91 0.020447983 ubox
84 92 0.034992857 ubox
84 93 0.050900523 ubox
84 94 0.017603284 ubox
84 96 0.006706504 ubox
84 97 0.010217724 ubox
84 99 0.005043790 ubox
84 100 0.007574350 ubox
84 103 0.003688546 ubox
85 89 0.058043146 ubox
85 90 0.021082545 ubox
85 91 0.036406737 ubox
85 92 0.051207221 ubox
85 93 0.018759558 ubox
85 94 0.013648891 ubox
85 96 0.010566402 ubox
85 97 0.005537680 ubox
85 99 0.007803429 ubox
85 100 0.003753546 ubox
85 102 0.004081338 ubox
91 95 0.041834064 ubox
91 98 0.100622138 ubox
91 101 0.044141273 ubox
91 104 0.034152676 ubox
91 107 0.010103291 ubox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
45 59 0.9500000 lbox
46 58 0.9500000 lbox
47 57 0.9500000 lbox
48 56 0.9500000 lbox
49 55 0.9500000 lbox
50 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
