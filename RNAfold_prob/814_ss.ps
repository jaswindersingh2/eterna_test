%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAAGAAGAUCUACUUUAAUAAAUAUCAUACCGAAAAGAGUAGAUAAUUUAUAAAGAGAAUCUCAUAAAAUUUUCGGAUUUUAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

/coor [
[136.04559326 282.29315186]
[136.85527039 267.31503296]
[140.44337463 252.75050354]
[146.68409729 239.11036682]
[155.35855103 226.87297058]
[166.16253662 216.46748352]
[178.71714783 208.25885010]
[192.58209229 202.53492737]
[207.27111816 199.49645996]
[222.26159668 199.24942017]
[210.22975159 190.29203796]
[198.19790649 181.33465576]
[186.16606140 172.37727356]
[174.00520325 163.59584045]
[161.71792603 154.99218750]
[154.31932068 153.71403503]
[149.20333862 145.95532227]
[137.17149353 136.99794006]
[125.13964844 128.04055786]
[113.10779572 119.08318329]
[101.07595062 110.12580109]
[93.11512756 108.17577362]
[88.82949829 100.72876740]
[77.06326294 91.42523956]
[65.29702759 82.12170410]
[53.53079224 72.81816864]
[41.76455688 63.51464081]
[29.86425781 54.38321686]
[17.83240891 45.42583847]
[5.80056143 36.46846008]
[-3.09948206 33.79262543]
[-6.44589186 27.07142639]
[-18.21212769 17.76789284]
[-29.97836113 8.46436119]
[-41.87866211 -0.66706020]
[-57.89683533 0.22604258]
[-68.47435760 -11.83611679]
[-65.49704742 -27.60048103]
[-51.24885178 -34.97397995]
[-36.65976334 -28.30029678]
[-32.92128372 -12.69890785]
[-25.56298828 -11.20609856]
[-20.67482948 -3.30187368]
[-8.90859509 6.00165844]
[2.85764027 15.30519104]
[14.75794029 24.43661308]
[26.78978920 33.39398956]
[38.82163620 42.35137177]
[46.17993164 43.84418106]
[51.06808853 51.74840546]
[62.83432388 61.05193710]
[74.60056305 70.35546875]
[86.36679840 79.65900421]
[98.13302612 88.96253204]
[110.03333282 98.09395599]
[122.06517792 107.05133057]
[134.09703064 116.00871277]
[146.12887573 124.96609497]
[158.16072083 133.92347717]
[170.32157898 142.70491028]
[182.60885620 151.30856323]
[191.58296204 153.72441101]
[195.12342834 160.34542847]
[207.15528870 169.30281067]
[219.18713379 178.26019287]
[231.21897888 187.21757507]
[234.88439941 187.04312134]
[238.28811646 187.83001709]
[241.19499207 189.42919922]
[255.88510132 186.39593506]
[270.57522583 183.36267090]
[285.26531982 180.32940674]
[299.95544434 177.29614258]
[314.64553833 174.26287842]
[329.33566284 171.22961426]
[341.21984863 159.92926025]
[356.86959839 164.82998657]
[360.18579102 180.89033508]
[347.75701904 191.58880615]
[332.36892700 185.91972351]
[317.67880249 188.95298767]
[302.98870850 191.98625183]
[288.29858398 195.01951599]
[273.60848999 198.05278015]
[258.91836548 201.08604431]
[244.22825623 204.11930847]
[257.71627808 210.68235779]
[269.74411011 219.64512634]
[279.88992310 230.69329834]
[287.79794312 243.43940735]
[293.19082642 257.43643188]
[295.87942505 272.19351196]
[295.76947021 287.19311523]
[292.86477661 301.90917969]
[287.26724243 315.82565308]
[279.17318726 328.45443726]
[268.86645508 339.35266113]
[256.70849609 348.13809204]
[243.12571716 354.50268555]
[228.59445190 358.22317505]
[213.62429810 359.16912842]
[198.74029541 357.30734253]
[184.46440125 352.70309448]
[171.29730225 345.51788330]
[159.70072937 336.00369263]
[150.08142090 324.49420166]
[142.77668762 311.39300537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 66]
[11 65]
[12 64]
[13 63]
[14 61]
[15 60]
[17 59]
[18 58]
[19 57]
[20 56]
[21 55]
[23 54]
[24 53]
[25 52]
[26 51]
[27 50]
[28 48]
[29 47]
[30 46]
[32 45]
[33 44]
[34 43]
[35 41]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
