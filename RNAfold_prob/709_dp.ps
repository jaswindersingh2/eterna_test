%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (709)
} def

/sequence { (\
GGAAAGUGGGAGCAAAGGUCGCACAAGACGCUGGGAAAACGAGGGUCAGUGGCAGGGAAACGUGGCACGUGGUAAUUCGUUACCACAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 20 0.003684942 ubox
1 22 0.003689582 ubox
1 24 0.004406292 ubox
1 68 0.008214160 ubox
1 86 0.015142482 ubox
1 95 0.242527285 ubox
1 98 0.244061595 ubox
1 101 0.249674220 ubox
1 104 0.250807531 ubox
1 107 0.063323228 ubox
2 19 0.003596759 ubox
2 20 0.006874579 ubox
2 24 0.006056773 ubox
2 68 0.005093966 ubox
2 86 0.007919291 ubox
2 95 0.128027733 ubox
2 98 0.128491283 ubox
2 101 0.131251083 ubox
2 104 0.130752506 ubox
2 107 0.042665522 ubox
3 19 0.006842895 ubox
6 13 0.004072364 ubox
6 22 0.020083742 ubox
6 24 0.996452566 ubox
6 86 0.017041078 ubox
6 95 0.020967860 ubox
6 98 0.022415169 ubox
6 101 0.022372687 ubox
6 104 0.022047001 ubox
6 107 0.007792646 ubox
7 12 0.004010516 ubox
7 14 0.008166556 ubox
7 21 0.020076006 ubox
7 23 0.997842338 ubox
7 25 0.007338176 ubox
7 85 0.017054115 ubox
7 94 0.018857761 ubox
7 96 0.007564604 ubox
7 97 0.020003073 ubox
7 99 0.007502666 ubox
7 100 0.019961737 ubox
7 102 0.006540611 ubox
7 103 0.019672098 ubox
7 105 0.005549265 ubox
7 106 0.007033216 ubox
8 13 0.008535484 ubox
8 20 0.019896867 ubox
8 22 0.998965145 ubox
8 24 0.008989267 ubox
8 84 0.017055813 ubox
8 95 0.008690184 ubox
8 98 0.008640752 ubox
8 101 0.007841659 ubox
8 104 0.006178991 ubox
9 19 0.018158586 ubox
9 20 0.021106675 ubox
9 22 0.013421788 ubox
9 24 0.007055252 ubox
9 83 0.017030709 ubox
9 95 0.005903565 ubox
9 98 0.005818592 ubox
9 101 0.005934140 ubox
9 104 0.003162401 ubox
10 19 0.018477048 ubox
10 20 0.998574463 ubox
10 24 0.007014319 ubox
11 19 0.987333846 ubox
11 81 0.009361744 ubox
12 19 0.126063716 ubox
12 20 0.003209312 ubox
12 22 0.019192671 ubox
12 80 0.016790088 ubox
13 17 0.872705756 ubox
13 18 0.238773073 ubox
13 21 0.019219939 ubox
13 79 0.016799119 ubox
14 19 0.003370190 ubox
14 77 0.004118446 ubox
15 76 0.003790014 ubox
15 77 0.012799846 ubox
16 76 0.013050191 ubox
17 24 0.004644187 ubox
18 73 0.004664171 ubox
18 95 0.003789589 ubox
19 72 0.009042261 ubox
19 74 0.004394055 ubox
19 94 0.003734811 ubox
20 71 0.009812596 ubox
20 72 0.008943034 ubox
21 70 0.009825149 ubox
22 69 0.009821936 ubox
22 71 0.013439761 ubox
22 91 0.003575396 ubox
23 70 0.013513383 ubox
24 69 0.013503341 ubox
24 91 0.004552634 ubox
27 47 0.998548855 ubox
27 95 0.003536607 ubox
27 98 0.003538413 ubox
27 101 0.003608579 ubox
27 104 0.003613481 ubox
28 46 0.999683777 ubox
29 44 0.006193726 ubox
29 45 0.999673015 ubox
31 43 0.999549705 ubox
31 44 0.014401947 ubox
32 41 0.057971301 ubox
32 42 0.994878499 ubox
32 43 0.013171967 ubox
33 40 0.117674297 ubox
34 40 0.989442106 ubox
35 40 0.025688056 ubox
38 81 0.003353117 ubox
39 80 0.003698598 ubox
40 79 0.003757563 ubox
41 78 0.003765479 ubox
42 77 0.003754613 ubox
43 76 0.003648872 ubox
46 72 0.003350703 ubox
47 71 0.003658171 ubox
47 91 0.003404570 ubox
48 70 0.004831028 ubox
49 66 0.017808396 ubox
49 68 0.997450619 ubox
49 95 0.005024787 ubox
49 98 0.005045681 ubox
49 101 0.005093593 ubox
49 104 0.005056869 ubox
50 65 0.017788939 ubox
50 67 0.998985163 ubox
50 94 0.004499020 ubox
50 97 0.004500274 ubox
50 100 0.004543160 ubox
50 103 0.004510018 ubox
51 66 0.999585244 ubox
51 68 0.004035033 ubox
52 63 0.017777396 ubox
52 66 0.010740571 ubox
53 62 0.017790174 ubox
53 64 0.999568578 ubox
53 65 0.010118293 ubox
54 63 0.998029108 ubox
55 61 0.077626459 ubox
55 63 0.005679501 ubox
56 61 0.990549553 ubox
57 61 0.011767770 ubox
69 86 0.997728898 ubox
69 95 0.003254874 ubox
70 85 0.999107767 ubox
71 84 0.999823495 ubox
72 83 0.999824658 ubox
73 82 0.999273573 ubox
74 80 0.018969485 ubox
74 81 0.984343089 ubox
75 80 0.775192889 ubox
75 81 0.038734966 ubox
86 91 0.007736903 ubox
91 95 0.054643460 ubox
91 98 0.119656910 ubox
91 101 0.046275857 ubox
91 104 0.029951879 ubox
91 107 0.008718027 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
