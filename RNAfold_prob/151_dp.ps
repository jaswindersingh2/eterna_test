%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (151)
} def

/sequence { (\
GGAAAAAACCGGCGAGCGAGCCGCAAAAGCCCGAGAGGAGCAUGAGGACUGGAGUCGUAAGGAAAAAGGCACGCCUUCGGGCGUGCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.029921344 ubox
1 10 0.357127125 ubox
1 24 0.004916614 ubox
1 31 0.007770846 ubox
1 32 0.010132177 ubox
1 95 0.067151266 ubox
1 98 0.068145116 ubox
1 101 0.070063720 ubox
1 104 0.070487249 ubox
1 107 0.017914813 ubox
2 9 0.356352410 ubox
2 10 0.020144254 ubox
2 24 0.004635056 ubox
2 30 0.008046765 ubox
2 31 0.010107668 ubox
2 56 0.003748149 ubox
2 95 0.035343078 ubox
2 98 0.035774694 ubox
2 101 0.036703270 ubox
2 104 0.036632665 ubox
2 107 0.012031539 ubox
3 55 0.003603543 ubox
6 58 0.003681921 ubox
7 58 0.005166888 ubox
8 58 0.029346611 ubox
9 23 0.007813177 ubox
9 46 0.003437766 ubox
9 47 0.009530475 ubox
9 52 0.007295116 ubox
9 57 0.022887269 ubox
9 61 0.072909116 ubox
9 62 0.887152377 ubox
9 68 0.009341382 ubox
9 91 0.011742315 ubox
10 18 0.004266602 ubox
10 23 0.125680694 ubox
10 46 0.009446382 ubox
10 51 0.007293024 ubox
10 57 0.110088969 ubox
10 61 0.890738263 ubox
10 62 0.035519531 ubox
10 68 0.004249011 ubox
10 91 0.010896054 ubox
11 17 0.004418146 ubox
11 22 0.144782557 ubox
11 31 0.005623621 ubox
11 50 0.005834217 ubox
11 56 0.124063264 ubox
11 58 0.019401493 ubox
11 95 0.022441869 ubox
11 98 0.023352014 ubox
11 101 0.023881174 ubox
11 104 0.023998698 ubox
11 107 0.009096644 ubox
12 21 0.144833654 ubox
12 24 0.011411465 ubox
12 30 0.005822151 ubox
12 49 0.005736991 ubox
12 55 0.124134300 ubox
12 56 0.003467476 ubox
12 58 0.964350061 ubox
13 20 0.144803757 ubox
13 23 0.011448577 ubox
13 29 0.005914789 ubox
13 47 0.003867598 ubox
13 54 0.123971850 ubox
13 57 0.980841668 ubox
13 61 0.008236467 ubox
14 22 0.011390554 ubox
14 55 0.008733430 ubox
14 56 0.980960221 ubox
15 55 0.977332887 ubox
16 21 0.006322868 ubox
16 24 0.011304741 ubox
16 55 0.024883726 ubox
16 58 0.011813556 ubox
17 23 0.011318423 ubox
17 51 0.079207555 ubox
17 52 0.948900020 ubox
17 54 0.045478943 ubox
17 57 0.011993875 ubox
18 22 0.010589133 ubox
18 49 0.005094813 ubox
18 50 0.065292360 ubox
18 56 0.011995945 ubox
19 50 0.981725184 ubox
19 55 0.011474326 ubox
20 49 0.985309158 ubox
20 50 0.007173197 ubox
21 47 0.987896569 ubox
21 52 0.013658270 ubox
22 46 0.985827389 ubox
22 47 0.042230291 ubox
22 51 0.013660655 ubox
23 30 0.017338499 ubox
23 41 0.003879397 ubox
23 49 0.008191394 ubox
23 50 0.010622819 ubox
23 58 0.003796887 ubox
23 86 0.016866809 ubox
23 95 0.003689684 ubox
23 98 0.003828367 ubox
23 101 0.004050369 ubox
23 104 0.004103277 ubox
24 29 0.017461115 ubox
24 40 0.003875527 ubox
24 44 0.951914848 ubox
24 46 0.029629798 ubox
24 47 0.017560080 ubox
24 57 0.004283803 ubox
24 61 0.004302893 ubox
24 62 0.003683030 ubox
24 68 0.004467648 ubox
24 85 0.016940886 ubox
24 91 0.008326146 ubox
25 43 0.940548866 ubox
25 84 0.015882328 ubox
26 43 0.077974425 ubox
27 43 0.156864181 ubox
28 43 0.062813372 ubox
28 50 0.005380217 ubox
29 41 0.995290006 ubox
29 49 0.005867661 ubox
29 82 0.017633178 ubox
30 37 0.003807691 ubox
30 38 0.061781680 ubox
30 40 0.995714362 ubox
30 47 0.006337060 ubox
30 62 0.003812499 ubox
30 81 0.017659815 ubox
31 37 0.061200422 ubox
31 38 0.994175399 ubox
31 40 0.003972572 ubox
31 46 0.006352014 ubox
31 47 0.004892459 ubox
31 61 0.003813537 ubox
31 62 0.004558128 ubox
31 80 0.017659884 ubox
32 37 0.993954264 ubox
32 38 0.080401984 ubox
32 44 0.005649650 ubox
32 46 0.004939348 ubox
32 57 0.006720421 ubox
32 61 0.004589055 ubox
32 79 0.017658878 ubox
33 43 0.005345813 ubox
33 56 0.007066934 ubox
33 78 0.017578031 ubox
34 43 0.003417237 ubox
34 55 0.007032145 ubox
34 77 0.015555453 ubox
35 41 0.005467216 ubox
35 76 0.009492377 ubox
35 77 0.007698202 ubox
36 76 0.013927199 ubox
37 50 0.003675735 ubox
37 75 0.016707551 ubox
37 76 0.003479880 ubox
38 49 0.003760688 ubox
38 74 0.016639044 ubox
38 75 0.003852712 ubox
39 50 0.006698861 ubox
40 49 0.006797628 ubox
40 70 0.014798586 ubox
40 72 0.004567740 ubox
40 74 0.004177815 ubox
41 46 0.004543203 ubox
41 47 0.004408004 ubox
41 61 0.004007089 ubox
41 62 0.010451696 ubox
41 69 0.014815326 ubox
41 73 0.004353332 ubox
42 58 0.019229010 ubox
43 48 0.003220045 ubox
43 57 0.019910209 ubox
43 59 0.013629437 ubox
43 60 0.017923555 ubox
43 61 0.008273862 ubox
43 67 0.003617921 ubox
43 71 0.004437596 ubox
43 96 0.006868448 ubox
43 99 0.007473228 ubox
43 102 0.007849320 ubox
43 105 0.008045386 ubox
44 49 0.005566886 ubox
44 56 0.020532901 ubox
44 58 0.011488424 ubox
44 70 0.004508342 ubox
44 95 0.007624424 ubox
44 98 0.008297945 ubox
44 101 0.008720198 ubox
44 104 0.008938744 ubox
45 55 0.020178569 ubox
45 58 0.091611660 ubox
46 56 0.005736037 ubox
46 58 0.006917295 ubox
46 95 0.003702288 ubox
46 98 0.003783424 ubox
46 101 0.004381608 ubox
46 104 0.005177042 ubox
46 107 0.004511967 ubox
47 55 0.003792090 ubox
47 56 0.119478871 ubox
47 101 0.003317798 ubox
47 107 0.003416671 ubox
48 55 0.119543836 ubox
48 58 0.004974095 ubox
49 54 0.119071686 ubox
49 57 0.005101513 ubox
49 61 0.010863566 ubox
49 62 0.005558543 ubox
49 68 0.032288678 ubox
49 69 0.003940481 ubox
50 60 0.010663926 ubox
50 61 0.005546005 ubox
50 67 0.032153906 ubox
50 68 0.004832195 ubox
50 99 0.004661848 ubox
50 102 0.015913840 ubox
50 105 0.056745133 ubox
51 56 0.004560713 ubox
51 58 0.003334771 ubox
51 95 0.003212240 ubox
51 98 0.004990634 ubox
51 101 0.017202919 ubox
51 104 0.061529050 ubox
53 58 0.005117300 ubox
54 95 0.004269167 ubox
54 98 0.017915764 ubox
54 101 0.064979911 ubox
54 104 0.006414329 ubox
55 62 0.018848994 ubox
55 63 0.029981465 ubox
55 92 0.003842864 ubox
55 94 0.003637627 ubox
55 97 0.017639483 ubox
55 100 0.064220823 ubox
55 103 0.006324010 ubox
56 61 0.020185633 ubox
56 62 0.030660262 ubox
56 68 0.003591139 ubox
56 91 0.004069472 ubox
57 95 0.019781360 ubox
57 98 0.072675804 ubox
57 101 0.012098279 ubox
57 104 0.003687898 ubox
58 63 0.003461589 ubox
58 64 0.003192712 ubox
58 65 0.004091267 ubox
58 67 0.003798354 ubox
58 94 0.019145895 ubox
58 96 0.004067484 ubox
58 97 0.070407776 ubox
58 100 0.011743975 ubox
58 103 0.003576193 ubox
61 95 0.114821430 ubox
61 98 0.022562538 ubox
61 101 0.012079707 ubox
61 104 0.010331165 ubox
61 107 0.003342210 ubox
62 95 0.030554561 ubox
62 98 0.005964586 ubox
62 101 0.005399532 ubox
62 104 0.004962256 ubox
68 86 0.049118068 ubox
68 95 0.023464551 ubox
68 98 0.018482233 ubox
68 101 0.015607594 ubox
68 104 0.013869010 ubox
68 107 0.004349433 ubox
69 86 0.997382673 ubox
70 85 0.999815954 ubox
71 84 0.999634288 ubox
72 83 0.999802391 ubox
73 82 0.999825075 ubox
74 80 0.011649766 ubox
74 81 0.999763401 ubox
75 79 0.016329683 ubox
75 80 0.998938892 ubox
75 81 0.003223386 ubox
76 80 0.004106234 ubox
86 91 0.005391193 ubox
91 95 0.042959635 ubox
91 98 0.103225396 ubox
91 101 0.045131846 ubox
91 104 0.034804957 ubox
91 107 0.010292961 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
