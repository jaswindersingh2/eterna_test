%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (44)
} def

/sequence { (\
GGAAAUCGAGCCGCUAGAUAUCUAGCCGUGCCGCGGUUUGCCGCAUCUGAAUUCAGAGGUCCGGGCUCAACAAGGUUCGCCUUGUUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.016487449 ubox
1 7 0.164188439 ubox
1 12 0.026368524 ubox
1 23 0.005404723 ubox
1 41 0.003862922 ubox
1 42 0.009596394 ubox
1 62 0.009344990 ubox
1 68 0.007507839 ubox
1 78 0.004828040 ubox
1 80 0.006085829 ubox
1 81 0.041931785 ubox
1 86 0.003941611 ubox
1 95 0.077867749 ubox
1 98 0.081441279 ubox
1 101 0.070217900 ubox
1 104 0.070188065 ubox
1 107 0.017715224 ubox
2 6 0.106796913 ubox
2 7 0.130263116 ubox
2 11 0.026380349 ubox
2 22 0.005753773 ubox
2 41 0.009598916 ubox
2 61 0.009349256 ubox
2 67 0.006223527 ubox
2 68 0.018110824 ubox
2 77 0.004728287 ubox
2 78 0.007615600 ubox
2 80 0.041977464 ubox
2 86 0.006227192 ubox
2 95 0.040765691 ubox
2 98 0.036161402 ubox
2 101 0.035415572 ubox
2 104 0.035268239 ubox
2 107 0.011508089 ubox
3 21 0.005689338 ubox
3 39 0.023035696 ubox
3 60 0.008589752 ubox
3 67 0.017628896 ubox
3 76 0.004597977 ubox
3 77 0.006733358 ubox
3 83 0.005778609 ubox
3 85 0.004187171 ubox
3 86 0.005499202 ubox
4 38 0.024027702 ubox
4 76 0.005568284 ubox
4 77 0.011696860 ubox
4 82 0.006446454 ubox
4 86 0.005117588 ubox
5 19 0.005657510 ubox
5 37 0.024292510 ubox
5 76 0.012876489 ubox
5 86 0.003694801 ubox
6 18 0.005834387 ubox
6 36 0.024324634 ubox
6 57 0.003766685 ubox
6 59 0.003284558 ubox
6 64 0.019064915 ubox
6 69 0.039142064 ubox
6 70 0.017059006 ubox
6 75 0.013673798 ubox
6 87 0.005778818 ubox
6 88 0.006889734 ubox
6 89 0.007176277 ubox
6 90 0.011839148 ubox
6 91 0.005838449 ubox
6 92 0.138958970 ubox
6 93 0.010651792 ubox
6 94 0.007030731 ubox
6 96 0.007563738 ubox
6 97 0.006973426 ubox
6 99 0.007674878 ubox
6 100 0.006987906 ubox
6 102 0.006634623 ubox
6 103 0.006084259 ubox
6 105 0.006421239 ubox
6 106 0.005918608 ubox
7 17 0.005823865 ubox
7 33 0.004147354 ubox
7 35 0.024276664 ubox
7 56 0.003634872 ubox
7 58 0.003586658 ubox
7 63 0.020219643 ubox
7 74 0.013737488 ubox
7 79 0.051386137 ubox
7 91 0.147219296 ubox
8 32 0.007875056 ubox
8 34 0.024064415 ubox
8 62 0.020196175 ubox
8 68 0.995896653 ubox
8 78 0.052512605 ubox
9 15 0.003381370 ubox
9 67 0.996998425 ubox
9 77 0.052488201 ubox
10 14 0.003569082 ubox
10 29 0.020401098 ubox
10 31 0.024726578 ubox
10 32 0.007871132 ubox
10 60 0.019518204 ubox
10 61 0.003322283 ubox
10 66 0.997316127 ubox
10 76 0.052493346 ubox
11 28 0.021540399 ubox
11 30 0.025777826 ubox
11 59 0.020098344 ubox
11 64 0.010579288 ubox
11 65 0.997250741 ubox
11 75 0.052517638 ubox
12 28 0.023728011 ubox
12 58 0.020071299 ubox
12 63 0.014690715 ubox
12 64 0.995678595 ubox
12 65 0.004099978 ubox
12 74 0.052447619 ubox
13 26 0.996973166 ubox
13 27 0.023060298 ubox
13 62 0.003887898 ubox
14 25 0.999901677 ubox
15 24 0.999648241 ubox
16 23 0.999315087 ubox
17 21 0.003225724 ubox
17 22 0.995117008 ubox
24 38 0.003249774 ubox
24 67 0.005374873 ubox
25 37 0.005002850 ubox
25 66 0.005961136 ubox
26 36 0.008422010 ubox
26 63 0.003740886 ubox
26 64 0.036075372 ubox
26 65 0.005345627 ubox
27 33 0.011057172 ubox
27 35 0.013454084 ubox
27 43 0.003967046 ubox
27 49 0.003181750 ubox
27 58 0.004599389 ubox
27 63 0.967340675 ubox
27 64 0.005639167 ubox
28 32 0.016371515 ubox
28 34 0.013818160 ubox
28 42 0.004555847 ubox
28 44 0.006477739 ubox
28 46 0.045961565 ubox
28 61 0.045129653 ubox
28 62 0.975622075 ubox
28 67 0.003473694 ubox
28 68 0.046556361 ubox
28 71 0.011237959 ubox
29 33 0.012941166 ubox
29 43 0.006468675 ubox
29 45 0.061514888 ubox
29 63 0.009083543 ubox
29 70 0.011088902 ubox
30 37 0.004073675 ubox
30 41 0.005376612 ubox
30 42 0.006187482 ubox
30 44 0.065862473 ubox
30 60 0.959086861 ubox
30 61 0.161512171 ubox
30 62 0.008138604 ubox
30 66 0.062911186 ubox
31 36 0.004185146 ubox
31 40 0.005516078 ubox
31 43 0.065750931 ubox
31 58 0.005149500 ubox
31 59 0.984255314 ubox
31 65 0.062994561 ubox
32 58 0.983059201 ubox
32 59 0.013242837 ubox
32 63 0.004820894 ubox
32 64 0.062946653 ubox
33 41 0.067043553 ubox
33 42 0.003954552 ubox
33 44 0.993685725 ubox
34 40 0.067096548 ubox
34 43 0.994735450 ubox
34 63 0.069740171 ubox
35 39 0.041398911 ubox
35 41 0.007793016 ubox
35 42 0.994655453 ubox
35 62 0.070165218 ubox
36 41 0.988510889 ubox
36 61 0.070123425 ubox
40 60 0.068515184 ubox
40 62 0.003300484 ubox
40 66 0.020444763 ubox
41 59 0.069098112 ubox
41 64 0.011431529 ubox
41 65 0.019856210 ubox
42 58 0.069015370 ubox
42 63 0.014913787 ubox
42 64 0.019187912 ubox
43 60 0.023517082 ubox
43 61 0.004909235 ubox
43 62 0.015417704 ubox
44 56 0.003766379 ubox
44 58 0.007202927 ubox
44 59 0.025037354 ubox
45 52 0.003528605 ubox
45 60 0.035536305 ubox
46 51 0.003484041 ubox
46 57 0.933167779 ubox
46 59 0.036829903 ubox
47 56 0.998190106 ubox
47 58 0.039164786 ubox
47 63 0.003216950 ubox
48 55 0.998099727 ubox
48 57 0.039420627 ubox
48 63 0.003535401 ubox
49 53 0.004474490 ubox
49 54 0.995158965 ubox
49 61 0.004023258 ubox
49 62 0.004135930 ubox
50 60 0.003689143 ubox
51 60 0.004220258 ubox
52 59 0.004415296 ubox
53 58 0.003499787 ubox
54 63 0.003188197 ubox
57 82 0.003516009 ubox
58 62 0.012145698 ubox
58 81 0.004752886 ubox
59 80 0.004744523 ubox
62 79 0.004887854 ubox
63 78 0.005862130 ubox
64 71 0.004448382 ubox
64 77 0.005875760 ubox
64 95 0.006497075 ubox
65 76 0.005896388 ubox
66 75 0.005897460 ubox
66 91 0.009066863 ubox
67 74 0.005432048 ubox
67 87 0.005604201 ubox
67 88 0.009947776 ubox
67 90 0.009177275 ubox
67 92 0.012365869 ubox
68 91 0.013537767 ubox
69 85 0.016954911 ubox
69 86 0.901467364 ubox
70 85 0.986906369 ubox
70 86 0.023512489 ubox
71 84 0.997840517 ubox
72 83 0.997477629 ubox
73 82 0.997608932 ubox
74 80 0.007310910 ubox
74 81 0.998142305 ubox
74 82 0.003335228 ubox
75 80 0.991966824 ubox
75 81 0.004312168 ubox
75 95 0.003616234 ubox
75 101 0.007103169 ubox
75 104 0.016133783 ubox
76 94 0.003502500 ubox
76 100 0.007099782 ubox
76 103 0.016105538 ubox
77 93 0.003299422 ubox
77 99 0.006802521 ubox
77 102 0.015042425 ubox
79 98 0.006396643 ubox
79 101 0.006145024 ubox
81 91 0.010650027 ubox
82 90 0.010712732 ubox
82 97 0.042590586 ubox
82 100 0.015437616 ubox
82 103 0.012137616 ubox
82 106 0.010863053 ubox
83 89 0.010637118 ubox
83 96 0.051123090 ubox
83 99 0.018707517 ubox
83 102 0.014751467 ubox
83 105 0.013192148 ubox
84 95 0.053729826 ubox
84 98 0.019723593 ubox
84 101 0.015569986 ubox
84 104 0.013919451 ubox
85 91 0.003314382 ubox
85 92 0.008960050 ubox
85 93 0.006219812 ubox
85 94 0.053989686 ubox
85 97 0.019746815 ubox
85 100 0.015581895 ubox
85 103 0.013931119 ubox
86 90 0.006281767 ubox
86 91 0.013524235 ubox
86 92 0.011470384 ubox
86 93 0.052432374 ubox
86 94 0.005999460 ubox
86 96 0.019015685 ubox
86 97 0.003950678 ubox
86 99 0.015041693 ubox
86 102 0.013427508 ubox
91 95 0.042586974 ubox
91 98 0.102627702 ubox
91 101 0.044953693 ubox
91 104 0.034762477 ubox
91 107 0.010282930 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
30 60 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
