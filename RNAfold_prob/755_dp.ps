%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (755)
} def

/sequence { (\
GGAAAGUCAGCGCAAAGGGCAGACAACCUAGCACAAAAAGAGCAAGGAGAGAGCACGAAAGAGCACUCGGAGCACUUCGGUGCUCCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.012244814 ubox
1 24 0.006158135 ubox
1 27 0.009645073 ubox
1 28 0.071711244 ubox
1 29 0.019279566 ubox
1 43 0.004294787 ubox
1 66 0.004848997 ubox
1 67 0.004686037 ubox
1 68 0.014078723 ubox
1 86 0.022537871 ubox
1 95 0.241128359 ubox
1 98 0.244033027 ubox
1 101 0.248149310 ubox
1 104 0.249210684 ubox
1 107 0.062919087 ubox
2 7 0.009086883 ubox
2 8 0.015533928 ubox
2 11 0.003571265 ubox
2 24 0.006113622 ubox
2 27 0.072192677 ubox
2 28 0.020673010 ubox
2 66 0.006233028 ubox
2 67 0.010210933 ubox
2 68 0.021465996 ubox
2 85 0.019300599 ubox
2 86 0.009148247 ubox
2 95 0.127275461 ubox
2 98 0.127794478 ubox
2 101 0.130362443 ubox
2 104 0.129860769 ubox
2 107 0.042374006 ubox
3 7 0.013552111 ubox
3 67 0.019711141 ubox
3 84 0.013823111 ubox
5 67 0.003234935 ubox
6 13 0.004624658 ubox
6 20 0.016713916 ubox
6 24 0.993720995 ubox
6 66 0.003408481 ubox
6 95 0.027914135 ubox
6 98 0.027277981 ubox
6 101 0.027075686 ubox
6 104 0.026513099 ubox
6 107 0.009242062 ubox
7 12 0.004351341 ubox
7 19 0.016621940 ubox
7 23 0.995156090 ubox
7 65 0.003165388 ubox
7 92 0.040763039 ubox
7 94 0.024837822 ubox
7 97 0.024655421 ubox
7 100 0.024500725 ubox
7 103 0.023996116 ubox
7 106 0.008453553 ubox
8 17 0.003819597 ubox
8 18 0.016404036 ubox
8 22 0.992029433 ubox
8 91 0.042443328 ubox
10 20 0.991538489 ubox
10 24 0.007184775 ubox
10 32 0.005130778 ubox
10 34 0.019603239 ubox
10 43 0.007205128 ubox
10 64 0.004852602 ubox
10 95 0.003442991 ubox
10 98 0.003362519 ubox
10 101 0.003345671 ubox
11 17 0.016749273 ubox
11 18 0.049794091 ubox
11 19 0.991904121 ubox
11 22 0.009531648 ubox
11 31 0.005130529 ubox
11 42 0.007207769 ubox
11 63 0.004857383 ubox
11 91 0.003979502 ubox
12 20 0.106078417 ubox
12 32 0.024989658 ubox
13 17 0.781787840 ubox
13 18 0.232011802 ubox
13 19 0.105943670 ubox
13 31 0.024973215 ubox
15 29 0.004680549 ubox
16 29 0.025770087 ubox
17 24 0.005535265 ubox
17 28 0.027142124 ubox
17 29 0.005478855 ubox
18 24 0.004492887 ubox
18 27 0.027145349 ubox
18 28 0.005595350 ubox
18 34 0.003969827 ubox
18 56 0.003708802 ubox
19 27 0.005589601 ubox
19 32 0.005358947 ubox
19 54 0.005013415 ubox
20 31 0.005369889 ubox
20 53 0.005031468 ubox
21 29 0.005342760 ubox
22 28 0.005394153 ubox
22 95 0.004023010 ubox
22 98 0.003913888 ubox
22 101 0.003960568 ubox
22 104 0.003924792 ubox
24 91 0.005659342 ubox
27 46 0.009556714 ubox
27 47 0.989244436 ubox
27 91 0.005264902 ubox
28 40 0.006611752 ubox
28 46 0.994535237 ubox
28 47 0.023020069 ubox
28 91 0.012196970 ubox
29 39 0.006456326 ubox
29 44 0.031350934 ubox
29 45 0.975368441 ubox
29 46 0.022126749 ubox
29 90 0.011855454 ubox
31 43 0.996310431 ubox
32 40 0.016588547 ubox
32 42 0.995947464 ubox
34 40 0.646250172 ubox
34 42 0.011036107 ubox
34 46 0.004125852 ubox
40 85 0.003348625 ubox
41 84 0.003368531 ubox
42 83 0.003374523 ubox
43 82 0.003374277 ubox
44 81 0.003279552 ubox
46 95 0.005424914 ubox
46 98 0.005467539 ubox
46 101 0.005552407 ubox
46 104 0.005535469 ubox
47 68 0.055139517 ubox
47 95 0.004272717 ubox
47 98 0.004255155 ubox
47 101 0.004292451 ubox
47 104 0.004250872 ubox
48 67 0.058365941 ubox
49 54 0.003976314 ubox
49 56 0.003488751 ubox
49 66 0.058694171 ubox
49 68 0.986755641 ubox
49 86 0.041008902 ubox
49 95 0.004567021 ubox
49 98 0.004571761 ubox
49 101 0.004506997 ubox
49 104 0.004429021 ubox
50 67 0.988027789 ubox
51 64 0.027312635 ubox
51 66 0.984611392 ubox
51 68 0.101491922 ubox
51 85 0.058639203 ubox
52 67 0.101294830 ubox
52 84 0.059050968 ubox
53 64 0.990416651 ubox
53 66 0.097903430 ubox
53 83 0.059413949 ubox
54 61 0.032644577 ubox
54 63 0.991022793 ubox
54 82 0.059416882 ubox
55 81 0.059330450 ubox
56 61 0.643442610 ubox
56 63 0.093079229 ubox
56 69 0.004911731 ubox
56 79 0.011346499 ubox
56 80 0.058324711 ubox
56 91 0.003168183 ubox
57 64 0.014677394 ubox
57 68 0.010411116 ubox
57 78 0.015746709 ubox
58 67 0.010273272 ubox
58 77 0.013252099 ubox
59 76 0.009844794 ubox
59 77 0.057401082 ubox
60 67 0.003893280 ubox
60 76 0.058396801 ubox
61 66 0.004276275 ubox
61 68 0.008204275 ubox
61 75 0.058854977 ubox
61 85 0.015270689 ubox
62 67 0.007687567 ubox
62 84 0.015497039 ubox
63 73 0.059200383 ubox
63 83 0.015698378 ubox
64 72 0.059231219 ubox
64 82 0.015699560 ubox
64 91 0.003187666 ubox
65 81 0.015695156 ubox
66 70 0.013421407 ubox
66 80 0.015584738 ubox
66 91 0.021662998 ubox
67 87 0.007314670 ubox
67 88 0.011122035 ubox
67 90 0.021499555 ubox
67 92 0.010847957 ubox
68 79 0.015395569 ubox
68 91 0.011796312 ubox
69 78 0.015601255 ubox
69 86 0.996769844 ubox
70 77 0.015175058 ubox
70 85 0.997932204 ubox
71 76 0.014052457 ubox
71 84 0.997865216 ubox
72 83 0.998088231 ubox
73 82 0.998088410 ubox
74 81 0.997601195 ubox
75 79 0.011921283 ubox
75 80 0.996687858 ubox
76 80 0.004030372 ubox
86 91 0.009950711 ubox
91 95 0.054490253 ubox
91 98 0.119387543 ubox
91 101 0.046212993 ubox
91 104 0.029959594 ubox
91 107 0.008721215 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
