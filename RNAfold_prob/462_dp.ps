%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (462)
} def

/sequence { (\
GGAAAAGUACACGACAGUGGAAACACGAGGAAACUCGUCAAAACAUGUGGAAACACAUGGUGUACAAAGGUUGGAUUCGUCCAACCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 65 0.004738940 ubox
1 86 0.004191984 ubox
1 95 0.067590600 ubox
1 98 0.068153965 ubox
1 101 0.069852876 ubox
1 104 0.070227297 ubox
1 107 0.017735350 ubox
2 65 0.004322394 ubox
2 95 0.035680110 ubox
2 98 0.035882007 ubox
2 101 0.036672683 ubox
2 104 0.036540424 ubox
2 107 0.011924091 ubox
7 24 0.013307395 ubox
7 65 0.997266550 ubox
7 95 0.013008020 ubox
7 98 0.015575569 ubox
7 101 0.015398905 ubox
7 104 0.015305885 ubox
7 107 0.005352736 ubox
8 21 0.003829580 ubox
8 23 0.012605861 ubox
8 64 0.998494087 ubox
8 94 0.012360512 ubox
8 97 0.014871910 ubox
8 100 0.014706428 ubox
8 103 0.014617081 ubox
8 106 0.005165389 ubox
9 18 0.003279568 ubox
9 63 0.998751934 ubox
10 17 0.003337865 ubox
10 19 0.043749878 ubox
10 62 0.998954793 ubox
11 18 0.045925064 ubox
11 61 0.998202556 ubox
12 17 0.046823896 ubox
12 19 0.009896211 ubox
12 20 0.006474683 ubox
12 59 0.003444647 ubox
12 60 0.997069834 ubox
13 18 0.016931025 ubox
13 24 0.035042003 ubox
13 26 0.007711259 ubox
13 36 0.003623493 ubox
13 39 0.482965418 ubox
14 18 0.013426438 ubox
14 35 0.003490645 ubox
14 38 0.482940364 ubox
14 58 0.027357110 ubox
14 61 0.006840344 ubox
15 19 0.035543617 ubox
15 20 0.063165733 ubox
15 27 0.009901774 ubox
15 29 0.013384833 ubox
15 37 0.481937613 ubox
15 59 0.009489101 ubox
15 60 0.009305253 ubox
16 35 0.040741411 ubox
16 58 0.007050499 ubox
17 24 0.559315515 ubox
17 26 0.682007349 ubox
17 34 0.040841274 ubox
17 36 0.005643668 ubox
17 39 0.017562835 ubox
17 44 0.017546735 ubox
17 46 0.016866830 ubox
17 56 0.011230475 ubox
18 22 0.010077279 ubox
18 23 0.554490551 ubox
18 25 0.695273580 ubox
18 27 0.003926302 ubox
18 33 0.040320610 ubox
18 40 0.066979521 ubox
18 41 0.011314177 ubox
18 42 0.011197307 ubox
18 43 0.021656959 ubox
18 45 0.020544089 ubox
18 55 0.011252992 ubox
19 24 0.725861201 ubox
19 26 0.027450567 ubox
19 34 0.005500862 ubox
19 39 0.074129861 ubox
19 44 0.024561707 ubox
19 54 0.011237284 ubox
20 24 0.030755512 ubox
20 26 0.007426336 ubox
20 38 0.036376675 ubox
20 39 0.056865466 ubox
20 44 0.003755118 ubox
21 38 0.043482359 ubox
22 38 0.004525347 ubox
23 38 0.007863738 ubox
23 48 0.006904596 ubox
23 61 0.003524781 ubox
23 63 0.008593201 ubox
24 29 0.017963965 ubox
24 30 0.005018836 ubox
24 37 0.006717029 ubox
24 47 0.006947812 ubox
24 49 0.008187286 ubox
24 60 0.003680458 ubox
24 62 0.008937991 ubox
25 38 0.665036867 ubox
25 46 0.004697255 ubox
25 48 0.007460849 ubox
25 61 0.008392197 ubox
26 37 0.724652723 ubox
26 47 0.006800435 ubox
26 60 0.008176828 ubox
27 34 0.005939924 ubox
27 36 0.975383871 ubox
27 38 0.003899405 ubox
27 39 0.209682102 ubox
27 46 0.003891947 ubox
28 35 0.975734329 ubox
28 38 0.209392070 ubox
29 34 0.975063608 ubox
29 35 0.007060458 ubox
29 36 0.022633351 ubox
29 39 0.005719417 ubox
29 44 0.003715292 ubox
30 34 0.010394939 ubox
30 35 0.017820872 ubox
30 36 0.209231845 ubox
30 38 0.004882182 ubox
30 39 0.017659611 ubox
31 35 0.182106968 ubox
31 38 0.016708574 ubox
37 44 0.018455782 ubox
37 65 0.003769158 ubox
38 42 0.011602700 ubox
38 43 0.022583496 ubox
38 64 0.003775020 ubox
39 59 0.006679968 ubox
39 62 0.008609872 ubox
40 58 0.005558470 ubox
40 61 0.008198261 ubox
40 63 0.005526349 ubox
41 61 0.004563322 ubox
42 61 0.007904342 ubox
43 61 0.008312814 ubox
44 59 0.996685376 ubox
44 60 0.006471932 ubox
45 58 0.998651967 ubox
46 55 0.003241357 ubox
46 57 0.999198145 ubox
47 54 0.004024163 ubox
47 56 0.999877773 ubox
47 58 0.004895513 ubox
48 53 0.004104582 ubox
48 55 0.999636405 ubox
48 57 0.005266514 ubox
49 54 0.999175089 ubox
49 56 0.005533120 ubox
50 54 0.007365110 ubox
60 65 0.004476670 ubox
60 95 0.019710817 ubox
60 98 0.008652330 ubox
61 94 0.019558984 ubox
61 96 0.010881040 ubox
61 97 0.006605804 ubox
62 95 0.013117673 ubox
63 92 0.005451839 ubox
63 94 0.012645442 ubox
65 91 0.008283102 ubox
69 86 0.998886561 ubox
70 85 0.999950765 ubox
70 98 0.004830644 ubox
71 84 0.999500508 ubox
71 97 0.004841780 ubox
72 83 0.999422592 ubox
72 96 0.004839510 ubox
73 82 0.999968260 ubox
73 95 0.004825736 ubox
74 81 0.999543533 ubox
75 80 0.885887361 ubox
76 93 0.004789653 ubox
77 92 0.005160858 ubox
78 91 0.005194338 ubox
86 91 0.005807309 ubox
91 95 0.043062866 ubox
91 98 0.103789435 ubox
91 101 0.045519474 ubox
91 104 0.035217287 ubox
91 107 0.010419184 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
