%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (255)
} def

/sequence { (\
GGAAAAAACAUCAACUACAAAAGUAGAGUCAAGACAAAGAGACAAAAGACUCAGUCAAGACAAGAUGAGGACUAGUUCGCUAGUCCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.071807501 ubox
1 12 0.039139813 ubox
1 15 0.003891703 ubox
1 18 0.003599706 ubox
1 86 0.006036754 ubox
1 95 0.076637073 ubox
1 98 0.077339235 ubox
1 101 0.080370503 ubox
1 104 0.079596663 ubox
1 107 0.019995584 ubox
2 9 0.033537850 ubox
2 11 0.034606898 ubox
2 12 0.067835871 ubox
2 85 0.005066190 ubox
2 95 0.039227593 ubox
2 98 0.039563460 ubox
2 101 0.041318738 ubox
2 104 0.040080071 ubox
2 107 0.013066130 ubox
3 11 0.065449747 ubox
3 84 0.003461848 ubox
4 11 0.007837584 ubox
5 11 0.004851150 ubox
6 11 0.005202248 ubox
7 11 0.003171525 ubox
7 66 0.003988735 ubox
8 24 0.004195994 ubox
8 29 0.005908301 ubox
8 66 0.003731245 ubox
9 23 0.004349692 ubox
9 28 0.006460200 ubox
9 64 0.011093543 ubox
9 67 0.939393928 ubox
9 91 0.023226054 ubox
10 66 0.943470287 ubox
11 27 0.059073241 ubox
11 65 0.944008961 ubox
11 68 0.087726344 ubox
11 87 0.003720379 ubox
11 88 0.004142208 ubox
11 89 0.004911091 ubox
11 90 0.004882356 ubox
11 92 0.081299226 ubox
11 93 0.005486356 ubox
11 94 0.003670060 ubox
11 96 0.003712530 ubox
11 97 0.003413730 ubox
11 99 0.003734780 ubox
11 100 0.003448660 ubox
11 102 0.003744676 ubox
11 103 0.003458508 ubox
11 105 0.003753634 ubox
11 106 0.003461702 ubox
12 26 0.062646255 ubox
12 64 0.943184720 ubox
12 67 0.093759333 ubox
12 91 0.086675724 ubox
13 24 0.004146935 ubox
13 66 0.084588897 ubox
14 24 0.108078752 ubox
14 29 0.006167275 ubox
14 66 0.004017279 ubox
15 23 0.111415895 ubox
15 26 0.985714833 ubox
15 28 0.006267180 ubox
15 64 0.012523767 ubox
15 91 0.004446142 ubox
16 21 0.006184083 ubox
16 22 0.108853493 ubox
16 25 0.991798535 ubox
16 26 0.004296133 ubox
16 27 0.006162291 ubox
16 63 0.010442385 ubox
16 90 0.003972335 ubox
17 24 0.992153197 ubox
18 23 0.990478185 ubox
18 26 0.008558268 ubox
22 55 0.004174066 ubox
23 66 0.006774907 ubox
23 95 0.005146813 ubox
23 98 0.006004659 ubox
23 101 0.006069659 ubox
23 104 0.006123648 ubox
24 53 0.005846184 ubox
24 65 0.007254017 ubox
24 94 0.004964917 ubox
24 97 0.005825218 ubox
24 100 0.005886529 ubox
24 103 0.005939477 ubox
25 66 0.003263530 ubox
26 52 0.026819276 ubox
26 95 0.003683172 ubox
26 98 0.003635755 ubox
26 101 0.003708896 ubox
27 51 0.028027912 ubox
27 66 0.005687301 ubox
28 35 0.007490056 ubox
28 43 0.021464792 ubox
28 50 0.028258116 ubox
28 61 0.995400311 ubox
29 34 0.006936714 ubox
29 40 0.005162943 ubox
29 42 0.021484206 ubox
29 49 0.028252431 ubox
29 60 0.996681100 ubox
30 39 0.005539211 ubox
30 41 0.021468662 ubox
30 48 0.028223769 ubox
30 59 0.996209740 ubox
30 91 0.003318878 ubox
33 43 0.004377028 ubox
33 56 0.998152905 ubox
34 55 0.998873135 ubox
35 41 0.005587104 ubox
35 54 0.998003158 ubox
36 55 0.005611151 ubox
38 51 0.109686166 ubox
39 50 0.110015264 ubox
39 51 0.003842606 ubox
39 52 0.990871428 ubox
40 51 0.991399948 ubox
41 50 0.990041199 ubox
41 52 0.013691072 ubox
41 56 0.008194011 ubox
42 51 0.013499559 ubox
42 55 0.008205882 ubox
43 48 0.552305938 ubox
43 54 0.008202930 ubox
48 56 0.020167400 ubox
49 55 0.020166134 ubox
50 54 0.019969972 ubox
51 60 0.004314008 ubox
51 68 0.004757050 ubox
52 59 0.005014027 ubox
52 67 0.005096618 ubox
53 66 0.004341128 ubox
54 61 0.013871899 ubox
54 66 0.006807240 ubox
55 60 0.012846887 ubox
55 65 0.008095471 ubox
55 68 0.008057925 ubox
56 64 0.008229435 ubox
56 67 0.008648521 ubox
57 66 0.008461069 ubox
61 67 0.005358110 ubox
62 66 0.006048922 ubox
64 95 0.006805677 ubox
64 98 0.007992531 ubox
64 101 0.006449975 ubox
64 104 0.005966491 ubox
66 87 0.009380900 ubox
66 88 0.024968174 ubox
66 89 0.056170796 ubox
66 90 0.019613751 ubox
66 91 0.007428478 ubox
66 92 0.006129041 ubox
66 93 0.004373843 ubox
66 96 0.010581936 ubox
66 99 0.008309998 ubox
66 102 0.007738393 ubox
66 105 0.005220583 ubox
67 86 0.005420628 ubox
67 95 0.011249895 ubox
67 98 0.008829192 ubox
67 101 0.008226724 ubox
67 104 0.005772232 ubox
69 86 0.998873971 ubox
70 85 0.999963581 ubox
71 84 0.999862334 ubox
72 83 0.999975532 ubox
73 82 0.999687355 ubox
74 81 0.999055058 ubox
75 80 0.990812626 ubox
86 91 0.005848245 ubox
91 95 0.043244441 ubox
91 98 0.103856282 ubox
91 101 0.045375470 ubox
91 104 0.034972402 ubox
91 107 0.010343575 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
