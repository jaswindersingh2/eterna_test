%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAUCGAACUGACCUGCGCCGCCCUGCGAGCGCCUAAGACGCGUCAAUGACCGUCGGGUCCGUUCAUGAUGUUUCGACAUCAUAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

/coor [
[123.38149261 264.75643921]
[126.24279022 250.03186035]
[131.85093689 236.11967468]
[140.00140381 223.52722168]
[150.39697266 212.71371460]
[162.65855408 204.07347107]
[176.33900452 197.92160034]
[190.93940735 194.48243713]
[205.93147278 193.88162231]
[194.16523743 184.57807922]
[182.39900208 175.27455139]
[170.63276672 165.97102356]
[155.85034180 164.14637756]
[149.82421875 149.51776123]
[138.05798340 140.21423340]
[126.29174805 130.91069031]
[114.52551270 121.60716248]
[102.75927734 112.30362701]
[88.66389465 107.17332458]
[73.67023468 106.73705292]
[58.67658234 106.30078888]
[43.68292999 105.86451721]
[28.68451500 105.64635468]
[13.68451595 105.64635468]
[-1.31548452 105.64635468]
[-17.15461731 111.69269562]
[-27.34937096 98.14635468]
[-17.15461731 84.60001373]
[-1.31548452 90.64635468]
[13.68451595 90.64635468]
[28.68451500 90.64635468]
[35.47821808 87.44970703]
[44.11920166 90.87085724]
[59.11285400 91.30712891]
[74.10650635 91.74340057]
[89.10016632 92.17967224]
[93.75193024 86.29655457]
[81.98583984 76.99284363]
[91.28973389 65.22689056]
[103.05545807 74.53031921]
[107.70722961 68.64720154]
[103.82494354 54.15831375]
[99.94265747 39.66942978]
[96.06037140 25.18054008]
[90.73868561 17.56145096]
[92.28243256 10.21367455]
[88.82319641 -4.38199854]
[85.36396027 -18.97767067]
[75.82784271 -32.99547577]
[86.65796661 -46.03943253]
[102.19023895 -39.24347687]
[99.95963287 -22.43690872]
[103.41886902 -7.84123659]
[106.87810516 6.75443649]
[110.54925537 21.29825592]
[114.43154144 35.78714371]
[118.31382751 50.27603149]
[122.19611359 64.76491547]
[112.06281281 100.53739166]
[123.82904816 109.84092712]
[135.59527588 119.14446259]
[147.36151123 128.44799805]
[159.12774658 137.75152588]
[174.75177002 140.24162292]
[179.93629456 154.20478821]
[191.70252991 163.50831604]
[203.46876526 172.81184387]
[215.23500061 182.11538696]
[229.83067322 185.57461548]
[244.52078247 182.54135132]
[259.21090698 179.50808716]
[273.90100098 176.47483826]
[288.59112549 173.44157410]
[303.28121948 170.40830994]
[317.97134399 167.37504578]
[329.85552979 156.07469177]
[345.50527954 160.97540283]
[348.82147217 177.03575134]
[336.39270020 187.73422241]
[321.00460815 182.06515503]
[306.31448364 185.09841919]
[291.62438965 188.13168335]
[276.93426514 191.16494751]
[262.24417114 194.19819641]
[247.55404663 197.23146057]
[232.86393738 200.26472473]
[245.98829651 207.52774048]
[257.49270630 217.15315247]
[266.95764160 228.78993225]
[274.03796387 242.01374817]
[278.47543335 256.34234619]
[280.10827637 271.25320435]
[278.87689209 286.20257568]
[274.82623291 300.64529419]
[268.10397339 314.05468750]
[258.95529175 325.94171143]
[247.71380615 335.87292480]
[234.78944397 343.48614502]
[220.65354919 348.50372314]
[205.82159424 350.74273682]
[190.83445740 350.12145996]
[176.23869324 346.66259766]
[162.56655884 340.49227905]
[150.31665039 331.83551025]
[139.93566895 321.00799561]
[131.80218506 308.40457153]
[126.21281433 294.48483276]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 68]
[10 67]
[11 66]
[12 65]
[14 63]
[15 62]
[16 61]
[17 60]
[18 59]
[19 36]
[20 35]
[21 34]
[22 33]
[23 31]
[24 30]
[25 29]
[41 58]
[42 57]
[43 56]
[44 55]
[46 54]
[47 53]
[48 52]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
