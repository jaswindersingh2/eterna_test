%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (15)
} def

/sequence { (\
GGAAAAGAUAUGUUACAAAAGCAAAAAACUAUUGUACGAAAGUAGAAUAGAGCGUAAGAUAUCAAAAAGAUUUACUUCGGUGGAUCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 63 0.005446408 ubox
1 86 0.003659753 ubox
1 95 0.067375169 ubox
1 98 0.067812689 ubox
1 101 0.069389782 ubox
1 104 0.069710272 ubox
1 107 0.017602196 ubox
2 62 0.004159521 ubox
2 63 0.011320124 ubox
2 86 0.004058116 ubox
2 95 0.035566146 ubox
2 98 0.035700044 ubox
2 101 0.036477488 ubox
2 104 0.036343335 ubox
2 107 0.011858653 ubox
3 62 0.010648323 ubox
7 63 0.998195062 ubox
8 62 0.999200054 ubox
9 56 0.014269706 ubox
9 61 0.999142100 ubox
10 55 0.015277347 ubox
10 60 0.999113733 ubox
11 23 0.013333342 ubox
11 54 0.015537976 ubox
11 58 0.003266334 ubox
11 59 0.992366985 ubox
11 96 0.007073981 ubox
11 99 0.004874629 ubox
11 102 0.005109064 ubox
11 105 0.004959457 ubox
12 22 0.020676734 ubox
12 53 0.015886585 ubox
12 60 0.003212610 ubox
12 95 0.007787396 ubox
12 98 0.005374447 ubox
12 101 0.005643824 ubox
12 104 0.005502990 ubox
13 21 0.020588560 ubox
13 52 0.015838395 ubox
13 57 0.993213784 ubox
13 58 0.004792598 ubox
13 59 0.003340279 ubox
13 94 0.007734551 ubox
13 97 0.005311461 ubox
13 100 0.005580232 ubox
13 103 0.005439941 ubox
14 20 0.019266341 ubox
14 51 0.015150157 ubox
14 56 0.998582312 ubox
14 57 0.004248963 ubox
14 58 0.003214953 ubox
14 93 0.007272648 ubox
14 96 0.004834429 ubox
14 99 0.005087834 ubox
14 102 0.004959711 ubox
15 55 0.998457315 ubox
16 21 0.013375202 ubox
16 52 0.007193023 ubox
16 54 0.996851106 ubox
16 58 0.003578226 ubox
16 91 0.004850769 ubox
17 55 0.004686433 ubox
18 55 0.006959595 ubox
19 55 0.008704919 ubox
20 30 0.013648785 ubox
20 55 0.004371417 ubox
21 29 0.018181515 ubox
21 35 0.006168390 ubox
21 53 0.851214627 ubox
21 55 0.011950331 ubox
22 34 0.006885292 ubox
22 50 0.021163310 ubox
22 52 0.850627526 ubox
22 54 0.013656107 ubox
23 33 0.006811181 ubox
23 55 0.003636344 ubox
24 32 0.006308504 ubox
24 48 0.003408836 ubox
24 55 0.006184087 ubox
25 48 0.003548415 ubox
25 55 0.004195345 ubox
26 48 0.014012208 ubox
27 48 0.004330838 ubox
28 43 0.004702147 ubox
29 34 0.003297511 ubox
29 42 0.004882265 ubox
29 45 0.076701609 ubox
29 50 0.992708055 ubox
29 52 0.012965519 ubox
30 41 0.004768552 ubox
30 44 0.076959530 ubox
30 49 0.996100960 ubox
30 50 0.003445951 ubox
30 51 0.010692635 ubox
31 43 0.076931855 ubox
31 48 0.996348150 ubox
32 39 0.003251152 ubox
32 41 0.006346267 ubox
32 42 0.076548252 ubox
32 46 0.003588658 ubox
32 47 0.995908683 ubox
33 38 0.003173265 ubox
33 39 0.004229840 ubox
33 40 0.008533076 ubox
33 41 0.075409865 ubox
33 45 0.004474466 ubox
33 46 0.983151175 ubox
35 39 0.005768281 ubox
35 40 0.004648027 ubox
35 44 0.994215657 ubox
36 43 0.996619262 ubox
37 42 0.996351052 ubox
42 53 0.003902433 ubox
43 52 0.003888212 ubox
53 58 0.009232245 ubox
54 63 0.003549115 ubox
58 63 0.003382089 ubox
62 70 0.003345037 ubox
62 92 0.006848324 ubox
63 69 0.003379507 ubox
63 91 0.008481790 ubox
67 77 0.006740914 ubox
68 76 0.007572221 ubox
69 75 0.007676518 ubox
69 78 0.015362151 ubox
69 86 0.998008175 ubox
69 95 0.003168320 ubox
70 77 0.015170072 ubox
70 85 0.999020216 ubox
71 84 0.998950258 ubox
71 94 0.003514086 ubox
72 83 0.998106117 ubox
72 93 0.003931064 ubox
73 82 0.997320579 ubox
73 92 0.003987460 ubox
74 81 0.998810269 ubox
75 79 0.012457237 ubox
75 80 0.998142514 ubox
75 82 0.005554884 ubox
75 91 0.006098551 ubox
76 80 0.004078233 ubox
76 90 0.006105008 ubox
76 93 0.005822118 ubox
77 84 0.005543782 ubox
77 89 0.005879455 ubox
77 92 0.006457778 ubox
78 83 0.005883772 ubox
78 91 0.006529937 ubox
79 98 0.015633910 ubox
80 86 0.005648057 ubox
80 98 0.013217608 ubox
81 88 0.004400432 ubox
81 96 0.020938072 ubox
81 97 0.009748662 ubox
82 95 0.025206644 ubox
82 98 0.003344261 ubox
85 92 0.026509073 ubox
86 91 0.027429984 ubox
91 95 0.043019929 ubox
91 98 0.103727834 ubox
91 101 0.045509875 ubox
91 104 0.035223023 ubox
91 107 0.010421366 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
