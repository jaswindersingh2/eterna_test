%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAACUGGCUGGGCGGAUCCAUGAUCCGCGGCUCUAAGAGCCCAGAUCAAUGAUCUGCCAGCCAGAGGGUAAAUUCGUUUACCCAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

/coor [
[201.48817444 272.18765259]
[208.31036377 258.82885742]
[217.72062683 247.14779663]
[229.32110596 237.63836670]
[242.62130737 230.70263672]
[257.05892944 226.63381958]
[272.02078247 225.60388184]
[259.48846436 217.36125183]
[246.95616150 209.11860657]
[234.42384338 200.87597656]
[221.89152527 192.63334656]
[209.35920715 184.39070129]
[196.82688904 176.14807129]
[184.29457092 167.90544128]
[176.86192322 166.84300232]
[171.52244568 159.23637390]
[159.23516846 150.63272095]
[146.94789124 142.02906799]
[134.66061401 133.42543030]
[122.37332916 124.82178497]
[110.08604431 116.21813202]
[95.79880524 118.63078308]
[83.92967987 110.31993866]
[81.31030273 96.06914520]
[69.02302551 87.46549988]
[56.73574448 78.86185455]
[44.44846344 70.25820923]
[32.16118240 61.65456009]
[16.41881180 60.07712936]
[10.43117332 46.43904114]
[1.45706928 44.02319336]
[-2.08340907 37.40216827]
[-14.11525726 28.44478798]
[-26.14710426 19.48740959]
[-38.17895126 10.53003120]
[-50.21080017 1.57265222]
[-66.52635956 -3.03591251]
[-66.61449432 -19.98963165]
[-50.34773254 -24.76757812]
[-41.25342178 -10.45919609]
[-29.22157478 -1.50181675]
[-17.18972588 7.45556211]
[-5.15787792 16.41294098]
[6.87396955 25.37031937]
[19.03482056 34.15176010]
[33.89832306 35.11380005]
[40.76483154 49.36727905]
[53.05211258 57.97092438]
[65.33939362 66.57456970]
[77.62667084 75.17821503]
[89.91395569 83.78186798]
[104.20119476 81.36921692]
[116.07032013 89.68006134]
[118.68969727 103.93085480]
[130.97697449 112.53450012]
[143.26425171 121.13814545]
[155.55152893 129.74179077]
[167.83882141 138.34544373]
[180.12609863 146.94908142]
[192.53720093 155.37312317]
[205.06951904 163.61575317]
[217.60183716 171.85838318]
[230.13415527 180.10102844]
[242.66647339 188.34365845]
[255.19879150 196.58628845]
[267.73110962 204.82893372]
[280.26342773 213.07156372]
[286.12817383 212.90637207]
[291.08654785 215.14270020]
[305.77664185 212.10943604]
[320.46676636 209.07617188]
[335.15686035 206.04292297]
[349.84698486 203.00965881]
[364.53707886 199.97639465]
[379.22720337 196.94313049]
[391.11138916 185.64277649]
[406.76113892 190.54348755]
[410.07733154 206.60383606]
[397.64855957 217.30230713]
[382.26046753 211.63323975]
[367.57034302 214.66650391]
[352.88024902 217.69976807]
[338.19012451 220.73303223]
[323.50003052 223.76629639]
[308.80990601 226.79954529]
[294.11981201 229.83280945]
[307.64663696 236.31544495]
[319.56164551 245.42768860]
[329.36102295 256.78427124]
[336.63046265 269.90505981]
[341.06259155 284.23532104]
[342.47006226 299.16915894]
[340.79336548 314.07513428]
[336.10336304 328.32308960]
[328.59835815 341.31057739]
[318.59564209 352.48849487]
[306.51815796 361.38424683]
[292.87655640 367.62173462]
[278.24755859 370.93722534]
[263.24969482 371.19055176]
[248.51707458 368.37097168]
[234.67259216 362.59774780]
[222.30158997 354.11492920]
[211.92710876 343.28115845]
[203.98779297 330.55453491]
[198.81929016 316.47311401]
[196.64015198 301.63223267]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 67]
[8 66]
[9 65]
[10 64]
[11 63]
[12 62]
[13 61]
[14 60]
[16 59]
[17 58]
[18 57]
[19 56]
[20 55]
[21 54]
[24 51]
[25 50]
[26 49]
[27 48]
[28 47]
[30 45]
[32 44]
[33 43]
[34 42]
[35 41]
[36 40]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
