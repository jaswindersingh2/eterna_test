%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (441)
} def

/sequence { (\
GGAAAGGUAAGGCGCAUCCUACGGGACCGGAAACGGGCGGAACGAUUGGCCAGCCAAUCCCUUACAAUCGGUGUGUUCGCACACCGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.017796374 ubox
1 60 0.185976535 ubox
1 61 0.027585080 ubox
1 65 0.028821576 ubox
1 68 0.008158661 ubox
1 69 0.018440207 ubox
1 95 0.065738161 ubox
1 98 0.067070274 ubox
1 101 0.069937204 ubox
1 104 0.070338115 ubox
1 107 0.017776703 ubox
2 18 0.017830307 ubox
2 59 0.186903123 ubox
2 60 0.025402532 ubox
2 65 0.036025429 ubox
2 68 0.019852244 ubox
2 69 0.044280477 ubox
2 95 0.034637717 ubox
2 98 0.035333653 ubox
2 101 0.036209664 ubox
2 104 0.036098195 ubox
2 107 0.011782370 ubox
3 17 0.017385285 ubox
3 58 0.185297568 ubox
3 63 0.008864007 ubox
3 68 0.043901852 ubox
4 58 0.006829208 ubox
4 62 0.011380513 ubox
4 63 0.060253335 ubox
4 68 0.058311109 ubox
5 20 0.006593024 ubox
5 62 0.064257248 ubox
5 68 0.027902506 ubox
6 13 0.009614169 ubox
6 15 0.006307655 ubox
6 19 0.006880836 ubox
6 55 0.188783998 ubox
6 59 0.003392294 ubox
6 60 0.016187772 ubox
6 61 0.064653875 ubox
6 65 0.050268030 ubox
6 68 0.009006912 ubox
6 69 0.003915099 ubox
6 95 0.058476611 ubox
6 98 0.058663585 ubox
6 101 0.058526426 ubox
6 104 0.057327695 ubox
6 107 0.019982632 ubox
7 13 0.013389462 ubox
7 15 0.007589360 ubox
7 18 0.006868742 ubox
7 22 0.013814950 ubox
7 43 0.012724120 ubox
7 54 0.188918362 ubox
7 58 0.003428528 ubox
7 59 0.016768061 ubox
7 60 0.064087027 ubox
7 65 0.975566173 ubox
7 95 0.008745024 ubox
7 98 0.008944286 ubox
7 101 0.007602331 ubox
7 104 0.007227479 ubox
8 12 0.012576333 ubox
8 14 0.007488391 ubox
8 21 0.013828982 ubox
8 42 0.012527400 ubox
8 52 0.005474573 ubox
8 53 0.185794785 ubox
8 57 0.004017170 ubox
8 64 0.978188100 ubox
8 94 0.008069838 ubox
8 97 0.008278392 ubox
8 100 0.007044914 ubox
8 103 0.006697744 ubox
9 20 0.010134946 ubox
9 58 0.010321582 ubox
9 63 0.978168449 ubox
10 20 0.013092461 ubox
10 62 0.978354130 ubox
10 63 0.003304918 ubox
11 18 0.003884601 ubox
11 19 0.016343939 ubox
11 43 0.008072279 ubox
11 50 0.010019758 ubox
11 51 0.188234945 ubox
11 55 0.039076589 ubox
11 60 0.006976660 ubox
11 61 0.978803398 ubox
11 62 0.004111185 ubox
12 18 0.016230686 ubox
12 38 0.026659030 ubox
12 43 0.011173843 ubox
12 50 0.188508817 ubox
12 54 0.039143718 ubox
12 55 0.004929794 ubox
12 59 0.004696693 ubox
12 60 0.970020691 ubox
12 61 0.005194600 ubox
13 23 0.022894124 ubox
13 24 0.004902010 ubox
13 25 0.015576354 ubox
13 29 0.015962754 ubox
13 30 0.005987035 ubox
13 35 0.006000237 ubox
13 37 0.027655764 ubox
13 39 0.872473475 ubox
13 40 0.038364850 ubox
13 44 0.004598046 ubox
13 48 0.011161283 ubox
13 49 0.188383445 ubox
13 53 0.039097883 ubox
14 19 0.004148821 ubox
14 22 0.022962366 ubox
14 27 0.007538454 ubox
14 28 0.016411859 ubox
14 34 0.006113280 ubox
14 38 0.883689883 ubox
14 43 0.010886833 ubox
14 47 0.011649107 ubox
14 50 0.006671608 ubox
14 51 0.004614806 ubox
14 54 0.015121389 ubox
14 58 0.006470917 ubox
14 59 0.024485908 ubox
14 60 0.003323668 ubox
15 23 0.015818606 ubox
15 24 0.005027205 ubox
15 25 0.003605398 ubox
15 29 0.003292430 ubox
15 35 0.004785024 ubox
15 37 0.882629004 ubox
15 39 0.010316624 ubox
15 40 0.007592622 ubox
15 48 0.081874908 ubox
15 49 0.006658613 ubox
15 53 0.015191122 ubox
16 20 0.003967455 ubox
16 46 0.169432297 ubox
16 47 0.068048605 ubox
16 58 0.005565895 ubox
17 24 0.008126068 ubox
17 25 0.041312377 ubox
17 26 0.894165597 ubox
17 31 0.008733689 ubox
17 36 0.005767157 ubox
17 41 0.027943724 ubox
17 45 0.176154630 ubox
17 57 0.003958048 ubox
18 23 0.011284130 ubox
18 24 0.065142735 ubox
18 25 0.978429094 ubox
18 30 0.009026921 ubox
18 35 0.005768383 ubox
18 36 0.007308083 ubox
18 40 0.029602474 ubox
18 44 0.175810986 ubox
18 49 0.011192514 ubox
19 23 0.065019589 ubox
19 24 0.978677854 ubox
19 25 0.013860877 ubox
19 29 0.008993356 ubox
19 35 0.007323416 ubox
19 39 0.029402747 ubox
19 40 0.008544436 ubox
19 44 0.026281137 ubox
19 48 0.011248610 ubox
20 24 0.012615252 ubox
20 37 0.003299425 ubox
20 39 0.007714405 ubox
20 40 0.006087663 ubox
20 41 0.020301888 ubox
20 42 0.080160157 ubox
20 45 0.004159092 ubox
20 64 0.006409388 ubox
21 46 0.006568182 ubox
21 63 0.006854458 ubox
22 29 0.014327343 ubox
22 35 0.006629600 ubox
22 36 0.009605325 ubox
22 37 0.005923646 ubox
22 39 0.104739872 ubox
22 40 0.122191525 ubox
22 44 0.012804905 ubox
23 28 0.014230605 ubox
23 34 0.006737755 ubox
23 38 0.103064323 ubox
23 43 0.014719275 ubox
23 61 0.023286302 ubox
24 34 0.009298956 ubox
24 38 0.119854741 ubox
24 43 0.032452722 ubox
24 60 0.023331346 ubox
25 38 0.057323268 ubox
25 43 0.004120127 ubox
25 59 0.023264742 ubox
26 58 0.022880164 ubox
27 35 0.005254757 ubox
27 36 0.973887052 ubox
27 37 0.034611293 ubox
27 39 0.003244459 ubox
27 40 0.206302277 ubox
28 35 0.976727067 ubox
28 36 0.033397110 ubox
28 39 0.207223012 ubox
28 40 0.003227484 ubox
29 34 0.974167290 ubox
29 38 0.207087428 ubox
29 55 0.024917747 ubox
29 60 0.003726106 ubox
30 34 0.019849163 ubox
30 38 0.004556221 ubox
30 54 0.024937728 ubox
30 59 0.004845407 ubox
31 58 0.004744517 ubox
34 39 0.003721535 ubox
34 40 0.004266562 ubox
34 53 0.008634017 ubox
35 43 0.005808138 ubox
35 51 0.004657901 ubox
36 43 0.019189684 ubox
36 50 0.004519114 ubox
36 51 0.044269479 ubox
36 55 0.015633375 ubox
37 43 0.065583745 ubox
37 46 0.003400929 ubox
37 50 0.051764220 ubox
37 54 0.018845988 ubox
38 44 0.028418334 ubox
38 48 0.009488138 ubox
38 49 0.051829693 ubox
38 53 0.018857629 ubox
39 43 0.043166354 ubox
39 47 0.008991544 ubox
39 51 0.017557525 ubox
39 60 0.009694049 ubox
39 61 0.012978765 ubox
40 46 0.006687338 ubox
40 47 0.049915429 ubox
40 50 0.017579767 ubox
40 51 0.007424413 ubox
40 59 0.013528228 ubox
40 60 0.015684275 ubox
40 61 0.004278135 ubox
40 63 0.006210044 ubox
41 46 0.045275090 ubox
41 47 0.003518246 ubox
41 58 0.011981303 ubox
41 62 0.006301143 ubox
42 46 0.003212737 ubox
43 48 0.015914550 ubox
43 49 0.006472092 ubox
44 58 0.003823117 ubox
44 59 0.977040349 ubox
44 60 0.006149590 ubox
45 58 0.979405682 ubox
46 57 0.979204252 ubox
47 56 0.979731400 ubox
48 54 0.007050686 ubox
48 55 0.980258053 ubox
49 54 0.974193630 ubox
61 91 0.076612360 ubox
62 88 0.003566970 ubox
62 89 0.010755987 ubox
62 90 0.076234886 ubox
62 91 0.008063609 ubox
62 92 0.019939292 ubox
62 93 0.038723204 ubox
62 94 0.012577817 ubox
63 88 0.012584596 ubox
63 89 0.069714216 ubox
63 90 0.008916954 ubox
63 91 0.020375587 ubox
63 92 0.042137871 ubox
63 93 0.013792320 ubox
65 91 0.027172554 ubox
68 87 0.930495672 ubox
68 88 0.042946687 ubox
68 89 0.009250968 ubox
68 90 0.006593785 ubox
68 92 0.006141900 ubox
69 86 0.997479690 ubox
69 91 0.005479527 ubox
70 85 0.999972373 ubox
71 84 0.999988884 ubox
72 83 0.999788381 ubox
73 82 0.999971330 ubox
74 81 0.999246641 ubox
75 80 0.993258161 ubox
86 95 0.006784292 ubox
91 95 0.043425138 ubox
91 98 0.104033265 ubox
91 101 0.045349516 ubox
91 104 0.034870605 ubox
91 107 0.010308328 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
68 87 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
