%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (865)
} def

/sequence { (\
GGAAAGGAAGCACGAAAAAGGCAAAAGCCGAGGGAAACACUCAAGGCAAGGGAAACACUAACCAAAAACAUCUAGUUCGCUAGAUGAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.043429536 ubox
1 13 0.054180260 ubox
1 22 0.012793766 ubox
1 29 0.041805806 ubox
1 42 0.003704976 ubox
1 47 0.009601873 ubox
1 56 0.017010070 ubox
1 58 0.012724787 ubox
1 59 0.019568410 ubox
1 62 0.020897752 ubox
1 63 0.452275779 ubox
1 69 0.011230338 ubox
1 78 0.005403553 ubox
1 95 0.173793929 ubox
1 98 0.178346962 ubox
1 101 0.196887210 ubox
1 104 0.196756149 ubox
1 107 0.049782720 ubox
2 11 0.055936883 ubox
2 13 0.026681809 ubox
2 22 0.005891578 ubox
2 28 0.041824660 ubox
2 42 0.007526107 ubox
2 47 0.007756796 ubox
2 56 0.008871437 ubox
2 58 0.020606059 ubox
2 59 0.003399981 ubox
2 62 0.451181486 ubox
2 63 0.028075735 ubox
2 69 0.004802653 ubox
2 77 0.005409291 ubox
2 95 0.091177745 ubox
2 98 0.093788973 ubox
2 101 0.097194701 ubox
2 104 0.096764239 ubox
2 107 0.031608468 ubox
3 41 0.007081175 ubox
3 59 0.009556437 ubox
3 76 0.005381306 ubox
4 59 0.014534514 ubox
5 41 0.008573004 ubox
5 59 0.270982415 ubox
5 81 0.003296974 ubox
6 11 0.117248769 ubox
6 13 0.156815008 ubox
6 22 0.017217068 ubox
6 28 0.003412809 ubox
6 29 0.041285352 ubox
6 38 0.006243744 ubox
6 40 0.009317984 ubox
6 41 0.004060345 ubox
6 42 0.006320263 ubox
6 47 0.006515533 ubox
6 56 0.018398628 ubox
6 58 0.275376056 ubox
6 59 0.067754202 ubox
6 62 0.023174146 ubox
6 63 0.297551100 ubox
6 69 0.006887868 ubox
6 73 0.005888925 ubox
6 80 0.003418774 ubox
6 95 0.147536713 ubox
6 98 0.147218018 ubox
6 101 0.145719355 ubox
6 104 0.142886651 ubox
6 107 0.049836044 ubox
7 11 0.028345936 ubox
7 13 0.054264262 ubox
7 22 0.010822660 ubox
7 28 0.041324897 ubox
7 38 0.004307866 ubox
7 40 0.004572142 ubox
7 41 0.005344743 ubox
7 42 0.017718891 ubox
7 47 0.005746891 ubox
7 56 0.096384503 ubox
7 58 0.070497168 ubox
7 59 0.009708348 ubox
7 62 0.296514267 ubox
7 63 0.026428467 ubox
7 69 0.004248457 ubox
7 72 0.006010609 ubox
7 95 0.111332161 ubox
7 98 0.109490823 ubox
7 101 0.092446852 ubox
7 104 0.087978888 ubox
7 107 0.028629301 ubox
8 41 0.016576314 ubox
8 59 0.009149461 ubox
8 71 0.005651868 ubox
9 41 0.007835681 ubox
9 59 0.025042225 ubox
9 81 0.004552144 ubox
10 22 0.846809280 ubox
10 28 0.006573722 ubox
10 38 0.004898949 ubox
10 40 0.009571290 ubox
10 47 0.126679345 ubox
10 56 0.007040955 ubox
10 58 0.023586381 ubox
10 59 0.004783238 ubox
10 62 0.004391138 ubox
10 63 0.005209494 ubox
10 80 0.004722219 ubox
10 95 0.052602300 ubox
10 98 0.050158898 ubox
10 101 0.050448972 ubox
10 104 0.046614699 ubox
10 107 0.016092160 ubox
11 20 0.045152198 ubox
11 21 0.846689191 ubox
11 27 0.006632750 ubox
11 33 0.005297529 ubox
11 34 0.007546161 ubox
11 45 0.008829060 ubox
11 46 0.126572287 ubox
11 50 0.009312322 ubox
11 51 0.017607167 ubox
11 52 0.029859949 ubox
11 79 0.004603627 ubox
11 86 0.006782397 ubox
11 91 0.073274847 ubox
12 85 0.003656806 ubox
13 20 0.812052126 ubox
13 21 0.041205095 ubox
13 32 0.008632035 ubox
13 33 0.011089018 ubox
13 34 0.007400925 ubox
13 45 0.070673107 ubox
13 46 0.006309194 ubox
13 50 0.024377807 ubox
13 51 0.033617640 ubox
13 52 0.009468917 ubox
13 79 0.003334913 ubox
13 86 0.004961619 ubox
13 91 0.045800155 ubox
14 22 0.024900089 ubox
14 42 0.006278007 ubox
14 47 0.008463758 ubox
14 56 0.004650306 ubox
14 58 0.004762949 ubox
14 62 0.004805469 ubox
14 63 0.008835091 ubox
14 78 0.004095945 ubox
14 95 0.048474072 ubox
14 98 0.048322614 ubox
14 101 0.049058132 ubox
14 104 0.048910132 ubox
14 107 0.018512941 ubox
15 41 0.005691421 ubox
15 77 0.004041819 ubox
16 76 0.003673558 ubox
19 59 0.008079597 ubox
20 29 0.460429963 ubox
20 56 0.007181136 ubox
20 58 0.008321579 ubox
20 59 0.003893486 ubox
20 62 0.003351438 ubox
20 63 0.047812290 ubox
20 95 0.021520278 ubox
20 98 0.021409252 ubox
20 101 0.021715033 ubox
20 104 0.021752977 ubox
20 107 0.007596286 ubox
21 28 0.461191980 ubox
21 47 0.004068018 ubox
21 56 0.005317775 ubox
21 58 0.004045341 ubox
21 62 0.047657434 ubox
21 95 0.013782940 ubox
21 98 0.013696721 ubox
21 101 0.013828950 ubox
21 104 0.013755549 ubox
21 107 0.004486183 ubox
22 27 0.460538352 ubox
22 46 0.004046957 ubox
22 50 0.009316773 ubox
22 51 0.020915542 ubox
22 52 0.026113922 ubox
22 91 0.017986669 ubox
27 47 0.883136487 ubox
27 95 0.003231530 ubox
27 98 0.003187393 ubox
27 101 0.003236801 ubox
27 104 0.003234040 ubox
28 45 0.004383608 ubox
28 46 0.884074634 ubox
28 51 0.003589620 ubox
29 45 0.882201295 ubox
29 50 0.003609338 ubox
29 91 0.003669682 ubox
30 38 0.003362058 ubox
30 40 0.008695465 ubox
30 41 0.003600402 ubox
30 42 0.716234158 ubox
30 47 0.004197459 ubox
30 95 0.004130768 ubox
30 98 0.004600494 ubox
30 101 0.004732855 ubox
30 104 0.004704705 ubox
31 41 0.719294963 ubox
31 59 0.004998903 ubox
32 38 0.017951925 ubox
32 40 0.717944399 ubox
32 41 0.155239587 ubox
32 42 0.663599414 ubox
32 58 0.005141711 ubox
32 59 0.005790802 ubox
32 63 0.009175218 ubox
33 38 0.485571644 ubox
33 40 0.190248971 ubox
33 41 0.658417076 ubox
33 42 0.059325585 ubox
33 58 0.006004108 ubox
33 59 0.004200730 ubox
33 62 0.009172350 ubox
34 38 0.077709973 ubox
34 40 0.656593710 ubox
34 41 0.049724196 ubox
34 42 0.060969999 ubox
34 58 0.004508253 ubox
35 41 0.059224623 ubox
36 41 0.003597240 ubox
38 45 0.004250567 ubox
40 46 0.003684308 ubox
40 50 0.004502781 ubox
40 51 0.005271105 ubox
40 52 0.016384528 ubox
41 45 0.003349482 ubox
41 49 0.004381776 ubox
41 50 0.005090667 ubox
41 51 0.016457558 ubox
41 53 0.003416295 ubox
41 92 0.005720298 ubox
42 50 0.016609763 ubox
42 51 0.003693301 ubox
42 52 0.003603158 ubox
42 91 0.006155351 ubox
44 59 0.034044143 ubox
45 56 0.021026619 ubox
45 58 0.035296696 ubox
45 59 0.016556187 ubox
45 62 0.020263468 ubox
45 63 0.377381946 ubox
45 69 0.004383923 ubox
45 95 0.007719432 ubox
45 98 0.007486892 ubox
45 101 0.007474151 ubox
45 104 0.007294903 ubox
46 56 0.011657204 ubox
46 58 0.017119757 ubox
46 62 0.377465883 ubox
46 63 0.016317736 ubox
46 95 0.004733050 ubox
46 98 0.004596096 ubox
46 101 0.004567467 ubox
46 104 0.004429120 ubox
47 51 0.006915249 ubox
47 52 0.016657821 ubox
47 91 0.006342099 ubox
48 59 0.031859201 ubox
49 59 0.462287010 ubox
49 81 0.004729339 ubox
50 56 0.166016096 ubox
50 58 0.472671950 ubox
50 59 0.395542661 ubox
50 62 0.031504038 ubox
50 63 0.592432065 ubox
50 80 0.004902798 ubox
50 95 0.010666133 ubox
50 98 0.010447368 ubox
50 101 0.010110065 ubox
50 104 0.010760990 ubox
50 107 0.003440334 ubox
51 56 0.363724428 ubox
51 58 0.411090441 ubox
51 59 0.109485919 ubox
51 62 0.592777359 ubox
51 63 0.180972285 ubox
51 95 0.003864392 ubox
51 98 0.004191423 ubox
51 104 0.003410153 ubox
52 56 0.067814333 ubox
52 58 0.115156903 ubox
52 59 0.023787842 ubox
52 62 0.180840154 ubox
52 63 0.015760731 ubox
52 78 0.004963708 ubox
52 101 0.006049917 ubox
53 59 0.051500264 ubox
53 77 0.004806397 ubox
54 59 0.209582782 ubox
55 59 0.029959262 ubox
57 76 0.003960995 ubox
58 75 0.004490551 ubox
58 91 0.008722575 ubox
59 64 0.007378199 ubox
59 65 0.008001712 ubox
59 66 0.010206184 ubox
59 67 0.006272816 ubox
59 68 0.007378755 ubox
59 74 0.004486627 ubox
59 90 0.008452275 ubox
59 96 0.007656517 ubox
59 97 0.003403816 ubox
60 73 0.004350000 ubox
62 91 0.020382236 ubox
63 86 0.003737227 ubox
63 91 0.050000800 ubox
68 76 0.003438014 ubox
69 75 0.003540894 ubox
69 86 0.994439520 ubox
69 91 0.004683267 ubox
70 85 0.998757693 ubox
71 84 0.999548363 ubox
71 92 0.003611043 ubox
72 83 0.999906088 ubox
72 91 0.003861412 ubox
73 82 0.999613508 ubox
73 90 0.003728196 ubox
74 81 0.998981344 ubox
75 80 0.990739562 ubox
76 88 0.003665163 ubox
77 87 0.004020036 ubox
78 86 0.004062472 ubox
79 85 0.003198702 ubox
85 96 0.009642246 ubox
85 99 0.003583097 ubox
86 95 0.015747134 ubox
86 98 0.005811116 ubox
86 101 0.004150320 ubox
91 95 0.053964045 ubox
91 98 0.117720497 ubox
91 101 0.045707944 ubox
91 104 0.029996801 ubox
91 107 0.008705087 ubox
10 22 0.9500000 lbox
11 21 0.9500000 lbox
13 20 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
50 63 0.9500000 lbox
51 62 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
