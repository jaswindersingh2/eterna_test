%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:14:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (185)
} def

/sequence { (\
GGAAACGACGAUUCCGCCGUCAGGGAGCUGUACGGAAGACCUGACGCUUAUGCGCAGGAGGAAGGGUCUUAGCUGUUCGCAGCUAAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.300209927 ubox
1 9 0.010135511 ubox
1 15 0.082417470 ubox
1 68 0.003316809 ubox
1 69 0.007920058 ubox
1 95 0.065620397 ubox
1 98 0.064953688 ubox
1 101 0.066156091 ubox
1 104 0.066459862 ubox
1 107 0.016777300 ubox
2 6 0.044604891 ubox
2 9 0.005148976 ubox
2 14 0.082505126 ubox
2 68 0.012147174 ubox
2 69 0.006286901 ubox
2 70 0.009650927 ubox
2 95 0.034773828 ubox
2 98 0.033910572 ubox
2 101 0.034609482 ubox
2 104 0.034477709 ubox
2 107 0.011249774 ubox
3 12 0.003405682 ubox
3 13 0.081911980 ubox
3 67 0.011560774 ubox
3 69 0.012403394 ubox
3 70 0.011191423 ubox
4 12 0.076347665 ubox
4 13 0.005284782 ubox
4 69 0.014584877 ubox
4 70 0.032195992 ubox
5 12 0.006431075 ubox
5 67 0.010284184 ubox
5 69 0.051389361 ubox
5 70 0.023008580 ubox
6 10 0.034254505 ubox
6 16 0.004535250 ubox
6 34 0.004055712 ubox
6 64 0.010035421 ubox
6 66 0.011190584 ubox
6 91 0.037526964 ubox
7 15 0.004552527 ubox
7 21 0.003799744 ubox
7 33 0.004079314 ubox
7 67 0.003724350 ubox
7 68 0.993424943 ubox
7 98 0.003971921 ubox
7 101 0.003634077 ubox
7 104 0.003626523 ubox
8 20 0.003805834 ubox
8 31 0.004177911 ubox
8 67 0.994773439 ubox
9 16 0.007140533 ubox
9 19 0.003806624 ubox
9 30 0.004196430 ubox
9 61 0.004297475 ubox
9 64 0.005542243 ubox
9 65 0.018884969 ubox
9 66 0.994381049 ubox
10 15 0.007493613 ubox
10 18 0.003779156 ubox
10 29 0.004029709 ubox
10 68 0.025240686 ubox
10 95 0.003449243 ubox
11 67 0.025205315 ubox
12 27 0.003866508 ubox
12 37 0.005569515 ubox
12 62 0.007946442 ubox
12 63 0.978804555 ubox
12 64 0.016262824 ubox
12 66 0.021981535 ubox
12 93 0.004000663 ubox
13 26 0.004049335 ubox
13 36 0.006443940 ubox
13 39 0.020826167 ubox
13 61 0.007381264 ubox
13 62 0.994832126 ubox
13 63 0.012170625 ubox
13 65 0.015529410 ubox
13 66 0.009292479 ubox
13 92 0.004315387 ubox
14 25 0.004094691 ubox
14 35 0.006509694 ubox
14 38 0.022703092 ubox
14 60 0.007717260 ubox
14 61 0.995860562 ubox
14 64 0.014758670 ubox
14 65 0.014114675 ubox
14 91 0.004320187 ubox
15 24 0.004077940 ubox
15 34 0.006497018 ubox
15 38 0.015977940 ubox
15 60 0.994533858 ubox
15 61 0.004884384 ubox
15 64 0.014130586 ubox
16 33 0.006417368 ubox
16 40 0.004419187 ubox
16 95 0.004519497 ubox
16 98 0.006559430 ubox
16 101 0.007007791 ubox
16 104 0.007073749 ubox
17 24 0.005914324 ubox
17 25 0.005422963 ubox
17 34 0.003839062 ubox
17 35 0.995777095 ubox
17 38 0.005146487 ubox
17 58 0.039300164 ubox
18 23 0.005951085 ubox
18 24 0.005445521 ubox
18 34 0.999037220 ubox
18 35 0.004081803 ubox
18 46 0.004370182 ubox
18 57 0.038801195 ubox
19 33 0.999043633 ubox
19 45 0.036670102 ubox
19 55 0.008164322 ubox
20 32 0.987315011 ubox
20 44 0.037682935 ubox
20 54 0.007726809 ubox
21 30 0.998254415 ubox
21 43 0.037891323 ubox
21 52 0.006158816 ubox
22 29 0.998199392 ubox
22 31 0.008593457 ubox
22 42 0.037880874 ubox
22 51 0.006098601 ubox
23 28 0.996981237 ubox
23 29 0.029253023 ubox
23 41 0.037879516 ubox
24 28 0.030103112 ubox
24 29 0.006284893 ubox
24 40 0.037844438 ubox
25 49 0.008930687 ubox
26 48 0.009228290 ubox
26 84 0.006739847 ubox
27 47 0.009259098 ubox
27 83 0.006975079 ubox
28 34 0.006376731 ubox
28 35 0.026932158 ubox
28 38 0.016045618 ubox
28 46 0.009055116 ubox
28 82 0.006976452 ubox
29 34 0.025217821 ubox
29 35 0.003331844 ubox
29 36 0.004433762 ubox
29 37 0.016036538 ubox
29 81 0.006974466 ubox
30 45 0.009139495 ubox
30 80 0.006973978 ubox
31 44 0.009090845 ubox
31 79 0.006773236 ubox
32 76 0.006029319 ubox
33 43 0.008119429 ubox
33 75 0.006346956 ubox
34 41 0.006222996 ubox
34 42 0.007996472 ubox
34 74 0.006325784 ubox
35 40 0.006315942 ubox
35 41 0.007988394 ubox
35 73 0.006290542 ubox
36 70 0.014540868 ubox
37 69 0.021773274 ubox
38 68 0.025056532 ubox
38 101 0.003264709 ubox
38 104 0.003292062 ubox
39 67 0.025056451 ubox
40 57 0.004753124 ubox
40 58 0.994217456 ubox
40 66 0.024069578 ubox
41 57 0.998734717 ubox
41 58 0.016749264 ubox
41 65 0.023614227 ubox
42 56 0.998571956 ubox
42 57 0.016260814 ubox
42 63 0.003638255 ubox
42 64 0.022207586 ubox
43 55 0.998605620 ubox
45 54 0.998616752 ubox
45 60 0.009223703 ubox
45 61 0.012388513 ubox
46 53 0.999507783 ubox
46 55 0.020343232 ubox
47 52 0.998975169 ubox
47 54 0.020353431 ubox
47 58 0.010689918 ubox
47 60 0.015264512 ubox
48 52 0.003340084 ubox
48 57 0.010669900 ubox
48 59 0.015272831 ubox
49 56 0.009470975 ubox
49 58 0.015065857 ubox
59 69 0.005607338 ubox
59 70 0.007807476 ubox
60 68 0.007039750 ubox
60 69 0.013973673 ubox
60 95 0.010055011 ubox
60 98 0.020848521 ubox
60 101 0.010072705 ubox
61 67 0.006002262 ubox
61 68 0.016645163 ubox
61 78 0.004438167 ubox
61 95 0.003310123 ubox
61 98 0.020087127 ubox
61 101 0.003275956 ubox
62 67 0.015232110 ubox
62 77 0.004444470 ubox
63 76 0.004428248 ubox
64 95 0.071864001 ubox
64 98 0.006061287 ubox
65 74 0.004434408 ubox
65 95 0.011081936 ubox
66 73 0.004449501 ubox
66 95 0.006175879 ubox
67 72 0.004218127 ubox
67 87 0.003582827 ubox
67 88 0.009216524 ubox
67 92 0.076548887 ubox
67 94 0.004454635 ubox
68 91 0.077753935 ubox
69 85 0.020065226 ubox
69 86 0.886229897 ubox
69 87 0.058140075 ubox
69 88 0.025850383 ubox
69 89 0.018236397 ubox
69 90 0.071426853 ubox
69 91 0.008489492 ubox
69 92 0.007625225 ubox
69 93 0.005628232 ubox
69 94 0.004061106 ubox
69 96 0.003570688 ubox
69 97 0.003177199 ubox
70 85 0.986933698 ubox
70 86 0.045643043 ubox
70 87 0.016787717 ubox
70 88 0.012064236 ubox
70 89 0.041870050 ubox
70 90 0.004965226 ubox
70 91 0.005696975 ubox
70 92 0.003650520 ubox
71 84 0.998640686 ubox
72 83 0.999933777 ubox
73 82 0.999938427 ubox
74 81 0.999164829 ubox
74 96 0.003591501 ubox
75 80 0.993212973 ubox
75 95 0.003851907 ubox
76 94 0.003211591 ubox
77 92 0.003292924 ubox
78 91 0.003925991 ubox
83 91 0.003311177 ubox
84 90 0.003388024 ubox
91 95 0.042779636 ubox
91 98 0.103253108 ubox
91 101 0.045349383 ubox
91 104 0.035137571 ubox
91 107 0.010396736 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
