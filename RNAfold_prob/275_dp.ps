%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Sun Jun 14 19:15:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (275)
} def

/sequence { (\
GGAAAAAAGAUCACGAUGGAAACAUCAGACUGGACGAGGAGGCGAAAGGCUCAGUCUGGUCACGAUCAUCUGAUCUUCGGAUCAGAAAAAGAAACAACAACAACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.023629842 ubox
1 14 0.038636518 ubox
1 63 0.011875944 ubox
1 67 0.013875380 ubox
1 78 0.004707684 ubox
1 83 0.017334536 ubox
1 95 0.070697838 ubox
1 98 0.071173022 ubox
1 101 0.073318521 ubox
1 104 0.073308104 ubox
1 107 0.018456035 ubox
2 11 0.020971697 ubox
2 12 0.051233402 ubox
2 14 0.008268086 ubox
2 63 0.006700470 ubox
2 66 0.008533526 ubox
2 67 0.022137077 ubox
2 70 0.003528208 ubox
2 77 0.003820982 ubox
2 78 0.009674128 ubox
2 82 0.015844538 ubox
2 83 0.018765956 ubox
2 95 0.036888655 ubox
2 98 0.037052783 ubox
2 101 0.038233535 ubox
2 104 0.037689916 ubox
2 107 0.012291542 ubox
3 11 0.049401910 ubox
3 66 0.020715584 ubox
3 69 0.003942513 ubox
3 77 0.009013300 ubox
3 82 0.018439983 ubox
4 11 0.013865960 ubox
4 69 0.003177211 ubox
4 76 0.004524089 ubox
5 11 0.003992788 ubox
5 69 0.010592892 ubox
6 11 0.003415188 ubox
6 69 0.010607455 ubox
7 69 0.045629727 ubox
7 77 0.039583083 ubox
8 69 0.030441883 ubox
8 76 0.045620031 ubox
9 14 0.016130832 ubox
9 61 0.003242570 ubox
9 63 0.006179434 ubox
9 67 0.978924633 ubox
9 75 0.047222397 ubox
9 83 0.020340042 ubox
9 95 0.017471162 ubox
9 98 0.013471897 ubox
9 101 0.013487622 ubox
9 104 0.013515453 ubox
9 107 0.004717474 ubox
10 60 0.003207271 ubox
10 66 0.979872686 ubox
10 74 0.047219057 ubox
10 82 0.020358560 ubox
11 20 0.003499445 ubox
11 27 0.003215305 ubox
11 59 0.003178775 ubox
11 65 0.979882205 ubox
11 73 0.047220420 ubox
11 81 0.020352693 ubox
11 92 0.047384159 ubox
11 93 0.004530783 ubox
11 94 0.003330734 ubox
12 19 0.003754457 ubox
12 64 0.978904358 ubox
12 72 0.047229990 ubox
12 80 0.020317441 ubox
12 91 0.050436059 ubox
13 71 0.046730557 ubox
14 19 0.007379121 ubox
14 28 0.012608659 ubox
14 64 0.013264001 ubox
14 79 0.013561313 ubox
14 91 0.012229677 ubox
15 26 0.997077755 ubox
15 63 0.006149204 ubox
15 67 0.009693345 ubox
15 70 0.046192551 ubox
15 78 0.008455477 ubox
16 25 0.998081871 ubox
16 66 0.009683888 ubox
16 69 0.046215613 ubox
16 77 0.007130170 ubox
17 24 0.998050399 ubox
17 27 0.010870306 ubox
17 65 0.009554499 ubox
17 68 0.046200121 ubox
18 23 0.997846968 ubox
18 26 0.011974591 ubox
18 67 0.045972490 ubox
19 23 0.007769266 ubox
19 25 0.008753352 ubox
19 26 0.014876674 ubox
19 63 0.009137228 ubox
19 66 0.034716473 ubox
19 67 0.005066447 ubox
20 25 0.013684627 ubox
20 66 0.006207785 ubox
23 64 0.009981626 ubox
24 60 0.021718293 ubox
24 66 0.027790004 ubox
25 59 0.022662879 ubox
25 62 0.003794758 ubox
25 65 0.037855283 ubox
26 58 0.023267765 ubox
26 64 0.037897529 ubox
27 57 0.023679442 ubox
28 56 0.023764922 ubox
28 61 0.998082200 ubox
28 63 0.009692365 ubox
28 67 0.006999990 ubox
29 55 0.023762538 ubox
29 60 0.999297670 ubox
29 66 0.006938554 ubox
30 54 0.023763638 ubox
30 59 0.999558023 ubox
31 53 0.023720779 ubox
31 58 0.995641030 ubox
31 64 0.006610168 ubox
32 52 0.022020170 ubox
32 57 0.995641718 ubox
32 63 0.010257581 ubox
33 50 0.004379591 ubox
33 51 0.013458393 ubox
33 56 0.999564016 ubox
33 61 0.015045085 ubox
34 55 0.999312701 ubox
34 60 0.015109238 ubox
35 48 0.005739192 ubox
35 49 0.007667574 ubox
35 54 0.995818815 ubox
35 59 0.015123374 ubox
36 52 0.133968699 ubox
36 55 0.005020893 ubox
37 51 0.131427337 ubox
37 55 0.003449852 ubox
37 57 0.014941878 ubox
38 43 0.005532035 ubox
38 50 0.126216416 ubox
38 51 0.019261721 ubox
38 52 0.149768602 ubox
38 56 0.014961270 ubox
39 50 0.017261178 ubox
39 51 0.067666717 ubox
39 52 0.967905569 ubox
39 55 0.009852378 ubox
40 51 0.977196693 ubox
41 50 0.973353737 ubox
41 51 0.141703556 ubox
41 52 0.008284916 ubox
42 50 0.188693737 ubox
43 48 0.956534089 ubox
43 49 0.217415708 ubox
63 79 0.003551528 ubox
63 91 0.036720343 ubox
64 70 0.004227964 ubox
64 75 0.020331681 ubox
64 78 0.003353447 ubox
64 95 0.008369727 ubox
65 69 0.003768744 ubox
65 74 0.020379691 ubox
65 77 0.003207724 ubox
66 73 0.020450910 ubox
66 87 0.008339721 ubox
66 88 0.010903886 ubox
66 89 0.028024651 ubox
66 90 0.006892165 ubox
66 92 0.031241893 ubox
67 72 0.020423839 ubox
67 91 0.033453015 ubox
68 82 0.012586402 ubox
69 81 0.013697823 ubox
69 86 0.931336711 ubox
69 87 0.042945007 ubox
69 88 0.009267357 ubox
69 89 0.007389818 ubox
69 90 0.005072288 ubox
69 92 0.005587812 ubox
70 80 0.013914825 ubox
70 85 0.998032811 ubox
70 91 0.005371014 ubox
71 79 0.013917967 ubox
71 84 0.998235785 ubox
71 90 0.004134814 ubox
72 78 0.013919403 ubox
72 83 0.998546050 ubox
73 77 0.012110602 ubox
73 82 0.998306957 ubox
74 80 0.007358298 ubox
74 81 0.998172282 ubox
75 79 0.013584605 ubox
75 80 0.997462032 ubox
76 80 0.003181941 ubox
76 87 0.008644747 ubox
77 86 0.014321749 ubox
77 92 0.004900330 ubox
78 85 0.016409145 ubox
78 91 0.005637474 ubox
79 95 0.017467546 ubox
82 92 0.018712119 ubox
83 91 0.018976061 ubox
91 95 0.043048821 ubox
91 98 0.103656834 ubox
91 101 0.045412602 ubox
91 104 0.035094608 ubox
91 107 0.010381780 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
31 58 0.9500000 lbox
32 57 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
showpage
end
%%EOF
