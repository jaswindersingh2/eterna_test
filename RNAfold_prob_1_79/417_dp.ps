%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (417)
} def

/sequence { (\
GGAAAACUUAUAGCCCUGUACAAAGUACAGGCCUACAAAGUAGGGCUAUCAAAGAUAGCGCUAUAAGAUGUGUGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.025651159 ubox
1 8 0.006386263 ubox
1 69 0.006458545 ubox
1 71 0.068102333 ubox
1 73 0.180086636 ubox
1 75 0.244449230 ubox
1 76 0.123291639 ubox
1 77 0.009526979 ubox
1 78 0.195604269 ubox
2 7 0.009904070 ubox
2 69 0.011290817 ubox
2 71 0.056992717 ubox
2 73 0.059067360 ubox
2 75 0.142185965 ubox
2 76 0.010503299 ubox
2 77 0.194073562 ubox
2 78 0.190731123 ubox
3 69 0.080600044 ubox
3 71 0.212844284 ubox
3 73 0.213100313 ubox
3 76 0.187062757 ubox
3 77 0.190018087 ubox
4 69 0.054276278 ubox
4 71 0.074898021 ubox
4 73 0.056842879 ubox
4 76 0.176125227 ubox
4 77 0.010848933 ubox
5 69 0.264949894 ubox
5 71 0.102066002 ubox
5 73 0.039387837 ubox
5 76 0.012661347 ubox
5 77 0.012754076 ubox
6 41 0.008110172 ubox
6 69 0.213170716 ubox
6 71 0.101044950 ubox
6 73 0.167583012 ubox
6 76 0.015098038 ubox
6 77 0.005406174 ubox
7 40 0.009717243 ubox
7 54 0.003255417 ubox
7 67 0.979054377 ubox
7 70 0.077237895 ubox
7 72 0.125867597 ubox
7 74 0.007157870 ubox
8 38 0.012348600 ubox
8 39 0.009933053 ubox
8 53 0.003319735 ubox
8 65 0.003761374 ubox
8 66 0.996177969 ubox
8 67 0.011643851 ubox
8 68 0.015350666 ubox
8 70 0.013860095 ubox
9 37 0.012812025 ubox
9 38 0.009228988 ubox
9 65 0.998266894 ubox
9 66 0.009402551 ubox
9 67 0.011322758 ubox
9 68 0.005218799 ubox
9 70 0.012625304 ubox
10 49 0.006097370 ubox
10 64 0.998831483 ubox
10 69 0.011956280 ubox
11 35 0.025705877 ubox
11 48 0.006579975 ubox
11 63 0.998944620 ubox
11 68 0.009483806 ubox
12 34 0.028319629 ubox
12 47 0.006639257 ubox
12 62 0.999151734 ubox
12 76 0.003765604 ubox
13 32 0.009472226 ubox
13 33 0.028553624 ubox
13 46 0.006647220 ubox
13 61 0.999425276 ubox
13 75 0.004087018 ubox
14 31 0.009839709 ubox
14 45 0.006631775 ubox
14 60 0.997398838 ubox
14 74 0.004070085 ubox
15 30 0.009212162 ubox
15 31 0.991291122 ubox
15 60 0.005990270 ubox
16 30 0.999870620 ubox
16 31 0.003619653 ubox
17 29 0.999740150 ubox
18 28 0.999973714 ubox
19 27 0.999687742 ubox
20 26 0.998664829 ubox
21 25 0.988900334 ubox
31 75 0.004659278 ubox
32 43 0.003284174 ubox
32 44 0.996621863 ubox
32 45 0.003831976 ubox
32 74 0.005151843 ubox
33 40 0.003977515 ubox
33 43 0.999385138 ubox
33 44 0.008188628 ubox
34 39 0.003894010 ubox
34 42 0.999073732 ubox
34 43 0.007232332 ubox
34 72 0.008316974 ubox
34 74 0.003318107 ubox
35 41 0.998100235 ubox
35 71 0.010270960 ubox
35 73 0.004286202 ubox
36 40 0.988343188 ubox
36 70 0.011003466 ubox
36 72 0.004655320 ubox
37 69 0.010669043 ubox
37 71 0.004590440 ubox
40 64 0.028695110 ubox
41 63 0.029942767 ubox
42 62 0.031055674 ubox
43 61 0.031190839 ubox
44 59 0.003460811 ubox
45 59 0.999054104 ubox
46 58 0.999947815 ubox
47 57 0.999656290 ubox
48 56 0.999401897 ubox
49 54 0.008321833 ubox
49 55 0.998869316 ubox
50 54 0.990586107 ubox
54 78 0.005214003 ubox
55 77 0.005087627 ubox
57 76 0.006180955 ubox
58 75 0.006600190 ubox
59 74 0.006603305 ubox
60 71 0.003168809 ubox
60 73 0.006702697 ubox
60 75 0.005193082 ubox
61 70 0.003250959 ubox
61 72 0.006709080 ubox
61 74 0.005179279 ubox
62 72 0.003945344 ubox
63 71 0.005346077 ubox
64 70 0.005371934 ubox
65 69 0.004500265 ubox
65 77 0.005638041 ubox
66 71 0.003361681 ubox
66 76 0.009433151 ubox
67 75 0.011219147 ubox
67 77 0.004395593 ubox
67 78 0.076911009 ubox
68 73 0.018825272 ubox
68 76 0.012525831 ubox
68 77 0.082835310 ubox
69 74 0.013978748 ubox
69 79 0.062286510 ubox
70 75 0.074916617 ubox
70 76 0.011228846 ubox
70 77 0.024185747 ubox
70 78 0.103721508 ubox
71 79 0.075248839 ubox
72 76 0.018619895 ubox
72 77 0.024906404 ubox
72 78 0.129839474 ubox
73 79 0.028034687 ubox
74 78 0.046325498 ubox
75 79 0.013187603 ubox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
45 59 0.9500000 lbox
46 58 0.9500000 lbox
47 57 0.9500000 lbox
48 56 0.9500000 lbox
49 55 0.9500000 lbox
50 54 0.9500000 lbox
showpage
end
%%EOF
