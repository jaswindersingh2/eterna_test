%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (891)
} def

/sequence { (\
GGAAAGGAAGAUGACUGGCAAGCAAAAGCAGCAAAAGCAAAGCACAGAAACAUCAAGCAAAAGCAACCUAGCGUUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 58 0.003214303 ubox
1 64 0.004711177 ubox
1 68 0.020609206 ubox
1 69 0.004794542 ubox
1 72 0.021678417 ubox
1 74 0.004840147 ubox
1 77 0.007703384 ubox
1 78 0.332682778 ubox
2 58 0.003829697 ubox
2 67 0.020552545 ubox
2 68 0.005050435 ubox
2 72 0.084786030 ubox
2 74 0.003169498 ubox
2 75 0.004150540 ubox
2 76 0.012010597 ubox
2 77 0.333447454 ubox
2 78 0.114721478 ubox
3 74 0.004115976 ubox
3 75 0.013013743 ubox
3 76 0.333551271 ubox
3 77 0.114098764 ubox
4 69 0.005998151 ubox
4 74 0.013163712 ubox
4 75 0.332497124 ubox
4 76 0.111504745 ubox
4 77 0.005459543 ubox
5 16 0.004873234 ubox
5 69 0.125014021 ubox
5 74 0.323042678 ubox
5 75 0.102037388 ubox
5 76 0.006672075 ubox
5 77 0.004279873 ubox
6 15 0.005111425 ubox
6 58 0.056315054 ubox
6 67 0.003741861 ubox
6 68 0.131952940 ubox
6 69 0.018348547 ubox
6 72 0.034310209 ubox
6 74 0.079979536 ubox
6 75 0.007048593 ubox
6 76 0.005476078 ubox
6 77 0.005636631 ubox
6 78 0.066588142 ubox
7 54 0.007963503 ubox
7 58 0.015687639 ubox
7 67 0.131393439 ubox
7 68 0.018941175 ubox
7 72 0.315135287 ubox
7 74 0.006750139 ubox
7 75 0.006699987 ubox
7 76 0.007231695 ubox
7 77 0.056004689 ubox
7 78 0.913904877 ubox
8 53 0.007731986 ubox
8 69 0.012894357 ubox
8 74 0.006717895 ubox
8 75 0.007543116 ubox
8 76 0.049904357 ubox
8 77 0.915183822 ubox
9 16 0.004595651 ubox
9 69 0.027509477 ubox
9 74 0.006820991 ubox
9 75 0.039741206 ubox
9 76 0.913930835 ubox
10 15 0.004727973 ubox
10 51 0.007782481 ubox
10 54 0.397805049 ubox
10 67 0.005233669 ubox
10 68 0.021101642 ubox
10 69 0.011076136 ubox
10 74 0.007243672 ubox
10 75 0.914774658 ubox
10 78 0.004788042 ubox
11 53 0.398452665 ubox
11 74 0.915914924 ubox
11 77 0.004696572 ubox
12 24 0.006972688 ubox
12 33 0.009069048 ubox
12 39 0.003871247 ubox
12 49 0.004848000 ubox
12 50 0.007862713 ubox
12 52 0.398440436 ubox
12 55 0.012978109 ubox
12 65 0.006640358 ubox
12 66 0.003422833 ubox
12 73 0.915455075 ubox
13 19 0.003550835 ubox
13 23 0.008134193 ubox
13 32 0.010579515 ubox
13 38 0.004562452 ubox
13 51 0.398152605 ubox
13 54 0.014965292 ubox
13 64 0.006780818 ubox
13 67 0.003332159 ubox
13 68 0.004703926 ubox
13 72 0.915173434 ubox
13 75 0.004305363 ubox
14 53 0.014930839 ubox
14 74 0.004783089 ubox
15 22 0.014129167 ubox
15 28 0.003301365 ubox
15 31 0.017814418 ubox
15 37 0.005564026 ubox
15 42 0.004109484 ubox
15 47 0.405671460 ubox
15 63 0.005919133 ubox
15 71 0.895195460 ubox
15 73 0.004725861 ubox
16 21 0.014333293 ubox
16 24 0.012759228 ubox
16 27 0.003307837 ubox
16 30 0.018224070 ubox
16 33 0.005386459 ubox
16 34 0.003564032 ubox
16 36 0.005410540 ubox
16 41 0.004053658 ubox
16 46 0.406220362 ubox
16 52 0.003303084 ubox
16 55 0.004362874 ubox
16 62 0.005676939 ubox
16 65 0.003238414 ubox
16 70 0.892710536 ubox
17 23 0.015564201 ubox
17 29 0.015117357 ubox
17 32 0.005915908 ubox
17 45 0.405734652 ubox
17 51 0.003700464 ubox
17 54 0.005260996 ubox
17 64 0.003423246 ubox
17 67 0.016228712 ubox
17 68 0.336472529 ubox
17 69 0.844747872 ubox
18 23 0.009897300 ubox
18 29 0.105344120 ubox
18 32 0.087007922 ubox
18 38 0.019296250 ubox
18 43 0.399960152 ubox
18 45 0.005887245 ubox
18 53 0.004472806 ubox
18 58 0.011591784 ubox
18 64 0.051241897 ubox
18 67 0.336029229 ubox
18 68 0.828209927 ubox
18 69 0.004359833 ubox
18 72 0.004791018 ubox
19 28 0.110080889 ubox
19 31 0.090638759 ubox
19 37 0.020028711 ubox
19 42 0.399905381 ubox
19 47 0.016934482 ubox
19 57 0.012668375 ubox
19 63 0.057753083 ubox
19 71 0.004947159 ubox
21 53 0.003470866 ubox
21 69 0.004166833 ubox
22 29 0.711168524 ubox
22 32 0.164614345 ubox
22 38 0.167780593 ubox
22 43 0.151882286 ubox
22 45 0.010845220 ubox
22 51 0.010170464 ubox
22 54 0.003299912 ubox
22 58 0.020886489 ubox
22 64 0.533744286 ubox
22 67 0.030403418 ubox
22 68 0.004465455 ubox
23 28 0.710903586 ubox
23 31 0.164703044 ubox
23 37 0.167902823 ubox
23 42 0.151884383 ubox
23 47 0.022121963 ubox
23 57 0.020896059 ubox
23 63 0.533739875 ubox
28 32 0.025916525 ubox
28 38 0.260124174 ubox
28 43 0.368294892 ubox
28 45 0.012891796 ubox
28 51 0.003332188 ubox
28 58 0.336304309 ubox
28 64 0.015864942 ubox
28 67 0.010202862 ubox
29 37 0.260273215 ubox
29 42 0.368550308 ubox
29 47 0.008698706 ubox
29 57 0.336393369 ubox
29 63 0.015881234 ubox
30 53 0.012835111 ubox
31 38 0.821403142 ubox
31 43 0.282769760 ubox
31 45 0.011008335 ubox
31 51 0.010844466 ubox
31 53 0.008350556 ubox
31 54 0.031342934 ubox
31 58 0.043268252 ubox
31 64 0.071459462 ubox
31 67 0.003474631 ubox
32 37 0.821016718 ubox
32 42 0.282869392 ubox
32 47 0.018630368 ubox
32 57 0.043292639 ubox
32 63 0.071434519 ubox
33 53 0.013870922 ubox
34 53 0.007011256 ubox
35 53 0.004978261 ubox
36 53 0.007174078 ubox
37 43 0.232486011 ubox
37 45 0.022231920 ubox
37 51 0.014066101 ubox
37 54 0.006006356 ubox
37 58 0.078033549 ubox
37 64 0.113628537 ubox
38 42 0.231053435 ubox
38 47 0.087953341 ubox
38 57 0.078068632 ubox
38 63 0.113610234 ubox
39 53 0.007356281 ubox
40 53 0.017217742 ubox
41 53 0.019828899 ubox
42 51 0.106118383 ubox
42 53 0.008456371 ubox
42 54 0.031770373 ubox
42 58 0.387920420 ubox
42 64 0.110248336 ubox
42 67 0.004659942 ubox
43 47 0.040240888 ubox
43 57 0.387833751 ubox
43 63 0.110258202 ubox
44 53 0.029097719 ubox
45 57 0.043672896 ubox
45 63 0.007928369 ubox
46 53 0.073226123 ubox
47 51 0.066978638 ubox
47 53 0.024554878 ubox
47 54 0.599373538 ubox
47 58 0.042643914 ubox
47 64 0.009617759 ubox
47 67 0.005744966 ubox
48 53 0.548418265 ubox
49 53 0.022474930 ubox
51 57 0.064594223 ubox
51 63 0.011747391 ubox
51 71 0.004589104 ubox
52 69 0.003292772 ubox
53 57 0.007121079 ubox
53 59 0.010591004 ubox
53 60 0.014626111 ubox
53 61 0.009290162 ubox
53 62 0.013818142 ubox
53 65 0.011336979 ubox
53 66 0.015463220 ubox
54 63 0.017489711 ubox
55 69 0.003838829 ubox
55 74 0.004484341 ubox
55 75 0.005205263 ubox
55 76 0.026332528 ubox
55 77 0.004695845 ubox
56 69 0.014708230 ubox
56 74 0.005824170 ubox
56 75 0.030824536 ubox
56 76 0.004874675 ubox
56 77 0.004080912 ubox
57 64 0.757135856 ubox
57 67 0.011255989 ubox
57 68 0.014110265 ubox
57 72 0.047165147 ubox
57 74 0.033517150 ubox
57 75 0.004152807 ubox
57 76 0.003891998 ubox
57 77 0.005532224 ubox
57 78 0.055606113 ubox
58 63 0.756876180 ubox
58 71 0.047809137 ubox
58 73 0.033895189 ubox
58 79 0.024745843 ubox
59 69 0.005773726 ubox
59 75 0.010949160 ubox
59 76 0.049918300 ubox
59 77 0.059496795 ubox
60 69 0.017413935 ubox
60 74 0.012281569 ubox
60 75 0.055541407 ubox
60 76 0.064158641 ubox
60 77 0.065679110 ubox
61 69 0.004777859 ubox
61 74 0.048916934 ubox
61 75 0.064824810 ubox
61 76 0.072923610 ubox
61 77 0.003523308 ubox
62 69 0.038376067 ubox
62 74 0.060555982 ubox
62 75 0.074831949 ubox
62 76 0.003498354 ubox
63 67 0.015764642 ubox
63 68 0.039131638 ubox
63 69 0.003315367 ubox
63 72 0.146771055 ubox
63 74 0.076018874 ubox
64 71 0.147881470 ubox
64 73 0.076329337 ubox
65 69 0.010663722 ubox
65 75 0.026905923 ubox
66 74 0.034675518 ubox
66 75 0.003420222 ubox
67 71 0.022043141 ubox
67 73 0.036331901 ubox
68 73 0.014541223 ubox
71 78 0.004852467 ubox
72 79 0.026914132 ubox
73 78 0.031769636 ubox
7 78 0.9500000 lbox
8 77 0.9500000 lbox
9 76 0.9500000 lbox
10 75 0.9500000 lbox
11 74 0.9500000 lbox
12 73 0.9500000 lbox
13 72 0.9500000 lbox
15 71 0.9500000 lbox
16 70 0.9500000 lbox
17 69 0.9500000 lbox
18 68 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
57 64 0.9500000 lbox
58 63 0.9500000 lbox
showpage
end
%%EOF
