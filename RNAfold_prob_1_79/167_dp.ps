%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (167)
} def

/sequence { (\
GGAAAAAACCACAGCAGGCCGAGUCAAAGGACGAAAGUACCGGAGUCAGGGCGAGCUGGAGGAAAAAACUGGGCAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.025471515 ubox
1 10 0.328614948 ubox
1 69 0.147402209 ubox
1 70 0.222407252 ubox
1 74 0.033602002 ubox
1 78 0.139380505 ubox
2 9 0.327736932 ubox
2 10 0.015125372 ubox
2 69 0.235003321 ubox
2 70 0.014228353 ubox
2 74 0.015583913 ubox
2 76 0.003756932 ubox
2 77 0.137155184 ubox
2 78 0.345234429 ubox
3 70 0.013301254 ubox
3 76 0.130896058 ubox
3 77 0.343706854 ubox
4 70 0.010406634 ubox
4 76 0.320172803 ubox
4 77 0.038730242 ubox
5 70 0.009554662 ubox
5 76 0.046477640 ubox
5 77 0.022828714 ubox
6 70 0.006666487 ubox
6 76 0.026200812 ubox
6 77 0.011673094 ubox
7 70 0.007155707 ubox
7 76 0.012182873 ubox
7 77 0.009679720 ubox
8 70 0.018301703 ubox
8 76 0.010509394 ubox
8 77 0.003766569 ubox
9 59 0.034698124 ubox
9 61 0.299610075 ubox
9 62 0.768217796 ubox
9 71 0.016314964 ubox
9 72 0.384783827 ubox
9 73 0.067926696 ubox
10 58 0.032515268 ubox
10 59 0.134279237 ubox
10 61 0.771180453 ubox
10 62 0.021110673 ubox
10 71 0.384839414 ubox
10 72 0.067608955 ubox
11 57 0.022191256 ubox
11 70 0.335307362 ubox
12 58 0.997675250 ubox
12 59 0.040346953 ubox
12 61 0.005424558 ubox
12 62 0.003313024 ubox
12 71 0.005956125 ubox
13 57 0.999225078 ubox
13 70 0.004338020 ubox
14 56 0.999887550 ubox
14 69 0.003504043 ubox
15 55 0.999583634 ubox
15 58 0.004216429 ubox
16 57 0.004221327 ubox
17 52 0.296790839 ubox
17 56 0.004196931 ubox
18 52 0.954448375 ubox
18 74 0.006697354 ubox
19 49 0.003984414 ubox
19 50 0.315103096 ubox
19 51 0.948997440 ubox
19 73 0.006716759 ubox
20 49 0.331414435 ubox
20 50 0.940464990 ubox
20 72 0.006715762 ubox
21 46 0.003978061 ubox
21 47 0.787280043 ubox
22 46 0.790420987 ubox
22 70 0.006662373 ubox
23 32 0.014657325 ubox
23 46 0.017436432 ubox
23 47 0.546052887 ubox
23 69 0.006664385 ubox
24 31 0.014717615 ubox
24 43 0.018572764 ubox
24 44 0.795596575 ubox
24 45 0.034591754 ubox
24 48 0.003569828 ubox
24 68 0.006246757 ubox
25 30 0.014716787 ubox
25 42 0.026014683 ubox
25 43 0.794929298 ubox
25 45 0.468430156 ubox
26 46 0.010464444 ubox
29 38 0.008873563 ubox
29 40 0.097794578 ubox
29 41 0.973816023 ubox
30 38 0.021359119 ubox
30 40 0.974086399 ubox
30 41 0.007452554 ubox
30 47 0.014242074 ubox
31 38 0.988454871 ubox
31 46 0.014283264 ubox
32 37 0.993472461 ubox
32 42 0.015015903 ubox
32 45 0.014263517 ubox
33 38 0.008871017 ubox
33 41 0.015086493 ubox
33 47 0.003301439 ubox
34 38 0.005461331 ubox
34 46 0.003162504 ubox
37 41 0.003729507 ubox
37 47 0.003321425 ubox
39 46 0.004169292 ubox
40 45 0.004353992 ubox
41 49 0.004300395 ubox
42 47 0.004508847 ubox
46 59 0.004499117 ubox
47 58 0.005671863 ubox
48 57 0.005699825 ubox
49 56 0.005695219 ubox
53 78 0.004956436 ubox
54 77 0.004693396 ubox
55 74 0.010701047 ubox
56 73 0.010712821 ubox
57 72 0.010569454 ubox
58 69 0.005009594 ubox
58 70 0.003181936 ubox
58 74 0.004915192 ubox
58 78 0.008851525 ubox
59 69 0.022150559 ubox
59 70 0.011056309 ubox
59 74 0.023471507 ubox
59 76 0.006128052 ubox
59 77 0.015977756 ubox
59 78 0.118513159 ubox
60 70 0.252037241 ubox
60 76 0.016973537 ubox
60 77 0.117764202 ubox
61 69 0.269607506 ubox
61 70 0.077583055 ubox
61 74 0.033210242 ubox
61 76 0.107717770 ubox
61 78 0.052741030 ubox
62 69 0.094579588 ubox
62 70 0.008268494 ubox
62 74 0.051255792 ubox
62 76 0.003175041 ubox
62 77 0.052055240 ubox
62 78 0.138972353 ubox
63 70 0.032545772 ubox
63 76 0.049493554 ubox
63 77 0.138247276 ubox
64 70 0.026823601 ubox
64 76 0.124530062 ubox
64 77 0.015690710 ubox
65 70 0.034182506 ubox
65 76 0.016705788 ubox
65 77 0.016168333 ubox
66 70 0.024226173 ubox
66 76 0.016733056 ubox
66 77 0.029292482 ubox
67 76 0.032047755 ubox
67 77 0.018125890 ubox
68 76 0.018352168 ubox
68 77 0.012870192 ubox
69 73 0.029762256 ubox
69 79 0.034784276 ubox
70 75 0.016666656 ubox
70 79 0.123545850 ubox
71 76 0.021473280 ubox
71 77 0.018497693 ubox
71 78 0.232591183 ubox
72 76 0.015453334 ubox
72 77 0.183690472 ubox
72 78 0.134791676 ubox
73 77 0.087832935 ubox
73 78 0.050195813 ubox
74 79 0.036332188 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
18 52 0.9500000 lbox
19 51 0.9500000 lbox
20 50 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
showpage
end
%%EOF
