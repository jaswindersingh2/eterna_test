%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (664)
} def

/sequence { (\
GGAAAGAAGAAGAAGAAAAAAAAAAACUUCAACAUCAAAAAAAAAAAGAUGAACUUCAAAAAAAAAAAAGAUAGAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 27 0.004410890 ubox
1 30 0.014979333 ubox
1 33 0.018831479 ubox
1 35 0.003722273 ubox
1 36 0.029266602 ubox
1 54 0.017042771 ubox
1 55 0.016991140 ubox
1 56 0.003511730 ubox
1 57 0.110570420 ubox
1 72 0.003227168 ubox
1 78 0.110432738 ubox
2 29 0.014480558 ubox
2 30 0.022186039 ubox
2 33 0.010547438 ubox
2 35 0.027155859 ubox
2 36 0.046181211 ubox
2 54 0.019528707 ubox
2 55 0.004462430 ubox
2 56 0.107105148 ubox
2 57 0.151159002 ubox
2 77 0.106933110 ubox
2 78 0.159174907 ubox
3 28 0.013558620 ubox
3 29 0.020694627 ubox
3 35 0.045098432 ubox
3 55 0.100352113 ubox
3 56 0.144003394 ubox
3 72 0.004064544 ubox
3 76 0.099174133 ubox
3 77 0.157208483 ubox
4 28 0.017660654 ubox
4 29 0.012915009 ubox
4 35 0.007582323 ubox
4 55 0.124908995 ubox
4 56 0.067787376 ubox
4 72 0.005133050 ubox
4 76 0.137029567 ubox
4 77 0.011468259 ubox
5 28 0.016102430 ubox
5 35 0.007107487 ubox
5 55 0.085363536 ubox
5 56 0.005827602 ubox
5 72 0.009038088 ubox
5 76 0.013238238 ubox
5 77 0.004891532 ubox
6 27 0.017995796 ubox
6 30 0.230166423 ubox
6 33 0.046025200 ubox
6 36 0.147662883 ubox
6 54 0.096138330 ubox
6 55 0.005982891 ubox
6 56 0.009130272 ubox
6 57 0.806398443 ubox
6 72 0.004674924 ubox
6 76 0.003828805 ubox
6 77 0.007921333 ubox
6 78 0.113331997 ubox
7 29 0.230359472 ubox
7 35 0.145233016 ubox
7 55 0.009376402 ubox
7 56 0.806928865 ubox
7 72 0.012452859 ubox
7 76 0.008258273 ubox
7 77 0.111945569 ubox
8 28 0.230105016 ubox
8 35 0.010555506 ubox
8 55 0.805217235 ubox
8 56 0.006145448 ubox
8 72 0.008533448 ubox
8 76 0.097622188 ubox
8 77 0.004820114 ubox
9 27 0.229019913 ubox
9 30 0.298600328 ubox
9 33 0.131528751 ubox
9 36 0.031930477 ubox
9 54 0.797772071 ubox
9 55 0.006199686 ubox
9 56 0.006757922 ubox
9 57 0.166719794 ubox
9 72 0.003271668 ubox
9 76 0.003651887 ubox
9 77 0.006210368 ubox
9 78 0.088298157 ubox
10 29 0.300431866 ubox
10 35 0.031236293 ubox
10 55 0.007328214 ubox
10 56 0.166269932 ubox
10 72 0.005891907 ubox
10 76 0.006551617 ubox
10 77 0.087216446 ubox
11 28 0.300485131 ubox
11 29 0.003928868 ubox
11 50 0.004435631 ubox
11 55 0.160637105 ubox
11 72 0.007378896 ubox
11 76 0.075892416 ubox
12 27 0.299121737 ubox
12 28 0.003979438 ubox
12 29 0.006883070 ubox
12 30 0.893921057 ubox
12 33 0.018836614 ubox
12 36 0.006813123 ubox
12 54 0.133453491 ubox
12 57 0.083519712 ubox
12 78 0.014730036 ubox
13 28 0.007005391 ubox
13 29 0.895528845 ubox
13 35 0.006592740 ubox
13 50 0.003557012 ubox
13 56 0.083567544 ubox
13 77 0.014532498 ubox
14 28 0.895029854 ubox
14 29 0.006760324 ubox
14 50 0.004683111 ubox
14 55 0.083322844 ubox
14 76 0.012697330 ubox
15 27 0.891584783 ubox
15 28 0.007344523 ubox
15 29 0.009676157 ubox
15 30 0.158104177 ubox
15 33 0.004399972 ubox
15 36 0.005315273 ubox
15 54 0.082226453 ubox
15 57 0.009123624 ubox
15 78 0.008618348 ubox
16 28 0.010718850 ubox
16 29 0.157209289 ubox
16 35 0.005070167 ubox
16 50 0.003890803 ubox
16 56 0.009063227 ubox
16 77 0.008497432 ubox
17 28 0.145177383 ubox
17 29 0.012853685 ubox
17 55 0.008279998 ubox
17 76 0.007387295 ubox
18 28 0.014686435 ubox
18 29 0.020217759 ubox
19 28 0.023268047 ubox
19 29 0.013951676 ubox
19 50 0.004201576 ubox
20 28 0.015044372 ubox
20 29 0.023194115 ubox
21 28 0.023960997 ubox
21 29 0.017719576 ubox
22 28 0.018600684 ubox
22 29 0.020656149 ubox
23 28 0.020106123 ubox
23 29 0.012281448 ubox
24 28 0.010460005 ubox
24 29 0.008618559 ubox
25 29 0.004501926 ubox
25 56 0.008541648 ubox
26 55 0.009137484 ubox
27 48 0.006732903 ubox
27 51 0.004280590 ubox
27 70 0.004226181 ubox
27 74 0.004142043 ubox
28 32 0.004500764 ubox
28 38 0.003567537 ubox
28 39 0.004275287 ubox
28 47 0.006701296 ubox
28 52 0.003495933 ubox
28 53 0.064246142 ubox
28 59 0.003695427 ubox
28 69 0.004204466 ubox
28 73 0.004000585 ubox
29 37 0.003426067 ubox
29 38 0.004419258 ubox
29 46 0.006127177 ubox
29 49 0.007352693 ubox
29 52 0.066706372 ubox
29 53 0.012264936 ubox
29 58 0.003847852 ubox
29 68 0.003801068 ubox
29 71 0.003844476 ubox
29 75 0.005085752 ubox
30 48 0.007618416 ubox
30 51 0.065142206 ubox
30 70 0.004002399 ubox
30 74 0.005395284 ubox
31 50 0.059871638 ubox
31 55 0.017046170 ubox
31 56 0.021278301 ubox
31 77 0.004440098 ubox
32 50 0.004409308 ubox
32 55 0.023475248 ubox
32 56 0.007384898 ubox
32 76 0.004812763 ubox
33 48 0.040875110 ubox
33 51 0.951473431 ubox
33 74 0.013621237 ubox
34 50 0.956304251 ubox
34 72 0.031191206 ubox
34 76 0.013558108 ubox
35 39 0.003544880 ubox
35 40 0.005368802 ubox
35 41 0.004922094 ubox
35 42 0.006338349 ubox
35 43 0.004020276 ubox
35 44 0.007241571 ubox
35 45 0.003885684 ubox
35 46 0.008328793 ubox
35 47 0.006867313 ubox
35 48 0.003570782 ubox
35 49 0.957519905 ubox
35 52 0.078175502 ubox
35 53 0.003361604 ubox
35 71 0.032724278 ubox
35 75 0.014897559 ubox
36 48 0.957046696 ubox
36 51 0.083539879 ubox
36 70 0.032937428 ubox
36 74 0.015118152 ubox
37 50 0.077225490 ubox
38 50 0.004954688 ubox
39 50 0.003517795 ubox
40 50 0.003711757 ubox
41 50 0.007583538 ubox
42 50 0.005027457 ubox
43 50 0.008183954 ubox
43 56 0.003187968 ubox
44 50 0.006406073 ubox
44 55 0.003200199 ubox
44 56 0.003563511 ubox
45 50 0.006946898 ubox
45 55 0.003494443 ubox
45 56 0.007215298 ubox
46 50 0.004268397 ubox
46 55 0.007524850 ubox
46 56 0.048527874 ubox
46 77 0.005093633 ubox
47 55 0.054298593 ubox
47 56 0.006340249 ubox
47 76 0.005619052 ubox
48 54 0.054982166 ubox
48 55 0.006455494 ubox
48 56 0.006774164 ubox
48 57 0.120898886 ubox
48 77 0.017077374 ubox
48 78 0.030002599 ubox
49 55 0.007169598 ubox
49 56 0.119368476 ubox
49 72 0.006213175 ubox
49 76 0.018810410 ubox
49 77 0.029234573 ubox
50 58 0.072604557 ubox
50 59 0.008392649 ubox
50 60 0.003952987 ubox
50 61 0.003475259 ubox
50 71 0.006370783 ubox
50 73 0.005662651 ubox
50 74 0.003835309 ubox
50 75 0.019416488 ubox
50 79 0.093102609 ubox
51 57 0.081343335 ubox
51 72 0.005381241 ubox
51 77 0.009860046 ubox
51 78 0.154409778 ubox
52 56 0.070987531 ubox
52 72 0.023408579 ubox
52 76 0.016784352 ubox
52 77 0.155107650 ubox
53 72 0.018079582 ubox
53 76 0.152010302 ubox
53 77 0.004424982 ubox
54 70 0.094647493 ubox
54 74 0.169509101 ubox
54 79 0.005687206 ubox
55 59 0.007013123 ubox
55 60 0.010521705 ubox
55 61 0.017492750 ubox
55 62 0.025109115 ubox
55 63 0.021545032 ubox
55 64 0.028136871 ubox
55 65 0.016783865 ubox
55 66 0.024336244 ubox
55 67 0.012472829 ubox
55 68 0.012353766 ubox
55 69 0.094332811 ubox
55 70 0.007864354 ubox
55 71 0.010991466 ubox
55 73 0.163487608 ubox
55 74 0.015702165 ubox
55 75 0.014178067 ubox
56 60 0.016222395 ubox
56 61 0.024345873 ubox
56 62 0.022457481 ubox
56 63 0.028697877 ubox
56 64 0.017688326 ubox
56 65 0.026718880 ubox
56 66 0.013024124 ubox
56 67 0.013312578 ubox
56 68 0.087268146 ubox
56 69 0.008747716 ubox
56 70 0.011084942 ubox
56 71 0.160551218 ubox
56 73 0.012196511 ubox
56 74 0.012908855 ubox
56 75 0.064162930 ubox
57 70 0.166195917 ubox
57 74 0.068078390 ubox
57 79 0.004202912 ubox
58 72 0.011309273 ubox
58 76 0.003829965 ubox
58 77 0.009473759 ubox
59 72 0.014881620 ubox
59 76 0.009566203 ubox
59 77 0.010963772 ubox
60 72 0.009633820 ubox
60 76 0.011044475 ubox
60 77 0.011167189 ubox
61 72 0.010293963 ubox
61 76 0.011119304 ubox
61 77 0.011992481 ubox
62 72 0.010580794 ubox
62 76 0.011923994 ubox
62 77 0.012756343 ubox
63 72 0.021950365 ubox
63 76 0.012877615 ubox
63 77 0.013692190 ubox
64 72 0.014639510 ubox
64 76 0.013805846 ubox
64 77 0.014755248 ubox
65 72 0.023833053 ubox
65 76 0.014855672 ubox
65 77 0.015979771 ubox
66 72 0.018684519 ubox
66 76 0.016038451 ubox
66 77 0.030573814 ubox
67 72 0.020268817 ubox
67 76 0.033174397 ubox
67 77 0.021544841 ubox
68 72 0.012454753 ubox
68 76 0.022112688 ubox
68 77 0.068705924 ubox
69 76 0.074673187 ubox
69 77 0.017295491 ubox
70 76 0.015648401 ubox
70 77 0.036901355 ubox
70 78 0.468434132 ubox
71 76 0.035489076 ubox
71 77 0.464327165 ubox
72 79 0.011238105 ubox
73 77 0.007100810 ubox
74 78 0.032110591 ubox
6 57 0.9500000 lbox
7 56 0.9500000 lbox
8 55 0.9500000 lbox
9 54 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
showpage
end
%%EOF
