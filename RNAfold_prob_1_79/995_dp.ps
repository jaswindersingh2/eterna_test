%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (995)
} def

/sequence { (\
GGAAACGGCCAGGCCAACCUCAAAGAGGAAGCAUCAAAGAUGCACGGAGAAACUCCACGCGAAACGCAAGCCUCGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.124419762 ubox
1 9 0.006672434 ubox
1 10 0.142228907 ubox
1 15 0.004141891 ubox
1 19 0.026461642 ubox
1 20 0.004087829 ubox
1 21 0.012022029 ubox
1 45 0.003268178 ubox
1 56 0.007057749 ubox
1 58 0.006670408 ubox
1 72 0.046649011 ubox
1 73 0.005903213 ubox
1 74 0.013247712 ubox
1 77 0.004603862 ubox
1 78 0.191339053 ubox
2 6 0.017851636 ubox
2 9 0.141969230 ubox
2 10 0.005551030 ubox
2 14 0.004134790 ubox
2 18 0.026470895 ubox
2 19 0.005403160 ubox
2 20 0.010720348 ubox
2 21 0.012859441 ubox
2 55 0.007055581 ubox
2 58 0.004153431 ubox
2 71 0.046568397 ubox
2 72 0.007808723 ubox
2 73 0.010596953 ubox
2 74 0.025042030 ubox
2 76 0.003617527 ubox
2 77 0.160715650 ubox
2 78 0.634706982 ubox
3 20 0.012647141 ubox
3 54 0.006687835 ubox
3 73 0.024165444 ubox
3 76 0.121820973 ubox
3 77 0.524417160 ubox
4 76 0.365858921 ubox
4 77 0.507362636 ubox
5 73 0.010624486 ubox
5 76 0.651612449 ubox
5 77 0.013522859 ubox
6 12 0.003294934 ubox
6 70 0.010311103 ubox
6 75 0.749998291 ubox
6 79 0.459464046 ubox
7 15 0.105650300 ubox
7 72 0.119447434 ubox
7 73 0.005094797 ubox
7 74 0.745152064 ubox
7 76 0.013260180 ubox
7 77 0.298740150 ubox
7 78 0.480809300 ubox
8 14 0.106768044 ubox
8 71 0.121009378 ubox
8 72 0.014308595 ubox
8 73 0.386547860 ubox
8 74 0.052326989 ubox
8 76 0.481170421 ubox
8 77 0.369879110 ubox
8 78 0.016014091 ubox
9 13 0.106009624 ubox
9 70 0.120388542 ubox
9 75 0.568889305 ubox
10 70 0.016045434 ubox
10 75 0.228669881 ubox
11 20 0.024476768 ubox
11 73 0.894096402 ubox
12 18 0.004506180 ubox
12 19 0.026735611 ubox
12 65 0.003622892 ubox
12 67 0.010284868 ubox
12 71 0.004920424 ubox
12 72 0.985977352 ubox
12 73 0.004383749 ubox
13 18 0.026617001 ubox
13 60 0.006333868 ubox
13 65 0.004530465 ubox
13 67 0.037271956 ubox
13 71 0.986116534 ubox
13 72 0.004410717 ubox
14 28 0.006057704 ubox
14 59 0.006324093 ubox
14 66 0.037255262 ubox
14 70 0.981475739 ubox
15 25 0.003711048 ubox
15 27 0.007016255 ubox
15 28 0.009480618 ubox
15 31 0.011668519 ubox
15 59 0.003194010 ubox
15 61 0.004417261 ubox
15 66 0.011113878 ubox
15 70 0.067550895 ubox
16 77 0.003949241 ubox
17 76 0.004392895 ubox
18 25 0.006934184 ubox
18 27 0.010350710 ubox
18 28 0.992606518 ubox
18 75 0.004390154 ubox
19 25 0.012936362 ubox
19 27 0.997202178 ubox
19 28 0.017721169 ubox
20 24 0.011773947 ubox
20 25 0.006643785 ubox
20 26 0.996466384 ubox
20 27 0.015914651 ubox
20 28 0.009900105 ubox
20 29 0.024145595 ubox
21 25 0.988106090 ubox
21 27 0.013188857 ubox
21 28 0.025674088 ubox
21 79 0.006030400 ubox
22 76 0.003470630 ubox
22 77 0.015191259 ubox
23 76 0.014545298 ubox
23 77 0.010235067 ubox
24 76 0.010473878 ubox
25 74 0.053919727 ubox
26 73 0.054020126 ubox
27 45 0.005039005 ubox
27 72 0.054041155 ubox
28 45 0.014540657 ubox
28 71 0.053848937 ubox
31 43 0.998802243 ubox
31 45 0.006138028 ubox
32 42 0.999925074 ubox
33 41 0.999420535 ubox
34 39 0.008311431 ubox
34 40 0.998799468 ubox
35 39 0.990511643 ubox
42 60 0.004376402 ubox
43 59 0.004442079 ubox
45 59 0.014705621 ubox
45 61 0.005144506 ubox
46 53 0.012811483 ubox
46 54 0.005930309 ubox
46 55 0.008060305 ubox
46 56 0.998229098 ubox
46 58 0.022993789 ubox
46 60 0.003266913 ubox
47 53 0.006561401 ubox
47 54 0.006547354 ubox
47 55 0.999304142 ubox
47 56 0.010698211 ubox
47 58 0.004178160 ubox
48 54 0.997786277 ubox
49 53 0.975826902 ubox
49 54 0.005193657 ubox
49 55 0.021584943 ubox
49 56 0.007648971 ubox
49 58 0.003735886 ubox
50 54 0.018829622 ubox
57 76 0.004858531 ubox
58 66 0.082235921 ubox
58 70 0.009210854 ubox
58 75 0.005896313 ubox
58 79 0.003247579 ubox
59 65 0.083079005 ubox
59 67 0.988490720 ubox
59 71 0.019740776 ubox
59 74 0.005582835 ubox
59 76 0.035983203 ubox
60 66 0.989454847 ubox
60 70 0.019893818 ubox
60 75 0.041021398 ubox
60 79 0.012545556 ubox
61 65 0.925677330 ubox
61 67 0.019094966 ubox
61 72 0.005239667 ubox
61 74 0.041395547 ubox
61 78 0.013762138 ubox
62 73 0.040923718 ubox
62 77 0.011316292 ubox
63 76 0.008038432 ubox
63 77 0.008869193 ubox
64 76 0.012213528 ubox
65 70 0.037673905 ubox
65 75 0.014646843 ubox
66 71 0.005089102 ubox
66 74 0.014331148 ubox
68 73 0.006261480 ubox
69 77 0.003800939 ubox
70 74 0.004839473 ubox
70 76 0.006163154 ubox
71 75 0.006661038 ubox
74 79 0.006616591 ubox
4 77 0.9500000 lbox
5 76 0.9500000 lbox
6 75 0.9500000 lbox
7 74 0.9500000 lbox
11 73 0.9500000 lbox
12 72 0.9500000 lbox
13 71 0.9500000 lbox
14 70 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
showpage
end
%%EOF
