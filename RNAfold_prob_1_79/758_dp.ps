%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (758)
} def

/sequence { (\
GGAAAGUGGCGGCAAAGGCGGCACAAGCUGGCGAGAAAAUGGCGAGCAGACGUGGCGAAAGGCAGGUCGGAGGACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.003647708 ubox
1 10 0.006267914 ubox
1 24 0.006277681 ubox
1 51 0.005921558 ubox
1 68 0.005707773 ubox
1 75 0.050494268 ubox
1 76 0.050560425 ubox
1 77 0.011876390 ubox
1 78 0.372670408 ubox
2 24 0.013043594 ubox
2 28 0.003246280 ubox
2 51 0.003676654 ubox
2 68 0.006508325 ubox
2 75 0.057942292 ubox
2 76 0.014901422 ubox
2 77 0.360887702 ubox
2 78 0.579944505 ubox
3 67 0.004381871 ubox
3 76 0.337109727 ubox
3 77 0.557521805 ubox
4 76 0.484598677 ubox
4 77 0.203819545 ubox
5 76 0.261043432 ubox
5 77 0.012467799 ubox
6 13 0.004206488 ubox
6 22 0.117714780 ubox
6 24 0.906284266 ubox
6 56 0.004720153 ubox
6 75 0.297514778 ubox
6 76 0.005923718 ubox
6 78 0.010582276 ubox
7 12 0.004160740 ubox
7 20 0.005432189 ubox
7 21 0.117594921 ubox
7 23 0.905583465 ubox
7 25 0.220179426 ubox
7 26 0.011397006 ubox
7 55 0.004711420 ubox
7 69 0.014931024 ubox
7 70 0.003495882 ubox
7 71 0.008170082 ubox
7 72 0.007639192 ubox
7 73 0.015231274 ubox
7 74 0.278996499 ubox
7 79 0.007841083 ubox
8 13 0.003323095 ubox
8 19 0.008915873 ubox
8 22 0.879236524 ubox
8 24 0.292494250 ubox
8 63 0.003730236 ubox
8 68 0.019353379 ubox
8 75 0.011663896 ubox
8 78 0.012979272 ubox
9 19 0.119421713 ubox
9 22 0.458823107 ubox
9 24 0.004821322 ubox
9 53 0.004670090 ubox
9 63 0.007768486 ubox
9 67 0.019342495 ubox
10 17 0.012253073 ubox
10 18 0.119148758 ubox
10 20 0.849443406 ubox
10 21 0.510412690 ubox
10 52 0.004676027 ubox
10 61 0.003670545 ubox
10 62 0.007794952 ubox
10 65 0.003756199 ubox
10 66 0.019299661 ubox
10 69 0.020384025 ubox
11 19 0.823878177 ubox
11 22 0.005827088 ubox
11 24 0.003357720 ubox
11 51 0.004623593 ubox
11 63 0.006063725 ubox
11 68 0.020163631 ubox
11 78 0.003262919 ubox
12 19 0.551508836 ubox
12 22 0.006462918 ubox
12 63 0.029821198 ubox
12 67 0.019950793 ubox
13 17 0.694326301 ubox
13 18 0.587824517 ubox
13 20 0.005916376 ubox
13 21 0.006459444 ubox
13 61 0.006105764 ubox
13 62 0.029854287 ubox
13 66 0.019924933 ubox
17 32 0.003751454 ubox
18 56 0.019199991 ubox
18 63 0.005706540 ubox
19 30 0.003967751 ubox
19 55 0.019222109 ubox
19 57 0.032581193 ubox
19 62 0.005242324 ubox
20 29 0.004062133 ubox
20 56 0.033296230 ubox
21 28 0.004093220 ubox
21 53 0.019123614 ubox
22 27 0.004093269 ubox
22 52 0.019121956 ubox
22 54 0.033483420 ubox
23 53 0.033629997 ubox
24 49 0.004638823 ubox
24 52 0.033560590 ubox
24 69 0.010155682 ubox
24 70 0.005914063 ubox
24 72 0.009624296 ubox
24 73 0.005856888 ubox
24 79 0.005238092 ubox
25 76 0.004538588 ubox
25 77 0.011229765 ubox
26 76 0.011607983 ubox
26 77 0.005258473 ubox
27 47 0.998486625 ubox
27 75 0.004977453 ubox
28 46 0.999929098 ubox
29 44 0.011283587 ubox
29 45 0.996640792 ubox
30 43 0.022454197 ubox
31 43 0.999590909 ubox
32 41 0.034360504 ubox
32 42 0.999243659 ubox
33 40 0.027810646 ubox
34 40 0.899951919 ubox
35 40 0.021584579 ubox
36 40 0.008198095 ubox
47 69 0.013313820 ubox
47 70 0.024295179 ubox
47 72 0.006114747 ubox
48 53 0.005176138 ubox
48 76 0.004773727 ubox
49 56 0.003569877 ubox
49 63 0.008431758 ubox
49 67 0.004019755 ubox
49 68 0.989852049 ubox
49 75 0.003750858 ubox
49 78 0.009255903 ubox
50 67 0.992084077 ubox
50 77 0.008210216 ubox
51 57 0.007017511 ubox
51 61 0.004926626 ubox
51 62 0.011430650 ubox
51 65 0.022955154 ubox
51 66 0.992210869 ubox
51 69 0.006746161 ubox
51 79 0.007570253 ubox
52 56 0.006695832 ubox
52 63 0.018059708 ubox
52 68 0.006795655 ubox
52 75 0.004809567 ubox
52 78 0.007682590 ubox
53 60 0.011211178 ubox
53 62 0.018015499 ubox
53 64 0.991817526 ubox
53 65 0.014291785 ubox
53 69 0.004688334 ubox
53 74 0.004758546 ubox
54 63 0.987833276 ubox
54 68 0.006057117 ubox
54 78 0.004585110 ubox
55 63 0.143856134 ubox
55 67 0.006083124 ubox
56 61 0.970545888 ubox
56 62 0.180162124 ubox
56 66 0.006077627 ubox
56 69 0.005649680 ubox
56 79 0.007969336 ubox
57 68 0.005671091 ubox
57 78 0.008663186 ubox
58 67 0.005589119 ubox
58 77 0.008239403 ubox
59 76 0.004119815 ubox
61 78 0.006692874 ubox
62 77 0.005116320 ubox
62 78 0.019590696 ubox
63 79 0.005246274 ubox
64 76 0.003978133 ubox
64 77 0.072916876 ubox
65 75 0.003704788 ubox
65 76 0.105251092 ubox
66 75 0.117113090 ubox
67 74 0.118061415 ubox
68 72 0.004019790 ubox
68 73 0.119847810 ubox
68 79 0.039500436 ubox
69 75 0.299513113 ubox
69 76 0.114099776 ubox
69 77 0.015746929 ubox
69 78 0.307997272 ubox
70 75 0.136109445 ubox
70 76 0.018917140 ubox
70 77 0.301281055 ubox
70 78 0.275221861 ubox
71 76 0.279498514 ubox
71 77 0.270910150 ubox
72 76 0.183923760 ubox
72 77 0.011743878 ubox
72 78 0.071268121 ubox
73 77 0.046511237 ubox
73 78 0.069264503 ubox
75 79 0.009885260 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
showpage
end
%%EOF
