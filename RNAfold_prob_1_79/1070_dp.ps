%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1070)
} def

/sequence { (\
GGAAAAAAGAUGACAACAGAUAAUCAAAGAUAUAUCAAAAGUACACUGAAACAGGUACAGUUGACAUCACUCGCGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.006884217 ubox
1 17 0.004124604 ubox
1 70 0.008552691 ubox
1 71 0.014207736 ubox
1 72 0.043119853 ubox
1 74 0.136907883 ubox
1 76 0.020740269 ubox
1 77 0.018033788 ubox
1 78 0.421713056 ubox
2 25 0.004672237 ubox
2 68 0.004753571 ubox
2 70 0.018809036 ubox
2 71 0.037248143 ubox
2 72 0.171316361 ubox
2 74 0.124178594 ubox
2 76 0.026917814 ubox
2 77 0.420985025 ubox
2 78 0.403583505 ubox
3 24 0.004523803 ubox
3 67 0.004269745 ubox
3 71 0.167366490 ubox
3 76 0.416223895 ubox
3 77 0.403289443 ubox
4 11 0.004984088 ubox
4 71 0.042078988 ubox
4 76 0.393169982 ubox
4 77 0.021592242 ubox
5 71 0.052702137 ubox
5 76 0.027030400 ubox
5 77 0.008917506 ubox
6 71 0.121433351 ubox
6 76 0.010301694 ubox
6 77 0.005644417 ubox
7 71 0.074975224 ubox
7 76 0.005853992 ubox
7 77 0.009328159 ubox
8 21 0.006352119 ubox
8 71 0.131473991 ubox
8 76 0.010271468 ubox
8 77 0.004176751 ubox
9 14 0.003750416 ubox
9 17 0.003182710 ubox
9 25 0.034970320 ubox
9 67 0.003225273 ubox
9 68 0.982264451 ubox
9 70 0.106213518 ubox
9 71 0.012455821 ubox
9 72 0.122060913 ubox
9 74 0.004379960 ubox
9 77 0.009696000 ubox
9 78 0.007097321 ubox
10 21 0.006077992 ubox
10 24 0.034971440 ubox
10 67 0.986091752 ubox
10 71 0.119872173 ubox
10 76 0.010697346 ubox
10 77 0.006149410 ubox
11 18 0.012025609 ubox
11 20 0.006416949 ubox
11 22 0.003165837 ubox
11 23 0.034453878 ubox
11 26 0.012797491 ubox
11 66 0.987301518 ubox
11 69 0.140779100 ubox
11 73 0.005238723 ubox
11 75 0.011105078 ubox
11 79 0.003660624 ubox
12 17 0.012879818 ubox
12 21 0.004032195 ubox
12 25 0.014247662 ubox
12 62 0.004344241 ubox
12 65 0.985781135 ubox
12 67 0.003437130 ubox
12 68 0.142362850 ubox
12 70 0.004396162 ubox
12 72 0.005934564 ubox
12 74 0.011109150 ubox
12 77 0.004484618 ubox
12 78 0.005922538 ubox
13 21 0.006405532 ubox
13 24 0.013422342 ubox
13 61 0.009341352 ubox
13 67 0.140760595 ubox
13 71 0.005689798 ubox
13 76 0.005507974 ubox
13 77 0.005216378 ubox
14 19 0.016035607 ubox
14 60 0.009464727 ubox
14 63 0.994817178 ubox
14 73 0.006763677 ubox
14 75 0.005942047 ubox
15 62 0.996130490 ubox
15 77 0.004691224 ubox
16 21 0.003826847 ubox
16 61 0.995737588 ubox
16 76 0.005895880 ubox
17 29 0.003239873 ubox
17 60 0.994775865 ubox
17 63 0.013261254 ubox
17 75 0.006004148 ubox
18 24 0.009199993 ubox
18 31 0.006574646 ubox
18 33 0.005472801 ubox
18 35 0.012300814 ubox
18 62 0.012287803 ubox
19 24 0.003478541 ubox
19 25 0.073928539 ubox
19 33 0.006264511 ubox
19 35 0.008114596 ubox
19 36 0.982878744 ubox
19 58 0.004655473 ubox
19 68 0.005793155 ubox
19 72 0.005028720 ubox
19 77 0.003905747 ubox
19 78 0.015808138 ubox
20 24 0.064398146 ubox
20 31 0.019401261 ubox
20 33 0.065617346 ubox
20 35 0.983665362 ubox
20 67 0.005738527 ubox
20 71 0.004743633 ubox
20 76 0.004261357 ubox
20 77 0.015593634 ubox
21 26 0.005717064 ubox
21 27 0.006230603 ubox
21 28 0.009492304 ubox
21 29 0.003278193 ubox
21 30 0.020152034 ubox
21 32 0.070255008 ubox
21 34 0.981538652 ubox
21 66 0.005346420 ubox
21 75 0.004247564 ubox
22 31 0.062853566 ubox
22 33 0.962145751 ubox
22 77 0.004688322 ubox
23 31 0.917386784 ubox
23 33 0.042842607 ubox
23 35 0.005215787 ubox
23 76 0.005812744 ubox
24 28 0.008682695 ubox
24 29 0.030232811 ubox
24 30 0.939012230 ubox
24 32 0.056139528 ubox
24 34 0.005374232 ubox
24 75 0.005699455 ubox
25 29 0.932148633 ubox
25 63 0.003170930 ubox
25 73 0.004384131 ubox
26 31 0.032869573 ubox
26 33 0.008695859 ubox
26 35 0.005219599 ubox
26 71 0.004766198 ubox
27 31 0.007440876 ubox
27 33 0.006578669 ubox
27 35 0.003640059 ubox
28 33 0.014019184 ubox
28 35 0.011463046 ubox
28 71 0.015639255 ubox
29 33 0.004069511 ubox
29 36 0.089819641 ubox
29 68 0.047832064 ubox
29 70 0.016592132 ubox
29 72 0.010997258 ubox
30 35 0.079706034 ubox
30 67 0.047815239 ubox
30 71 0.010888656 ubox
31 37 0.004745079 ubox
31 38 0.007124903 ubox
31 39 0.004465048 ubox
31 40 0.006714647 ubox
31 66 0.046785328 ubox
31 69 0.004116156 ubox
32 67 0.019953424 ubox
33 37 0.003804688 ubox
33 38 0.007274501 ubox
33 39 0.006604468 ubox
33 40 0.008405169 ubox
33 66 0.021137943 ubox
35 39 0.004046720 ubox
35 40 0.006035973 ubox
35 64 0.067268285 ubox
36 63 0.069626191 ubox
37 62 0.069962751 ubox
38 61 0.069246342 ubox
39 61 0.003330982 ubox
41 52 0.004014711 ubox
41 58 0.998028391 ubox
42 51 0.003988468 ubox
42 57 0.999226092 ubox
43 56 0.999297819 ubox
44 54 0.003706150 ubox
44 55 0.998103250 ubox
45 56 0.015940437 ubox
46 54 0.996121933 ubox
46 55 0.017845498 ubox
47 51 0.003681079 ubox
47 53 0.996573389 ubox
47 54 0.018787830 ubox
47 59 0.003230085 ubox
48 52 0.980743643 ubox
48 58 0.003286802 ubox
59 71 0.005809504 ubox
60 70 0.006408379 ubox
60 74 0.004717008 ubox
61 69 0.005114478 ubox
61 73 0.003592979 ubox
62 69 0.005232888 ubox
62 73 0.004905963 ubox
63 68 0.006670921 ubox
63 72 0.007040679 ubox
64 71 0.006597933 ubox
65 75 0.003446185 ubox
68 73 0.003194747 ubox
68 75 0.004001848 ubox
69 76 0.163206889 ubox
69 77 0.010434705 ubox
70 75 0.175861822 ubox
70 79 0.040048589 ubox
71 75 0.008878797 ubox
71 79 0.004736937 ubox
72 79 0.096756259 ubox
73 77 0.007083986 ubox
73 78 0.099382258 ubox
74 79 0.032134749 ubox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
showpage
end
%%EOF
