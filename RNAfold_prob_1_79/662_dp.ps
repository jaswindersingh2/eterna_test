%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (662)
} def

/sequence { (\
GGAAAGAAGACGGCCAUUCUAUCCCAGGCCCACCUCAAAUACCACACGAGGCCCUUCACGACCACAGCUAAACGAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.017662249 ubox
1 15 0.003410422 ubox
1 20 0.005819169 ubox
1 23 0.003588854 ubox
1 24 0.395103021 ubox
1 25 0.068177369 ubox
1 31 0.004801302 ubox
1 43 0.024355684 ubox
1 53 0.040199747 ubox
1 54 0.065143972 ubox
1 55 0.006829956 ubox
1 57 0.036038911 ubox
1 59 0.101343653 ubox
1 62 0.078276904 ubox
1 63 0.759918629 ubox
1 65 0.036381432 ubox
1 68 0.008222342 ubox
1 69 0.017205623 ubox
1 73 0.014937652 ubox
1 78 0.054689060 ubox
2 11 0.011541723 ubox
2 14 0.003405392 ubox
2 19 0.006175848 ubox
2 22 0.003171152 ubox
2 23 0.398196278 ubox
2 24 0.056902561 ubox
2 30 0.003480788 ubox
2 42 0.024336280 ubox
2 52 0.040275411 ubox
2 53 0.065037251 ubox
2 54 0.007864922 ubox
2 56 0.034656262 ubox
2 57 0.074587202 ubox
2 59 0.068435507 ubox
2 62 0.759370794 ubox
2 63 0.028887364 ubox
2 65 0.007881522 ubox
2 68 0.018169278 ubox
2 73 0.006765964 ubox
2 77 0.053378969 ubox
2 78 0.072491717 ubox
3 18 0.006163663 ubox
3 22 0.395232795 ubox
3 40 0.007660212 ubox
3 55 0.032439832 ubox
3 56 0.070350322 ubox
3 76 0.050277823 ubox
3 77 0.071718584 ubox
4 17 0.005858765 ubox
4 20 0.008375476 ubox
4 22 0.021066060 ubox
4 40 0.009846790 ubox
4 55 0.061404384 ubox
4 56 0.094921580 ubox
4 76 0.063113148 ubox
4 77 0.005809881 ubox
5 20 0.396035622 ubox
5 35 0.004424902 ubox
5 55 0.099252731 ubox
5 56 0.003327724 ubox
5 69 0.017513864 ubox
5 76 0.006896595 ubox
6 11 0.022853640 ubox
6 15 0.005748958 ubox
6 19 0.402687592 ubox
6 23 0.005000775 ubox
6 31 0.008902130 ubox
6 34 0.004710024 ubox
6 36 0.028725654 ubox
6 52 0.015783155 ubox
6 53 0.038170084 ubox
6 54 0.102047989 ubox
6 56 0.007119628 ubox
6 57 0.886876970 ubox
6 59 0.033645275 ubox
6 62 0.004525676 ubox
6 63 0.006188804 ubox
6 65 0.004515244 ubox
6 68 0.017794921 ubox
6 73 0.031782798 ubox
6 78 0.042013399 ubox
7 17 0.004354093 ubox
7 18 0.402303194 ubox
7 22 0.004965372 ubox
7 35 0.027196114 ubox
7 55 0.007226235 ubox
7 56 0.888338165 ubox
7 77 0.041615458 ubox
8 17 0.398973012 ubox
8 18 0.003881941 ubox
8 20 0.007995828 ubox
8 35 0.015051684 ubox
8 55 0.887827881 ubox
8 56 0.007178631 ubox
8 69 0.024047140 ubox
8 76 0.037284298 ubox
9 14 0.031086107 ubox
9 15 0.106468531 ubox
9 17 0.004225479 ubox
9 19 0.008282503 ubox
9 31 0.031162924 ubox
9 33 0.016356666 ubox
9 34 0.017323547 ubox
9 36 0.007660740 ubox
9 52 0.018364784 ubox
9 53 0.042510999 ubox
9 54 0.884255707 ubox
9 55 0.007021791 ubox
9 56 0.013092610 ubox
9 57 0.022437342 ubox
9 59 0.005987181 ubox
9 62 0.004117977 ubox
9 63 0.005933301 ubox
9 65 0.009495745 ubox
9 68 0.024584176 ubox
9 73 0.009754898 ubox
9 78 0.015317873 ubox
10 17 0.004704591 ubox
10 18 0.007948078 ubox
10 35 0.007526582 ubox
10 55 0.013546110 ubox
10 56 0.020929909 ubox
10 69 0.004252628 ubox
10 77 0.014183102 ubox
11 51 0.014578571 ubox
11 60 0.005370407 ubox
11 67 0.015871832 ubox
11 74 0.019362919 ubox
12 17 0.003906394 ubox
12 19 0.005321748 ubox
12 20 0.003679515 ubox
12 24 0.008660983 ubox
12 25 0.012816118 ubox
12 30 0.896503789 ubox
12 31 0.080676353 ubox
12 52 0.008005511 ubox
12 53 0.152145342 ubox
12 54 0.003257056 ubox
12 69 0.013867297 ubox
12 73 0.009366695 ubox
13 18 0.003793536 ubox
13 19 0.003794444 ubox
13 23 0.008625528 ubox
13 24 0.012741941 ubox
13 29 0.900208494 ubox
13 30 0.057219165 ubox
13 52 0.152824560 ubox
13 68 0.015047000 ubox
14 28 0.902023060 ubox
14 51 0.152703466 ubox
14 67 0.015019240 ubox
15 27 0.901177317 ubox
15 28 0.004507901 ubox
15 50 0.152025293 ubox
16 20 0.009374318 ubox
16 22 0.046267374 ubox
16 40 0.005302662 ubox
17 21 0.041753441 ubox
17 26 0.174420676 ubox
17 27 0.004222598 ubox
17 39 0.005337670 ubox
17 44 0.014549030 ubox
17 46 0.019460244 ubox
17 48 0.044171050 ubox
17 49 0.041960224 ubox
17 50 0.008175122 ubox
17 64 0.003200926 ubox
18 26 0.032081788 ubox
18 28 0.011092353 ubox
18 38 0.004978410 ubox
18 44 0.014376130 ubox
18 46 0.011650277 ubox
18 48 0.038476650 ubox
18 49 0.072381153 ubox
18 61 0.005074605 ubox
19 27 0.020101103 ubox
19 28 0.007238600 ubox
19 48 0.076815827 ubox
19 60 0.005189605 ubox
20 26 0.031699696 ubox
20 27 0.007337419 ubox
20 39 0.003257447 ubox
20 41 0.100046331 ubox
20 44 0.010187035 ubox
20 46 0.013615374 ubox
20 49 0.004505981 ubox
21 40 0.103054716 ubox
22 26 0.008807184 ubox
22 37 0.005305288 ubox
22 38 0.004789284 ubox
22 39 0.098439934 ubox
22 41 0.007026371 ubox
22 44 0.005675467 ubox
22 46 0.003858320 ubox
22 49 0.017717639 ubox
22 61 0.004311639 ubox
23 28 0.004036118 ubox
23 48 0.017784146 ubox
23 60 0.004553978 ubox
25 60 0.020669839 ubox
25 67 0.004075064 ubox
25 74 0.006679040 ubox
25 79 0.003175764 ubox
26 35 0.138039470 ubox
26 40 0.004245041 ubox
26 55 0.163404798 ubox
26 56 0.028968389 ubox
26 69 0.004471647 ubox
27 31 0.003980001 ubox
27 33 0.006911678 ubox
27 34 0.144591583 ubox
27 35 0.006794459 ubox
27 36 0.012199396 ubox
27 42 0.005544359 ubox
27 43 0.023409765 ubox
27 45 0.003582175 ubox
27 47 0.004479630 ubox
27 52 0.003376465 ubox
27 53 0.346919801 ubox
27 54 0.168993700 ubox
27 55 0.030714611 ubox
27 56 0.004612260 ubox
27 57 0.038438136 ubox
27 59 0.011583075 ubox
27 63 0.022837606 ubox
27 68 0.004148924 ubox
27 69 0.034622041 ubox
28 33 0.143737249 ubox
28 34 0.007482407 ubox
28 35 0.009563173 ubox
28 36 0.006229231 ubox
28 42 0.023367739 ubox
28 52 0.350580008 ubox
28 53 0.162784257 ubox
28 54 0.031182022 ubox
28 55 0.004931166 ubox
28 56 0.035252309 ubox
28 57 0.012553295 ubox
28 59 0.003337554 ubox
28 62 0.022815625 ubox
28 68 0.035923738 ubox
29 51 0.347087996 ubox
29 60 0.012229209 ubox
29 67 0.035839811 ubox
30 50 0.339312818 ubox
30 51 0.050771245 ubox
30 60 0.012343776 ubox
31 48 0.234388319 ubox
31 50 0.052573858 ubox
31 51 0.007017514 ubox
31 60 0.004230144 ubox
32 40 0.004014280 ubox
32 55 0.005233160 ubox
32 56 0.005427813 ubox
33 48 0.047454554 ubox
33 50 0.007263884 ubox
33 51 0.916017772 ubox
34 48 0.059699399 ubox
34 50 0.922898193 ubox
35 41 0.005208123 ubox
35 44 0.034582202 ubox
35 46 0.019366172 ubox
35 48 0.004551740 ubox
35 49 0.931231139 ubox
35 61 0.005509523 ubox
36 48 0.930728810 ubox
36 50 0.003251515 ubox
36 60 0.005675437 ubox
37 56 0.003338110 ubox
38 55 0.003408238 ubox
40 44 0.054447779 ubox
40 46 0.063994121 ubox
40 48 0.003567334 ubox
40 49 0.010288065 ubox
42 48 0.019690736 ubox
42 50 0.005137723 ubox
42 51 0.065590792 ubox
43 48 0.038109187 ubox
43 50 0.065875266 ubox
45 50 0.006667978 ubox
45 51 0.003447918 ubox
47 60 0.008454285 ubox
47 67 0.004922634 ubox
47 74 0.016839494 ubox
47 79 0.020629177 ubox
48 53 0.003852106 ubox
48 56 0.003816272 ubox
48 57 0.013235652 ubox
48 59 0.008521787 ubox
48 65 0.009754257 ubox
48 73 0.017113085 ubox
48 78 0.021667656 ubox
49 55 0.004384566 ubox
49 56 0.013004519 ubox
49 69 0.003168983 ubox
49 77 0.021571540 ubox
50 54 0.004509558 ubox
50 55 0.010504620 ubox
50 57 0.008386376 ubox
50 59 0.004757343 ubox
50 63 0.023149945 ubox
50 69 0.025277106 ubox
50 76 0.017244462 ubox
51 56 0.005979721 ubox
51 62 0.023187482 ubox
51 68 0.026693883 ubox
52 60 0.017881905 ubox
52 67 0.026922923 ubox
52 74 0.010136645 ubox
53 60 0.031676572 ubox
53 67 0.003352945 ubox
53 74 0.007266992 ubox
54 60 0.041326408 ubox
54 67 0.020364881 ubox
54 74 0.013319316 ubox
54 79 0.006565538 ubox
55 60 0.007094650 ubox
55 61 0.012900030 ubox
55 64 0.010957689 ubox
55 66 0.019698672 ubox
55 67 0.004857891 ubox
55 70 0.005614543 ubox
55 71 0.018916102 ubox
55 72 0.009407253 ubox
55 75 0.005988405 ubox
56 60 0.012835752 ubox
56 61 0.006584256 ubox
56 64 0.005206276 ubox
56 66 0.005802192 ubox
56 70 0.020518871 ubox
56 71 0.009671003 ubox
56 72 0.003865705 ubox
56 74 0.005689658 ubox
56 75 0.039866594 ubox
57 67 0.011745206 ubox
57 74 0.042511642 ubox
57 79 0.004471422 ubox
58 69 0.014174972 ubox
58 76 0.012463189 ubox
58 77 0.003941402 ubox
59 67 0.076535832 ubox
59 74 0.106979569 ubox
59 79 0.238534379 ubox
60 65 0.055416233 ubox
60 68 0.052635270 ubox
60 69 0.015235247 ubox
60 73 0.107685740 ubox
60 77 0.016220534 ubox
60 78 0.250925616 ubox
61 69 0.014342477 ubox
61 76 0.024044602 ubox
61 77 0.239728915 ubox
62 67 0.051502145 ubox
62 74 0.039093446 ubox
62 79 0.009896819 ubox
63 67 0.016488064 ubox
63 74 0.074600465 ubox
63 79 0.011578507 ubox
64 69 0.021071143 ubox
64 76 0.038487367 ubox
64 77 0.008416556 ubox
65 74 0.149275990 ubox
65 79 0.023165532 ubox
66 76 0.026832775 ubox
66 77 0.030832493 ubox
67 73 0.111162012 ubox
67 76 0.036836689 ubox
67 77 0.009131076 ubox
67 78 0.026100212 ubox
68 74 0.094612776 ubox
68 79 0.022972783 ubox
69 74 0.021154149 ubox
69 75 0.019689002 ubox
69 79 0.006344458 ubox
70 76 0.014436968 ubox
70 77 0.035368020 ubox
71 76 0.033832999 ubox
71 77 0.025488897 ubox
72 76 0.021734249 ubox
72 77 0.013867127 ubox
73 79 0.130939274 ubox
74 78 0.128694751 ubox
1 63 0.9500000 lbox
2 62 0.9500000 lbox
6 57 0.9500000 lbox
7 56 0.9500000 lbox
8 55 0.9500000 lbox
9 54 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
showpage
end
%%EOF
