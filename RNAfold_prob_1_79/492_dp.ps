%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (492)
} def

/sequence { (\
GGAAAAGGUACCGACACUGGAAACAGCUCGAAAGAGGUCAAAAGCUCAGGAAACUGAGCGGUACCAACGAGUGACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.013034529 ubox
1 65 0.004441628 ubox
1 68 0.055536924 ubox
1 72 0.013086876 ubox
1 75 0.018301462 ubox
1 76 0.005698357 ubox
1 78 0.030650244 ubox
2 11 0.013156019 ubox
2 64 0.003818514 ubox
2 68 0.040164628 ubox
2 72 0.008147631 ubox
2 75 0.006547054 ubox
2 77 0.029655571 ubox
2 78 0.044035405 ubox
3 72 0.008040491 ubox
3 76 0.028008139 ubox
3 77 0.043468602 ubox
4 72 0.016674981 ubox
4 76 0.039431632 ubox
5 72 0.004123303 ubox
5 76 0.003520931 ubox
5 77 0.005168299 ubox
6 72 0.011447939 ubox
6 76 0.006192824 ubox
7 17 0.003249166 ubox
7 65 0.998359109 ubox
7 75 0.004356313 ubox
8 15 0.003518620 ubox
8 64 0.999429749 ubox
9 14 0.003355621 ubox
9 63 0.999206586 ubox
10 62 0.999206377 ubox
10 72 0.003780410 ubox
11 20 0.004530213 ubox
11 61 0.999433625 ubox
11 71 0.003800933 ubox
12 19 0.004953901 ubox
12 30 0.030174100 ubox
12 60 0.998364542 ubox
12 61 0.003368143 ubox
12 69 0.003452436 ubox
13 17 0.010156323 ubox
13 18 0.005545905 ubox
13 24 0.007789092 ubox
13 27 0.008683524 ubox
13 29 0.055101351 ubox
13 39 0.687583528 ubox
13 59 0.209352864 ubox
13 68 0.003314793 ubox
14 18 0.003163594 ubox
14 28 0.054100094 ubox
14 38 0.688184939 ubox
15 19 0.008375807 ubox
15 20 0.014871068 ubox
15 26 0.011507507 ubox
15 30 0.007446193 ubox
15 36 0.005086225 ubox
15 37 0.687197510 ubox
15 44 0.004031572 ubox
15 58 0.022499598 ubox
15 60 0.003559187 ubox
16 28 0.012977251 ubox
16 38 0.005022150 ubox
17 26 0.984224641 ubox
17 34 0.041803538 ubox
17 36 0.045867798 ubox
17 37 0.005057055 ubox
17 44 0.012447586 ubox
18 23 0.009380151 ubox
18 25 0.990336306 ubox
18 26 0.003953608 ubox
18 30 0.005528333 ubox
18 31 0.024056421 ubox
18 32 0.004233337 ubox
18 33 0.038855467 ubox
18 34 0.003536407 ubox
18 35 0.043881094 ubox
18 40 0.015307035 ubox
18 42 0.003443732 ubox
18 43 0.013220021 ubox
19 24 0.991615461 ubox
19 27 0.004637894 ubox
19 28 0.013856014 ubox
19 29 0.009179806 ubox
19 39 0.016487746 ubox
19 78 0.004020713 ubox
20 24 0.011105886 ubox
20 27 0.014697112 ubox
20 28 0.007197955 ubox
20 29 0.040635947 ubox
20 38 0.006261055 ubox
20 39 0.011148240 ubox
20 77 0.003985961 ubox
20 78 0.008784558 ubox
21 28 0.039036823 ubox
21 38 0.007861420 ubox
21 76 0.003861250 ubox
21 77 0.008781950 ubox
22 28 0.003207982 ubox
22 76 0.008222987 ubox
23 28 0.003460720 ubox
23 38 0.017659530 ubox
24 30 0.013623199 ubox
24 37 0.019022341 ubox
25 38 0.074785450 ubox
26 38 0.022121733 ubox
26 39 0.013465663 ubox
26 72 0.009827072 ubox
27 34 0.027260517 ubox
27 36 0.987768591 ubox
27 37 0.037172770 ubox
27 44 0.004287953 ubox
27 71 0.010352469 ubox
28 33 0.025324570 ubox
28 35 0.991816714 ubox
28 36 0.018659627 ubox
28 37 0.030570071 ubox
28 40 0.004011746 ubox
28 41 0.005890735 ubox
28 43 0.004430807 ubox
28 70 0.010358152 ubox
29 34 0.992012099 ubox
29 36 0.046788844 ubox
29 37 0.008395360 ubox
29 69 0.010359734 ubox
30 39 0.045868032 ubox
30 68 0.010291193 ubox
31 38 0.043343154 ubox
33 38 0.003665428 ubox
34 39 0.014151964 ubox
34 78 0.030573822 ubox
35 77 0.030602031 ubox
36 65 0.010803038 ubox
36 76 0.030613186 ubox
37 45 0.013801207 ubox
37 64 0.010859787 ubox
37 75 0.030668449 ubox
38 42 0.015835143 ubox
38 43 0.023784975 ubox
38 44 0.014035209 ubox
38 63 0.010527539 ubox
38 74 0.030665356 ubox
39 44 0.023740771 ubox
39 73 0.030664004 ubox
40 72 0.029771180 ubox
41 62 0.008997908 ubox
44 59 0.976603271 ubox
45 58 0.999366947 ubox
46 57 0.999787457 ubox
47 56 0.999980569 ubox
48 55 0.999618130 ubox
49 54 0.998946261 ubox
49 55 0.004140265 ubox
50 54 0.008197554 ubox
60 65 0.003368943 ubox
60 68 0.005623665 ubox
61 68 0.009949975 ubox
62 67 0.009492290 ubox
64 71 0.003514633 ubox
65 73 0.005255938 ubox
66 72 0.008637456 ubox
66 76 0.003953646 ubox
66 77 0.013862206 ubox
67 72 0.008360516 ubox
67 76 0.015105909 ubox
67 77 0.005500560 ubox
68 73 0.038924260 ubox
68 79 0.861841304 ubox
69 75 0.033996246 ubox
69 76 0.008427283 ubox
69 77 0.088640642 ubox
69 78 0.905728552 ubox
70 76 0.136059103 ubox
70 77 0.884202454 ubox
71 75 0.164522740 ubox
71 76 0.670087321 ubox
71 77 0.018057334 ubox
71 78 0.056483890 ubox
72 79 0.035011926 ubox
73 77 0.004092704 ubox
73 78 0.059226972 ubox
75 79 0.007458588 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
68 79 0.9500000 lbox
69 78 0.9500000 lbox
70 77 0.9500000 lbox
71 76 0.9500000 lbox
showpage
end
%%EOF
