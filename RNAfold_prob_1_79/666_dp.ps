%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (666)
} def

/sequence { (\
GGAAAGAACAAGUACAAAAAAAAAAAGUACAAGAUCAAAAAAAAAAAGAUCAAGUUCAAAAAAAAAAAGUAAAUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.050102092 ubox
1 15 0.006900531 ubox
1 57 0.050922473 ubox
1 75 0.014074773 ubox
1 76 0.046285104 ubox
1 77 0.003644713 ubox
1 78 0.101365899 ubox
2 9 0.021026752 ubox
2 36 0.004058011 ubox
2 56 0.049191390 ubox
2 57 0.062913173 ubox
2 70 0.003858309 ubox
2 74 0.010813220 ubox
2 75 0.053436828 ubox
2 76 0.003268984 ubox
2 77 0.088088494 ubox
2 78 0.255005423 ubox
3 35 0.003945092 ubox
3 55 0.045372150 ubox
3 56 0.062106927 ubox
3 70 0.003962374 ubox
3 74 0.051067930 ubox
3 76 0.074867226 ubox
3 77 0.216383488 ubox
4 55 0.053414513 ubox
4 56 0.004579653 ubox
4 70 0.003291756 ubox
4 74 0.007949245 ubox
4 76 0.160938990 ubox
4 77 0.187509308 ubox
5 55 0.004909230 ubox
5 70 0.006639047 ubox
5 74 0.027926292 ubox
5 76 0.240798049 ubox
5 77 0.005366139 ubox
6 15 0.006335353 ubox
6 30 0.004002504 ubox
6 36 0.067746157 ubox
6 56 0.006032595 ubox
6 57 0.911425283 ubox
6 74 0.013829212 ubox
6 75 0.277294759 ubox
6 76 0.003984127 ubox
6 77 0.006454857 ubox
6 78 0.121895226 ubox
7 35 0.066888906 ubox
7 55 0.005639794 ubox
7 56 0.912226308 ubox
7 70 0.006452833 ubox
7 74 0.263736985 ubox
7 76 0.006869703 ubox
7 77 0.120924270 ubox
8 28 0.008225108 ubox
8 35 0.003500570 ubox
8 55 0.911999322 ubox
8 70 0.118779217 ubox
8 74 0.013005293 ubox
8 76 0.109841713 ubox
9 27 0.008491608 ubox
9 33 0.060459331 ubox
9 54 0.911174875 ubox
9 69 0.120139151 ubox
9 79 0.008435944 ubox
10 56 0.003566984 ubox
10 70 0.009056219 ubox
10 74 0.038433319 ubox
10 77 0.015346137 ubox
11 28 0.003950143 ubox
11 55 0.003594619 ubox
11 70 0.014422362 ubox
11 74 0.008480369 ubox
11 76 0.017663251 ubox
12 30 0.983057624 ubox
12 51 0.004973808 ubox
12 74 0.004381521 ubox
12 75 0.017677571 ubox
13 18 0.003975617 ubox
13 19 0.003661674 ubox
13 20 0.004683832 ubox
13 22 0.004587896 ubox
13 26 0.003596858 ubox
13 29 0.984243112 ubox
13 68 0.005012911 ubox
13 71 0.158919813 ubox
13 72 0.004333446 ubox
13 73 0.003949528 ubox
14 28 0.984350234 ubox
14 70 0.160897899 ubox
15 27 0.983593373 ubox
15 69 0.160469946 ubox
19 28 0.004543790 ubox
21 28 0.004871170 ubox
22 28 0.003815453 ubox
23 28 0.004137123 ubox
27 36 0.003326839 ubox
27 56 0.009149079 ubox
27 57 0.077921325 ubox
28 58 0.003861763 ubox
29 55 0.161886389 ubox
29 56 0.004614265 ubox
30 54 0.166143794 ubox
31 55 0.009849206 ubox
31 56 0.011720610 ubox
31 77 0.017577924 ubox
32 55 0.012854943 ubox
32 56 0.004341719 ubox
32 76 0.019934410 ubox
33 51 0.993306678 ubox
33 57 0.011719923 ubox
33 75 0.020259702 ubox
33 78 0.003629664 ubox
34 50 0.994271920 ubox
34 56 0.011464679 ubox
34 74 0.020136017 ubox
34 77 0.003384613 ubox
35 42 0.003391513 ubox
35 44 0.003200582 ubox
35 49 0.994341427 ubox
35 73 0.018929737 ubox
36 48 0.993739349 ubox
36 54 0.007291004 ubox
36 69 0.005813594 ubox
38 70 0.005101601 ubox
45 77 0.003672541 ubox
46 56 0.003227603 ubox
46 77 0.055859147 ubox
47 55 0.003515936 ubox
47 76 0.062385982 ubox
48 56 0.006716930 ubox
48 57 0.055578421 ubox
48 75 0.063400278 ubox
48 78 0.006920340 ubox
49 55 0.007369270 ubox
49 56 0.054845654 ubox
49 74 0.063150327 ubox
49 77 0.006778713 ubox
50 54 0.007136481 ubox
50 73 0.060921764 ubox
51 69 0.007334544 ubox
52 56 0.005562999 ubox
52 70 0.005897582 ubox
52 77 0.026715074 ubox
53 70 0.048765137 ubox
53 74 0.003645896 ubox
53 76 0.030928330 ubox
54 70 0.005694397 ubox
54 74 0.012873570 ubox
54 75 0.031710809 ubox
54 78 0.005883429 ubox
55 59 0.006520366 ubox
55 60 0.009785516 ubox
55 61 0.016270715 ubox
55 62 0.023359722 ubox
55 63 0.020071605 ubox
55 64 0.026498619 ubox
55 65 0.016314791 ubox
55 66 0.024877756 ubox
55 67 0.015414677 ubox
55 68 0.049862566 ubox
55 69 0.008556371 ubox
55 71 0.007296030 ubox
55 72 0.010919343 ubox
55 73 0.016284657 ubox
56 60 0.015599659 ubox
56 61 0.023405889 ubox
56 62 0.021607249 ubox
56 63 0.027824200 ubox
56 64 0.017565493 ubox
56 65 0.027594330 ubox
56 66 0.015734310 ubox
56 67 0.046756485 ubox
56 68 0.009417165 ubox
56 69 0.003624796 ubox
56 71 0.011680217 ubox
56 72 0.015651048 ubox
56 73 0.006780238 ubox
57 69 0.020832342 ubox
58 70 0.009623853 ubox
58 74 0.005092199 ubox
58 76 0.004545816 ubox
58 77 0.010993591 ubox
59 70 0.010931863 ubox
59 74 0.005581102 ubox
59 76 0.011282578 ubox
59 77 0.012734451 ubox
60 70 0.011504930 ubox
60 74 0.006135630 ubox
60 76 0.013002359 ubox
60 77 0.012951842 ubox
61 70 0.023606268 ubox
61 74 0.007080041 ubox
61 76 0.013071889 ubox
61 77 0.014078462 ubox
62 70 0.015720708 ubox
62 74 0.007695243 ubox
62 76 0.014175657 ubox
62 77 0.016297361 ubox
63 70 0.025591903 ubox
63 74 0.008304747 ubox
63 76 0.016524244 ubox
63 77 0.017344832 ubox
64 70 0.020095420 ubox
64 74 0.008971803 ubox
64 76 0.017344034 ubox
64 77 0.019884576 ubox
65 70 0.021853019 ubox
65 74 0.018560839 ubox
65 76 0.019521019 ubox
65 77 0.024232301 ubox
66 70 0.013448762 ubox
66 74 0.012371679 ubox
66 76 0.023265060 ubox
66 77 0.044252277 ubox
67 74 0.020133439 ubox
67 76 0.044172610 ubox
67 77 0.394383072 ubox
68 74 0.032759893 ubox
68 76 0.440187527 ubox
68 77 0.031221667 ubox
69 74 0.014419439 ubox
69 75 0.446737702 ubox
69 76 0.029529531 ubox
69 77 0.016751226 ubox
69 78 0.109692653 ubox
70 79 0.009762360 ubox
71 76 0.020445135 ubox
71 77 0.026248427 ubox
72 76 0.021927186 ubox
72 77 0.015769409 ubox
73 77 0.008104081 ubox
74 79 0.007994414 ubox
75 79 0.011072317 ubox
6 57 0.9500000 lbox
7 56 0.9500000 lbox
8 55 0.9500000 lbox
9 54 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
showpage
end
%%EOF
