%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (748)
} def

/sequence { (\
GGAAAGUCGUGGCAAAGGCAGGACAAGUCGAGGCGAAAAGGCUGGACAGAGGCAGGGAAACGUGGCUCGUGCAACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.005467880 ubox
1 24 0.008196316 ubox
1 29 0.071310870 ubox
1 47 0.004056216 ubox
1 68 0.005480456 ubox
1 70 0.009195862 ubox
1 72 0.122847467 ubox
1 75 0.060756938 ubox
1 76 0.060479894 ubox
1 77 0.013228947 ubox
1 78 0.414220240 ubox
2 7 0.004042586 ubox
2 8 0.005495666 ubox
2 24 0.004224414 ubox
2 28 0.070075115 ubox
2 29 0.044805326 ubox
2 68 0.006562658 ubox
2 70 0.011080382 ubox
2 72 0.056753260 ubox
2 75 0.069358409 ubox
2 76 0.016913432 ubox
2 77 0.404507752 ubox
2 78 0.592945156 ubox
3 7 0.004796482 ubox
3 28 0.043719240 ubox
3 67 0.004747814 ubox
3 70 0.097456571 ubox
3 76 0.381945446 ubox
3 77 0.587024139 ubox
4 28 0.004170676 ubox
4 70 0.018541801 ubox
4 76 0.527984512 ubox
4 77 0.055048934 ubox
5 43 0.016833308 ubox
5 70 0.017747947 ubox
5 76 0.067382875 ubox
5 77 0.012176953 ubox
6 13 0.003632784 ubox
6 19 0.035235665 ubox
6 24 0.994825745 ubox
6 34 0.025095629 ubox
6 42 0.019776616 ubox
6 72 0.010105464 ubox
6 75 0.058472367 ubox
6 78 0.010781508 ubox
7 12 0.003446780 ubox
7 18 0.035232063 ubox
7 22 0.004492771 ubox
7 23 0.996474339 ubox
7 33 0.025139701 ubox
7 36 0.006293309 ubox
7 41 0.019774436 ubox
7 71 0.008107560 ubox
7 73 0.003360659 ubox
7 74 0.051905251 ubox
8 17 0.035348537 ubox
8 21 0.007635847 ubox
8 22 0.996999381 ubox
8 32 0.025263584 ubox
8 35 0.006743123 ubox
8 40 0.019670843 ubox
8 71 0.004036368 ubox
8 79 0.004603342 ubox
9 19 0.009866849 ubox
9 24 0.007475705 ubox
9 34 0.006663106 ubox
9 72 0.038558512 ubox
9 75 0.020866770 ubox
9 78 0.005053849 ubox
10 15 0.006388219 ubox
10 16 0.004397521 ubox
10 18 0.009849719 ubox
10 20 0.990578135 ubox
10 21 0.029576132 ubox
10 23 0.007153267 ubox
10 30 0.024943901 ubox
10 33 0.006552563 ubox
10 36 0.014820524 ubox
10 71 0.037345770 ubox
10 73 0.009137373 ubox
10 74 0.019350023 ubox
11 19 0.962218756 ubox
11 24 0.004349795 ubox
11 29 0.025393294 ubox
11 70 0.022858840 ubox
11 72 0.008713124 ubox
11 76 0.004125183 ubox
11 78 0.003333866 ubox
12 19 0.264011786 ubox
12 28 0.025379129 ubox
12 34 0.021822095 ubox
12 70 0.010597357 ubox
12 72 0.024084756 ubox
12 75 0.004209949 ubox
13 17 0.810833837 ubox
13 18 0.356575198 ubox
13 22 0.003638632 ubox
13 27 0.025351824 ubox
13 33 0.021831214 ubox
13 69 0.012799914 ubox
13 71 0.024520220 ubox
14 70 0.021978901 ubox
15 77 0.005359326 ubox
16 76 0.005973964 ubox
16 77 0.003933636 ubox
17 24 0.023248197 ubox
17 29 0.022794503 ubox
17 75 0.006018479 ubox
17 76 0.004649041 ubox
18 24 0.006181117 ubox
18 28 0.022825140 ubox
18 70 0.003177253 ubox
18 72 0.009492210 ubox
18 75 0.004736290 ubox
19 27 0.022828125 ubox
19 69 0.003636520 ubox
19 71 0.009515360 ubox
20 70 0.008751890 ubox
21 72 0.022114459 ubox
21 78 0.003820708 ubox
22 68 0.004612206 ubox
22 77 0.003706586 ubox
23 70 0.022968131 ubox
23 76 0.003397658 ubox
24 69 0.023122583 ubox
24 71 0.005346979 ubox
25 70 0.007254780 ubox
25 76 0.005329467 ubox
25 77 0.029099884 ubox
26 43 0.047043631 ubox
26 70 0.006943785 ubox
26 76 0.032436686 ubox
26 77 0.005749896 ubox
27 34 0.014381557 ubox
27 42 0.055547718 ubox
27 47 0.983080937 ubox
27 72 0.006488220 ubox
27 75 0.030581368 ubox
27 78 0.003506523 ubox
28 33 0.013659116 ubox
28 36 0.035464039 ubox
28 41 0.055524312 ubox
28 45 0.007724634 ubox
28 46 0.986105140 ubox
28 71 0.005797035 ubox
28 74 0.027759981 ubox
29 35 0.038007662 ubox
29 40 0.055503165 ubox
29 44 0.011891327 ubox
29 45 0.986870494 ubox
29 69 0.006280363 ubox
29 79 0.041798691 ubox
30 34 0.035668866 ubox
30 43 0.006446907 ubox
30 68 0.006325370 ubox
30 72 0.004643431 ubox
30 77 0.014252071 ubox
30 78 0.049483051 ubox
31 43 0.959676799 ubox
31 67 0.006316253 ubox
31 76 0.017715465 ubox
31 77 0.047958932 ubox
32 42 0.951759235 ubox
32 43 0.226024663 ubox
32 66 0.006290114 ubox
32 75 0.019896251 ubox
32 76 0.041059146 ubox
32 78 0.004865302 ubox
33 42 0.280145889 ubox
33 75 0.033150523 ubox
33 77 0.003337684 ubox
33 78 0.004415002 ubox
34 40 0.937980592 ubox
34 41 0.315705135 ubox
34 64 0.006119007 ubox
34 79 0.063344411 ubox
35 42 0.008174227 ubox
35 63 0.005884227 ubox
35 78 0.069467983 ubox
36 77 0.065462794 ubox
37 76 0.037094261 ubox
37 77 0.006282563 ubox
38 76 0.005662827 ubox
38 77 0.038362209 ubox
39 76 0.054282771 ubox
39 77 0.049323549 ubox
40 75 0.058908624 ubox
40 76 0.070963324 ubox
40 78 0.006600454 ubox
41 72 0.017795744 ubox
41 75 0.075964575 ubox
41 77 0.006268396 ubox
42 55 0.006181008 ubox
42 71 0.017786592 ubox
43 54 0.006204814 ubox
43 73 0.125793716 ubox
43 74 0.005027802 ubox
44 53 0.006211278 ubox
44 72 0.153577316 ubox
44 75 0.005992353 ubox
44 76 0.004524344 ubox
44 78 0.005847136 ubox
45 72 0.020757287 ubox
45 75 0.005076306 ubox
45 77 0.005810075 ubox
45 78 0.003982288 ubox
46 70 0.156300775 ubox
46 76 0.005663133 ubox
46 77 0.003949729 ubox
47 69 0.156443982 ubox
47 71 0.067042549 ubox
48 70 0.115417973 ubox
48 76 0.068116123 ubox
48 77 0.005091269 ubox
49 68 0.993118630 ubox
49 72 0.005412653 ubox
49 75 0.076142917 ubox
49 77 0.020713463 ubox
49 78 0.030773949 ubox
50 67 0.994503742 ubox
50 76 0.022924416 ubox
50 77 0.030062647 ubox
51 66 0.994583481 ubox
51 67 0.011351877 ubox
51 68 0.003404685 ubox
51 72 0.003165197 ubox
51 75 0.023724353 ubox
51 76 0.028750413 ubox
51 78 0.003605542 ubox
52 63 0.003570658 ubox
52 66 0.014601185 ubox
52 72 0.094846664 ubox
52 75 0.022080978 ubox
52 77 0.003238900 ubox
52 78 0.004326050 ubox
53 62 0.003717024 ubox
53 64 0.994952307 ubox
53 65 0.012589506 ubox
53 71 0.095414363 ubox
54 63 0.993442523 ubox
54 70 0.092811863 ubox
54 76 0.005280727 ubox
54 77 0.004185402 ubox
55 61 0.076804350 ubox
55 63 0.005956091 ubox
55 67 0.004203244 ubox
55 68 0.074490208 ubox
55 70 0.006352168 ubox
55 72 0.003282324 ubox
55 75 0.005534040 ubox
55 76 0.004815550 ubox
56 61 0.986002168 ubox
56 66 0.005177560 ubox
56 67 0.075069285 ubox
56 68 0.057025771 ubox
56 72 0.003255368 ubox
56 75 0.004932680 ubox
57 61 0.011882348 ubox
57 66 0.081460208 ubox
57 67 0.040793601 ubox
57 68 0.013953662 ubox
57 72 0.005483412 ubox
57 78 0.006167970 ubox
58 63 0.003287720 ubox
58 67 0.015950199 ubox
58 77 0.006107462 ubox
59 63 0.005034921 ubox
59 76 0.005228620 ubox
60 70 0.012003118 ubox
61 65 0.006060824 ubox
61 69 0.012575103 ubox
62 68 0.012515945 ubox
62 75 0.009672543 ubox
63 74 0.008990974 ubox
65 72 0.026625745 ubox
66 71 0.026661992 ubox
68 79 0.011821054 ubox
69 75 0.261726123 ubox
69 76 0.015267680 ubox
69 77 0.012994554 ubox
69 78 0.091073447 ubox
70 74 0.236196150 ubox
70 79 0.029646420 ubox
71 75 0.051603190 ubox
71 76 0.018539547 ubox
71 77 0.008578799 ubox
71 78 0.049315332 ubox
72 79 0.031202511 ubox
73 77 0.009506031 ubox
75 79 0.012164471 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
showpage
end
%%EOF
