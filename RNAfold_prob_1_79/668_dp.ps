%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (668)
} def

/sequence { (\
GGAAAAGUAAUAUAUAUAUAAAAAAUAUUAUUAUAUUGAAAGAUGUAGUGGUAUUAUAUAUAUAUUAUGUCUACUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 71 0.050202613 ubox
1 72 0.559763318 ubox
1 74 0.235762344 ubox
1 75 0.118162612 ubox
1 76 0.012381295 ubox
1 77 0.021890029 ubox
1 78 0.385188514 ubox
2 70 0.035833371 ubox
2 71 0.593173324 ubox
2 72 0.033127267 ubox
2 74 0.135716841 ubox
2 75 0.014119248 ubox
2 76 0.033783295 ubox
2 77 0.379600970 ubox
2 78 0.528372122 ubox
3 68 0.004612791 ubox
3 70 0.570442263 ubox
3 72 0.084026010 ubox
3 75 0.035448029 ubox
3 76 0.371738276 ubox
3 77 0.475948658 ubox
4 68 0.013861144 ubox
4 70 0.075686036 ubox
4 72 0.062912974 ubox
4 75 0.335978472 ubox
4 76 0.409835890 ubox
4 77 0.327602379 ubox
5 68 0.040006210 ubox
5 70 0.136563840 ubox
5 72 0.056210531 ubox
5 75 0.307060998 ubox
5 76 0.420458021 ubox
5 77 0.010334339 ubox
6 66 0.003396533 ubox
6 68 0.056907878 ubox
6 70 0.065302052 ubox
6 72 0.195773411 ubox
6 75 0.492798093 ubox
6 76 0.010673438 ubox
7 65 0.003749081 ubox
7 66 0.004198945 ubox
7 68 0.781863620 ubox
7 70 0.012198795 ubox
7 71 0.195553040 ubox
7 72 0.025558828 ubox
7 74 0.547138532 ubox
7 75 0.004906557 ubox
8 64 0.003612446 ubox
8 67 0.828985235 ubox
8 69 0.039362117 ubox
8 73 0.538697963 ubox
9 65 0.004313081 ubox
9 66 0.841427078 ubox
9 68 0.034455418 ubox
9 70 0.015277694 ubox
9 72 0.515045534 ubox
10 63 0.009418778 ubox
10 65 0.860331991 ubox
10 66 0.016254120 ubox
10 68 0.146793097 ubox
10 70 0.467134792 ubox
10 72 0.006284858 ubox
11 62 0.009871450 ubox
11 64 0.861346809 ubox
11 67 0.145810906 ubox
11 69 0.473514345 ubox
12 61 0.009938608 ubox
12 63 0.861492392 ubox
12 65 0.142542136 ubox
12 66 0.109615585 ubox
12 68 0.469531917 ubox
12 70 0.018841494 ubox
13 60 0.009999187 ubox
13 62 0.861575102 ubox
13 64 0.181656068 ubox
13 67 0.458299312 ubox
13 69 0.019235165 ubox
14 59 0.010039414 ubox
14 61 0.861593539 ubox
14 63 0.189953517 ubox
14 65 0.328920399 ubox
14 66 0.329502778 ubox
14 68 0.017390799 ubox
15 58 0.010091510 ubox
15 60 0.861618166 ubox
15 62 0.198499794 ubox
15 64 0.455666338 ubox
15 67 0.015446602 ubox
16 57 0.010120238 ubox
16 59 0.861592812 ubox
16 61 0.198880591 ubox
16 63 0.463636240 ubox
16 65 0.032539381 ubox
16 66 0.011431946 ubox
17 56 0.010126781 ubox
17 58 0.861535011 ubox
17 60 0.199176167 ubox
17 62 0.464082945 ubox
17 64 0.035302030 ubox
18 55 0.008221388 ubox
18 57 0.861188224 ubox
18 59 0.199312646 ubox
18 61 0.464008832 ubox
18 63 0.035375246 ubox
19 56 0.858486792 ubox
19 58 0.199127214 ubox
19 60 0.462542858 ubox
19 62 0.035202595 ubox
20 54 0.007988623 ubox
20 55 0.749015042 ubox
20 57 0.195622665 ubox
20 59 0.449231189 ubox
20 61 0.034070539 ubox
21 54 0.483465202 ubox
21 55 0.049061831 ubox
21 57 0.030788296 ubox
21 59 0.014586723 ubox
22 52 0.003955172 ubox
22 54 0.044523110 ubox
22 55 0.038362187 ubox
22 57 0.264404536 ubox
22 59 0.015231716 ubox
23 52 0.012610805 ubox
23 54 0.034323509 ubox
23 55 0.043849529 ubox
23 57 0.029092704 ubox
24 52 0.004532707 ubox
24 54 0.048385541 ubox
24 55 0.628406421 ubox
24 57 0.007111322 ubox
25 52 0.014038543 ubox
25 54 0.864761258 ubox
25 55 0.008631956 ubox
26 50 0.006550506 ubox
26 51 0.012571745 ubox
26 53 0.996635858 ubox
27 49 0.006316966 ubox
27 52 0.999237903 ubox
28 48 0.006128060 ubox
28 51 0.998670141 ubox
29 47 0.005395585 ubox
29 50 0.997828271 ubox
30 46 0.005124901 ubox
30 49 0.999414779 ubox
31 45 0.004501975 ubox
31 48 0.998981225 ubox
32 47 0.998872389 ubox
33 46 0.999662223 ubox
34 45 0.999447968 ubox
35 44 0.998962699 ubox
36 41 0.004123081 ubox
36 42 0.016130632 ubox
36 43 0.995829858 ubox
37 41 0.017494459 ubox
37 42 0.970422255 ubox
37 43 0.024632919 ubox
68 79 0.009737908 ubox
69 74 0.024956049 ubox
69 75 0.003434906 ubox
69 76 0.007023818 ubox
69 77 0.004227812 ubox
69 78 0.036052857 ubox
71 79 0.006658070 ubox
72 79 0.003746766 ubox
73 77 0.005526156 ubox
74 79 0.032397077 ubox
75 79 0.004201744 ubox
1 72 0.9500000 lbox
2 71 0.9500000 lbox
3 70 0.9500000 lbox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
10 65 0.9500000 lbox
11 64 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
16 59 0.9500000 lbox
17 58 0.9500000 lbox
18 57 0.9500000 lbox
19 56 0.9500000 lbox
20 55 0.9500000 lbox
25 54 0.9500000 lbox
26 53 0.9500000 lbox
27 52 0.9500000 lbox
28 51 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
34 45 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
