%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (223)
} def

/sequence { (\
GGAAAAUGCAAGAUCAGAUCCAGGAAACUGAGAUCAAAAGACGAGAGGAAACUCCGUCAGAUCAAGCAGUGCAUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.003171677 ubox
1 9 0.006044660 ubox
1 21 0.005162314 ubox
1 72 0.171199680 ubox
1 74 0.031779724 ubox
1 75 0.126845835 ubox
1 76 0.241552405 ubox
1 77 0.013036487 ubox
1 78 0.191139834 ubox
2 9 0.003273698 ubox
2 20 0.005166195 ubox
2 70 0.004412398 ubox
2 72 0.162155788 ubox
2 74 0.115971366 ubox
2 75 0.278919726 ubox
2 76 0.009583931 ubox
2 77 0.183518719 ubox
2 78 0.851439651 ubox
3 7 0.003503740 ubox
3 19 0.004988125 ubox
3 70 0.118740065 ubox
3 74 0.272419287 ubox
3 76 0.174879713 ubox
3 77 0.852403103 ubox
4 70 0.058089737 ubox
4 74 0.026607483 ubox
4 76 0.800355677 ubox
4 77 0.023958415 ubox
5 70 0.112744432 ubox
5 74 0.036460667 ubox
5 76 0.029618004 ubox
5 77 0.007347077 ubox
6 70 0.103851592 ubox
6 74 0.834199257 ubox
6 76 0.007318332 ubox
7 16 0.004995256 ubox
7 68 0.480780617 ubox
7 69 0.061662515 ubox
7 71 0.006062945 ubox
7 73 0.862635168 ubox
7 79 0.007960681 ubox
8 15 0.005077761 ubox
8 67 0.503117884 ubox
8 70 0.006614035 ubox
8 72 0.863383119 ubox
8 78 0.012872878 ubox
9 66 0.503120401 ubox
9 69 0.007964143 ubox
9 71 0.863160069 ubox
10 70 0.826004661 ubox
10 77 0.016620084 ubox
11 62 0.004273251 ubox
11 70 0.073880762 ubox
11 76 0.017598394 ubox
12 20 0.016914855 ubox
12 35 0.017242010 ubox
12 62 0.003405737 ubox
12 63 0.932304801 ubox
12 67 0.070010803 ubox
12 70 0.004061759 ubox
12 75 0.017731982 ubox
13 19 0.016749954 ubox
13 34 0.017214534 ubox
13 62 0.937704636 ubox
13 70 0.007795142 ubox
13 74 0.017619606 ubox
14 18 0.014855834 ubox
14 25 0.005544893 ubox
14 31 0.011313709 ubox
14 33 0.016979227 ubox
14 36 0.008112830 ubox
14 37 0.010311737 ubox
14 38 0.034736607 ubox
14 39 0.008084474 ubox
14 59 0.003538226 ubox
14 61 0.938151959 ubox
14 64 0.008890777 ubox
14 65 0.040432926 ubox
14 66 0.035565501 ubox
14 68 0.017287901 ubox
14 69 0.011248839 ubox
14 73 0.017026311 ubox
15 24 0.005927197 ubox
15 30 0.012128382 ubox
15 32 0.016885363 ubox
15 60 0.937274874 ubox
15 66 0.088105332 ubox
15 69 0.026349748 ubox
15 71 0.013599208 ubox
16 29 0.012178595 ubox
16 62 0.008383309 ubox
16 70 0.012249688 ubox
17 28 0.012143755 ubox
17 35 0.993655253 ubox
17 63 0.090721035 ubox
18 34 0.994642270 ubox
18 62 0.090769472 ubox
19 25 0.006201016 ubox
19 26 0.004365583 ubox
19 31 0.011554988 ubox
19 32 0.004929652 ubox
19 33 0.994801869 ubox
19 61 0.090664057 ubox
20 24 0.006404090 ubox
20 30 0.008397546 ubox
20 32 0.994921994 ubox
20 60 0.090324097 ubox
21 30 0.999091421 ubox
22 29 0.999056460 ubox
22 77 0.003538212 ubox
23 28 0.998405735 ubox
23 29 0.026733020 ubox
23 76 0.004247485 ubox
24 28 0.027139384 ubox
24 35 0.003612844 ubox
24 75 0.004331313 ubox
25 34 0.003570332 ubox
25 74 0.004179914 ubox
27 70 0.010491798 ubox
28 69 0.012172365 ubox
29 36 0.003520158 ubox
29 68 0.012183392 ubox
30 35 0.004116269 ubox
30 67 0.012177816 ubox
32 63 0.031962490 ubox
33 62 0.032012143 ubox
34 61 0.032021511 ubox
35 60 0.031955945 ubox
36 62 0.011455483 ubox
37 62 0.007643889 ubox
38 62 0.009733598 ubox
39 62 0.005550641 ubox
40 58 0.998575119 ubox
41 57 0.999685983 ubox
42 56 0.999924716 ubox
43 54 0.026143135 ubox
43 55 0.999074418 ubox
43 58 0.003845636 ubox
44 53 0.036912465 ubox
44 57 0.003713509 ubox
45 52 0.036771396 ubox
45 53 0.004258620 ubox
45 54 0.999058608 ubox
45 58 0.003538310 ubox
46 53 0.999003808 ubox
46 57 0.003469488 ubox
47 52 0.998256415 ubox
47 53 0.004587463 ubox
47 55 0.005795248 ubox
48 52 0.008424244 ubox
48 54 0.006054795 ubox
49 53 0.005271804 ubox
59 70 0.004404263 ubox
59 76 0.009780264 ubox
60 67 0.075007498 ubox
60 72 0.003347018 ubox
60 75 0.010937696 ubox
61 70 0.022757823 ubox
61 74 0.010933540 ubox
62 66 0.008297599 ubox
62 68 0.008424846 ubox
62 69 0.023685788 ubox
62 73 0.010803162 ubox
63 69 0.036783423 ubox
63 71 0.009891204 ubox
64 70 0.016610806 ubox
64 77 0.004743027 ubox
65 70 0.036628675 ubox
65 76 0.005372304 ubox
66 70 0.007228708 ubox
66 72 0.018470095 ubox
66 75 0.005424686 ubox
66 78 0.004721818 ubox
67 71 0.018399940 ubox
68 74 0.004338250 ubox
68 76 0.025495289 ubox
68 77 0.004150805 ubox
69 74 0.003987871 ubox
69 75 0.034766636 ubox
69 76 0.006080734 ubox
69 77 0.005535952 ubox
69 78 0.034757738 ubox
70 79 0.012375914 ubox
71 75 0.010815252 ubox
71 76 0.006721946 ubox
71 77 0.003481901 ubox
71 78 0.021236392 ubox
72 79 0.013611973 ubox
73 77 0.004506824 ubox
74 79 0.003556294 ubox
75 79 0.005060411 ubox
2 78 0.9500000 lbox
3 77 0.9500000 lbox
4 76 0.9500000 lbox
6 74 0.9500000 lbox
7 73 0.9500000 lbox
8 72 0.9500000 lbox
9 71 0.9500000 lbox
10 70 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
