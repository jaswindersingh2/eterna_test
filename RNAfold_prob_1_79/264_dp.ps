%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (264)
} def

/sequence { (\
GGAAAAAAGUACAAGUAGGAAACUACAGUGGACACGAGGUCGGGAAACGGACAGUGGACACAAGUACACUGAAAAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.005949582 ubox
1 12 0.027854192 ubox
1 67 0.012184913 ubox
1 69 0.013311526 ubox
1 70 0.030271090 ubox
1 76 0.015580228 ubox
1 77 0.009237550 ubox
1 78 0.204122387 ubox
2 12 0.008641352 ubox
2 67 0.007724948 ubox
2 69 0.032046322 ubox
2 70 0.004529737 ubox
2 76 0.012505884 ubox
2 77 0.202517582 ubox
2 78 0.193021228 ubox
3 10 0.007129636 ubox
3 70 0.011529459 ubox
3 76 0.193586322 ubox
3 77 0.192237935 ubox
4 10 0.005240455 ubox
4 70 0.020077780 ubox
4 76 0.175793711 ubox
4 77 0.009686445 ubox
5 10 0.005147260 ubox
5 70 0.034741681 ubox
5 76 0.011490685 ubox
5 77 0.005948169 ubox
6 70 0.128676730 ubox
6 76 0.006459764 ubox
6 77 0.006430817 ubox
7 70 0.065938265 ubox
7 76 0.006869557 ubox
7 77 0.010605211 ubox
8 24 0.003439051 ubox
8 65 0.003631957 ubox
8 70 0.182026187 ubox
8 76 0.011705350 ubox
8 77 0.010543115 ubox
9 23 0.003651140 ubox
9 26 0.004217017 ubox
9 33 0.011288073 ubox
9 67 0.962736911 ubox
9 69 0.171048219 ubox
9 70 0.009126440 ubox
9 76 0.011540636 ubox
9 78 0.012188312 ubox
10 22 0.003529527 ubox
10 25 0.004158464 ubox
10 30 0.009289028 ubox
10 32 0.009104430 ubox
10 63 0.003738795 ubox
10 66 0.966069944 ubox
10 68 0.151680063 ubox
10 71 0.008000498 ubox
10 72 0.006851012 ubox
10 73 0.006222721 ubox
10 75 0.011468354 ubox
11 29 0.010690725 ubox
11 65 0.970382730 ubox
11 70 0.007207399 ubox
12 28 0.010950155 ubox
12 30 0.012097032 ubox
12 64 0.969652186 ubox
12 71 0.020511408 ubox
12 79 0.005646294 ubox
13 29 0.011809992 ubox
13 65 0.012740626 ubox
13 70 0.018465564 ubox
13 77 0.003237140 ubox
14 24 0.028945238 ubox
14 65 0.005302519 ubox
14 70 0.011561860 ubox
14 76 0.003182622 ubox
15 23 0.030124547 ubox
15 26 0.997136935 ubox
15 67 0.005107250 ubox
15 69 0.012182647 ubox
16 22 0.029429886 ubox
16 25 0.998333466 ubox
16 66 0.005039476 ubox
16 68 0.011933912 ubox
16 71 0.026027260 ubox
17 24 0.998455792 ubox
17 65 0.003547458 ubox
17 70 0.028324415 ubox
18 23 0.997864679 ubox
18 24 0.007078414 ubox
18 26 0.007791074 ubox
18 67 0.010088247 ubox
18 69 0.028559798 ubox
19 23 0.010004655 ubox
19 26 0.003758607 ubox
19 67 0.007742286 ubox
19 69 0.003361078 ubox
19 78 0.004009576 ubox
20 77 0.004003311 ubox
21 76 0.003800650 ubox
22 65 0.031103150 ubox
23 64 0.032183217 ubox
24 63 0.031811395 ubox
24 66 0.009887822 ubox
25 65 0.010863130 ubox
26 64 0.011030282 ubox
26 71 0.004164874 ubox
27 65 0.004283591 ubox
27 70 0.005502113 ubox
28 61 0.997767579 ubox
28 69 0.005406215 ubox
29 43 0.009400264 ubox
29 60 0.999013891 ubox
29 62 0.004182311 ubox
29 68 0.005203124 ubox
30 35 0.003965256 ubox
30 59 0.999674386 ubox
30 61 0.004563787 ubox
30 67 0.004950541 ubox
31 41 0.016250751 ubox
31 59 0.003904171 ubox
32 40 0.016302679 ubox
33 39 0.016283402 ubox
33 56 0.999565954 ubox
33 57 0.010128260 ubox
34 55 0.999149587 ubox
35 42 0.005111813 ubox
35 54 0.996072268 ubox
35 56 0.016100702 ubox
35 79 0.006834567 ubox
36 41 0.005113568 ubox
36 52 0.031754341 ubox
36 55 0.016759666 ubox
36 78 0.007194510 ubox
37 77 0.007039842 ubox
38 48 0.004981522 ubox
38 52 0.284570956 ubox
38 76 0.005384304 ubox
39 48 0.014918879 ubox
39 52 0.916374836 ubox
40 47 0.014212886 ubox
40 49 0.004170117 ubox
40 50 0.298982269 ubox
40 51 0.926425726 ubox
41 49 0.382732188 ubox
41 50 0.922396658 ubox
42 48 0.390929771 ubox
43 48 0.875716801 ubox
44 48 0.017900811 ubox
44 78 0.008138958 ubox
45 77 0.008097875 ubox
46 76 0.007476962 ubox
48 79 0.010485899 ubox
49 78 0.011111002 ubox
50 77 0.011086395 ubox
51 76 0.010966302 ubox
52 71 0.020700603 ubox
53 70 0.022912562 ubox
54 69 0.023143285 ubox
55 68 0.023138126 ubox
56 67 0.023059062 ubox
58 65 0.016729210 ubox
59 64 0.021800358 ubox
62 70 0.004455449 ubox
62 77 0.004546225 ubox
63 70 0.051971512 ubox
63 76 0.005038320 ubox
63 77 0.008131715 ubox
64 69 0.053306738 ubox
64 76 0.009671298 ubox
64 78 0.007297772 ubox
65 71 0.006123449 ubox
65 72 0.005235400 ubox
65 73 0.003469231 ubox
65 74 0.005061535 ubox
65 75 0.009655468 ubox
66 70 0.005638065 ubox
67 71 0.007086732 ubox
67 79 0.004626023 ubox
68 76 0.008927301 ubox
68 77 0.014460284 ubox
69 79 0.055504262 ubox
70 74 0.011933176 ubox
70 75 0.044008063 ubox
70 79 0.228712616 ubox
71 76 0.008243416 ubox
71 77 0.027795184 ubox
71 78 0.418661043 ubox
72 76 0.027065270 ubox
72 77 0.391798393 ubox
73 77 0.012676387 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
