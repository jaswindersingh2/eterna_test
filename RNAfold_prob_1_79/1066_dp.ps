%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1066)
} def

/sequence { (\
GGAAAAAAGCACACACGAGAUAAAGAAACUUAUAUCAAAAGUAGACUGAAACAGCUACACGUGAGUGCGCUACUUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 71 0.004768611 ubox
1 73 0.017594416 ubox
1 74 0.022907563 ubox
1 75 0.005695162 ubox
1 76 0.026498876 ubox
1 77 0.037813459 ubox
1 78 0.731103265 ubox
2 70 0.004973021 ubox
2 73 0.026296821 ubox
2 74 0.007168209 ubox
2 75 0.039116579 ubox
2 76 0.059439042 ubox
2 77 0.732001873 ubox
2 78 0.656429039 ubox
3 71 0.005917241 ubox
3 74 0.039284710 ubox
3 75 0.064495968 ubox
3 76 0.731433374 ubox
3 77 0.657052911 ubox
4 71 0.011165112 ubox
4 74 0.063756914 ubox
4 75 0.723788884 ubox
4 76 0.655159180 ubox
4 77 0.020057963 ubox
5 71 0.026384753 ubox
5 74 0.675433913 ubox
5 75 0.648253357 ubox
5 76 0.025586964 ubox
5 77 0.015195845 ubox
6 71 0.210254535 ubox
6 74 0.601770192 ubox
6 75 0.029159824 ubox
6 76 0.018459019 ubox
6 77 0.004730907 ubox
7 71 0.147240050 ubox
7 74 0.026852133 ubox
7 75 0.020577608 ubox
7 76 0.005413167 ubox
8 71 0.384123581 ubox
8 74 0.021882876 ubox
8 75 0.005585101 ubox
9 68 0.922910464 ubox
9 70 0.384102419 ubox
9 71 0.005813288 ubox
9 73 0.010504193 ubox
10 67 0.924148020 ubox
10 69 0.381849635 ubox
11 66 0.927178660 ubox
12 63 0.006138370 ubox
12 65 0.925258988 ubox
12 67 0.371612227 ubox
13 62 0.008337416 ubox
13 66 0.361955582 ubox
14 61 0.008609200 ubox
14 63 0.951423909 ubox
14 65 0.297164663 ubox
14 67 0.016223529 ubox
15 33 0.008515082 ubox
15 62 0.979556354 ubox
15 66 0.016317606 ubox
16 25 0.022106093 ubox
16 61 0.983290211 ubox
16 63 0.091094526 ubox
16 65 0.016384440 ubox
17 29 0.005101329 ubox
17 31 0.043993141 ubox
17 35 0.003505147 ubox
17 36 0.145772833 ubox
17 60 0.956902040 ubox
17 62 0.068063186 ubox
18 30 0.056186688 ubox
18 31 0.009202252 ubox
18 33 0.007094068 ubox
18 35 0.144337511 ubox
18 56 0.003441492 ubox
18 62 0.006955780 ubox
19 29 0.057371515 ubox
19 30 0.008725028 ubox
19 31 0.011817065 ubox
19 33 0.010701234 ubox
19 35 0.016615690 ubox
19 36 0.954399539 ubox
19 55 0.003454775 ubox
19 58 0.010039130 ubox
19 60 0.033599833 ubox
20 30 0.011595783 ubox
20 31 0.008179250 ubox
20 33 0.215369889 ubox
20 35 0.954867381 ubox
21 25 0.003776130 ubox
21 26 0.009054053 ubox
21 27 0.021603347 ubox
21 28 0.020984238 ubox
21 32 0.238588901 ubox
21 34 0.951733057 ubox
21 37 0.003292431 ubox
21 38 0.004607195 ubox
21 39 0.003692198 ubox
21 40 0.005349282 ubox
21 59 0.006107313 ubox
22 30 0.009291921 ubox
22 31 0.239884781 ubox
22 33 0.931019862 ubox
22 35 0.003567966 ubox
23 30 0.223012831 ubox
23 31 0.762992381 ubox
23 33 0.027002822 ubox
24 30 0.786204990 ubox
24 31 0.374483110 ubox
24 33 0.033069820 ubox
24 35 0.005584290 ubox
25 29 0.772560702 ubox
25 30 0.315294361 ubox
25 31 0.080669571 ubox
25 33 0.005823063 ubox
25 36 0.117106577 ubox
26 30 0.071936881 ubox
26 31 0.046131917 ubox
26 33 0.011815448 ubox
26 35 0.115584339 ubox
27 31 0.008762986 ubox
27 33 0.012116675 ubox
27 35 0.005178348 ubox
28 33 0.020408302 ubox
28 35 0.005367649 ubox
28 42 0.012221978 ubox
29 41 0.014319145 ubox
30 34 0.004368608 ubox
30 37 0.006671948 ubox
30 38 0.013521942 ubox
30 39 0.020338440 ubox
30 40 0.018929850 ubox
31 37 0.014294130 ubox
31 38 0.021498878 ubox
31 39 0.019167972 ubox
31 40 0.009080459 ubox
33 37 0.005261209 ubox
33 38 0.008556448 ubox
33 39 0.007403778 ubox
33 40 0.009428012 ubox
35 39 0.005593550 ubox
35 40 0.008351948 ubox
35 64 0.084442905 ubox
36 63 0.089744586 ubox
37 62 0.089691079 ubox
38 62 0.004918132 ubox
39 62 0.006005193 ubox
40 56 0.006089328 ubox
40 62 0.003397636 ubox
41 52 0.004036634 ubox
41 55 0.006313063 ubox
41 58 0.997997275 ubox
41 60 0.005924896 ubox
42 51 0.004011780 ubox
42 54 0.005855912 ubox
42 57 0.999263164 ubox
42 59 0.005041794 ubox
43 56 0.999506322 ubox
44 55 0.999582054 ubox
44 56 0.004434562 ubox
45 56 0.003243929 ubox
46 54 0.998262416 ubox
47 53 0.997259707 ubox
47 54 0.006500849 ubox
48 52 0.981394266 ubox
59 66 0.005658415 ubox
60 65 0.006367618 ubox
69 73 0.013866967 ubox
69 78 0.008335064 ubox
70 79 0.006009724 ubox
73 79 0.006788645 ubox
2 78 0.9500000 lbox
3 77 0.9500000 lbox
4 76 0.9500000 lbox
5 75 0.9500000 lbox
6 74 0.9500000 lbox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
showpage
end
%%EOF
