%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (439)
} def

/sequence { (\
GGAAAGCCGAGCGCCAGCGGAAACGCGCAGAAAUGCGGCAAUACAGCGCCUAAGCGCUGGCUCGGGUCUACGGACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.021682246 ubox
1 8 0.083690078 ubox
1 63 0.011873907 ubox
1 68 0.016678645 ubox
1 69 0.134126440 ubox
1 71 0.119092693 ubox
1 75 0.009772190 ubox
1 76 0.007414220 ubox
1 77 0.007820067 ubox
1 78 0.249549684 ubox
2 7 0.084391271 ubox
2 8 0.005772308 ubox
2 62 0.006198947 ubox
2 63 0.021507273 ubox
2 67 0.007270860 ubox
2 68 0.142105613 ubox
2 69 0.011486212 ubox
2 71 0.041294770 ubox
2 75 0.006975698 ubox
2 76 0.010162611 ubox
2 77 0.243527696 ubox
2 78 0.364409469 ubox
3 62 0.016371032 ubox
3 67 0.129268614 ubox
3 69 0.052137777 ubox
3 76 0.229457658 ubox
3 77 0.360627500 ubox
4 62 0.004456283 ubox
4 67 0.017691479 ubox
4 69 0.023054359 ubox
4 76 0.324391216 ubox
4 77 0.037642785 ubox
5 62 0.077527302 ubox
5 67 0.171712370 ubox
5 69 0.032889370 ubox
5 76 0.046511189 ubox
5 77 0.011789128 ubox
6 39 0.010117559 ubox
6 61 0.084072785 ubox
6 67 0.028775804 ubox
6 68 0.033634810 ubox
6 71 0.006358774 ubox
6 75 0.044024808 ubox
6 76 0.012299304 ubox
6 77 0.005682209 ubox
6 78 0.018850407 ubox
7 38 0.010128655 ubox
7 60 0.084056482 ubox
7 64 0.008265133 ubox
7 65 0.969470648 ubox
7 66 0.028656975 ubox
7 73 0.063269777 ubox
8 37 0.010126436 ubox
8 59 0.083920083 ubox
8 64 0.989396744 ubox
8 65 0.020605502 ubox
8 72 0.063249240 ubox
9 36 0.009805905 ubox
9 58 0.041179137 ubox
9 63 0.994306689 ubox
9 71 0.062757487 ubox
10 58 0.072790306 ubox
10 62 0.994168654 ubox
10 69 0.060528293 ubox
11 57 0.084009483 ubox
11 61 0.993934865 ubox
11 63 0.005419566 ubox
11 67 0.013199162 ubox
11 68 0.060618533 ubox
11 69 0.004378528 ubox
12 30 0.003825123 ubox
12 56 0.084014815 ubox
12 60 0.992947895 ubox
12 66 0.027857751 ubox
13 18 0.006397668 ubox
13 24 0.003787556 ubox
13 26 0.004697808 ubox
13 28 0.018903032 ubox
13 36 0.007188799 ubox
13 39 0.975730603 ubox
13 55 0.084001930 ubox
13 61 0.030068209 ubox
13 67 0.021938568 ubox
14 19 0.005093430 ubox
14 20 0.032997566 ubox
14 25 0.004804592 ubox
14 27 0.018665080 ubox
14 30 0.004690470 ubox
14 35 0.007084212 ubox
14 37 0.003827115 ubox
14 38 0.976738357 ubox
14 54 0.083617713 ubox
14 59 0.006663657 ubox
14 60 0.033251174 ubox
14 64 0.017980809 ubox
14 65 0.055754753 ubox
14 66 0.022056914 ubox
15 19 0.032869564 ubox
15 20 0.007216317 ubox
15 27 0.004240777 ubox
15 30 0.008310751 ubox
15 35 0.003286848 ubox
15 37 0.975581080 ubox
15 38 0.003716319 ubox
15 54 0.005759557 ubox
15 59 0.036540961 ubox
15 64 0.055785778 ubox
15 65 0.021896966 ubox
16 34 0.005740048 ubox
16 51 0.007355972 ubox
16 58 0.036739986 ubox
16 62 0.055904624 ubox
17 24 0.006686561 ubox
17 26 0.991435720 ubox
17 28 0.033132729 ubox
17 36 0.052866637 ubox
17 39 0.010018063 ubox
17 47 0.003895100 ubox
17 49 0.013404955 ubox
17 50 0.004174107 ubox
17 57 0.036675484 ubox
17 61 0.056475110 ubox
18 25 0.994149858 ubox
18 27 0.033263441 ubox
18 35 0.052861949 ubox
18 38 0.009963843 ubox
18 46 0.003898058 ubox
18 48 0.013982093 ubox
18 56 0.036665110 ubox
18 60 0.056305992 ubox
19 24 0.991921517 ubox
19 26 0.034543125 ubox
19 34 0.049982157 ubox
19 42 0.003491784 ubox
19 47 0.013804600 ubox
19 55 0.036118194 ubox
20 24 0.009855681 ubox
20 26 0.005079541 ubox
21 42 0.004782004 ubox
22 42 0.004678972 ubox
23 42 0.003186192 ubox
23 51 0.009963013 ubox
24 30 0.037300938 ubox
24 37 0.018777141 ubox
24 38 0.021903080 ubox
24 48 0.003478255 ubox
25 36 0.020371174 ubox
25 39 0.052002320 ubox
25 47 0.003381135 ubox
25 49 0.032164603 ubox
26 30 0.004221403 ubox
26 35 0.020386155 ubox
26 37 0.085458679 ubox
26 38 0.036936256 ubox
26 46 0.003205408 ubox
26 48 0.032178252 ubox
27 34 0.015116314 ubox
27 36 0.995273028 ubox
27 39 0.026293751 ubox
27 47 0.031659921 ubox
28 35 0.996247882 ubox
28 37 0.003385185 ubox
28 38 0.026179025 ubox
28 46 0.031622017 ubox
29 34 0.961063656 ubox
30 34 0.007602982 ubox
30 36 0.024309908 ubox
30 39 0.005020599 ubox
30 44 0.015726309 ubox
32 42 0.007007586 ubox
33 42 0.016475846 ubox
34 40 0.014161838 ubox
34 41 0.017231322 ubox
34 45 0.007904368 ubox
35 39 0.014491323 ubox
35 44 0.007946810 ubox
35 49 0.003216209 ubox
36 48 0.003230465 ubox
37 42 0.010791415 ubox
37 44 0.008738335 ubox
37 49 0.003269709 ubox
37 50 0.083212127 ubox
37 62 0.018776358 ubox
37 63 0.008131465 ubox
38 42 0.005120657 ubox
38 47 0.013885080 ubox
38 49 0.083441326 ubox
38 61 0.021655015 ubox
39 46 0.014033722 ubox
39 48 0.083426301 ubox
39 60 0.021672994 ubox
39 64 0.003304199 ubox
41 62 0.004454605 ubox
44 59 0.993515178 ubox
45 58 0.995322613 ubox
46 55 0.003769576 ubox
46 57 0.995772725 ubox
47 54 0.003895432 ubox
47 56 0.995765333 ubox
48 55 0.995665185 ubox
49 54 0.992161247 ubox
50 54 0.023776368 ubox
63 72 0.003688672 ubox
63 79 0.049695236 ubox
64 71 0.004629185 ubox
64 76 0.003942931 ubox
64 77 0.088188153 ubox
64 78 0.063586067 ubox
65 71 0.003591913 ubox
65 75 0.004582522 ubox
65 76 0.217454172 ubox
65 77 0.045693671 ubox
65 78 0.011608574 ubox
66 71 0.009730467 ubox
66 75 0.960091474 ubox
66 76 0.012525138 ubox
66 77 0.004768759 ubox
66 78 0.012592050 ubox
67 73 0.006607597 ubox
67 74 0.963349455 ubox
68 72 0.010595746 ubox
68 73 0.964735017 ubox
71 79 0.087328195 ubox
72 77 0.003997333 ubox
72 78 0.093114972 ubox
73 77 0.060363071 ubox
73 78 0.030060130 ubox
75 79 0.004532478 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
66 75 0.9500000 lbox
67 74 0.9500000 lbox
68 73 0.9500000 lbox
showpage
end
%%EOF
