%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (137)
} def

/sequence { (\
GGAAAAAAGCAGAUCAGGGCCGAGCAAAGGCCAAAAGGACCAGCACGAGCGCAAGAUCAAGCAAAAAAGCUAGUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.217411879 ubox
1 14 0.003512654 ubox
1 15 0.037843189 ubox
1 21 0.003449156 ubox
1 41 0.025636143 ubox
1 46 0.005862021 ubox
1 50 0.012003745 ubox
1 52 0.021759741 ubox
1 70 0.044677781 ubox
1 71 0.061750410 ubox
1 75 0.043096167 ubox
1 76 0.117802314 ubox
1 77 0.008191963 ubox
1 78 0.208991033 ubox
2 10 0.055391802 ubox
2 14 0.026606322 ubox
2 15 0.074462562 ubox
2 20 0.003445557 ubox
2 40 0.025593373 ubox
2 46 0.004527614 ubox
2 50 0.018680186 ubox
2 52 0.008996025 ubox
2 70 0.065314305 ubox
2 71 0.003225336 ubox
2 74 0.034288519 ubox
2 75 0.136002641 ubox
2 76 0.007878853 ubox
2 77 0.201435269 ubox
2 78 0.291818586 ubox
3 14 0.071009912 ubox
3 74 0.128259728 ubox
3 76 0.189531251 ubox
3 77 0.287577488 ubox
4 14 0.005649789 ubox
4 71 0.003297327 ubox
4 74 0.017479912 ubox
4 76 0.255258991 ubox
4 77 0.022467836 ubox
5 14 0.009290841 ubox
5 71 0.003601318 ubox
5 74 0.063429272 ubox
5 76 0.026334587 ubox
5 77 0.016745214 ubox
6 14 0.006118101 ubox
6 71 0.007572460 ubox
6 74 0.050749427 ubox
6 76 0.018150969 ubox
6 77 0.043623346 ubox
7 14 0.009896535 ubox
7 71 0.005636947 ubox
7 74 0.015266361 ubox
7 76 0.048490814 ubox
7 77 0.114141825 ubox
8 14 0.016072379 ubox
8 71 0.118868932 ubox
8 74 0.014578302 ubox
8 76 0.129953279 ubox
8 77 0.010217186 ubox
9 14 0.007116407 ubox
9 15 0.025935895 ubox
9 20 0.019566225 ubox
9 25 0.004948468 ubox
9 40 0.009791494 ubox
9 41 0.015562800 ubox
9 44 0.205878521 ubox
9 50 0.012657651 ubox
9 52 0.042885947 ubox
9 58 0.005620858 ubox
9 62 0.283115268 ubox
9 70 0.122704131 ubox
9 71 0.004079674 ubox
9 74 0.123398834 ubox
9 75 0.131299737 ubox
9 76 0.008254344 ubox
9 77 0.005826103 ubox
9 78 0.034664705 ubox
10 17 0.049413781 ubox
10 18 0.006810461 ubox
10 19 0.019615975 ubox
10 24 0.004949771 ubox
10 37 0.006594293 ubox
10 38 0.014189789 ubox
10 43 0.205816511 ubox
10 49 0.012692788 ubox
10 51 0.042882985 ubox
10 61 0.283097386 ubox
10 69 0.122483884 ubox
10 73 0.168632295 ubox
10 79 0.016253844 ubox
11 71 0.006407692 ubox
11 74 0.019246406 ubox
11 76 0.040961347 ubox
11 77 0.007609348 ubox
12 21 0.003231603 ubox
12 40 0.047599608 ubox
12 41 0.173224478 ubox
12 46 0.004868529 ubox
12 50 0.008699539 ubox
12 57 0.003204721 ubox
12 58 0.815187229 ubox
12 75 0.042294237 ubox
12 77 0.003201729 ubox
12 78 0.044041116 ubox
13 57 0.816264273 ubox
13 74 0.041585616 ubox
13 77 0.035628054 ubox
14 23 0.004256565 ubox
14 33 0.007403664 ubox
14 34 0.013077567 ubox
14 35 0.015534176 ubox
14 36 0.021364522 ubox
14 37 0.010958341 ubox
14 38 0.036646986 ubox
14 39 0.204341665 ubox
14 48 0.013223493 ubox
14 53 0.005000316 ubox
14 54 0.003228284 ubox
14 55 0.007656376 ubox
14 56 0.816250398 ubox
14 73 0.038474193 ubox
15 22 0.004450702 ubox
15 37 0.043932594 ubox
15 38 0.207872096 ubox
15 43 0.003189350 ubox
15 47 0.013689960 ubox
15 55 0.815162551 ubox
15 73 0.009383779 ubox
15 79 0.009487868 ubox
16 71 0.012372973 ubox
16 77 0.008142596 ubox
17 32 0.026807560 ubox
17 41 0.007243326 ubox
17 46 0.004072519 ubox
17 52 0.770871887 ubox
17 70 0.012220666 ubox
17 76 0.009803431 ubox
17 78 0.018902185 ubox
18 31 0.019454128 ubox
18 32 0.430597711 ubox
18 40 0.006708328 ubox
18 41 0.007578357 ubox
18 50 0.026625692 ubox
18 52 0.417451735 ubox
18 75 0.009928837 ubox
18 78 0.004101098 ubox
19 25 0.003652932 ubox
19 31 0.431450314 ubox
19 40 0.007588277 ubox
19 50 0.900450764 ubox
19 52 0.019481375 ubox
19 74 0.009847235 ubox
20 24 0.003634416 ubox
20 29 0.005979847 ubox
20 30 0.431846017 ubox
20 38 0.009683356 ubox
20 49 0.900633740 ubox
20 51 0.019760826 ubox
20 73 0.009817636 ubox
21 29 0.431783678 ubox
21 37 0.009752784 ubox
21 47 0.899944501 ubox
21 49 0.012062193 ubox
22 32 0.003502544 ubox
22 46 0.897515562 ubox
23 71 0.009352337 ubox
24 31 0.009182598 ubox
24 44 0.899687155 ubox
24 46 0.009855127 ubox
24 70 0.009439271 ubox
25 30 0.009204525 ubox
25 43 0.900364244 ubox
25 69 0.009429596 ubox
29 40 0.045733740 ubox
29 41 0.895336339 ubox
30 40 0.895726567 ubox
31 37 0.008834228 ubox
31 38 0.899726639 ubox
32 37 0.898567190 ubox
32 38 0.048230425 ubox
33 77 0.006421279 ubox
34 76 0.003564646 ubox
34 77 0.010068251 ubox
35 76 0.005372420 ubox
35 77 0.030230186 ubox
36 76 0.030065157 ubox
36 77 0.294094871 ubox
37 41 0.006457314 ubox
37 44 0.017076090 ubox
37 46 0.018256003 ubox
37 50 0.004952639 ubox
37 52 0.005516855 ubox
37 58 0.005855335 ubox
37 75 0.023520447 ubox
37 76 0.348378845 ubox
37 77 0.008369518 ubox
37 78 0.010434613 ubox
38 44 0.007124346 ubox
38 46 0.004545774 ubox
38 50 0.006868943 ubox
38 52 0.004654646 ubox
38 57 0.005284064 ubox
38 58 0.011213556 ubox
38 74 0.012828377 ubox
38 75 0.356782748 ubox
38 77 0.004409943 ubox
38 78 0.006752830 ubox
39 57 0.011140605 ubox
39 74 0.357318300 ubox
39 77 0.005728346 ubox
40 47 0.006284772 ubox
40 49 0.007300888 ubox
40 51 0.005499968 ubox
40 55 0.010363671 ubox
40 73 0.356806992 ubox
41 47 0.010542391 ubox
41 49 0.003576928 ubox
41 51 0.009675259 ubox
41 55 0.005923314 ubox
41 73 0.011284684 ubox
42 71 0.349737985 ubox
42 76 0.005385368 ubox
43 50 0.079559162 ubox
43 52 0.071221453 ubox
43 62 0.010428503 ubox
43 70 0.356462348 ubox
43 75 0.005803511 ubox
44 49 0.079690381 ubox
44 51 0.071234846 ubox
44 61 0.010443690 ubox
44 69 0.355948240 ubox
45 74 0.009923801 ubox
46 51 0.008108307 ubox
46 55 0.004402784 ubox
46 73 0.010353148 ubox
46 79 0.049012580 ubox
47 52 0.009269922 ubox
47 58 0.022617281 ubox
47 78 0.051447247 ubox
48 57 0.021737034 ubox
48 71 0.011515840 ubox
48 77 0.047733499 ubox
49 62 0.125326327 ubox
49 70 0.012309981 ubox
49 76 0.021295734 ubox
49 78 0.010630018 ubox
50 55 0.016670972 ubox
50 61 0.125476265 ubox
50 69 0.012309860 ubox
50 79 0.176978516 ubox
51 58 0.008090292 ubox
51 62 0.331440557 ubox
51 74 0.010041514 ubox
51 78 0.204347253 ubox
52 61 0.331854481 ubox
52 73 0.010106327 ubox
52 79 0.028269523 ubox
53 57 0.006562868 ubox
53 76 0.009809430 ubox
53 77 0.397890688 ubox
54 71 0.006168886 ubox
54 76 0.440821218 ubox
54 77 0.009988611 ubox
55 62 0.005096007 ubox
55 70 0.006146677 ubox
55 75 0.447241020 ubox
55 76 0.006226502 ubox
55 77 0.005117050 ubox
55 78 0.020945925 ubox
56 74 0.445229389 ubox
56 76 0.005533770 ubox
56 77 0.020638312 ubox
57 72 0.013127115 ubox
57 73 0.365556014 ubox
58 73 0.241156823 ubox
59 71 0.075922849 ubox
59 74 0.024603577 ubox
59 76 0.011538385 ubox
59 77 0.023270451 ubox
60 71 0.840550290 ubox
60 74 0.005207279 ubox
60 76 0.024857211 ubox
61 70 0.872888777 ubox
61 71 0.003542712 ubox
61 74 0.021782035 ubox
61 75 0.024523842 ubox
61 78 0.003409378 ubox
62 69 0.872260266 ubox
62 73 0.031336159 ubox
63 71 0.007040100 ubox
63 74 0.004422788 ubox
63 77 0.005693334 ubox
64 71 0.015068602 ubox
64 76 0.005865164 ubox
64 77 0.006584536 ubox
65 71 0.008037407 ubox
65 74 0.005894046 ubox
65 76 0.006722817 ubox
65 77 0.007578187 ubox
66 71 0.008556300 ubox
66 74 0.004173057 ubox
66 76 0.007710959 ubox
66 77 0.013025681 ubox
67 71 0.004217642 ubox
67 74 0.006806066 ubox
67 76 0.013918628 ubox
67 77 0.056615947 ubox
68 74 0.010202024 ubox
68 76 0.063053714 ubox
68 77 0.009927642 ubox
69 74 0.004864787 ubox
69 75 0.063416607 ubox
69 76 0.009434410 ubox
69 78 0.015298564 ubox
70 79 0.012188618 ubox
72 76 0.006437472 ubox
72 77 0.011492917 ubox
73 77 0.006952986 ubox
73 78 0.084511946 ubox
74 79 0.006303085 ubox
75 79 0.009541552 ubox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
60 71 0.9500000 lbox
61 70 0.9500000 lbox
62 69 0.9500000 lbox
showpage
end
%%EOF
