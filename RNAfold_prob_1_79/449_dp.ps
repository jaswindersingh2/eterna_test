%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (449)
} def

/sequence { (\
GGAAAAGAGUACGGGACGCGAAAGCGGAAGAAAUUCCCCAAAACAAUUGAAAACAAUUGGUACUCAAAAUGGUAAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 65 0.003743738 ubox
1 70 0.036681700 ubox
1 73 0.017263827 ubox
1 78 0.064532213 ubox
2 65 0.005564960 ubox
2 70 0.031248879 ubox
2 73 0.013849297 ubox
2 77 0.062328097 ubox
2 78 0.091897230 ubox
3 64 0.004394059 ubox
3 70 0.031442546 ubox
3 73 0.011106725 ubox
3 76 0.058653612 ubox
3 77 0.090603960 ubox
4 70 0.021210169 ubox
4 73 0.009764441 ubox
4 76 0.081733356 ubox
4 77 0.006370169 ubox
5 70 0.014242395 ubox
5 73 0.007832626 ubox
5 76 0.007396937 ubox
5 77 0.008636551 ubox
6 70 0.022196033 ubox
6 73 0.021971702 ubox
6 76 0.010228728 ubox
6 77 0.003817856 ubox
7 65 0.998259281 ubox
7 78 0.017401351 ubox
8 64 0.999427453 ubox
8 77 0.017332293 ubox
9 63 0.999735827 ubox
9 76 0.016975214 ubox
10 62 0.999483392 ubox
10 74 0.007939496 ubox
10 75 0.014965072 ubox
11 61 0.999262538 ubox
11 73 0.010921564 ubox
12 20 0.005016444 ubox
12 59 0.003274082 ubox
12 60 0.998263968 ubox
12 72 0.010933291 ubox
13 17 0.019191020 ubox
13 19 0.018076319 ubox
13 25 0.005735152 ubox
13 37 0.078427350 ubox
13 38 0.748798839 ubox
13 39 0.599656566 ubox
13 65 0.003342122 ubox
14 19 0.020444955 ubox
14 25 0.006826203 ubox
14 36 0.078604641 ubox
14 37 0.751774477 ubox
14 38 0.598351766 ubox
14 39 0.083777167 ubox
14 58 0.014370607 ubox
14 64 0.003355761 ubox
15 19 0.004171543 ubox
15 25 0.013928081 ubox
15 35 0.077678369 ubox
15 36 0.752642704 ubox
15 37 0.589401711 ubox
15 38 0.083763314 ubox
15 39 0.005766864 ubox
15 57 0.007337358 ubox
15 63 0.003363315 ubox
16 34 0.085945164 ubox
16 35 0.747292240 ubox
16 61 0.003440350 ubox
17 24 0.020520350 ubox
17 26 0.961756040 ubox
17 27 0.041515359 ubox
17 30 0.018170411 ubox
17 60 0.003607848 ubox
18 25 0.996914006 ubox
18 34 0.003662130 ubox
19 24 0.996614866 ubox
19 26 0.032338385 ubox
19 27 0.006354142 ubox
19 30 0.018465114 ubox
20 25 0.032864005 ubox
20 36 0.009567944 ubox
21 34 0.003521080 ubox
21 35 0.009474743 ubox
22 34 0.007980615 ubox
24 38 0.020731292 ubox
24 39 0.030949439 ubox
25 30 0.012147237 ubox
26 34 0.003301947 ubox
26 36 0.025153762 ubox
26 37 0.246746333 ubox
26 38 0.017993504 ubox
26 39 0.015246825 ubox
27 34 0.015986136 ubox
27 35 0.040856783 ubox
27 36 0.630167839 ubox
27 37 0.016883144 ubox
27 38 0.015908293 ubox
27 39 0.010855359 ubox
28 34 0.043405785 ubox
28 35 0.629657226 ubox
29 34 0.601159568 ubox
29 35 0.020154594 ubox
30 34 0.019633708 ubox
30 35 0.014132730 ubox
30 36 0.091035818 ubox
30 37 0.012045138 ubox
30 38 0.006286043 ubox
30 39 0.013980541 ubox
31 35 0.079535442 ubox
34 41 0.003811352 ubox
34 42 0.003474595 ubox
34 43 0.003856002 ubox
35 40 0.003738951 ubox
35 41 0.003737908 ubox
35 42 0.004236637 ubox
39 49 0.016358429 ubox
39 59 0.010561329 ubox
40 48 0.016267825 ubox
40 58 0.009909997 ubox
41 47 0.014870877 ubox
41 57 0.007277011 ubox
42 61 0.003934856 ubox
43 61 0.004184592 ubox
44 49 0.003277143 ubox
44 59 0.997172441 ubox
44 60 0.003630864 ubox
45 58 0.998618811 ubox
46 57 0.998643372 ubox
47 56 0.998687837 ubox
48 53 0.006296237 ubox
48 55 0.998096801 ubox
48 56 0.004617768 ubox
49 54 0.992481789 ubox
54 59 0.005858745 ubox
61 74 0.016044343 ubox
62 73 0.017083620 ubox
63 71 0.003249176 ubox
63 72 0.017158058 ubox
64 71 0.014300452 ubox
64 72 0.004867373 ubox
65 71 0.014131840 ubox
65 72 0.003645725 ubox
66 70 0.015855215 ubox
66 73 0.019951222 ubox
66 76 0.007235947 ubox
66 77 0.031111248 ubox
67 73 0.018409480 ubox
67 76 0.033843174 ubox
67 77 0.026706194 ubox
68 73 0.020028790 ubox
68 76 0.026192133 ubox
68 77 0.194733505 ubox
69 73 0.012378258 ubox
69 76 0.216097167 ubox
69 77 0.021915180 ubox
70 74 0.011636403 ubox
70 75 0.217392250 ubox
70 79 0.215558873 ubox
71 76 0.022062136 ubox
71 77 0.017323709 ubox
71 78 0.349303565 ubox
72 76 0.015210087 ubox
72 77 0.310603886 ubox
72 78 0.117557486 ubox
73 79 0.008761330 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 38 0.9500000 lbox
14 37 0.9500000 lbox
15 36 0.9500000 lbox
16 35 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
