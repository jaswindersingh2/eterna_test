%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (136)
} def

/sequence { (\
GGAAAAAACGACAUGAGAACGCGCGAAGGGUAGAAGUAACCGCGGGCAGUGCAACAUGAACGAAAAAAUGUUGGAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.205125168 ubox
1 12 0.134510926 ubox
1 14 0.010582786 ubox
1 20 0.075600240 ubox
1 22 0.005783256 ubox
1 47 0.007323724 ubox
1 77 0.003265481 ubox
1 78 0.111425249 ubox
2 9 0.100310602 ubox
2 12 0.037100645 ubox
2 14 0.004464684 ubox
2 20 0.023780355 ubox
2 22 0.003722150 ubox
2 47 0.005332039 ubox
2 77 0.093243318 ubox
2 78 0.174814794 ubox
3 14 0.010177832 ubox
3 76 0.075267302 ubox
3 77 0.165795410 ubox
4 14 0.010790639 ubox
4 76 0.124649413 ubox
4 77 0.014975593 ubox
5 14 0.023343441 ubox
5 76 0.016020793 ubox
5 77 0.041322011 ubox
6 14 0.016569550 ubox
6 76 0.049603622 ubox
6 77 0.012312299 ubox
7 14 0.030361258 ubox
7 72 0.033845776 ubox
7 76 0.012461712 ubox
7 77 0.007249831 ubox
8 14 0.018039896 ubox
8 50 0.007028931 ubox
8 71 0.034382775 ubox
8 76 0.005947124 ubox
8 77 0.003820442 ubox
9 15 0.094119719 ubox
9 17 0.106782759 ubox
9 21 0.031631339 ubox
9 23 0.009707036 ubox
9 25 0.008439018 ubox
9 28 0.003190632 ubox
9 42 0.003487516 ubox
9 44 0.005324417 ubox
9 49 0.007482676 ubox
9 51 0.010481609 ubox
9 62 0.043897267 ubox
9 70 0.034165850 ubox
9 73 0.131287033 ubox
9 74 0.012409821 ubox
9 79 0.263964173 ubox
10 14 0.058961217 ubox
10 20 0.051687319 ubox
10 22 0.013214825 ubox
10 24 0.008611997 ubox
10 41 0.003511612 ubox
10 43 0.005345570 ubox
10 47 0.009440796 ubox
10 50 0.007160262 ubox
10 52 0.011147355 ubox
10 61 0.044932369 ubox
10 69 0.029796839 ubox
10 72 0.131433388 ubox
10 77 0.006468196 ubox
10 78 0.277191496 ubox
11 50 0.022082180 ubox
11 69 0.005148234 ubox
11 71 0.131523277 ubox
11 76 0.007373379 ubox
11 77 0.230124758 ubox
12 17 0.094028992 ubox
12 21 0.018702639 ubox
12 23 0.008448929 ubox
12 25 0.003812732 ubox
12 45 0.003194039 ubox
12 49 0.023844896 ubox
12 51 0.115718206 ubox
12 58 0.102985790 ubox
12 70 0.131079709 ubox
12 74 0.016390394 ubox
12 79 0.021999959 ubox
13 37 0.004040247 ubox
13 50 0.116032977 ubox
13 57 0.104279176 ubox
13 69 0.129671786 ubox
13 76 0.028323968 ubox
13 77 0.004391460 ubox
14 18 0.011602676 ubox
14 19 0.041712001 ubox
14 21 0.015359211 ubox
14 23 0.004751550 ubox
14 36 0.004155789 ubox
14 48 0.045256835 ubox
14 49 0.114801110 ubox
14 51 0.004469817 ubox
14 53 0.013942315 ubox
14 54 0.004148646 ubox
14 56 0.105896256 ubox
14 59 0.004305016 ubox
14 67 0.005710324 ubox
14 68 0.124437576 ubox
14 74 0.006466986 ubox
14 75 0.027623641 ubox
14 79 0.083203847 ubox
15 20 0.087547235 ubox
15 22 0.013063383 ubox
15 24 0.005826785 ubox
15 47 0.053895682 ubox
15 50 0.006514146 ubox
15 52 0.017136083 ubox
15 55 0.106336148 ubox
15 57 0.003483357 ubox
15 61 0.003548915 ubox
15 77 0.005913142 ubox
15 78 0.134796885 ubox
16 50 0.013254007 ubox
16 57 0.004885701 ubox
16 76 0.005640153 ubox
16 77 0.120676448 ubox
17 22 0.010665517 ubox
17 24 0.004201037 ubox
17 47 0.247731075 ubox
17 50 0.005427836 ubox
17 52 0.049772233 ubox
17 55 0.006152559 ubox
17 61 0.006790690 ubox
17 76 0.045636293 ubox
17 77 0.007890869 ubox
17 78 0.104060740 ubox
18 50 0.023741069 ubox
18 76 0.008124618 ubox
18 77 0.095068810 ubox
19 31 0.016293844 ubox
19 50 0.185974672 ubox
19 76 0.052714245 ubox
19 77 0.004374454 ubox
20 28 0.005255081 ubox
20 30 0.016924517 ubox
20 36 0.003244177 ubox
20 44 0.253468738 ubox
20 45 0.077215799 ubox
20 46 0.341017024 ubox
20 49 0.194563517 ubox
20 51 0.086666043 ubox
20 58 0.003549416 ubox
20 62 0.033867605 ubox
20 73 0.005870843 ubox
20 74 0.028102280 ubox
20 79 0.020744299 ubox
21 31 0.005597562 ubox
21 43 0.253634939 ubox
21 47 0.884138748 ubox
21 50 0.087423887 ubox
21 52 0.028555989 ubox
21 61 0.022859214 ubox
21 78 0.008321569 ubox
22 28 0.017857560 ubox
22 30 0.005801857 ubox
22 42 0.253588683 ubox
22 44 0.365004095 ubox
22 45 0.011286995 ubox
22 46 0.885162231 ubox
22 49 0.087583283 ubox
22 51 0.029283031 ubox
22 62 0.004504961 ubox
23 31 0.019442276 ubox
23 37 0.023459274 ubox
23 40 0.008901739 ubox
23 41 0.217260389 ubox
23 43 0.366049606 ubox
23 47 0.124799288 ubox
23 50 0.028893754 ubox
23 61 0.004103436 ubox
24 28 0.009388219 ubox
24 29 0.027095882 ubox
24 30 0.032233597 ubox
24 33 0.035348020 ubox
24 36 0.040049822 ubox
24 42 0.365980172 ubox
24 44 0.882612189 ubox
24 45 0.054590868 ubox
24 46 0.124920425 ubox
24 49 0.028879220 ubox
24 58 0.013460500 ubox
24 79 0.003300118 ubox
25 37 0.010442388 ubox
25 40 0.149567152 ubox
25 41 0.291425544 ubox
25 43 0.871177601 ubox
25 47 0.011878584 ubox
25 57 0.009528112 ubox
25 78 0.003569079 ubox
26 31 0.005892983 ubox
26 37 0.016099283 ubox
26 77 0.003327753 ubox
27 37 0.040197961 ubox
28 37 0.093712720 ubox
28 40 0.115195421 ubox
28 41 0.689547935 ubox
28 43 0.059866871 ubox
29 37 0.103747091 ubox
29 40 0.693112655 ubox
29 41 0.614743015 ubox
30 37 0.041793190 ubox
30 40 0.623406094 ubox
30 41 0.007172899 ubox
30 43 0.007599790 ubox
30 52 0.006925324 ubox
31 35 0.071093909 ubox
31 36 0.031549540 ubox
31 38 0.417083587 ubox
31 39 0.590678023 ubox
31 42 0.007564158 ubox
31 51 0.006908320 ubox
32 37 0.536950771 ubox
32 50 0.006708186 ubox
33 37 0.091273510 ubox
33 40 0.020020935 ubox
33 41 0.004776472 ubox
36 40 0.006256532 ubox
36 41 0.003791568 ubox
36 43 0.005013519 ubox
36 47 0.006403664 ubox
37 42 0.004852006 ubox
37 46 0.006353711 ubox
40 46 0.003986799 ubox
41 45 0.003986673 ubox
41 51 0.005355780 ubox
42 50 0.006377183 ubox
42 52 0.014551268 ubox
43 49 0.006480058 ubox
43 51 0.014588462 ubox
43 62 0.021700430 ubox
43 79 0.006937097 ubox
44 50 0.013763646 ubox
44 61 0.022670318 ubox
44 78 0.008140269 ubox
45 52 0.004520590 ubox
45 61 0.005826690 ubox
45 77 0.007019643 ubox
45 78 0.031561812 ubox
46 52 0.012216182 ubox
46 76 0.003438390 ubox
46 77 0.024112969 ubox
46 78 0.088837440 ubox
47 51 0.012532362 ubox
47 58 0.032774330 ubox
47 62 0.006911352 ubox
47 79 0.072189784 ubox
48 57 0.032582315 ubox
48 76 0.024490996 ubox
48 77 0.745700633 ubox
49 55 0.025899976 ubox
49 57 0.026678197 ubox
49 61 0.064928606 ubox
49 76 0.929161468 ubox
49 77 0.024051854 ubox
49 78 0.045942965 ubox
50 54 0.023379993 ubox
50 56 0.029196109 ubox
50 59 0.007863752 ubox
50 60 0.060926419 ubox
50 62 0.006665955 ubox
50 74 0.011117527 ubox
50 75 0.947116769 ubox
50 79 0.005745211 ubox
51 55 0.029589776 ubox
51 61 0.009932220 ubox
51 76 0.007063602 ubox
51 78 0.011819603 ubox
52 58 0.057171830 ubox
52 62 0.008421224 ubox
52 73 0.984976570 ubox
52 74 0.013089662 ubox
53 57 0.046602862 ubox
53 72 0.985049425 ubox
54 71 0.985216750 ubox
55 62 0.019730626 ubox
55 70 0.985669602 ubox
56 69 0.983765398 ubox
57 62 0.004570607 ubox
57 63 0.015753407 ubox
57 64 0.025877580 ubox
57 65 0.021125672 ubox
57 66 0.044756991 ubox
57 67 0.049190829 ubox
57 68 0.975438012 ubox
57 74 0.007049096 ubox
57 79 0.007941684 ubox
58 78 0.014481855 ubox
59 72 0.053078993 ubox
59 77 0.014853838 ubox
60 71 0.055809638 ubox
60 76 0.014605951 ubox
61 70 0.056194294 ubox
61 73 0.016735773 ubox
61 74 0.019962965 ubox
61 79 0.044649584 ubox
62 69 0.036358288 ubox
62 72 0.016515983 ubox
62 78 0.046995007 ubox
63 69 0.004292806 ubox
63 71 0.015811522 ubox
63 72 0.019693219 ubox
63 77 0.046500603 ubox
64 69 0.003579454 ubox
64 71 0.017738798 ubox
64 72 0.004262449 ubox
64 76 0.041675710 ubox
65 69 0.003608130 ubox
65 71 0.004523415 ubox
65 72 0.008251910 ubox
66 71 0.007104647 ubox
66 72 0.008453815 ubox
67 71 0.006619870 ubox
67 72 0.010523130 ubox
67 77 0.011804623 ubox
68 72 0.008096764 ubox
68 76 0.014455500 ubox
69 74 0.003333451 ubox
69 75 0.015456294 ubox
69 79 0.004281416 ubox
70 78 0.006924902 ubox
72 79 0.005331021 ubox
73 78 0.010840247 ubox
74 78 0.010692133 ubox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 39 0.9500000 lbox
48 77 0.9500000 lbox
49 76 0.9500000 lbox
50 75 0.9500000 lbox
52 73 0.9500000 lbox
53 72 0.9500000 lbox
54 71 0.9500000 lbox
55 70 0.9500000 lbox
56 69 0.9500000 lbox
57 68 0.9500000 lbox
showpage
end
%%EOF
