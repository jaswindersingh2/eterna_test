%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (203)
} def

/sequence { (\
GGAAAACAGAAGUAGACUAUUAGAAAACUAAAUAGAAAAGAACAGACAAAAGUCGUUCACUACAACUGAAGCGUAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.076885551 ubox
1 60 0.003335553 ubox
1 61 0.005247954 ubox
1 63 0.004979067 ubox
1 66 0.004841884 ubox
1 67 0.005999139 ubox
1 72 0.174921178 ubox
1 74 0.068776405 ubox
1 76 0.013754830 ubox
1 77 0.008718510 ubox
1 78 0.167616541 ubox
2 7 0.021066264 ubox
2 60 0.005547034 ubox
2 66 0.006398518 ubox
2 72 0.263200749 ubox
2 74 0.051763055 ubox
2 76 0.011829521 ubox
2 77 0.165794264 ubox
2 78 0.227429949 ubox
3 74 0.038044857 ubox
3 76 0.159421170 ubox
3 77 0.227133238 ubox
4 74 0.064931356 ubox
4 76 0.214825109 ubox
4 77 0.011316673 ubox
5 74 0.054801133 ubox
5 76 0.013513050 ubox
5 77 0.013788157 ubox
6 13 0.025786983 ubox
6 67 0.004549283 ubox
6 74 0.177162508 ubox
6 76 0.016376190 ubox
6 77 0.005870195 ubox
7 12 0.026740352 ubox
7 15 0.005187830 ubox
7 68 0.948837957 ubox
7 71 0.018666056 ubox
7 73 0.145315158 ubox
7 79 0.007208658 ubox
8 13 0.004175093 ubox
8 18 0.003603856 ubox
8 61 0.005279890 ubox
8 67 0.965619196 ubox
9 17 0.003809913 ubox
9 60 0.005500791 ubox
9 63 0.016448624 ubox
9 66 0.965562653 ubox
9 67 0.005558604 ubox
9 72 0.049901637 ubox
9 78 0.033988138 ubox
10 67 0.015171131 ubox
10 77 0.033113200 ubox
11 18 0.006732568 ubox
11 29 0.005467656 ubox
11 61 0.028233265 ubox
11 67 0.059642117 ubox
11 76 0.030174461 ubox
11 77 0.010450861 ubox
12 17 0.006991944 ubox
12 20 0.003635145 ubox
12 28 0.005680186 ubox
12 60 0.029163371 ubox
12 63 0.990037406 ubox
12 66 0.059565319 ubox
12 72 0.010823591 ubox
12 76 0.013409901 ubox
13 19 0.003743103 ubox
13 27 0.005513045 ubox
13 30 0.003325122 ubox
13 37 0.003988425 ubox
13 38 0.003170604 ubox
13 39 0.005084788 ubox
13 59 0.027777181 ubox
13 62 0.991226873 ubox
13 65 0.056987641 ubox
13 68 0.053643303 ubox
13 71 0.010441507 ubox
13 75 0.015149723 ubox
14 18 0.003351327 ubox
14 29 0.003617547 ubox
14 61 0.990847486 ubox
14 67 0.054764765 ubox
14 74 0.014949932 ubox
15 28 0.003656761 ubox
15 58 0.003273172 ubox
15 60 0.985005495 ubox
15 61 0.004763958 ubox
15 63 0.029768454 ubox
15 66 0.054541583 ubox
15 72 0.016241029 ubox
15 78 0.007438641 ubox
16 21 0.003407029 ubox
16 33 0.010581689 ubox
16 56 0.003649608 ubox
16 61 0.005450670 ubox
16 77 0.006891321 ubox
17 23 0.019787588 ubox
17 35 0.974885492 ubox
17 55 0.003572395 ubox
17 71 0.014222370 ubox
18 22 0.017936993 ubox
18 23 0.003767925 ubox
18 24 0.003465555 ubox
18 25 0.004549915 ubox
18 27 0.003372592 ubox
18 30 0.005835762 ubox
18 31 0.004778382 ubox
18 32 0.015817246 ubox
18 34 0.980409476 ubox
18 35 0.010314540 ubox
18 36 0.004792332 ubox
18 37 0.004067840 ubox
18 59 0.006959994 ubox
18 70 0.013804462 ubox
19 29 0.005818721 ubox
19 33 0.976831903 ubox
20 26 0.004465816 ubox
20 27 0.007585408 ubox
20 30 0.007504278 ubox
20 31 0.562791643 ubox
20 32 0.809482215 ubox
20 34 0.003187792 ubox
20 35 0.008831750 ubox
20 36 0.004238934 ubox
20 37 0.003995216 ubox
20 69 0.010369590 ubox
21 25 0.004451939 ubox
21 26 0.008757619 ubox
21 27 0.005936813 ubox
21 30 0.789004484 ubox
21 31 0.595301583 ubox
21 32 0.007429386 ubox
21 34 0.012361732 ubox
21 35 0.004133428 ubox
21 36 0.004276707 ubox
21 68 0.010548671 ubox
22 29 0.957698387 ubox
22 33 0.012522349 ubox
22 67 0.010568209 ubox
23 28 0.952270437 ubox
23 29 0.097295371 ubox
23 66 0.010515885 ubox
23 78 0.004231469 ubox
24 29 0.056547322 ubox
24 33 0.005090379 ubox
24 77 0.004226729 ubox
25 29 0.012208664 ubox
25 76 0.004032465 ubox
26 33 0.003756594 ubox
27 74 0.003876604 ubox
28 35 0.030176315 ubox
28 73 0.003915249 ubox
29 34 0.028408505 ubox
29 35 0.003448622 ubox
29 36 0.004398516 ubox
29 38 0.004055281 ubox
33 37 0.004383184 ubox
33 38 0.008384872 ubox
33 39 0.007730254 ubox
33 62 0.007489612 ubox
33 68 0.003492655 ubox
34 61 0.008045565 ubox
34 67 0.003883874 ubox
35 58 0.003393394 ubox
35 60 0.008115215 ubox
35 63 0.005584718 ubox
35 66 0.003904960 ubox
36 57 0.003349330 ubox
36 61 0.004132255 ubox
37 61 0.012830621 ubox
38 61 0.004780190 ubox
39 61 0.005562342 ubox
40 54 0.003493694 ubox
40 57 0.005571881 ubox
40 58 0.997790966 ubox
40 60 0.004355379 ubox
41 56 0.004910890 ubox
41 57 0.998631524 ubox
42 53 0.004398802 ubox
42 56 0.997923125 ubox
42 57 0.005633984 ubox
43 52 0.005059861 ubox
43 55 0.992269678 ubox
44 53 0.014614803 ubox
44 56 0.004200838 ubox
45 53 0.011386286 ubox
45 54 0.998462568 ubox
45 57 0.003746696 ubox
46 53 0.998753188 ubox
46 56 0.004191785 ubox
47 52 0.996960611 ubox
47 55 0.004396543 ubox
55 63 0.003764172 ubox
55 72 0.004977537 ubox
56 62 0.003727620 ubox
56 70 0.004459047 ubox
56 71 0.004113494 ubox
57 69 0.005798003 ubox
58 68 0.006555706 ubox
59 67 0.006277183 ubox
59 74 0.005859593 ubox
60 68 0.010346717 ubox
60 71 0.028563652 ubox
60 73 0.006137663 ubox
61 68 0.004914271 ubox
61 70 0.028454644 ubox
61 75 0.021961387 ubox
62 67 0.004772627 ubox
62 74 0.023310697 ubox
63 68 0.020075739 ubox
63 71 0.006525674 ubox
63 73 0.023430104 ubox
65 74 0.048361328 ubox
66 71 0.013103220 ubox
66 73 0.050111457 ubox
66 79 0.022060703 ubox
67 71 0.003526943 ubox
67 73 0.007537146 ubox
67 75 0.005525830 ubox
67 79 0.103674582 ubox
68 72 0.013530278 ubox
68 74 0.005852444 ubox
68 77 0.007843205 ubox
68 78 0.216490133 ubox
69 74 0.019916848 ubox
69 76 0.017640160 ubox
69 77 0.222563842 ubox
70 74 0.011431383 ubox
70 76 0.219175088 ubox
70 77 0.026096033 ubox
71 76 0.021967805 ubox
71 77 0.011157834 ubox
71 78 0.047952269 ubox
72 79 0.266002947 ubox
73 77 0.008684804 ubox
73 78 0.287037808 ubox
74 79 0.009323606 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 31 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
