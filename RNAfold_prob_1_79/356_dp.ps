%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (356)
} def

/sequence { (\
GGAAAGCCCGUGGGAAAAACCACGCCAAAGGCAGGGCAGGCAGUGGAAAACACCCGCGAAAGCGGGCCCGCGGCCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.004491768 ubox
1 8 0.020572649 ubox
1 9 0.033267877 ubox
1 26 0.013512219 ubox
1 37 0.012357651 ubox
1 75 0.027274780 ubox
1 76 0.007239626 ubox
1 77 0.005333873 ubox
1 78 0.162308375 ubox
2 7 0.020716228 ubox
2 8 0.033240469 ubox
2 25 0.013508204 ubox
2 37 0.006351779 ubox
2 74 0.027107843 ubox
2 75 0.008179036 ubox
2 76 0.004894195 ubox
2 77 0.145805490 ubox
2 78 0.583408748 ubox
3 76 0.115313842 ubox
3 77 0.559114947 ubox
4 76 0.497672685 ubox
4 77 0.231981132 ubox
5 76 0.297676085 ubox
5 77 0.008550422 ubox
6 25 0.005232726 ubox
6 26 0.004495210 ubox
6 32 0.068473901 ubox
6 37 0.795016159 ubox
6 74 0.484284577 ubox
6 75 0.340917972 ubox
6 76 0.004182111 ubox
7 24 0.004770304 ubox
7 31 0.068545894 ubox
7 35 0.004390817 ubox
7 36 0.795851031 ubox
7 73 0.397360749 ubox
8 30 0.068517903 ubox
8 34 0.004816573 ubox
8 35 0.795855038 ubox
8 36 0.003659650 ubox
8 72 0.282671344 ubox
8 73 0.448534785 ubox
9 24 0.078876348 ubox
9 34 0.794710811 ubox
9 35 0.004753228 ubox
9 70 0.021311645 ubox
9 72 0.528613476 ubox
10 23 0.799880996 ubox
10 25 0.004944323 ubox
10 32 0.003203056 ubox
10 69 0.008783663 ubox
10 71 0.597828510 ubox
11 22 0.800865132 ubox
11 24 0.004939644 ubox
11 27 0.005052710 ubox
11 70 0.597685720 ubox
12 21 0.801344250 ubox
12 23 0.006456007 ubox
12 26 0.005348721 ubox
12 68 0.008856948 ubox
12 69 0.597913599 ubox
13 20 0.800983422 ubox
13 21 0.012879377 ubox
13 25 0.005340543 ubox
13 67 0.009060365 ubox
13 68 0.597915568 ubox
14 20 0.015842879 ubox
14 51 0.005441360 ubox
14 67 0.595947116 ubox
14 68 0.003279894 ubox
19 44 0.005060828 ubox
20 35 0.020397974 ubox
20 36 0.053920599 ubox
20 39 0.003605321 ubox
20 40 0.034238559 ubox
20 43 0.005266410 ubox
20 45 0.003192070 ubox
20 46 0.590673810 ubox
21 34 0.020420378 ubox
21 35 0.054174192 ubox
21 39 0.034339919 ubox
21 40 0.007399773 ubox
21 45 0.593408059 ubox
22 44 0.593280230 ubox
23 34 0.018270242 ubox
23 39 0.010328981 ubox
23 40 0.003451516 ubox
23 43 0.592756243 ubox
24 32 0.797911811 ubox
24 37 0.131859805 ubox
24 41 0.578270533 ubox
25 30 0.008671121 ubox
25 31 0.798732351 ubox
25 35 0.011670431 ubox
25 36 0.131938047 ubox
25 40 0.580114164 ubox
25 46 0.007870843 ubox
26 30 0.792932293 ubox
26 31 0.008381413 ubox
26 34 0.012703608 ubox
26 35 0.131889714 ubox
26 39 0.578964166 ubox
26 40 0.013196533 ubox
26 45 0.007896826 ubox
26 79 0.007973186 ubox
27 44 0.007714366 ubox
28 77 0.023726550 ubox
29 76 0.026194770 ubox
30 37 0.322867115 ubox
30 41 0.007200693 ubox
30 75 0.026534157 ubox
31 37 0.255485145 ubox
31 41 0.004203525 ubox
31 71 0.023424759 ubox
31 74 0.026534568 ubox
32 36 0.257010397 ubox
32 39 0.007673068 ubox
32 40 0.004230330 ubox
32 70 0.023405254 ubox
32 73 0.026345017 ubox
33 76 0.003712626 ubox
33 77 0.010911817 ubox
34 41 0.014190609 ubox
34 69 0.042724386 ubox
34 71 0.004163019 ubox
34 75 0.003997043 ubox
34 76 0.013134115 ubox
34 78 0.016860736 ubox
35 41 0.010327868 ubox
35 68 0.042782330 ubox
35 74 0.003972683 ubox
35 75 0.013446266 ubox
35 77 0.015055645 ubox
35 78 0.045705468 ubox
36 41 0.005559491 ubox
36 44 0.006648072 ubox
36 67 0.042781670 ubox
36 69 0.003997540 ubox
36 71 0.024713962 ubox
36 74 0.013448060 ubox
36 76 0.005485448 ubox
36 77 0.045041079 ubox
36 78 0.039072983 ubox
37 43 0.008794374 ubox
37 45 0.020470494 ubox
37 46 0.005247130 ubox
37 66 0.042529623 ubox
37 70 0.024809471 ubox
37 73 0.013425393 ubox
37 79 0.003639672 ubox
38 44 0.020176177 ubox
38 76 0.737907275 ubox
38 77 0.033549691 ubox
39 51 0.006375193 ubox
39 68 0.025935637 ubox
39 74 0.004417083 ubox
39 75 0.799414832 ubox
39 76 0.006904029 ubox
40 63 0.008950250 ubox
40 67 0.025980054 ubox
40 71 0.012667527 ubox
40 74 0.799708807 ubox
40 75 0.005382109 ubox
41 46 0.005908769 ubox
41 62 0.008876372 ubox
41 66 0.025850549 ubox
41 70 0.012679093 ubox
41 72 0.018266452 ubox
41 73 0.796493364 ubox
43 51 0.042644233 ubox
43 53 0.058596526 ubox
43 57 0.009231869 ubox
43 69 0.013278392 ubox
43 71 0.797361562 ubox
44 49 0.003682619 ubox
44 50 0.042465232 ubox
44 52 0.065203393 ubox
44 56 0.009248445 ubox
44 70 0.798856702 ubox
45 51 0.067463105 ubox
45 55 0.009246745 ubox
45 68 0.069014567 ubox
45 69 0.796746861 ubox
45 71 0.003731849 ubox
46 51 0.015817009 ubox
46 54 0.009222669 ubox
46 67 0.094174645 ubox
46 68 0.792971193 ubox
46 69 0.004427775 ubox
51 66 0.018248729 ubox
53 65 0.013744361 ubox
53 66 0.995413275 ubox
54 64 0.009790933 ubox
54 65 0.999810052 ubox
54 66 0.003928650 ubox
55 64 0.999874286 ubox
56 63 0.999917772 ubox
57 62 0.999539597 ubox
65 75 0.004589062 ubox
66 74 0.005533746 ubox
67 73 0.005586318 ubox
68 72 0.005597237 ubox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
38 76 0.9500000 lbox
39 75 0.9500000 lbox
40 74 0.9500000 lbox
41 73 0.9500000 lbox
43 71 0.9500000 lbox
44 70 0.9500000 lbox
45 69 0.9500000 lbox
46 68 0.9500000 lbox
53 66 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
showpage
end
%%EOF
