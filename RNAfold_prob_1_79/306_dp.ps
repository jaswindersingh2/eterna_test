%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (306)
} def

/sequence { (\
GGAAAAAACUAGAAGACAGAAAUGUCAGACGAUAGGAGUAGGCGAAAGGCUAACUAGAGUCAACUAGAGAUACAAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.065101158 ubox
1 10 0.080874962 ubox
1 17 0.005515647 ubox
1 64 0.017545693 ubox
1 65 0.028367664 ubox
1 71 0.008053031 ubox
1 73 0.109721796 ubox
1 76 0.015357128 ubox
1 77 0.007941335 ubox
1 78 0.184757068 ubox
2 9 0.085625885 ubox
2 10 0.007763135 ubox
2 26 0.004101691 ubox
2 61 0.004745020 ubox
2 64 0.029860283 ubox
2 65 0.004369573 ubox
2 71 0.009333568 ubox
2 73 0.070283735 ubox
2 76 0.010483979 ubox
2 77 0.182451857 ubox
2 78 0.197889079 ubox
3 10 0.012975234 ubox
3 25 0.004019502 ubox
3 60 0.004501690 ubox
3 65 0.004373820 ubox
3 71 0.022929994 ubox
3 76 0.173218306 ubox
3 77 0.196692891 ubox
4 10 0.010246332 ubox
4 65 0.004088343 ubox
4 71 0.041345497 ubox
4 76 0.178854473 ubox
4 77 0.010225590 ubox
5 10 0.012127354 ubox
5 65 0.004121434 ubox
5 71 0.066249364 ubox
5 76 0.011724165 ubox
5 77 0.007607854 ubox
6 10 0.006343367 ubox
6 65 0.004054441 ubox
6 71 0.038747348 ubox
6 76 0.008324415 ubox
6 77 0.007623696 ubox
7 65 0.004096654 ubox
7 71 0.062705369 ubox
7 76 0.007965579 ubox
7 77 0.011447042 ubox
8 60 0.005427753 ubox
8 65 0.003342012 ubox
8 71 0.047105881 ubox
8 76 0.012466493 ubox
8 77 0.004965371 ubox
9 15 0.007332209 ubox
9 19 0.007661256 ubox
9 28 0.013326176 ubox
9 35 0.024968646 ubox
9 57 0.012118540 ubox
9 59 0.005781958 ubox
9 67 0.885736636 ubox
9 69 0.054546171 ubox
9 79 0.014910388 ubox
10 14 0.009119740 ubox
10 18 0.007572452 ubox
10 27 0.014731916 ubox
10 34 0.025017235 ubox
10 56 0.012192208 ubox
10 58 0.005598928 ubox
10 62 0.003537772 ubox
10 63 0.003428345 ubox
10 66 0.891990585 ubox
10 67 0.006163439 ubox
10 68 0.051769613 ubox
10 69 0.005586073 ubox
10 70 0.006735381 ubox
10 72 0.009071174 ubox
10 74 0.003635282 ubox
10 75 0.004386281 ubox
10 79 0.004439366 ubox
11 33 0.024741821 ubox
11 55 0.012058148 ubox
11 65 0.892232949 ubox
11 71 0.009034625 ubox
11 77 0.003487557 ubox
12 17 0.006431698 ubox
12 26 0.006167261 ubox
12 30 0.011696229 ubox
12 54 0.011889606 ubox
12 61 0.003479580 ubox
12 64 0.887029148 ubox
12 65 0.007449541 ubox
12 73 0.012796438 ubox
12 77 0.007023921 ubox
12 78 0.102728238 ubox
13 25 0.005100436 ubox
13 60 0.003241933 ubox
13 65 0.019978252 ubox
13 71 0.003854455 ubox
13 76 0.007145077 ubox
13 77 0.101543127 ubox
14 65 0.006178867 ubox
14 71 0.003721404 ubox
14 76 0.089067778 ubox
14 77 0.003623292 ubox
15 26 0.993665091 ubox
15 61 0.074473274 ubox
15 78 0.021555714 ubox
16 25 0.994785362 ubox
16 60 0.074500450 ubox
16 77 0.021073332 ubox
17 24 0.994975281 ubox
17 59 0.074389700 ubox
17 79 0.005133390 ubox
18 23 0.959832215 ubox
18 76 0.004487220 ubox
19 23 0.007496247 ubox
19 26 0.019900051 ubox
19 73 0.011605253 ubox
19 78 0.032860067 ubox
20 25 0.018204131 ubox
20 71 0.003191708 ubox
20 77 0.032849915 ubox
21 71 0.003197312 ubox
21 76 0.032018188 ubox
22 33 0.004561353 ubox
22 71 0.047608400 ubox
23 31 0.004769354 ubox
23 32 0.004595569 ubox
23 34 0.065157159 ubox
23 66 0.004794060 ubox
23 68 0.003809583 ubox
23 70 0.049418876 ubox
23 72 0.018614917 ubox
23 74 0.016535940 ubox
24 30 0.007653522 ubox
24 33 0.071331195 ubox
24 64 0.009568355 ubox
24 65 0.004158404 ubox
24 71 0.019526976 ubox
24 73 0.016632634 ubox
25 29 0.006904106 ubox
25 32 0.071813237 ubox
25 36 0.004969214 ubox
25 63 0.009405043 ubox
25 66 0.003754293 ubox
25 68 0.052256129 ubox
25 70 0.019934480 ubox
25 72 0.012721720 ubox
26 31 0.071798393 ubox
26 35 0.006365863 ubox
26 67 0.053173344 ubox
26 69 0.020219621 ubox
27 33 0.003449515 ubox
27 65 0.121372724 ubox
28 61 0.965499748 ubox
28 64 0.126343533 ubox
28 78 0.004149912 ubox
29 39 0.015754305 ubox
29 60 0.966597411 ubox
29 65 0.003944989 ubox
29 77 0.003883788 ubox
30 35 0.024580363 ubox
30 36 0.016372474 ubox
30 38 0.016605588 ubox
30 44 0.003687260 ubox
30 59 0.966640822 ubox
30 69 0.005076943 ubox
30 79 0.012513588 ubox
31 43 0.003725586 ubox
31 61 0.233805306 ubox
31 78 0.013049762 ubox
32 60 0.233679200 ubox
32 71 0.003937896 ubox
32 77 0.012480226 ubox
33 40 0.004289928 ubox
33 56 0.929176158 ubox
33 57 0.062281725 ubox
33 58 0.020823907 ubox
33 59 0.226501210 ubox
33 66 0.005454852 ubox
33 70 0.004022522 ubox
34 39 0.004382481 ubox
34 55 0.923417627 ubox
34 65 0.005486416 ubox
35 54 0.915537305 ubox
35 55 0.053041629 ubox
35 61 0.006179103 ubox
35 64 0.005418534 ubox
35 78 0.003787807 ubox
36 51 0.003179617 ubox
36 54 0.066232798 ubox
36 55 0.025046433 ubox
36 60 0.006108573 ubox
36 61 0.004265118 ubox
36 73 0.006121841 ubox
36 77 0.003689958 ubox
36 78 0.011793007 ubox
37 51 0.105906259 ubox
37 55 0.367730612 ubox
37 60 0.003556778 ubox
37 65 0.016272259 ubox
37 76 0.003287972 ubox
37 77 0.011727465 ubox
38 50 0.109116116 ubox
38 51 0.088292454 ubox
38 54 0.383417313 ubox
38 64 0.016782789 ubox
38 73 0.007349834 ubox
38 76 0.011237695 ubox
39 48 0.009547480 ubox
39 49 0.107211796 ubox
39 52 0.767136308 ubox
39 53 0.372456268 ubox
39 56 0.004758595 ubox
39 63 0.016523897 ubox
39 72 0.007307128 ubox
39 75 0.010730289 ubox
40 51 0.820542912 ubox
40 55 0.004943215 ubox
40 71 0.006915347 ubox
41 50 0.820003851 ubox
41 51 0.534575070 ubox
41 54 0.004612158 ubox
41 61 0.018324105 ubox
42 50 0.559922405 ubox
42 60 0.018393662 ubox
43 48 0.807208806 ubox
43 49 0.566535356 ubox
43 59 0.018399298 ubox
43 79 0.005100014 ubox
44 78 0.005579548 ubox
45 77 0.005558277 ubox
46 76 0.005291501 ubox
47 55 0.017200813 ubox
48 54 0.017739921 ubox
48 55 0.003491125 ubox
48 61 0.008918517 ubox
49 54 0.003581925 ubox
49 60 0.008989381 ubox
49 73 0.003996556 ubox
50 59 0.009006145 ubox
51 58 0.008731439 ubox
54 59 0.003189018 ubox
54 67 0.034018364 ubox
54 69 0.004899989 ubox
55 66 0.034543929 ubox
55 68 0.004931178 ubox
56 65 0.035005802 ubox
57 61 0.003683562 ubox
57 64 0.034885081 ubox
57 73 0.012051232 ubox
57 78 0.008917222 ubox
58 65 0.008228401 ubox
58 77 0.008911151 ubox
59 64 0.008369490 ubox
59 71 0.023339143 ubox
59 73 0.003214856 ubox
59 76 0.008257659 ubox
60 68 0.008933001 ubox
60 70 0.024110491 ubox
60 75 0.007758798 ubox
61 67 0.009942434 ubox
61 69 0.024317660 ubox
62 71 0.009735734 ubox
62 77 0.005322300 ubox
63 71 0.007138505 ubox
63 76 0.005691585 ubox
64 69 0.026386191 ubox
64 79 0.011427916 ubox
65 69 0.005621348 ubox
65 70 0.009079893 ubox
65 72 0.042495306 ubox
65 74 0.010726836 ubox
65 75 0.006985133 ubox
65 79 0.006432932 ubox
66 71 0.044763124 ubox
66 76 0.005728769 ubox
66 77 0.006229285 ubox
67 71 0.005792180 ubox
67 73 0.037473500 ubox
67 76 0.006956111 ubox
67 77 0.022018851 ubox
67 78 0.166726045 ubox
68 76 0.029359905 ubox
68 77 0.166830754 ubox
69 73 0.037315497 ubox
69 76 0.118275609 ubox
69 77 0.059726265 ubox
69 78 0.545035456 ubox
70 76 0.066441022 ubox
70 77 0.538045394 ubox
71 75 0.062821774 ubox
71 79 0.006262176 ubox
72 76 0.014924738 ubox
72 77 0.009683613 ubox
73 79 0.037238038 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
