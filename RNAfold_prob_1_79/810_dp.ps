%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (810)
} def

/sequence { (\
GGAAAACGGAGCCCGAGGCCCAGGGCCCGGAGCCCGAAAAGAGGCCCGAGGCCCGGGCCCGAGGCCCAGCCAGGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.098580786 ubox
1 13 0.015222382 ubox
1 14 0.033640695 ubox
1 60 0.003600136 ubox
1 67 0.005408079 ubox
1 71 0.121008370 ubox
1 75 0.011741142 ubox
1 76 0.010012774 ubox
1 78 0.023095673 ubox
2 7 0.031702664 ubox
2 12 0.015301881 ubox
2 13 0.033579549 ubox
2 66 0.005400925 ubox
2 70 0.121050265 ubox
2 71 0.004771887 ubox
2 75 0.011549330 ubox
2 77 0.021625860 ubox
2 78 0.067440254 ubox
3 76 0.018382019 ubox
3 77 0.067202784 ubox
4 76 0.063639721 ubox
7 15 0.100010536 ubox
7 36 0.008615368 ubox
7 61 0.011935454 ubox
7 69 0.035245042 ubox
7 73 0.061887792 ubox
7 74 0.005022526 ubox
7 79 0.919972121 ubox
8 13 0.003275065 ubox
8 14 0.102361935 ubox
8 21 0.003660434 ubox
8 35 0.008797416 ubox
8 60 0.042303500 ubox
8 67 0.199002916 ubox
8 70 0.003415105 ubox
8 71 0.032733864 ubox
8 78 0.970481924 ubox
9 13 0.100714463 ubox
9 14 0.004710865 ubox
9 20 0.003663878 ubox
9 34 0.008796837 ubox
9 59 0.042621242 ubox
9 60 0.003593193 ubox
9 66 0.199236205 ubox
9 67 0.016835070 ubox
9 70 0.032620702 ubox
9 77 0.970346120 ubox
9 78 0.016237533 ubox
10 76 0.970938272 ubox
10 77 0.011818627 ubox
11 19 0.003690303 ubox
11 33 0.008796093 ubox
11 58 0.043525184 ubox
11 65 0.203268056 ubox
11 66 0.005089896 ubox
11 75 0.971300153 ubox
12 18 0.003691439 ubox
12 32 0.008796104 ubox
12 57 0.043542780 ubox
12 64 0.203435715 ubox
12 74 0.969784000 ubox
13 17 0.003666579 ubox
13 30 0.008796983 ubox
13 56 0.043542850 ubox
13 63 0.203426916 ubox
13 64 0.003566146 ubox
13 69 0.005689588 ubox
13 73 0.966430502 ubox
13 74 0.054009820 ubox
14 29 0.008798212 ubox
14 55 0.043542224 ubox
14 61 0.829077119 ubox
14 63 0.005545507 ubox
14 69 0.217099554 ubox
14 73 0.076233784 ubox
14 79 0.005228742 ubox
15 28 0.008794028 ubox
15 54 0.043511349 ubox
15 60 0.836805446 ubox
15 67 0.082164851 ubox
15 70 0.079977944 ubox
15 71 0.105522817 ubox
15 78 0.005953669 ubox
16 77 0.005956948 ubox
17 27 0.008816770 ubox
17 53 0.043530765 ubox
17 58 0.003230233 ubox
17 59 0.852637007 ubox
17 60 0.011305819 ubox
17 66 0.282455378 ubox
17 67 0.028287208 ubox
17 70 0.008037198 ubox
17 71 0.435104436 ubox
17 76 0.005953613 ubox
18 26 0.008817953 ubox
18 52 0.043536244 ubox
18 58 0.852852955 ubox
18 59 0.008056333 ubox
18 65 0.283457399 ubox
18 66 0.020856255 ubox
18 70 0.435543334 ubox
18 75 0.005959469 ubox
19 25 0.008816580 ubox
19 51 0.043526488 ubox
19 57 0.852878044 ubox
19 64 0.284042194 ubox
19 69 0.434791012 ubox
19 74 0.005955249 ubox
20 24 0.008752479 ubox
20 50 0.043489945 ubox
20 56 0.852851697 ubox
20 57 0.005705173 ubox
20 63 0.283807360 ubox
20 64 0.016677369 ubox
20 69 0.019957631 ubox
20 73 0.005942211 ubox
21 48 0.010625153 ubox
21 55 0.849598150 ubox
21 56 0.007964195 ubox
21 61 0.069337868 ubox
21 63 0.017742284 ubox
21 69 0.009591149 ubox
23 47 0.043529125 ubox
23 53 0.008844310 ubox
23 54 0.855898118 ubox
23 60 0.284518613 ubox
23 67 0.428240681 ubox
24 46 0.043535555 ubox
24 52 0.006881727 ubox
24 53 0.856366388 ubox
24 59 0.284561203 ubox
24 66 0.428475039 ubox
25 45 0.043535597 ubox
25 52 0.856386920 ubox
25 58 0.284562080 ubox
25 65 0.428477560 ubox
26 44 0.043519718 ubox
26 50 0.005132342 ubox
26 51 0.856398717 ubox
26 57 0.284562603 ubox
26 64 0.428475717 ubox
27 43 0.043478943 ubox
27 50 0.856291354 ubox
27 56 0.284562381 ubox
27 63 0.428421983 ubox
28 36 0.037575387 ubox
28 41 0.019947732 ubox
28 48 0.855694397 ubox
28 55 0.284557537 ubox
28 61 0.428118947 ubox
29 35 0.037978072 ubox
29 47 0.856140570 ubox
29 54 0.284554133 ubox
29 60 0.428342065 ubox
30 34 0.037365643 ubox
30 46 0.856050546 ubox
30 47 0.020783542 ubox
30 53 0.284520905 ubox
30 59 0.428297012 ubox
30 60 0.010391729 ubox
32 45 0.856187875 ubox
32 52 0.284477746 ubox
32 58 0.428433478 ubox
33 43 0.009695843 ubox
33 44 0.855372768 ubox
33 50 0.003609202 ubox
33 51 0.284476201 ubox
33 57 0.428478604 ubox
34 41 0.004852728 ubox
34 43 0.854281468 ubox
34 44 0.041515297 ubox
34 50 0.284365289 ubox
34 51 0.004255805 ubox
34 56 0.428478256 ubox
35 41 0.727970646 ubox
35 43 0.057321877 ubox
35 44 0.010856775 ubox
35 48 0.282212821 ubox
35 50 0.005871414 ubox
35 55 0.428464519 ubox
36 45 0.009422452 ubox
36 46 0.017060855 ubox
36 47 0.279867816 ubox
36 54 0.423815081 ubox
41 45 0.009568883 ubox
41 46 0.031472639 ubox
41 47 0.006728667 ubox
41 53 0.006427423 ubox
41 54 0.055755847 ubox
41 78 0.007321354 ubox
42 77 0.007327852 ubox
43 53 0.428159581 ubox
43 54 0.003424607 ubox
43 59 0.004941686 ubox
43 76 0.007329561 ubox
44 52 0.428440608 ubox
44 58 0.004967555 ubox
44 75 0.007336913 ubox
45 50 0.003398379 ubox
45 51 0.428391566 ubox
45 57 0.004970084 ubox
45 74 0.007284373 ubox
46 50 0.425275117 ubox
46 51 0.006384708 ubox
46 56 0.004971443 ubox
46 73 0.007227455 ubox
47 55 0.004971358 ubox
48 54 0.004936809 ubox
50 71 0.007347882 ubox
51 70 0.007355333 ubox
52 69 0.007207431 ubox
55 67 0.077775869 ubox
56 66 0.077868311 ubox
57 65 0.077879442 ubox
58 64 0.077868861 ubox
59 63 0.077302378 ubox
60 73 0.003251357 ubox
60 79 0.106014535 ubox
61 71 0.003229766 ubox
61 78 0.122005995 ubox
62 77 0.122450199 ubox
63 67 0.003584967 ubox
63 70 0.014580796 ubox
63 71 0.818258603 ubox
63 76 0.122611012 ubox
64 70 0.819104568 ubox
64 71 0.006246455 ubox
64 75 0.122761198 ubox
65 69 0.813154837 ubox
65 74 0.122618930 ubox
66 73 0.122202123 ubox
66 74 0.010040984 ubox
67 73 0.012101939 ubox
68 76 0.107782591 ubox
68 77 0.005673640 ubox
69 75 0.116697778 ubox
69 78 0.004815330 ubox
70 74 0.115894632 ubox
71 79 0.003363982 ubox
73 78 0.016959676 ubox
74 78 0.006929318 ubox
7 79 0.9500000 lbox
8 78 0.9500000 lbox
9 77 0.9500000 lbox
10 76 0.9500000 lbox
11 75 0.9500000 lbox
12 74 0.9500000 lbox
13 73 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 41 0.9500000 lbox
63 71 0.9500000 lbox
64 70 0.9500000 lbox
65 69 0.9500000 lbox
showpage
end
%%EOF
