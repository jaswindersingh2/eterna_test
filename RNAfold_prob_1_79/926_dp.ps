%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (926)
} def

/sequence { (\
GGAAAGCAAGUACGGUCCCAAGCGAAAGCAGCGAAAGCAAAGGAGACAAAGUACAACGGAAACGAAGCGGACGUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.216410723 ubox
1 13 0.010159015 ubox
1 18 0.167447701 ubox
1 19 0.066268533 ubox
1 29 0.004744927 ubox
1 38 0.006445146 ubox
1 54 0.003443200 ubox
1 57 0.024354428 ubox
1 63 0.058210640 ubox
1 68 0.003259930 ubox
1 72 0.023542837 ubox
1 75 0.014773776 ubox
1 76 0.033627927 ubox
1 78 0.035616913 ubox
2 7 0.088835758 ubox
2 13 0.003725309 ubox
2 17 0.168743305 ubox
2 18 0.064311917 ubox
2 19 0.005953358 ubox
2 57 0.010645429 ubox
2 63 0.019981255 ubox
2 72 0.017040721 ubox
2 74 0.013844890 ubox
2 75 0.038831236 ubox
2 77 0.034078510 ubox
2 78 0.090061592 ubox
3 16 0.167382693 ubox
3 74 0.038002914 ubox
3 76 0.031787773 ubox
3 77 0.088825777 ubox
4 11 0.003979268 ubox
4 16 0.011951105 ubox
4 76 0.082860097 ubox
4 77 0.019310479 ubox
5 11 0.004153068 ubox
5 16 0.029473356 ubox
5 74 0.005417095 ubox
5 76 0.024719976 ubox
6 11 0.004402162 ubox
6 13 0.160637389 ubox
6 16 0.038857183 ubox
6 17 0.003830388 ubox
6 23 0.010150556 ubox
6 29 0.024436970 ubox
6 32 0.013197660 ubox
6 38 0.009637565 ubox
6 52 0.008515538 ubox
6 54 0.007911825 ubox
6 57 0.087271467 ubox
6 63 0.003586285 ubox
6 68 0.062448467 ubox
6 72 0.009504476 ubox
6 74 0.075189705 ubox
6 75 0.028123290 ubox
6 78 0.037179050 ubox
7 14 0.050154813 ubox
7 15 0.040302570 ubox
7 22 0.010152515 ubox
7 28 0.024418467 ubox
7 31 0.013193400 ubox
7 37 0.009627341 ubox
7 51 0.008692793 ubox
7 58 0.085410295 ubox
7 59 0.090132529 ubox
7 67 0.062454828 ubox
7 69 0.006979343 ubox
7 70 0.012323610 ubox
7 73 0.077876456 ubox
7 79 0.013172951 ubox
8 52 0.003556461 ubox
8 74 0.004681737 ubox
8 77 0.056283303 ubox
9 52 0.007845168 ubox
9 76 0.061003183 ubox
9 77 0.005122373 ubox
10 17 0.005674029 ubox
10 19 0.007130514 ubox
10 23 0.008011529 ubox
10 29 0.017016378 ubox
10 32 0.004332920 ubox
10 38 0.006905633 ubox
10 52 0.005084812 ubox
10 54 0.975598034 ubox
10 57 0.011773656 ubox
10 68 0.004552196 ubox
10 72 0.012412858 ubox
10 75 0.061663410 ubox
10 76 0.005262719 ubox
10 78 0.004495698 ubox
11 22 0.007870132 ubox
11 24 0.003476359 ubox
11 25 0.007441603 ubox
11 26 0.011191443 ubox
11 28 0.016869296 ubox
11 31 0.004226577 ubox
11 35 0.003523088 ubox
11 37 0.006757124 ubox
11 50 0.005864843 ubox
11 51 0.004888619 ubox
11 53 0.976853045 ubox
11 56 0.009712739 ubox
11 67 0.004395401 ubox
11 71 0.009746653 ubox
12 52 0.976864852 ubox
12 74 0.060074385 ubox
13 22 0.006715029 ubox
13 24 0.031920037 ubox
13 28 0.004954150 ubox
13 33 0.009741618 ubox
13 37 0.006796570 ubox
13 51 0.973458354 ubox
13 58 0.007915852 ubox
13 64 0.003928172 ubox
13 69 0.012644388 ubox
13 73 0.060737090 ubox
13 79 0.003505573 ubox
14 19 0.008646166 ubox
14 23 0.032146504 ubox
14 32 0.009790438 ubox
14 38 0.003874674 ubox
14 47 0.030605753 ubox
14 57 0.007949574 ubox
14 63 0.004046748 ubox
14 68 0.012532857 ubox
14 72 0.044805448 ubox
15 23 0.007759062 ubox
15 38 0.006926216 ubox
15 47 0.970446209 ubox
15 72 0.047580119 ubox
16 21 0.015857189 ubox
16 22 0.007624161 ubox
16 25 0.007617522 ubox
16 30 0.008907205 ubox
16 34 0.010280104 ubox
16 37 0.006542831 ubox
16 44 0.079374757 ubox
16 45 0.010612154 ubox
16 46 0.975541794 ubox
16 48 0.009944704 ubox
16 60 0.005878278 ubox
16 71 0.062786856 ubox
17 24 0.007796479 ubox
17 33 0.010526458 ubox
17 43 0.080715688 ubox
17 45 0.975636341 ubox
17 59 0.006219363 ubox
17 69 0.003742776 ubox
17 70 0.063323644 ubox
18 31 0.006145508 ubox
18 33 0.003853087 ubox
18 42 0.080790941 ubox
18 43 0.970747304 ubox
18 45 0.005161844 ubox
18 58 0.006195435 ubox
18 59 0.003294223 ubox
18 69 0.063135647 ubox
18 70 0.004734218 ubox
19 24 0.007404717 ubox
19 28 0.004202180 ubox
19 31 0.007396601 ubox
19 33 0.006828329 ubox
19 37 0.005264130 ubox
19 42 0.969798751 ubox
19 43 0.075147985 ubox
19 45 0.005282241 ubox
19 58 0.003407554 ubox
19 67 0.039482131 ubox
19 69 0.005666354 ubox
19 79 0.006798199 ubox
22 29 0.960729809 ubox
22 32 0.093063223 ubox
22 38 0.239109297 ubox
22 68 0.009705014 ubox
23 28 0.961359381 ubox
23 31 0.093102679 ubox
23 33 0.016126789 ubox
23 37 0.239404159 ubox
23 42 0.006522200 ubox
23 64 0.003981393 ubox
23 67 0.009699342 ubox
24 29 0.033179273 ubox
24 32 0.019032248 ubox
24 38 0.007088545 ubox
24 63 0.003888552 ubox
28 32 0.084228154 ubox
28 38 0.028340504 ubox
28 68 0.003636101 ubox
29 33 0.027747813 ubox
29 37 0.028380449 ubox
29 67 0.003634234 ubox
31 38 0.961186602 ubox
31 52 0.005058300 ubox
31 68 0.004627712 ubox
32 37 0.961818075 ubox
32 42 0.003849608 ubox
32 51 0.005176992 ubox
32 58 0.003892200 ubox
32 67 0.004630967 ubox
33 38 0.032719160 ubox
33 57 0.003878521 ubox
37 52 0.005310486 ubox
37 68 0.003354679 ubox
38 45 0.004970303 ubox
38 51 0.005421823 ubox
38 67 0.003354215 ubox
42 47 0.030576331 ubox
42 54 0.012468456 ubox
42 57 0.008310924 ubox
42 63 0.003548061 ubox
42 78 0.188282387 ubox
43 47 0.004446433 ubox
43 54 0.006740201 ubox
43 77 0.189327464 ubox
43 78 0.010485784 ubox
44 52 0.004333358 ubox
44 76 0.189720378 ubox
44 77 0.007463343 ubox
45 54 0.014127124 ubox
45 75 0.189947947 ubox
46 52 0.016738313 ubox
46 74 0.189881293 ubox
47 51 0.016924815 ubox
47 73 0.189347661 ubox
49 77 0.005975441 ubox
50 76 0.006672007 ubox
51 57 0.013117343 ubox
51 63 0.007748828 ubox
51 68 0.142840745 ubox
51 72 0.066677406 ubox
51 75 0.006771298 ubox
52 56 0.011905563 ubox
52 62 0.007537423 ubox
52 66 0.004928779 ubox
52 67 0.139706360 ubox
52 69 0.037719398 ubox
52 70 0.017440610 ubox
52 71 0.063291364 ubox
53 74 0.005760571 ubox
54 64 0.010514809 ubox
54 67 0.062736359 ubox
54 69 0.030629209 ubox
54 70 0.035555688 ubox
54 73 0.005913475 ubox
55 74 0.003356792 ubox
55 76 0.006250255 ubox
55 77 0.004548509 ubox
56 74 0.078435451 ubox
56 76 0.003411483 ubox
57 64 0.224359191 ubox
57 67 0.029043251 ubox
57 69 0.054490774 ubox
57 70 0.016836333 ubox
57 73 0.083301630 ubox
57 79 0.531186381 ubox
58 63 0.235139530 ubox
58 68 0.054994600 ubox
58 72 0.083653116 ubox
58 75 0.012819789 ubox
58 76 0.029211299 ubox
58 78 0.557892419 ubox
59 63 0.012992968 ubox
59 68 0.019137317 ubox
59 72 0.007945187 ubox
59 74 0.011839151 ubox
59 75 0.032083319 ubox
59 76 0.003343370 ubox
59 77 0.556721196 ubox
59 78 0.128091506 ubox
60 74 0.029546367 ubox
60 76 0.546676709 ubox
60 77 0.129002124 ubox
61 74 0.011974622 ubox
61 76 0.125209603 ubox
61 77 0.004588124 ubox
62 74 0.561914802 ubox
62 76 0.005351769 ubox
63 67 0.008233269 ubox
63 69 0.072098749 ubox
63 70 0.020466622 ubox
63 73 0.572746205 ubox
63 79 0.732711897 ubox
64 68 0.067681232 ubox
64 72 0.567025129 ubox
64 75 0.031244226 ubox
64 77 0.006460708 ubox
64 78 0.774585296 ubox
65 74 0.030105542 ubox
65 76 0.010018269 ubox
65 77 0.774527158 ubox
66 74 0.003678482 ubox
66 76 0.773376424 ubox
66 77 0.004492796 ubox
67 72 0.025154054 ubox
67 74 0.107425841 ubox
67 75 0.766006686 ubox
67 76 0.005150914 ubox
67 78 0.012493075 ubox
68 73 0.701488179 ubox
68 79 0.061143184 ubox
69 74 0.107491965 ubox
69 75 0.020576599 ubox
69 76 0.024293768 ubox
69 78 0.067857223 ubox
70 74 0.020420874 ubox
70 75 0.027015309 ubox
70 77 0.065265424 ubox
70 78 0.020974557 ubox
71 76 0.057908982 ubox
71 77 0.020047175 ubox
72 79 0.028150030 ubox
73 78 0.029534517 ubox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
17 45 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
63 79 0.9500000 lbox
64 78 0.9500000 lbox
65 77 0.9500000 lbox
66 76 0.9500000 lbox
67 75 0.9500000 lbox
68 73 0.9500000 lbox
showpage
end
%%EOF
