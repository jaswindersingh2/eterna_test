%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (992)
} def

/sequence { (\
GGAAAGCCCGACCGCGAAAGCGGGCGGGCGGGCGAAAAAAGCCCGCCCGACGGCGAAAGCCGGCGGGCGCGGCCGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.012136729 ubox
1 9 0.021636713 ubox
1 33 0.091038606 ubox
1 70 0.007150171 ubox
1 73 0.032652607 ubox
1 74 0.607993026 ubox
1 78 0.054814077 ubox
2 7 0.012173658 ubox
2 8 0.021613403 ubox
2 33 0.126062756 ubox
2 70 0.013603294 ubox
2 73 0.608149641 ubox
2 74 0.013157817 ubox
2 77 0.053363203 ubox
2 78 0.057347767 ubox
3 76 0.050845186 ubox
3 77 0.056318868 ubox
4 76 0.046990082 ubox
4 77 0.003784144 ubox
5 76 0.004137539 ubox
6 25 0.019752150 ubox
6 29 0.770149680 ubox
6 33 0.152000199 ubox
6 68 0.610356934 ubox
6 70 0.005536911 ubox
6 73 0.032712209 ubox
6 74 0.003979683 ubox
7 24 0.019908430 ubox
7 28 0.775492433 ubox
7 32 0.152968617 ubox
7 67 0.610522925 ubox
7 69 0.004797867 ubox
7 72 0.032822524 ubox
8 23 0.019622406 ubox
8 27 0.775546042 ubox
8 31 0.152976824 ubox
8 66 0.610529442 ubox
8 67 0.003571637 ubox
8 71 0.032748660 ubox
9 22 0.019328816 ubox
9 26 0.775523984 ubox
9 30 0.152971016 ubox
9 65 0.610502276 ubox
9 66 0.003497134 ubox
9 69 0.030728006 ubox
9 71 0.003325577 ubox
9 75 0.003991445 ubox
9 79 0.010827554 ubox
10 21 0.017872864 ubox
10 25 0.748782998 ubox
10 29 0.147669726 ubox
10 64 0.602066795 ubox
10 68 0.029800994 ubox
10 74 0.004149863 ubox
10 78 0.012994296 ubox
11 77 0.011907400 ubox
12 20 0.010469064 ubox
12 23 0.975442778 ubox
12 24 0.060938195 ubox
12 27 0.151465636 ubox
12 28 0.010705380 ubox
12 62 0.010246122 ubox
12 63 0.102244249 ubox
12 66 0.027290261 ubox
12 72 0.004588414 ubox
13 20 0.007149916 ubox
13 22 0.981423965 ubox
13 23 0.045001692 ubox
13 24 0.004196461 ubox
13 26 0.152669406 ubox
13 27 0.007849525 ubox
13 62 0.099892448 ubox
13 65 0.027501787 ubox
13 71 0.004596793 ubox
14 21 0.982444475 ubox
14 25 0.152855149 ubox
14 60 0.067953636 ubox
14 61 0.072610442 ubox
14 64 0.027488544 ubox
14 70 0.004604270 ubox
15 20 0.982083939 ubox
15 22 0.018211061 ubox
15 23 0.004812579 ubox
15 24 0.152754432 ubox
15 59 0.095344465 ubox
15 63 0.027403812 ubox
15 69 0.004604282 ubox
16 21 0.019553344 ubox
16 60 0.020192673 ubox
16 68 0.004589970 ubox
20 54 0.099335856 ubox
20 64 0.004552683 ubox
21 49 0.013758653 ubox
21 52 0.006828537 ubox
21 53 0.099166470 ubox
21 55 0.004824944 ubox
21 63 0.004548646 ubox
22 48 0.014008973 ubox
22 51 0.009870793 ubox
22 54 0.004822965 ubox
23 47 0.014011047 ubox
23 51 0.091887820 ubox
24 46 0.014015214 ubox
24 51 0.072749205 ubox
24 64 0.008233719 ubox
25 45 0.014016400 ubox
25 49 0.602995318 ubox
25 63 0.008228558 ubox
26 44 0.014018750 ubox
26 48 0.612264531 ubox
27 43 0.014019327 ubox
27 47 0.612298287 ubox
28 42 0.014019069 ubox
28 46 0.612302838 ubox
29 41 0.014016026 ubox
29 45 0.612297898 ubox
29 79 0.082957842 ubox
30 44 0.621373144 ubox
30 48 0.007361809 ubox
30 74 0.009919623 ubox
30 77 0.004296284 ubox
30 78 0.686355983 ubox
31 43 0.621646443 ubox
31 47 0.007378311 ubox
31 73 0.009720320 ubox
31 74 0.008511888 ubox
31 76 0.003914598 ubox
31 77 0.688006929 ubox
31 78 0.032200534 ubox
32 42 0.621650614 ubox
32 46 0.007378503 ubox
32 73 0.008244882 ubox
32 74 0.003170219 ubox
32 76 0.691544298 ubox
32 77 0.022837849 ubox
32 78 0.004464028 ubox
33 41 0.621562061 ubox
33 45 0.007378362 ubox
33 71 0.009571004 ubox
33 72 0.007916481 ubox
33 75 0.692480384 ubox
33 79 0.263589691 ubox
34 44 0.007291889 ubox
34 70 0.009575753 ubox
34 74 0.690871102 ubox
34 77 0.007955310 ubox
34 78 0.338928723 ubox
35 76 0.009349931 ubox
35 77 0.338010138 ubox
36 76 0.330200805 ubox
36 77 0.017506760 ubox
37 76 0.020893891 ubox
37 77 0.043772902 ubox
38 76 0.056404757 ubox
38 77 0.012596824 ubox
39 76 0.014276484 ubox
39 77 0.010598391 ubox
40 76 0.010596783 ubox
41 68 0.012882477 ubox
41 70 0.003547394 ubox
41 73 0.782285995 ubox
41 74 0.011980368 ubox
42 67 0.012889218 ubox
42 69 0.003210683 ubox
42 71 0.006105322 ubox
42 72 0.782916466 ubox
43 66 0.012889286 ubox
43 71 0.782825179 ubox
44 65 0.012889142 ubox
44 69 0.782781473 ubox
45 64 0.012890192 ubox
45 68 0.790304698 ubox
46 63 0.012857282 ubox
46 67 0.790335393 ubox
47 62 0.011556572 ubox
47 66 0.790336751 ubox
48 65 0.790310430 ubox
48 79 0.003850096 ubox
49 64 0.763283282 ubox
49 77 0.020641258 ubox
49 78 0.010721646 ubox
50 76 0.032776854 ubox
50 77 0.007640506 ubox
51 62 0.979579203 ubox
51 63 0.041717300 ubox
51 75 0.034857574 ubox
52 61 0.994359230 ubox
52 74 0.034940681 ubox
53 60 0.994401010 ubox
53 73 0.034941218 ubox
54 59 0.994011981 ubox
54 72 0.034796584 ubox
55 70 0.004313345 ubox
59 68 0.034940613 ubox
60 67 0.034949378 ubox
61 66 0.034936799 ubox
63 70 0.010666387 ubox
63 76 0.008580633 ubox
64 69 0.010675061 ubox
64 75 0.009005607 ubox
64 79 0.003517585 ubox
65 74 0.008968722 ubox
65 78 0.004253488 ubox
66 73 0.008898100 ubox
66 77 0.004246593 ubox
67 76 0.004298766 ubox
68 75 0.004774490 ubox
69 73 0.003925415 ubox
69 74 0.009244343 ubox
69 76 0.028095433 ubox
69 78 0.005717334 ubox
70 75 0.030267627 ubox
70 79 0.040787826 ubox
71 76 0.003866286 ubox
71 78 0.043985928 ubox
72 77 0.031125435 ubox
72 78 0.004539206 ubox
74 79 0.006877819 ubox
6 29 0.9500000 lbox
7 28 0.9500000 lbox
8 27 0.9500000 lbox
9 26 0.9500000 lbox
10 25 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
30 78 0.9500000 lbox
31 77 0.9500000 lbox
32 76 0.9500000 lbox
33 75 0.9500000 lbox
34 74 0.9500000 lbox
41 73 0.9500000 lbox
42 72 0.9500000 lbox
43 71 0.9500000 lbox
44 69 0.9500000 lbox
45 68 0.9500000 lbox
46 67 0.9500000 lbox
47 66 0.9500000 lbox
48 65 0.9500000 lbox
49 64 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
showpage
end
%%EOF
