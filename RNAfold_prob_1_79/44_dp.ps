%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (44)
} def

/sequence { (\
GGAAAUCGAGCCGCUAGAUAUCUAGCCGUGCCGCGGUUUGCCGCAUCUGAAUUCAGAGGUCCGGGCUCAACAAGGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.016148059 ubox
1 7 0.090593768 ubox
1 12 0.020838958 ubox
1 32 0.004360883 ubox
1 41 0.022970846 ubox
1 42 0.071024023 ubox
1 62 0.031231927 ubox
1 71 0.024071197 ubox
1 76 0.007098423 ubox
1 77 0.006567304 ubox
1 78 0.165161341 ubox
2 6 0.059392435 ubox
2 7 0.069199848 ubox
2 11 0.020842005 ubox
2 31 0.004340947 ubox
2 41 0.071003712 ubox
2 61 0.031403083 ubox
2 68 0.007540973 ubox
2 71 0.018384557 ubox
2 76 0.009766717 ubox
2 77 0.161726897 ubox
2 78 0.244922393 ubox
3 39 0.075287113 ubox
3 60 0.028853003 ubox
3 67 0.007341394 ubox
3 76 0.157087490 ubox
3 77 0.215683466 ubox
4 38 0.076013235 ubox
4 76 0.178105177 ubox
4 77 0.165398579 ubox
5 37 0.076204256 ubox
5 60 0.007590637 ubox
5 76 0.212421925 ubox
5 77 0.003888842 ubox
6 36 0.076227907 ubox
6 57 0.012654523 ubox
6 59 0.011955359 ubox
6 64 0.008113057 ubox
6 69 0.041988242 ubox
6 70 0.069353921 ubox
6 72 0.034462680 ubox
6 73 0.056258534 ubox
6 74 0.024615074 ubox
6 75 0.244765322 ubox
6 79 0.012350493 ubox
7 28 0.004060681 ubox
7 33 0.008466780 ubox
7 35 0.075999554 ubox
7 40 0.004360433 ubox
7 56 0.012211820 ubox
7 58 0.012939988 ubox
7 59 0.003426404 ubox
7 63 0.008904112 ubox
7 74 0.246296791 ubox
7 75 0.017087971 ubox
7 79 0.771229917 ubox
8 27 0.004134433 ubox
8 31 0.010203335 ubox
8 32 0.023664315 ubox
8 34 0.075332646 ubox
8 39 0.004539409 ubox
8 54 0.007110622 ubox
8 61 0.005417080 ubox
8 62 0.009343696 ubox
8 68 0.522245502 ubox
8 71 0.011327489 ubox
8 78 0.847252886 ubox
9 38 0.004560627 ubox
9 53 0.006834491 ubox
9 60 0.004847564 ubox
9 67 0.522966714 ubox
9 77 0.846972669 ubox
10 29 0.022673351 ubox
10 31 0.076927693 ubox
10 32 0.024639094 ubox
10 37 0.004573292 ubox
10 60 0.011921943 ubox
10 66 0.523133830 ubox
10 71 0.003194211 ubox
10 76 0.847100845 ubox
11 28 0.024414773 ubox
11 30 0.080229868 ubox
11 36 0.004576358 ubox
11 59 0.013040490 ubox
11 64 0.005550457 ubox
11 65 0.523099562 ubox
11 75 0.847497424 ubox
12 28 0.072673744 ubox
12 30 0.005376529 ubox
12 35 0.004569073 ubox
12 58 0.013025596 ubox
12 63 0.007706867 ubox
12 64 0.522274947 ubox
12 74 0.846367485 ubox
12 75 0.003257952 ubox
13 26 0.989314237 ubox
13 27 0.073812234 ubox
13 34 0.004061689 ubox
13 66 0.004270170 ubox
13 71 0.009389957 ubox
14 25 0.999078505 ubox
14 33 0.003965442 ubox
14 65 0.003861559 ubox
15 24 0.998973677 ubox
15 70 0.005736883 ubox
15 72 0.005157557 ubox
16 23 0.998696163 ubox
17 21 0.003250808 ubox
17 22 0.994506559 ubox
17 68 0.017462281 ubox
17 71 0.011318247 ubox
18 67 0.014525846 ubox
19 69 0.003822260 ubox
19 70 0.004383966 ubox
21 69 0.003605778 ubox
21 70 0.007940213 ubox
22 65 0.003761995 ubox
23 69 0.003794799 ubox
24 38 0.005612914 ubox
24 67 0.029350341 ubox
25 37 0.008703700 ubox
25 66 0.035127472 ubox
26 36 0.015725671 ubox
26 64 0.102369614 ubox
26 65 0.032066945 ubox
27 33 0.008078237 ubox
27 35 0.049941916 ubox
27 49 0.004942391 ubox
27 58 0.003187796 ubox
27 63 0.534617605 ubox
27 64 0.029056540 ubox
27 65 0.005146432 ubox
27 79 0.016913356 ubox
28 32 0.010690158 ubox
28 34 0.050447733 ubox
28 39 0.003438576 ubox
28 44 0.003806345 ubox
28 46 0.029893732 ubox
28 47 0.004003762 ubox
28 48 0.003940344 ubox
28 61 0.024869022 ubox
28 62 0.539328661 ubox
28 66 0.013395038 ubox
28 67 0.048568984 ubox
28 68 0.651712741 ubox
28 71 0.181334771 ubox
28 78 0.018078806 ubox
29 33 0.047196123 ubox
29 43 0.003800692 ubox
29 45 0.038585405 ubox
29 63 0.007104006 ubox
29 65 0.012505084 ubox
29 69 0.023867162 ubox
29 70 0.178927608 ubox
29 72 0.007378949 ubox
29 73 0.004331143 ubox
30 37 0.006028151 ubox
30 42 0.003632776 ubox
30 44 0.041021829 ubox
30 47 0.004613723 ubox
30 60 0.530492298 ubox
30 61 0.090608021 ubox
30 62 0.005711193 ubox
30 66 0.825286030 ubox
30 67 0.007035621 ubox
30 68 0.017143050 ubox
30 71 0.004902226 ubox
30 76 0.018462163 ubox
31 36 0.006250281 ubox
31 43 0.040950890 ubox
31 59 0.544645697 ubox
31 63 0.006957964 ubox
31 64 0.012527093 ubox
31 65 0.826185510 ubox
31 75 0.018877287 ubox
32 58 0.543984650 ubox
32 59 0.007500415 ubox
32 63 0.014380854 ubox
32 64 0.825434687 ubox
32 65 0.031477541 ubox
32 74 0.018874466 ubox
33 41 0.042074991 ubox
33 44 0.570469508 ubox
33 62 0.006342922 ubox
33 66 0.003749704 ubox
34 40 0.042112429 ubox
34 43 0.571123018 ubox
34 63 0.810904146 ubox
34 65 0.003657566 ubox
35 39 0.025984029 ubox
35 41 0.004588264 ubox
35 42 0.571095152 ubox
35 61 0.011670236 ubox
35 62 0.813972386 ubox
35 67 0.007430330 ubox
35 71 0.007718467 ubox
36 41 0.567567674 ubox
36 60 0.005150493 ubox
36 61 0.813433954 ubox
36 62 0.005680632 ubox
36 66 0.009944878 ubox
36 68 0.005053954 ubox
36 71 0.048136101 ubox
37 57 0.004989026 ubox
37 59 0.018718838 ubox
37 65 0.009941212 ubox
37 69 0.005381758 ubox
37 70 0.047971441 ubox
38 56 0.005090750 ubox
38 58 0.018269515 ubox
38 59 0.017663363 ubox
38 64 0.009393789 ubox
38 69 0.046487964 ubox
38 70 0.004006524 ubox
39 45 0.003292512 ubox
39 55 0.005205063 ubox
39 57 0.007262208 ubox
39 58 0.019782064 ubox
39 59 0.006140313 ubox
39 63 0.009360395 ubox
39 69 0.004831045 ubox
40 44 0.003668806 ubox
40 54 0.005198710 ubox
40 60 0.787578244 ubox
40 61 0.006837042 ubox
40 62 0.009065598 ubox
40 66 0.054104170 ubox
40 68 0.004791283 ubox
41 56 0.003615193 ubox
41 58 0.028470929 ubox
41 59 0.793331495 ubox
41 64 0.021046950 ubox
41 65 0.052488842 ubox
42 58 0.792369033 ubox
42 59 0.018329208 ubox
42 63 0.025755705 ubox
42 64 0.050712842 ubox
43 54 0.004070064 ubox
43 60 0.179529608 ubox
43 61 0.019210521 ubox
43 62 0.028500664 ubox
44 49 0.004273358 ubox
44 56 0.043141590 ubox
44 58 0.050336833 ubox
44 59 0.181638841 ubox
44 63 0.004854078 ubox
45 52 0.006803073 ubox
45 53 0.005608330 ubox
45 60 0.047442559 ubox
46 51 0.006496896 ubox
46 55 0.013021829 ubox
46 57 0.967187883 ubox
46 58 0.004439495 ubox
46 59 0.048765982 ubox
46 65 0.003467422 ubox
47 56 0.995522279 ubox
47 58 0.050246472 ubox
47 64 0.005648766 ubox
48 55 0.995707987 ubox
48 57 0.050200999 ubox
48 63 0.006238398 ubox
48 69 0.006996593 ubox
49 53 0.004651874 ubox
49 54 0.992765153 ubox
49 61 0.003717505 ubox
49 62 0.006480909 ubox
49 68 0.007564045 ubox
50 60 0.003441710 ubox
50 67 0.007494314 ubox
51 60 0.005974973 ubox
52 59 0.006071477 ubox
52 65 0.007123407 ubox
53 58 0.004791309 ubox
53 64 0.007427727 ubox
54 63 0.007944467 ubox
56 61 0.004450731 ubox
56 68 0.018985921 ubox
57 67 0.019787953 ubox
58 62 0.013157251 ubox
58 66 0.020181068 ubox
58 67 0.023674744 ubox
58 68 0.009698651 ubox
58 71 0.004279822 ubox
58 78 0.003588682 ubox
59 66 0.026454014 ubox
59 67 0.004552980 ubox
59 68 0.004891992 ubox
59 71 0.005268365 ubox
60 64 0.009955696 ubox
60 65 0.025135101 ubox
60 70 0.005072668 ubox
61 65 0.003372233 ubox
61 75 0.005767856 ubox
62 74 0.005824056 ubox
62 79 0.073120359 ubox
63 68 0.007465732 ubox
63 71 0.011534763 ubox
63 78 0.084216628 ubox
64 68 0.009455085 ubox
64 71 0.071635583 ubox
64 77 0.084141440 ubox
65 71 0.023830150 ubox
65 76 0.084467405 ubox
66 74 0.005113413 ubox
66 75 0.084493803 ubox
67 72 0.017863530 ubox
67 73 0.018723484 ubox
67 74 0.077824088 ubox
68 74 0.022603206 ubox
69 76 0.007209458 ubox
69 77 0.067890165 ubox
70 76 0.076762456 ubox
70 77 0.007135600 ubox
71 75 0.077234438 ubox
71 79 0.015989594 ubox
72 76 0.003773933 ubox
72 77 0.007415486 ubox
73 77 0.004404736 ubox
74 78 0.015742415 ubox
7 79 0.9500000 lbox
8 78 0.9500000 lbox
9 77 0.9500000 lbox
10 76 0.9500000 lbox
11 75 0.9500000 lbox
12 74 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
28 68 0.9500000 lbox
30 66 0.9500000 lbox
31 65 0.9500000 lbox
32 64 0.9500000 lbox
34 63 0.9500000 lbox
35 62 0.9500000 lbox
36 61 0.9500000 lbox
40 60 0.9500000 lbox
41 59 0.9500000 lbox
42 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
