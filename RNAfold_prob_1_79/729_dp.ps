%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (729)
} def

/sequence { (\
GGAAAGUCGGUGCAAAGGACGGACAAGUAGUCAGGAAAACAGAGUACAGACGCUACGAAAGAAGGGUCGAUUUACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.006831918 ubox
1 24 0.023131228 ubox
1 28 0.012514568 ubox
1 31 0.003592861 ubox
1 32 0.037337406 ubox
1 40 0.005621544 ubox
1 47 0.003765404 ubox
1 51 0.003489734 ubox
1 54 0.005772336 ubox
1 56 0.010946524 ubox
1 68 0.005918646 ubox
1 71 0.004252321 ubox
1 72 0.007754712 ubox
1 73 0.039234261 ubox
1 75 0.089503504 ubox
1 76 0.085093431 ubox
1 77 0.011999885 ubox
1 78 0.354265146 ubox
2 7 0.005051955 ubox
2 8 0.006899495 ubox
2 24 0.014717678 ubox
2 28 0.026197329 ubox
2 31 0.036233615 ubox
2 32 0.039772771 ubox
2 53 0.006089678 ubox
2 56 0.004209124 ubox
2 68 0.006813535 ubox
2 71 0.007418201 ubox
2 72 0.045775675 ubox
2 73 0.081179081 ubox
2 75 0.097923257 ubox
2 76 0.014818212 ubox
2 77 0.345686023 ubox
2 78 0.497324041 ubox
3 7 0.006021375 ubox
3 28 0.009254877 ubox
3 31 0.039595903 ubox
3 54 0.004238822 ubox
3 67 0.004674293 ubox
3 71 0.043247197 ubox
3 72 0.083126673 ubox
3 73 0.086870930 ubox
3 76 0.326165548 ubox
3 77 0.492264076 ubox
4 28 0.012865913 ubox
4 71 0.073269540 ubox
4 72 0.105974438 ubox
4 73 0.096540920 ubox
4 76 0.442286365 ubox
4 77 0.041426688 ubox
5 28 0.009047335 ubox
5 45 0.007271484 ubox
5 71 0.093345599 ubox
5 72 0.103318869 ubox
5 73 0.030870234 ubox
5 76 0.050097916 ubox
5 77 0.010152737 ubox
6 13 0.005319245 ubox
6 20 0.067311128 ubox
6 24 0.990550275 ubox
6 51 0.016897292 ubox
6 71 0.085895013 ubox
6 72 0.003484215 ubox
6 75 0.038840294 ubox
7 12 0.004953972 ubox
7 18 0.006247423 ubox
7 19 0.067362357 ubox
7 22 0.015459154 ubox
7 23 0.992057191 ubox
7 43 0.008993912 ubox
7 50 0.016923628 ubox
7 70 0.086078047 ubox
7 74 0.030596768 ubox
8 17 0.009857823 ubox
8 18 0.067145628 ubox
8 21 0.027457011 ubox
8 22 0.991601095 ubox
8 42 0.009743156 ubox
8 49 0.016799532 ubox
8 69 0.085824342 ubox
8 79 0.004438639 ubox
9 20 0.031171689 ubox
9 24 0.006891777 ubox
9 40 0.003335890 ubox
9 68 0.033130728 ubox
9 72 0.010984106 ubox
9 76 0.003991126 ubox
9 78 0.004816087 ubox
10 20 0.991851870 ubox
10 24 0.066459820 ubox
10 40 0.018321003 ubox
10 47 0.027273002 ubox
10 67 0.008175939 ubox
10 71 0.010607157 ubox
10 75 0.004310712 ubox
11 15 0.005475412 ubox
11 16 0.015538742 ubox
11 17 0.007970026 ubox
11 18 0.037991584 ubox
11 19 0.989142333 ubox
11 21 0.009556360 ubox
11 23 0.066441838 ubox
11 25 0.008693824 ubox
11 39 0.018275444 ubox
11 46 0.027398023 ubox
11 66 0.006199162 ubox
11 70 0.010449741 ubox
11 74 0.004269735 ubox
12 20 0.012120055 ubox
12 24 0.009744695 ubox
12 45 0.027407030 ubox
12 73 0.003851579 ubox
13 17 0.804920348 ubox
13 18 0.220880403 ubox
13 21 0.064880798 ubox
13 22 0.013676718 ubox
13 35 0.003773375 ubox
13 44 0.027356544 ubox
13 64 0.006571852 ubox
13 69 0.005585237 ubox
17 24 0.015567456 ubox
17 40 0.015808669 ubox
18 24 0.003685539 ubox
18 32 0.024304172 ubox
18 40 0.003842055 ubox
19 28 0.003854999 ubox
19 31 0.024332726 ubox
20 27 0.004022246 ubox
20 30 0.024331012 ubox
20 34 0.019627356 ubox
20 35 0.008796950 ubox
20 52 0.003875045 ubox
20 57 0.004682199 ubox
20 79 0.004077284 ubox
21 32 0.003589292 ubox
21 51 0.003923394 ubox
21 56 0.004644888 ubox
21 78 0.007035544 ubox
22 32 0.056971316 ubox
22 77 0.006178140 ubox
22 78 0.004568675 ubox
23 31 0.057163862 ubox
23 76 0.005633590 ubox
23 77 0.004200069 ubox
24 30 0.057165609 ubox
25 31 0.003511161 ubox
25 71 0.004104759 ubox
25 72 0.009793408 ubox
25 73 0.013256140 ubox
25 76 0.004878890 ubox
25 77 0.086193432 ubox
26 31 0.007905889 ubox
26 54 0.014459297 ubox
26 71 0.009623661 ubox
26 72 0.013100037 ubox
26 73 0.006752916 ubox
26 76 0.097530241 ubox
26 77 0.005209548 ubox
27 32 0.033876462 ubox
27 40 0.037992617 ubox
27 47 0.954432263 ubox
27 53 0.015005218 ubox
27 56 0.019270879 ubox
27 75 0.098641277 ubox
27 78 0.007842789 ubox
28 33 0.004461870 ubox
28 34 0.004680568 ubox
28 35 0.006406224 ubox
28 36 0.003645172 ubox
28 37 0.005506513 ubox
28 38 0.003184673 ubox
28 39 0.037006123 ubox
28 41 0.004499961 ubox
28 46 0.955639290 ubox
28 52 0.014039582 ubox
28 55 0.019297230 ubox
28 74 0.097858406 ubox
29 45 0.952499215 ubox
29 54 0.019184339 ubox
29 72 0.050031494 ubox
29 73 0.083134468 ubox
29 76 0.007441882 ubox
30 40 0.044386674 ubox
30 45 0.004268357 ubox
30 47 0.008289425 ubox
30 51 0.016680887 ubox
30 53 0.018567185 ubox
30 71 0.070773567 ubox
30 72 0.062084664 ubox
30 75 0.008042450 ubox
30 78 0.006337400 ubox
31 35 0.003224328 ubox
31 36 0.010716672 ubox
31 37 0.004673735 ubox
31 38 0.006651646 ubox
31 39 0.042997871 ubox
31 43 0.953354104 ubox
31 46 0.007795415 ubox
31 50 0.017287531 ubox
31 52 0.016845948 ubox
31 70 0.086566770 ubox
31 74 0.007856922 ubox
32 42 0.953204105 ubox
32 44 0.007225257 ubox
32 49 0.017952606 ubox
32 52 0.004552679 ubox
32 69 0.086854167 ubox
33 45 0.003657154 ubox
33 72 0.003331112 ubox
33 77 0.003222052 ubox
34 40 0.824898534 ubox
34 45 0.004264680 ubox
34 47 0.028788519 ubox
34 51 0.007028781 ubox
34 68 0.003967190 ubox
34 71 0.003746519 ubox
34 75 0.003236061 ubox
34 76 0.003774410 ubox
34 78 0.014473374 ubox
35 40 0.243850230 ubox
35 47 0.012676896 ubox
35 75 0.003837729 ubox
35 77 0.011483133 ubox
35 78 0.034571870 ubox
36 45 0.008722994 ubox
36 76 0.008774475 ubox
36 77 0.032328603 ubox
37 45 0.004990307 ubox
37 72 0.003337793 ubox
37 76 0.023448977 ubox
37 77 0.003501111 ubox
38 45 0.005993925 ubox
38 76 0.003570589 ubox
38 77 0.006043813 ubox
39 45 0.026108630 ubox
39 76 0.006868512 ubox
40 44 0.026812079 ubox
40 79 0.092512230 ubox
41 73 0.011463943 ubox
41 76 0.015339427 ubox
41 77 0.009049186 ubox
42 47 0.021871317 ubox
42 72 0.013486521 ubox
42 73 0.032576464 ubox
42 75 0.016860231 ubox
42 76 0.006798167 ubox
42 77 0.233762880 ubox
42 78 0.091950248 ubox
43 54 0.004464258 ubox
43 71 0.013666800 ubox
43 72 0.034573062 ubox
43 73 0.009969160 ubox
43 76 0.256246521 ubox
43 77 0.065810126 ubox
44 51 0.004892528 ubox
44 53 0.004568407 ubox
44 56 0.004290279 ubox
44 71 0.035767934 ubox
44 72 0.010319294 ubox
44 73 0.007307222 ubox
44 75 0.266820657 ubox
44 76 0.013504849 ubox
45 50 0.004669135 ubox
45 52 0.004449185 ubox
45 55 0.004286454 ubox
45 70 0.034986482 ubox
45 74 0.266286335 ubox
46 54 0.004186999 ubox
46 71 0.026485292 ubox
46 72 0.021062925 ubox
46 73 0.255576990 ubox
47 69 0.053359163 ubox
48 54 0.004988540 ubox
48 71 0.044070158 ubox
48 72 0.019298109 ubox
48 73 0.013379302 ubox
48 76 0.004704011 ubox
49 53 0.005132514 ubox
49 56 0.004374842 ubox
49 67 0.004775511 ubox
49 68 0.994231154 ubox
49 71 0.003819181 ubox
49 72 0.006570386 ubox
49 75 0.003630348 ubox
49 78 0.003489555 ubox
50 67 0.997383509 ubox
50 71 0.006256839 ubox
50 77 0.003288749 ubox
51 57 0.010270509 ubox
51 65 0.007642845 ubox
51 66 0.997634594 ubox
51 69 0.010033326 ubox
52 56 0.009815549 ubox
52 67 0.007647082 ubox
52 68 0.010015280 ubox
53 61 0.005354387 ubox
53 64 0.996370225 ubox
53 65 0.037947544 ubox
53 66 0.011234511 ubox
54 59 0.003526067 ubox
54 60 0.006837818 ubox
54 61 0.007648706 ubox
54 62 0.036156329 ubox
54 63 0.984220493 ubox
54 64 0.036478073 ubox
54 65 0.010633083 ubox
55 67 0.004330343 ubox
56 61 0.831663095 ubox
56 64 0.009180882 ubox
56 65 0.007178168 ubox
56 66 0.004592916 ubox
56 69 0.012999087 ubox
56 79 0.023665997 ubox
57 68 0.013399215 ubox
57 78 0.025085609 ubox
58 67 0.013208283 ubox
58 77 0.023788154 ubox
59 76 0.021612232 ubox
59 77 0.008248450 ubox
60 76 0.011424792 ubox
61 68 0.003981929 ubox
61 72 0.003268949 ubox
61 73 0.005059575 ubox
61 75 0.013821991 ubox
61 78 0.051937338 ubox
62 67 0.003648767 ubox
62 71 0.003235296 ubox
62 72 0.005326920 ubox
62 73 0.022089366 ubox
62 77 0.051964023 ubox
63 71 0.005308453 ubox
63 72 0.022158875 ubox
63 73 0.007472666 ubox
63 76 0.051914742 ubox
64 71 0.020800874 ubox
64 72 0.007750300 ubox
64 75 0.051848997 ubox
64 76 0.004288851 ubox
64 77 0.004253755 ubox
65 71 0.007579527 ubox
65 73 0.007058734 ubox
65 75 0.005113860 ubox
65 76 0.006395992 ubox
66 72 0.008962655 ubox
66 73 0.013468774 ubox
66 75 0.007092687 ubox
67 74 0.006753568 ubox
68 79 0.057830873 ubox
69 73 0.014566963 ubox
69 75 0.101063636 ubox
69 76 0.015636240 ubox
69 77 0.024145153 ubox
69 78 0.443487678 ubox
70 76 0.026713794 ubox
70 77 0.437911181 ubox
71 79 0.003923715 ubox
72 79 0.005892030 ubox
73 79 0.005450542 ubox
75 79 0.010664720 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
showpage
end
%%EOF
