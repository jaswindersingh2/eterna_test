%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (114)
} def

/sequence { (\
GGAAAACUAUGGAUAGAAAAGCGAAAAGCUAUCGGUCGAAAGACGGAUAGAGCCUAUGCAUAGAAAAAGAUCUUAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.025914495 ubox
1 8 0.008633704 ubox
1 71 0.012408529 ubox
1 72 0.049787722 ubox
1 73 0.096538879 ubox
1 74 0.008100967 ubox
1 78 0.107467802 ubox
2 7 0.011507532 ubox
2 71 0.045798103 ubox
2 72 0.111245844 ubox
2 73 0.003832651 ubox
2 74 0.009375201 ubox
2 76 0.003425368 ubox
2 77 0.106704231 ubox
2 78 0.119254542 ubox
3 71 0.108833719 ubox
3 73 0.009305156 ubox
3 74 0.009068119 ubox
3 76 0.104176030 ubox
3 77 0.118685753 ubox
4 71 0.005117267 ubox
4 73 0.009972470 ubox
4 74 0.020569595 ubox
4 76 0.109711729 ubox
4 77 0.007015655 ubox
5 71 0.005641921 ubox
5 73 0.020518212 ubox
5 74 0.091530723 ubox
5 76 0.008123433 ubox
5 77 0.008905793 ubox
6 71 0.011713473 ubox
6 73 0.094093850 ubox
6 74 0.048332946 ubox
6 76 0.010552089 ubox
6 77 0.003820714 ubox
7 16 0.007869016 ubox
7 63 0.990581956 ubox
7 69 0.007787680 ubox
8 15 0.007854260 ubox
8 62 0.998153920 ubox
8 63 0.004154018 ubox
8 68 0.006157380 ubox
9 14 0.007082012 ubox
9 61 0.998882146 ubox
10 60 0.999074985 ubox
10 79 0.015210913 ubox
11 59 0.999254664 ubox
11 73 0.005409881 ubox
11 78 0.024678062 ubox
12 59 0.005119761 ubox
12 72 0.005858122 ubox
12 77 0.024732287 ubox
13 57 0.993205292 ubox
13 71 0.005848357 ubox
13 76 0.024739682 ubox
14 56 0.998871315 ubox
14 70 0.005698926 ubox
14 75 0.024547390 ubox
15 55 0.998464777 ubox
15 73 0.010506430 ubox
15 74 0.021893697 ubox
16 22 0.012933563 ubox
16 33 0.005178355 ubox
16 53 0.055091616 ubox
16 54 0.994069425 ubox
16 55 0.003370147 ubox
16 72 0.014588868 ubox
16 73 0.012827573 ubox
17 30 0.003999285 ubox
17 32 0.005626426 ubox
17 55 0.003180851 ubox
17 71 0.013876508 ubox
18 30 0.005100238 ubox
18 32 0.010861957 ubox
19 30 0.018556456 ubox
19 32 0.004796234 ubox
19 55 0.005639139 ubox
19 61 0.004853094 ubox
20 30 0.404114244 ubox
20 55 0.023973777 ubox
20 61 0.003194340 ubox
21 29 0.544660499 ubox
21 53 0.490098440 ubox
21 54 0.030270633 ubox
21 59 0.024616340 ubox
22 28 0.600275670 ubox
22 34 0.004443767 ubox
22 50 0.011874991 ubox
22 52 0.488150968 ubox
22 58 0.024703110 ubox
22 79 0.003751171 ubox
23 29 0.018113350 ubox
23 33 0.004523833 ubox
23 53 0.156565181 ubox
23 54 0.011993507 ubox
23 57 0.022400004 ubox
23 78 0.004074608 ubox
24 32 0.004359334 ubox
24 55 0.007083949 ubox
24 77 0.004032371 ubox
25 55 0.006990291 ubox
25 76 0.003624211 ubox
26 48 0.003438445 ubox
26 55 0.003639936 ubox
27 55 0.008931376 ubox
28 53 0.224912199 ubox
28 54 0.010275510 ubox
29 46 0.003525420 ubox
29 50 0.803925088 ubox
29 52 0.215842673 ubox
30 45 0.003448956 ubox
30 49 0.889103376 ubox
30 50 0.020721918 ubox
30 51 0.169635982 ubox
30 52 0.003271264 ubox
31 48 0.985189283 ubox
32 46 0.009131901 ubox
32 47 0.997151012 ubox
32 49 0.003972973 ubox
32 51 0.013557829 ubox
33 45 0.014881244 ubox
33 46 0.998361527 ubox
33 50 0.014518342 ubox
34 44 0.012047397 ubox
34 53 0.003183312 ubox
35 44 0.998722512 ubox
35 48 0.014806579 ubox
36 43 0.999655754 ubox
36 47 0.015958881 ubox
36 51 0.003244975 ubox
37 42 0.999325555 ubox
37 45 0.003844966 ubox
37 46 0.015914773 ubox
37 50 0.003277480 ubox
38 44 0.004097815 ubox
45 53 0.005089167 ubox
45 54 0.007890028 ubox
46 53 0.008833210 ubox
49 55 0.003182569 ubox
50 54 0.004145408 ubox
52 59 0.014955647 ubox
53 58 0.014919438 ubox
54 63 0.008145461 ubox
55 62 0.008113238 ubox
56 61 0.007314572 ubox
60 76 0.004214928 ubox
61 75 0.004797563 ubox
62 73 0.025719893 ubox
62 74 0.003890141 ubox
63 72 0.039189142 ubox
63 74 0.007882624 ubox
63 77 0.003470526 ubox
63 78 0.051254674 ubox
64 71 0.040451861 ubox
64 73 0.019443150 ubox
64 74 0.036099101 ubox
64 76 0.010597201 ubox
64 77 0.055974498 ubox
65 71 0.013026383 ubox
65 73 0.036020530 ubox
65 74 0.055225386 ubox
65 76 0.053563773 ubox
65 77 0.019199419 ubox
66 71 0.014968488 ubox
66 73 0.054164315 ubox
66 74 0.045230531 ubox
66 76 0.019727547 ubox
66 77 0.030251420 ubox
67 71 0.010662986 ubox
67 73 0.045097157 ubox
67 74 0.063725694 ubox
67 76 0.032588003 ubox
67 77 0.039920506 ubox
68 73 0.059064397 ubox
68 74 0.028212967 ubox
68 76 0.043632168 ubox
68 77 0.022764555 ubox
69 73 0.021140022 ubox
69 74 0.022462509 ubox
69 76 0.019040224 ubox
69 77 0.061590459 ubox
69 78 0.571377192 ubox
70 74 0.012864104 ubox
70 76 0.066856502 ubox
70 77 0.564045980 ubox
71 75 0.061932024 ubox
71 79 0.005523850 ubox
72 79 0.032934904 ubox
73 79 0.006024682 ubox
74 79 0.008407896 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
