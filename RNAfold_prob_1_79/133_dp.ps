%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (133)
} def

/sequence { (\
GGAAAAAAGGAGAUCACACAGCAGCAAACGGCAAAAGCACGAGCAGCAUGAGAAGAUCAACCAAAAAAACCUCUGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.006346014 ubox
1 17 0.014198761 ubox
1 19 0.008000543 ubox
1 22 0.004034803 ubox
1 25 0.003351858 ubox
1 61 0.003884499 ubox
1 62 0.058747689 ubox
1 70 0.070804589 ubox
1 71 0.424454099 ubox
1 72 0.025412505 ubox
1 73 0.024685254 ubox
1 74 0.066286733 ubox
1 77 0.003812798 ubox
1 78 0.216857713 ubox
2 14 0.004470450 ubox
2 15 0.016271643 ubox
2 17 0.003269421 ubox
2 61 0.057739286 ubox
2 62 0.010155538 ubox
2 70 0.424344851 ubox
2 71 0.031092728 ubox
2 72 0.019737482 ubox
2 73 0.070206357 ubox
2 76 0.005395916 ubox
2 77 0.214545902 ubox
2 78 0.513935529 ubox
3 14 0.015506163 ubox
3 72 0.067424720 ubox
3 74 0.003285811 ubox
3 76 0.210075853 ubox
3 77 0.513657776 ubox
4 72 0.003203343 ubox
4 74 0.016092559 ubox
4 76 0.490323002 ubox
4 77 0.022499911 ubox
5 72 0.003779804 ubox
5 74 0.039358206 ubox
5 76 0.026015388 ubox
5 77 0.028252820 ubox
6 72 0.005331008 ubox
6 74 0.209792198 ubox
6 76 0.032093033 ubox
6 77 0.053402557 ubox
7 72 0.020308275 ubox
7 74 0.050074222 ubox
7 76 0.049865475 ubox
7 77 0.020332915 ubox
8 72 0.526487178 ubox
8 74 0.040164182 ubox
8 76 0.019227290 ubox
8 77 0.018877654 ubox
9 15 0.014278677 ubox
9 17 0.020383729 ubox
9 19 0.015071070 ubox
9 22 0.008241215 ubox
9 25 0.003926145 ubox
9 58 0.009362334 ubox
9 61 0.294671477 ubox
9 62 0.687365605 ubox
9 70 0.015252315 ubox
9 71 0.542470772 ubox
9 72 0.020860003 ubox
9 73 0.038688400 ubox
9 74 0.138265956 ubox
9 76 0.021643587 ubox
9 78 0.024493952 ubox
10 14 0.009308836 ubox
10 15 0.014021364 ubox
10 17 0.011613373 ubox
10 19 0.009375868 ubox
10 57 0.008341147 ubox
10 58 0.033653056 ubox
10 61 0.687016013 ubox
10 62 0.100719877 ubox
10 70 0.541200875 ubox
10 71 0.024273940 ubox
10 72 0.030105089 ubox
10 73 0.148688612 ubox
10 77 0.023675623 ubox
10 78 0.023396144 ubox
11 57 0.034641661 ubox
11 72 0.149080190 ubox
11 74 0.023948234 ubox
11 76 0.022743949 ubox
11 77 0.022313664 ubox
12 17 0.030293162 ubox
12 19 0.033791294 ubox
12 22 0.005305667 ubox
12 57 0.006158164 ubox
12 58 0.969557579 ubox
12 61 0.006612318 ubox
12 62 0.005151820 ubox
12 70 0.010387989 ubox
12 71 0.136237421 ubox
12 73 0.024042004 ubox
12 76 0.008111504 ubox
12 78 0.013124724 ubox
13 57 0.972672642 ubox
13 72 0.022601923 ubox
13 74 0.008202943 ubox
13 77 0.012711159 ubox
14 18 0.004758436 ubox
14 20 0.005838516 ubox
14 51 0.028802435 ubox
14 53 0.048871086 ubox
14 54 0.014652964 ubox
14 55 0.008673832 ubox
14 56 0.972460164 ubox
14 65 0.004594510 ubox
14 66 0.008035990 ubox
14 67 0.006286973 ubox
14 68 0.007532040 ubox
14 69 0.017230895 ubox
15 21 0.005193182 ubox
15 50 0.029685530 ubox
15 52 0.052547375 ubox
15 55 0.970482845 ubox
15 75 0.010771912 ubox
16 49 0.028635147 ubox
16 74 0.009427635 ubox
16 76 0.008798823 ubox
17 21 0.003529466 ubox
17 24 0.004860223 ubox
17 37 0.003225051 ubox
17 50 0.125567608 ubox
17 52 0.467137488 ubox
17 55 0.005050235 ubox
17 75 0.009388139 ubox
18 49 0.122323773 ubox
18 74 0.008286784 ubox
18 76 0.010908335 ubox
19 24 0.004077791 ubox
19 37 0.003596270 ubox
19 46 0.003456719 ubox
19 50 0.932623770 ubox
19 52 0.035873674 ubox
19 75 0.011607596 ubox
20 49 0.929870235 ubox
20 74 0.011118385 ubox
20 77 0.004387526 ubox
21 32 0.042932994 ubox
21 38 0.025144311 ubox
21 44 0.005637429 ubox
21 47 0.988569255 ubox
21 49 0.010023166 ubox
21 73 0.007967146 ubox
21 76 0.005244501 ubox
22 30 0.003617303 ubox
22 31 0.042917339 ubox
22 37 0.025132606 ubox
22 43 0.005632731 ubox
22 46 0.988561749 ubox
22 50 0.068505285 ubox
22 75 0.005310436 ubox
23 49 0.068155625 ubox
23 72 0.004083553 ubox
23 74 0.005137351 ubox
24 29 0.018994166 ubox
24 32 0.042771819 ubox
24 38 0.016104264 ubox
24 44 0.990831004 ubox
24 47 0.081950864 ubox
24 71 0.003542491 ubox
24 73 0.004080801 ubox
25 30 0.006908992 ubox
25 31 0.042732204 ubox
25 37 0.016108794 ubox
25 43 0.991749584 ubox
25 46 0.081977179 ubox
29 37 0.007212778 ubox
29 41 0.968918324 ubox
30 38 0.019456153 ubox
30 40 0.967592994 ubox
31 38 0.990627775 ubox
31 40 0.007518794 ubox
31 44 0.003345380 ubox
32 37 0.989967686 ubox
32 43 0.003353175 ubox
37 44 0.023639695 ubox
37 47 0.011568035 ubox
38 43 0.023631744 ubox
38 46 0.011572554 ubox
40 79 0.067305846 ubox
41 78 0.071125398 ubox
42 77 0.071111494 ubox
43 76 0.071047976 ubox
43 78 0.004545180 ubox
44 75 0.071073248 ubox
45 74 0.070888521 ubox
45 77 0.016331009 ubox
46 61 0.004547367 ubox
46 62 0.015700843 ubox
46 73 0.066405100 ubox
46 76 0.020007077 ubox
47 52 0.006294158 ubox
47 55 0.003290987 ubox
47 75 0.020381102 ubox
48 57 0.015524746 ubox
48 72 0.025024458 ubox
48 74 0.020102829 ubox
48 76 0.003586323 ubox
49 53 0.003393614 ubox
49 54 0.014726450 ubox
49 56 0.016628780 ubox
49 59 0.176141946 ubox
49 60 0.007741674 ubox
49 63 0.026062961 ubox
49 64 0.003752806 ubox
49 67 0.003539816 ubox
49 68 0.005501538 ubox
49 69 0.006858303 ubox
49 75 0.003575283 ubox
49 79 0.021853763 ubox
50 58 0.194802123 ubox
50 61 0.004108587 ubox
50 62 0.028699105 ubox
50 70 0.010883362 ubox
50 71 0.016929163 ubox
50 73 0.037818180 ubox
50 78 0.035547169 ubox
51 57 0.192939408 ubox
51 72 0.042094292 ubox
51 74 0.012761366 ubox
51 77 0.035455199 ubox
52 58 0.046537138 ubox
52 61 0.023903066 ubox
52 62 0.012823580 ubox
52 70 0.009105344 ubox
52 71 0.042085129 ubox
52 73 0.013352256 ubox
52 76 0.028136955 ubox
52 78 0.010482752 ubox
53 57 0.040551869 ubox
53 72 0.011870935 ubox
53 77 0.010417106 ubox
54 72 0.011842602 ubox
54 74 0.036342813 ubox
54 76 0.009353206 ubox
55 61 0.013692138 ubox
55 62 0.036139114 ubox
55 70 0.008348076 ubox
55 71 0.013275409 ubox
55 73 0.036975360 ubox
55 78 0.010324365 ubox
56 72 0.035219678 ubox
56 74 0.006597600 ubox
56 77 0.010079681 ubox
57 63 0.004481397 ubox
57 64 0.005866147 ubox
57 65 0.003751618 ubox
57 66 0.006823622 ubox
57 68 0.003414713 ubox
57 69 0.003644075 ubox
58 75 0.009742243 ubox
59 74 0.009428674 ubox
59 77 0.034644774 ubox
60 76 0.039377782 ubox
60 77 0.006529706 ubox
61 75 0.038641001 ubox
61 79 0.005099760 ubox
62 75 0.048032072 ubox
62 79 0.007476875 ubox
63 72 0.015462774 ubox
63 74 0.047379894 ubox
63 76 0.005299544 ubox
63 77 0.012433522 ubox
64 72 0.017922330 ubox
64 74 0.011144481 ubox
64 76 0.012458116 ubox
64 77 0.014882638 ubox
65 72 0.027998820 ubox
65 74 0.021303646 ubox
65 76 0.014514785 ubox
65 77 0.014852025 ubox
66 72 0.014371868 ubox
66 74 0.014838636 ubox
66 76 0.014433460 ubox
66 77 0.025073087 ubox
67 72 0.015503970 ubox
67 74 0.024034265 ubox
67 76 0.026533510 ubox
67 77 0.020992568 ubox
68 72 0.007996887 ubox
68 74 0.018775939 ubox
68 76 0.019952535 ubox
68 77 0.192416967 ubox
69 74 0.015939830 ubox
69 76 0.214249917 ubox
69 77 0.008799266 ubox
70 75 0.216115508 ubox
70 79 0.027097603 ubox
71 75 0.021434052 ubox
71 79 0.019711417 ubox
72 79 0.007582258 ubox
73 79 0.025764328 ubox
74 79 0.007645017 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
showpage
end
%%EOF
