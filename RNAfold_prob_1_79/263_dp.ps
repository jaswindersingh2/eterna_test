%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (263)
} def

/sequence { (\
GGAAAAAAGCACAAGUUGAAAACAACAGACAACUGAAAGAGAGGAAACACUCACAGAAGUCAAGUGCAGAGACUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.022796550 ubox
1 12 0.013440431 ubox
1 23 0.005778663 ubox
1 67 0.003574908 ubox
1 73 0.050456349 ubox
1 74 0.059520089 ubox
1 75 0.127209756 ubox
1 76 0.241155162 ubox
1 77 0.012541006 ubox
1 78 0.133374519 ubox
2 10 0.007559166 ubox
2 12 0.003519858 ubox
2 23 0.003478717 ubox
2 73 0.073141012 ubox
2 74 0.114462266 ubox
2 75 0.278459681 ubox
2 76 0.007770315 ubox
2 77 0.128165908 ubox
2 78 0.140934313 ubox
3 74 0.272409619 ubox
3 76 0.119579087 ubox
3 77 0.139108193 ubox
4 74 0.024809543 ubox
4 76 0.118983955 ubox
4 77 0.007368378 ubox
5 74 0.037834784 ubox
5 76 0.007694360 ubox
5 77 0.006056468 ubox
6 74 0.031486490 ubox
6 76 0.006208703 ubox
6 77 0.005640931 ubox
7 74 0.007086688 ubox
7 76 0.005431618 ubox
7 77 0.016259409 ubox
8 17 0.015266033 ubox
8 34 0.006179226 ubox
8 74 0.015328520 ubox
8 76 0.018203948 ubox
8 77 0.004386361 ubox
9 16 0.016684075 ubox
9 33 0.006370249 ubox
9 65 0.005458621 ubox
9 67 0.993148639 ubox
9 73 0.010019476 ubox
9 75 0.016272252 ubox
9 78 0.006253615 ubox
10 15 0.016811732 ubox
10 18 0.003776794 ubox
10 35 0.004810617 ubox
10 39 0.006683324 ubox
10 64 0.005661847 ubox
10 66 0.994277495 ubox
10 69 0.003583609 ubox
10 71 0.006509299 ubox
10 79 0.003256186 ubox
11 17 0.003504981 ubox
11 34 0.003768721 ubox
11 65 0.993627330 ubox
11 77 0.005637754 ubox
12 28 0.004310955 ubox
12 35 0.018579240 ubox
12 64 0.992390409 ubox
12 66 0.003924895 ubox
12 69 0.003240526 ubox
12 79 0.003810079 ubox
13 34 0.013316418 ubox
13 65 0.003631503 ubox
13 77 0.004466679 ubox
14 34 0.060525067 ubox
14 74 0.028433815 ubox
14 76 0.004713129 ubox
15 23 0.071065601 ubox
15 26 0.991282944 ubox
15 30 0.010341437 ubox
15 33 0.064100932 ubox
15 61 0.004401078 ubox
15 73 0.029888311 ubox
15 75 0.004310436 ubox
16 21 0.003307752 ubox
16 22 0.070105988 ubox
16 25 0.992256252 ubox
16 28 0.004767616 ubox
16 29 0.009906856 ubox
16 32 0.064093195 ubox
16 62 0.003499003 ubox
16 63 0.022487659 ubox
16 72 0.029856186 ubox
17 21 0.058407117 ubox
17 22 0.010721242 ubox
17 24 0.991797904 ubox
17 25 0.006698879 ubox
17 27 0.026265495 ubox
17 28 0.009290076 ubox
17 31 0.064052067 ubox
17 62 0.023145575 ubox
17 71 0.029576349 ubox
18 23 0.986313138 ubox
18 26 0.028362446 ubox
18 30 0.063875897 ubox
18 61 0.022859256 ubox
18 78 0.005548914 ubox
19 60 0.021267820 ubox
19 77 0.005451113 ubox
20 76 0.004608404 ubox
22 65 0.011147235 ubox
23 28 0.009365996 ubox
23 56 0.009381242 ubox
23 64 0.011211966 ubox
23 66 0.024686781 ubox
24 65 0.024135213 ubox
25 65 0.013005941 ubox
26 35 0.031947269 ubox
26 64 0.013935760 ubox
27 34 0.035746196 ubox
28 33 0.035902955 ubox
28 60 0.004099026 ubox
28 61 0.991933325 ubox
29 60 0.992968515 ubox
30 35 0.007514695 ubox
30 39 0.006674397 ubox
30 59 0.991785524 ubox
32 60 0.041041580 ubox
33 39 0.011548242 ubox
33 41 0.004238346 ubox
33 56 0.992287758 ubox
33 59 0.044018389 ubox
34 38 0.010507185 ubox
34 39 0.003204362 ubox
34 40 0.006386759 ubox
34 53 0.004998181 ubox
34 55 0.993650394 ubox
34 56 0.006727227 ubox
34 57 0.012778431 ubox
34 58 0.044277075 ubox
34 62 0.019192156 ubox
34 79 0.009589872 ubox
35 52 0.005867314 ubox
35 54 0.991850999 ubox
35 61 0.022735251 ubox
35 78 0.023649394 ubox
36 51 0.005933058 ubox
36 60 0.022566346 ubox
36 77 0.019629383 ubox
37 76 0.013570534 ubox
37 77 0.019008838 ubox
38 51 0.102701064 ubox
38 76 0.023963628 ubox
39 48 0.007037398 ubox
39 50 0.103341325 ubox
39 51 0.003584762 ubox
39 52 0.929531245 ubox
39 54 0.055369648 ubox
39 61 0.005333531 ubox
39 75 0.027362561 ubox
39 77 0.020768005 ubox
39 78 0.009148529 ubox
40 51 0.929826646 ubox
40 60 0.005269798 ubox
40 74 0.027188299 ubox
40 76 0.023384658 ubox
40 77 0.006773614 ubox
41 48 0.068013525 ubox
41 50 0.926988740 ubox
41 52 0.346902308 ubox
41 73 0.026892717 ubox
41 75 0.024508686 ubox
41 78 0.022008385 ubox
42 51 0.348008181 ubox
42 74 0.024516723 ubox
42 77 0.022030331 ubox
43 48 0.752130740 ubox
43 50 0.348732045 ubox
43 51 0.005007774 ubox
43 52 0.003951359 ubox
43 73 0.024496765 ubox
43 76 0.022043325 ubox
44 48 0.103079724 ubox
44 50 0.007780186 ubox
44 51 0.003335368 ubox
44 52 0.006429852 ubox
44 75 0.022065948 ubox
45 51 0.006246443 ubox
45 74 0.021677356 ubox
48 66 0.035103858 ubox
48 71 0.015702048 ubox
49 60 0.003996612 ubox
49 65 0.035235227 ubox
50 59 0.004285859 ubox
50 64 0.035241998 ubox
50 69 0.022373137 ubox
50 71 0.004783080 ubox
51 58 0.003977112 ubox
51 62 0.005808740 ubox
51 63 0.033624065 ubox
51 68 0.022374257 ubox
51 70 0.004802997 ubox
52 59 0.005787217 ubox
52 66 0.023329926 ubox
52 69 0.004662948 ubox
53 60 0.039488493 ubox
53 65 0.023394922 ubox
54 59 0.041293244 ubox
54 64 0.023376876 ubox
54 66 0.003185123 ubox
54 79 0.004754005 ubox
55 60 0.004670420 ubox
55 76 0.020891581 ubox
55 77 0.003175742 ubox
56 61 0.016144633 ubox
56 75 0.023556574 ubox
56 76 0.003375043 ubox
56 78 0.029981939 ubox
57 74 0.016665804 ubox
57 77 0.029980208 ubox
58 74 0.024714990 ubox
58 76 0.029096543 ubox
59 73 0.030929618 ubox
59 75 0.028808468 ubox
60 72 0.031141490 ubox
61 69 0.003167789 ubox
61 71 0.031137143 ubox
62 74 0.003202333 ubox
62 76 0.004208900 ubox
62 77 0.013278424 ubox
63 74 0.068589946 ubox
63 76 0.015058946 ubox
64 73 0.072657758 ubox
64 75 0.015351724 ubox
64 78 0.003455777 ubox
65 70 0.004509971 ubox
65 72 0.072217906 ubox
65 79 0.009234709 ubox
66 73 0.013853562 ubox
66 78 0.015937758 ubox
67 71 0.008226135 ubox
67 79 0.005284436 ubox
68 74 0.058424889 ubox
68 76 0.278012115 ubox
68 77 0.029441591 ubox
69 73 0.061278991 ubox
69 74 0.014405585 ubox
69 75 0.301141362 ubox
69 76 0.027646561 ubox
69 77 0.161471110 ubox
69 78 0.484837726 ubox
70 74 0.262111057 ubox
70 76 0.177600716 ubox
70 77 0.475891610 ubox
71 75 0.181222146 ubox
71 76 0.384138594 ubox
71 77 0.024233420 ubox
71 78 0.205003598 ubox
72 76 0.025380595 ubox
72 77 0.184891557 ubox
73 79 0.030984259 ubox
74 79 0.005666437 ubox
75 79 0.009312866 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
