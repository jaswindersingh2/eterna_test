%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (270)
} def

/sequence { (\
GGAAAAAAGAUCAAGAUGGAAACAUCAGAGAAGAGAAAGAUACGAAAGAAUCACUCGGCUCAAGAUCAGCAGCCAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.017404535 ubox
1 67 0.005305274 ubox
1 70 0.012979647 ubox
1 73 0.020200376 ubox
1 74 0.910525595 ubox
1 76 0.006423801 ubox
1 78 0.069462228 ubox
2 11 0.015422033 ubox
2 12 0.026373361 ubox
2 66 0.003261738 ubox
2 67 0.008439710 ubox
2 70 0.014867390 ubox
2 73 0.910789564 ubox
2 74 0.038772856 ubox
2 76 0.003942235 ubox
2 77 0.068293475 ubox
2 78 0.074055684 ubox
3 11 0.025478711 ubox
3 66 0.007903598 ubox
3 76 0.064685990 ubox
3 77 0.073537717 ubox
4 11 0.003755743 ubox
4 76 0.066397084 ubox
4 77 0.003934861 ubox
5 76 0.004499362 ubox
6 76 0.003253018 ubox
6 77 0.003172520 ubox
7 76 0.003331173 ubox
7 77 0.004690730 ubox
8 76 0.005116061 ubox
9 66 0.006784307 ubox
9 67 0.986821087 ubox
9 70 0.006725827 ubox
9 73 0.003176403 ubox
9 74 0.004101646 ubox
9 77 0.005267058 ubox
9 78 0.019829337 ubox
10 66 0.988722782 ubox
10 76 0.005696246 ubox
10 77 0.018108355 ubox
11 29 0.025483248 ubox
11 31 0.019510340 ubox
11 64 0.003425327 ubox
11 65 0.988878303 ubox
11 75 0.005433352 ubox
12 28 0.027214129 ubox
12 30 0.020825979 ubox
12 64 0.987925560 ubox
12 79 0.006972003 ubox
14 77 0.004094947 ubox
15 26 0.994104291 ubox
15 76 0.003315168 ubox
15 77 0.079302709 ubox
15 78 0.033725248 ubox
16 25 0.995082956 ubox
16 76 0.087668963 ubox
16 77 0.024239207 ubox
17 24 0.995041415 ubox
17 27 0.010563627 ubox
17 75 0.091533781 ubox
18 23 0.994831587 ubox
18 26 0.011627114 ubox
18 74 0.091982881 ubox
19 23 0.007638911 ubox
19 25 0.008496601 ubox
19 26 0.012655705 ubox
19 73 0.091933762 ubox
20 25 0.011659801 ubox
23 69 0.041445583 ubox
24 66 0.083809404 ubox
25 65 0.089823244 ubox
26 64 0.089877495 ubox
27 60 0.009817820 ubox
28 56 0.009136098 ubox
28 59 0.010466069 ubox
28 61 0.995482463 ubox
28 78 0.009550194 ubox
29 55 0.009141535 ubox
29 60 0.996551648 ubox
29 77 0.009293896 ubox
30 54 0.009094194 ubox
30 59 0.996386735 ubox
30 61 0.014753224 ubox
30 76 0.006293010 ubox
30 78 0.015191127 ubox
31 60 0.013952317 ubox
31 77 0.015016544 ubox
32 60 0.005219338 ubox
32 76 0.013078128 ubox
33 52 0.006430229 ubox
33 56 0.997505026 ubox
33 59 0.006438950 ubox
33 61 0.008700715 ubox
34 51 0.006359815 ubox
34 55 0.997510135 ubox
34 60 0.008706342 ubox
35 52 0.006497141 ubox
35 54 0.996385240 ubox
35 56 0.062322521 ubox
35 59 0.008534144 ubox
36 51 0.007414917 ubox
36 55 0.061953700 ubox
37 51 0.006270505 ubox
38 51 0.042723548 ubox
39 43 0.003669743 ubox
39 51 0.007602304 ubox
39 52 0.992817836 ubox
39 56 0.003872878 ubox
39 61 0.011550086 ubox
40 51 0.992660830 ubox
40 55 0.003735637 ubox
40 60 0.011512717 ubox
41 46 0.007254791 ubox
41 47 0.020501965 ubox
41 48 0.022099317 ubox
41 49 0.039888877 ubox
41 50 0.971762465 ubox
43 48 0.832151163 ubox
43 57 0.012094506 ubox
44 52 0.014359351 ubox
44 56 0.012205676 ubox
45 51 0.013798225 ubox
45 55 0.011644596 ubox
48 52 0.004047479 ubox
48 54 0.003297273 ubox
48 56 0.003256846 ubox
48 78 0.004195718 ubox
49 77 0.004200702 ubox
50 76 0.004195193 ubox
51 75 0.004136766 ubox
57 74 0.073054349 ubox
58 70 0.006252161 ubox
58 73 0.073134903 ubox
59 69 0.006275219 ubox
59 72 0.073130567 ubox
60 68 0.006083048 ubox
60 71 0.071805640 ubox
61 69 0.059403499 ubox
64 70 0.015839547 ubox
64 73 0.006423224 ubox
64 74 0.005752800 ubox
64 77 0.006615104 ubox
64 78 0.017195735 ubox
65 76 0.007328790 ubox
65 77 0.016910658 ubox
66 75 0.007510794 ubox
67 72 0.007811665 ubox
68 76 0.008880631 ubox
68 77 0.011557502 ubox
69 73 0.012209567 ubox
69 74 0.026659095 ubox
69 76 0.010995172 ubox
69 77 0.004360237 ubox
69 78 0.025041725 ubox
70 79 0.017665681 ubox
71 76 0.017331470 ubox
71 77 0.011385254 ubox
72 76 0.008657235 ubox
72 77 0.005988312 ubox
72 78 0.017420018 ubox
73 79 0.010629204 ubox
74 79 0.017403576 ubox
1 74 0.9500000 lbox
2 73 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
