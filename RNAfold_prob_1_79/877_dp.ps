%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (877)
} def

/sequence { (\
GGAAAGCAAGGCGACUGGCACGCAUCAGCAGCAUUAGCAACGCUCAGAAACGCCAAGGGAAACCACGCUUAACCGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.028347092 ubox
1 41 0.004208724 ubox
1 43 0.005588935 ubox
1 44 0.005012332 ubox
1 45 0.004884205 ubox
1 54 0.006618541 ubox
1 63 0.003874638 ubox
1 64 0.041577001 ubox
1 66 0.004413310 ubox
1 70 0.003397877 ubox
1 73 0.282374452 ubox
1 74 0.867561191 ubox
1 76 0.004800987 ubox
1 77 0.003588914 ubox
1 78 0.212080253 ubox
2 7 0.011860774 ubox
2 43 0.006647187 ubox
2 45 0.004551068 ubox
2 53 0.006603959 ubox
2 63 0.041537327 ubox
2 68 0.003514945 ubox
2 70 0.008053858 ubox
2 73 0.866895162 ubox
2 74 0.052898318 ubox
2 76 0.004911977 ubox
2 77 0.211811603 ubox
2 78 0.178888722 ubox
3 44 0.004006219 ubox
3 69 0.006142683 ubox
3 70 0.045041157 ubox
3 76 0.209534731 ubox
3 77 0.178395665 ubox
4 69 0.036716562 ubox
4 70 0.893443883 ubox
4 76 0.160037311 ubox
4 77 0.008623301 ubox
5 44 0.010978085 ubox
5 69 0.950352717 ubox
5 70 0.038997711 ubox
5 76 0.010118427 ubox
5 77 0.025508842 ubox
6 12 0.006649325 ubox
6 19 0.005477257 ubox
6 23 0.004430113 ubox
6 38 0.026201751 ubox
6 43 0.011922161 ubox
6 66 0.004297284 ubox
6 68 0.957101376 ubox
6 69 0.008601166 ubox
6 70 0.003851829 ubox
6 73 0.120709274 ubox
6 74 0.080801739 ubox
6 76 0.034033723 ubox
6 78 0.004334694 ubox
7 11 0.006612738 ubox
7 18 0.005461270 ubox
7 22 0.004422710 ubox
7 37 0.026216681 ubox
7 42 0.011911806 ubox
7 47 0.004587513 ubox
7 57 0.028772601 ubox
7 58 0.022832419 ubox
7 59 0.011203189 ubox
7 67 0.956130745 ubox
7 75 0.035228045 ubox
8 35 0.018842256 ubox
8 70 0.017007669 ubox
9 16 0.033763711 ubox
9 34 0.016582969 ubox
9 35 0.013499340 ubox
9 69 0.015902710 ubox
9 70 0.225706275 ubox
10 15 0.040345991 ubox
10 16 0.003276395 ubox
10 19 0.003728147 ubox
10 21 0.008552619 ubox
10 34 0.012682235 ubox
10 44 0.015646200 ubox
10 45 0.005235060 ubox
10 54 0.952470993 ubox
10 63 0.012888472 ubox
10 64 0.136343714 ubox
10 66 0.009164248 ubox
10 68 0.011342202 ubox
10 69 0.250489962 ubox
10 70 0.006560479 ubox
10 74 0.003180826 ubox
10 77 0.006198462 ubox
11 15 0.004702154 ubox
11 19 0.017042007 ubox
11 23 0.010721107 ubox
11 29 0.004437498 ubox
11 32 0.036866343 ubox
11 38 0.012401769 ubox
11 43 0.017320319 ubox
11 53 0.953486546 ubox
11 63 0.136279395 ubox
11 64 0.004129865 ubox
11 66 0.003574393 ubox
11 68 0.252774003 ubox
11 76 0.007688260 ubox
12 17 0.003610905 ubox
12 18 0.017074107 ubox
12 22 0.010752383 ubox
12 28 0.004437296 ubox
12 31 0.036959409 ubox
12 37 0.012406440 ubox
12 42 0.017351251 ubox
12 52 0.953480326 ubox
12 57 0.008146277 ubox
12 58 0.016087147 ubox
12 59 0.049376020 ubox
12 67 0.252995074 ubox
12 75 0.007979420 ubox
12 79 0.003850857 ubox
13 21 0.010669200 ubox
13 26 0.006355392 ubox
13 29 0.011140156 ubox
13 41 0.017219517 ubox
13 51 0.951132176 ubox
13 66 0.248106274 ubox
13 74 0.007883436 ubox
13 78 0.004263007 ubox
14 25 0.006459846 ubox
14 77 0.003872142 ubox
15 22 0.003757421 ubox
15 28 0.058007476 ubox
15 31 0.008010614 ubox
15 37 0.016259353 ubox
15 47 0.949902073 ubox
15 57 0.112669324 ubox
15 58 0.057388103 ubox
15 59 0.031240545 ubox
16 24 0.016952716 ubox
16 27 0.058581105 ubox
16 30 0.008500938 ubox
16 33 0.005004884 ubox
16 36 0.016176946 ubox
16 46 0.950588416 ubox
16 47 0.006071836 ubox
16 48 0.013131014 ubox
16 49 0.005455938 ubox
16 50 0.005126260 ubox
16 55 0.260989154 ubox
16 56 0.080593682 ubox
16 57 0.039163970 ubox
16 58 0.022130858 ubox
16 65 0.009885769 ubox
17 21 0.003182691 ubox
17 23 0.018765353 ubox
17 26 0.058993216 ubox
17 29 0.007114426 ubox
17 32 0.004734632 ubox
17 35 0.014873568 ubox
17 38 0.003170585 ubox
17 44 0.141491202 ubox
17 45 0.940643983 ubox
17 54 0.296166855 ubox
17 64 0.009996149 ubox
18 23 0.015879372 ubox
18 25 0.045004044 ubox
18 26 0.007278675 ubox
18 29 0.110625619 ubox
18 32 0.049463282 ubox
18 34 0.009672983 ubox
18 38 0.021159499 ubox
18 41 0.004994831 ubox
18 43 0.892497854 ubox
18 44 0.245877337 ubox
18 45 0.015491602 ubox
18 53 0.296252087 ubox
18 63 0.009924333 ubox
19 28 0.110959270 ubox
19 31 0.049703434 ubox
19 37 0.021389454 ubox
19 42 0.896837917 ubox
19 47 0.006390601 ubox
19 52 0.294774265 ubox
20 25 0.008033840 ubox
20 34 0.034199523 ubox
20 35 0.011288452 ubox
20 44 0.019877708 ubox
21 28 0.083015029 ubox
21 31 0.029866546 ubox
21 37 0.023191485 ubox
21 42 0.066553671 ubox
21 47 0.011452742 ubox
21 52 0.026770710 ubox
22 26 0.025355714 ubox
22 29 0.801395832 ubox
22 32 0.075917719 ubox
22 38 0.384590574 ubox
22 41 0.067887850 ubox
22 43 0.181409935 ubox
22 45 0.005147915 ubox
22 51 0.060546887 ubox
22 53 0.009598414 ubox
23 28 0.801109098 ubox
23 31 0.076009479 ubox
23 37 0.384879236 ubox
23 42 0.181316045 ubox
23 47 0.076404729 ubox
23 52 0.009657171 ubox
24 34 0.063614095 ubox
24 35 0.091689001 ubox
25 30 0.011265541 ubox
25 31 0.005545559 ubox
25 33 0.071011726 ubox
25 36 0.064257165 ubox
25 37 0.005498612 ubox
25 39 0.017460210 ubox
25 40 0.050766223 ubox
25 46 0.151204976 ubox
25 47 0.010320705 ubox
25 48 0.097303626 ubox
25 49 0.003550191 ubox
26 31 0.073564795 ubox
26 37 0.018374882 ubox
26 42 0.005730287 ubox
26 47 0.098684373 ubox
27 34 0.080846214 ubox
27 35 0.052047293 ubox
27 44 0.308277390 ubox
28 32 0.052142397 ubox
28 34 0.045290638 ubox
28 35 0.012538100 ubox
28 38 0.188289579 ubox
28 41 0.083351534 ubox
28 43 0.328650848 ubox
28 45 0.044171825 ubox
28 53 0.003281981 ubox
29 37 0.188451943 ubox
29 42 0.328553624 ubox
29 47 0.005671306 ubox
29 52 0.003290662 ubox
30 34 0.006813401 ubox
30 35 0.030716938 ubox
30 44 0.125946123 ubox
31 35 0.011619934 ubox
31 38 0.869826451 ubox
31 41 0.024862653 ubox
31 43 0.138033931 ubox
32 37 0.869466553 ubox
32 42 0.137981948 ubox
34 39 0.010730567 ubox
34 40 0.054457913 ubox
34 46 0.004167729 ubox
34 56 0.003512632 ubox
35 39 0.046793678 ubox
35 40 0.013927601 ubox
35 46 0.003762290 ubox
35 55 0.003793448 ubox
36 44 0.043077975 ubox
37 41 0.021463640 ubox
37 43 0.047306292 ubox
37 53 0.008928800 ubox
38 42 0.044273778 ubox
38 47 0.004612059 ubox
38 52 0.008938649 ubox
39 44 0.004745282 ubox
39 77 0.004178516 ubox
40 76 0.004718405 ubox
41 47 0.016432783 ubox
41 52 0.011374907 ubox
41 59 0.003569013 ubox
41 75 0.004792376 ubox
42 51 0.013544886 ubox
42 53 0.030538207 ubox
42 74 0.004629196 ubox
43 47 0.004406481 ubox
43 52 0.030658107 ubox
43 57 0.003734007 ubox
43 59 0.003837808 ubox
44 49 0.003239151 ubox
44 50 0.003302244 ubox
44 56 0.003684698 ubox
44 58 0.003856472 ubox
45 57 0.003894175 ubox
47 51 0.005518303 ubox
47 53 0.004132846 ubox
47 54 0.006727988 ubox
47 78 0.021139022 ubox
48 77 0.017781813 ubox
49 76 0.013442414 ubox
49 77 0.017845457 ubox
50 76 0.022247352 ubox
51 75 0.025185287 ubox
52 68 0.009455595 ubox
52 73 0.004326583 ubox
52 74 0.024754021 ubox
53 59 0.006254251 ubox
53 67 0.009427308 ubox
54 58 0.006274815 ubox
55 70 0.056457707 ubox
55 76 0.003814555 ubox
55 77 0.016455281 ubox
56 69 0.061797525 ubox
56 70 0.011546293 ubox
56 76 0.018373594 ubox
57 63 0.040737668 ubox
57 64 0.964051048 ubox
57 66 0.111935477 ubox
57 68 0.062356184 ubox
57 69 0.012636962 ubox
57 70 0.008130454 ubox
57 74 0.032773792 ubox
58 63 0.964484793 ubox
58 64 0.168936569 ubox
58 66 0.056084403 ubox
58 68 0.012776402 ubox
58 69 0.009289393 ubox
58 73 0.032810839 ubox
58 74 0.020055992 ubox
58 78 0.004847098 ubox
59 63 0.166540097 ubox
59 64 0.039186270 ubox
59 66 0.065642434 ubox
59 68 0.009530675 ubox
59 73 0.019993423 ubox
59 77 0.004734604 ubox
59 78 0.011947915 ubox
60 69 0.003675964 ubox
60 70 0.005997290 ubox
60 76 0.003436389 ubox
60 77 0.011600381 ubox
61 69 0.006255272 ubox
61 70 0.025162650 ubox
61 76 0.006649233 ubox
61 77 0.003945087 ubox
62 69 0.022287162 ubox
62 70 0.003325013 ubox
62 76 0.004955711 ubox
63 67 0.006177356 ubox
63 75 0.005638678 ubox
65 76 0.072093139 ubox
65 77 0.003515375 ubox
66 75 0.079260023 ubox
66 79 0.006674542 ubox
67 73 0.007124050 ubox
67 74 0.077086300 ubox
67 76 0.022683071 ubox
67 78 0.006501588 ubox
68 75 0.024233928 ubox
71 76 0.003981280 ubox
71 77 0.006381808 ubox
72 76 0.005611964 ubox
72 77 0.004115177 ubox
73 79 0.009947243 ubox
74 79 0.018203908 ubox
1 74 0.9500000 lbox
2 73 0.9500000 lbox
4 70 0.9500000 lbox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
17 45 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
57 64 0.9500000 lbox
58 63 0.9500000 lbox
showpage
end
%%EOF
