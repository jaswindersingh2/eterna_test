%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1061)
} def

/sequence { (\
GGAAAGUGCACCGGAGCCGCGCCUCCUCGAGUGCGCACUUCCCGCGUCAAUGACCGGGUGCUCAGGUGAACUGGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.008436220 ubox
1 11 0.003731745 ubox
1 12 0.023282431 ubox
1 42 0.003607448 ubox
1 72 0.003359097 ubox
1 75 0.117696107 ubox
1 76 0.748194548 ubox
1 77 0.038560208 ubox
1 78 0.319395824 ubox
2 9 0.004886094 ubox
2 11 0.023399198 ubox
2 40 0.003692369 ubox
2 41 0.003982354 ubox
2 71 0.003334197 ubox
2 75 0.863947650 ubox
2 76 0.024250096 ubox
2 77 0.307267284 ubox
2 78 0.274541303 ubox
3 7 0.004254832 ubox
3 39 0.003787194 ubox
3 40 0.004033273 ubox
3 72 0.003813431 ubox
3 76 0.288013423 ubox
3 77 0.272498453 ubox
4 39 0.003781116 ubox
4 72 0.019583370 ubox
4 76 0.265455514 ubox
4 77 0.030744110 ubox
5 72 0.991170497 ubox
5 76 0.038727121 ubox
6 36 0.018955611 ubox
6 71 0.996264484 ubox
6 72 0.005054055 ubox
6 75 0.044329687 ubox
7 35 0.018978270 ubox
7 69 0.035728439 ubox
7 70 0.898255305 ubox
7 73 0.009626176 ubox
7 74 0.041478128 ubox
8 34 0.019158620 ubox
8 61 0.007079388 ubox
8 71 0.020113771 ubox
8 72 0.009043225 ubox
9 33 0.019170942 ubox
9 60 0.007092311 ubox
9 68 0.992522326 ubox
10 32 0.019207314 ubox
10 59 0.007091076 ubox
10 67 0.998265341 ubox
11 31 0.019188551 ubox
11 58 0.007084624 ubox
11 66 0.998620572 ubox
12 29 0.015160694 ubox
12 57 0.006782815 ubox
12 65 0.994878679 ubox
12 79 0.038836067 ubox
13 26 0.015991465 ubox
13 28 0.007487573 ubox
13 41 0.006592011 ubox
13 42 0.006003854 ubox
13 63 0.024598354 ubox
13 78 0.047552630 ubox
14 25 0.017250685 ubox
14 28 0.008014859 ubox
14 40 0.008836015 ubox
14 41 0.006056947 ubox
14 62 0.011108310 ubox
14 63 0.989678372 ubox
14 77 0.047602480 ubox
15 24 0.017412589 ubox
15 27 0.008101342 ubox
15 39 0.009420943 ubox
15 40 0.005820911 ubox
15 62 0.998225067 ubox
15 76 0.047644933 ubox
16 22 0.006529856 ubox
16 23 0.016153803 ubox
16 26 0.007988284 ubox
16 38 0.009745603 ubox
16 39 0.004785679 ubox
16 61 0.998493550 ubox
16 75 0.047666945 ubox
17 21 0.008932629 ubox
17 60 0.991235111 ubox
17 74 0.047642883 ubox
18 35 0.108427306 ubox
18 58 0.162397215 ubox
18 60 0.078770983 ubox
18 73 0.046216935 ubox
19 23 0.003422432 ubox
19 34 0.112915163 ubox
19 36 0.991824917 ubox
19 38 0.006341865 ubox
19 59 0.006938957 ubox
19 61 0.006260589 ubox
19 71 0.005291455 ubox
19 72 0.024544578 ubox
20 33 0.112922932 ubox
20 35 0.992946875 ubox
20 58 0.004617001 ubox
20 60 0.006818536 ubox
20 68 0.017738441 ubox
21 32 0.112610252 ubox
21 34 0.992999668 ubox
21 59 0.011352641 ubox
21 67 0.017845606 ubox
21 71 0.005599241 ubox
22 31 0.098441656 ubox
22 33 0.992890597 ubox
22 58 0.011412726 ubox
22 66 0.017843586 ubox
22 68 0.003797660 ubox
23 29 0.050480274 ubox
23 31 0.993346521 ubox
23 33 0.005766211 ubox
23 57 0.011413780 ubox
23 65 0.017826128 ubox
23 68 0.011915361 ubox
24 29 0.012625936 ubox
24 30 0.994343945 ubox
24 31 0.017172743 ubox
24 56 0.011184927 ubox
24 64 0.016634225 ubox
25 29 0.986019245 ubox
25 31 0.020318087 ubox
25 66 0.017452380 ubox
26 31 0.011416166 ubox
26 65 0.017478661 ubox
27 53 0.011473126 ubox
27 64 0.017317385 ubox
28 52 0.011581036 ubox
29 51 0.010460232 ubox
29 63 0.023015936 ubox
30 62 0.022988690 ubox
31 48 0.003510848 ubox
31 61 0.022096308 ubox
32 49 0.004574260 ubox
32 60 0.021533257 ubox
32 64 0.006391729 ubox
33 47 0.010611288 ubox
33 48 0.004658478 ubox
33 59 0.019550045 ubox
33 61 0.004780949 ubox
33 63 0.008852305 ubox
34 46 0.011769818 ubox
34 58 0.012216272 ubox
34 60 0.005090855 ubox
35 45 0.011787814 ubox
35 59 0.005425663 ubox
35 61 0.013574941 ubox
36 44 0.011781303 ubox
36 58 0.003412391 ubox
36 60 0.014587557 ubox
36 68 0.012619287 ubox
37 59 0.044084336 ubox
37 62 0.003321706 ubox
37 67 0.018406778 ubox
38 58 0.024801934 ubox
38 60 0.034126196 ubox
38 66 0.018900507 ubox
39 57 0.006297367 ubox
39 58 0.003470389 ubox
39 60 0.031516031 ubox
39 65 0.018779451 ubox
40 58 0.012164193 ubox
40 60 0.008788001 ubox
40 64 0.018313870 ubox
41 57 0.018630903 ubox
41 58 0.977381371 ubox
42 56 0.014642786 ubox
42 57 0.999326897 ubox
42 58 0.021841332 ubox
43 56 0.999534320 ubox
43 57 0.021793393 ubox
43 58 0.004367410 ubox
44 54 0.006311510 ubox
44 55 0.999043663 ubox
45 52 0.017665873 ubox
45 56 0.008587796 ubox
46 51 0.011801347 ubox
46 54 0.999119818 ubox
46 55 0.007270573 ubox
47 52 0.008294292 ubox
47 53 0.998596100 ubox
48 52 0.990198439 ubox
59 68 0.010288249 ubox
60 67 0.016719598 ubox
60 71 0.007043412 ubox
60 75 0.018974635 ubox
61 66 0.017149408 ubox
61 68 0.006424339 ubox
61 74 0.018903075 ubox
62 69 0.014061660 ubox
62 74 0.005733055 ubox
63 68 0.014648132 ubox
63 73 0.023445637 ubox
64 72 0.029093256 ubox
65 71 0.029598200 ubox
65 72 0.004708760 ubox
66 71 0.005081836 ubox
72 79 0.005566932 ubox
73 78 0.030787915 ubox
74 78 0.011442249 ubox
75 79 0.003675336 ubox
1 76 0.9500000 lbox
2 75 0.9500000 lbox
5 72 0.9500000 lbox
6 71 0.9500000 lbox
7 70 0.9500000 lbox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
showpage
end
%%EOF
