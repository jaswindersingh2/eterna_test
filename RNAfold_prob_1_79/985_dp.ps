%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (985)
} def

/sequence { (\
GGAAACCUCCAGAAGGAAACUUCACCAUAUAGGGAAAAAACCUAUAUGGAGACUGAAAAGUCAGGAGGCCGUGCCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.020403265 ubox
1 7 0.063634566 ubox
1 8 0.018008058 ubox
1 9 0.014611837 ubox
1 10 0.858617345 ubox
1 20 0.004035748 ubox
1 21 0.004782599 ubox
1 23 0.032315864 ubox
1 69 0.007809968 ubox
1 70 0.302469125 ubox
1 72 0.012051700 ubox
1 74 0.039000823 ubox
1 75 0.318055517 ubox
1 76 0.013606689 ubox
1 78 0.024814190 ubox
2 6 0.062719786 ubox
2 7 0.021642733 ubox
2 8 0.012115684 ubox
2 9 0.859054298 ubox
2 10 0.010341526 ubox
2 20 0.005509797 ubox
2 22 0.031955817 ubox
2 23 0.065688316 ubox
2 69 0.302467610 ubox
2 70 0.039940060 ubox
2 72 0.019655983 ubox
2 74 0.318338358 ubox
2 75 0.015567976 ubox
2 77 0.023655257 ubox
2 78 0.033503940 ubox
3 8 0.803439126 ubox
3 21 0.030776457 ubox
3 22 0.065652968 ubox
3 72 0.066324833 ubox
3 76 0.022501605 ubox
3 77 0.033045024 ubox
4 8 0.019324174 ubox
4 21 0.061439542 ubox
4 72 0.089954396 ubox
4 76 0.030008369 ubox
4 77 0.003978302 ubox
5 21 0.003586603 ubox
5 72 0.037137186 ubox
5 76 0.004972136 ubox
6 16 0.018871790 ubox
6 65 0.012832190 ubox
6 68 0.481681657 ubox
6 71 0.019778057 ubox
6 79 0.009567179 ubox
7 15 0.018936208 ubox
7 51 0.003590519 ubox
7 64 0.013298958 ubox
7 67 0.483071635 ubox
7 79 0.010498262 ubox
8 14 0.018246870 ubox
8 17 0.079648064 ubox
8 50 0.005029634 ubox
8 63 0.012591474 ubox
8 66 0.483142963 ubox
9 16 0.081788587 ubox
9 49 0.004868180 ubox
9 65 0.483303469 ubox
9 79 0.007595358 ubox
10 15 0.081680063 ubox
10 48 0.004360862 ubox
10 64 0.482719854 ubox
10 79 0.012808350 ubox
11 21 0.005152024 ubox
12 20 0.005492285 ubox
12 22 0.004807229 ubox
12 23 0.992136886 ubox
12 62 0.007669337 ubox
12 78 0.055059424 ubox
13 21 0.003984342 ubox
13 22 0.992997507 ubox
13 61 0.007547608 ubox
13 77 0.055094879 ubox
14 21 0.992892698 ubox
14 22 0.008500886 ubox
14 76 0.055088166 ubox
15 20 0.992584119 ubox
15 21 0.010788721 ubox
15 23 0.015131618 ubox
15 75 0.055113479 ubox
16 20 0.012812134 ubox
16 22 0.014641296 ubox
16 23 0.016968368 ubox
16 62 0.004892636 ubox
16 74 0.055062668 ubox
17 21 0.012503040 ubox
17 22 0.015914455 ubox
17 61 0.004859569 ubox
17 72 0.016397509 ubox
18 72 0.010430944 ubox
19 72 0.012169245 ubox
20 60 0.003391480 ubox
20 67 0.039423464 ubox
20 68 0.035481903 ubox
20 71 0.011655915 ubox
21 57 0.006272132 ubox
21 66 0.039499333 ubox
21 67 0.035738596 ubox
22 50 0.003458940 ubox
22 52 0.011787813 ubox
22 56 0.007220753 ubox
22 65 0.039428847 ubox
22 66 0.035796127 ubox
22 68 0.003293793 ubox
23 51 0.013056724 ubox
23 55 0.007376491 ubox
23 64 0.039241743 ubox
23 65 0.035750937 ubox
23 67 0.003566590 ubox
24 54 0.007332278 ubox
25 48 0.004800942 ubox
25 49 0.995434502 ubox
26 48 0.999931542 ubox
26 49 0.004611063 ubox
27 47 0.999586556 ubox
28 46 0.999483720 ubox
29 45 0.999477548 ubox
30 44 0.999490459 ubox
31 43 0.999501611 ubox
32 41 0.004759740 ubox
32 42 0.999497645 ubox
32 43 0.019208915 ubox
33 41 0.998979346 ubox
33 42 0.030900511 ubox
34 41 0.038990977 ubox
51 62 0.996170699 ubox
52 61 0.997290308 ubox
53 60 0.997496690 ubox
53 64 0.050511660 ubox
54 58 0.010522746 ubox
54 59 0.987462455 ubox
54 63 0.059079560 ubox
55 62 0.060392176 ubox
56 61 0.055175733 ubox
62 79 0.006226115 ubox
63 76 0.005697407 ubox
64 70 0.008564253 ubox
64 75 0.006122988 ubox
64 77 0.005039017 ubox
64 78 0.864735203 ubox
65 69 0.008443219 ubox
65 74 0.006115901 ubox
65 77 0.870390330 ubox
65 78 0.052902468 ubox
66 76 0.872464457 ubox
66 77 0.038293434 ubox
67 75 0.873690306 ubox
67 76 0.011548345 ubox
68 74 0.873711114 ubox
68 75 0.010767620 ubox
69 73 0.867388384 ubox
69 79 0.004169884 ubox
70 79 0.070080347 ubox
71 75 0.013880785 ubox
71 76 0.005118033 ubox
71 77 0.008370721 ubox
71 78 0.087748495 ubox
72 79 0.014117506 ubox
73 77 0.003808211 ubox
73 78 0.022992135 ubox
74 79 0.010570112 ubox
75 79 0.005567653 ubox
1 10 0.9500000 lbox
2 9 0.9500000 lbox
3 8 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
64 78 0.9500000 lbox
65 77 0.9500000 lbox
66 76 0.9500000 lbox
67 75 0.9500000 lbox
68 74 0.9500000 lbox
69 73 0.9500000 lbox
showpage
end
%%EOF
