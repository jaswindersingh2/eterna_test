%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (242)
} def

/sequence { (\
GGAAACGCGUGCCCGGGCCGCCGGAAACGGACGGCAAAACCGCAGCCGAAAGGCGCGGACGGGUGCGCCGGGCGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.225722994 ubox
1 8 0.187565196 ubox
1 69 0.020521482 ubox
1 73 0.090611597 ubox
1 75 0.104979803 ubox
1 76 0.088302727 ubox
1 77 0.007568550 ubox
1 78 0.233536883 ubox
2 6 0.038434777 ubox
2 8 0.065059805 ubox
2 68 0.014457881 ubox
2 69 0.018655200 ubox
2 73 0.117363813 ubox
2 75 0.101841100 ubox
2 76 0.009046229 ubox
2 77 0.232020063 ubox
2 78 0.427040827 ubox
3 76 0.228236403 ubox
3 77 0.426266595 ubox
4 76 0.410933349 ubox
4 77 0.039639065 ubox
5 76 0.049268489 ubox
5 77 0.023251317 ubox
6 67 0.006456438 ubox
6 70 0.228923409 ubox
6 71 0.064611025 ubox
6 72 0.040233652 ubox
6 74 0.116137742 ubox
6 79 0.331574754 ubox
7 66 0.006557304 ubox
7 68 0.371367324 ubox
7 69 0.163133683 ubox
7 73 0.089427424 ubox
7 75 0.092110767 ubox
7 76 0.074811050 ubox
7 77 0.105054749 ubox
7 78 0.347146421 ubox
8 65 0.006535154 ubox
8 67 0.407651611 ubox
8 70 0.004240527 ubox
8 71 0.005102822 ubox
8 72 0.082900898 ubox
8 74 0.091315106 ubox
8 79 0.022127613 ubox
9 66 0.414374108 ubox
9 68 0.029109866 ubox
9 69 0.003697786 ubox
9 73 0.039511551 ubox
9 75 0.902757921 ubox
9 76 0.003786809 ubox
9 78 0.012996707 ubox
10 65 0.413553843 ubox
10 67 0.029158906 ubox
10 70 0.023509013 ubox
10 72 0.014849694 ubox
10 74 0.903468137 ubox
11 64 0.414310435 ubox
11 66 0.028006255 ubox
11 69 0.015958733 ubox
11 73 0.908243617 ubox
12 63 0.415558452 ubox
12 65 0.026893578 ubox
12 72 0.909040955 ubox
13 62 0.415650794 ubox
13 63 0.025537691 ubox
13 71 0.909148776 ubox
14 61 0.415642011 ubox
14 62 0.025411942 ubox
14 70 0.909099637 ubox
15 60 0.411682541 ubox
15 68 0.003496913 ubox
15 69 0.908622235 ubox
16 35 0.019359592 ubox
16 60 0.030651289 ubox
16 68 0.905968984 ubox
16 69 0.010602459 ubox
17 35 0.995261619 ubox
17 64 0.036983336 ubox
17 66 0.064885833 ubox
17 68 0.014276020 ubox
18 34 0.996779531 ubox
18 62 0.005740016 ubox
18 63 0.037817272 ubox
18 65 0.063295293 ubox
18 67 0.017165880 ubox
19 33 0.997126534 ubox
19 61 0.007888724 ubox
19 62 0.038449894 ubox
19 63 0.047116146 ubox
19 65 0.013844541 ubox
20 32 0.996693360 ubox
20 35 0.074079116 ubox
20 64 0.009411482 ubox
21 30 0.997038300 ubox
21 34 0.074186271 ubox
21 62 0.005557915 ubox
21 63 0.009331516 ubox
22 29 0.997122200 ubox
22 30 0.007958535 ubox
22 33 0.074196040 ubox
22 61 0.005647242 ubox
22 62 0.009206286 ubox
23 28 0.994367353 ubox
23 32 0.074208510 ubox
23 60 0.005623263 ubox
24 28 0.008442162 ubox
24 60 0.007328152 ubox
28 33 0.003285487 ubox
28 34 0.004182059 ubox
29 35 0.005011707 ubox
34 64 0.013504404 ubox
34 66 0.020236959 ubox
35 62 0.006555914 ubox
35 63 0.015130209 ubox
35 65 0.021452896 ubox
36 64 0.024331579 ubox
37 64 0.011238557 ubox
38 64 0.004864081 ubox
39 64 0.012787154 ubox
40 57 0.004748585 ubox
40 58 0.991661743 ubox
40 61 0.003342698 ubox
40 62 0.018099887 ubox
40 63 0.011333555 ubox
40 67 0.005093138 ubox
41 57 0.996177640 ubox
41 58 0.005149726 ubox
41 61 0.018146827 ubox
41 62 0.010397287 ubox
41 67 0.079069623 ubox
42 56 0.996308427 ubox
42 60 0.017674021 ubox
42 66 0.082117254 ubox
43 55 0.993089011 ubox
43 57 0.005039718 ubox
43 58 0.012886544 ubox
43 61 0.003316035 ubox
43 65 0.082123557 ubox
44 64 0.081945272 ubox
45 54 0.996114723 ubox
45 56 0.003640022 ubox
46 52 0.005619372 ubox
46 53 0.996570010 ubox
46 55 0.003575721 ubox
46 58 0.005474619 ubox
46 62 0.081863530 ubox
47 52 0.996181170 ubox
47 53 0.004806725 ubox
47 57 0.005501891 ubox
47 61 0.081874539 ubox
48 56 0.005565921 ubox
48 60 0.080794448 ubox
52 56 0.035281607 ubox
53 66 0.003358374 ubox
54 65 0.003402868 ubox
54 67 0.004059006 ubox
55 64 0.004460567 ubox
55 66 0.010776810 ubox
56 63 0.004690666 ubox
56 65 0.010786465 ubox
56 67 0.003840190 ubox
57 64 0.009988484 ubox
57 66 0.004677977 ubox
58 66 0.008925340 ubox
58 68 0.004573204 ubox
59 64 0.015388710 ubox
60 65 0.065438946 ubox
60 67 0.808104141 ubox
60 70 0.008136833 ubox
61 66 0.819967724 ubox
61 68 0.010230291 ubox
61 69 0.024112704 ubox
62 66 0.034789443 ubox
62 68 0.025192471 ubox
62 69 0.011005838 ubox
63 68 0.011426596 ubox
65 75 0.012360672 ubox
66 74 0.012391597 ubox
67 73 0.012882321 ubox
67 75 0.003903514 ubox
68 72 0.012821561 ubox
68 74 0.004007788 ubox
69 74 0.015858819 ubox
69 79 0.140969880 ubox
70 75 0.049645096 ubox
70 76 0.017644297 ubox
70 77 0.007617909 ubox
70 78 0.150595828 ubox
71 75 0.019429324 ubox
71 76 0.009495996 ubox
71 77 0.139761426 ubox
71 78 0.058948502 ubox
72 76 0.090831192 ubox
72 77 0.042069642 ubox
72 78 0.014570407 ubox
73 79 0.029839543 ubox
74 78 0.030763224 ubox
75 79 0.004535350 ubox
9 75 0.9500000 lbox
10 74 0.9500000 lbox
11 73 0.9500000 lbox
12 72 0.9500000 lbox
13 71 0.9500000 lbox
14 70 0.9500000 lbox
15 69 0.9500000 lbox
16 68 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
60 67 0.9500000 lbox
61 66 0.9500000 lbox
showpage
end
%%EOF
