%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (812)
} def

/sequence { (\
GGAAAAGAUAGAGAAGAAAAGGAAAAAAGAUCGAGAGAAAACUCACGAUCACCCUUCACUAUCAAAAAUACAUCUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 63 0.004035714 ubox
1 69 0.052270445 ubox
1 71 0.101319444 ubox
1 73 0.003804777 ubox
1 74 0.015506356 ubox
1 75 0.044897661 ubox
1 77 0.005000987 ubox
1 78 0.163548721 ubox
2 63 0.006860915 ubox
2 69 0.022939003 ubox
2 71 0.026225639 ubox
2 73 0.013869787 ubox
2 74 0.051746259 ubox
2 76 0.007394378 ubox
2 77 0.158805061 ubox
2 78 0.325232541 ubox
3 62 0.006096471 ubox
3 69 0.021587314 ubox
3 73 0.050535472 ubox
3 75 0.007550569 ubox
3 76 0.153335959 ubox
3 77 0.297750187 ubox
4 69 0.015624414 ubox
4 73 0.004820027 ubox
4 75 0.133969311 ubox
4 76 0.263374288 ubox
4 77 0.186675514 ubox
5 69 0.011819869 ubox
5 73 0.015544185 ubox
5 75 0.216741761 ubox
5 76 0.239580769 ubox
5 77 0.008594657 ubox
6 69 0.020800914 ubox
6 73 0.081347686 ubox
6 75 0.280734119 ubox
6 76 0.009585391 ubox
6 77 0.003464535 ubox
7 63 0.945487329 ubox
7 71 0.016259770 ubox
7 73 0.010836489 ubox
7 74 0.310101724 ubox
7 78 0.038668148 ubox
8 62 0.947016544 ubox
8 69 0.009501411 ubox
8 73 0.307551810 ubox
8 77 0.037761309 ubox
9 61 0.948624696 ubox
9 64 0.010044621 ubox
9 65 0.016265163 ubox
9 66 0.005775448 ubox
9 67 0.008706180 ubox
9 68 0.010502539 ubox
9 70 0.070957281 ubox
9 72 0.281755417 ubox
10 60 0.949874400 ubox
10 62 0.004789570 ubox
10 69 0.090799386 ubox
10 75 0.036303611 ubox
10 77 0.015071570 ubox
11 57 0.004363927 ubox
11 59 0.946520987 ubox
11 63 0.080179313 ubox
11 69 0.022573260 ubox
11 71 0.089106855 ubox
11 74 0.038178474 ubox
11 76 0.020812221 ubox
11 78 0.014912573 ubox
12 55 0.004352970 ubox
12 56 0.004766583 ubox
12 60 0.011956399 ubox
12 62 0.080127486 ubox
12 69 0.163360975 ubox
12 73 0.037924763 ubox
12 75 0.021558366 ubox
12 77 0.014210760 ubox
13 54 0.004396329 ubox
13 56 0.005054163 ubox
13 57 0.944285252 ubox
13 59 0.012580084 ubox
13 62 0.012261567 ubox
13 63 0.081388845 ubox
13 69 0.015410324 ubox
13 71 0.012535078 ubox
13 74 0.021685918 ubox
13 76 0.012335994 ubox
13 77 0.011606408 ubox
13 78 0.006840449 ubox
14 55 0.004364657 ubox
14 56 0.943506770 ubox
14 60 0.008296584 ubox
14 62 0.080701486 ubox
14 69 0.012247639 ubox
14 73 0.021363161 ubox
14 75 0.009902299 ubox
14 76 0.014303896 ubox
14 77 0.006040910 ubox
15 55 0.928340064 ubox
15 56 0.013180586 ubox
15 60 0.116362173 ubox
15 62 0.004535175 ubox
15 69 0.009295990 ubox
15 75 0.016511828 ubox
15 76 0.004915809 ubox
16 52 0.008214216 ubox
16 53 0.023946591 ubox
16 54 0.921850527 ubox
16 55 0.008324249 ubox
16 56 0.008410058 ubox
16 57 0.063208715 ubox
16 59 0.119473610 ubox
16 60 0.006217442 ubox
16 62 0.006473370 ubox
16 63 0.174474207 ubox
16 71 0.008014286 ubox
16 74 0.018313663 ubox
16 78 0.006172235 ubox
17 55 0.009539571 ubox
17 56 0.058740730 ubox
17 60 0.006579702 ubox
17 62 0.170059450 ubox
17 73 0.017811325 ubox
17 77 0.006091490 ubox
18 55 0.034847341 ubox
18 56 0.014111692 ubox
18 60 0.010816985 ubox
18 62 0.054890952 ubox
18 76 0.005934491 ubox
19 55 0.020366519 ubox
19 56 0.150340914 ubox
19 60 0.069260832 ubox
19 62 0.034401577 ubox
19 75 0.005500968 ubox
20 55 0.230309189 ubox
20 56 0.007306717 ubox
20 60 0.226927882 ubox
20 62 0.003776683 ubox
21 50 0.019856803 ubox
21 52 0.039998022 ubox
21 53 0.766247671 ubox
21 54 0.251213452 ubox
21 55 0.014853577 ubox
21 57 0.022457300 ubox
21 59 0.236031512 ubox
21 60 0.016479647 ubox
22 32 0.003643634 ubox
22 49 0.013436734 ubox
22 50 0.035315151 ubox
22 52 0.765677509 ubox
22 53 0.256111399 ubox
22 54 0.016580459 ubox
22 56 0.022504809 ubox
22 57 0.275779679 ubox
22 59 0.016056847 ubox
22 63 0.004366480 ubox
23 31 0.003533028 ubox
23 49 0.031282845 ubox
23 55 0.021980872 ubox
23 56 0.274939526 ubox
23 62 0.004261282 ubox
24 49 0.004541514 ubox
24 55 0.254461313 ubox
24 56 0.045847497 ubox
25 49 0.012349690 ubox
25 55 0.044016419 ubox
25 56 0.009798692 ubox
26 49 0.005120385 ubox
26 55 0.010127452 ubox
27 49 0.004308909 ubox
28 49 0.003604355 ubox
28 55 0.003995218 ubox
29 46 0.004674418 ubox
29 49 0.006031738 ubox
29 50 0.996504575 ubox
29 52 0.007411945 ubox
29 53 0.007124867 ubox
30 49 0.998697386 ubox
31 48 0.999694122 ubox
32 47 0.999916818 ubox
33 44 0.036351083 ubox
33 46 0.996059971 ubox
34 43 0.043578045 ubox
35 42 0.044414506 ubox
35 44 0.995224996 ubox
36 43 0.997087409 ubox
37 42 0.988771008 ubox
37 44 0.037882336 ubox
38 43 0.035473070 ubox
60 65 0.003514244 ubox
60 66 0.003237347 ubox
60 67 0.004184803 ubox
60 70 0.014257336 ubox
61 69 0.016498843 ubox
62 67 0.003834777 ubox
62 68 0.016076221 ubox
64 69 0.024315202 ubox
64 73 0.021330725 ubox
64 75 0.009285321 ubox
64 76 0.019859369 ubox
64 77 0.075558759 ubox
65 69 0.017581040 ubox
65 73 0.015460114 ubox
65 75 0.021167171 ubox
65 76 0.085146715 ubox
65 77 0.056536600 ubox
66 73 0.025699034 ubox
66 75 0.085768832 ubox
66 76 0.062232441 ubox
66 77 0.082245533 ubox
67 73 0.021697398 ubox
67 75 0.060363511 ubox
67 76 0.091172673 ubox
67 77 0.045490089 ubox
68 73 0.023119305 ubox
68 75 0.083167730 ubox
68 76 0.049743697 ubox
68 77 0.032431789 ubox
69 79 0.005664493 ubox
70 75 0.013720207 ubox
70 76 0.010675049 ubox
70 77 0.013283105 ubox
71 79 0.036135056 ubox
72 76 0.008446961 ubox
72 77 0.029222574 ubox
73 79 0.008146494 ubox
74 79 0.032373194 ubox
75 79 0.005436652 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
