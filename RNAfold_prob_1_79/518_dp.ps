%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (518)
} def

/sequence { (\
GGAAAUUCAUAAUUUAGAAACAUGACAGCAAAAGCAGUCAUGGGAAAAAACCAAACUAAAUAUAUGAAUGGAAGUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.005398877 ubox
1 69 0.004871167 ubox
1 75 0.025262676 ubox
1 76 0.024096445 ubox
1 77 0.014649820 ubox
1 78 0.518420703 ubox
2 7 0.004330593 ubox
2 8 0.004172412 ubox
2 69 0.007345533 ubox
2 75 0.034790551 ubox
2 76 0.022252311 ubox
2 77 0.518939922 ubox
2 78 0.465449043 ubox
3 7 0.003664046 ubox
3 15 0.006335251 ubox
3 69 0.015544152 ubox
3 75 0.021641755 ubox
3 76 0.517243417 ubox
3 77 0.465594511 ubox
4 14 0.006714857 ubox
4 69 0.033075209 ubox
4 75 0.511493225 ubox
4 76 0.463321871 ubox
4 77 0.008727211 ubox
5 13 0.006798075 ubox
5 69 0.882501328 ubox
5 75 0.393438298 ubox
5 76 0.007307401 ubox
6 12 0.006728549 ubox
6 19 0.013237291 ubox
6 67 0.006810257 ubox
6 68 0.928806593 ubox
6 70 0.011899618 ubox
6 71 0.014173995 ubox
6 72 0.027476391 ubox
6 73 0.046089008 ubox
6 74 0.331929348 ubox
7 11 0.005613126 ubox
7 18 0.015698349 ubox
7 67 0.990075544 ubox
7 68 0.021386422 ubox
7 70 0.007639125 ubox
7 71 0.031671755 ubox
7 72 0.037992073 ubox
7 73 0.111730067 ubox
8 17 0.016072119 ubox
8 66 0.998006353 ubox
8 70 0.034787114 ubox
8 71 0.036685256 ubox
9 63 0.013513506 ubox
9 65 0.997727285 ubox
9 69 0.034340835 ubox
10 62 0.019336659 ubox
10 64 0.995837489 ubox
10 66 0.006700605 ubox
10 68 0.030234363 ubox
10 70 0.015849375 ubox
11 61 0.016263304 ubox
11 63 0.978973434 ubox
11 65 0.009666666 ubox
11 69 0.014673795 ubox
12 61 0.970809746 ubox
12 63 0.016036718 ubox
12 65 0.010196384 ubox
12 69 0.023028896 ubox
13 50 0.003171402 ubox
13 59 0.007570988 ubox
13 60 0.993047387 ubox
13 62 0.017459993 ubox
13 64 0.008431828 ubox
13 67 0.003382899 ubox
13 68 0.024760471 ubox
14 49 0.003631782 ubox
14 58 0.005936089 ubox
14 59 0.996030050 ubox
14 60 0.024688289 ubox
14 66 0.003174313 ubox
14 67 0.025055301 ubox
15 48 0.003512645 ubox
15 58 0.997332203 ubox
15 59 0.019640678 ubox
15 62 0.006107816 ubox
15 64 0.003950324 ubox
15 66 0.024868340 ubox
16 57 0.997403320 ubox
16 61 0.005945157 ubox
16 63 0.003869824 ubox
16 65 0.023009843 ubox
17 56 0.991658798 ubox
17 57 0.005277480 ubox
17 78 0.003734960 ubox
18 57 0.003347116 ubox
18 63 0.004998602 ubox
18 77 0.003717780 ubox
19 76 0.003647980 ubox
20 41 0.003513926 ubox
20 75 0.003512967 ubox
21 42 0.983558680 ubox
21 43 0.014974835 ubox
21 74 0.003276880 ubox
22 41 0.992811322 ubox
23 40 0.997949017 ubox
24 39 0.999972850 ubox
25 38 0.999819203 ubox
26 37 0.996142218 ubox
28 35 0.996582510 ubox
29 34 0.996574465 ubox
41 53 0.102165609 ubox
41 54 0.005981451 ubox
42 51 0.007752445 ubox
42 52 0.167275111 ubox
43 51 0.189389110 ubox
43 52 0.938993917 ubox
43 56 0.006475528 ubox
43 57 0.004293378 ubox
43 78 0.008334925 ubox
44 51 0.936569547 ubox
44 52 0.054749822 ubox
44 56 0.004821500 ubox
44 77 0.008299884 ubox
44 78 0.021783127 ubox
45 76 0.008267074 ubox
45 77 0.021812166 ubox
46 75 0.008093075 ubox
46 76 0.021733409 ubox
47 75 0.021354740 ubox
51 71 0.024659702 ubox
52 70 0.024729703 ubox
53 69 0.023698398 ubox
53 77 0.004968894 ubox
54 76 0.005725775 ubox
55 75 0.006067418 ubox
56 66 0.018324638 ubox
56 71 0.003356877 ubox
56 74 0.006162406 ubox
57 64 0.008362385 ubox
57 66 0.005343895 ubox
57 70 0.003393019 ubox
57 73 0.005932206 ubox
58 63 0.008022732 ubox
58 65 0.005804942 ubox
60 69 0.003357063 ubox
61 68 0.003406084 ubox
61 70 0.005527403 ubox
62 69 0.005988082 ubox
63 68 0.005744572 ubox
65 79 0.004621168 ubox
66 78 0.007961868 ubox
67 76 0.006803233 ubox
67 77 0.008064060 ubox
68 75 0.012523908 ubox
68 76 0.008303931 ubox
68 77 0.004190832 ubox
69 73 0.003662749 ubox
69 74 0.013898764 ubox
69 79 0.051369032 ubox
70 75 0.018235975 ubox
70 76 0.012311710 ubox
70 77 0.019006156 ubox
70 78 0.213304450 ubox
71 75 0.010607687 ubox
71 76 0.019874822 ubox
71 77 0.206323132 ubox
71 78 0.272417728 ubox
72 76 0.176127395 ubox
72 77 0.255223919 ubox
73 77 0.008731776 ubox
74 78 0.024227274 ubox
75 79 0.004066242 ubox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 61 0.9500000 lbox
13 60 0.9500000 lbox
14 59 0.9500000 lbox
15 58 0.9500000 lbox
16 57 0.9500000 lbox
17 56 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
showpage
end
%%EOF
