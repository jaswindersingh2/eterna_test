%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1019)
} def

/sequence { (\
GGAAAAGAGAAACUCAAGCAUAAAAUGCAAGGUAUAAAAUACCAAGCUAAAAUAGCAACCGAAACGGAUCCUCCUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.014570155 ubox
1 14 0.007635416 ubox
1 15 0.017890377 ubox
1 19 0.007162880 ubox
1 43 0.019258544 ubox
1 48 0.005805162 ubox
1 56 0.005280716 ubox
1 59 0.036295632 ubox
1 60 0.261141939 ubox
1 65 0.003550171 ubox
1 70 0.004311275 ubox
1 71 0.183933228 ubox
1 72 0.007051484 ubox
1 73 0.006514637 ubox
1 74 0.223164764 ubox
1 75 0.008532007 ubox
1 77 0.007137437 ubox
1 78 0.184121145 ubox
2 13 0.010127727 ubox
2 14 0.014707462 ubox
2 15 0.027542548 ubox
2 19 0.008333677 ubox
2 42 0.019162237 ubox
2 47 0.006117949 ubox
2 56 0.003746863 ubox
2 59 0.261492261 ubox
2 60 0.022802559 ubox
2 70 0.184196335 ubox
2 71 0.008340879 ubox
2 72 0.005093021 ubox
2 73 0.223491516 ubox
2 74 0.009716700 ubox
2 76 0.011079998 ubox
2 77 0.178803686 ubox
2 78 0.842125176 ubox
3 14 0.026479744 ubox
3 69 0.171686405 ubox
3 72 0.212708036 ubox
3 75 0.011802461 ubox
3 76 0.174828869 ubox
3 77 0.842163856 ubox
4 40 0.004709853 ubox
4 69 0.011415907 ubox
4 72 0.009896083 ubox
4 75 0.159318869 ubox
4 76 0.838456610 ubox
4 77 0.069272220 ubox
5 14 0.006037712 ubox
5 69 0.008965132 ubox
5 72 0.005381362 ubox
5 75 0.803099241 ubox
5 76 0.088823082 ubox
5 77 0.005964974 ubox
6 14 0.044484424 ubox
6 69 0.028896496 ubox
6 72 0.045164905 ubox
6 75 0.103613964 ubox
6 76 0.006452855 ubox
6 77 0.015409038 ubox
7 13 0.047172378 ubox
7 14 0.006405528 ubox
7 15 0.474862992 ubox
7 59 0.008712889 ubox
7 60 0.006574376 ubox
7 65 0.003880076 ubox
7 70 0.036191660 ubox
7 71 0.048722845 ubox
7 72 0.006983467 ubox
7 73 0.842266722 ubox
7 74 0.098930853 ubox
7 75 0.004191117 ubox
7 76 0.019286577 ubox
7 78 0.031459536 ubox
8 14 0.474785666 ubox
8 69 0.033918515 ubox
8 72 0.845340043 ubox
8 75 0.020355483 ubox
8 77 0.031368398 ubox
9 13 0.464435655 ubox
9 14 0.006758735 ubox
9 15 0.076385681 ubox
9 59 0.008203491 ubox
9 60 0.005410349 ubox
9 70 0.120106859 ubox
9 71 0.835083855 ubox
9 72 0.005706570 ubox
9 73 0.072228522 ubox
9 74 0.020319253 ubox
9 76 0.030495290 ubox
9 78 0.025284189 ubox
10 14 0.068583825 ubox
10 35 0.008696931 ubox
10 69 0.152825992 ubox
10 72 0.068832260 ubox
10 75 0.028790249 ubox
10 77 0.025208409 ubox
11 69 0.120761589 ubox
11 72 0.004899215 ubox
11 76 0.024406540 ubox
12 33 0.031078300 ubox
12 69 0.026347354 ubox
12 75 0.020801156 ubox
13 18 0.009140661 ubox
13 27 0.006794516 ubox
13 31 0.026429192 ubox
13 32 0.032111450 ubox
13 66 0.057801068 ubox
13 67 0.058711958 ubox
13 79 0.004931720 ubox
14 29 0.019260550 ubox
14 30 0.042583147 ubox
14 31 0.025966534 ubox
14 32 0.011597483 ubox
14 44 0.003354481 ubox
14 45 0.004632518 ubox
14 57 0.004202959 ubox
14 58 0.004010492 ubox
14 62 0.024444275 ubox
14 64 0.005433617 ubox
14 66 0.050264313 ubox
14 67 0.028220322 ubox
14 68 0.047646450 ubox
15 27 0.008546366 ubox
15 31 0.027100998 ubox
15 61 0.025433520 ubox
15 66 0.035531765 ubox
15 67 0.046359190 ubox
15 79 0.003956344 ubox
16 26 0.007900838 ubox
17 26 0.007781857 ubox
18 28 0.989153511 ubox
18 56 0.108560282 ubox
19 27 0.990172074 ubox
19 55 0.108509406 ubox
20 26 0.969573010 ubox
20 53 0.033266925 ubox
21 25 0.859661505 ubox
21 27 0.003654372 ubox
21 30 0.003244362 ubox
21 51 0.003254097 ubox
21 52 0.031741722 ubox
21 54 0.038623269 ubox
22 26 0.005617943 ubox
22 53 0.037313599 ubox
23 53 0.003357504 ubox
25 35 0.003465057 ubox
25 48 0.010599501 ubox
26 34 0.003619659 ubox
26 49 0.011168002 ubox
27 33 0.003657712 ubox
27 47 0.113197143 ubox
28 32 0.003639407 ubox
28 46 0.113247570 ubox
31 42 0.005045900 ubox
31 43 0.997367941 ubox
31 60 0.003456947 ubox
32 40 0.004750428 ubox
32 42 0.998729316 ubox
32 43 0.003965529 ubox
32 59 0.003463422 ubox
33 39 0.005442962 ubox
33 41 0.997904489 ubox
33 58 0.003321622 ubox
34 40 0.986919203 ubox
35 39 0.875119371 ubox
35 41 0.005371832 ubox
36 40 0.007725092 ubox
45 53 0.003901529 ubox
46 56 0.989998091 ubox
47 55 0.991019846 ubox
48 52 0.004099535 ubox
48 54 0.984148756 ubox
48 55 0.004038174 ubox
49 53 0.872488744 ubox
54 72 0.005336170 ubox
55 70 0.008472240 ubox
55 71 0.006563995 ubox
56 61 0.003307667 ubox
57 69 0.139256802 ubox
58 69 0.109389006 ubox
59 66 0.031073430 ubox
59 67 0.883099602 ubox
59 79 0.015309101 ubox
60 66 0.887311191 ubox
60 67 0.077695875 ubox
60 79 0.286643305 ubox
61 65 0.830265374 ubox
61 70 0.071718412 ubox
61 71 0.004973806 ubox
61 73 0.005995758 ubox
61 77 0.006047156 ubox
61 78 0.401205731 ubox
62 69 0.067860397 ubox
62 72 0.005791487 ubox
62 76 0.007099142 ubox
62 77 0.401030443 ubox
63 69 0.004579963 ubox
63 75 0.006683647 ubox
63 76 0.399737817 ubox
63 77 0.017120277 ubox
64 69 0.003459557 ubox
64 75 0.394582764 ubox
64 76 0.021839650 ubox
65 79 0.023084504 ubox
66 70 0.007696600 ubox
66 71 0.010432040 ubox
66 72 0.006980857 ubox
66 73 0.043259598 ubox
66 74 0.414805968 ubox
66 75 0.010662411 ubox
66 78 0.024211294 ubox
67 71 0.009171585 ubox
67 72 0.033951558 ubox
67 73 0.414843848 ubox
67 74 0.012687721 ubox
67 77 0.024078938 ubox
67 78 0.008802837 ubox
68 72 0.360934750 ubox
68 76 0.023877487 ubox
68 77 0.008900221 ubox
73 79 0.004815805 ubox
74 79 0.008064036 ubox
2 78 0.9500000 lbox
3 77 0.9500000 lbox
4 76 0.9500000 lbox
5 75 0.9500000 lbox
7 73 0.9500000 lbox
8 72 0.9500000 lbox
9 71 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
showpage
end
%%EOF
