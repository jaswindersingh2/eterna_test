%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1011)
} def

/sequence { (\
GGAAAACUGAAACAGAAGUCGAAACGACAAGUAUGAAACAUACAACAUCAAAGAUGAAGCCAAAGGCACCUUAUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.128620141 ubox
1 8 0.102777037 ubox
1 13 0.083155321 ubox
1 20 0.032990451 ubox
1 25 0.028068078 ubox
1 28 0.011287436 ubox
1 39 0.004282964 ubox
1 43 0.008475795 ubox
1 46 0.084798279 ubox
1 48 0.005264934 ubox
1 49 0.098302226 ubox
1 61 0.018630379 ubox
1 69 0.011638212 ubox
1 70 0.155673226 ubox
1 71 0.022201105 ubox
1 72 0.005547640 ubox
1 75 0.024469128 ubox
1 76 0.072298812 ubox
1 77 0.007950346 ubox
1 78 0.239524615 ubox
2 7 0.109384949 ubox
2 8 0.011967473 ubox
2 13 0.023776410 ubox
2 19 0.030766391 ubox
2 20 0.105167413 ubox
2 25 0.007935402 ubox
2 28 0.003175717 ubox
2 43 0.004280100 ubox
2 46 0.044584941 ubox
2 48 0.063637050 ubox
2 49 0.165434904 ubox
2 60 0.018584015 ubox
2 69 0.155234512 ubox
2 70 0.025492812 ubox
2 71 0.005272746 ubox
2 72 0.012387963 ubox
2 74 0.018617292 ubox
2 75 0.083444010 ubox
2 76 0.006310207 ubox
2 77 0.180449570 ubox
2 78 0.322621432 ubox
3 8 0.019215161 ubox
3 19 0.104221912 ubox
3 48 0.155225620 ubox
3 71 0.012135857 ubox
3 72 0.012298916 ubox
3 74 0.079109386 ubox
3 76 0.142278657 ubox
3 77 0.289027392 ubox
4 8 0.010846369 ubox
4 48 0.011550384 ubox
4 71 0.012404485 ubox
4 72 0.024350022 ubox
4 74 0.009913508 ubox
4 76 0.196128181 ubox
4 77 0.019279856 ubox
5 19 0.004659052 ubox
5 48 0.009262927 ubox
5 71 0.022891339 ubox
5 72 0.036391834 ubox
5 74 0.022294674 ubox
5 76 0.017132248 ubox
5 77 0.012533508 ubox
6 19 0.088840025 ubox
6 32 0.007405464 ubox
6 48 0.008942297 ubox
6 71 0.032707836 ubox
6 72 0.008364522 ubox
6 74 0.025360213 ubox
6 76 0.009049836 ubox
6 77 0.007960728 ubox
7 15 0.686693043 ubox
7 18 0.097066644 ubox
7 21 0.004862063 ubox
7 31 0.007717231 ubox
7 65 0.004080024 ubox
7 79 0.033142568 ubox
8 12 0.007496360 ubox
8 14 0.690394507 ubox
8 15 0.028773356 ubox
8 16 0.028808946 ubox
8 17 0.105947112 ubox
8 21 0.027271848 ubox
8 29 0.006253576 ubox
8 30 0.007619635 ubox
8 36 0.005442327 ubox
8 40 0.012168383 ubox
8 44 0.007504880 ubox
8 45 0.005776212 ubox
8 47 0.050479640 ubox
8 50 0.202247549 ubox
8 51 0.005322805 ubox
8 64 0.003927791 ubox
8 68 0.003241974 ubox
8 73 0.026039335 ubox
8 79 0.095596229 ubox
9 13 0.680167697 ubox
9 20 0.033957802 ubox
9 25 0.003896311 ubox
9 28 0.005472293 ubox
9 39 0.013345558 ubox
9 43 0.004984876 ubox
9 46 0.055126662 ubox
9 49 0.219025566 ubox
9 69 0.007525606 ubox
9 70 0.020196291 ubox
9 71 0.006177229 ubox
9 72 0.027423798 ubox
9 75 0.031694920 ubox
9 77 0.007563351 ubox
9 78 0.174965353 ubox
10 19 0.033127281 ubox
10 34 0.006216484 ubox
10 48 0.204747815 ubox
10 71 0.025890766 ubox
10 72 0.007912050 ubox
10 74 0.030112955 ubox
10 76 0.006890486 ubox
10 77 0.158124445 ubox
11 48 0.010417223 ubox
11 71 0.007518728 ubox
11 72 0.007010907 ubox
11 74 0.003992149 ubox
11 76 0.106288089 ubox
11 77 0.009485225 ubox
12 19 0.017075629 ubox
12 32 0.015241519 ubox
12 34 0.003314325 ubox
12 48 0.003998693 ubox
12 71 0.006166325 ubox
12 72 0.010016055 ubox
12 74 0.007559659 ubox
12 76 0.007187815 ubox
12 77 0.006058414 ubox
13 18 0.019431670 ubox
13 21 0.004403182 ubox
13 31 0.015840891 ubox
13 35 0.022730308 ubox
13 79 0.034562968 ubox
14 32 0.007086854 ubox
14 34 0.022601843 ubox
14 48 0.004433429 ubox
14 71 0.032229577 ubox
14 72 0.007814338 ubox
14 74 0.004767760 ubox
14 76 0.061075133 ubox
14 77 0.005970534 ubox
15 20 0.007278863 ubox
15 28 0.017804506 ubox
15 46 0.025458920 ubox
15 49 0.086320196 ubox
15 69 0.007390744 ubox
15 70 0.033628741 ubox
15 71 0.007142366 ubox
15 72 0.015405148 ubox
15 75 0.067765095 ubox
15 76 0.004017598 ubox
15 77 0.008071546 ubox
15 78 0.133197241 ubox
16 32 0.007176938 ubox
16 48 0.080906791 ubox
16 71 0.015168720 ubox
16 72 0.015511218 ubox
16 74 0.063365358 ubox
16 76 0.007169762 ubox
16 77 0.119892278 ubox
17 48 0.006819720 ubox
17 71 0.015405241 ubox
17 72 0.007754957 ubox
17 74 0.003621102 ubox
17 76 0.083501855 ubox
17 77 0.007329201 ubox
18 25 0.026220593 ubox
18 28 0.983201554 ubox
18 46 0.007923080 ubox
18 70 0.007768911 ubox
18 75 0.029093842 ubox
19 24 0.024288257 ubox
19 27 0.984959898 ubox
19 36 0.005290872 ubox
19 45 0.006730721 ubox
20 26 0.985707063 ubox
20 35 0.005896582 ubox
20 79 0.026028459 ubox
21 25 0.922165582 ubox
21 28 0.016383560 ubox
21 34 0.005119295 ubox
21 49 0.010439968 ubox
21 70 0.003213514 ubox
21 72 0.013819131 ubox
21 75 0.003296054 ubox
21 78 0.030997104 ubox
22 48 0.010227846 ubox
22 71 0.013207015 ubox
22 72 0.003460974 ubox
22 74 0.003163771 ubox
22 77 0.027723936 ubox
23 71 0.003383667 ubox
23 76 0.018688410 ubox
24 32 0.011340108 ubox
25 31 0.011852790 ubox
25 79 0.033151667 ubox
26 46 0.012336251 ubox
26 48 0.004042875 ubox
26 49 0.061607168 ubox
26 75 0.007506480 ubox
26 78 0.034723985 ubox
27 48 0.060527481 ubox
27 74 0.007104328 ubox
27 77 0.026274436 ubox
28 35 0.003800884 ubox
28 79 0.003409752 ubox
29 34 0.003770008 ubox
29 41 0.004476811 ubox
29 48 0.008194669 ubox
29 72 0.005822760 ubox
29 77 0.004781649 ubox
30 41 0.004038045 ubox
30 48 0.011638016 ubox
30 71 0.005869511 ubox
30 76 0.004526975 ubox
31 39 0.031260889 ubox
31 41 0.004849916 ubox
31 43 0.992236850 ubox
31 46 0.028217748 ubox
31 49 0.016921491 ubox
31 70 0.003247604 ubox
31 75 0.003461161 ubox
32 38 0.030577935 ubox
32 40 0.004868066 ubox
32 42 0.993478371 ubox
32 45 0.026681111 ubox
33 41 0.993466552 ubox
33 48 0.022384237 ubox
33 74 0.003244237 ubox
34 40 0.992415485 ubox
34 42 0.003316837 ubox
34 44 0.024821027 ubox
34 47 0.023774700 ubox
34 50 0.027618601 ubox
34 73 0.003331690 ubox
34 79 0.004061405 ubox
35 39 0.976777747 ubox
35 41 0.003302893 ubox
35 43 0.025927490 ubox
35 46 0.024069941 ubox
35 49 0.030666166 ubox
35 72 0.003311644 ubox
35 78 0.006590642 ubox
36 41 0.007206384 ubox
36 48 0.029165617 ubox
36 77 0.006197429 ubox
37 41 0.004508424 ubox
37 76 0.003711629 ubox
40 48 0.003635069 ubox
41 47 0.004083106 ubox
44 48 0.010756346 ubox
44 77 0.003953573 ubox
45 77 0.004311429 ubox
46 53 0.012062710 ubox
46 56 0.283746146 ubox
46 59 0.006150539 ubox
46 79 0.025185346 ubox
47 55 0.285039120 ubox
47 77 0.008042862 ubox
48 52 0.005117885 ubox
48 54 0.285042505 ubox
48 57 0.075203883 ubox
48 58 0.003554181 ubox
48 79 0.027216791 ubox
49 53 0.282716886 ubox
49 56 0.080437549 ubox
49 79 0.246311107 ubox
50 55 0.069984459 ubox
50 76 0.005144677 ubox
50 77 0.046600234 ubox
51 72 0.010811200 ubox
51 76 0.038651189 ubox
51 77 0.800248243 ubox
52 71 0.011564101 ubox
52 74 0.003300309 ubox
52 76 0.918457778 ubox
52 77 0.017047884 ubox
53 70 0.011589497 ubox
53 72 0.007624387 ubox
53 75 0.952796473 ubox
53 78 0.005824343 ubox
54 71 0.007750195 ubox
54 72 0.006001028 ubox
54 74 0.952736916 ubox
54 77 0.005579279 ubox
55 68 0.005660455 ubox
55 73 0.951607638 ubox
55 79 0.014262692 ubox
56 67 0.003566364 ubox
56 69 0.012445167 ubox
56 70 0.060228445 ubox
56 71 0.012443504 ubox
56 72 0.948396146 ubox
56 75 0.005495146 ubox
56 78 0.023633276 ubox
57 71 0.935436043 ubox
57 72 0.032600595 ubox
57 74 0.005396312 ubox
57 77 0.023812013 ubox
58 71 0.043784079 ubox
58 72 0.005258648 ubox
58 76 0.023889278 ubox
59 67 0.997352702 ubox
59 69 0.033856182 ubox
59 70 0.028976127 ubox
59 75 0.023258721 ubox
60 65 0.008809749 ubox
60 66 0.998449285 ubox
61 65 0.991191695 ubox
61 66 0.016235418 ubox
62 72 0.005872397 ubox
63 71 0.005064734 ubox
63 72 0.026770092 ubox
63 77 0.007268780 ubox
64 71 0.029201470 ubox
64 72 0.006246846 ubox
64 76 0.008289894 ubox
65 70 0.029494724 ubox
65 71 0.006934320 ubox
65 75 0.008542615 ubox
65 76 0.003540231 ubox
66 70 0.006915029 ubox
66 74 0.007145917 ubox
66 75 0.003695049 ubox
68 72 0.005474348 ubox
68 74 0.005175622 ubox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
51 77 0.9500000 lbox
52 76 0.9500000 lbox
53 75 0.9500000 lbox
54 74 0.9500000 lbox
55 73 0.9500000 lbox
56 72 0.9500000 lbox
57 71 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
showpage
end
%%EOF
