%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (453)
} def

/sequence { (\
GGAAAAGAUAUCGGCACUGAAAACAGGUCAAAAGACGCCAAAACUAGUCAAAAGACUAGGAUAUCAAAAGUGAGAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.010634676 ubox
1 39 0.018003551 ubox
1 65 0.004784663 ubox
1 71 0.056368555 ubox
1 78 0.064852000 ubox
2 11 0.009475382 ubox
2 12 0.018404774 ubox
2 38 0.018001342 ubox
2 64 0.003177316 ubox
2 65 0.008028711 ubox
2 71 0.034705954 ubox
2 77 0.063527915 ubox
2 78 0.094289978 ubox
3 11 0.017767835 ubox
3 64 0.007185882 ubox
3 71 0.032247367 ubox
3 76 0.060101655 ubox
3 77 0.093564859 ubox
4 9 0.003982101 ubox
4 71 0.025120367 ubox
4 76 0.085204067 ubox
4 77 0.006622414 ubox
5 9 0.003401591 ubox
5 71 0.010033050 ubox
5 76 0.007763154 ubox
5 77 0.009150698 ubox
6 71 0.021467903 ubox
6 76 0.010863884 ubox
6 77 0.004083311 ubox
7 12 0.009341859 ubox
7 65 0.994297607 ubox
7 77 0.006758137 ubox
7 78 0.033792110 ubox
8 64 0.995446028 ubox
8 71 0.003766786 ubox
8 76 0.007431327 ubox
8 77 0.032682036 ubox
9 33 0.004516121 ubox
9 63 0.995541318 ubox
9 70 0.003518483 ubox
9 75 0.006756697 ubox
10 62 0.995580055 ubox
10 76 0.033013340 ubox
11 30 0.004672153 ubox
11 31 0.005334511 ubox
11 40 0.007042841 ubox
11 41 0.010318400 ubox
11 60 0.003281670 ubox
11 61 0.995691734 ubox
11 73 0.010513202 ubox
11 75 0.035600735 ubox
12 59 0.003585312 ubox
12 60 0.994895544 ubox
12 72 0.010752246 ubox
12 74 0.035719810 ubox
12 79 0.003412163 ubox
13 17 0.003392561 ubox
13 24 0.010213330 ubox
13 29 0.227530107 ubox
13 38 0.003655598 ubox
13 39 0.957854621 ubox
13 71 0.003479400 ubox
14 24 0.003319355 ubox
14 28 0.228707551 ubox
14 29 0.014870719 ubox
14 38 0.958846756 ubox
14 39 0.003473940 ubox
14 71 0.004940599 ubox
15 26 0.003958839 ubox
15 27 0.228795662 ubox
15 37 0.957850265 ubox
15 70 0.005330134 ubox
15 72 0.023633809 ubox
16 28 0.034754316 ubox
16 71 0.023672165 ubox
17 26 0.988524486 ubox
17 27 0.033175517 ubox
17 34 0.043517733 ubox
17 70 0.023605380 ubox
18 22 0.004274539 ubox
18 23 0.014797240 ubox
18 25 0.990589657 ubox
18 26 0.031585657 ubox
18 30 0.021727784 ubox
18 33 0.041804000 ubox
18 34 0.003415069 ubox
18 35 0.003833482 ubox
18 66 0.006707663 ubox
18 69 0.021973695 ubox
19 24 0.985169469 ubox
19 29 0.025214576 ubox
19 65 0.009235865 ubox
20 28 0.024266847 ubox
20 64 0.008693253 ubox
21 28 0.003462340 ubox
22 28 0.003422287 ubox
23 28 0.004396340 ubox
26 36 0.006996817 ubox
26 38 0.014369511 ubox
26 39 0.031638495 ubox
27 36 0.968279201 ubox
27 38 0.032166932 ubox
28 34 0.003707725 ubox
28 35 0.969227458 ubox
28 37 0.030823593 ubox
29 34 0.967985251 ubox
29 37 0.006578972 ubox
34 38 0.012941435 ubox
34 39 0.055738725 ubox
37 44 0.004264592 ubox
40 62 0.003343116 ubox
41 62 0.019667883 ubox
42 62 0.004645786 ubox
44 59 0.996748137 ubox
45 58 0.999407384 ubox
45 59 0.003249557 ubox
46 57 0.999670451 ubox
47 56 0.999972522 ubox
48 55 0.999688815 ubox
49 54 0.998112805 ubox
59 78 0.019381611 ubox
60 65 0.006846207 ubox
60 77 0.034254388 ubox
60 78 0.056314130 ubox
61 76 0.037093708 ubox
61 77 0.054458915 ubox
62 75 0.032646376 ubox
63 71 0.003872407 ubox
63 76 0.039328010 ubox
64 70 0.003703492 ubox
64 73 0.065006840 ubox
64 75 0.042854303 ubox
65 70 0.005332497 ubox
65 72 0.068956502 ubox
65 74 0.043704631 ubox
66 71 0.062708993 ubox
66 76 0.007405618 ubox
66 77 0.032262533 ubox
67 71 0.014589364 ubox
67 76 0.035387524 ubox
67 77 0.024699308 ubox
68 76 0.025187654 ubox
68 77 0.078633099 ubox
69 76 0.085030787 ubox
69 77 0.052234256 ubox
70 76 0.059813134 ubox
70 77 0.031246919 ubox
70 78 0.083817044 ubox
71 75 0.056274344 ubox
71 79 0.154129813 ubox
72 76 0.016017067 ubox
72 77 0.016735486 ubox
72 78 0.263393255 ubox
73 77 0.229350139 ubox
74 78 0.036724942 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
