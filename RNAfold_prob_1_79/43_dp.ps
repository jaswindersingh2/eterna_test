%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (43)
} def

/sequence { (\
GGAAAAAGGACCAGGGCGAAAGCCCUGCAAGGGCUCGAAAGAGCACCACGAAAGUGGCCGGGCGGUCCUUGCGUUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.024066553 ubox
1 72 0.037214416 ubox
1 74 0.018167122 ubox
1 75 0.041779692 ubox
1 76 0.044475161 ubox
1 77 0.053354291 ubox
1 78 0.800933898 ubox
2 11 0.024077220 ubox
2 72 0.048735717 ubox
2 74 0.059896376 ubox
2 75 0.065742191 ubox
2 76 0.083871402 ubox
2 77 0.801914660 ubox
2 78 0.520424670 ubox
3 70 0.031425446 ubox
3 74 0.066095903 ubox
3 75 0.090929909 ubox
3 76 0.800705027 ubox
3 77 0.520576458 ubox
4 69 0.015552915 ubox
4 70 0.008950104 ubox
4 74 0.087333431 ubox
4 75 0.783819589 ubox
4 76 0.516707757 ubox
4 77 0.013177229 ubox
5 69 0.005212206 ubox
5 70 0.025944783 ubox
5 74 0.764986589 ubox
5 75 0.511885871 ubox
5 76 0.016800178 ubox
5 77 0.003526609 ubox
6 69 0.023036089 ubox
6 70 0.899646543 ubox
6 74 0.361225258 ubox
6 75 0.015275066 ubox
6 76 0.003434657 ubox
7 69 0.990938948 ubox
7 70 0.038069215 ubox
7 74 0.009896755 ubox
7 77 0.008558712 ubox
8 28 0.004307922 ubox
8 68 0.998372512 ubox
8 69 0.006531939 ubox
8 72 0.009491241 ubox
8 76 0.010402600 ubox
8 78 0.005234910 ubox
9 28 0.005832226 ubox
9 67 0.998425884 ubox
9 68 0.004716467 ubox
9 72 0.006595802 ubox
9 75 0.011828845 ubox
9 77 0.005029218 ubox
9 78 0.004176177 ubox
10 66 0.998305584 ubox
10 74 0.012326725 ubox
10 76 0.004582336 ubox
10 77 0.003869108 ubox
11 65 0.998369019 ubox
11 73 0.012404523 ubox
12 27 0.055667103 ubox
12 64 0.996250514 ubox
13 26 0.951732713 ubox
14 25 0.999735648 ubox
14 26 0.004226726 ubox
15 24 0.999968439 ubox
15 25 0.003805891 ubox
16 23 0.999971449 ubox
17 22 0.999582949 ubox
22 63 0.004082789 ubox
23 62 0.004088387 ubox
24 61 0.004089216 ubox
25 60 0.004085476 ubox
26 64 0.019351113 ubox
26 73 0.013957899 ubox
27 58 0.004804564 ubox
27 63 0.989790055 ubox
27 72 0.042944690 ubox
28 32 0.008998276 ubox
28 33 0.003213465 ubox
28 50 0.004227176 ubox
28 57 0.004573500 ubox
28 60 0.004712611 ubox
28 61 0.018071633 ubox
28 62 0.990756527 ubox
28 71 0.045471304 ubox
29 70 0.045469389 ubox
30 69 0.045474445 ubox
31 46 0.009566645 ubox
31 47 0.042740075 ubox
31 58 0.007665878 ubox
31 59 0.990630362 ubox
31 68 0.045496868 ubox
32 44 0.006345621 ubox
32 46 0.043861436 ubox
32 58 0.987983206 ubox
32 59 0.015657815 ubox
32 67 0.045438414 ubox
33 44 0.997988167 ubox
33 58 0.007698042 ubox
33 63 0.018630025 ubox
33 66 0.032137917 ubox
34 43 0.999263820 ubox
34 62 0.018676645 ubox
34 65 0.032091844 ubox
35 42 0.999096194 ubox
35 61 0.018686868 ubox
35 64 0.009081997 ubox
36 41 0.998783474 ubox
36 60 0.018755815 ubox
36 64 0.030674339 ubox
37 59 0.018530432 ubox
37 63 0.031045183 ubox
41 58 0.006106908 ubox
41 59 0.025756779 ubox
43 58 0.025303609 ubox
43 59 0.010048622 ubox
43 63 0.004401459 ubox
44 56 0.006678660 ubox
44 57 0.019092065 ubox
44 60 0.006882777 ubox
44 62 0.004365527 ubox
45 55 0.007168608 ubox
46 54 0.007150602 ubox
46 56 0.007463522 ubox
46 57 0.994015429 ubox
46 62 0.008861808 ubox
47 56 0.998914427 ubox
47 61 0.008914675 ubox
48 55 0.998728062 ubox
48 74 0.026017970 ubox
49 54 0.998401646 ubox
49 56 0.006534365 ubox
49 60 0.017475726 ubox
49 73 0.031024374 ubox
49 79 0.004491585 ubox
50 55 0.004668783 ubox
50 59 0.017583206 ubox
50 72 0.031093463 ubox
50 78 0.004720305 ubox
51 77 0.004715307 ubox
52 70 0.022549132 ubox
52 76 0.004675596 ubox
53 69 0.031488549 ubox
53 75 0.004568645 ubox
54 63 0.010704553 ubox
54 68 0.031571273 ubox
54 74 0.004267114 ubox
55 62 0.010633006 ubox
56 63 0.005725919 ubox
56 67 0.031657733 ubox
57 63 0.025035377 ubox
57 66 0.033198544 ubox
57 72 0.004555460 ubox
58 62 0.025809198 ubox
58 64 0.005596499 ubox
58 65 0.044257325 ubox
58 71 0.004692484 ubox
59 64 0.045121676 ubox
59 65 0.003550146 ubox
60 69 0.004619689 ubox
61 68 0.004711399 ubox
62 67 0.004635853 ubox
70 79 0.003813917 ubox
71 78 0.015253586 ubox
72 79 0.075701315 ubox
73 78 0.081311672 ubox
1 78 0.9500000 lbox
2 77 0.9500000 lbox
3 76 0.9500000 lbox
4 75 0.9500000 lbox
5 74 0.9500000 lbox
6 70 0.9500000 lbox
7 69 0.9500000 lbox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
