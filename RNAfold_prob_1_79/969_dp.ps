%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (969)
} def

/sequence { (\
GGAAAGAUACAGUACAAAGGUACAAUAUGCAUCAAAAAAGGAUGCAUAUACUUCAAAGGAAGAGUAUCCAUCGAAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.013061122 ubox
1 54 0.005183638 ubox
1 69 0.153686875 ubox
1 71 0.011647483 ubox
1 72 0.170211600 ubox
1 76 0.009730399 ubox
1 77 0.006935299 ubox
1 78 0.075995011 ubox
2 53 0.005013252 ubox
2 54 0.007337473 ubox
2 68 0.149611262 ubox
2 69 0.039021015 ubox
2 71 0.148725945 ubox
2 72 0.887758930 ubox
2 76 0.004180942 ubox
2 77 0.065660961 ubox
2 78 0.084246810 ubox
3 52 0.004689516 ubox
3 53 0.006931925 ubox
3 67 0.135943004 ubox
3 71 0.882097883 ubox
3 76 0.062436465 ubox
3 77 0.083731292 ubox
4 52 0.005976018 ubox
4 53 0.003855504 ubox
4 65 0.008478778 ubox
4 67 0.007761257 ubox
4 71 0.028696464 ubox
4 76 0.076315793 ubox
4 77 0.009336992 ubox
5 52 0.004881765 ubox
5 65 0.019398489 ubox
5 71 0.021360226 ubox
5 76 0.011677775 ubox
6 10 0.009536151 ubox
6 51 0.005476671 ubox
6 65 0.004737215 ubox
6 67 0.004790602 ubox
6 68 0.983737709 ubox
6 69 0.033409625 ubox
6 72 0.054235264 ubox
6 77 0.004636414 ubox
6 78 0.010930065 ubox
7 28 0.005459313 ubox
7 65 0.016940160 ubox
7 67 0.986517860 ubox
7 71 0.053234830 ubox
7 76 0.005175880 ubox
7 77 0.010185846 ubox
8 22 0.004527440 ubox
8 27 0.005884390 ubox
8 63 0.009785465 ubox
8 64 0.016700960 ubox
8 66 0.991045948 ubox
8 70 0.048563172 ubox
8 75 0.005220927 ubox
9 21 0.004803455 ubox
9 26 0.006201528 ubox
9 65 0.991185020 ubox
10 20 0.004808880 ubox
10 64 0.989999055 ubox
10 73 0.004300553 ubox
11 21 0.003288589 ubox
11 26 0.003312779 ubox
11 67 0.003774951 ubox
12 23 0.996809818 ubox
12 67 0.008575859 ubox
13 19 0.003340026 ubox
13 22 0.997997096 ubox
13 59 0.003599476 ubox
13 61 0.019861914 ubox
13 66 0.009232887 ubox
14 21 0.997895171 ubox
14 65 0.009273618 ubox
15 19 0.018353857 ubox
15 20 0.995673297 ubox
15 58 0.010005404 ubox
15 59 0.018044197 ubox
15 64 0.009265620 ubox
18 53 0.018112014 ubox
19 23 0.003782773 ubox
19 52 0.020794462 ubox
19 54 0.006481429 ubox
19 68 0.012040545 ubox
19 69 0.007303193 ubox
20 51 0.021219729 ubox
20 53 0.006258882 ubox
20 54 0.011330641 ubox
20 67 0.012225233 ubox
20 68 0.007257886 ubox
21 50 0.021205864 ubox
21 66 0.014153588 ubox
22 49 0.016125902 ubox
22 52 0.004924475 ubox
22 65 0.014234500 ubox
23 64 0.014220272 ubox
24 49 0.037457216 ubox
24 52 0.003869933 ubox
25 47 0.003262654 ubox
25 49 0.949013425 ubox
26 48 0.991387623 ubox
26 50 0.008243960 ubox
27 47 0.998310898 ubox
27 49 0.007153194 ubox
28 46 0.999285979 ubox
28 48 0.003883544 ubox
29 45 0.999980688 ubox
30 44 0.999981433 ubox
31 43 0.999553879 ubox
32 41 0.049936592 ubox
32 42 0.998356870 ubox
33 40 0.094992873 ubox
33 41 0.994606613 ubox
41 72 0.003324141 ubox
42 71 0.003329661 ubox
43 70 0.003330534 ubox
44 69 0.003325801 ubox
46 67 0.005250413 ubox
47 66 0.007975565 ubox
48 65 0.010042114 ubox
48 67 0.010668841 ubox
49 63 0.050903252 ubox
49 64 0.010709720 ubox
49 66 0.024394730 ubox
50 65 0.038399300 ubox
50 77 0.003779848 ubox
51 58 0.041406007 ubox
51 59 0.036997550 ubox
51 62 0.983901561 ubox
51 64 0.039564673 ubox
52 57 0.038434454 ubox
52 58 0.036601339 ubox
52 59 0.005490255 ubox
52 60 0.031236268 ubox
52 61 0.989422558 ubox
52 62 0.006839536 ubox
52 63 0.039421026 ubox
52 64 0.007016492 ubox
52 75 0.029093332 ubox
53 57 0.028020901 ubox
53 58 0.005466714 ubox
53 59 0.034724218 ubox
53 60 0.990650879 ubox
53 61 0.006414844 ubox
53 62 0.036928973 ubox
53 63 0.042755810 ubox
53 74 0.033454753 ubox
54 58 0.038303340 ubox
54 59 0.989051910 ubox
54 62 0.045445495 ubox
54 73 0.033828851 ubox
55 71 0.003178715 ubox
56 71 0.019975978 ubox
57 71 0.003766379 ubox
58 69 0.052315156 ubox
59 68 0.052379562 ubox
60 67 0.049347238 ubox
61 67 0.003711229 ubox
62 72 0.003798002 ubox
62 78 0.008730674 ubox
63 71 0.003902677 ubox
63 77 0.009013255 ubox
64 69 0.006797030 ubox
64 72 0.004101098 ubox
64 76 0.009163562 ubox
65 75 0.009066353 ubox
67 74 0.013002199 ubox
68 73 0.013834679 ubox
69 73 0.016771506 ubox
69 79 0.009526983 ubox
70 76 0.009993276 ubox
70 77 0.014616344 ubox
71 75 0.009676670 ubox
71 79 0.003307935 ubox
72 79 0.109069192 ubox
73 77 0.008920468 ubox
73 78 0.160291975 ubox
2 72 0.9500000 lbox
3 71 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
showpage
end
%%EOF
