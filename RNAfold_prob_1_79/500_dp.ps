%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (500)
} def

/sequence { (\
GGAAAAGCUAGCGUCAAUCGAAAGAUGUGGAAACACGACAAAACGUAUUGAAAAAUACGGCUAGCAAAGCAUGGGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 70 0.187969375 ubox
1 72 0.033913398 ubox
1 77 0.003312933 ubox
1 78 0.102872692 ubox
2 70 0.222175782 ubox
2 72 0.008602175 ubox
2 76 0.004350185 ubox
2 77 0.097935635 ubox
2 78 0.150633820 ubox
3 72 0.008064189 ubox
3 76 0.093561803 ubox
3 77 0.148103281 ubox
4 72 0.006524038 ubox
4 76 0.137580594 ubox
4 77 0.006499455 ubox
5 72 0.007509758 ubox
5 76 0.006851279 ubox
5 77 0.010152627 ubox
6 72 0.023253820 ubox
6 76 0.011887978 ubox
6 77 0.006265786 ubox
7 65 0.998639821 ubox
7 70 0.012662933 ubox
7 76 0.006159217 ubox
8 64 0.999797681 ubox
8 69 0.012301582 ubox
8 74 0.009029536 ubox
8 75 0.006250155 ubox
9 63 0.999546634 ubox
9 68 0.010521377 ubox
9 73 0.009004486 ubox
9 74 0.005904120 ubox
10 62 0.999575465 ubox
10 72 0.008609596 ubox
11 28 0.005196888 ubox
11 61 0.999846119 ubox
11 65 0.007162926 ubox
11 70 0.006919850 ubox
12 20 0.014483176 ubox
12 27 0.010499230 ubox
12 37 0.003371253 ubox
12 59 0.019716679 ubox
12 60 0.998621378 ubox
12 64 0.007159437 ubox
12 69 0.006918930 ubox
13 18 0.006114649 ubox
13 19 0.056346436 ubox
13 26 0.324252632 ubox
13 28 0.004624705 ubox
13 34 0.016623044 ubox
13 36 0.012925364 ubox
13 39 0.645985483 ubox
13 44 0.005554671 ubox
13 56 0.003377681 ubox
13 58 0.026692666 ubox
14 20 0.006087968 ubox
14 21 0.144258441 ubox
14 22 0.008389130 ubox
14 23 0.007893661 ubox
14 24 0.003430905 ubox
14 25 0.344676092 ubox
14 29 0.004097159 ubox
14 30 0.046538571 ubox
14 31 0.017364491 ubox
14 33 0.014898455 ubox
14 35 0.012061982 ubox
14 38 0.646714276 ubox
14 43 0.005680984 ubox
14 51 0.025617758 ubox
14 57 0.017859669 ubox
14 59 0.006686977 ubox
14 60 0.003433531 ubox
15 20 0.154132659 ubox
15 24 0.348535102 ubox
15 27 0.024325466 ubox
15 29 0.061107122 ubox
15 30 0.018116886 ubox
15 37 0.645807148 ubox
15 50 0.031730952 ubox
15 59 0.008764470 ubox
16 26 0.035078532 ubox
16 28 0.057091087 ubox
16 49 0.031718901 ubox
17 26 0.838501892 ubox
17 28 0.003749597 ubox
17 48 0.031645029 ubox
18 22 0.008819078 ubox
18 23 0.011793228 ubox
18 24 0.005406785 ubox
18 25 0.880406807 ubox
18 27 0.003370820 ubox
18 30 0.004461911 ubox
18 31 0.027038379 ubox
18 38 0.029535073 ubox
18 47 0.030945513 ubox
18 51 0.003826755 ubox
19 24 0.888134771 ubox
19 27 0.003694860 ubox
19 29 0.005337529 ubox
19 30 0.027740407 ubox
19 37 0.032322292 ubox
19 45 0.031445971 ubox
19 50 0.003935599 ubox
20 26 0.005399278 ubox
20 28 0.004594445 ubox
20 36 0.031350525 ubox
20 39 0.009947846 ubox
20 44 0.031415095 ubox
20 49 0.003870131 ubox
21 26 0.010868286 ubox
21 28 0.022485912 ubox
21 48 0.003699861 ubox
22 26 0.006939799 ubox
23 28 0.004678309 ubox
24 34 0.003589340 ubox
24 36 0.026418480 ubox
24 39 0.127362296 ubox
26 35 0.062635729 ubox
26 37 0.238233866 ubox
26 38 0.024746551 ubox
26 40 0.100998827 ubox
26 41 0.005962748 ubox
26 42 0.003529095 ubox
27 34 0.099142143 ubox
27 36 0.974228228 ubox
27 39 0.163719443 ubox
27 44 0.003819103 ubox
28 33 0.098240260 ubox
28 35 0.975439754 ubox
28 37 0.046412137 ubox
28 38 0.159556043 ubox
28 40 0.024362551 ubox
28 43 0.003898121 ubox
29 34 0.975477027 ubox
29 36 0.075328681 ubox
29 39 0.027073968 ubox
30 34 0.011273002 ubox
30 36 0.148356321 ubox
30 39 0.009938667 ubox
36 45 0.003402013 ubox
37 44 0.020070882 ubox
38 46 0.004400195 ubox
39 45 0.004626705 ubox
39 50 0.005543353 ubox
39 59 0.004057775 ubox
40 49 0.005557160 ubox
41 48 0.004932862 ubox
41 62 0.004206164 ubox
44 59 0.990560233 ubox
45 58 0.999360029 ubox
46 57 0.999156298 ubox
47 56 0.998819907 ubox
48 53 0.003308909 ubox
48 54 0.012652585 ubox
48 55 0.995907037 ubox
49 53 0.014976773 ubox
49 54 0.977906058 ubox
49 55 0.020645061 ubox
60 70 0.010632743 ubox
61 69 0.010646874 ubox
61 74 0.003344339 ubox
62 68 0.010402177 ubox
62 73 0.003380376 ubox
63 72 0.003373478 ubox
64 70 0.005104151 ubox
65 69 0.005227024 ubox
65 73 0.009317606 ubox
65 74 0.004615332 ubox
66 72 0.016592444 ubox
66 76 0.006557630 ubox
66 77 0.030217095 ubox
67 72 0.019555138 ubox
67 76 0.030951937 ubox
67 77 0.089142995 ubox
68 72 0.012062636 ubox
68 76 0.096433881 ubox
68 77 0.387361570 ubox
69 76 0.457136582 ubox
69 77 0.013920947 ubox
69 78 0.049791605 ubox
70 74 0.092711433 ubox
70 75 0.462718578 ubox
70 79 0.037297075 ubox
71 76 0.015436625 ubox
71 77 0.032294457 ubox
72 79 0.081522791 ubox
73 77 0.007221425 ubox
73 78 0.130947155 ubox
74 78 0.038967854 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
