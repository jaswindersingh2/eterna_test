%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (672)
} def

/sequence { (\
GGAAAGAACAAGAUCGAAAAAAAAAAGAUCAAGUACGAAAAAAAAAAGUACAAGUUCAAAAAAAAAAAGAUUAACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.060498691 ubox
1 57 0.052314095 ubox
1 75 0.017591027 ubox
1 76 0.011057902 ubox
1 78 0.079201353 ubox
2 9 0.025375022 ubox
2 15 0.006252080 ubox
2 56 0.050538821 ubox
2 57 0.064575354 ubox
2 72 0.007082982 ubox
2 75 0.012691878 ubox
2 77 0.072763257 ubox
2 78 0.124051294 ubox
3 14 0.005953502 ubox
3 55 0.046631955 ubox
3 56 0.063747981 ubox
3 71 0.006879187 ubox
3 72 0.005911197 ubox
3 76 0.066463723 ubox
3 77 0.116644839 ubox
4 55 0.054850270 ubox
4 56 0.004665161 ubox
4 71 0.005762515 ubox
4 72 0.016337317 ubox
4 76 0.097645831 ubox
4 77 0.046825763 ubox
5 55 0.005011688 ubox
5 56 0.003209997 ubox
5 71 0.016203166 ubox
5 72 0.008216026 ubox
5 76 0.059964752 ubox
5 77 0.004588157 ubox
6 15 0.014417851 ubox
6 30 0.003370816 ubox
6 36 0.021688188 ubox
6 55 0.003168849 ubox
6 56 0.006176832 ubox
6 57 0.934216344 ubox
6 71 0.004007569 ubox
6 72 0.014573814 ubox
6 75 0.068110080 ubox
6 76 0.004299973 ubox
6 77 0.008036138 ubox
6 78 0.163703861 ubox
7 14 0.013631784 ubox
7 29 0.003205837 ubox
7 55 0.005779255 ubox
7 56 0.935028347 ubox
7 71 0.014380400 ubox
7 72 0.017012207 ubox
7 76 0.008561743 ubox
7 77 0.162470972 ubox
8 34 0.035969381 ubox
8 55 0.934650414 ubox
8 71 0.015563119 ubox
8 72 0.005028213 ubox
8 76 0.149073762 ubox
8 77 0.003432278 ubox
9 16 0.004234222 ubox
9 33 0.037284474 ubox
9 54 0.933805529 ubox
9 69 0.016980804 ubox
9 79 0.011207849 ubox
10 56 0.003287053 ubox
10 71 0.003978261 ubox
10 72 0.009221767 ubox
10 76 0.004297648 ubox
10 77 0.012797955 ubox
11 55 0.003376807 ubox
11 71 0.008215556 ubox
11 72 0.007253972 ubox
11 76 0.014628735 ubox
12 30 0.982132067 ubox
12 71 0.005107563 ubox
12 72 0.167378292 ubox
12 75 0.013723112 ubox
13 29 0.983099065 ubox
13 71 0.174145489 ubox
13 72 0.003184481 ubox
14 28 0.983248748 ubox
14 70 0.175095971 ubox
15 27 0.983291029 ubox
15 69 0.175107316 ubox
15 79 0.006171482 ubox
16 30 0.013255962 ubox
16 78 0.006826164 ubox
17 29 0.012619355 ubox
17 77 0.006468299 ubox
18 76 0.005259306 ubox
27 56 0.023995902 ubox
27 57 0.168667819 ubox
28 55 0.026193931 ubox
28 56 0.165570262 ubox
29 53 0.004852933 ubox
29 54 0.023848277 ubox
30 54 0.146636147 ubox
31 55 0.007643853 ubox
31 56 0.008234342 ubox
31 77 0.003519856 ubox
32 55 0.009138664 ubox
32 76 0.003920441 ubox
33 51 0.997043680 ubox
33 57 0.003899417 ubox
33 75 0.003808496 ubox
34 50 0.998264685 ubox
34 74 0.003593761 ubox
35 49 0.998488088 ubox
35 55 0.005470459 ubox
36 48 0.998481611 ubox
36 54 0.005904949 ubox
36 79 0.011832088 ubox
37 51 0.003569700 ubox
37 57 0.009553010 ubox
37 78 0.012598610 ubox
38 56 0.009474462 ubox
38 77 0.012285929 ubox
39 55 0.008565582 ubox
39 76 0.010226067 ubox
46 77 0.013492918 ubox
47 76 0.015496429 ubox
48 57 0.005255610 ubox
48 75 0.015876746 ubox
48 78 0.003283917 ubox
49 74 0.015463899 ubox
51 79 0.007380260 ubox
52 71 0.003227775 ubox
52 72 0.008672514 ubox
52 76 0.003447993 ubox
52 77 0.129161351 ubox
53 71 0.008857411 ubox
53 72 0.036943307 ubox
53 76 0.149569798 ubox
53 77 0.003483312 ubox
54 71 0.040539227 ubox
54 72 0.017637038 ubox
54 75 0.153938953 ubox
54 78 0.005202674 ubox
55 59 0.003409073 ubox
55 60 0.005286434 ubox
55 61 0.008592016 ubox
55 62 0.012241706 ubox
55 63 0.010439688 ubox
55 64 0.013641658 ubox
55 65 0.008120669 ubox
55 66 0.011800584 ubox
55 67 0.006142730 ubox
55 68 0.006772482 ubox
55 69 0.004349190 ubox
55 70 0.038926388 ubox
55 73 0.006383744 ubox
55 74 0.152592163 ubox
56 60 0.008246396 ubox
56 61 0.012307680 ubox
56 62 0.011300416 ubox
56 63 0.014433753 ubox
56 64 0.008872115 ubox
56 65 0.013389238 ubox
56 66 0.006568503 ubox
56 67 0.007009990 ubox
56 68 0.005221304 ubox
56 69 0.035485425 ubox
56 70 0.070576190 ubox
56 73 0.130948371 ubox
56 74 0.003796523 ubox
57 69 0.077174900 ubox
58 71 0.037959089 ubox
58 72 0.057651211 ubox
58 76 0.004507590 ubox
58 77 0.011234771 ubox
59 71 0.053053752 ubox
59 72 0.030365883 ubox
59 76 0.011685248 ubox
59 77 0.012625598 ubox
60 71 0.029895836 ubox
60 72 0.026898445 ubox
60 76 0.013005477 ubox
60 77 0.012882283 ubox
61 71 0.025462396 ubox
61 72 0.046696589 ubox
61 76 0.013169228 ubox
61 77 0.013259432 ubox
62 71 0.047939706 ubox
62 72 0.030795424 ubox
62 76 0.013508420 ubox
62 77 0.013810010 ubox
63 71 0.030213306 ubox
63 72 0.050656307 ubox
63 76 0.014135819 ubox
63 77 0.014653445 ubox
64 71 0.047867981 ubox
64 72 0.038198237 ubox
64 76 0.014874464 ubox
64 77 0.015852221 ubox
65 71 0.037237081 ubox
65 72 0.045297635 ubox
65 76 0.015879014 ubox
65 77 0.017590706 ubox
66 71 0.040252639 ubox
66 72 0.030295540 ubox
66 76 0.017205808 ubox
66 77 0.035556958 ubox
67 71 0.024663375 ubox
67 72 0.021220299 ubox
67 76 0.036977077 ubox
67 77 0.238733488 ubox
68 72 0.011059680 ubox
68 76 0.266391420 ubox
68 77 0.031013958 ubox
69 75 0.269783745 ubox
69 76 0.031466570 ubox
69 77 0.032832925 ubox
69 78 0.539851234 ubox
70 76 0.034477123 ubox
70 77 0.533106533 ubox
71 79 0.005344457 ubox
72 79 0.009246653 ubox
73 77 0.006452630 ubox
75 79 0.014027619 ubox
6 57 0.9500000 lbox
7 56 0.9500000 lbox
8 55 0.9500000 lbox
9 54 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
showpage
end
%%EOF
