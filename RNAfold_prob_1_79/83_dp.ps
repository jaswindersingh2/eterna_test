%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (83)
} def

/sequence { (\
GGAAAAACGUACCAUACGAAAGUAUGCCGAGGGAUCGAAAGAUCACUACGAAAGUAGCCGAGGGUACGGUUGUCUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.198640105 ubox
1 10 0.016743295 ubox
1 12 0.036933378 ubox
1 13 0.064090609 ubox
1 25 0.003454733 ubox
1 27 0.010896066 ubox
1 28 0.314303534 ubox
1 36 0.005370591 ubox
1 44 0.003532673 ubox
1 46 0.017212212 ubox
1 47 0.027666321 ubox
1 49 0.019346394 ubox
1 59 0.004033211 ubox
1 74 0.018913124 ubox
1 75 0.093018179 ubox
1 76 0.004635842 ubox
1 77 0.003218894 ubox
1 78 0.047499360 ubox
2 8 0.046460249 ubox
2 10 0.008049319 ubox
2 12 0.066102335 ubox
2 13 0.003992191 ubox
2 27 0.314318895 ubox
2 28 0.011946506 ubox
2 35 0.004898484 ubox
2 36 0.009909932 ubox
2 44 0.005862221 ubox
2 46 0.029051530 ubox
2 47 0.004991921 ubox
2 49 0.011891494 ubox
2 58 0.004044190 ubox
2 73 0.017571212 ubox
2 74 0.107223054 ubox
2 76 0.004662309 ubox
2 77 0.046646607 ubox
2 78 0.050050610 ubox
3 10 0.028048285 ubox
3 23 0.010991433 ubox
3 25 0.014313875 ubox
3 35 0.009697291 ubox
3 43 0.005384964 ubox
3 47 0.005270602 ubox
3 71 0.003617581 ubox
3 73 0.104787156 ubox
3 75 0.004868439 ubox
3 76 0.046079148 ubox
3 77 0.049844305 ubox
4 10 0.023695767 ubox
4 23 0.013408006 ubox
4 25 0.010795967 ubox
4 47 0.004825851 ubox
4 70 0.003425398 ubox
4 71 0.014342983 ubox
4 73 0.006964758 ubox
4 75 0.042381595 ubox
4 76 0.048732779 ubox
5 10 0.013833454 ubox
5 23 0.010112176 ubox
5 25 0.010008506 ubox
5 47 0.004615437 ubox
5 70 0.014072359 ubox
5 71 0.069502148 ubox
5 73 0.011510368 ubox
5 75 0.044233219 ubox
6 10 0.008469376 ubox
6 23 0.007475814 ubox
6 47 0.004631564 ubox
6 70 0.047725165 ubox
6 71 0.041593185 ubox
6 73 0.005127595 ubox
7 23 0.025885381 ubox
7 47 0.004427055 ubox
7 70 0.041275687 ubox
7 71 0.005280764 ubox
7 73 0.032013443 ubox
8 18 0.075758088 ubox
8 22 0.025995695 ubox
8 26 0.125849379 ubox
8 29 0.709320661 ubox
8 31 0.160980349 ubox
8 32 0.133039162 ubox
8 33 0.003502103 ubox
8 37 0.003961703 ubox
8 50 0.008481707 ubox
8 68 0.123598610 ubox
8 69 0.029441774 ubox
8 72 0.031951400 ubox
8 79 0.011588299 ubox
9 13 0.004020753 ubox
9 17 0.077219435 ubox
9 25 0.126948687 ubox
9 27 0.073433420 ubox
9 28 0.723634460 ubox
9 36 0.004011935 ubox
9 46 0.023176527 ubox
9 49 0.031820363 ubox
9 67 0.127488285 ubox
9 71 0.026242267 ubox
9 78 0.007296973 ubox
10 16 0.076695058 ubox
10 19 0.005218935 ubox
10 20 0.004336188 ubox
10 24 0.127133359 ubox
10 26 0.049648930 ubox
10 29 0.123080730 ubox
10 30 0.118001361 ubox
10 31 0.008747171 ubox
10 32 0.006491498 ubox
10 45 0.022079934 ubox
10 48 0.031576303 ubox
10 66 0.127512105 ubox
11 15 0.067991726 ubox
11 23 0.127049006 ubox
11 25 0.033804395 ubox
11 47 0.024103590 ubox
11 65 0.127450080 ubox
11 70 0.025936970 ubox
12 18 0.010008279 ubox
12 22 0.125538182 ubox
12 26 0.050217516 ubox
12 29 0.082375033 ubox
12 31 0.022042849 ubox
12 32 0.030652440 ubox
12 64 0.127101276 ubox
12 68 0.004824038 ubox
12 69 0.026454881 ubox
12 79 0.006748435 ubox
13 18 0.027196711 ubox
13 22 0.017975155 ubox
13 26 0.976720751 ubox
13 29 0.009454104 ubox
13 31 0.027200954 ubox
13 62 0.003655540 ubox
13 63 0.059995376 ubox
13 68 0.025923184 ubox
14 23 0.004054617 ubox
14 25 0.985257041 ubox
15 19 0.017229184 ubox
15 20 0.013832340 ubox
15 21 0.010189968 ubox
15 22 0.004213671 ubox
15 24 0.986633737 ubox
15 30 0.004182280 ubox
15 61 0.013219480 ubox
15 62 0.007452611 ubox
15 66 0.011514341 ubox
16 23 0.986941730 ubox
16 65 0.011595209 ubox
16 73 0.005006931 ubox
17 22 0.986681189 ubox
17 26 0.004300377 ubox
17 29 0.012150471 ubox
17 60 0.024134569 ubox
17 62 0.003854384 ubox
17 64 0.011578621 ubox
17 72 0.005347651 ubox
17 79 0.021049361 ubox
18 28 0.012196999 ubox
18 58 0.003461693 ubox
18 59 0.024205688 ubox
18 71 0.005365136 ubox
18 78 0.022295972 ubox
19 70 0.005339298 ubox
19 77 0.022298284 ubox
20 76 0.022273500 ubox
21 47 0.004618878 ubox
21 75 0.022279380 ubox
22 27 0.003752703 ubox
22 28 0.004085324 ubox
22 46 0.004791196 ubox
22 58 0.010224331 ubox
22 59 0.006255479 ubox
22 67 0.012905762 ubox
22 74 0.022248352 ubox
23 45 0.004726758 ubox
23 56 0.019548075 ubox
23 57 0.008950729 ubox
23 66 0.012918942 ubox
23 72 0.005375510 ubox
24 55 0.020103405 ubox
24 65 0.012859752 ubox
24 71 0.004996665 ubox
24 73 0.004511188 ubox
25 53 0.007521202 ubox
25 54 0.019862371 ubox
25 56 0.012161700 ubox
25 64 0.011893089 ubox
25 66 0.007709120 ubox
25 72 0.004025179 ubox
26 49 0.004668266 ubox
26 55 0.012829168 ubox
26 58 0.004091128 ubox
26 65 0.012864411 ubox
26 70 0.021292922 ubox
27 31 0.008974765 ubox
27 32 0.038497669 ubox
27 33 0.008326969 ubox
27 50 0.004510041 ubox
27 54 0.012887137 ubox
27 57 0.004087076 ubox
27 62 0.008014952 ubox
27 63 0.112176797 ubox
27 64 0.013278980 ubox
27 69 0.021639544 ubox
28 32 0.012218695 ubox
28 33 0.004011271 ubox
28 37 0.037373545 ubox
28 50 0.055494877 ubox
28 60 0.010975714 ubox
28 62 0.114836994 ubox
28 63 0.013365853 ubox
28 68 0.021619691 ubox
28 79 0.006632991 ubox
29 36 0.037992986 ubox
29 44 0.003617175 ubox
29 46 0.033873546 ubox
29 47 0.018395151 ubox
29 49 0.128732311 ubox
29 59 0.010836347 ubox
29 67 0.020562115 ubox
29 78 0.005912180 ubox
30 35 0.037155563 ubox
30 43 0.003378440 ubox
30 47 0.659401253 ubox
30 65 0.003422170 ubox
30 77 0.005694605 ubox
31 44 0.005847636 ubox
31 46 0.673844069 ubox
31 47 0.581601362 ubox
31 49 0.008453596 ubox
31 58 0.005836568 ubox
31 59 0.116327432 ubox
31 76 0.005360066 ubox
32 43 0.004062441 ubox
32 44 0.040644641 ubox
32 46 0.606663098 ubox
32 47 0.017486843 ubox
32 49 0.006981467 ubox
32 58 0.116026492 ubox
32 59 0.004270515 ubox
32 75 0.005231895 ubox
33 43 0.021397050 ubox
33 44 0.981322324 ubox
33 46 0.012156246 ubox
33 74 0.005044422 ubox
34 43 0.998261132 ubox
34 73 0.004807458 ubox
35 42 0.998645282 ubox
35 72 0.003367296 ubox
36 41 0.998447524 ubox
36 79 0.007991194 ubox
37 44 0.007879351 ubox
37 78 0.009141069 ubox
38 43 0.007237694 ubox
38 77 0.009148724 ubox
39 76 0.009142978 ubox
40 47 0.008509306 ubox
40 75 0.009150609 ubox
41 46 0.008767941 ubox
41 74 0.009155726 ubox
42 73 0.009038423 ubox
43 61 0.007783880 ubox
43 72 0.007649529 ubox
44 60 0.008338331 ubox
44 72 0.003751489 ubox
45 55 0.006043460 ubox
45 70 0.004274800 ubox
45 71 0.003351850 ubox
46 54 0.006396128 ubox
46 57 0.126866039 ubox
46 62 0.005539997 ubox
46 69 0.004178357 ubox
46 79 0.003916806 ubox
47 53 0.006253235 ubox
47 56 0.127943126 ubox
47 61 0.005528575 ubox
47 68 0.004069236 ubox
48 55 0.128251218 ubox
48 73 0.005093668 ubox
49 54 0.128253432 ubox
49 60 0.008088272 ubox
49 72 0.005615766 ubox
49 79 0.935022609 ubox
50 59 0.008180015 ubox
50 71 0.005674332 ubox
50 78 0.989727635 ubox
51 70 0.005680044 ubox
51 76 0.003455328 ubox
51 77 0.990147814 ubox
52 75 0.003544306 ubox
52 76 0.989411985 ubox
53 75 0.990161991 ubox
54 67 0.015194200 ubox
54 73 0.015036606 ubox
54 74 0.990319694 ubox
55 66 0.015270677 ubox
55 72 0.965792356 ubox
56 65 0.014759219 ubox
56 71 0.986070958 ubox
56 73 0.011506831 ubox
57 65 0.011056065 ubox
57 70 0.989565561 ubox
57 71 0.040738888 ubox
58 62 0.003949832 ubox
58 63 0.015987265 ubox
58 64 0.016371603 ubox
58 69 0.991111562 ubox
59 63 0.016348174 ubox
59 64 0.004495239 ubox
59 68 0.991084379 ubox
59 79 0.007239295 ubox
60 65 0.004271474 ubox
60 67 0.974443746 ubox
60 78 0.008837686 ubox
61 65 0.085520371 ubox
61 77 0.008832814 ubox
62 67 0.038078648 ubox
62 76 0.008800572 ubox
63 67 0.004248674 ubox
63 75 0.008822768 ubox
64 74 0.008835317 ubox
66 73 0.008302607 ubox
67 72 0.008388971 ubox
69 74 0.003414171 ubox
69 78 0.003837661 ubox
72 78 0.004353584 ubox
8 29 0.9500000 lbox
9 28 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
30 47 0.9500000 lbox
31 46 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
49 79 0.9500000 lbox
50 78 0.9500000 lbox
51 77 0.9500000 lbox
52 76 0.9500000 lbox
53 75 0.9500000 lbox
54 74 0.9500000 lbox
55 72 0.9500000 lbox
56 71 0.9500000 lbox
57 70 0.9500000 lbox
58 69 0.9500000 lbox
59 68 0.9500000 lbox
60 67 0.9500000 lbox
showpage
end
%%EOF
