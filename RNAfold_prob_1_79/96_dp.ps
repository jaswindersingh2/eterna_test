%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (96)
} def

/sequence { (\
GGAAAAACGUGGCAUACGAAAGUAUGGCUGGCGUACGAAAGUACAGAUGGAAACAUCGCUGGCCCACGCCGUACCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.238644355 ubox
1 10 0.021011220 ubox
1 13 0.072310972 ubox
1 15 0.008196484 ubox
1 17 0.021446847 ubox
1 65 0.003586032 ubox
1 69 0.005729045 ubox
1 70 0.221299008 ubox
1 72 0.004957112 ubox
1 74 0.033695473 ubox
1 75 0.600292302 ubox
1 76 0.031452127 ubox
1 77 0.003819191 ubox
1 78 0.090141198 ubox
2 8 0.055680977 ubox
2 10 0.007937724 ubox
2 13 0.044160940 ubox
2 15 0.003901996 ubox
2 17 0.006805868 ubox
2 64 0.003567951 ubox
2 69 0.221406743 ubox
2 70 0.010242965 ubox
2 72 0.010343291 ubox
2 74 0.600459859 ubox
2 75 0.036042148 ubox
2 76 0.004796059 ubox
2 77 0.089214427 ubox
2 78 0.113334680 ubox
3 10 0.019519032 ubox
3 15 0.006471172 ubox
3 72 0.148222912 ubox
3 76 0.085826800 ubox
3 77 0.112859038 ubox
4 10 0.022110725 ubox
4 15 0.006431890 ubox
4 72 0.307388802 ubox
4 76 0.103753568 ubox
4 77 0.010132228 ubox
5 10 0.037418228 ubox
5 15 0.007104392 ubox
5 72 0.032533705 ubox
5 76 0.012120624 ubox
5 77 0.005604888 ubox
6 10 0.010091535 ubox
6 15 0.013687586 ubox
6 34 0.006615695 ubox
6 72 0.042456604 ubox
6 76 0.006345799 ubox
6 77 0.008378421 ubox
7 15 0.008889190 ubox
7 34 0.141195326 ubox
7 72 0.057574159 ubox
7 76 0.009458162 ubox
8 12 0.019121114 ubox
8 18 0.066298882 ubox
8 30 0.015860914 ubox
8 31 0.010889236 ubox
8 33 0.146550895 ubox
8 68 0.696659904 ubox
8 71 0.055633378 ubox
8 79 0.047278471 ubox
9 13 0.028259215 ubox
9 15 0.023610993 ubox
9 17 0.114552054 ubox
9 28 0.004343355 ubox
9 29 0.015254911 ubox
9 32 0.147049627 ubox
9 67 0.703089395 ubox
9 69 0.018963653 ubox
9 70 0.033726589 ubox
9 72 0.038011340 ubox
9 74 0.021423226 ubox
9 75 0.008746295 ubox
9 76 0.003656552 ubox
9 77 0.005312304 ubox
9 78 0.049783459 ubox
10 14 0.022660256 ubox
10 16 0.114563777 ubox
10 18 0.009052266 ubox
10 19 0.003385052 ubox
10 27 0.004174150 ubox
10 30 0.048812337 ubox
10 31 0.134688998 ubox
10 66 0.703267634 ubox
10 68 0.024973629 ubox
10 71 0.093626925 ubox
10 73 0.018360333 ubox
10 79 0.004224471 ubox
11 15 0.095623382 ubox
11 17 0.052186959 ubox
11 28 0.115605959 ubox
11 29 0.070112646 ubox
11 64 0.005488025 ubox
11 65 0.703337743 ubox
11 67 0.024785601 ubox
11 69 0.010100969 ubox
11 70 0.116378799 ubox
11 72 0.003910376 ubox
11 75 0.048900989 ubox
11 76 0.031910789 ubox
11 77 0.003412591 ubox
11 78 0.007015464 ubox
12 17 0.019771363 ubox
12 23 0.011496991 ubox
12 28 0.087174641 ubox
12 29 0.028575271 ubox
12 63 0.004939413 ubox
12 64 0.691499995 ubox
12 65 0.008326608 ubox
12 67 0.009053391 ubox
12 69 0.117463284 ubox
12 74 0.048797278 ubox
12 75 0.032836895 ubox
12 76 0.003949142 ubox
12 77 0.006268275 ubox
13 18 0.004607181 ubox
13 22 0.011805127 ubox
13 26 0.709995862 ubox
13 27 0.063823478 ubox
13 68 0.117311432 ubox
13 79 0.003810727 ubox
14 23 0.003178004 ubox
14 25 0.727454755 ubox
15 22 0.003216617 ubox
15 24 0.729556652 ubox
15 66 0.003304719 ubox
15 73 0.056473710 ubox
15 79 0.003558761 ubox
16 23 0.729991778 ubox
16 72 0.060635880 ubox
17 22 0.729818902 ubox
17 71 0.060788202 ubox
17 79 0.634923076 ubox
18 70 0.060360393 ubox
18 77 0.003550878 ubox
18 78 0.675782970 ubox
19 76 0.005447719 ubox
19 77 0.675043155 ubox
20 76 0.647089971 ubox
20 77 0.036136975 ubox
21 76 0.046954775 ubox
22 65 0.003184740 ubox
22 67 0.055608770 ubox
22 69 0.023023132 ubox
22 74 0.677477609 ubox
22 75 0.039039232 ubox
23 66 0.054114662 ubox
23 68 0.022663404 ubox
23 73 0.679734415 ubox
24 72 0.679745946 ubox
25 66 0.022052104 ubox
25 71 0.679403509 ubox
26 64 0.163259009 ubox
26 65 0.022895930 ubox
26 70 0.679165848 ubox
27 63 0.715335364 ubox
27 64 0.016772213 ubox
27 69 0.679111236 ubox
27 72 0.006532123 ubox
28 62 0.717199353 ubox
28 68 0.678773133 ubox
28 71 0.006672567 ubox
29 61 0.714622463 ubox
29 66 0.413835931 ubox
29 68 0.004217437 ubox
29 71 0.031008114 ubox
30 60 0.714779377 ubox
30 63 0.004611853 ubox
30 64 0.579111623 ubox
30 65 0.352941679 ubox
30 67 0.008365364 ubox
30 70 0.043832885 ubox
30 75 0.004080224 ubox
31 59 0.717721577 ubox
31 63 0.620092100 ubox
31 64 0.274317443 ubox
31 65 0.004493851 ubox
31 69 0.043931344 ubox
31 74 0.004071858 ubox
32 58 0.717066493 ubox
32 61 0.039554887 ubox
32 62 0.657081940 ubox
32 68 0.043939725 ubox
33 44 0.983453622 ubox
33 57 0.014697762 ubox
33 59 0.007183462 ubox
33 60 0.003897182 ubox
33 63 0.053250964 ubox
33 67 0.043868277 ubox
34 43 0.985075626 ubox
34 58 0.006593223 ubox
34 61 0.012365014 ubox
34 62 0.050390651 ubox
34 66 0.042935056 ubox
35 42 0.985507677 ubox
35 60 0.010796195 ubox
36 41 0.985272407 ubox
36 58 0.018035413 ubox
36 61 0.027211357 ubox
36 62 0.004789599 ubox
36 79 0.140136626 ubox
37 44 0.005824850 ubox
37 57 0.017140596 ubox
37 60 0.015874648 ubox
37 63 0.046795823 ubox
37 64 0.003197344 ubox
37 78 0.147240468 ubox
38 56 0.016198229 ubox
38 60 0.003294811 ubox
38 77 0.146991786 ubox
39 76 0.140876062 ubox
39 77 0.006581879 ubox
40 60 0.061346190 ubox
40 76 0.009098828 ubox
41 48 0.003710043 ubox
41 54 0.008991137 ubox
41 59 0.064236533 ubox
41 63 0.011534849 ubox
41 74 0.146846578 ubox
41 75 0.007976061 ubox
42 47 0.003609283 ubox
42 52 0.003728283 ubox
42 53 0.008719210 ubox
42 58 0.063536495 ubox
42 61 0.012233114 ubox
42 62 0.011372682 ubox
42 73 0.147280102 ubox
43 60 0.012340389 ubox
43 72 0.147167976 ubox
44 49 0.007827584 ubox
44 50 0.005891318 ubox
44 58 0.014681737 ubox
44 61 0.030922434 ubox
44 71 0.146658057 ubox
45 60 0.040771309 ubox
46 56 0.003286941 ubox
46 57 0.997225220 ubox
46 59 0.029844642 ubox
47 56 0.998750054 ubox
47 60 0.004450391 ubox
48 55 0.998843150 ubox
48 58 0.013496483 ubox
48 61 0.004492305 ubox
48 66 0.005183627 ubox
49 54 0.998650117 ubox
49 56 0.003260299 ubox
49 57 0.014555415 ubox
49 59 0.006071509 ubox
49 60 0.008235644 ubox
49 65 0.005377985 ubox
50 54 0.007869919 ubox
50 56 0.010636893 ubox
50 57 0.018203802 ubox
50 59 0.008516811 ubox
50 64 0.005367077 ubox
51 56 0.016732434 ubox
54 61 0.010202694 ubox
55 60 0.008897918 ubox
57 61 0.003715363 ubox
58 63 0.019580549 ubox
58 67 0.003238344 ubox
58 69 0.013252044 ubox
58 72 0.012241472 ubox
59 68 0.013222366 ubox
59 71 0.012770910 ubox
60 66 0.005882254 ubox
60 68 0.003308020 ubox
60 71 0.019195435 ubox
61 65 0.006042131 ubox
61 67 0.011960093 ubox
61 70 0.148767976 ubox
62 67 0.004112943 ubox
62 69 0.148925156 ubox
63 68 0.148480629 ubox
64 68 0.003350504 ubox
68 74 0.003319711 ubox
68 75 0.003887288 ubox
69 79 0.005945376 ubox
70 79 0.099944854 ubox
71 75 0.013883745 ubox
71 76 0.004953262 ubox
71 77 0.008139250 ubox
71 78 0.111699159 ubox
72 79 0.004187333 ubox
73 77 0.007116296 ubox
74 79 0.013183919 ubox
75 79 0.005541336 ubox
1 75 0.9500000 lbox
2 74 0.9500000 lbox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
29 61 0.9500000 lbox
30 60 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
