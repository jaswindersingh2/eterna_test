%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1056)
} def

/sequence { (\
GGAAAAGAAUCGAGCUAAAACCAAAAAAGAGAUGUUGGAAACAAGAUCUCAGGAGCUGGAUUCAAAAAGAGCUAGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.008353685 ubox
1 11 0.051538536 ubox
1 15 0.029853400 ubox
1 16 0.039406123 ubox
1 21 0.027825729 ubox
1 22 0.282758074 ubox
1 63 0.005049178 ubox
1 72 0.029116298 ubox
1 73 0.040305682 ubox
1 78 0.077286988 ubox
2 10 0.038788576 ubox
2 11 0.191567975 ubox
2 15 0.041560171 ubox
2 16 0.004657995 ubox
2 21 0.282211000 ubox
2 22 0.014738145 ubox
2 62 0.004301479 ubox
2 63 0.008682577 ubox
2 72 0.042647846 ubox
2 77 0.076868212 ubox
2 78 0.103247272 ubox
3 10 0.181290412 ubox
3 16 0.007875766 ubox
3 61 0.003264357 ubox
3 62 0.008217900 ubox
3 76 0.075879934 ubox
3 77 0.103071050 ubox
4 10 0.009689072 ubox
4 16 0.006807843 ubox
4 61 0.005302296 ubox
4 73 0.003175014 ubox
4 76 0.100005391 ubox
4 77 0.004231067 ubox
5 10 0.008570831 ubox
5 16 0.011885774 ubox
5 73 0.005010136 ubox
5 76 0.004919140 ubox
5 77 0.005657041 ubox
6 10 0.005802087 ubox
6 16 0.210277292 ubox
6 73 0.026473109 ubox
6 76 0.006721152 ubox
7 11 0.026179068 ubox
7 15 0.216625687 ubox
7 16 0.039830891 ubox
7 21 0.009933633 ubox
7 22 0.019155224 ubox
7 62 0.003796191 ubox
7 63 0.816993174 ubox
7 72 0.017587881 ubox
7 78 0.021554631 ubox
8 16 0.029208291 ubox
8 62 0.817924256 ubox
8 77 0.021515119 ubox
9 16 0.015439177 ubox
9 61 0.817767054 ubox
9 76 0.021171809 ubox
10 14 0.011280484 ubox
10 17 0.007805192 ubox
10 18 0.005691186 ubox
10 19 0.009282219 ubox
10 20 0.004162147 ubox
10 23 0.007671264 ubox
10 24 0.006649656 ubox
10 25 0.003663140 ubox
10 60 0.818396775 ubox
10 70 0.003610194 ubox
10 75 0.020025198 ubox
11 52 0.004532972 ubox
11 58 0.004181173 ubox
11 59 0.818386615 ubox
11 69 0.003623989 ubox
11 75 0.006178942 ubox
11 79 0.062112576 ubox
12 16 0.005436366 ubox
12 21 0.033507597 ubox
12 22 0.045284148 ubox
12 78 0.068542620 ubox
13 57 0.815966255 ubox
13 73 0.020961000 ubox
13 77 0.068441240 ubox
14 21 0.046971064 ubox
14 22 0.022498241 ubox
14 56 0.818625250 ubox
14 72 0.021272933 ubox
14 76 0.068225037 ubox
15 52 0.026116774 ubox
15 55 0.818587169 ubox
15 71 0.021269319 ubox
15 75 0.068230060 ubox
15 79 0.008283892 ubox
16 20 0.009199547 ubox
16 23 0.015424299 ubox
16 24 0.011150273 ubox
16 25 0.016725490 ubox
16 26 0.008058325 ubox
16 27 0.007431175 ubox
16 28 0.007419250 ubox
16 51 0.026695821 ubox
16 52 0.004958301 ubox
16 53 0.027227058 ubox
16 54 0.809548556 ubox
16 70 0.020620221 ubox
16 74 0.066506748 ubox
17 62 0.003208478 ubox
17 73 0.047764514 ubox
18 61 0.003315002 ubox
18 62 0.013425136 ubox
19 61 0.013928804 ubox
19 62 0.007280451 ubox
20 61 0.007942961 ubox
21 29 0.004066686 ubox
21 52 0.028705971 ubox
21 53 0.552211905 ubox
21 59 0.029252941 ubox
21 79 0.008425329 ubox
22 29 0.013761337 ubox
22 52 0.551736180 ubox
22 53 0.072337202 ubox
22 58 0.029343204 ubox
22 79 0.009972469 ubox
23 57 0.028288411 ubox
25 49 0.006932366 ubox
28 49 0.005588750 ubox
29 48 0.005562198 ubox
29 49 0.003750972 ubox
29 50 0.997775614 ubox
30 47 0.005333498 ubox
30 49 0.999605220 ubox
31 48 0.999962419 ubox
32 47 0.999705271 ubox
33 43 0.006163875 ubox
33 45 0.003208702 ubox
33 46 0.992717181 ubox
34 42 0.007374325 ubox
35 41 0.007267363 ubox
35 44 0.993702070 ubox
35 45 0.005206569 ubox
36 40 0.006059439 ubox
36 43 0.999180607 ubox
36 44 0.005025605 ubox
37 42 0.999136254 ubox
38 42 0.007973793 ubox
52 56 0.003190638 ubox
52 63 0.018628909 ubox
52 73 0.008695123 ubox
52 78 0.028649192 ubox
53 62 0.018689206 ubox
53 63 0.007743945 ubox
53 72 0.011788862 ubox
53 77 0.017940349 ubox
53 78 0.568180908 ubox
54 61 0.018425770 ubox
54 62 0.007678218 ubox
54 73 0.045429349 ubox
54 76 0.014911523 ubox
54 77 0.568912067 ubox
55 61 0.006399227 ubox
55 72 0.059562038 ubox
55 76 0.569325573 ubox
56 69 0.012690738 ubox
56 71 0.059617272 ubox
56 75 0.569814465 ubox
57 64 0.005829084 ubox
57 68 0.012604133 ubox
57 70 0.058992612 ubox
57 74 0.569552241 ubox
58 63 0.006811288 ubox
58 72 0.004181877 ubox
58 73 0.569508391 ubox
59 72 0.569496407 ubox
59 73 0.003219315 ubox
61 66 0.007138811 ubox
61 67 0.006268685 ubox
61 68 0.012845151 ubox
61 69 0.008280734 ubox
61 70 0.073130936 ubox
61 71 0.555025052 ubox
62 66 0.006142854 ubox
62 67 0.012346962 ubox
62 68 0.008477825 ubox
62 69 0.073107421 ubox
62 70 0.561499288 ubox
62 71 0.004299372 ubox
63 69 0.561956991 ubox
63 71 0.008527988 ubox
64 73 0.016713788 ubox
64 76 0.005078999 ubox
64 77 0.012257235 ubox
65 73 0.013112724 ubox
65 76 0.012618133 ubox
65 77 0.013837065 ubox
66 73 0.021396220 ubox
66 76 0.013885795 ubox
66 77 0.025686552 ubox
67 73 0.016932660 ubox
67 76 0.027715764 ubox
67 77 0.032394481 ubox
68 73 0.018878399 ubox
68 76 0.035306756 ubox
68 77 0.025415982 ubox
69 73 0.010145811 ubox
69 76 0.024927909 ubox
69 77 0.056610959 ubox
69 78 0.407576413 ubox
70 76 0.061538836 ubox
70 77 0.399058139 ubox
71 76 0.282494507 ubox
71 77 0.010120482 ubox
71 78 0.040209156 ubox
72 79 0.031523259 ubox
73 79 0.006229513 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
