%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (694)
} def

/sequence { (\
GGAAAGGGCGGCGAAACACCACCCAAGGCACCACUCAAUGCGGCGCCAGCCACACCUAACGAUGCGGCAUCGACAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 23 0.008685998 ubox
1 24 0.035671413 ubox
1 29 0.014213397 ubox
1 31 0.003557014 ubox
1 32 0.019673677 ubox
1 47 0.004795278 ubox
1 50 0.004045533 ubox
1 51 0.113005487 ubox
1 53 0.012246169 ubox
1 55 0.006260857 ubox
1 56 0.085147371 ubox
1 57 0.019317531 ubox
1 60 0.009369739 ubox
1 68 0.004131634 ubox
1 70 0.005478016 ubox
1 71 0.110755758 ubox
1 74 0.094495851 ubox
1 76 0.005853714 ubox
1 77 0.009058253 ubox
1 78 0.344214721 ubox
2 22 0.008726370 ubox
2 23 0.035547480 ubox
2 24 0.004172201 ubox
2 29 0.007502206 ubox
2 31 0.019634983 ubox
2 36 0.004887423 ubox
2 46 0.004289365 ubox
2 50 0.112727774 ubox
2 51 0.009388950 ubox
2 53 0.006082207 ubox
2 55 0.084995879 ubox
2 56 0.020388684 ubox
2 60 0.007588006 ubox
2 70 0.071629667 ubox
2 71 0.220456703 ubox
2 74 0.047885518 ubox
2 76 0.009120872 ubox
2 77 0.333653571 ubox
2 78 0.496562616 ubox
3 35 0.004709226 ubox
3 70 0.206493715 ubox
3 76 0.308822824 ubox
3 77 0.490779634 ubox
4 57 0.003622305 ubox
4 70 0.016535345 ubox
4 76 0.426931158 ubox
4 77 0.032110498 ubox
5 57 0.043305481 ubox
5 70 0.015501167 ubox
5 76 0.035879199 ubox
5 77 0.011493318 ubox
6 20 0.015530363 ubox
6 22 0.013616546 ubox
6 23 0.015526540 ubox
6 24 0.994871549 ubox
6 32 0.005504620 ubox
6 36 0.005112965 ubox
6 51 0.008885318 ubox
6 53 0.024377407 ubox
6 56 0.044909478 ubox
6 57 0.006953926 ubox
6 71 0.006140013 ubox
6 74 0.025825294 ubox
6 78 0.005956048 ubox
7 19 0.015458858 ubox
7 20 0.039421555 ubox
7 22 0.015448393 ubox
7 23 0.996196756 ubox
7 24 0.011503627 ubox
7 31 0.005502166 ubox
7 35 0.005136927 ubox
7 47 0.008987362 ubox
7 50 0.008604339 ubox
7 51 0.053698298 ubox
7 55 0.044787221 ubox
7 56 0.007233102 ubox
7 74 0.004211004 ubox
7 77 0.004846697 ubox
8 17 0.005262548 ubox
8 19 0.039520278 ubox
8 20 0.004646873 ubox
8 22 0.996088454 ubox
8 23 0.011016945 ubox
8 24 0.006303535 ubox
8 29 0.005462648 ubox
8 34 0.005151030 ubox
8 46 0.009005383 ubox
8 50 0.053832095 ubox
8 53 0.042162586 ubox
8 55 0.007220696 ubox
8 76 0.004638270 ubox
9 28 0.005453597 ubox
9 45 0.009011703 ubox
9 49 0.053826122 ubox
9 72 0.005417580 ubox
10 17 0.041827983 ubox
10 19 0.027648739 ubox
10 20 0.995429502 ubox
10 22 0.004560819 ubox
10 23 0.031043637 ubox
10 24 0.015486372 ubox
10 32 0.005143371 ubox
10 44 0.008976296 ubox
10 47 0.039454961 ubox
10 51 0.045172312 ubox
10 71 0.004905128 ubox
10 74 0.004236591 ubox
11 17 0.011413253 ubox
11 19 0.994301534 ubox
11 20 0.021489434 ubox
11 22 0.031183945 ubox
11 23 0.015367301 ubox
11 31 0.005128179 ubox
11 46 0.039600255 ubox
11 50 0.045190858 ubox
11 70 0.003482740 ubox
12 42 0.008856194 ubox
12 45 0.039598254 ubox
12 49 0.045123743 ubox
12 72 0.005561584 ubox
13 17 0.674162652 ubox
13 19 0.018750697 ubox
13 20 0.040143770 ubox
13 22 0.018029260 ubox
13 23 0.008200662 ubox
13 24 0.010437396 ubox
13 29 0.004903050 ubox
13 41 0.008589944 ubox
13 44 0.039242807 ubox
13 71 0.005674905 ubox
14 70 0.005302259 ubox
17 40 0.008228678 ubox
17 43 0.006168330 ubox
17 45 0.003511267 ubox
18 39 0.008016005 ubox
19 28 0.025818003 ubox
19 43 0.016101369 ubox
20 27 0.026171468 ubox
20 40 0.007084940 ubox
20 42 0.016097221 ubox
21 39 0.006887412 ubox
22 28 0.007656542 ubox
22 40 0.012457584 ubox
22 43 0.013162501 ubox
23 27 0.007746494 ubox
23 42 0.013158310 ubox
23 43 0.010286561 ubox
24 40 0.011350808 ubox
24 42 0.010297022 ubox
25 39 0.011185336 ubox
25 70 0.005069614 ubox
25 76 0.004293294 ubox
25 77 0.010006433 ubox
26 35 0.035564969 ubox
26 57 0.027940474 ubox
26 70 0.005530790 ubox
26 76 0.009860949 ubox
26 77 0.005383774 ubox
27 32 0.006378801 ubox
27 34 0.037458832 ubox
27 35 0.009683523 ubox
27 36 0.011744136 ubox
27 47 0.994163258 ubox
27 51 0.004978574 ubox
27 56 0.028965663 ubox
27 74 0.003625379 ubox
27 78 0.003398490 ubox
28 32 0.003956484 ubox
28 34 0.010537202 ubox
28 35 0.009012332 ubox
28 36 0.003554747 ubox
28 41 0.060319055 ubox
28 44 0.007367130 ubox
28 46 0.995241885 ubox
28 50 0.004930902 ubox
28 55 0.028598156 ubox
28 65 0.009598977 ubox
28 68 0.005542728 ubox
29 40 0.060516581 ubox
29 43 0.007775036 ubox
29 45 0.995053395 ubox
29 49 0.004879869 ubox
29 64 0.009619925 ubox
29 67 0.005554800 ubox
30 39 0.058685987 ubox
30 63 0.009358719 ubox
31 42 0.012206134 ubox
31 43 0.995321775 ubox
32 40 0.015442114 ubox
32 42 0.995155940 ubox
32 43 0.003362189 ubox
32 61 0.005942338 ubox
32 64 0.005474135 ubox
33 39 0.017031286 ubox
33 63 0.005383542 ubox
34 40 0.964875441 ubox
34 42 0.004395150 ubox
34 43 0.003671310 ubox
34 79 0.003907877 ubox
35 40 0.012111553 ubox
35 42 0.003412392 ubox
35 62 0.003846693 ubox
35 73 0.006752745 ubox
35 79 0.004517688 ubox
36 40 0.025166292 ubox
36 61 0.003869758 ubox
36 72 0.007471589 ubox
36 79 0.008560441 ubox
37 77 0.035863040 ubox
38 70 0.008060553 ubox
38 76 0.040424787 ubox
39 54 0.045545418 ubox
39 69 0.008290134 ubox
39 75 0.041195290 ubox
40 53 0.049735603 ubox
40 68 0.008329650 ubox
40 74 0.041433156 ubox
41 67 0.008323521 ubox
41 72 0.041630780 ubox
42 51 0.076468925 ubox
42 71 0.041752655 ubox
43 50 0.076525686 ubox
43 65 0.007854115 ubox
43 70 0.041328989 ubox
44 49 0.076496837 ubox
44 64 0.007851646 ubox
44 72 0.003913206 ubox
45 63 0.007180829 ubox
45 68 0.041793697 ubox
45 71 0.003976767 ubox
46 61 0.004061077 ubox
46 67 0.041797092 ubox
47 61 0.004920015 ubox
47 66 0.041641256 ubox
47 72 0.006757249 ubox
48 57 0.042458121 ubox
48 70 0.075885804 ubox
48 76 0.003569079 ubox
49 53 0.012862022 ubox
49 55 0.014903223 ubox
49 56 0.044098926 ubox
49 57 0.003680783 ubox
49 60 0.003885663 ubox
49 65 0.041028659 ubox
49 68 0.965612314 ubox
49 71 0.003871260 ubox
50 64 0.040057703 ubox
50 67 0.966648406 ubox
51 61 0.006988474 ubox
51 64 0.010640407 ubox
51 66 0.966412955 ubox
52 57 0.005170486 ubox
52 63 0.013780923 ubox
53 61 0.030725485 ubox
53 64 0.961807477 ubox
53 79 0.010271303 ubox
54 63 0.943362534 ubox
54 77 0.003560208 ubox
55 61 0.328927444 ubox
55 64 0.023691103 ubox
55 67 0.007610587 ubox
55 79 0.005632046 ubox
56 61 0.633479273 ubox
56 64 0.013130344 ubox
56 66 0.007649923 ubox
56 79 0.004782418 ubox
57 61 0.021551936 ubox
57 62 0.039367815 ubox
57 64 0.005055006 ubox
57 73 0.006849113 ubox
57 75 0.019273050 ubox
58 63 0.006623132 ubox
58 76 0.007019097 ubox
58 77 0.008144168 ubox
59 76 0.009026914 ubox
59 77 0.003233694 ubox
60 66 0.004691816 ubox
60 72 0.211675518 ubox
60 79 0.102479931 ubox
61 65 0.004743901 ubox
61 71 0.215920576 ubox
61 77 0.065991428 ubox
61 78 0.106896028 ubox
62 70 0.215859500 ubox
62 76 0.101303210 ubox
62 77 0.078283721 ubox
63 69 0.215574029 ubox
63 75 0.125222797 ubox
64 68 0.212175331 ubox
64 74 0.126952700 ubox
65 72 0.128129446 ubox
66 71 0.126425837 ubox
66 74 0.005155105 ubox
67 71 0.012115166 ubox
67 74 0.003300230 ubox
68 72 0.003251543 ubox
69 76 0.029276174 ubox
69 77 0.014671780 ubox
70 75 0.031481544 ubox
70 79 0.008527619 ubox
71 79 0.318980203 ubox
72 76 0.008150597 ubox
72 77 0.012481780 ubox
72 78 0.352818122 ubox
73 77 0.307043091 ubox
74 79 0.037162072 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
showpage
end
%%EOF
