%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1033)
} def

/sequence { (\
GGAAAAGCCAAAGGCAAGAUCAAAGAUCAAGACGCAAAGCGUCAAGCAGAAACUGCAAGCGAAACGCAGCUGUCCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.016926818 ubox
1 9 0.182298975 ubox
1 21 0.007359206 ubox
1 70 0.008078696 ubox
1 71 0.018232204 ubox
1 74 0.025528004 ubox
1 75 0.928063007 ubox
1 76 0.035758680 ubox
1 77 0.005402640 ubox
1 78 0.159804417 ubox
2 8 0.182089896 ubox
2 9 0.014756165 ubox
2 20 0.006739203 ubox
2 21 0.008246436 ubox
2 70 0.019212961 ubox
2 73 0.019998136 ubox
2 74 0.929405202 ubox
2 75 0.040856807 ubox
2 76 0.006573620 ubox
2 77 0.155925724 ubox
2 78 0.226349558 ubox
3 20 0.008140727 ubox
3 71 0.005932429 ubox
3 73 0.867678426 ubox
3 76 0.147343178 ubox
3 77 0.224265216 ubox
4 71 0.044768192 ubox
4 73 0.046594468 ubox
4 76 0.201712004 ubox
4 77 0.014793797 ubox
5 71 0.104509891 ubox
5 73 0.014010674 ubox
5 76 0.017062322 ubox
5 77 0.020973468 ubox
6 71 0.325813691 ubox
6 73 0.022290653 ubox
6 76 0.024923268 ubox
6 77 0.005058703 ubox
7 15 0.916547153 ubox
7 67 0.021404743 ubox
7 70 0.324014795 ubox
7 73 0.030301078 ubox
7 74 0.008262780 ubox
7 75 0.023123334 ubox
7 78 0.013948702 ubox
8 13 0.009602792 ubox
8 14 0.917670279 ubox
8 66 0.021414233 ubox
8 69 0.321888153 ubox
8 72 0.031035173 ubox
8 79 0.011052171 ubox
9 13 0.911423583 ubox
9 14 0.039357810 ubox
9 18 0.009395438 ubox
9 25 0.003338013 ubox
9 66 0.015456363 ubox
9 69 0.021993925 ubox
9 72 0.012187593 ubox
9 79 0.039970952 ubox
10 71 0.009246911 ubox
10 73 0.004914788 ubox
10 76 0.003472304 ubox
10 77 0.029152189 ubox
11 73 0.008867902 ubox
11 76 0.030351392 ubox
11 77 0.182055021 ubox
12 71 0.006568735 ubox
12 76 0.201718458 ubox
12 77 0.006727846 ubox
13 21 0.009494171 ubox
13 28 0.006525863 ubox
13 65 0.015915607 ubox
13 70 0.005799347 ubox
13 71 0.048887705 ubox
13 74 0.076132789 ubox
13 75 0.203283175 ubox
13 76 0.005719377 ubox
13 78 0.004125284 ubox
14 20 0.007736307 ubox
14 21 0.003796865 ubox
14 27 0.005848792 ubox
14 47 0.004469256 ubox
14 56 0.007879747 ubox
14 60 0.047797389 ubox
14 65 0.004488133 ubox
14 67 0.021130669 ubox
14 70 0.051880334 ubox
14 73 0.079570853 ubox
14 74 0.201817938 ubox
14 75 0.005668755 ubox
15 25 0.005906599 ubox
15 31 0.005796403 ubox
15 46 0.004490800 ubox
15 55 0.007894225 ubox
15 59 0.047787853 ubox
15 61 0.005894699 ubox
15 66 0.021186571 ubox
15 69 0.052097251 ubox
15 72 0.200450892 ubox
16 54 0.007116867 ubox
16 71 0.151708851 ubox
16 73 0.020444074 ubox
16 77 0.009824716 ubox
17 27 0.003829172 ubox
17 71 0.018380746 ubox
17 73 0.004908203 ubox
17 76 0.010838063 ubox
18 27 0.003724879 ubox
18 28 0.993543014 ubox
18 70 0.015059411 ubox
18 74 0.007496300 ubox
18 75 0.009713032 ubox
18 78 0.005133128 ubox
19 27 0.994482765 ubox
19 73 0.007662265 ubox
19 77 0.004843161 ubox
20 24 0.003185120 ubox
20 25 0.008542452 ubox
20 26 0.993896005 ubox
20 29 0.003238349 ubox
20 72 0.006682911 ubox
21 25 0.985686382 ubox
21 72 0.007780908 ubox
21 79 0.003191464 ubox
22 71 0.005904476 ubox
23 76 0.003291462 ubox
23 77 0.010235586 ubox
24 71 0.003597662 ubox
24 76 0.011463316 ubox
25 70 0.003751865 ubox
25 74 0.009085362 ubox
25 75 0.011375340 ubox
25 78 0.004178629 ubox
26 73 0.009285485 ubox
26 77 0.003934158 ubox
27 45 0.003346771 ubox
27 72 0.008070816 ubox
28 72 0.009658988 ubox
29 71 0.007587149 ubox
29 77 0.004102391 ubox
30 71 0.004959157 ubox
30 76 0.004555663 ubox
31 43 0.998471314 ubox
31 70 0.004463004 ubox
31 74 0.012768529 ubox
32 42 0.999593682 ubox
32 73 0.013073387 ubox
33 41 0.999835984 ubox
33 72 0.013087937 ubox
34 40 0.999692780 ubox
34 67 0.005167239 ubox
34 70 0.012716270 ubox
34 71 0.004063818 ubox
35 39 0.992433683 ubox
35 66 0.005166111 ubox
35 69 0.012982652 ubox
39 67 0.013419891 ubox
40 61 0.005381147 ubox
40 66 0.013426044 ubox
41 60 0.005404255 ubox
41 65 0.013402219 ubox
42 59 0.004707098 ubox
42 62 0.003712082 ubox
42 64 0.012573227 ubox
43 59 0.008533815 ubox
43 61 0.004981676 ubox
44 76 0.003323592 ubox
44 77 0.009263648 ubox
45 54 0.019832071 ubox
45 71 0.010858311 ubox
45 73 0.005556781 ubox
45 76 0.010856603 ubox
46 53 0.020400371 ubox
46 56 0.981093037 ubox
46 60 0.007292902 ubox
46 70 0.010993621 ubox
46 73 0.148874143 ubox
46 74 0.018599319 ubox
46 75 0.009849137 ubox
47 55 0.982322582 ubox
47 59 0.007268432 ubox
47 69 0.010127689 ubox
47 72 0.173790601 ubox
48 54 0.979897777 ubox
48 71 0.173914299 ubox
48 73 0.003446874 ubox
48 76 0.004432434 ubox
49 53 0.958423365 ubox
49 54 0.005931027 ubox
49 56 0.006788071 ubox
49 70 0.173601630 ubox
49 74 0.009914071 ubox
49 75 0.004905684 ubox
49 78 0.013460671 ubox
50 71 0.003645954 ubox
50 73 0.009558753 ubox
50 77 0.013392814 ubox
51 71 0.010705283 ubox
51 76 0.012127016 ubox
52 71 0.009014827 ubox
52 73 0.018157315 ubox
53 69 0.179343246 ubox
53 72 0.021557478 ubox
54 68 0.179929260 ubox
55 67 0.180012337 ubox
55 70 0.031298490 ubox
55 73 0.019736691 ubox
55 74 0.004114752 ubox
56 66 0.179839029 ubox
56 69 0.031438894 ubox
56 72 0.030944666 ubox
57 71 0.038573624 ubox
57 73 0.023026191 ubox
57 77 0.003601286 ubox
58 71 0.795879640 ubox
58 73 0.003770303 ubox
58 76 0.004764084 ubox
59 65 0.025143466 ubox
59 67 0.525661073 ubox
59 70 0.826481502 ubox
59 73 0.009931636 ubox
59 75 0.005253800 ubox
60 66 0.526204411 ubox
60 69 0.826565408 ubox
60 72 0.011650371 ubox
60 79 0.022608654 ubox
61 65 0.492438222 ubox
61 67 0.100130457 ubox
61 70 0.009418967 ubox
61 71 0.009334708 ubox
61 74 0.006255388 ubox
61 78 0.024861063 ubox
62 73 0.005520390 ubox
62 77 0.024816742 ubox
63 76 0.023618054 ubox
64 73 0.017919520 ubox
65 72 0.021187862 ubox
66 70 0.003736886 ubox
66 71 0.014388057 ubox
66 73 0.023654188 ubox
67 72 0.024984938 ubox
68 73 0.009916885 ubox
68 76 0.010412648 ubox
69 73 0.003432535 ubox
69 74 0.008084700 ubox
69 75 0.013464984 ubox
72 78 0.008876134 ubox
1 75 0.9500000 lbox
2 74 0.9500000 lbox
3 73 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
58 71 0.9500000 lbox
59 70 0.9500000 lbox
60 69 0.9500000 lbox
showpage
end
%%EOF
