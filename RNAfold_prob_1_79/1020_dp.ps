%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1020)
} def

/sequence { (\
GGAAAAGUGAAACACAAGUGGAAACCACAAGAAGGAAACCUUCAAGAGGAAACCUCAAGAGAAACUCAGAUAACCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.008592676 ubox
1 13 0.024510269 ubox
1 15 0.021373624 ubox
1 26 0.005874348 ubox
1 43 0.003266278 ubox
1 54 0.008229343 ubox
1 56 0.004261446 ubox
1 65 0.019652915 ubox
1 66 0.019737277 ubox
1 67 0.052474057 ubox
1 71 0.008793610 ubox
1 74 0.045770533 ubox
1 75 0.602436273 ubox
1 76 0.080608493 ubox
1 77 0.012698488 ubox
1 78 0.388953294 ubox
2 8 0.004034252 ubox
2 13 0.009245501 ubox
2 15 0.006435573 ubox
2 25 0.005840083 ubox
2 43 0.004059436 ubox
2 53 0.008201462 ubox
2 56 0.004793801 ubox
2 65 0.026048227 ubox
2 66 0.041238954 ubox
2 67 0.071215258 ubox
2 71 0.008523567 ubox
2 74 0.601026668 ubox
2 75 0.092729759 ubox
2 76 0.015496049 ubox
2 77 0.378264326 ubox
2 78 0.558973597 ubox
3 8 0.011138857 ubox
3 19 0.003437446 ubox
3 42 0.003828459 ubox
3 55 0.003978291 ubox
3 66 0.067328106 ubox
3 71 0.024327360 ubox
3 76 0.354646318 ubox
3 77 0.552548138 ubox
4 8 0.007546586 ubox
4 66 0.005027543 ubox
4 71 0.033113374 ubox
4 76 0.489715438 ubox
4 77 0.045762429 ubox
5 66 0.004653299 ubox
5 71 0.118540821 ubox
5 76 0.053525801 ubox
5 77 0.085059246 ubox
6 19 0.004276249 ubox
6 66 0.050872739 ubox
6 71 0.028522315 ubox
6 76 0.102603129 ubox
6 77 0.013892519 ubox
7 13 0.112724238 ubox
7 15 0.850609482 ubox
7 25 0.010462462 ubox
7 28 0.036747275 ubox
7 39 0.004487145 ubox
7 65 0.054251367 ubox
7 67 0.008911592 ubox
7 71 0.032528441 ubox
7 74 0.137881059 ubox
7 75 0.102370018 ubox
7 76 0.008864280 ubox
7 77 0.004443174 ubox
7 78 0.016009284 ubox
8 12 0.101717285 ubox
8 14 0.850913474 ubox
8 16 0.105777346 ubox
8 17 0.031868194 ubox
8 24 0.010459893 ubox
8 27 0.036781415 ubox
8 38 0.004516282 ubox
8 44 0.003184253 ubox
8 57 0.004633228 ubox
8 58 0.003303198 ubox
8 64 0.052620546 ubox
8 68 0.243587952 ubox
8 69 0.009295776 ubox
8 70 0.032597504 ubox
8 72 0.035751996 ubox
8 73 0.134344036 ubox
8 79 0.115643442 ubox
9 13 0.837843033 ubox
9 15 0.119484051 ubox
9 26 0.036625050 ubox
9 56 0.004378684 ubox
9 65 0.008992499 ubox
9 67 0.245755440 ubox
9 71 0.031381177 ubox
9 74 0.056774589 ubox
9 75 0.023543984 ubox
9 76 0.005973553 ubox
9 77 0.009768142 ubox
9 78 0.197435466 ubox
10 55 0.003630874 ubox
10 66 0.232681954 ubox
10 71 0.025147565 ubox
10 76 0.010610151 ubox
10 77 0.195123715 ubox
11 66 0.010796409 ubox
11 71 0.019682317 ubox
11 76 0.173030900 ubox
11 77 0.009985100 ubox
12 19 0.020155376 ubox
12 71 0.010583818 ubox
12 76 0.010767864 ubox
13 18 0.021084426 ubox
13 20 0.019951140 ubox
13 21 0.007077848 ubox
13 59 0.021139269 ubox
13 61 0.027243656 ubox
13 69 0.048329901 ubox
13 79 0.018254858 ubox
14 19 0.016635170 ubox
14 71 0.005906179 ubox
14 76 0.003378340 ubox
15 20 0.019816565 ubox
15 21 0.005105056 ubox
15 31 0.009911074 ubox
15 59 0.020870012 ubox
15 61 0.045974129 ubox
15 69 0.023726342 ubox
15 79 0.019091960 ubox
16 71 0.009929456 ubox
16 76 0.005793483 ubox
16 77 0.014915674 ubox
17 66 0.004930894 ubox
17 71 0.008477779 ubox
17 76 0.015457832 ubox
17 77 0.006862044 ubox
18 25 0.025194856 ubox
18 26 0.009458457 ubox
18 28 0.995922568 ubox
18 56 0.007550461 ubox
18 65 0.004554577 ubox
18 74 0.003783906 ubox
18 75 0.008391713 ubox
18 78 0.004020455 ubox
19 24 0.025074794 ubox
19 27 0.997187743 ubox
19 29 0.021804112 ubox
19 64 0.004188155 ubox
19 73 0.003594307 ubox
20 25 0.023621210 ubox
20 26 0.997639313 ubox
20 28 0.024511199 ubox
20 54 0.010055807 ubox
20 74 0.003271892 ubox
20 75 0.009382018 ubox
20 78 0.005404671 ubox
21 25 0.981525930 ubox
21 26 0.014462549 ubox
21 28 0.005306637 ubox
21 53 0.010059234 ubox
21 74 0.009357684 ubox
21 77 0.005242651 ubox
21 78 0.007513640 ubox
22 76 0.004910505 ubox
22 77 0.007437007 ubox
23 76 0.006600142 ubox
25 49 0.010454901 ubox
26 48 0.010459422 ubox
28 46 0.008131597 ubox
29 42 0.009865511 ubox
29 71 0.004187575 ubox
29 77 0.007558397 ubox
30 41 0.011389454 ubox
30 71 0.004984758 ubox
30 76 0.008005477 ubox
31 40 0.011634687 ubox
31 42 0.005054382 ubox
31 43 0.981443794 ubox
31 56 0.022334184 ubox
31 67 0.003676752 ubox
31 75 0.005035453 ubox
31 78 0.177460638 ubox
32 41 0.004403111 ubox
32 42 0.982349765 ubox
32 55 0.015863709 ubox
32 77 0.177664030 ubox
33 41 0.982482271 ubox
33 42 0.010432093 ubox
33 55 0.023529211 ubox
33 66 0.003178149 ubox
33 76 0.177683844 ubox
34 39 0.021010486 ubox
34 40 0.982802695 ubox
34 41 0.013531381 ubox
34 43 0.011655877 ubox
34 54 0.029128729 ubox
34 65 0.003940748 ubox
34 75 0.177772958 ubox
35 39 0.966928955 ubox
35 40 0.016506224 ubox
35 42 0.011502138 ubox
35 43 0.016862148 ubox
35 53 0.029099354 ubox
35 67 0.008706028 ubox
35 74 0.176511139 ubox
36 41 0.012083447 ubox
36 42 0.018275500 ubox
36 66 0.011941713 ubox
36 71 0.006744505 ubox
37 41 0.014243017 ubox
37 42 0.005355481 ubox
37 71 0.010290745 ubox
38 71 0.038852229 ubox
39 49 0.044417064 ubox
39 61 0.008089826 ubox
39 69 0.021196963 ubox
40 46 0.003279328 ubox
40 48 0.044617409 ubox
40 49 0.003249141 ubox
40 59 0.016463704 ubox
40 61 0.026664470 ubox
40 69 0.085026524 ubox
41 45 0.004672479 ubox
41 47 0.044280049 ubox
41 48 0.003204047 ubox
41 50 0.003500602 ubox
41 51 0.004399693 ubox
41 58 0.017598558 ubox
41 60 0.023966469 ubox
41 61 0.045656403 ubox
41 62 0.004146752 ubox
41 63 0.015381877 ubox
41 68 0.078574547 ubox
41 69 0.006617994 ubox
41 70 0.007751141 ubox
41 73 0.004139663 ubox
42 46 0.039903081 ubox
42 49 0.003737213 ubox
42 50 0.004961964 ubox
42 57 0.017396318 ubox
42 58 0.006420547 ubox
42 59 0.019760925 ubox
42 60 0.078456895 ubox
42 61 0.003596638 ubox
42 62 0.023347129 ubox
42 68 0.006339067 ubox
42 69 0.007234690 ubox
42 70 0.041066628 ubox
42 72 0.003304535 ubox
43 48 0.003892821 ubox
43 49 0.005017842 ubox
43 59 0.080668798 ubox
43 61 0.023458172 ubox
43 69 0.041449077 ubox
44 71 0.003785103 ubox
44 77 0.004116913 ubox
45 55 0.016288437 ubox
45 71 0.004306367 ubox
45 76 0.004577491 ubox
46 53 0.003439160 ubox
46 54 0.017465303 ubox
46 56 0.994085284 ubox
46 67 0.048477048 ubox
46 75 0.003384991 ubox
46 77 0.037398269 ubox
46 78 0.031475827 ubox
47 55 0.995198435 ubox
47 66 0.048527505 ubox
47 76 0.042169953 ubox
47 77 0.029679136 ubox
48 53 0.027028530 ubox
48 54 0.995230147 ubox
48 55 0.010719099 ubox
48 56 0.008547282 ubox
48 65 0.048496858 ubox
48 75 0.044559983 ubox
48 76 0.027718410 ubox
48 78 0.003627002 ubox
49 53 0.979155280 ubox
49 54 0.014864308 ubox
49 55 0.006988508 ubox
49 56 0.016204798 ubox
49 67 0.003206068 ubox
49 74 0.044496986 ubox
49 75 0.027610454 ubox
49 77 0.003608998 ubox
49 78 0.004493325 ubox
50 55 0.015253673 ubox
50 76 0.003451571 ubox
50 77 0.004478410 ubox
51 71 0.003478420 ubox
51 76 0.004137791 ubox
52 71 0.015152637 ubox
53 59 0.007061298 ubox
53 61 0.009688283 ubox
53 69 0.003389026 ubox
54 59 0.013150423 ubox
54 61 0.016791134 ubox
54 69 0.035211819 ubox
55 60 0.015646648 ubox
55 62 0.016104646 ubox
55 68 0.034771227 ubox
55 69 0.004482212 ubox
55 70 0.036254864 ubox
56 61 0.017463987 ubox
56 69 0.038172298 ubox
57 66 0.012490501 ubox
57 71 0.029383369 ubox
57 77 0.020665011 ubox
58 66 0.088605674 ubox
58 71 0.022900073 ubox
58 76 0.027551743 ubox
59 65 0.097232112 ubox
59 66 0.012841194 ubox
59 67 0.900225742 ubox
59 71 0.005715877 ubox
59 74 0.009866378 ubox
59 75 0.030374702 ubox
59 77 0.028435305 ubox
59 78 0.024069950 ubox
60 66 0.900070001 ubox
60 71 0.011999621 ubox
60 76 0.033743355 ubox
60 77 0.022836380 ubox
61 65 0.880522873 ubox
61 66 0.011762211 ubox
61 67 0.125720792 ubox
61 71 0.004008367 ubox
61 74 0.018324582 ubox
61 75 0.036430815 ubox
61 76 0.018525818 ubox
61 78 0.032124509 ubox
62 66 0.109547619 ubox
62 71 0.015036530 ubox
62 77 0.031972563 ubox
63 71 0.010050619 ubox
63 76 0.029195013 ubox
64 71 0.013141402 ubox
65 69 0.018833315 ubox
65 79 0.005620883 ubox
66 70 0.006622500 ubox
66 72 0.008746645 ubox
66 73 0.013442581 ubox
67 79 0.009133942 ubox
68 76 0.125870963 ubox
68 77 0.012052373 ubox
69 74 0.084003446 ubox
69 75 0.163619448 ubox
69 76 0.017356349 ubox
69 77 0.013782112 ubox
69 78 0.152081312 ubox
70 76 0.016340350 ubox
70 77 0.150442833 ubox
72 76 0.006498560 ubox
72 77 0.005044482 ubox
74 79 0.008203498 ubox
75 79 0.003569095 ubox
1 75 0.9500000 lbox
2 74 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
showpage
end
%%EOF
