%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (293)
} def

/sequence { (\
GGAAAAAAGUACAAGCUGGAAACAGCAGUCAAGCCAAAGUCAGGAAACAGACGGGCAAGACAAGUACAGCUUACCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.004982225 ubox
1 12 0.023532448 ubox
1 67 0.005885680 ubox
1 70 0.010349269 ubox
1 71 0.022602091 ubox
1 72 0.005610191 ubox
1 74 0.046805661 ubox
1 75 0.806537354 ubox
1 76 0.045431235 ubox
1 77 0.006253414 ubox
1 78 0.204329997 ubox
2 12 0.007400146 ubox
2 67 0.003261420 ubox
2 70 0.026033959 ubox
2 71 0.005434695 ubox
2 72 0.022182530 ubox
2 74 0.806842732 ubox
2 75 0.052093559 ubox
2 76 0.007965732 ubox
2 77 0.202568677 ubox
2 78 0.213288906 ubox
3 10 0.007860308 ubox
3 71 0.024832322 ubox
3 72 0.233929027 ubox
3 76 0.194787321 ubox
3 77 0.212167615 ubox
4 10 0.006179482 ubox
4 71 0.221028822 ubox
4 72 0.482783873 ubox
4 76 0.193884195 ubox
4 77 0.016569808 ubox
5 10 0.007038352 ubox
5 71 0.474480631 ubox
5 72 0.097217844 ubox
5 76 0.020284455 ubox
5 77 0.010741628 ubox
6 10 0.004340334 ubox
6 71 0.094271106 ubox
6 72 0.121601027 ubox
6 76 0.012001375 ubox
6 77 0.031361207 ubox
7 71 0.122748581 ubox
7 72 0.228156370 ubox
7 76 0.034820122 ubox
7 77 0.070036967 ubox
8 71 0.246395758 ubox
8 72 0.021738926 ubox
8 76 0.079744160 ubox
8 77 0.009274475 ubox
9 30 0.006143944 ubox
9 67 0.935230751 ubox
9 70 0.241642570 ubox
9 71 0.005826550 ubox
9 74 0.097217284 ubox
9 75 0.077835431 ubox
9 76 0.009085326 ubox
9 77 0.004277230 ubox
9 78 0.012176992 ubox
10 14 0.003783972 ubox
10 66 0.938983284 ubox
10 68 0.009094890 ubox
10 69 0.230947200 ubox
10 73 0.098537933 ubox
11 29 0.009066428 ubox
11 65 0.943726999 ubox
11 72 0.078856713 ubox
11 76 0.004795580 ubox
12 28 0.009700661 ubox
12 64 0.942700553 ubox
12 69 0.009698553 ubox
12 79 0.005804570 ubox
13 65 0.007292982 ubox
13 71 0.007743604 ubox
13 72 0.107545855 ubox
13 77 0.004353543 ubox
14 65 0.011597153 ubox
14 71 0.135657051 ubox
14 76 0.004391046 ubox
15 26 0.989262572 ubox
15 29 0.006533879 ubox
15 70 0.138530854 ubox
16 25 0.990294596 ubox
16 28 0.007140542 ubox
16 69 0.138530995 ubox
17 24 0.990020458 ubox
17 27 0.007789791 ubox
17 68 0.138446813 ubox
18 23 0.989606278 ubox
18 26 0.008043285 ubox
18 67 0.138121197 ubox
19 23 0.009853991 ubox
19 26 0.016640211 ubox
19 30 0.003172340 ubox
19 65 0.004948834 ubox
19 67 0.006509560 ubox
20 65 0.020648336 ubox
21 65 0.022724592 ubox
22 65 0.099237393 ubox
23 64 0.104631340 ubox
24 65 0.010408900 ubox
25 61 0.004406780 ubox
25 65 0.027436108 ubox
26 64 0.030100971 ubox
27 65 0.004660419 ubox
28 61 0.996035376 ubox
29 60 0.997350073 ubox
30 59 0.996874843 ubox
33 56 0.999202679 ubox
34 54 0.030021741 ubox
34 55 0.999460104 ubox
35 53 0.037214881 ubox
35 54 0.996479812 ubox
35 55 0.009710622 ubox
39 48 0.028624812 ubox
39 52 0.994959586 ubox
40 47 0.027326174 ubox
40 49 0.014343389 ubox
40 50 0.006407628 ubox
40 51 0.998594548 ubox
41 50 0.996844200 ubox
41 53 0.003569386 ubox
43 48 0.704842547 ubox
43 52 0.004837735 ubox
44 48 0.092468574 ubox
57 72 0.004272313 ubox
57 77 0.013286822 ubox
58 71 0.004687398 ubox
58 76 0.015254861 ubox
59 70 0.004726371 ubox
59 75 0.015635067 ubox
61 69 0.003906296 ubox
62 71 0.004149144 ubox
62 72 0.145185446 ubox
62 76 0.007795274 ubox
62 77 0.018475961 ubox
63 71 0.160663789 ubox
63 72 0.007815612 ubox
63 76 0.021127006 ubox
64 70 0.162728775 ubox
64 71 0.006428983 ubox
64 72 0.003823061 ubox
64 74 0.059322781 ubox
64 75 0.018313209 ubox
64 78 0.004719651 ubox
65 69 0.152241795 ubox
65 73 0.060532305 ubox
66 71 0.003812329 ubox
66 72 0.058038440 ubox
68 72 0.006040560 ubox
68 76 0.048398765 ubox
68 77 0.014753582 ubox
69 74 0.030522139 ubox
69 75 0.052015186 ubox
69 76 0.014282648 ubox
69 77 0.004842932 ubox
69 78 0.024359943 ubox
70 79 0.019087491 ubox
72 79 0.005732636 ubox
73 77 0.004181175 ubox
74 79 0.018880422 ubox
75 79 0.007920461 ubox
1 75 0.9500000 lbox
2 74 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
showpage
end
%%EOF
