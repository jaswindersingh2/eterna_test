%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1060)
} def

/sequence { (\
GGAAAAUUGGGAACUCCUGACCCUCCACGAGCGGUCCAGUGCCGCGUCAAUGACCGGCUGGAGGUCCCUCGACCUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.006767205 ubox
1 8 0.011551252 ubox
1 17 0.031143333 ubox
1 22 0.005786826 ubox
1 23 0.006376719 ubox
1 26 0.158790786 ubox
1 37 0.015950140 ubox
1 70 0.033410719 ubox
1 73 0.024821489 ubox
1 74 0.384487478 ubox
1 75 0.059097834 ubox
1 76 0.015963846 ubox
1 77 0.028317075 ubox
1 78 0.599996709 ubox
2 7 0.008143028 ubox
2 8 0.015282926 ubox
2 16 0.031435087 ubox
2 21 0.005815117 ubox
2 22 0.006365397 ubox
2 25 0.158901017 ubox
2 36 0.015544992 ubox
2 69 0.032495787 ubox
2 70 0.086266975 ubox
2 73 0.384479668 ubox
2 74 0.067833307 ubox
2 75 0.020442486 ubox
2 76 0.043920910 ubox
2 77 0.600089586 ubox
2 78 0.511787730 ubox
3 7 0.013781172 ubox
3 8 0.012848793 ubox
3 15 0.030368899 ubox
3 24 0.155821068 ubox
3 35 0.013914228 ubox
3 69 0.086188051 ubox
3 75 0.046008716 ubox
3 76 0.597193146 ubox
3 77 0.511640528 ubox
4 8 0.006527204 ubox
4 24 0.004864576 ubox
4 69 0.017388865 ubox
4 75 0.562871334 ubox
4 76 0.504404251 ubox
4 77 0.023690279 ubox
5 69 0.021112098 ubox
5 75 0.469530410 ubox
5 76 0.029967041 ubox
5 77 0.006960921 ubox
6 40 0.029720327 ubox
6 69 0.042446173 ubox
6 75 0.032239985 ubox
6 76 0.008021880 ubox
7 13 0.004348740 ubox
7 19 0.004058546 ubox
7 20 0.146163009 ubox
7 30 0.010368780 ubox
7 39 0.030395842 ubox
7 71 0.139227988 ubox
7 72 0.381910488 ubox
8 12 0.003791607 ubox
8 19 0.152454189 ubox
8 20 0.006053042 ubox
8 27 0.003732406 ubox
8 29 0.010440024 ubox
8 38 0.030791630 ubox
8 71 0.361138413 ubox
8 72 0.101340942 ubox
8 79 0.006385449 ubox
9 14 0.012802982 ubox
9 15 0.003224322 ubox
9 16 0.005812290 ubox
9 17 0.038073822 ubox
9 18 0.173973773 ubox
9 22 0.004284501 ubox
9 23 0.033590984 ubox
9 24 0.003676445 ubox
9 26 0.004181179 ubox
9 28 0.010407456 ubox
9 37 0.030608281 ubox
9 67 0.010081675 ubox
9 68 0.966415361 ubox
9 69 0.026410350 ubox
9 70 0.153923761 ubox
9 73 0.003561302 ubox
9 74 0.003849333 ubox
9 78 0.010438673 ubox
10 14 0.003616428 ubox
10 15 0.004627873 ubox
10 16 0.038287241 ubox
10 17 0.177044504 ubox
10 18 0.007652968 ubox
10 21 0.004298235 ubox
10 22 0.033606403 ubox
10 23 0.004778993 ubox
10 25 0.004139879 ubox
10 26 0.010926273 ubox
10 36 0.026654387 ubox
10 37 0.005254946 ubox
10 66 0.010036637 ubox
10 67 0.973328048 ubox
10 68 0.088758942 ubox
10 69 0.072681775 ubox
10 70 0.003695683 ubox
10 73 0.003423033 ubox
10 77 0.007278226 ubox
10 78 0.009162835 ubox
11 15 0.024810348 ubox
11 16 0.176523675 ubox
11 17 0.007952600 ubox
11 21 0.033516193 ubox
11 22 0.004795745 ubox
11 24 0.003303625 ubox
11 25 0.010941355 ubox
11 35 0.022116886 ubox
11 36 0.005926285 ubox
11 65 0.009103645 ubox
11 66 0.974037630 ubox
11 67 0.082752334 ubox
11 68 0.070308404 ubox
11 76 0.004507618 ubox
11 77 0.007599913 ubox
11 78 0.012393296 ubox
12 24 0.010557397 ubox
12 35 0.006271425 ubox
12 65 0.790538314 ubox
12 75 0.003293723 ubox
12 76 0.005741278 ubox
12 77 0.011311690 ubox
13 18 0.005951472 ubox
13 40 0.037557139 ubox
13 65 0.055025976 ubox
13 76 0.004638651 ubox
14 19 0.019115028 ubox
14 31 0.023880464 ubox
14 34 0.003485979 ubox
14 39 0.038782919 ubox
14 63 0.976036449 ubox
14 64 0.052203567 ubox
15 30 0.024217253 ubox
15 33 0.003309804 ubox
15 38 0.038316779 ubox
15 62 0.979358029 ubox
15 63 0.026269913 ubox
16 29 0.024168984 ubox
16 39 0.006123858 ubox
16 60 0.006261051 ubox
16 61 0.979698730 ubox
16 63 0.004042392 ubox
16 64 0.017550355 ubox
17 31 0.003426486 ubox
17 39 0.131174881 ubox
17 60 0.969518849 ubox
17 61 0.013363529 ubox
17 63 0.017578406 ubox
18 27 0.023989012 ubox
18 30 0.003312758 ubox
18 38 0.290438816 ubox
18 39 0.042742004 ubox
18 60 0.014745311 ubox
18 62 0.017006520 ubox
19 25 0.003265185 ubox
19 26 0.024092100 ubox
19 35 0.004345919 ubox
19 36 0.955493985 ubox
19 37 0.219141644 ubox
19 58 0.046505337 ubox
19 59 0.008546334 ubox
19 66 0.005828630 ubox
20 24 0.003231837 ubox
20 35 0.984056209 ubox
20 65 0.005861768 ubox
21 33 0.005668267 ubox
21 34 0.985297634 ubox
21 56 0.008876347 ubox
21 57 0.047426442 ubox
21 64 0.004832671 ubox
22 33 0.985178272 ubox
22 34 0.007661534 ubox
22 56 0.047342984 ubox
22 57 0.009289090 ubox
22 63 0.003470274 ubox
22 64 0.007123787 ubox
23 29 0.007180730 ubox
23 31 0.983929730 ubox
23 33 0.008686724 ubox
23 52 0.003206589 ubox
23 56 0.009422144 ubox
23 63 0.007903888 ubox
24 29 0.006642056 ubox
24 30 0.983430682 ubox
24 31 0.017060600 ubox
24 53 0.035452032 ubox
24 62 0.008627933 ubox
25 29 0.975186745 ubox
25 31 0.012197273 ubox
25 34 0.006424465 ubox
25 52 0.035844830 ubox
25 61 0.008651243 ubox
26 31 0.017067415 ubox
26 33 0.006478210 ubox
26 52 0.027979383 ubox
26 60 0.008649237 ubox
27 35 0.006259274 ubox
27 51 0.027550229 ubox
27 59 0.007954320 ubox
27 75 0.003338491 ubox
28 34 0.006925736 ubox
28 71 0.151521905 ubox
28 79 0.033792062 ubox
29 36 0.004235559 ubox
29 47 0.011603745 ubox
29 48 0.043395179 ubox
29 58 0.004096861 ubox
29 70 0.154756465 ubox
29 78 0.035484275 ubox
30 35 0.004164283 ubox
30 47 0.042364067 ubox
30 59 0.005360723 ubox
30 69 0.154746848 ubox
30 77 0.035263339 ubox
31 40 0.006063066 ubox
31 45 0.050876064 ubox
31 58 0.005828421 ubox
31 68 0.154705418 ubox
31 76 0.032737470 ubox
32 39 0.006449510 ubox
32 44 0.050945089 ubox
32 56 0.007190032 ubox
32 57 0.004136567 ubox
33 43 0.050946179 ubox
33 55 0.008302637 ubox
33 66 0.019070926 ubox
33 67 0.153149333 ubox
33 74 0.032479081 ubox
33 78 0.003278528 ubox
34 42 0.050939830 ubox
34 54 0.008310569 ubox
34 65 0.017082274 ubox
34 66 0.153068122 ubox
34 73 0.032483788 ubox
35 41 0.048509505 ubox
35 53 0.008304676 ubox
35 62 0.077810546 ubox
35 64 0.012161945 ubox
35 72 0.032370626 ubox
36 41 0.009585666 ubox
36 52 0.007598536 ubox
36 61 0.088103413 ubox
36 63 0.011409587 ubox
36 64 0.135948895 ubox
36 71 0.032164717 ubox
37 52 0.003329515 ubox
37 60 0.100542744 ubox
37 61 0.012791195 ubox
37 63 0.135836027 ubox
38 51 0.004591885 ubox
38 59 0.100874533 ubox
38 69 0.010569430 ubox
39 58 0.049457003 ubox
39 59 0.093667018 ubox
39 68 0.010506522 ubox
40 49 0.005097096 ubox
40 57 0.016909115 ubox
40 60 0.045892279 ubox
40 61 0.008889985 ubox
41 47 0.003928792 ubox
41 48 0.005317752 ubox
41 58 0.995652733 ubox
41 59 0.011905264 ubox
42 46 0.004602323 ubox
42 57 0.998479671 ubox
43 56 0.998616692 ubox
44 54 0.005612780 ubox
44 55 0.998053594 ubox
45 52 0.017527277 ubox
46 51 0.011714204 ubox
46 54 0.997918406 ubox
46 58 0.005873229 ubox
47 52 0.008282370 ubox
47 53 0.997384107 ubox
47 57 0.005873103 ubox
48 52 0.988996586 ubox
48 56 0.005867310 ubox
59 72 0.004114207 ubox
59 79 0.024052678 ubox
60 67 0.012588752 ubox
60 68 0.006645527 ubox
60 77 0.061893266 ubox
60 78 0.043357534 ubox
61 66 0.012599271 ubox
61 67 0.006698054 ubox
61 70 0.029719691 ubox
61 76 0.092372081 ubox
61 77 0.035441122 ubox
61 78 0.006396054 ubox
62 69 0.029766334 ubox
62 75 0.107598156 ubox
62 76 0.025208046 ubox
62 77 0.004878436 ubox
63 68 0.029640726 ubox
63 74 0.118700963 ubox
63 75 0.004039282 ubox
64 73 0.118809639 ubox
65 72 0.118791636 ubox
66 71 0.118392652 ubox
69 79 0.003824408 ubox
70 79 0.239621349 ubox
71 75 0.003404682 ubox
71 76 0.005969743 ubox
71 77 0.010475850 ubox
71 78 0.263551883 ubox
72 76 0.012083012 ubox
72 77 0.237405724 ubox
73 79 0.013308748 ubox
74 79 0.015717181 ubox
75 79 0.003233207 ubox
1 78 0.9500000 lbox
2 77 0.9500000 lbox
3 76 0.9500000 lbox
4 75 0.9500000 lbox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
showpage
end
%%EOF
