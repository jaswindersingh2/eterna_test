%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (670)
} def

/sequence { (\
GGAAAGCCCAACGAGGAAAAAAAAAACUCGAAGUAGGAAACAAAAAACUACAAGGGCAAAAAAAAAAGGCCUACCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.004104137 ubox
1 8 0.030690774 ubox
1 9 0.068816858 ubox
1 71 0.030754523 ubox
1 75 0.038740136 ubox
1 76 0.004990981 ubox
1 78 0.087367011 ubox
2 7 0.030803629 ubox
2 8 0.068713402 ubox
2 9 0.004947541 ubox
2 70 0.030792276 ubox
2 74 0.038655562 ubox
2 75 0.005676835 ubox
2 77 0.061877438 ubox
2 78 0.118485907 ubox
3 72 0.004022447 ubox
3 76 0.044874654 ubox
3 77 0.103833704 ubox
4 72 0.013472738 ubox
4 76 0.063961855 ubox
4 77 0.012256685 ubox
5 72 0.005926987 ubox
5 76 0.014176004 ubox
5 77 0.003941315 ubox
6 57 0.993894116 ubox
6 70 0.023035654 ubox
6 71 0.004945307 ubox
6 74 0.015717671 ubox
6 75 0.015070017 ubox
7 16 0.004040972 ubox
7 37 0.004778221 ubox
7 55 0.003422991 ubox
7 56 0.994938738 ubox
7 69 0.023178905 ubox
8 15 0.004041782 ubox
8 16 0.005595297 ubox
8 36 0.004778554 ubox
8 37 0.004130018 ubox
8 54 0.004014867 ubox
8 55 0.994936521 ubox
8 56 0.003625447 ubox
8 68 0.023054114 ubox
8 69 0.004316812 ubox
9 15 0.005640179 ubox
9 33 0.003231893 ubox
9 36 0.004143802 ubox
9 54 0.993896574 ubox
9 55 0.004671530 ubox
9 68 0.004598190 ubox
10 34 0.003381751 ubox
11 34 0.003211477 ubox
12 30 0.980149571 ubox
12 79 0.034110889 ubox
13 29 0.999096880 ubox
13 77 0.008787807 ubox
13 78 0.035781463 ubox
14 28 0.998951094 ubox
14 49 0.006942333 ubox
14 76 0.013544824 ubox
14 77 0.034389130 ubox
15 27 0.998514264 ubox
15 28 0.008454349 ubox
15 29 0.003788546 ubox
15 48 0.007004021 ubox
15 75 0.016763853 ubox
15 76 0.032903253 ubox
16 27 0.018150734 ubox
16 28 0.003179898 ubox
16 29 0.008745814 ubox
16 74 0.016712907 ubox
16 75 0.032787870 ubox
17 28 0.008471680 ubox
27 36 0.005451353 ubox
27 56 0.003385608 ubox
28 35 0.005130034 ubox
28 55 0.003410626 ubox
29 54 0.004330662 ubox
29 79 0.006249329 ubox
30 51 0.005355255 ubox
30 78 0.011775840 ubox
31 77 0.011980868 ubox
32 49 0.029944159 ubox
32 76 0.011621399 ubox
33 41 0.026604876 ubox
33 48 0.031047603 ubox
33 51 0.996824049 ubox
33 74 0.008484578 ubox
33 75 0.007440630 ubox
34 40 0.026022781 ubox
34 43 0.004068588 ubox
34 47 0.030186865 ubox
34 50 0.998019164 ubox
34 73 0.010750072 ubox
35 49 0.998105490 ubox
35 72 0.010750752 ubox
36 41 0.026069264 ubox
36 48 0.997814054 ubox
36 49 0.015597848 ubox
36 51 0.008555067 ubox
36 71 0.010739486 ubox
37 41 0.010757397 ubox
37 48 0.022469393 ubox
37 70 0.010714948 ubox
48 55 0.004477621 ubox
48 56 0.003358683 ubox
49 54 0.004273363 ubox
49 55 0.003306625 ubox
51 56 0.004959027 ubox
52 77 0.014077472 ubox
53 72 0.040430329 ubox
53 76 0.015902427 ubox
54 71 0.041784983 ubox
54 72 0.081532778 ubox
54 75 0.015752050 ubox
54 76 0.003339379 ubox
55 70 0.041607558 ubox
55 71 0.085113947 ubox
55 74 0.013588532 ubox
55 75 0.003356758 ubox
56 70 0.085593013 ubox
56 74 0.003331142 ubox
57 68 0.040919026 ubox
57 69 0.085486006 ubox
58 77 0.004893479 ubox
59 76 0.003339016 ubox
59 77 0.005737122 ubox
60 76 0.003853821 ubox
60 77 0.006582787 ubox
61 76 0.004254633 ubox
61 77 0.008805947 ubox
62 76 0.005410898 ubox
62 77 0.011958869 ubox
63 72 0.005385334 ubox
63 76 0.007078895 ubox
63 77 0.016551767 ubox
64 72 0.003596058 ubox
64 76 0.009804325 ubox
64 77 0.023429738 ubox
65 72 0.005853953 ubox
65 76 0.012971076 ubox
65 77 0.057740088 ubox
66 72 0.004590039 ubox
66 76 0.046164167 ubox
66 77 0.863224908 ubox
67 72 0.004978144 ubox
67 76 0.962698525 ubox
67 77 0.036550847 ubox
68 74 0.036097385 ubox
68 75 0.978052056 ubox
68 76 0.036767468 ubox
68 77 0.005663444 ubox
68 78 0.018913246 ubox
69 74 0.972069192 ubox
69 75 0.037270663 ubox
69 76 0.005457583 ubox
69 77 0.016137914 ubox
69 78 0.010692730 ubox
70 79 0.005587926 ubox
71 79 0.005198342 ubox
74 79 0.007245892 ubox
6 57 0.9500000 lbox
7 56 0.9500000 lbox
8 55 0.9500000 lbox
9 54 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
66 77 0.9500000 lbox
67 76 0.9500000 lbox
68 75 0.9500000 lbox
69 74 0.9500000 lbox
showpage
end
%%EOF
