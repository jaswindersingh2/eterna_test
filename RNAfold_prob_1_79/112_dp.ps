%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (112)
} def

/sequence { (\
GGAAAAGCAAGGCUGCAAAAGUAAAAAAGUAGUGACGGAAACGUGACUACGACGCAGGCUUGCAAAAACCUCUGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.004514058 ubox
1 69 0.112470260 ubox
1 70 0.670413601 ubox
1 71 0.039401748 ubox
1 72 0.035841996 ubox
1 73 0.097656336 ubox
1 75 0.014435455 ubox
1 76 0.013663387 ubox
1 78 0.076680299 ubox
2 69 0.670445718 ubox
2 70 0.048244162 ubox
2 71 0.028506538 ubox
2 72 0.103497760 ubox
2 75 0.015739491 ubox
2 77 0.069036529 ubox
2 78 0.134128724 ubox
3 71 0.101172952 ubox
3 73 0.010119136 ubox
3 76 0.058422863 ubox
3 77 0.125220745 ubox
4 71 0.004058303 ubox
4 73 0.004652189 ubox
4 76 0.077527290 ubox
4 77 0.017791930 ubox
5 71 0.004243567 ubox
5 73 0.008053420 ubox
5 76 0.016366093 ubox
5 77 0.191476799 ubox
6 14 0.004373639 ubox
6 71 0.008214391 ubox
6 73 0.040212060 ubox
6 76 0.233301134 ubox
6 77 0.004836180 ubox
7 13 0.004681275 ubox
7 16 0.011359908 ubox
7 63 0.967827419 ubox
7 70 0.004048155 ubox
7 72 0.020316820 ubox
7 73 0.003467439 ubox
7 75 0.244776797 ubox
8 12 0.004648814 ubox
8 15 0.011370054 ubox
8 62 0.969264817 ubox
8 74 0.244785228 ubox
9 14 0.010240941 ubox
9 61 0.968848962 ubox
9 73 0.241107718 ubox
10 60 0.968924814 ubox
10 61 0.007794742 ubox
10 71 0.239451210 ubox
10 73 0.007008577 ubox
11 59 0.969205472 ubox
11 60 0.009980260 ubox
11 69 0.010283180 ubox
11 70 0.242926623 ubox
11 71 0.022370281 ubox
11 72 0.009690233 ubox
12 22 0.008143263 ubox
12 59 0.012707767 ubox
12 69 0.242459690 ubox
12 70 0.023097275 ubox
12 71 0.007340092 ubox
13 21 0.010979574 ubox
13 57 0.969251841 ubox
13 58 0.011372924 ubox
14 20 0.010950143 ubox
14 23 0.015641735 ubox
14 56 0.969291044 ubox
14 57 0.005976769 ubox
14 64 0.221968761 ubox
14 65 0.035350631 ubox
14 66 0.015861197 ubox
14 67 0.041995766 ubox
14 68 0.020105572 ubox
15 22 0.017339734 ubox
15 55 0.969508397 ubox
15 63 0.236449597 ubox
16 21 0.020140260 ubox
16 51 0.003902523 ubox
16 54 0.968080043 ubox
16 62 0.236357238 ubox
17 22 0.043456292 ubox
17 61 0.208984455 ubox
18 22 0.031414282 ubox
18 60 0.115577043 ubox
18 61 0.022868055 ubox
19 60 0.023390431 ubox
19 61 0.108048066 ubox
20 60 0.202774626 ubox
21 50 0.063923699 ubox
21 53 0.167578449 ubox
21 55 0.017091673 ubox
21 59 0.230636011 ubox
22 26 0.026735361 ubox
22 27 0.051162485 ubox
22 28 0.047238636 ubox
22 29 0.003371298 ubox
22 49 0.055497093 ubox
22 51 0.046903636 ubox
22 52 0.148170350 ubox
22 54 0.016989642 ubox
22 56 0.016401896 ubox
22 57 0.016271810 ubox
22 58 0.229172082 ubox
23 48 0.034106571 ubox
29 50 0.996902497 ubox
29 53 0.012034527 ubox
30 49 0.998037588 ubox
30 52 0.009728248 ubox
31 48 0.999090049 ubox
32 47 0.999969840 ubox
33 45 0.003771910 ubox
33 46 0.997228358 ubox
34 44 0.003762841 ubox
35 44 0.997224323 ubox
36 43 0.999942033 ubox
37 42 0.997195035 ubox
38 42 0.007149245 ubox
51 59 0.005206505 ubox
51 78 0.011793882 ubox
52 77 0.011664011 ubox
53 58 0.007223517 ubox
54 63 0.020148527 ubox
54 75 0.013233563 ubox
55 62 0.020166441 ubox
55 74 0.013245235 ubox
56 61 0.018162533 ubox
56 71 0.004281328 ubox
56 73 0.013013971 ubox
57 70 0.005076517 ubox
57 72 0.012788626 ubox
58 69 0.005239817 ubox
58 70 0.006569089 ubox
58 71 0.009773717 ubox
60 67 0.006278401 ubox
60 68 0.007638255 ubox
61 66 0.006514403 ubox
61 67 0.008027280 ubox
61 68 0.004903054 ubox
62 69 0.003358383 ubox
62 75 0.016239306 ubox
63 74 0.018344049 ubox
64 71 0.015569626 ubox
64 73 0.024817639 ubox
64 76 0.006376938 ubox
64 77 0.014319945 ubox
65 71 0.013385888 ubox
65 73 0.014480084 ubox
65 76 0.015116683 ubox
65 77 0.015546896 ubox
66 71 0.015276528 ubox
66 73 0.023203787 ubox
66 76 0.015982205 ubox
66 77 0.031912892 ubox
67 71 0.007912822 ubox
67 73 0.018655639 ubox
67 76 0.034632808 ubox
67 77 0.020316040 ubox
68 73 0.016816701 ubox
68 76 0.021207039 ubox
68 77 0.010785532 ubox
69 74 0.041783836 ubox
69 79 0.013623911 ubox
70 74 0.019364516 ubox
70 79 0.031078816 ubox
71 79 0.005774643 ubox
72 79 0.040515164 ubox
73 79 0.028252291 ubox
74 78 0.048889079 ubox
75 79 0.014150021 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
