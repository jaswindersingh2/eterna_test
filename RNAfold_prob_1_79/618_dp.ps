%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (618)
} def

/sequence { (\
GGAAAAACAUAGUGUGUGUGUGUGUGUGUGAAAAAAAAAAAAACAUAUAUAUAUAUAUAUAUUGUGAAGUAUAUGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.048472480 ubox
1 70 0.020361676 ubox
1 72 0.045205826 ubox
1 74 0.037535574 ubox
1 76 0.012755077 ubox
1 77 0.007324530 ubox
1 78 0.179373290 ubox
2 8 0.009581627 ubox
2 70 0.042327961 ubox
2 72 0.054119313 ubox
2 74 0.014210122 ubox
2 76 0.010850850 ubox
2 77 0.178659098 ubox
2 78 0.239824574 ubox
3 70 0.076389845 ubox
3 72 0.035229828 ubox
3 74 0.017347008 ubox
3 76 0.175491699 ubox
3 77 0.239376622 ubox
4 70 0.137844019 ubox
4 72 0.030555671 ubox
4 74 0.022249711 ubox
4 76 0.229889967 ubox
4 77 0.016707179 ubox
5 70 0.048468827 ubox
5 72 0.034803629 ubox
5 74 0.041100979 ubox
5 76 0.020551171 ubox
5 77 0.008085300 ubox
6 65 0.005953195 ubox
6 70 0.065827679 ubox
6 72 0.024629761 ubox
6 74 0.045785338 ubox
6 76 0.008687686 ubox
6 77 0.055337254 ubox
7 17 0.003393548 ubox
7 65 0.126791205 ubox
7 70 0.074637855 ubox
7 72 0.058728576 ubox
7 74 0.044422056 ubox
7 76 0.064489694 ubox
7 77 0.005640052 ubox
8 16 0.003575086 ubox
8 64 0.131091098 ubox
8 66 0.977430492 ubox
8 69 0.056931971 ubox
8 75 0.064533166 ubox
9 15 0.003529747 ubox
9 62 0.011778691 ubox
9 63 0.129472198 ubox
9 65 0.987716604 ubox
9 70 0.003205672 ubox
9 72 0.003580157 ubox
9 74 0.062323442 ubox
10 14 0.003267619 ubox
10 61 0.015887899 ubox
10 64 0.988468137 ubox
10 71 0.003810875 ubox
10 73 0.059071163 ubox
11 60 0.012209968 ubox
11 62 0.006441820 ubox
11 63 0.987562770 ubox
11 70 0.003711654 ubox
11 72 0.054348377 ubox
12 56 0.003729870 ubox
12 58 0.009718529 ubox
12 60 0.137944058 ubox
12 62 0.988821312 ubox
13 55 0.004073329 ubox
13 57 0.010317373 ubox
13 59 0.141531203 ubox
13 61 0.989165081 ubox
14 54 0.004601245 ubox
14 56 0.010901834 ubox
14 58 0.144193151 ubox
14 60 0.988896356 ubox
15 53 0.004639835 ubox
15 55 0.011087397 ubox
15 57 0.145487425 ubox
15 59 0.988715186 ubox
16 52 0.004655949 ubox
16 54 0.011458996 ubox
16 56 0.147682377 ubox
16 58 0.988395262 ubox
17 51 0.004657989 ubox
17 53 0.011551123 ubox
17 55 0.148914137 ubox
17 57 0.988211588 ubox
18 50 0.004660440 ubox
18 52 0.011702368 ubox
18 54 0.151068171 ubox
18 56 0.987891199 ubox
19 49 0.004661321 ubox
19 51 0.011775654 ubox
19 53 0.152264550 ubox
19 55 0.987707431 ubox
20 48 0.004662971 ubox
20 50 0.011911545 ubox
20 52 0.154326134 ubox
20 54 0.987387211 ubox
21 47 0.004663785 ubox
21 49 0.011982469 ubox
21 51 0.155493215 ubox
21 53 0.987203349 ubox
22 46 0.004665443 ubox
22 48 0.012114876 ubox
22 50 0.157507456 ubox
22 52 0.986882452 ubox
23 45 0.004667384 ubox
23 47 0.012184596 ubox
23 49 0.158650595 ubox
23 51 0.986698436 ubox
24 44 0.004668829 ubox
24 46 0.012315052 ubox
24 48 0.160624523 ubox
24 50 0.986377345 ubox
25 43 0.004622979 ubox
25 45 0.012386762 ubox
25 47 0.161745640 ubox
25 49 0.986193264 ubox
26 44 0.012438172 ubox
26 46 0.163685001 ubox
26 48 0.985873127 ubox
27 43 0.012325857 ubox
27 45 0.164823634 ubox
27 47 0.985703919 ubox
28 44 0.165607039 ubox
28 46 0.985562320 ubox
29 38 0.003951848 ubox
29 40 0.003230431 ubox
29 41 0.004599595 ubox
29 42 0.008781132 ubox
29 43 0.164376469 ubox
29 45 0.985567188 ubox
30 44 0.982044883 ubox
55 76 0.005691089 ubox
56 75 0.006645233 ubox
57 74 0.008587977 ubox
58 73 0.009211732 ubox
59 72 0.011346252 ubox
60 71 0.014138928 ubox
61 70 0.018501346 ubox
62 69 0.018739963 ubox
63 68 0.018474743 ubox
63 73 0.003635717 ubox
64 72 0.004846630 ubox
65 71 0.005151339 ubox
65 79 0.026196165 ubox
66 70 0.004603336 ubox
66 77 0.005793177 ubox
66 78 0.126011356 ubox
67 72 0.022274720 ubox
67 74 0.028266308 ubox
67 76 0.017698515 ubox
67 77 0.132879444 ubox
68 72 0.012724989 ubox
68 74 0.042656723 ubox
68 76 0.131449217 ubox
68 77 0.031728870 ubox
69 74 0.014165389 ubox
69 76 0.030087859 ubox
69 77 0.018695443 ubox
69 78 0.122812259 ubox
70 75 0.022795332 ubox
70 79 0.010694363 ubox
71 76 0.016655558 ubox
71 77 0.033852819 ubox
72 79 0.012584278 ubox
73 77 0.007909798 ubox
74 79 0.010731978 ubox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 59 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
18 56 0.9500000 lbox
19 55 0.9500000 lbox
20 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
23 51 0.9500000 lbox
24 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
showpage
end
%%EOF
