%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1087)
} def

/sequence { (\
GGAAAAAACACUGCAGCAGCCCGCCGUAGGCAGGGCGAAGUCCGUGGCGAAGCCCGGAAGCUGGAGUGCCGUGACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.019493484 ubox
1 11 0.005638445 ubox
1 12 0.008217175 ubox
1 14 0.010531156 ubox
1 17 0.004250933 ubox
1 69 0.013210533 ubox
1 70 0.434151574 ubox
1 72 0.007536337 ubox
1 75 0.211048900 ubox
1 76 0.151098456 ubox
1 77 0.015999422 ubox
1 78 0.326013035 ubox
2 9 0.008385359 ubox
2 11 0.008713884 ubox
2 69 0.434296288 ubox
2 70 0.015694193 ubox
2 72 0.012215397 ubox
2 75 0.173961497 ubox
2 76 0.019536369 ubox
2 77 0.323260200 ubox
2 78 0.335708829 ubox
3 12 0.009590095 ubox
3 72 0.031844820 ubox
3 76 0.309843454 ubox
3 77 0.334852574 ubox
4 67 0.003379005 ubox
4 72 0.189780130 ubox
4 76 0.311573706 ubox
4 77 0.013799801 ubox
5 72 0.218268230 ubox
5 76 0.016127788 ubox
5 77 0.006504991 ubox
6 72 0.095678949 ubox
6 76 0.007320795 ubox
6 77 0.005814362 ubox
7 72 0.187060835 ubox
7 76 0.006247341 ubox
7 77 0.010538567 ubox
8 72 0.172261151 ubox
8 76 0.011732597 ubox
8 77 0.004541990 ubox
9 16 0.004535709 ubox
9 68 0.986102722 ubox
9 71 0.128167935 ubox
9 73 0.014940016 ubox
10 67 0.997832363 ubox
10 72 0.014293754 ubox
11 19 0.005618404 ubox
11 66 0.998606545 ubox
11 71 0.013658186 ubox
12 18 0.007383777 ubox
12 65 0.995396419 ubox
13 17 0.007527222 ubox
13 69 0.012656242 ubox
14 63 0.998438033 ubox
14 64 0.004953516 ubox
14 68 0.012579154 ubox
15 62 0.998463046 ubox
15 67 0.011493310 ubox
16 61 0.998691955 ubox
17 37 0.013843621 ubox
17 40 0.005769796 ubox
17 60 0.997547749 ubox
17 63 0.010955507 ubox
18 41 0.004655955 ubox
18 62 0.011051567 ubox
19 36 0.997113622 ubox
19 41 0.007454637 ubox
19 61 0.010944080 ubox
20 34 0.011260368 ubox
20 35 0.998355676 ubox
20 40 0.009395556 ubox
20 57 0.014601105 ubox
20 60 0.010883974 ubox
21 33 0.013014232 ubox
21 34 0.998343944 ubox
21 40 0.003667188 ubox
21 56 0.014531777 ubox
21 57 0.003497988 ubox
22 33 0.997804586 ubox
22 37 0.053049464 ubox
22 56 0.003619477 ubox
23 31 0.993630959 ubox
23 36 0.053645706 ubox
24 29 0.007153092 ubox
24 30 0.996655534 ubox
24 35 0.053630376 ubox
25 29 0.989412497 ubox
25 30 0.048824446 ubox
25 34 0.053608695 ubox
26 31 0.004596291 ubox
27 32 0.024807383 ubox
33 55 0.014981569 ubox
34 54 0.015002145 ubox
35 53 0.015002548 ubox
36 40 0.004047164 ubox
36 52 0.014999043 ubox
36 79 0.008259097 ubox
37 41 0.006625046 ubox
37 42 0.004629179 ubox
37 78 0.048549201 ubox
38 77 0.048596402 ubox
39 62 0.003962485 ubox
39 76 0.048601550 ubox
40 48 0.014964830 ubox
40 61 0.004205571 ubox
40 75 0.048628530 ubox
41 47 0.014920417 ubox
41 58 0.933021689 ubox
41 59 0.042780744 ubox
41 74 0.048582451 ubox
42 46 0.014399324 ubox
42 57 0.998348303 ubox
42 73 0.043853339 ubox
43 56 0.998637045 ubox
43 57 0.006446403 ubox
43 71 0.013156157 ubox
43 73 0.020814115 ubox
44 55 0.998111641 ubox
44 70 0.010184916 ubox
44 72 0.027886954 ubox
45 71 0.042600002 ubox
46 53 0.023963383 ubox
46 54 0.998253519 ubox
46 55 0.003329383 ubox
46 70 0.046706221 ubox
47 53 0.998338481 ubox
47 54 0.003408587 ubox
47 67 0.009218940 ubox
47 69 0.046894025 ubox
47 72 0.008880642 ubox
48 52 0.991080530 ubox
48 66 0.009247190 ubox
48 68 0.046890169 ubox
48 71 0.008948772 ubox
49 67 0.033098674 ubox
49 70 0.008935897 ubox
50 67 0.006295925 ubox
51 62 0.011183764 ubox
51 67 0.007697110 ubox
52 61 0.011488686 ubox
52 67 0.031117158 ubox
53 60 0.011458396 ubox
53 64 0.009986358 ubox
53 66 0.033677406 ubox
54 63 0.009799095 ubox
54 64 0.046133283 ubox
55 63 0.046208917 ubox
56 61 0.009457300 ubox
56 62 0.045704730 ubox
57 61 0.044727904 ubox
63 78 0.008092925 ubox
64 77 0.010883855 ubox
64 78 0.003693125 ubox
65 76 0.011475011 ubox
66 75 0.011885375 ubox
67 74 0.011862703 ubox
68 75 0.006210236 ubox
69 73 0.025982295 ubox
69 79 0.015823283 ubox
70 79 0.263501388 ubox
71 75 0.032605003 ubox
71 76 0.011536589 ubox
71 77 0.019042185 ubox
71 78 0.287410293 ubox
72 79 0.067886238 ubox
73 77 0.010407646 ubox
73 78 0.115743430 ubox
75 79 0.014579898 ubox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
showpage
end
%%EOF
