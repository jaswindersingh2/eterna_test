%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (217)
} def

/sequence { (\
GGAAAAGAUAGGUAUAGAUCCAUAAAAAUGAGAUCAAAAGAUGACAUAAAAAUGCAUCAAUACAGAUCGCUUAGGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.003431433 ubox
1 21 0.015703039 ubox
1 63 0.008088696 ubox
1 68 0.005289231 ubox
1 70 0.015133380 ubox
1 71 0.035760077 ubox
1 72 0.036474867 ubox
1 76 0.019824219 ubox
1 77 0.017917243 ubox
1 78 0.406522128 ubox
2 20 0.015713690 ubox
2 63 0.004330786 ubox
2 67 0.003773415 ubox
2 68 0.011407115 ubox
2 70 0.040321641 ubox
2 71 0.038024931 ubox
2 72 0.155614742 ubox
2 76 0.026787628 ubox
2 77 0.405085509 ubox
2 78 0.438857221 ubox
3 9 0.003570521 ubox
3 19 0.015063319 ubox
3 67 0.010557952 ubox
3 71 0.152887816 ubox
3 72 0.323126504 ubox
3 76 0.394673463 ubox
3 77 0.437790042 ubox
4 9 0.003727557 ubox
4 71 0.344660139 ubox
4 72 0.186295385 ubox
4 76 0.419374224 ubox
4 77 0.020017769 ubox
5 71 0.189780326 ubox
5 72 0.146347930 ubox
5 76 0.022537384 ubox
5 77 0.050414048 ubox
6 13 0.006631972 ubox
6 15 0.006959237 ubox
6 71 0.146217988 ubox
6 72 0.033721071 ubox
6 76 0.060506505 ubox
6 77 0.013266596 ubox
7 20 0.005549539 ubox
7 63 0.005742487 ubox
7 67 0.003538886 ubox
7 68 0.926270883 ubox
7 70 0.117542441 ubox
7 71 0.008022614 ubox
7 72 0.018833554 ubox
7 76 0.014283086 ubox
7 77 0.013869615 ubox
7 78 0.039580112 ubox
8 13 0.003244459 ubox
8 15 0.010392656 ubox
8 19 0.005582673 ubox
8 23 0.003483647 ubox
8 61 0.004462726 ubox
8 67 0.929463432 ubox
8 71 0.018720296 ubox
8 72 0.014689044 ubox
8 76 0.015109127 ubox
8 77 0.037672323 ubox
9 14 0.009924270 ubox
9 16 0.016695431 ubox
9 18 0.005560730 ubox
9 22 0.003556584 ubox
9 60 0.004386339 ubox
9 62 0.003256316 ubox
9 64 0.004221796 ubox
9 65 0.013484721 ubox
9 66 0.926274197 ubox
9 69 0.010450208 ubox
9 73 0.299877208 ubox
9 74 0.003863118 ubox
9 75 0.012749675 ubox
10 15 0.017319721 ubox
10 61 0.003248198 ubox
10 67 0.018140202 ubox
10 71 0.028262560 ubox
10 72 0.302583608 ubox
11 20 0.004191765 ubox
11 21 0.010864455 ubox
11 63 0.018220072 ubox
11 68 0.050093480 ubox
11 70 0.028917924 ubox
11 71 0.303505034 ubox
11 78 0.011699841 ubox
12 19 0.004152012 ubox
12 20 0.010871531 ubox
12 61 0.008126526 ubox
12 63 0.941087756 ubox
12 67 0.048402317 ubox
12 68 0.010472258 ubox
12 70 0.303715562 ubox
12 77 0.005137451 ubox
12 78 0.006076647 ubox
13 18 0.004359251 ubox
13 37 0.005143077 ubox
13 38 0.005335583 ubox
13 39 0.007846545 ubox
13 60 0.008234091 ubox
13 62 0.940608529 ubox
13 64 0.004223923 ubox
13 66 0.047377975 ubox
13 69 0.295041837 ubox
14 61 0.934820479 ubox
14 67 0.092634755 ubox
15 24 0.003579941 ubox
15 36 0.039150839 ubox
15 37 0.058659790 ubox
15 38 0.013579778 ubox
15 39 0.013549567 ubox
15 59 0.034336285 ubox
15 60 0.896067603 ubox
15 62 0.009396718 ubox
15 64 0.009617118 ubox
15 65 0.017553706 ubox
15 66 0.090825773 ubox
16 23 0.003808869 ubox
16 61 0.010549674 ubox
16 67 0.013654277 ubox
17 35 0.927945661 ubox
17 58 0.364117163 ubox
17 68 0.040906187 ubox
17 78 0.017930393 ubox
18 34 0.928863513 ubox
18 57 0.364454814 ubox
18 67 0.040883493 ubox
18 77 0.017474694 ubox
19 31 0.005722487 ubox
19 32 0.004566928 ubox
19 33 0.929002301 ubox
19 56 0.349508676 ubox
19 66 0.040838508 ubox
20 30 0.005043843 ubox
20 32 0.929066234 ubox
20 54 0.020700400 ubox
20 65 0.040687190 ubox
20 75 0.018105590 ubox
21 30 0.927556617 ubox
21 32 0.009021776 ubox
21 54 0.361688506 ubox
21 74 0.018125979 ubox
22 29 0.914105308 ubox
22 53 0.360790575 ubox
23 27 0.021007761 ubox
23 28 0.863386329 ubox
23 30 0.019621343 ubox
23 31 0.005107261 ubox
23 50 0.003377219 ubox
23 51 0.011757550 ubox
23 52 0.340695815 ubox
23 62 0.007218479 ubox
23 73 0.016413586 ubox
24 29 0.018735888 ubox
24 61 0.006887002 ubox
24 72 0.016339768 ubox
25 29 0.005272325 ubox
25 71 0.015584570 ubox
25 72 0.003320570 ubox
26 47 0.003346025 ubox
26 71 0.003398975 ubox
26 76 0.003266919 ubox
27 47 0.011505424 ubox
27 72 0.004750940 ubox
28 47 0.339805042 ubox
28 71 0.005055974 ubox
28 72 0.004213229 ubox
29 36 0.013602152 ubox
29 46 0.359886448 ubox
29 48 0.005842014 ubox
29 69 0.007489768 ubox
29 73 0.004801789 ubox
30 35 0.015080388 ubox
30 45 0.361138846 ubox
30 47 0.006060011 ubox
30 68 0.008168747 ubox
30 70 0.017737294 ubox
30 72 0.004954894 ubox
31 47 0.004450066 ubox
31 67 0.008113120 ubox
31 71 0.004745346 ubox
32 42 0.013232473 ubox
32 45 0.007371878 ubox
32 68 0.035297651 ubox
32 70 0.003237249 ubox
33 42 0.362549157 ubox
33 67 0.035487743 ubox
34 41 0.363696097 ubox
34 44 0.026143714 ubox
34 64 0.004065982 ubox
34 66 0.035537138 ubox
35 40 0.363211082 ubox
35 43 0.026384794 ubox
35 65 0.035484097 ubox
36 42 0.024667785 ubox
36 61 0.009201127 ubox
37 61 0.032286366 ubox
38 61 0.014122009 ubox
39 61 0.011865676 ubox
40 58 0.929263299 ubox
40 68 0.003183100 ubox
41 57 0.930194428 ubox
42 56 0.930205866 ubox
42 59 0.015654503 ubox
43 55 0.930409416 ubox
43 58 0.017396256 ubox
43 77 0.004179445 ubox
43 78 0.004018207 ubox
44 53 0.022501458 ubox
44 57 0.016578853 ubox
44 76 0.005133065 ubox
44 77 0.003473510 ubox
45 54 0.927182807 ubox
45 75 0.005508374 ubox
46 53 0.913688779 ubox
47 51 0.023137915 ubox
47 52 0.862989385 ubox
47 54 0.010212814 ubox
47 73 0.004691623 ubox
48 53 0.010047215 ubox
48 72 0.004956692 ubox
49 71 0.004820612 ubox
54 68 0.005240322 ubox
54 70 0.010326745 ubox
55 69 0.010389621 ubox
56 67 0.014248005 ubox
57 66 0.015181554 ubox
58 65 0.016002742 ubox
59 67 0.006478734 ubox
59 77 0.003792020 ubox
60 67 0.028632284 ubox
60 76 0.004334626 ubox
61 65 0.004707768 ubox
61 66 0.028938955 ubox
61 73 0.003549452 ubox
61 75 0.004272517 ubox
62 67 0.006846150 ubox
62 72 0.003680492 ubox
62 76 0.007901972 ubox
63 69 0.013383904 ubox
63 74 0.005549799 ubox
63 75 0.008856213 ubox
63 79 0.038470464 ubox
64 71 0.014091140 ubox
64 77 0.004084840 ubox
65 70 0.014999308 ubox
65 72 0.005446612 ubox
65 77 0.125245933 ubox
65 78 0.080065767 ubox
66 71 0.005138697 ubox
66 72 0.007536249 ubox
66 76 0.137868252 ubox
66 77 0.070636793 ubox
67 75 0.143030364 ubox
68 74 0.144474463 ubox
68 75 0.055717927 ubox
68 79 0.009042701 ubox
69 76 0.292261108 ubox
69 77 0.014352207 ubox
69 78 0.037578418 ubox
70 74 0.026177765 ubox
70 75 0.307024430 ubox
70 79 0.024913167 ubox
71 75 0.007173969 ubox
71 79 0.003656227 ubox
72 79 0.007625195 ubox
73 77 0.006147739 ubox
74 78 0.028070945 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
