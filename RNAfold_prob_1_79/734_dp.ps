%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (734)
} def

/sequence { (\
GGAAACCAACGUAGGCAAAAGGAAAAAAGCACUGCAGGGCCCUGAAGUGCACCGCCUUCGUUGUUAUGAGCACCUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.116888141 ubox
1 7 0.081886837 ubox
1 10 0.009514998 ubox
1 42 0.004138801 ubox
1 64 0.006293950 ubox
1 65 0.022769111 ubox
1 67 0.050508394 ubox
1 71 0.133306189 ubox
1 73 0.031353518 ubox
1 74 0.163727930 ubox
1 75 0.015707561 ubox
1 77 0.009414552 ubox
1 78 0.206037195 ubox
2 6 0.083346584 ubox
2 7 0.012545760 ubox
2 41 0.004140129 ubox
2 64 0.025396236 ubox
2 65 0.079649409 ubox
2 67 0.076811544 ubox
2 71 0.056742228 ubox
2 73 0.163629397 ubox
2 74 0.017992365 ubox
2 75 0.003403571 ubox
2 76 0.014594318 ubox
2 77 0.205567231 ubox
2 78 0.232471781 ubox
3 64 0.080467186 ubox
3 65 0.100436108 ubox
3 67 0.099690699 ubox
3 75 0.015438905 ubox
3 76 0.203607738 ubox
3 77 0.232296285 ubox
4 64 0.089412968 ubox
4 65 0.431501098 ubox
4 67 0.051391724 ubox
4 75 0.177924034 ubox
4 76 0.222797500 ubox
4 77 0.006566640 ubox
5 12 0.007494357 ubox
5 64 0.465277590 ubox
5 65 0.220715641 ubox
5 67 0.089911290 ubox
5 75 0.196155246 ubox
5 76 0.007105075 ubox
6 11 0.007799219 ubox
6 15 0.025380080 ubox
6 38 0.004365215 ubox
6 63 0.334672609 ubox
6 68 0.080806896 ubox
6 70 0.060171552 ubox
6 79 0.008100276 ubox
7 14 0.025536359 ubox
7 37 0.004368753 ubox
7 63 0.921163220 ubox
7 68 0.023757321 ubox
7 70 0.016942572 ubox
8 61 0.011449512 ubox
8 62 0.984580397 ubox
8 65 0.006413546 ubox
8 67 0.020767444 ubox
9 61 0.988472117 ubox
9 62 0.004292896 ubox
9 64 0.007150673 ubox
10 15 0.003580801 ubox
10 60 0.989294053 ubox
10 63 0.007151033 ubox
10 68 0.125128390 ubox
10 70 0.036773853 ubox
10 79 0.010392170 ubox
11 35 0.006313095 ubox
11 58 0.006796302 ubox
11 59 0.983908104 ubox
11 62 0.005935484 ubox
11 67 0.126834689 ubox
11 71 0.008257289 ubox
11 78 0.010908395 ubox
12 34 0.006322181 ubox
12 66 0.126726917 ubox
12 68 0.037834104 ubox
12 69 0.004338472 ubox
12 70 0.007978445 ubox
13 33 0.006323112 ubox
13 57 0.925006397 ubox
13 58 0.037607311 ubox
13 61 0.003228514 ubox
13 65 0.112558911 ubox
13 67 0.037617842 ubox
13 75 0.012043753 ubox
14 32 0.006315889 ubox
14 56 0.988758379 ubox
14 57 0.011147332 ubox
14 62 0.013055027 ubox
14 64 0.080801767 ubox
14 65 0.072741779 ubox
14 74 0.012532831 ubox
15 30 0.006252527 ubox
15 55 0.988811758 ubox
15 56 0.010155110 ubox
15 59 0.003708976 ubox
15 61 0.019345607 ubox
15 64 0.112601758 ubox
15 65 0.003362585 ubox
15 71 0.003337097 ubox
15 73 0.012378038 ubox
15 78 0.003283485 ubox
16 21 0.018396040 ubox
16 22 0.014410836 ubox
16 29 0.006258451 ubox
16 54 0.987741677 ubox
16 60 0.019682099 ubox
16 63 0.136985994 ubox
16 70 0.003452856 ubox
16 79 0.007293351 ubox
17 61 0.005197564 ubox
17 62 0.136592214 ubox
18 58 0.006270856 ubox
18 61 0.123631214 ubox
18 62 0.003283903 ubox
18 77 0.020387712 ubox
19 57 0.004910130 ubox
19 58 0.129746466 ubox
19 61 0.003349419 ubox
19 62 0.003836497 ubox
19 76 0.022570310 ubox
20 33 0.004687436 ubox
20 57 0.143125678 ubox
20 58 0.006546645 ubox
20 61 0.006280550 ubox
20 75 0.023116082 ubox
21 30 0.004982217 ubox
21 32 0.004867826 ubox
21 50 0.010454533 ubox
21 52 0.041113975 ubox
21 53 0.820130246 ubox
21 56 0.144488709 ubox
21 57 0.006463603 ubox
21 59 0.014964050 ubox
21 74 0.023242617 ubox
22 50 0.011568432 ubox
22 52 0.819469600 ubox
22 53 0.056311696 ubox
22 55 0.144432595 ubox
22 56 0.006622391 ubox
22 58 0.014816459 ubox
22 59 0.009302513 ubox
22 73 0.023134166 ubox
22 78 0.003692783 ubox
23 57 0.014221728 ubox
23 58 0.009301103 ubox
23 77 0.003685235 ubox
24 57 0.008618833 ubox
24 76 0.003600765 ubox
25 75 0.003245824 ubox
29 35 0.008035313 ubox
29 50 0.998430839 ubox
29 52 0.004021239 ubox
29 53 0.004974373 ubox
30 34 0.007985760 ubox
30 49 0.999873332 ubox
31 48 0.999686311 ubox
32 47 0.999760241 ubox
33 45 0.034412747 ubox
33 46 0.887227656 ubox
33 51 0.003808839 ubox
34 40 0.011320593 ubox
34 50 0.004127738 ubox
35 39 0.011264340 ubox
35 44 0.992769056 ubox
35 49 0.004125601 ubox
36 43 0.997599701 ubox
36 48 0.003997798 ubox
37 41 0.016406091 ubox
37 42 0.993296297 ubox
37 43 0.036233228 ubox
37 53 0.009849746 ubox
37 57 0.003422217 ubox
38 42 0.039043101 ubox
38 43 0.004278547 ubox
38 52 0.009853446 ubox
38 56 0.003491503 ubox
39 50 0.009832781 ubox
39 55 0.003494603 ubox
40 49 0.009828855 ubox
40 54 0.003491882 ubox
41 47 0.004776199 ubox
42 47 0.004821710 ubox
43 51 0.003277365 ubox
43 60 0.003256465 ubox
44 50 0.003343901 ubox
44 59 0.004984896 ubox
45 58 0.004988387 ubox
46 57 0.004989639 ubox
47 56 0.004963945 ubox
49 55 0.004847121 ubox
50 54 0.004819574 ubox
54 71 0.020934078 ubox
55 70 0.020308282 ubox
56 68 0.003232026 ubox
56 70 0.005620000 ubox
57 69 0.005208622 ubox
57 70 0.011119495 ubox
58 69 0.025971766 ubox
59 68 0.027998313 ubox
60 67 0.027574140 ubox
60 71 0.017191381 ubox
60 73 0.005472016 ubox
60 74 0.006707582 ubox
61 66 0.027075472 ubox
61 70 0.017234421 ubox
61 72 0.003985164 ubox
62 69 0.017213590 ubox
62 72 0.044774217 ubox
63 71 0.069666815 ubox
63 73 0.011295036 ubox
63 74 0.003941588 ubox
63 78 0.007677294 ubox
64 68 0.009752951 ubox
64 69 0.014671398 ubox
64 70 0.071113318 ubox
64 72 0.013803739 ubox
64 79 0.007623095 ubox
65 69 0.055433761 ubox
65 70 0.017916691 ubox
65 72 0.017448496 ubox
65 79 0.012439671 ubox
66 75 0.016644451 ubox
66 76 0.017709817 ubox
66 77 0.016969034 ubox
67 72 0.015103791 ubox
67 79 0.304082894 ubox
68 73 0.049614546 ubox
68 74 0.087210671 ubox
68 75 0.016254713 ubox
68 76 0.155102198 ubox
68 77 0.061730824 ubox
68 78 0.496895780 ubox
69 75 0.170231942 ubox
69 76 0.070938785 ubox
69 77 0.492321405 ubox
70 74 0.170203792 ubox
70 75 0.057305570 ubox
70 76 0.419036357 ubox
70 77 0.014933293 ubox
70 78 0.029412111 ubox
71 79 0.023050329 ubox
72 76 0.013546645 ubox
72 77 0.014407198 ubox
73 79 0.027465991 ubox
74 79 0.032374426 ubox
75 79 0.004742557 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
