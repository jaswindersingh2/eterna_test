%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (970)
} def

/sequence { (\
GGAAAGCUACAGAUCUUCGGAUCAGAUCUAGACUUCGUAUGUCUAGGUCAGUACUUCGGUACAGUAGCGGAGGUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.080724875 ubox
1 8 0.103388947 ubox
1 10 0.180544087 ubox
1 18 0.003386448 ubox
1 74 0.026194609 ubox
1 75 0.188909508 ubox
1 76 0.415479861 ubox
1 77 0.020007581 ubox
1 78 0.143049584 ubox
2 7 0.109076753 ubox
2 8 0.013369360 ubox
2 10 0.031862798 ubox
2 17 0.003322058 ubox
2 18 0.004961850 ubox
2 74 0.185200287 ubox
2 75 0.479829642 ubox
2 76 0.007329147 ubox
2 77 0.133587637 ubox
2 78 0.189627479 ubox
3 8 0.020290231 ubox
3 16 0.003185985 ubox
3 17 0.004567886 ubox
3 74 0.477870631 ubox
3 76 0.113293701 ubox
3 77 0.187608886 ubox
4 8 0.009383402 ubox
4 16 0.003901650 ubox
4 74 0.010246387 ubox
4 76 0.120191966 ubox
4 77 0.021672898 ubox
5 16 0.003819342 ubox
5 74 0.039949439 ubox
5 76 0.024680943 ubox
5 77 0.010725186 ubox
6 10 0.023973074 ubox
6 15 0.004306563 ubox
6 52 0.017288192 ubox
6 65 0.005254001 ubox
6 68 0.795511313 ubox
6 74 0.054806992 ubox
6 75 0.023994657 ubox
6 76 0.005726548 ubox
6 77 0.012521401 ubox
6 78 0.037856522 ubox
7 51 0.017701134 ubox
7 64 0.005383037 ubox
7 67 0.796814449 ubox
7 70 0.004691162 ubox
7 72 0.014642299 ubox
7 73 0.056659940 ubox
7 79 0.040804494 ubox
8 24 0.004534260 ubox
8 50 0.016867974 ubox
8 53 0.011758077 ubox
8 63 0.005128823 ubox
8 66 0.796592176 ubox
8 69 0.004402459 ubox
8 71 0.013123074 ubox
8 72 0.032370788 ubox
8 73 0.003874429 ubox
8 79 0.033097300 ubox
9 52 0.013277207 ubox
9 65 0.796447752 ubox
9 74 0.009622707 ubox
9 76 0.006894954 ubox
9 77 0.047479107 ubox
10 25 0.003634260 ubox
10 51 0.013408154 ubox
10 64 0.795494117 ubox
10 67 0.003742527 ubox
10 69 0.014661504 ubox
10 70 0.014488471 ubox
10 73 0.010240325 ubox
10 79 0.050393784 ubox
11 76 0.530846358 ubox
11 77 0.025021534 ubox
12 18 0.008704060 ubox
12 23 0.818695946 ubox
12 62 0.013000881 ubox
12 75 0.571355024 ubox
12 76 0.003616923 ubox
12 78 0.004063991 ubox
13 17 0.007584594 ubox
13 22 0.819499676 ubox
13 60 0.007222735 ubox
13 74 0.571499699 ubox
13 77 0.003432576 ubox
14 20 0.006248578 ubox
14 21 0.819536660 ubox
14 59 0.006944466 ubox
14 61 0.004007409 ubox
14 73 0.571205120 ubox
15 19 0.011391186 ubox
15 20 0.818982126 ubox
15 58 0.006438538 ubox
15 59 0.007475443 ubox
15 72 0.571565454 ubox
15 73 0.006648473 ubox
16 58 0.006737586 ubox
16 71 0.571380138 ubox
16 72 0.006670636 ubox
17 59 0.016788872 ubox
17 70 0.571059900 ubox
17 71 0.009595313 ubox
18 58 0.017850950 ubox
18 69 0.571374297 ubox
18 70 0.011724198 ubox
19 23 0.006263442 ubox
19 55 0.007743571 ubox
19 57 0.018085352 ubox
19 68 0.566739057 ubox
20 49 0.004772374 ubox
20 54 0.008318963 ubox
20 56 0.017972115 ubox
20 65 0.012784422 ubox
20 68 0.022459697 ubox
21 48 0.004533133 ubox
21 52 0.004990204 ubox
21 55 0.017339334 ubox
21 65 0.117018852 ubox
22 47 0.003878965 ubox
22 50 0.011535683 ubox
22 51 0.004688273 ubox
22 53 0.006123525 ubox
22 63 0.032525141 ubox
22 64 0.110809360 ubox
22 66 0.044573203 ubox
22 67 0.012361015 ubox
23 51 0.020325454 ubox
23 64 0.341564972 ubox
23 67 0.035398205 ubox
24 52 0.003489498 ubox
24 65 0.018122717 ubox
25 49 0.998521606 ubox
26 48 0.999610855 ubox
27 47 0.999224750 ubox
28 46 0.999922690 ubox
29 45 0.999698117 ubox
30 44 0.999699756 ubox
31 43 0.999981254 ubox
32 42 0.999827370 ubox
33 41 0.999479427 ubox
34 39 0.129781913 ubox
34 41 0.014568845 ubox
35 39 0.102231186 ubox
36 41 0.007053806 ubox
49 64 0.006077007 ubox
50 65 0.011593267 ubox
50 76 0.155077691 ubox
50 77 0.015276060 ubox
51 57 0.006511588 ubox
51 62 0.978473411 ubox
51 68 0.004516657 ubox
51 75 0.172687237 ubox
51 76 0.015458680 ubox
51 77 0.003604736 ubox
51 78 0.009530229 ubox
52 61 0.979675063 ubox
52 66 0.028060948 ubox
52 67 0.003383163 ubox
53 60 0.979769210 ubox
53 65 0.029906191 ubox
53 74 0.091121676 ubox
54 58 0.012035068 ubox
54 59 0.978941986 ubox
54 64 0.030075027 ubox
54 67 0.012379719 ubox
54 72 0.166865033 ubox
54 73 0.094220516 ubox
55 59 0.004016720 ubox
55 63 0.028929110 ubox
55 66 0.011713973 ubox
55 71 0.167369355 ubox
55 72 0.094073948 ubox
56 61 0.003592016 ubox
56 70 0.167337484 ubox
56 71 0.094392877 ubox
57 64 0.012593537 ubox
57 69 0.167590403 ubox
57 70 0.094268132 ubox
58 62 0.004195433 ubox
58 68 0.167169115 ubox
59 68 0.094812443 ubox
60 66 0.154913647 ubox
60 67 0.093672934 ubox
61 65 0.137746842 ubox
62 67 0.007865775 ubox
64 68 0.006086263 ubox
67 74 0.006091259 ubox
68 73 0.008218521 ubox
68 79 0.032346742 ubox
69 74 0.014282528 ubox
69 75 0.068446376 ubox
69 76 0.098839341 ubox
69 77 0.012984651 ubox
69 78 0.262495284 ubox
70 74 0.044620015 ubox
70 75 0.106791310 ubox
70 76 0.013842823 ubox
70 77 0.256565924 ubox
70 78 0.234606859 ubox
71 76 0.237885561 ubox
71 77 0.230898900 ubox
72 76 0.156705158 ubox
72 77 0.009523891 ubox
72 78 0.060724323 ubox
73 77 0.039598474 ubox
73 78 0.064109613 ubox
74 79 0.004066985 ubox
75 79 0.006150064 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
showpage
end
%%EOF
