%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (255)
} def

/sequence { (\
GGAAAAAACAUCAACUACAAAAGUAGAGUCAAGACAAAGAGACAAAAGACUCAGUCAAGACAAGAUGAGGACUAGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.092361706 ubox
1 11 0.003916835 ubox
1 12 0.054713745 ubox
1 15 0.005402687 ubox
1 16 0.003446085 ubox
1 18 0.004876628 ubox
1 35 0.004542772 ubox
1 72 0.044797099 ubox
1 73 0.085009531 ubox
1 76 0.014535132 ubox
1 77 0.013247481 ubox
1 78 0.388021740 ubox
2 9 0.038372047 ubox
2 11 0.048309370 ubox
2 12 0.081868223 ubox
2 15 0.003778151 ubox
2 30 0.004530671 ubox
2 72 0.089689958 ubox
2 73 0.018083494 ubox
2 76 0.019778486 ubox
2 77 0.387077589 ubox
2 78 0.369092423 ubox
3 11 0.079015641 ubox
3 29 0.004385978 ubox
3 66 0.003240352 ubox
3 73 0.033031296 ubox
3 76 0.381592461 ubox
3 77 0.368571494 ubox
4 11 0.009660567 ubox
4 73 0.034024096 ubox
4 76 0.357454330 ubox
4 77 0.017593157 ubox
5 11 0.006376688 ubox
5 66 0.003266537 ubox
5 73 0.036420981 ubox
5 76 0.021774058 ubox
5 77 0.011884638 ubox
6 11 0.006845194 ubox
6 66 0.003496058 ubox
6 73 0.066881854 ubox
6 76 0.013880458 ubox
6 77 0.008782385 ubox
7 11 0.004179001 ubox
7 66 0.005224689 ubox
7 73 0.056968656 ubox
7 76 0.009132480 ubox
7 77 0.058377955 ubox
8 24 0.006134408 ubox
8 29 0.015070539 ubox
8 66 0.004873961 ubox
8 73 0.025058170 ubox
8 76 0.066523246 ubox
8 77 0.004716361 ubox
9 23 0.006357284 ubox
9 28 0.016121041 ubox
9 33 0.003237342 ubox
9 64 0.014486695 ubox
9 67 0.811527661 ubox
9 69 0.130482108 ubox
9 70 0.149977811 ubox
9 75 0.066911504 ubox
9 79 0.016343421 ubox
10 29 0.006286478 ubox
10 66 0.819625785 ubox
10 73 0.012751235 ubox
10 76 0.004809202 ubox
11 27 0.081192878 ubox
11 28 0.006471226 ubox
11 34 0.003558576 ubox
11 49 0.003378875 ubox
11 60 0.003301072 ubox
11 63 0.003295052 ubox
11 65 0.820984193 ubox
11 67 0.006030476 ubox
11 68 0.375842796 ubox
11 69 0.013429816 ubox
11 70 0.027739168 ubox
11 71 0.050859876 ubox
11 74 0.004662361 ubox
11 75 0.004728386 ubox
11 79 0.012400170 ubox
12 26 0.085912479 ubox
12 28 0.005492924 ubox
12 33 0.003878906 ubox
12 48 0.003833564 ubox
12 59 0.003602506 ubox
12 64 0.820394494 ubox
12 67 0.381377215 ubox
12 69 0.031802044 ubox
12 70 0.052214243 ubox
12 75 0.007455597 ubox
12 79 0.020157470 ubox
13 24 0.004401353 ubox
13 66 0.343992267 ubox
13 77 0.074049666 ubox
14 24 0.122693151 ubox
14 29 0.007679686 ubox
14 66 0.015373689 ubox
14 76 0.083135120 ubox
15 23 0.126113898 ubox
15 26 0.978246260 ubox
15 28 0.007688921 ubox
15 64 0.050418761 ubox
15 67 0.005619307 ubox
15 69 0.006741752 ubox
15 75 0.084231363 ubox
16 21 0.006869117 ubox
16 22 0.123207733 ubox
16 25 0.984872541 ubox
16 26 0.004384683 ubox
16 27 0.007309484 ubox
16 62 0.003844121 ubox
16 63 0.041838654 ubox
16 68 0.006510742 ubox
16 74 0.083635301 ubox
17 24 0.985662920 ubox
17 73 0.079008436 ubox
18 23 0.984048941 ubox
18 26 0.011161337 ubox
18 59 0.005126000 ubox
18 67 0.007032326 ubox
18 69 0.007127283 ubox
18 70 0.027207657 ubox
19 24 0.003713656 ubox
19 66 0.006390251 ubox
21 66 0.003475068 ubox
21 77 0.005669075 ubox
22 55 0.005805455 ubox
22 66 0.010405899 ubox
22 73 0.006431556 ubox
22 76 0.006248902 ubox
23 56 0.006581662 ubox
23 66 0.067143905 ubox
23 72 0.007392777 ubox
24 53 0.007990762 ubox
24 54 0.003264845 ubox
24 62 0.003408812 ubox
24 63 0.006066295 ubox
24 64 0.004117563 ubox
24 65 0.067312899 ubox
24 67 0.017394556 ubox
24 71 0.007241081 ubox
24 74 0.006513174 ubox
25 66 0.017690863 ubox
25 73 0.006550497 ubox
26 43 0.004461312 ubox
26 52 0.046945221 ubox
26 72 0.006497445 ubox
27 51 0.048544173 ubox
27 66 0.007421268 ubox
27 73 0.032814389 ubox
28 35 0.015122459 ubox
28 43 0.085746273 ubox
28 50 0.048800931 ubox
28 61 0.989198191 ubox
28 72 0.033888804 ubox
29 34 0.014005530 ubox
29 40 0.015477544 ubox
29 42 0.085825457 ubox
29 49 0.048807500 ubox
29 60 0.990488656 ubox
29 71 0.033856628 ubox
30 39 0.016651702 ubox
30 41 0.085765349 ubox
30 48 0.048762781 ubox
30 59 0.990022475 ubox
30 70 0.033789900 ubox
33 43 0.009031341 ubox
33 56 0.992434313 ubox
33 77 0.003540936 ubox
34 55 0.993152149 ubox
34 76 0.003896804 ubox
35 39 0.003867363 ubox
35 41 0.011755966 ubox
35 54 0.992287879 ubox
35 75 0.004056352 ubox
36 55 0.005632993 ubox
38 51 0.109058984 ubox
39 43 0.003225063 ubox
39 50 0.109386409 ubox
39 51 0.003821220 ubox
39 52 0.985406184 ubox
39 78 0.018920418 ubox
40 51 0.985932133 ubox
40 77 0.017754943 ubox
41 50 0.984581002 ubox
41 52 0.013715745 ubox
41 56 0.009361257 ubox
41 76 0.014483168 ubox
41 77 0.017650995 ubox
41 78 0.012682686 ubox
42 51 0.013523524 ubox
42 55 0.009377526 ubox
42 76 0.021522544 ubox
42 77 0.011442673 ubox
43 48 0.549288139 ubox
43 54 0.009373797 ubox
43 75 0.024150056 ubox
44 76 0.004588192 ubox
45 73 0.005371068 ubox
45 76 0.003216843 ubox
46 73 0.004823378 ubox
47 73 0.039276262 ubox
48 56 0.019820735 ubox
48 72 0.040466245 ubox
48 77 0.063026797 ubox
48 78 0.027512660 ubox
49 55 0.019819849 ubox
49 76 0.069816362 ubox
49 77 0.020382829 ubox
50 54 0.019627264 ubox
50 69 0.061799776 ubox
50 70 0.009891795 ubox
50 75 0.072953670 ubox
51 60 0.004199375 ubox
51 68 0.061960996 ubox
51 69 0.009445220 ubox
51 74 0.072391983 ubox
51 75 0.004641513 ubox
52 59 0.004877922 ubox
52 67 0.061886524 ubox
52 75 0.005473138 ubox
53 66 0.052549619 ubox
53 73 0.081232820 ubox
54 61 0.015939638 ubox
54 66 0.035110530 ubox
54 72 0.082809318 ubox
55 60 0.014760840 ubox
55 64 0.006317676 ubox
55 65 0.056733596 ubox
55 68 0.012912313 ubox
55 71 0.082689060 ubox
56 64 0.058011685 ubox
56 67 0.014022488 ubox
56 69 0.004917891 ubox
56 70 0.082464137 ubox
57 66 0.014281585 ubox
58 66 0.009706971 ubox
58 73 0.004174481 ubox
59 66 0.013848506 ubox
59 72 0.004326043 ubox
59 77 0.013602630 ubox
59 78 0.006067217 ubox
60 66 0.026230900 ubox
60 76 0.015165433 ubox
60 77 0.004539987 ubox
61 67 0.042759472 ubox
61 69 0.010730500 ubox
61 70 0.004221420 ubox
61 75 0.015915727 ubox
62 66 0.035230632 ubox
62 73 0.003444735 ubox
62 77 0.007209519 ubox
63 73 0.050331409 ubox
63 76 0.007962689 ubox
63 77 0.005064442 ubox
64 72 0.052047875 ubox
64 73 0.007853119 ubox
64 76 0.004474440 ubox
64 77 0.049361395 ubox
64 78 0.057557198 ubox
65 73 0.005719669 ubox
65 76 0.054630520 ubox
65 77 0.055069756 ubox
66 70 0.004853808 ubox
66 71 0.026862374 ubox
66 74 0.015221691 ubox
66 75 0.056573310 ubox
66 79 0.186131210 ubox
67 72 0.021705869 ubox
67 73 0.015659433 ubox
67 76 0.005779547 ubox
67 77 0.011329507 ubox
67 78 0.311868805 ubox
68 73 0.021911597 ubox
68 76 0.019789408 ubox
68 77 0.314027985 ubox
69 73 0.010512587 ubox
69 76 0.297696545 ubox
69 77 0.017590566 ubox
69 78 0.278259953 ubox
70 76 0.019373135 ubox
70 77 0.267728165 ubox
70 78 0.207526882 ubox
71 76 0.233488704 ubox
71 77 0.197757881 ubox
72 79 0.039076394 ubox
73 79 0.006069651 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
showpage
end
%%EOF
