%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (963)
} def

/sequence { (\
GGAAAGAUUGAGAUCGAAAGAUCACUAUGAAUGGAAAAAACAUUUAUGGAGCUCGAAAGGGCACAGUCGUAAUGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 64 0.010070410 ubox
1 68 0.013142321 ubox
1 70 0.008153702 ubox
1 73 0.134127419 ubox
1 75 0.267500678 ubox
1 76 0.150378121 ubox
1 77 0.011222863 ubox
1 78 0.207282508 ubox
2 9 0.005330067 ubox
2 64 0.005244243 ubox
2 67 0.010026017 ubox
2 68 0.024252404 ubox
2 70 0.036475324 ubox
2 73 0.049628251 ubox
2 75 0.173469404 ubox
2 76 0.012037935 ubox
2 77 0.203837365 ubox
2 78 0.327899742 ubox
3 8 0.005170159 ubox
3 9 0.004579863 ubox
3 67 0.022720980 ubox
3 70 0.089980281 ubox
3 73 0.211934884 ubox
3 76 0.194359974 ubox
3 77 0.321267739 ubox
4 8 0.003906518 ubox
4 9 0.004532108 ubox
4 70 0.168900092 ubox
4 73 0.023944856 ubox
4 76 0.291082989 ubox
4 77 0.088422006 ubox
5 70 0.124228529 ubox
5 73 0.059150961 ubox
5 76 0.113399329 ubox
5 77 0.006029619 ubox
6 15 0.004200096 ubox
6 23 0.008076515 ubox
6 64 0.012705831 ubox
6 68 0.947324236 ubox
6 70 0.004693195 ubox
6 73 0.022200689 ubox
6 75 0.128530750 ubox
6 76 0.003649653 ubox
6 77 0.004149243 ubox
6 78 0.032716319 ubox
7 14 0.004153603 ubox
7 22 0.008077014 ubox
7 67 0.948762038 ubox
7 70 0.013549100 ubox
7 73 0.264975989 ubox
7 76 0.004109591 ubox
7 77 0.030726935 ubox
8 13 0.003795185 ubox
8 21 0.007969675 ubox
8 56 0.004912754 ubox
8 66 0.948078743 ubox
8 69 0.010781440 ubox
8 71 0.013823674 ubox
8 72 0.264429544 ubox
8 74 0.007877305 ubox
9 20 0.007799329 ubox
9 24 0.008814498 ubox
9 55 0.005312118 ubox
9 63 0.003543771 ubox
9 65 0.946838062 ubox
9 69 0.076099242 ubox
9 71 0.255912906 ubox
9 72 0.039069767 ubox
9 79 0.028151665 ubox
10 15 0.003214484 ubox
10 23 0.009716294 ubox
10 25 0.011525202 ubox
10 54 0.005569043 ubox
10 64 0.943439235 ubox
10 67 0.003509824 ubox
10 68 0.095408126 ubox
10 70 0.231607388 ubox
10 75 0.009800199 ubox
10 77 0.004786211 ubox
10 78 0.048128032 ubox
11 22 0.008877454 ubox
11 53 0.005379410 ubox
11 67 0.089779784 ubox
11 70 0.015174317 ubox
11 73 0.004887843 ubox
11 76 0.005397072 ubox
11 77 0.045808415 ubox
12 23 0.989288028 ubox
12 62 0.008907042 ubox
12 68 0.132266690 ubox
12 75 0.003714734 ubox
12 76 0.003735780 ubox
13 22 0.990718415 ubox
13 67 0.127650962 ubox
14 19 0.003279446 ubox
14 21 0.991251707 ubox
14 60 0.010179355 ubox
14 61 0.003759747 ubox
14 65 0.003951999 ubox
14 66 0.118610477 ubox
15 20 0.991871671 ubox
15 59 0.011984154 ubox
15 60 0.004110748 ubox
15 66 0.023370364 ubox
15 69 0.009028436 ubox
15 79 0.003742868 ubox
16 23 0.062749914 ubox
16 64 0.057663598 ubox
16 68 0.009053863 ubox
16 78 0.004290402 ubox
17 22 0.057428234 ubox
17 67 0.008607826 ubox
17 77 0.004070251 ubox
18 76 0.003472284 ubox
20 54 0.013193702 ubox
20 64 0.005314946 ubox
21 53 0.013000239 ubox
22 50 0.009648369 ubox
23 49 0.009401606 ubox
23 51 0.011504902 ubox
25 48 0.032477423 ubox
25 49 0.991862807 ubox
26 48 0.997765787 ubox
26 49 0.005686279 ubox
27 47 0.998945962 ubox
28 46 0.999089065 ubox
29 45 0.999304321 ubox
30 44 0.999252040 ubox
31 43 0.999048496 ubox
32 42 0.999512733 ubox
33 41 0.999397663 ubox
34 41 0.025451345 ubox
47 65 0.005492851 ubox
47 79 0.003629487 ubox
48 64 0.009370807 ubox
48 78 0.012786071 ubox
49 64 0.017515723 ubox
49 68 0.008204483 ubox
49 77 0.013254430 ubox
50 67 0.008696350 ubox
50 76 0.017334267 ubox
51 62 0.998470806 ubox
51 75 0.018063317 ubox
52 59 0.004293304 ubox
52 60 0.004763510 ubox
52 61 0.999507037 ubox
52 74 0.018027157 ubox
53 58 0.004049720 ubox
53 59 0.004408911 ubox
53 60 0.998039858 ubox
53 61 0.005712675 ubox
53 71 0.004885400 ubox
53 72 0.003905799 ubox
54 59 0.996697277 ubox
54 60 0.036418839 ubox
54 69 0.014198359 ubox
54 79 0.007084527 ubox
55 68 0.014549145 ubox
55 78 0.007830637 ubox
56 67 0.014447153 ubox
56 77 0.007438313 ubox
57 76 0.004479919 ubox
58 70 0.009681909 ubox
59 64 0.014154282 ubox
59 68 0.005378234 ubox
59 77 0.006990464 ubox
60 67 0.005005987 ubox
60 68 0.013848847 ubox
60 76 0.010658038 ubox
61 67 0.013853156 ubox
61 75 0.011680943 ubox
62 66 0.013817007 ubox
62 69 0.003504388 ubox
62 74 0.011728316 ubox
63 67 0.004432862 ubox
63 70 0.073396384 ubox
63 73 0.010426177 ubox
63 76 0.003556063 ubox
63 77 0.003712408 ubox
64 69 0.084250881 ubox
64 74 0.048503164 ubox
64 79 0.004055341 ubox
65 70 0.009165369 ubox
65 73 0.047984978 ubox
65 76 0.060462603 ubox
66 70 0.004147838 ubox
66 73 0.007744149 ubox
66 75 0.069652162 ubox
66 78 0.009346392 ubox
67 71 0.004855860 ubox
67 72 0.008434606 ubox
67 74 0.063891482 ubox
68 74 0.023647047 ubox
68 79 0.023749065 ubox
69 73 0.017589157 ubox
69 75 0.190757987 ubox
69 76 0.014135167 ubox
69 77 0.015064501 ubox
69 78 0.118467403 ubox
70 74 0.178644804 ubox
70 79 0.010013292 ubox
71 76 0.021347227 ubox
71 77 0.027340088 ubox
72 76 0.022736620 ubox
72 77 0.027958605 ubox
73 79 0.028436552 ubox
74 78 0.044348263 ubox
75 79 0.012236411 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
showpage
end
%%EOF
