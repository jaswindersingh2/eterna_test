%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (215)
} def

/sequence { (\
GGAAAACUGAGCUACACAGACAGGAAACUGAUCUGAAAAGAUGAGCAGAAAUGCCAUCAGUAGAGCAGGUUCUGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.019086965 ubox
1 8 0.015971926 ubox
1 12 0.005398700 ubox
1 13 0.006632947 ubox
1 15 0.007846165 ubox
1 72 0.103164017 ubox
1 73 0.905082477 ubox
1 75 0.115678847 ubox
1 76 0.045764914 ubox
1 77 0.005055315 ubox
1 78 0.077185679 ubox
2 7 0.016849738 ubox
2 12 0.007063897 ubox
2 71 0.100921968 ubox
2 72 0.959444452 ubox
2 73 0.019307523 ubox
2 75 0.052453248 ubox
2 76 0.003794232 ubox
2 77 0.073116672 ubox
2 78 0.075242003 ubox
3 70 0.094142010 ubox
3 71 0.949816104 ubox
3 73 0.099341664 ubox
3 76 0.070378571 ubox
3 77 0.074718088 ubox
4 70 0.876144240 ubox
4 71 0.150905662 ubox
4 73 0.017728913 ubox
4 76 0.065633279 ubox
4 77 0.003202582 ubox
5 70 0.120876094 ubox
5 71 0.105155364 ubox
5 73 0.008280255 ubox
6 61 0.023316683 ubox
6 70 0.116812081 ubox
6 71 0.006708643 ubox
6 73 0.019147934 ubox
7 11 0.003422230 ubox
7 19 0.008895018 ubox
7 60 0.024207965 ubox
7 63 0.003854135 ubox
7 68 0.988860974 ubox
7 69 0.093093706 ubox
7 74 0.006505618 ubox
7 79 0.005237405 ubox
8 16 0.012657692 ubox
8 18 0.008999054 ubox
8 59 0.023819276 ubox
8 62 0.003961359 ubox
8 67 0.992202548 ubox
8 68 0.053656065 ubox
8 79 0.013475220 ubox
9 15 0.014432864 ubox
9 17 0.009027645 ubox
9 58 0.019990810 ubox
9 66 0.993475941 ubox
9 72 0.011078117 ubox
9 77 0.006229333 ubox
9 78 0.024670141 ubox
10 42 0.005730357 ubox
10 57 0.015337982 ubox
10 71 0.011101167 ubox
10 76 0.007069264 ubox
10 77 0.022959517 ubox
11 15 0.005066434 ubox
11 61 0.017407683 ubox
11 66 0.015708861 ubox
11 70 0.011077973 ubox
11 75 0.007471859 ubox
11 76 0.009182062 ubox
12 40 0.025341748 ubox
12 60 0.017854902 ubox
12 63 0.995861191 ubox
12 65 0.015613173 ubox
12 69 0.011031808 ubox
12 74 0.007399798 ubox
13 37 0.004094836 ubox
13 38 0.003285950 ubox
13 39 0.025117415 ubox
13 59 0.016998652 ubox
13 62 0.995798613 ubox
13 64 0.014498220 ubox
13 68 0.010555492 ubox
14 61 0.995634025 ubox
15 60 0.994446473 ubox
15 63 0.007170775 ubox
15 79 0.003373136 ubox
16 61 0.004163987 ubox
17 30 0.006395716 ubox
17 35 0.994688471 ubox
17 60 0.003926137 ubox
18 29 0.006420757 ubox
18 34 0.998940115 ubox
18 76 0.008405831 ubox
19 28 0.006416570 ubox
19 33 0.999614015 ubox
19 75 0.009032594 ubox
19 78 0.004167324 ubox
20 32 0.996354551 ubox
20 77 0.003986728 ubox
21 30 0.998412332 ubox
21 35 0.006443693 ubox
21 74 0.012845889 ubox
22 29 0.998600577 ubox
22 34 0.006435126 ubox
22 73 0.012890148 ubox
23 28 0.997964516 ubox
23 29 0.039987892 ubox
23 33 0.006325909 ubox
23 72 0.012683690 ubox
23 73 0.006898397 ubox
24 28 0.039802197 ubox
24 32 0.004742595 ubox
24 71 0.012356890 ubox
24 72 0.007514252 ubox
25 70 0.011805136 ubox
25 71 0.007847074 ubox
26 70 0.004958799 ubox
28 68 0.014687631 ubox
29 67 0.014702764 ubox
30 66 0.014587602 ubox
31 42 0.007534745 ubox
32 41 0.007948950 ubox
32 64 0.013544340 ubox
33 40 0.008142077 ubox
33 63 0.014799576 ubox
34 39 0.008991428 ubox
34 62 0.014770792 ubox
35 61 0.014474184 ubox
37 61 0.007835924 ubox
40 58 0.997293565 ubox
40 78 0.010117721 ubox
41 57 0.998344452 ubox
41 77 0.008558352 ubox
42 56 0.998419884 ubox
42 59 0.017042330 ubox
42 79 0.012064270 ubox
43 55 0.998619707 ubox
43 58 0.019021934 ubox
43 77 0.029940621 ubox
43 78 0.019827746 ubox
44 57 0.018145499 ubox
44 76 0.036375692 ubox
44 77 0.014077555 ubox
45 54 0.999045393 ubox
45 55 0.003294651 ubox
45 75 0.039442271 ubox
46 53 0.999090347 ubox
46 74 0.039504085 ubox
47 52 0.963785556 ubox
47 73 0.039495062 ubox
48 52 0.007463963 ubox
48 72 0.039501499 ubox
49 71 0.039240089 ubox
50 70 0.036165704 ubox
52 67 0.038305781 ubox
53 66 0.038569993 ubox
53 70 0.006774721 ubox
54 65 0.038291670 ubox
54 69 0.007352283 ubox
55 63 0.023511337 ubox
55 65 0.004405073 ubox
55 68 0.007340533 ubox
57 62 0.008448135 ubox
57 64 0.024573718 ubox
58 63 0.025658218 ubox
58 65 0.004031555 ubox
59 76 0.042923046 ubox
60 66 0.004688327 ubox
60 75 0.048348219 ubox
60 78 0.007849152 ubox
61 65 0.004390383 ubox
61 74 0.048359602 ubox
61 79 0.005769650 ubox
62 73 0.048521363 ubox
63 72 0.048560388 ubox
63 77 0.051068983 ubox
63 78 0.020842107 ubox
64 71 0.047476888 ubox
64 76 0.081184711 ubox
64 77 0.015033544 ubox
65 70 0.033589752 ubox
65 75 0.086078444 ubox
66 74 0.086125377 ubox
67 73 0.085912739 ubox
67 77 0.003522028 ubox
68 72 0.084030748 ubox
68 75 0.003417133 ubox
68 76 0.006631910 ubox
69 75 0.026717731 ubox
69 77 0.003829328 ubox
69 78 0.023293143 ubox
70 74 0.025042855 ubox
72 79 0.007365770 ubox
73 79 0.011064427 ubox
74 78 0.042694682 ubox
75 79 0.014409479 ubox
1 73 0.9500000 lbox
2 72 0.9500000 lbox
3 71 0.9500000 lbox
4 70 0.9500000 lbox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
