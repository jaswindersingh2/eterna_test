%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (88)
} def

/sequence { (\
GGAAAAGGCGACGAUAGGAAACUAUCGGUGCGGGUGGAAACACCACUACGAAAGUAGCGUGCCGUCGCGGGCGACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.010213180 ubox
1 12 0.003545234 ubox
1 44 0.003830052 ubox
1 46 0.025961749 ubox
1 47 0.042571837 ubox
1 49 0.021481183 ubox
1 58 0.015661111 ubox
1 63 0.038061558 ubox
1 72 0.044967488 ubox
1 75 0.101662825 ubox
1 76 0.048506865 ubox
1 77 0.007601031 ubox
1 78 0.212070680 ubox
2 9 0.007514446 ubox
2 43 0.003352280 ubox
2 46 0.044681575 ubox
2 47 0.008051085 ubox
2 49 0.014821337 ubox
2 58 0.013356967 ubox
2 62 0.037987654 ubox
2 72 0.062288736 ubox
2 75 0.055726848 ubox
2 76 0.009559688 ubox
2 77 0.206059207 ubox
2 78 0.283023435 ubox
3 47 0.008694321 ubox
3 60 0.005127836 ubox
3 76 0.194102295 ubox
3 77 0.278890020 ubox
4 47 0.007964816 ubox
4 60 0.006272149 ubox
4 76 0.246181518 ubox
4 77 0.019406573 ubox
5 47 0.008273337 ubox
5 60 0.004597730 ubox
5 76 0.021280607 ubox
5 77 0.102563342 ubox
6 47 0.081302574 ubox
6 76 0.124785847 ubox
6 77 0.011269290 ubox
7 12 0.013546159 ubox
7 31 0.039059380 ubox
7 46 0.084037140 ubox
7 47 0.008289310 ubox
7 49 0.016559707 ubox
7 58 0.022149248 ubox
7 63 0.033492995 ubox
7 66 0.006020177 ubox
7 68 0.014806669 ubox
7 72 0.072833677 ubox
7 75 0.130253407 ubox
7 76 0.012181801 ubox
7 77 0.005427151 ubox
7 78 0.035671745 ubox
8 29 0.010693060 ubox
8 31 0.921538922 ubox
8 46 0.004007160 ubox
8 58 0.003499843 ubox
8 60 0.005251028 ubox
8 62 0.033452476 ubox
8 65 0.006070403 ubox
8 68 0.373252872 ubox
8 72 0.012723637 ubox
8 75 0.006203968 ubox
8 77 0.004246919 ubox
9 28 0.011021491 ubox
9 30 0.922969266 ubox
9 32 0.036804973 ubox
9 57 0.003243558 ubox
9 59 0.005665966 ubox
9 61 0.033390416 ubox
9 64 0.006081439 ubox
9 67 0.373928028 ubox
9 70 0.006965733 ubox
9 71 0.012141014 ubox
9 73 0.005496418 ubox
9 79 0.020755303 ubox
10 29 0.625529756 ubox
10 31 0.037216870 ubox
10 58 0.005877023 ubox
10 60 0.023859295 ubox
10 63 0.005628836 ubox
10 66 0.374055368 ubox
10 72 0.004401340 ubox
10 78 0.022424444 ubox
11 29 0.057544163 ubox
11 60 0.004574141 ubox
11 65 0.373897422 ubox
11 77 0.019967359 ubox
12 27 0.924348197 ubox
12 28 0.048807574 ubox
12 59 0.005300426 ubox
12 64 0.373325903 ubox
12 67 0.005373034 ubox
13 26 0.997908850 ubox
13 63 0.060066810 ubox
13 66 0.004916852 ubox
14 25 0.997904131 ubox
14 65 0.003819610 ubox
15 24 0.997694397 ubox
15 61 0.057191197 ubox
16 23 0.997808260 ubox
16 60 0.059018753 ubox
17 22 0.997201222 ubox
17 23 0.005815580 ubox
18 22 0.009120081 ubox
18 58 0.059616477 ubox
21 55 0.059385956 ubox
22 54 0.059767459 ubox
23 53 0.058791657 ubox
25 51 0.058694802 ubox
25 52 0.003961859 ubox
26 50 0.059371425 ubox
26 64 0.006769367 ubox
27 47 0.003277845 ubox
27 49 0.055983850 ubox
27 63 0.370875003 ubox
28 46 0.007914090 ubox
28 49 0.043398802 ubox
28 62 0.371688747 ubox
28 72 0.003657243 ubox
29 45 0.007919985 ubox
29 48 0.047609500 ubox
29 61 0.370938901 ubox
29 71 0.003656536 ubox
30 44 0.004602583 ubox
30 46 0.032582762 ubox
30 47 0.044547532 ubox
30 49 0.004606786 ubox
30 58 0.003474039 ubox
30 60 0.371074616 ubox
31 50 0.014289462 ubox
31 57 0.003307273 ubox
31 59 0.371842282 ubox
31 69 0.003693838 ubox
32 43 0.003181637 ubox
32 44 0.064609706 ubox
32 46 0.380132735 ubox
32 47 0.031267485 ubox
32 49 0.066135676 ubox
32 58 0.367547832 ubox
32 63 0.003323621 ubox
32 68 0.003725039 ubox
32 75 0.011775611 ubox
32 78 0.017437994 ubox
33 43 0.054996372 ubox
33 44 0.861061799 ubox
33 46 0.021659269 ubox
33 47 0.484967039 ubox
33 49 0.007688605 ubox
34 41 0.040902306 ubox
34 43 0.862939551 ubox
34 44 0.004452020 ubox
34 46 0.501311073 ubox
34 49 0.013338101 ubox
34 66 0.003379126 ubox
35 40 0.040566226 ubox
35 42 0.863409732 ubox
35 45 0.501737793 ubox
35 48 0.013451341 ubox
35 64 0.003618038 ubox
36 41 0.863063906 ubox
36 43 0.007562082 ubox
36 44 0.501872431 ubox
36 47 0.013457844 ubox
36 63 0.004531706 ubox
37 41 0.006687049 ubox
37 43 0.500485572 ubox
37 46 0.013448747 ubox
37 62 0.004529440 ubox
41 61 0.005155879 ubox
42 60 0.005242793 ubox
43 59 0.004865346 ubox
44 59 0.016252338 ubox
45 55 0.027151992 ubox
45 60 0.009553956 ubox
46 50 0.004511721 ubox
46 54 0.028526024 ubox
46 57 0.509058231 ubox
46 59 0.008122740 ubox
46 79 0.006121454 ubox
47 53 0.027908175 ubox
47 56 0.516557371 ubox
47 61 0.011764743 ubox
47 79 0.003306160 ubox
48 55 0.517575102 ubox
48 60 0.022104324 ubox
49 54 0.517529439 ubox
49 57 0.005588511 ubox
49 59 0.023809608 ubox
49 79 0.787805481 ubox
50 58 0.023775813 ubox
50 77 0.004726006 ubox
50 78 0.829855101 ubox
51 76 0.004511445 ubox
51 77 0.680494706 ubox
52 76 0.483635076 ubox
52 77 0.498888270 ubox
53 76 0.693653571 ubox
53 77 0.004867343 ubox
54 62 0.003252038 ubox
54 72 0.012281754 ubox
54 75 0.842990746 ubox
54 76 0.003947839 ubox
54 78 0.007394486 ubox
55 61 0.003242643 ubox
55 71 0.012081509 ubox
55 73 0.023403579 ubox
55 74 0.780688427 ubox
56 76 0.012827069 ubox
57 68 0.013903545 ubox
57 72 0.849779309 ubox
57 75 0.016175841 ubox
57 76 0.003357573 ubox
57 78 0.003565155 ubox
58 64 0.003166220 ubox
58 67 0.014132715 ubox
58 69 0.029213332 ubox
58 70 0.005478714 ubox
58 71 0.852375832 ubox
58 73 0.094186185 ubox
58 79 0.017717522 ubox
59 63 0.004967709 ubox
59 66 0.014049541 ubox
59 68 0.030819615 ubox
59 72 0.094285034 ubox
59 75 0.232866023 ubox
59 76 0.004399634 ubox
59 78 0.018930171 ubox
60 67 0.030747703 ubox
60 69 0.848314443 ubox
60 70 0.003490476 ubox
60 71 0.089628251 ubox
60 73 0.233663998 ubox
60 74 0.188633591 ubox
60 79 0.005960305 ubox
61 66 0.029302137 ubox
61 68 0.852156126 ubox
61 72 0.339609866 ubox
61 75 0.009161993 ubox
61 78 0.010205448 ubox
62 67 0.849619863 ubox
62 69 0.037786069 ubox
62 70 0.089972166 ubox
62 71 0.339520728 ubox
63 67 0.021238983 ubox
63 69 0.091814176 ubox
63 70 0.339057957 ubox
63 73 0.022579434 ubox
64 68 0.087418619 ubox
64 72 0.023058605 ubox
64 75 0.083192592 ubox
65 69 0.008171358 ubox
65 71 0.022720442 ubox
65 74 0.083367313 ubox
66 70 0.021931972 ubox
66 71 0.003754917 ubox
66 73 0.083407115 ubox
66 79 0.003210212 ubox
67 72 0.081250311 ubox
67 78 0.004184827 ubox
68 79 0.009281496 ubox
69 75 0.063955765 ubox
69 76 0.120748929 ubox
69 77 0.028747094 ubox
69 78 0.082390354 ubox
70 75 0.131085982 ubox
70 76 0.036020197 ubox
70 77 0.075206499 ubox
70 78 0.041886111 ubox
71 75 0.037238965 ubox
71 76 0.053110843 ubox
71 77 0.034997715 ubox
71 78 0.016813331 ubox
72 79 0.073300879 ubox
73 78 0.079066840 ubox
75 79 0.005145322 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
29 61 0.9500000 lbox
30 60 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
