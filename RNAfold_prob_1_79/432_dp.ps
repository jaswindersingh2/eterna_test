%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (432)
} def

/sequence { (\
GGAAACGGGCCCGCCCGGCCCAAAGGGCCGGCGCGCAAAGCGCGGCCGGGAAACCCGGCGCGGGCCCAGGCCGCGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.086216287 ubox
1 71 0.018956140 ubox
1 72 0.938914154 ubox
1 74 0.096452258 ubox
1 76 0.003974114 ubox
1 78 0.080169890 ubox
2 6 0.012376133 ubox
2 71 0.939180172 ubox
2 72 0.062353999 ubox
2 74 0.050472405 ubox
2 76 0.004095876 ubox
2 77 0.079403551 ubox
2 78 0.080998232 ubox
3 76 0.078109063 ubox
3 77 0.074387384 ubox
4 76 0.064396064 ubox
4 77 0.045191776 ubox
5 76 0.058030786 ubox
6 69 0.254201937 ubox
6 70 0.043419734 ubox
6 73 0.051088796 ubox
6 75 0.066673806 ubox
6 79 0.003349789 ubox
7 66 0.005739368 ubox
7 67 0.997511420 ubox
7 72 0.028977331 ubox
7 74 0.029514403 ubox
8 65 0.004072107 ubox
8 66 0.999640519 ubox
8 67 0.005687006 ubox
8 71 0.020480046 ubox
8 72 0.013512354 ubox
9 36 0.004337162 ubox
9 65 0.999873153 ubox
9 66 0.004232169 ubox
9 71 0.013452767 ubox
10 35 0.004322886 ubox
10 64 0.999891692 ubox
10 70 0.013393383 ubox
11 63 0.999892169 ubox
11 69 0.013292004 ubox
12 33 0.004407958 ubox
12 35 0.009018875 ubox
12 62 0.999874822 ubox
13 32 0.007123234 ubox
13 34 0.009933461 ubox
13 61 0.999778276 ubox
13 65 0.009751141 ubox
14 31 0.008145216 ubox
14 33 0.010041699 ubox
14 60 0.997745984 ubox
14 64 0.009768330 ubox
15 30 0.009647848 ubox
15 31 0.985186348 ubox
15 58 0.006330723 ubox
15 60 0.007802654 ubox
15 63 0.009708615 ubox
16 30 0.999572215 ubox
16 57 0.006307031 ubox
16 62 0.009288241 ubox
17 29 0.999955296 ubox
17 56 0.005720815 ubox
17 61 0.003320542 ubox
18 28 0.999976426 ubox
18 55 0.005680217 ubox
19 26 0.006023765 ubox
19 27 0.999925938 ubox
19 50 0.005012772 ubox
20 25 0.008477249 ubox
20 26 0.999852050 ubox
20 27 0.008300392 ubox
20 49 0.005015852 ubox
21 25 0.992578595 ubox
21 26 0.011713846 ubox
21 48 0.005012647 ubox
26 47 0.005375684 ubox
27 46 0.005389085 ubox
28 45 0.005397782 ubox
29 44 0.005434117 ubox
30 43 0.003921282 ubox
30 47 0.003880150 ubox
31 43 0.109714912 ubox
31 46 0.003909519 ubox
32 42 0.115237685 ubox
32 44 0.981222342 ubox
32 45 0.003258267 ubox
33 41 0.115456383 ubox
33 43 0.992924874 ubox
34 40 0.115438934 ubox
34 42 0.992948796 ubox
34 44 0.023415738 ubox
35 41 0.992780433 ubox
35 43 0.023719915 ubox
36 40 0.985571482 ubox
36 42 0.023706159 ubox
39 77 0.004304565 ubox
40 65 0.008763039 ubox
40 76 0.005113441 ubox
41 64 0.008791651 ubox
41 75 0.005189517 ubox
42 61 0.004010020 ubox
42 74 0.005201414 ubox
43 60 0.004072445 ubox
43 62 0.008798250 ubox
43 73 0.005201501 ubox
44 59 0.008566543 ubox
44 61 0.009928220 ubox
44 72 0.005201452 ubox
45 59 0.999025585 ubox
45 71 0.005201527 ubox
46 58 0.999950795 ubox
46 70 0.005201414 ubox
47 57 0.999941586 ubox
47 69 0.005197216 ubox
48 55 0.020067278 ubox
48 56 0.999703870 ubox
48 67 0.004957689 ubox
49 54 0.028345523 ubox
49 55 0.999433864 ubox
49 56 0.008985322 ubox
49 66 0.004976496 ubox
50 54 0.983283513 ubox
50 55 0.012625793 ubox
50 65 0.004972205 ubox
54 64 0.005176713 ubox
55 63 0.005181148 ubox
56 62 0.005180844 ubox
57 61 0.004846802 ubox
68 76 0.013374557 ubox
68 77 0.015395723 ubox
69 74 0.061463668 ubox
69 76 0.017366294 ubox
69 77 0.044498307 ubox
69 78 0.054204459 ubox
70 74 0.018804745 ubox
70 76 0.055871320 ubox
70 77 0.042511846 ubox
70 78 0.011734409 ubox
71 75 0.057671574 ubox
71 79 0.006358991 ubox
72 79 0.042592378 ubox
73 77 0.008918451 ubox
73 78 0.066132391 ubox
74 79 0.041360938 ubox
1 72 0.9500000 lbox
2 71 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
45 59 0.9500000 lbox
46 58 0.9500000 lbox
47 57 0.9500000 lbox
48 56 0.9500000 lbox
49 55 0.9500000 lbox
50 54 0.9500000 lbox
showpage
end
%%EOF
