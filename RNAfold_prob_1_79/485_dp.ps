%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (485)
} def

/sequence { (\
GGAAAAGCAUUCGUCAGCCGAAAGGCGCCGAAAGGCGACAAAAGAUGUCGAAAGACAUCGAAUGCAAAGUAUUAUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.003972446 ubox
1 12 0.007407665 ubox
1 70 0.035416969 ubox
1 72 0.019395707 ubox
1 73 0.019874043 ubox
1 75 0.004192175 ubox
1 76 0.003218456 ubox
1 77 0.009710754 ubox
1 78 0.192100841 ubox
2 11 0.007381311 ubox
2 12 0.008603370 ubox
2 70 0.073640604 ubox
2 72 0.021004784 ubox
2 73 0.027774576 ubox
2 75 0.004083594 ubox
2 76 0.015134478 ubox
2 77 0.191340815 ubox
2 78 0.235593181 ubox
3 10 0.006914058 ubox
3 11 0.008568962 ubox
3 70 0.054734104 ubox
3 72 0.027580058 ubox
3 73 0.015388111 ubox
3 75 0.016149589 ubox
3 76 0.189720614 ubox
3 77 0.234618752 ubox
4 10 0.007835493 ubox
4 70 0.039394695 ubox
4 72 0.016209610 ubox
4 73 0.015448361 ubox
4 75 0.176822208 ubox
4 76 0.229471490 ubox
4 77 0.027556274 ubox
5 70 0.020185350 ubox
5 72 0.019020867 ubox
5 73 0.091867805 ubox
5 75 0.209548519 ubox
5 76 0.035164599 ubox
5 77 0.008990075 ubox
6 70 0.034615327 ubox
6 72 0.097385981 ubox
6 73 0.090799863 ubox
6 75 0.040180901 ubox
6 76 0.010620882 ubox
6 77 0.003918174 ubox
7 14 0.011279553 ubox
7 15 0.003323850 ubox
7 18 0.005694712 ubox
7 26 0.008339387 ubox
7 36 0.022679189 ubox
7 65 0.997899323 ubox
7 70 0.006599631 ubox
7 72 0.010294640 ubox
7 73 0.006781992 ubox
8 13 0.012067746 ubox
8 17 0.005784941 ubox
8 24 0.006782044 ubox
8 25 0.008649358 ubox
8 34 0.003694558 ubox
8 35 0.022626712 ubox
8 64 0.999037100 ubox
8 69 0.006544026 ubox
9 63 0.998629316 ubox
9 70 0.003428366 ubox
10 22 0.013942170 ubox
10 32 0.022407429 ubox
10 41 0.004007947 ubox
10 42 0.006167431 ubox
10 61 0.003291686 ubox
10 62 0.998048786 ubox
10 67 0.003362269 ubox
10 69 0.003426716 ubox
11 21 0.015859884 ubox
11 31 0.023211693 ubox
11 40 0.004928455 ubox
11 41 0.007414610 ubox
11 60 0.004127659 ubox
11 61 0.998256833 ubox
11 66 0.003439906 ubox
12 20 0.016374981 ubox
12 30 0.023398462 ubox
12 60 0.997398898 ubox
12 64 0.003602019 ubox
13 18 0.008340863 ubox
13 19 0.018430897 ubox
13 26 0.044865991 ubox
13 28 0.005519551 ubox
13 29 0.023374528 ubox
13 36 0.003252735 ubox
13 39 0.709041457 ubox
13 56 0.026047228 ubox
13 59 0.154615327 ubox
13 63 0.003493350 ubox
14 21 0.039399134 ubox
14 25 0.046277465 ubox
14 27 0.005172139 ubox
14 31 0.003325592 ubox
14 38 0.709911402 ubox
14 45 0.003925438 ubox
14 51 0.006327516 ubox
14 55 0.033102613 ubox
14 57 0.007455117 ubox
14 61 0.011400302 ubox
15 20 0.042089541 ubox
15 24 0.048194969 ubox
15 27 0.014829128 ubox
15 30 0.003559107 ubox
15 37 0.709244441 ubox
15 44 0.005555518 ubox
15 50 0.006379168 ubox
15 54 0.033193313 ubox
15 60 0.012619399 ubox
16 58 0.003379171 ubox
17 26 0.973433280 ubox
17 36 0.047164088 ubox
17 39 0.003847468 ubox
18 24 0.007271250 ubox
18 25 0.994411949 ubox
18 35 0.047183857 ubox
19 24 0.994324583 ubox
19 25 0.010687830 ubox
19 34 0.047150322 ubox
19 44 0.006016598 ubox
19 79 0.005252160 ubox
20 78 0.005977579 ubox
21 77 0.005954616 ubox
22 76 0.005783015 ubox
23 75 0.005033196 ubox
24 29 0.035346874 ubox
24 39 0.040109228 ubox
25 29 0.006977530 ubox
25 39 0.042733294 ubox
26 37 0.213375659 ubox
27 36 0.997383868 ubox
27 39 0.006696217 ubox
28 35 0.998466030 ubox
29 34 0.998085245 ubox
29 35 0.004546821 ubox
29 37 0.010914270 ubox
30 36 0.010998780 ubox
34 39 0.004712142 ubox
36 50 0.012578378 ubox
37 49 0.047457606 ubox
37 59 0.003526276 ubox
37 65 0.010395152 ubox
38 48 0.047517626 ubox
38 58 0.003171620 ubox
39 44 0.027669786 ubox
39 47 0.047529965 ubox
39 64 0.014650843 ubox
40 46 0.044427287 ubox
40 63 0.014282239 ubox
44 58 0.008513285 ubox
44 59 0.985822068 ubox
45 58 0.996499192 ubox
46 57 0.997944060 ubox
47 56 0.998839868 ubox
48 55 0.998688643 ubox
49 54 0.998351318 ubox
50 56 0.005195564 ubox
50 59 0.006734636 ubox
51 58 0.006474286 ubox
60 77 0.004282970 ubox
60 78 0.006314187 ubox
61 73 0.034364483 ubox
61 76 0.004842808 ubox
61 77 0.006033978 ubox
62 72 0.036561866 ubox
62 75 0.005155802 ubox
62 76 0.005157628 ubox
63 71 0.036976802 ubox
63 74 0.005372734 ubox
64 70 0.037057142 ubox
64 73 0.005256418 ubox
65 69 0.036892912 ubox
66 70 0.013688123 ubox
66 72 0.017394789 ubox
66 73 0.054923494 ubox
66 75 0.016974658 ubox
66 76 0.023113633 ubox
66 77 0.146047487 ubox
67 72 0.050060464 ubox
67 73 0.043434188 ubox
67 75 0.024420319 ubox
67 76 0.165012047 ubox
67 77 0.105535914 ubox
68 72 0.035441886 ubox
68 73 0.030977568 ubox
68 75 0.165054653 ubox
68 76 0.116948683 ubox
68 77 0.052654446 ubox
69 73 0.016898601 ubox
69 75 0.118538826 ubox
69 76 0.058139697 ubox
69 77 0.019135002 ubox
69 78 0.125478848 ubox
70 74 0.110531209 ubox
70 79 0.010689311 ubox
71 75 0.010131256 ubox
71 76 0.040249860 ubox
71 77 0.033572232 ubox
72 79 0.010545205 ubox
73 79 0.008971660 ubox
75 79 0.006505310 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
