%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (438)
} def

/sequence { (\
GGAAAGGCGAGCGGCAGGCGAAAGCCCACGAAAGUGGCCAAAACUCAUCCGUUGAUGAGGCUCGCAAGCACUUAUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.003187568 ubox
1 69 0.211653272 ubox
1 71 0.351871492 ubox
1 72 0.141759048 ubox
1 73 0.026165097 ubox
1 75 0.012969198 ubox
1 76 0.029052405 ubox
1 77 0.038023897 ubox
1 78 0.408770318 ubox
2 69 0.310350224 ubox
2 71 0.162645167 ubox
2 72 0.024364672 ubox
2 73 0.041706469 ubox
2 75 0.041844021 ubox
2 76 0.059599260 ubox
2 77 0.408268061 ubox
2 78 0.269518258 ubox
3 72 0.041299803 ubox
3 73 0.028967079 ubox
3 75 0.063952692 ubox
3 76 0.399086069 ubox
3 77 0.268869015 ubox
4 72 0.029586714 ubox
4 73 0.309873150 ubox
4 75 0.310902997 ubox
4 76 0.242678115 ubox
4 77 0.018165591 ubox
5 72 0.407892520 ubox
5 73 0.070519827 ubox
5 75 0.181779521 ubox
5 76 0.022630010 ubox
5 77 0.006623169 ubox
6 26 0.003580075 ubox
6 39 0.003992434 ubox
6 65 0.040733131 ubox
6 69 0.077927590 ubox
6 71 0.419719789 ubox
6 72 0.073070831 ubox
6 73 0.069547773 ubox
6 75 0.025868984 ubox
6 76 0.008553163 ubox
6 78 0.011727198 ubox
7 15 0.003262458 ubox
7 25 0.003829293 ubox
7 38 0.003997956 ubox
7 65 0.963230715 ubox
7 69 0.256118367 ubox
7 71 0.036782568 ubox
7 72 0.007888884 ubox
7 73 0.006589105 ubox
7 75 0.006037688 ubox
7 77 0.003330740 ubox
8 14 0.003270588 ubox
8 24 0.003835289 ubox
8 37 0.003980591 ubox
8 64 0.965820960 ubox
8 68 0.255548492 ubox
9 63 0.966927691 ubox
9 69 0.013188837 ubox
9 71 0.007427427 ubox
9 73 0.032754291 ubox
9 78 0.003269357 ubox
10 62 0.966811610 ubox
10 72 0.034889763 ubox
10 77 0.003197170 ubox
11 19 0.003372102 ubox
11 61 0.966935088 ubox
11 65 0.251665380 ubox
11 69 0.013386516 ubox
11 71 0.035012436 ubox
12 18 0.003423490 ubox
12 20 0.004878820 ubox
12 60 0.966064422 ubox
12 64 0.251793330 ubox
12 68 0.013405671 ubox
13 19 0.017264634 ubox
13 25 0.003566633 ubox
13 26 0.104708190 ubox
13 29 0.006436981 ubox
13 38 0.007684446 ubox
13 39 0.938192652 ubox
13 62 0.040398188 ubox
13 63 0.247730609 ubox
13 69 0.006798840 ubox
13 71 0.003363051 ubox
14 19 0.008057547 ubox
14 25 0.116487938 ubox
14 29 0.008789656 ubox
14 38 0.939175793 ubox
14 39 0.003777527 ubox
14 61 0.243369617 ubox
14 62 0.046553888 ubox
14 65 0.013886676 ubox
14 69 0.035205907 ubox
15 20 0.008863533 ubox
15 24 0.116549635 ubox
15 36 0.016119019 ubox
15 37 0.937563799 ubox
15 57 0.003804316 ubox
15 60 0.244566005 ubox
15 64 0.013891753 ubox
15 68 0.035599625 ubox
16 35 0.020993210 ubox
16 56 0.003438736 ubox
16 62 0.005345652 ubox
17 25 0.009905205 ubox
17 26 0.975917725 ubox
17 27 0.008716460 ubox
17 39 0.031896839 ubox
17 61 0.006059241 ubox
17 62 0.027240537 ubox
18 25 0.988816851 ubox
18 26 0.007337947 ubox
18 35 0.012287904 ubox
18 38 0.031645176 ubox
18 61 0.031285835 ubox
18 65 0.036220860 ubox
19 24 0.988542545 ubox
19 30 0.006506273 ubox
19 34 0.012397585 ubox
19 37 0.025302693 ubox
19 60 0.031324722 ubox
19 64 0.036226694 ubox
20 25 0.007231455 ubox
20 26 0.004630882 ubox
20 29 0.006524305 ubox
20 39 0.006091186 ubox
20 63 0.036108940 ubox
21 35 0.010379154 ubox
21 62 0.031292276 ubox
22 62 0.003287897 ubox
23 62 0.014696185 ubox
24 29 0.008723373 ubox
24 38 0.056309379 ubox
24 39 0.044110503 ubox
24 61 0.024414867 ubox
25 30 0.008185643 ubox
25 37 0.046582629 ubox
25 60 0.024403041 ubox
26 36 0.033851513 ubox
26 37 0.169531780 ubox
26 59 0.003779215 ubox
27 34 0.015304207 ubox
27 36 0.994854145 ubox
27 37 0.007915177 ubox
28 35 0.997364206 ubox
29 34 0.997274977 ubox
29 36 0.028502948 ubox
29 37 0.005746351 ubox
30 35 0.020277366 ubox
30 39 0.005726325 ubox
31 35 0.003319385 ubox
34 39 0.003544934 ubox
36 62 0.004478521 ubox
37 44 0.003401136 ubox
37 61 0.026172432 ubox
37 65 0.003183643 ubox
38 60 0.026259844 ubox
38 64 0.003166442 ubox
39 59 0.022980846 ubox
41 62 0.010542673 ubox
42 53 0.004136278 ubox
43 52 0.004355348 ubox
44 51 0.004386763 ubox
44 59 0.996621774 ubox
45 55 0.006739824 ubox
45 58 0.999514194 ubox
46 54 0.007110172 ubox
46 57 0.999937413 ubox
47 53 0.007027744 ubox
47 56 0.999512405 ubox
48 54 0.004016346 ubox
48 55 0.999020096 ubox
49 54 0.993605074 ubox
50 54 0.028166990 ubox
60 69 0.006675312 ubox
61 68 0.006682929 ubox
62 67 0.006182260 ubox
66 72 0.014826148 ubox
66 73 0.044831062 ubox
66 75 0.012182184 ubox
66 76 0.031649684 ubox
66 77 0.042301081 ubox
67 72 0.042725739 ubox
67 73 0.027774571 ubox
67 75 0.035814208 ubox
67 76 0.047433673 ubox
67 77 0.013362971 ubox
68 72 0.020951536 ubox
68 73 0.017578887 ubox
68 75 0.039226621 ubox
68 76 0.013735893 ubox
68 77 0.010810866 ubox
68 78 0.021711745 ubox
69 79 0.014853346 ubox
70 75 0.010973014 ubox
70 76 0.013140303 ubox
70 77 0.015654233 ubox
71 79 0.026775944 ubox
72 79 0.008126779 ubox
73 79 0.008274562 ubox
75 79 0.006130153 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
