%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (759)
} def

/sequence { (\
GGAAAGAUGGCGCAAAGGGCGAUCAAGACGCAGGGAUAACGUGGGUCAGGCGGUGCGAAAGGAUGGCCGCGCUAUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 70 0.003422815 ubox
1 73 0.005678600 ubox
1 77 0.007546099 ubox
1 78 0.272434862 ubox
2 70 0.003227724 ubox
2 72 0.005985911 ubox
2 76 0.007776985 ubox
2 77 0.248006322 ubox
2 78 0.604109438 ubox
3 75 0.006666534 ubox
3 76 0.199522143 ubox
3 77 0.578932199 ubox
4 75 0.131908835 ubox
4 76 0.407607378 ubox
4 77 0.068483526 ubox
5 73 0.007237214 ubox
5 75 0.269636852 ubox
5 76 0.069514799 ubox
5 77 0.643015657 ubox
6 24 0.088804957 ubox
6 72 0.006092432 ubox
6 73 0.004024881 ubox
6 75 0.058236493 ubox
6 76 0.859001807 ubox
6 77 0.026080072 ubox
6 78 0.058650476 ubox
7 23 0.088916393 ubox
7 73 0.008150277 ubox
7 75 0.936936845 ubox
7 76 0.021277986 ubox
7 77 0.051654235 ubox
8 22 0.088356943 ubox
8 25 0.010426106 ubox
8 74 0.986369217 ubox
9 20 0.003541349 ubox
9 24 0.011601795 ubox
9 72 0.005082343 ubox
9 73 0.994495831 ubox
10 20 0.088776207 ubox
10 23 0.011515293 ubox
10 70 0.005813969 ubox
10 72 0.995903446 ubox
11 18 0.005181983 ubox
11 19 0.088693612 ubox
11 21 0.015223345 ubox
11 69 0.005641029 ubox
11 71 0.995882947 ubox
12 20 0.030525323 ubox
12 70 0.995490396 ubox
13 17 0.069973343 ubox
13 18 0.022171989 ubox
13 19 0.030967142 ubox
13 21 0.005551876 ubox
13 69 0.994453845 ubox
14 23 0.025306226 ubox
15 23 0.018292556 ubox
16 23 0.061768402 ubox
17 23 0.041172010 ubox
17 24 0.488437597 ubox
17 47 0.003859313 ubox
17 56 0.006302582 ubox
17 68 0.036005991 ubox
18 23 0.435148973 ubox
18 24 0.214624918 ubox
18 46 0.003527975 ubox
18 47 0.003391754 ubox
18 67 0.029401668 ubox
18 68 0.324808343 ubox
18 73 0.003404624 ubox
19 23 0.140060869 ubox
19 24 0.078792214 ubox
19 31 0.012703806 ubox
19 54 0.006404786 ubox
19 56 0.005274220 ubox
19 67 0.325662100 ubox
19 70 0.003483328 ubox
19 72 0.003674325 ubox
20 27 0.019706914 ubox
20 30 0.012884135 ubox
20 44 0.003441552 ubox
20 52 0.003734150 ubox
20 53 0.006302435 ubox
20 55 0.005281278 ubox
20 65 0.020656139 ubox
20 66 0.326266738 ubox
20 69 0.003700485 ubox
20 71 0.003677060 ubox
21 29 0.012769542 ubox
21 47 0.014998285 ubox
21 51 0.004387306 ubox
21 54 0.004311231 ubox
21 64 0.013309526 ubox
21 70 0.003656411 ubox
22 42 0.003244872 ubox
22 46 0.014870042 ubox
22 54 0.003615994 ubox
22 64 0.324438182 ubox
23 45 0.014628295 ubox
23 48 0.014366835 ubox
23 50 0.006198041 ubox
23 53 0.003731261 ubox
23 62 0.010830333 ubox
23 63 0.326382609 ubox
24 44 0.014456834 ubox
24 49 0.009487381 ubox
24 50 0.010719149 ubox
24 52 0.003785434 ubox
24 61 0.017076503 ubox
24 62 0.325681398 ubox
27 47 0.983626429 ubox
27 56 0.010767189 ubox
28 42 0.009543642 ubox
28 46 0.984918959 ubox
28 54 0.006792449 ubox
29 34 0.003399301 ubox
29 41 0.009997267 ubox
29 43 0.009248929 ubox
29 44 0.006346116 ubox
29 45 0.984927734 ubox
29 52 0.012650455 ubox
29 53 0.004943880 ubox
29 55 0.007738552 ubox
29 57 0.167901613 ubox
30 40 0.009837970 ubox
30 42 0.009618869 ubox
30 51 0.013550418 ubox
30 54 0.007763770 ubox
30 56 0.169128055 ubox
31 41 0.009627578 ubox
31 43 0.984973483 ubox
31 44 0.006671681 ubox
31 50 0.013542047 ubox
31 53 0.007766434 ubox
31 55 0.169112982 ubox
32 42 0.983206979 ubox
32 54 0.165373255 ubox
33 40 0.105784223 ubox
33 42 0.010871066 ubox
33 47 0.004211629 ubox
33 51 0.020265045 ubox
34 40 0.977561440 ubox
34 46 0.003828114 ubox
34 47 0.009135633 ubox
34 51 0.088125345 ubox
35 40 0.026083374 ubox
35 46 0.006820527 ubox
35 47 0.058535330 ubox
35 51 0.078520661 ubox
36 46 0.058386599 ubox
36 54 0.006515400 ubox
37 43 0.003287548 ubox
37 44 0.006073328 ubox
37 45 0.057269157 ubox
37 48 0.074344901 ubox
37 49 0.023517128 ubox
37 50 0.013074171 ubox
37 52 0.004720607 ubox
37 53 0.009401312 ubox
38 42 0.003362598 ubox
38 46 0.005137581 ubox
38 54 0.004658609 ubox
39 46 0.142804260 ubox
39 54 0.005105519 ubox
40 44 0.008452146 ubox
40 45 0.146773263 ubox
40 49 0.023442547 ubox
40 50 0.025308101 ubox
40 52 0.033454783 ubox
40 53 0.005812244 ubox
41 47 0.009755670 ubox
41 51 0.034843295 ubox
42 48 0.026684593 ubox
42 50 0.034605489 ubox
42 52 0.004139378 ubox
42 53 0.007888694 ubox
43 47 0.026417436 ubox
43 51 0.005122905 ubox
44 51 0.010894237 ubox
45 51 0.006382413 ubox
46 50 0.005992211 ubox
46 53 0.003363753 ubox
47 52 0.004557021 ubox
47 55 0.003731594 ubox
48 54 0.010972539 ubox
48 73 0.038155369 ubox
49 54 0.008804835 ubox
49 56 0.072341595 ubox
49 68 0.941620292 ubox
49 72 0.039983155 ubox
49 73 0.032163647 ubox
49 76 0.003644689 ubox
50 54 0.003819979 ubox
50 56 0.225158443 ubox
50 67 0.942807148 ubox
50 68 0.003532808 ubox
50 70 0.051542764 ubox
50 72 0.033364720 ubox
50 75 0.003985333 ubox
51 55 0.223927974 ubox
51 57 0.083266497 ubox
51 61 0.035842036 ubox
51 65 0.005140597 ubox
51 66 0.942753062 ubox
51 69 0.051610397 ubox
51 71 0.033392135 ubox
52 56 0.078986045 ubox
52 64 0.004704653 ubox
52 68 0.051836640 ubox
52 70 0.033227211 ubox
52 73 0.015072368 ubox
53 64 0.938774832 ubox
53 67 0.051759823 ubox
53 68 0.015671466 ubox
53 72 0.015779155 ubox
54 58 0.006290470 ubox
54 59 0.016100226 ubox
54 60 0.013483806 ubox
54 61 0.010665193 ubox
54 63 0.941020237 ubox
54 65 0.003669344 ubox
54 66 0.050137383 ubox
54 69 0.003595620 ubox
54 71 0.015779310 ubox
55 64 0.004827733 ubox
55 67 0.033453904 ubox
55 70 0.015812141 ubox
56 61 0.925135874 ubox
56 62 0.098738038 ubox
56 65 0.027447935 ubox
56 66 0.033618329 ubox
56 69 0.015816490 ubox
57 64 0.018258252 ubox
57 68 0.015417523 ubox
58 64 0.023891902 ubox
61 67 0.003829820 ubox
61 68 0.008946356 ubox
62 67 0.009027568 ubox
70 79 0.004536230 ubox
71 78 0.004782182 ubox
5 77 0.9500000 lbox
6 76 0.9500000 lbox
7 75 0.9500000 lbox
8 74 0.9500000 lbox
9 73 0.9500000 lbox
10 72 0.9500000 lbox
11 71 0.9500000 lbox
12 70 0.9500000 lbox
13 69 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
showpage
end
%%EOF
