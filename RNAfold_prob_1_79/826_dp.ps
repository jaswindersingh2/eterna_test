%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (826)
} def

/sequence { (\
GGAAAAACGAGACGCACUAUGACUAUGCUGACUGCGAAAAGACAGCAGACAUAGCAUAGGCAGUCCGAGAUACGUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.179531901 ubox
1 13 0.006580467 ubox
1 66 0.030817724 ubox
1 71 0.009936651 ubox
1 73 0.134891465 ubox
1 75 0.013182631 ubox
1 76 0.011280752 ubox
1 77 0.020982092 ubox
1 78 0.365130017 ubox
2 8 0.041714609 ubox
2 65 0.030171420 ubox
2 66 0.006745657 ubox
2 71 0.011522096 ubox
2 73 0.101910417 ubox
2 75 0.016023332 ubox
2 76 0.032847738 ubox
2 77 0.364407036 ubox
2 78 0.357254615 ubox
3 64 0.028353201 ubox
3 71 0.031725595 ubox
3 75 0.035428194 ubox
3 76 0.362614255 ubox
3 77 0.355419826 ubox
4 71 0.054484397 ubox
4 75 0.351970394 ubox
4 76 0.344452000 ubox
4 77 0.021520164 ubox
5 71 0.047927869 ubox
5 75 0.328586141 ubox
5 76 0.024388349 ubox
5 77 0.151245850 ubox
6 71 0.104693460 ubox
6 75 0.023408126 ubox
6 76 0.184140851 ubox
6 77 0.008775008 ubox
7 64 0.003522165 ubox
7 71 0.072067514 ubox
7 75 0.207250335 ubox
7 76 0.009283683 ubox
7 77 0.003232436 ubox
8 63 0.004438339 ubox
8 67 0.780562442 ubox
8 69 0.110095876 ubox
8 74 0.212354370 ubox
8 79 0.232616207 ubox
9 13 0.003633007 ubox
9 65 0.032256753 ubox
9 66 0.808612178 ubox
9 71 0.010271270 ubox
9 73 0.208825300 ubox
9 78 0.245951286 ubox
10 64 0.031850642 ubox
10 71 0.110753635 ubox
10 77 0.245690007 ubox
11 64 0.007548071 ubox
11 65 0.965807815 ubox
11 66 0.038861260 ubox
11 71 0.007198860 ubox
11 76 0.241682511 ubox
12 64 0.967381464 ubox
12 75 0.241735043 ubox
13 63 0.966733587 ubox
13 67 0.009295571 ubox
13 69 0.005950345 ubox
13 74 0.241421434 ubox
14 61 0.947643905 ubox
14 64 0.010396438 ubox
14 66 0.008879090 ubox
14 73 0.144130318 ubox
15 21 0.003433154 ubox
15 60 0.951708758 ubox
15 63 0.017428501 ubox
15 67 0.012212107 ubox
15 69 0.010791657 ubox
16 64 0.014196411 ubox
16 71 0.037233742 ubox
17 59 0.996517376 ubox
17 60 0.006421653 ubox
17 63 0.014587753 ubox
17 67 0.008576592 ubox
17 69 0.047788213 ubox
18 58 0.997903802 ubox
18 59 0.004068605 ubox
18 62 0.012834125 ubox
18 68 0.047001301 ubox
18 72 0.004903712 ubox
19 57 0.997784007 ubox
19 64 0.016952752 ubox
19 71 0.004952065 ubox
20 56 0.997861543 ubox
20 62 0.027298017 ubox
20 63 0.016381522 ubox
20 67 0.006036797 ubox
20 70 0.004486654 ubox
21 55 0.998020269 ubox
21 61 0.028316291 ubox
21 65 0.042969654 ubox
21 66 0.005115284 ubox
22 64 0.043207126 ubox
23 54 0.997997216 ubox
23 59 0.044186248 ubox
23 63 0.037669190 ubox
24 53 0.997933756 ubox
24 58 0.050044876 ubox
24 62 0.029617807 ubox
25 52 0.997753332 ubox
25 57 0.058060127 ubox
26 47 0.023386494 ubox
26 51 0.997560207 ubox
26 56 0.058248266 ubox
27 46 0.027913135 ubox
27 50 0.997596953 ubox
27 55 0.058291686 ubox
28 45 0.028983397 ubox
28 48 0.996822225 ubox
28 54 0.058285642 ubox
29 44 0.028992649 ubox
29 47 0.996802583 ubox
29 48 0.016182344 ubox
29 49 0.013265147 ubox
29 51 0.011251424 ubox
29 53 0.057162124 ubox
30 43 0.028956988 ubox
30 46 0.996812778 ubox
30 50 0.015959525 ubox
30 52 0.055020185 ubox
32 41 0.030227423 ubox
32 45 0.996432737 ubox
32 48 0.067810065 ubox
33 40 0.030142823 ubox
33 42 0.003253852 ubox
33 44 0.996399029 ubox
33 47 0.068048848 ubox
34 43 0.996212253 ubox
34 46 0.068155772 ubox
35 41 0.849493400 ubox
35 45 0.068161316 ubox
36 43 0.019640626 ubox
59 66 0.011311245 ubox
60 65 0.013080066 ubox
60 66 0.012106090 ubox
60 71 0.003395686 ubox
60 73 0.003985890 ubox
61 67 0.019769508 ubox
61 69 0.015658618 ubox
62 71 0.016870467 ubox
63 71 0.168492333 ubox
63 73 0.053255060 ubox
64 68 0.004444361 ubox
64 69 0.006731235 ubox
64 70 0.173119171 ubox
64 72 0.050754967 ubox
65 69 0.172651941 ubox
66 74 0.057640499 ubox
66 79 0.412933213 ubox
67 71 0.006690346 ubox
67 73 0.066222459 ubox
67 75 0.003269631 ubox
67 76 0.015405318 ubox
67 77 0.010865328 ubox
67 78 0.468324977 ubox
68 75 0.025479940 ubox
68 76 0.019419912 ubox
68 77 0.469037889 ubox
69 73 0.031313030 ubox
69 75 0.020027868 ubox
69 76 0.451830412 ubox
69 77 0.046080095 ubox
69 78 0.365910847 ubox
70 75 0.393601919 ubox
70 76 0.053076524 ubox
70 77 0.361167604 ubox
71 79 0.004223728 ubox
72 76 0.010117698 ubox
72 77 0.006500342 ubox
73 79 0.070734776 ubox
74 78 0.069872656 ubox
75 79 0.003482507 ubox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 41 0.9500000 lbox
showpage
end
%%EOF
