%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (477)
} def

/sequence { (\
GGAAAAGAGCUCGGCAGGUGAAAACCGACAAAAGUCGCCAAAAGACUGCAAAAGCAGUCGAGCUCAAAGAGUAGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.003209290 ubox
1 12 0.004293133 ubox
1 65 0.003700559 ubox
1 72 0.025221309 ubox
1 75 0.021239041 ubox
1 76 0.016543727 ubox
1 78 0.059484529 ubox
2 11 0.004009571 ubox
2 12 0.005407267 ubox
2 65 0.005510720 ubox
2 72 0.019937979 ubox
2 75 0.019075895 ubox
2 77 0.053527615 ubox
2 78 0.087285745 ubox
3 11 0.005264837 ubox
3 64 0.004331884 ubox
3 72 0.014464147 ubox
3 76 0.048749168 ubox
3 77 0.083835856 ubox
4 72 0.014885893 ubox
4 76 0.072021277 ubox
4 77 0.005960692 ubox
5 72 0.008255071 ubox
5 76 0.006569906 ubox
5 77 0.012649794 ubox
6 72 0.014898384 ubox
6 76 0.015150435 ubox
6 77 0.004293576 ubox
7 65 0.995836741 ubox
7 75 0.012941589 ubox
7 77 0.058897936 ubox
7 78 0.024985506 ubox
8 64 0.996989517 ubox
8 76 0.065678309 ubox
8 77 0.017884774 ubox
9 63 0.997299930 ubox
9 72 0.013741629 ubox
9 75 0.068700118 ubox
10 62 0.997300916 ubox
10 71 0.013935561 ubox
10 74 0.068719189 ubox
11 40 0.003973613 ubox
11 41 0.005967198 ubox
11 61 0.997009903 ubox
11 70 0.013996906 ubox
11 73 0.063387842 ubox
12 60 0.995961139 ubox
12 69 0.014020355 ubox
12 71 0.006556614 ubox
13 25 0.005495871 ubox
13 26 0.010536913 ubox
13 29 0.013788378 ubox
13 36 0.009302061 ubox
13 38 0.003730365 ubox
13 39 0.967096271 ubox
13 59 0.163693956 ubox
13 64 0.007442308 ubox
14 25 0.010658266 ubox
14 29 0.024878393 ubox
14 35 0.009317165 ubox
14 38 0.968269137 ubox
14 39 0.003830728 ubox
14 49 0.006724088 ubox
14 58 0.142570071 ubox
14 63 0.007753866 ubox
15 20 0.007471952 ubox
15 27 0.008451551 ubox
15 34 0.009283360 ubox
15 37 0.967119259 ubox
15 48 0.006795419 ubox
15 57 0.139814285 ubox
15 62 0.007749919 ubox
16 35 0.015364777 ubox
16 47 0.007857162 ubox
17 25 0.016675905 ubox
17 26 0.991653900 ubox
17 35 0.011194975 ubox
17 36 0.010399620 ubox
17 39 0.093505780 ubox
17 46 0.008415479 ubox
17 47 0.007053495 ubox
18 25 0.993430253 ubox
18 26 0.009802085 ubox
18 29 0.012829859 ubox
18 35 0.008617009 ubox
18 38 0.093598054 ubox
18 46 0.010297564 ubox
18 55 0.003976586 ubox
19 23 0.010594375 ubox
19 24 0.983446380 ubox
19 27 0.003773793 ubox
19 28 0.012706214 ubox
19 30 0.011106150 ubox
19 33 0.011382068 ubox
19 34 0.003841837 ubox
19 37 0.090773186 ubox
19 40 0.003910253 ubox
19 45 0.010229177 ubox
19 54 0.003918812 ubox
20 25 0.009143284 ubox
20 26 0.012624236 ubox
20 29 0.011369374 ubox
20 36 0.089276007 ubox
20 39 0.004313819 ubox
21 35 0.083147327 ubox
22 35 0.004338624 ubox
24 35 0.016525258 ubox
25 34 0.025426113 ubox
26 34 0.026792751 ubox
26 37 0.059675669 ubox
27 35 0.003406052 ubox
27 36 0.986328941 ubox
27 39 0.003271426 ubox
27 55 0.005153658 ubox
28 35 0.987119452 ubox
29 34 0.985457143 ubox
29 37 0.003809801 ubox
29 48 0.003553368 ubox
32 47 0.004346852 ubox
33 47 0.094823999 ubox
34 39 0.005477348 ubox
34 46 0.112950442 ubox
35 45 0.113098305 ubox
36 44 0.113191606 ubox
37 46 0.017311676 ubox
37 49 0.009142790 ubox
37 55 0.006893549 ubox
37 63 0.004439390 ubox
38 44 0.014844333 ubox
38 48 0.008423685 ubox
38 54 0.006875820 ubox
38 62 0.004434078 ubox
39 44 0.027645248 ubox
39 48 0.005403810 ubox
40 47 0.006221279 ubox
44 55 0.006846298 ubox
44 58 0.005259980 ubox
44 59 0.984889789 ubox
45 58 0.989051699 ubox
46 54 0.009695973 ubox
46 57 0.990073738 ubox
47 53 0.009700905 ubox
47 56 0.994271890 ubox
48 55 0.999483452 ubox
49 54 0.998055087 ubox
60 65 0.003454016 ubox
60 77 0.016443179 ubox
60 78 0.008189674 ubox
61 76 0.018724706 ubox
61 77 0.005913480 ubox
62 72 0.066828197 ubox
62 75 0.019839069 ubox
63 71 0.068408999 ubox
63 74 0.019851232 ubox
64 70 0.068433861 ubox
64 73 0.019530434 ubox
65 69 0.067896907 ubox
65 71 0.013621820 ubox
65 79 0.005628909 ubox
66 72 0.013867234 ubox
66 76 0.007259038 ubox
66 77 0.035081804 ubox
67 72 0.017520547 ubox
67 76 0.036420877 ubox
67 77 0.289176261 ubox
68 72 0.010777469 ubox
68 76 0.322193854 ubox
68 77 0.033024421 ubox
69 75 0.326357029 ubox
69 76 0.032830626 ubox
69 77 0.181400037 ubox
69 78 0.495159832 ubox
70 76 0.199568274 ubox
70 77 0.484028292 ubox
71 75 0.203656748 ubox
71 76 0.367011820 ubox
71 77 0.021391769 ubox
71 78 0.108594301 ubox
72 79 0.009580924 ubox
73 77 0.009054307 ubox
74 78 0.029669505 ubox
75 79 0.011200548 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
