%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (188)
} def

/sequence { (\
GGAAAUGGAUUGUCCCGUACCGCACAAGCGUGUACUUUAGGCAUGGCAUCUGCCUGCCCGGACUCUCCGAAACACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.021056483 ubox
1 15 0.023706347 ubox
1 16 0.012849616 ubox
1 21 0.007477012 ubox
1 66 0.004837252 ubox
1 68 0.057580538 ubox
1 73 0.312610511 ubox
1 75 0.199308955 ubox
1 76 0.075062808 ubox
1 77 0.008682479 ubox
1 78 0.170686334 ubox
2 6 0.007984879 ubox
2 14 0.023902307 ubox
2 15 0.012509589 ubox
2 20 0.007475120 ubox
2 65 0.005776447 ubox
2 67 0.057725378 ubox
2 73 0.221199457 ubox
2 75 0.086289473 ubox
2 76 0.010507274 ubox
2 77 0.168609771 ubox
2 78 0.192102034 ubox
3 13 0.022714298 ubox
3 64 0.005680079 ubox
3 66 0.049470903 ubox
3 76 0.161630423 ubox
3 77 0.191045177 ubox
4 11 0.007951815 ubox
4 13 0.004319010 ubox
4 64 0.003486903 ubox
4 76 0.177791880 ubox
4 77 0.023426053 ubox
5 10 0.006471010 ubox
5 11 0.014570446 ubox
5 13 0.003408669 ubox
5 18 0.011083655 ubox
5 64 0.008721214 ubox
5 76 0.029529928 ubox
5 77 0.006838420 ubox
6 12 0.003843136 ubox
6 17 0.012059847 ubox
6 69 0.614735016 ubox
6 70 0.068002094 ubox
6 71 0.021991051 ubox
6 72 0.027432317 ubox
6 74 0.071990689 ubox
6 79 0.027272374 ubox
7 14 0.004336876 ubox
7 15 0.057086921 ubox
7 16 0.064723427 ubox
7 64 0.005144486 ubox
7 65 0.017937723 ubox
7 66 0.039725448 ubox
7 67 0.009893506 ubox
7 68 0.988405604 ubox
7 73 0.049778153 ubox
7 75 0.004548191 ubox
7 76 0.003551245 ubox
7 78 0.043895887 ubox
8 13 0.003370316 ubox
8 14 0.058181220 ubox
8 15 0.064741677 ubox
8 16 0.006385786 ubox
8 63 0.003801462 ubox
8 64 0.017228013 ubox
8 65 0.055392187 ubox
8 66 0.005961774 ubox
8 67 0.991344394 ubox
8 68 0.007064748 ubox
8 73 0.003407593 ubox
8 75 0.003961332 ubox
8 77 0.043892942 ubox
8 78 0.012285764 ubox
9 13 0.050788597 ubox
9 64 0.052865873 ubox
9 66 0.986138777 ubox
9 76 0.043360031 ubox
9 77 0.012094470 ubox
10 70 0.021724150 ubox
10 71 0.007126174 ubox
10 72 0.003689030 ubox
11 69 0.019944639 ubox
11 70 0.007327298 ubox
11 71 0.003724208 ubox
11 74 0.044756062 ubox
12 16 0.003162979 ubox
12 63 0.993628889 ubox
12 68 0.010132352 ubox
12 73 0.045334697 ubox
12 75 0.004858541 ubox
13 62 0.993849376 ubox
13 72 0.042792947 ubox
13 74 0.004556604 ubox
14 60 0.003784725 ubox
14 61 0.991797243 ubox
15 60 0.987519857 ubox
15 61 0.065933664 ubox
16 40 0.004034197 ubox
16 60 0.092898345 ubox
16 69 0.005773943 ubox
17 35 0.997112666 ubox
17 36 0.008388544 ubox
17 58 0.003407759 ubox
17 59 0.033475163 ubox
18 32 0.005551550 ubox
18 34 0.999047571 ubox
19 31 0.006424708 ubox
19 33 0.999386241 ubox
20 30 0.004776850 ubox
20 32 0.999274646 ubox
21 30 0.998908729 ubox
21 32 0.017701000 ubox
22 29 0.999418954 ubox
22 31 0.024733330 ubox
22 33 0.018097475 ubox
23 28 0.997989690 ubox
23 30 0.024841808 ubox
23 32 0.019012724 ubox
24 31 0.019426674 ubox
25 30 0.019403327 ubox
30 75 0.005086263 ubox
31 74 0.005118686 ubox
32 73 0.005128816 ubox
33 72 0.004938169 ubox
36 60 0.003934866 ubox
36 62 0.013296213 ubox
37 60 0.003993460 ubox
37 61 0.014625042 ubox
37 62 0.004765280 ubox
38 56 0.042577792 ubox
38 60 0.021178698 ubox
38 61 0.005203632 ubox
39 55 0.047337761 ubox
40 54 0.047820760 ubox
40 57 0.003243487 ubox
40 58 0.992326772 ubox
40 59 0.090583374 ubox
41 53 0.047823287 ubox
41 57 0.996641480 ubox
41 58 0.065622664 ubox
42 52 0.047819523 ubox
42 56 0.998592459 ubox
43 51 0.045792615 ubox
43 55 0.976472774 ubox
45 49 0.006103368 ubox
45 50 0.031393040 ubox
45 51 0.003651277 ubox
45 53 0.009423856 ubox
45 54 0.998483939 ubox
45 58 0.007211018 ubox
46 50 0.004779671 ubox
46 53 0.998760260 ubox
46 57 0.007282517 ubox
47 52 0.997328916 ubox
47 56 0.007304424 ubox
48 55 0.006675407 ubox
59 69 0.105410873 ubox
60 68 0.106929056 ubox
61 67 0.106903094 ubox
62 66 0.093006644 ubox
68 79 0.071007030 ubox
69 73 0.026213545 ubox
69 75 0.046060327 ubox
69 76 0.011437365 ubox
69 77 0.026170589 ubox
69 78 0.504689488 ubox
70 76 0.029462431 ubox
70 77 0.499991715 ubox
71 76 0.435256399 ubox
71 77 0.023191035 ubox
72 76 0.021733488 ubox
72 77 0.010454314 ubox
73 79 0.034729569 ubox
75 79 0.014824703 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
