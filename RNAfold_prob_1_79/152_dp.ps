%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (152)
} def

/sequence { (\
GGAAAAAAGCACAUGACGAGACGACGAGUGGAGAAAUCACAAGUGGUACUGGAACAUGAAGCAAAAAAGCAUGAGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.163620734 ubox
1 12 0.047737019 ubox
1 14 0.003461355 ubox
1 17 0.027408798 ubox
1 40 0.005253750 ubox
1 62 0.008036275 ubox
1 70 0.148778618 ubox
1 72 0.011018248 ubox
1 77 0.004832426 ubox
1 78 0.175974115 ubox
2 10 0.044774529 ubox
2 12 0.012276770 ubox
2 17 0.008757291 ubox
2 38 0.007912275 ubox
2 62 0.005841843 ubox
2 70 0.066215392 ubox
2 72 0.003629263 ubox
2 76 0.006175411 ubox
2 77 0.171280891 ubox
2 78 0.239595098 ubox
3 14 0.003483295 ubox
3 37 0.007750892 ubox
3 72 0.005480513 ubox
3 76 0.162822648 ubox
3 77 0.236700694 ubox
4 14 0.012836336 ubox
4 72 0.006324418 ubox
4 76 0.212792032 ubox
4 77 0.016264006 ubox
5 14 0.009986779 ubox
5 72 0.010074327 ubox
5 76 0.018791569 ubox
5 77 0.010721292 ubox
6 14 0.005098299 ubox
6 72 0.016355402 ubox
6 76 0.010931402 ubox
6 77 0.033930838 ubox
7 14 0.007766725 ubox
7 72 0.072299724 ubox
7 76 0.038777430 ubox
7 77 0.014845509 ubox
8 14 0.012337738 ubox
8 47 0.008573576 ubox
8 50 0.004198097 ubox
8 72 0.081029690 ubox
8 76 0.014797517 ubox
8 77 0.119264003 ubox
9 14 0.003364850 ubox
9 17 0.021170269 ubox
9 49 0.004267116 ubox
9 62 0.707829020 ubox
9 70 0.142306991 ubox
9 72 0.021440074 ubox
9 76 0.142894766 ubox
9 77 0.004867135 ubox
9 78 0.015467371 ubox
10 15 0.034375271 ubox
10 18 0.015535191 ubox
10 20 0.006946394 ubox
10 30 0.013240399 ubox
10 45 0.010448061 ubox
10 51 0.010393032 ubox
10 58 0.030495242 ubox
10 61 0.707440211 ubox
10 69 0.142234761 ubox
10 73 0.098364271 ubox
10 75 0.144970728 ubox
10 79 0.010833093 ubox
11 29 0.013276388 ubox
11 44 0.010499025 ubox
11 50 0.009045953 ubox
11 57 0.028682214 ubox
11 72 0.086270810 ubox
11 76 0.013642747 ubox
11 77 0.004225603 ubox
12 18 0.018168655 ubox
12 20 0.006997899 ubox
12 28 0.013278329 ubox
12 30 0.006670859 ubox
12 43 0.010481521 ubox
12 51 0.017980189 ubox
12 58 0.943844814 ubox
12 73 0.060848293 ubox
12 75 0.013606830 ubox
12 79 0.007175580 ubox
13 29 0.006697318 ubox
13 50 0.016106712 ubox
13 57 0.948227384 ubox
13 72 0.060335208 ubox
14 19 0.005735587 ubox
14 26 0.012848455 ubox
14 28 0.006685669 ubox
14 39 0.005159822 ubox
14 41 0.007434331 ubox
14 51 0.003781950 ubox
14 53 0.004301301 ubox
14 54 0.024356482 ubox
14 56 0.948536695 ubox
14 59 0.003519567 ubox
14 71 0.059305384 ubox
14 79 0.008501174 ubox
15 25 0.012969361 ubox
15 38 0.005245271 ubox
15 40 0.007439819 ubox
15 49 0.005961894 ubox
15 55 0.945935257 ubox
15 62 0.003257593 ubox
15 70 0.051457766 ubox
15 77 0.004647922 ubox
15 78 0.013580580 ubox
16 37 0.005149149 ubox
16 50 0.008412703 ubox
16 57 0.004256493 ubox
16 76 0.005456872 ubox
16 77 0.012169966 ubox
17 23 0.012976932 ubox
17 26 0.007984861 ubox
17 33 0.003441023 ubox
17 51 0.220936382 ubox
17 52 0.907179454 ubox
17 69 0.012769372 ubox
17 75 0.005778672 ubox
17 79 0.010396144 ubox
18 22 0.012179883 ubox
18 25 0.007917446 ubox
18 38 0.006852305 ubox
18 49 0.048412307 ubox
18 50 0.172893190 ubox
18 78 0.009370087 ubox
19 37 0.006828096 ubox
19 50 0.969135423 ubox
19 77 0.008546500 ubox
20 47 0.007491390 ubox
20 49 0.973758303 ubox
20 50 0.010624155 ubox
20 76 0.006455781 ubox
21 29 0.004565601 ubox
21 47 0.995727352 ubox
22 28 0.004625085 ubox
22 33 0.006742359 ubox
22 45 0.010867920 ubox
22 46 0.999114091 ubox
23 44 0.007301369 ubox
24 44 0.996783059 ubox
24 47 0.007685000 ubox
25 30 0.006848057 ubox
25 43 0.999315832 ubox
25 45 0.005223386 ubox
25 46 0.007780926 ubox
26 38 0.006074008 ubox
26 44 0.005032524 ubox
27 37 0.005920784 ubox
27 44 0.006789018 ubox
28 37 0.006463113 ubox
28 38 0.003713937 ubox
28 40 0.993913966 ubox
29 36 0.007221719 ubox
29 39 0.992972386 ubox
29 41 0.061381433 ubox
29 42 0.004254242 ubox
30 37 0.013416554 ubox
30 38 0.966260819 ubox
30 40 0.064915397 ubox
31 37 0.691330167 ubox
31 38 0.252324090 ubox
31 40 0.005581625 ubox
32 37 0.331998711 ubox
32 50 0.004176981 ubox
33 37 0.014720063 ubox
33 38 0.012349468 ubox
33 49 0.004278025 ubox
36 47 0.008175500 ubox
37 46 0.008454287 ubox
38 45 0.008598295 ubox
39 44 0.007156528 ubox
40 51 0.004626921 ubox
41 50 0.003899514 ubox
42 50 0.005671679 ubox
43 49 0.006317831 ubox
44 48 0.005693041 ubox
48 76 0.003944230 ubox
49 58 0.004827284 ubox
49 61 0.006409483 ubox
49 75 0.004400658 ubox
49 79 0.004738974 ubox
50 56 0.003410676 ubox
50 60 0.006410514 ubox
50 63 0.007195137 ubox
50 74 0.004361873 ubox
50 79 0.008633037 ubox
51 55 0.004327900 ubox
51 62 0.009074288 ubox
51 78 0.023777357 ubox
52 62 0.003236497 ubox
52 77 0.021460751 ubox
52 78 0.287530033 ubox
53 76 0.019903386 ubox
53 77 0.290318364 ubox
54 76 0.290456555 ubox
54 77 0.003260576 ubox
55 61 0.013995204 ubox
55 69 0.006419927 ubox
55 73 0.069107883 ubox
55 75 0.288726366 ubox
56 72 0.074766170 ubox
56 76 0.011442328 ubox
57 63 0.015236991 ubox
57 64 0.009246145 ubox
57 65 0.005733044 ubox
57 66 0.008600404 ubox
57 67 0.004941931 ubox
57 68 0.004151713 ubox
57 71 0.075919053 ubox
57 73 0.085730979 ubox
57 74 0.238197069 ubox
57 75 0.012319522 ubox
57 79 0.022228815 ubox
58 62 0.016823149 ubox
58 70 0.069615981 ubox
58 72 0.060491402 ubox
58 77 0.005899101 ubox
58 78 0.045487067 ubox
59 72 0.255413161 ubox
59 76 0.018941626 ubox
59 77 0.046912620 ubox
60 72 0.074101016 ubox
60 76 0.045943269 ubox
60 77 0.052015860 ubox
61 70 0.628577911 ubox
61 76 0.061514761 ubox
61 78 0.008498348 ubox
62 69 0.629084686 ubox
62 73 0.066463470 ubox
62 75 0.062680933 ubox
62 79 0.004051465 ubox
63 72 0.066307250 ubox
63 76 0.005025361 ubox
63 77 0.011104998 ubox
64 72 0.014486506 ubox
64 76 0.010827457 ubox
64 77 0.012226498 ubox
65 72 0.033822955 ubox
65 76 0.011313737 ubox
65 77 0.013773016 ubox
66 72 0.016028893 ubox
66 76 0.012189096 ubox
66 77 0.024738469 ubox
67 72 0.016208380 ubox
67 76 0.024783117 ubox
67 77 0.035312883 ubox
68 72 0.010232851 ubox
68 76 0.035152371 ubox
68 77 0.319117912 ubox
69 76 0.376758822 ubox
69 77 0.011117197 ubox
69 78 0.037893194 ubox
70 75 0.381525328 ubox
70 79 0.028351944 ubox
71 76 0.013258011 ubox
71 77 0.027666676 ubox
72 79 0.075281784 ubox
73 77 0.006730055 ubox
73 78 0.121634575 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
28 40 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
31 37 0.9500000 lbox
showpage
end
%%EOF
