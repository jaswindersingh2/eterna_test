%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (349)
} def

/sequence { (\
GGAAAGUGCGUCCGAAAAAGGACCUCAAAGAGAGCACAGCCACUCGAAAAGAGCUGCGAAAGCAGGGCGUAGUGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.020468952 ubox
1 9 0.124310537 ubox
1 13 0.021325515 ubox
1 24 0.025152807 ubox
1 25 0.021172054 ubox
1 26 0.064497788 ubox
1 41 0.035431582 ubox
1 76 0.003766980 ubox
1 77 0.003303780 ubox
1 78 0.094962858 ubox
2 7 0.013644630 ubox
2 9 0.079314748 ubox
2 12 0.021341446 ubox
2 23 0.021357567 ubox
2 24 0.027983533 ubox
2 25 0.057495858 ubox
2 26 0.129374837 ubox
2 40 0.035397613 ubox
2 41 0.003227154 ubox
2 75 0.004192925 ubox
2 77 0.075562300 ubox
2 78 0.158996670 ubox
3 7 0.062512143 ubox
3 11 0.020530240 ubox
3 25 0.126385152 ubox
3 76 0.053685462 ubox
3 77 0.141730211 ubox
4 25 0.014487161 ubox
4 76 0.087899793 ubox
4 77 0.074964898 ubox
5 25 0.111671550 ubox
5 73 0.015983785 ubox
5 76 0.095935743 ubox
5 77 0.005317094 ubox
6 23 0.011825815 ubox
6 24 0.120632852 ubox
6 25 0.050148409 ubox
6 26 0.554235946 ubox
6 37 0.066920801 ubox
6 73 0.003427634 ubox
6 75 0.110369715 ubox
6 77 0.003286039 ubox
6 78 0.019427097 ubox
7 22 0.010925299 ubox
7 27 0.252324356 ubox
7 28 0.031200700 ubox
7 29 0.017408484 ubox
7 30 0.007906931 ubox
7 31 0.005414074 ubox
7 36 0.067257076 ubox
7 71 0.017900198 ubox
7 74 0.109932581 ubox
7 79 0.011825657 ubox
8 23 0.014640075 ubox
8 24 0.682451023 ubox
8 25 0.095890888 ubox
8 26 0.278901881 ubox
8 35 0.067347483 ubox
8 68 0.003188843 ubox
8 70 0.018671757 ubox
8 73 0.109316938 ubox
8 75 0.008496713 ubox
8 78 0.018972578 ubox
9 20 0.010046027 ubox
9 30 0.014401710 ubox
9 32 0.003945191 ubox
9 34 0.067136345 ubox
9 67 0.003185196 ubox
9 69 0.018689535 ubox
9 72 0.109405675 ubox
9 74 0.008456111 ubox
9 79 0.014412652 ubox
10 23 0.993681946 ubox
10 24 0.086233672 ubox
10 26 0.006585696 ubox
10 68 0.011069003 ubox
10 78 0.003923095 ubox
11 22 0.999217353 ubox
11 67 0.010612797 ubox
12 21 0.999630830 ubox
12 66 0.010288239 ubox
13 20 0.999396619 ubox
13 65 0.009374548 ubox
14 26 0.004020821 ubox
15 25 0.003863503 ubox
20 37 0.003559140 ubox
20 41 0.006324653 ubox
20 57 0.003429172 ubox
21 40 0.006327179 ubox
22 55 0.003258345 ubox
23 34 0.004043887 ubox
24 30 0.078364963 ubox
24 32 0.280498985 ubox
24 34 0.087008618 ubox
24 53 0.012679858 ubox
24 79 0.006728844 ubox
25 29 0.071135159 ubox
25 30 0.010614955 ubox
25 31 0.289842623 ubox
25 32 0.004591149 ubox
25 33 0.093679402 ubox
25 52 0.012841422 ubox
25 79 0.003945465 ubox
26 30 0.288413079 ubox
26 32 0.096527925 ubox
26 51 0.012829637 ubox
26 79 0.013834500 ubox
27 77 0.004155247 ubox
28 77 0.007453872 ubox
29 76 0.005353077 ubox
29 77 0.008384185 ubox
30 35 0.003953489 ubox
30 45 0.007681986 ubox
30 75 0.004060568 ubox
30 76 0.004029946 ubox
30 77 0.023343736 ubox
30 78 0.579194394 ubox
31 44 0.007683987 ubox
31 76 0.022660320 ubox
31 77 0.512261140 ubox
32 41 0.003265636 ubox
32 43 0.007649605 ubox
32 45 0.011647559 ubox
32 75 0.021509736 ubox
32 76 0.313775903 ubox
32 77 0.710468725 ubox
32 78 0.276622385 ubox
33 44 0.011661806 ubox
33 73 0.003932179 ubox
33 76 0.904565495 ubox
33 77 0.196807130 ubox
34 40 0.012441324 ubox
34 43 0.011628275 ubox
34 63 0.003328283 ubox
34 68 0.004396852 ubox
34 70 0.013885389 ubox
34 73 0.023525780 ubox
34 75 0.990517991 ubox
34 76 0.027876807 ubox
35 39 0.012468553 ubox
35 62 0.003334265 ubox
35 67 0.004400162 ubox
35 69 0.014678354 ubox
35 72 0.024790448 ubox
35 74 0.991086995 ubox
36 70 0.069320670 ubox
36 73 0.990458446 ubox
37 56 0.003927225 ubox
37 69 0.073690953 ubox
37 72 0.985974995 ubox
38 55 0.004948760 ubox
38 70 0.374070884 ubox
38 76 0.025562598 ubox
39 54 0.005170426 ubox
39 57 0.016431299 ubox
39 68 0.996406147 ubox
39 70 0.035044391 ubox
39 75 0.027704391 ubox
39 76 0.003252265 ubox
40 53 0.004821679 ubox
40 56 0.016253326 ubox
40 66 0.007112195 ubox
40 67 0.996994419 ubox
40 69 0.036428322 ubox
40 74 0.019991556 ubox
41 56 0.005987303 ubox
41 65 0.007966935 ubox
41 66 0.995763717 ubox
41 67 0.024437368 ubox
41 69 0.004225449 ubox
41 72 0.003718616 ubox
41 74 0.021185412 ubox
42 55 0.008546669 ubox
42 73 0.028667063 ubox
43 51 0.026861889 ubox
43 53 0.990090444 ubox
43 65 0.021267954 ubox
43 66 0.003180474 ubox
43 72 0.028738335 ubox
44 49 0.003418306 ubox
44 50 0.026046919 ubox
44 51 0.003993319 ubox
44 52 0.996195769 ubox
44 53 0.003276144 ubox
44 64 0.019010131 ubox
44 71 0.028272363 ubox
45 51 0.996793255 ubox
45 53 0.012421843 ubox
45 58 0.003427931 ubox
45 62 0.003508443 ubox
45 69 0.027057768 ubox
45 79 0.010757794 ubox
46 57 0.003401980 ubox
46 68 0.026830939 ubox
46 78 0.011773839 ubox
47 77 0.011137834 ubox
48 76 0.007785914 ubox
49 70 0.003233158 ubox
49 77 0.006925771 ubox
50 76 0.010312551 ubox
51 68 0.010477499 ubox
51 75 0.011243847 ubox
53 63 0.022995152 ubox
53 73 0.012891541 ubox
54 62 0.023425264 ubox
54 65 0.994792193 ubox
54 66 0.003966339 ubox
54 72 0.013576808 ubox
55 61 0.023297043 ubox
55 64 0.998452837 ubox
55 71 0.013624653 ubox
56 63 0.999368259 ubox
56 70 0.013635844 ubox
57 62 0.998983492 ubox
57 69 0.013642152 ubox
57 79 0.011075475 ubox
58 68 0.013445731 ubox
58 78 0.017425493 ubox
59 77 0.014233316 ubox
60 76 0.010004997 ubox
60 77 0.013193247 ubox
61 76 0.017186428 ubox
62 75 0.020061712 ubox
63 74 0.020063367 ubox
64 73 0.019922442 ubox
65 77 0.005121886 ubox
66 76 0.034970352 ubox
66 78 0.003513496 ubox
67 75 0.038369523 ubox
68 74 0.038379916 ubox
69 73 0.023687152 ubox
69 75 0.010906626 ubox
69 78 0.005633491 ubox
70 74 0.010213439 ubox
72 78 0.003827427 ubox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
32 77 0.9500000 lbox
33 76 0.9500000 lbox
34 75 0.9500000 lbox
35 74 0.9500000 lbox
36 73 0.9500000 lbox
37 72 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
showpage
end
%%EOF
