%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1082)
} def

/sequence { (\
GGAAAAAACUAUGAUAAAUUACCGCAAAGCGAGUAAAAAAUAUGAGGCAAAGCCCAUAAUUAUGAUAGGAUUAGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.017920199 ubox
1 10 0.021164955 ubox
1 72 0.006153843 ubox
1 75 0.128681500 ubox
1 76 0.460758207 ubox
1 77 0.025765890 ubox
1 78 0.440627923 ubox
2 9 0.022512910 ubox
2 71 0.005755154 ubox
2 72 0.025839573 ubox
2 75 0.531958416 ubox
2 76 0.020009375 ubox
2 77 0.436961183 ubox
2 78 0.420328236 ubox
3 10 0.003322746 ubox
3 71 0.025223239 ubox
3 72 0.036947397 ubox
3 76 0.427791348 ubox
3 77 0.420021400 ubox
4 71 0.037014128 ubox
4 72 0.109137588 ubox
4 76 0.404154379 ubox
4 77 0.015149134 ubox
5 71 0.105694326 ubox
5 72 0.743416501 ubox
5 76 0.016190558 ubox
5 77 0.005253145 ubox
6 71 0.759189927 ubox
6 72 0.162894205 ubox
6 76 0.005378183 ubox
6 77 0.003549422 ubox
7 71 0.158885157 ubox
7 72 0.062145138 ubox
7 76 0.003444091 ubox
7 77 0.004239955 ubox
8 66 0.004496470 ubox
8 71 0.057593844 ubox
8 72 0.020079472 ubox
8 76 0.004717023 ubox
9 13 0.003402267 ubox
9 64 0.003994293 ubox
9 68 0.991958411 ubox
9 69 0.030176304 ubox
9 74 0.007492404 ubox
10 16 0.004270421 ubox
10 42 0.016623505 ubox
10 64 0.021105927 ubox
10 67 0.992817956 ubox
10 68 0.019265353 ubox
10 73 0.007373854 ubox
11 15 0.003960358 ubox
11 19 0.004564916 ubox
11 41 0.017606733 ubox
11 43 0.013842520 ubox
11 63 0.024754734 ubox
11 66 0.992792621 ubox
11 72 0.006762661 ubox
12 17 0.005175127 ubox
12 18 0.006072523 ubox
12 40 0.017524584 ubox
12 42 0.014912416 ubox
12 62 0.026512734 ubox
12 64 0.004719053 ubox
12 65 0.987954308 ubox
12 73 0.003319540 ubox
12 79 0.003405693 ubox
13 41 0.013822215 ubox
13 61 0.028176866 ubox
13 63 0.004940704 ubox
13 72 0.003657895 ubox
13 78 0.005463455 ubox
14 41 0.019646882 ubox
14 43 0.017468667 ubox
14 60 0.027956046 ubox
14 63 0.986330089 ubox
14 71 0.003747157 ubox
14 77 0.005076275 ubox
15 37 0.006635420 ubox
15 38 0.006881860 ubox
15 39 0.006151895 ubox
15 40 0.020069801 ubox
15 42 0.018266914 ubox
15 59 0.026925673 ubox
15 62 0.989163514 ubox
15 64 0.005182687 ubox
15 70 0.003626658 ubox
16 41 0.017784325 ubox
16 60 0.019630650 ubox
16 61 0.972132745 ubox
16 63 0.005204893 ubox
17 41 0.003574360 ubox
17 60 0.839378228 ubox
17 61 0.062784824 ubox
18 34 0.019759934 ubox
18 41 0.015610453 ubox
18 57 0.006913744 ubox
18 60 0.082567275 ubox
18 61 0.007468714 ubox
19 33 0.020136916 ubox
19 35 0.020291467 ubox
19 36 0.850198581 ubox
19 37 0.055796994 ubox
19 38 0.024742386 ubox
19 39 0.016876664 ubox
19 40 0.016410073 ubox
19 56 0.004657499 ubox
19 58 0.026990885 ubox
19 59 0.083220372 ubox
20 32 0.016555134 ubox
20 35 0.980803869 ubox
20 36 0.045361896 ubox
20 37 0.016570336 ubox
20 38 0.011421624 ubox
20 39 0.010433061 ubox
20 58 0.026750839 ubox
20 59 0.009324680 ubox
21 34 0.993276494 ubox
21 57 0.014659893 ubox
22 31 0.006095083 ubox
22 33 0.994453366 ubox
23 29 0.007139980 ubox
23 31 0.999139356 ubox
23 33 0.003816314 ubox
24 30 0.999609692 ubox
24 34 0.005414199 ubox
24 53 0.007013153 ubox
25 29 0.992352660 ubox
25 31 0.006386196 ubox
25 33 0.005580132 ubox
25 52 0.007048879 ubox
29 48 0.006964722 ubox
30 47 0.006881333 ubox
32 41 0.004041695 ubox
33 41 0.005666040 ubox
33 43 0.006630857 ubox
34 39 0.004624500 ubox
34 40 0.006630568 ubox
34 42 0.006929886 ubox
35 41 0.007072538 ubox
36 41 0.007940331 ubox
36 60 0.003883820 ubox
36 61 0.009772266 ubox
36 63 0.004081835 ubox
37 41 0.009196329 ubox
37 43 0.004164357 ubox
37 60 0.023687825 ubox
37 61 0.020412220 ubox
37 63 0.006279450 ubox
38 43 0.004521890 ubox
38 57 0.003735188 ubox
38 60 0.029149016 ubox
38 61 0.081666296 ubox
39 57 0.005199609 ubox
39 60 0.122409380 ubox
39 61 0.059021862 ubox
40 57 0.009330976 ubox
40 60 0.090520857 ubox
40 61 0.008707081 ubox
41 56 0.005702154 ubox
41 58 0.926591446 ubox
41 59 0.073623921 ubox
42 57 0.983151478 ubox
42 60 0.004150335 ubox
43 56 0.989677318 ubox
43 58 0.010167153 ubox
43 59 0.004878888 ubox
43 79 0.063081432 ubox
44 55 0.991869598 ubox
44 57 0.010585855 ubox
44 78 0.104708968 ubox
45 57 0.003634912 ubox
45 77 0.104749870 ubox
46 53 0.030404077 ubox
46 54 0.993700601 ubox
46 55 0.014704833 ubox
46 76 0.104755267 ubox
47 53 0.993807304 ubox
47 54 0.013733108 ubox
47 75 0.104861267 ubox
48 52 0.986597972 ubox
48 74 0.104769246 ubox
49 72 0.014797406 ubox
50 71 0.014211250 ubox
50 72 0.079370342 ubox
51 71 0.069575815 ubox
51 72 0.013992699 ubox
52 71 0.015128299 ubox
53 68 0.009131122 ubox
53 69 0.096758180 ubox
54 68 0.096836512 ubox
54 69 0.037174076 ubox
55 64 0.068590411 ubox
55 68 0.037369362 ubox
56 63 0.067441766 ubox
56 66 0.053402049 ubox
57 62 0.062457458 ubox
57 64 0.015182777 ubox
57 65 0.053130087 ubox
57 67 0.017849625 ubox
57 73 0.005848708 ubox
58 63 0.016253439 ubox
58 66 0.017690415 ubox
58 72 0.006221598 ubox
59 63 0.012175645 ubox
59 66 0.007695367 ubox
59 71 0.006736221 ubox
60 64 0.004086411 ubox
60 65 0.007704469 ubox
60 67 0.003782149 ubox
60 70 0.006789362 ubox
61 67 0.003348424 ubox
61 69 0.006638406 ubox
62 71 0.003237040 ubox
63 70 0.003580524 ubox
63 73 0.005223604 ubox
63 79 0.014349862 ubox
64 72 0.005733417 ubox
64 78 0.024161779 ubox
65 71 0.005728323 ubox
65 77 0.023506519 ubox
66 70 0.005090615 ubox
67 76 0.024389771 ubox
67 77 0.006479374 ubox
68 75 0.026373922 ubox
68 76 0.010313879 ubox
68 78 0.014553579 ubox
69 75 0.027242740 ubox
69 76 0.008072534 ubox
69 77 0.021241039 ubox
69 78 0.303395491 ubox
70 76 0.021549308 ubox
70 77 0.299485910 ubox
72 79 0.004650696 ubox
73 77 0.004037206 ubox
74 78 0.018428928 ubox
75 79 0.006958626 ubox
1 76 0.9500000 lbox
2 75 0.9500000 lbox
5 72 0.9500000 lbox
6 71 0.9500000 lbox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
showpage
end
%%EOF
