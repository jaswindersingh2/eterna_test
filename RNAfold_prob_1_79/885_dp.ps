%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (885)
} def

/sequence { (\
GGAAAGGAAGUAGACUUACAACCAAAAGGAGCAAAAGCAAAGUAAAGAAACUACAAGGAAAACCAACCUGUGGGUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.005188322 ubox
1 15 0.021054804 ubox
1 16 0.009800479 ubox
1 17 0.005150173 ubox
1 19 0.194662079 ubox
1 22 0.031622533 ubox
1 23 0.385270093 ubox
1 32 0.017544242 ubox
1 38 0.014353146 ubox
1 43 0.007471563 ubox
1 54 0.004071619 ubox
1 64 0.004459422 ubox
1 78 0.067455129 ubox
2 11 0.007808786 ubox
2 15 0.011709836 ubox
2 16 0.003435349 ubox
2 17 0.012928474 ubox
2 19 0.256566359 ubox
2 22 0.384549792 ubox
2 23 0.027239250 ubox
2 32 0.009349813 ubox
2 38 0.009794533 ubox
2 43 0.009433908 ubox
2 63 0.004447696 ubox
2 76 0.004068121 ubox
2 77 0.065240009 ubox
2 78 0.087904537 ubox
3 11 0.005334300 ubox
3 16 0.009945509 ubox
3 17 0.038365720 ubox
3 43 0.009291910 ubox
3 75 0.004084659 ubox
3 76 0.063317680 ubox
3 77 0.086763895 ubox
4 11 0.008236103 ubox
4 16 0.037250239 ubox
4 17 0.475046639 ubox
4 43 0.007188587 ubox
4 75 0.051930461 ubox
4 76 0.081259661 ubox
4 77 0.003819096 ubox
5 11 0.012691758 ubox
5 16 0.510111374 ubox
5 17 0.077236916 ubox
5 43 0.007163650 ubox
5 52 0.004569924 ubox
5 75 0.069228475 ubox
5 76 0.004357484 ubox
6 11 0.013604796 ubox
6 15 0.515055024 ubox
6 16 0.085554127 ubox
6 17 0.016261979 ubox
6 19 0.250002757 ubox
6 22 0.029121555 ubox
6 23 0.642420091 ubox
6 32 0.006306551 ubox
6 38 0.015693577 ubox
6 43 0.004788786 ubox
6 51 0.004752035 ubox
6 54 0.003782449 ubox
6 78 0.028309928 ubox
7 11 0.005460709 ubox
7 15 0.086570968 ubox
7 16 0.016910952 ubox
7 17 0.056096321 ubox
7 19 0.121790978 ubox
7 22 0.642604816 ubox
7 23 0.015625175 ubox
7 32 0.006700972 ubox
7 38 0.012214427 ubox
7 43 0.005614040 ubox
7 54 0.005552068 ubox
7 77 0.027155229 ubox
7 78 0.046668879 ubox
8 16 0.050047919 ubox
8 17 0.300444662 ubox
8 43 0.007486006 ubox
8 76 0.025336036 ubox
8 77 0.045144803 ubox
9 16 0.372066688 ubox
9 17 0.016357396 ubox
9 43 0.010791205 ubox
9 52 0.009383149 ubox
9 75 0.020786714 ubox
9 76 0.033419836 ubox
10 15 0.370674901 ubox
10 16 0.014950477 ubox
10 17 0.012997447 ubox
10 19 0.670511770 ubox
10 22 0.022436897 ubox
10 23 0.004940626 ubox
10 32 0.058447486 ubox
10 38 0.017775322 ubox
10 51 0.009684492 ubox
10 54 0.054155831 ubox
10 75 0.016677259 ubox
10 78 0.076392149 ubox
11 18 0.668189051 ubox
11 20 0.009945782 ubox
11 21 0.022535064 ubox
11 30 0.003587257 ubox
11 31 0.057531309 ubox
11 33 0.005571095 ubox
11 34 0.006709566 ubox
11 37 0.017018579 ubox
11 39 0.006175813 ubox
11 40 0.008641671 ubox
11 41 0.008811018 ubox
11 44 0.008755265 ubox
11 45 0.012432179 ubox
11 46 0.023609255 ubox
11 50 0.009386639 ubox
11 53 0.054222980 ubox
11 73 0.003248224 ubox
11 74 0.007451446 ubox
11 79 0.006505040 ubox
12 16 0.016221299 ubox
12 17 0.630978245 ubox
12 43 0.007551510 ubox
12 52 0.054213539 ubox
12 76 0.003878188 ubox
12 77 0.103622912 ubox
13 17 0.012579722 ubox
13 19 0.025469854 ubox
13 22 0.008646039 ubox
13 23 0.008381453 ubox
13 32 0.029731251 ubox
13 38 0.054474396 ubox
13 43 0.007280714 ubox
13 51 0.054119204 ubox
13 75 0.003703471 ubox
13 76 0.122441266 ubox
13 77 0.003598007 ubox
13 78 0.008600052 ubox
14 43 0.131307702 ubox
14 75 0.126285286 ubox
14 77 0.007315420 ubox
15 28 0.111020261 ubox
15 29 0.028401449 ubox
15 31 0.040283452 ubox
15 37 0.070292589 ubox
15 42 0.135465175 ubox
15 47 0.049289739 ubox
15 74 0.127082890 ubox
15 79 0.008041021 ubox
16 21 0.003738382 ubox
16 25 0.007547043 ubox
16 26 0.006405215 ubox
16 27 0.111062075 ubox
16 28 0.028142569 ubox
16 30 0.040613519 ubox
16 31 0.004802314 ubox
16 34 0.009957943 ubox
16 35 0.017220763 ubox
16 36 0.069940623 ubox
16 40 0.006842988 ubox
16 41 0.134277337 ubox
16 44 0.003213017 ubox
16 45 0.134027498 ubox
16 46 0.042332938 ubox
16 48 0.005821577 ubox
16 73 0.126378077 ubox
17 24 0.008408645 ubox
17 25 0.007682284 ubox
17 26 0.109629871 ubox
17 27 0.026040501 ubox
17 28 0.003555304 ubox
17 29 0.035036677 ubox
17 30 0.007292728 ubox
17 33 0.010939370 ubox
17 34 0.017695213 ubox
17 35 0.064860634 ubox
17 39 0.008524428 ubox
17 40 0.125463506 ubox
17 41 0.004096923 ubox
17 44 0.155083216 ubox
17 45 0.031781737 ubox
17 47 0.005358906 ubox
17 72 0.126185724 ubox
18 43 0.161700987 ubox
18 71 0.126326784 ubox
18 75 0.004979037 ubox
19 28 0.046568977 ubox
19 29 0.012197490 ubox
19 31 0.029041130 ubox
19 37 0.009209481 ubox
19 42 0.161944760 ubox
19 70 0.126274665 ubox
19 74 0.005332534 ubox
19 79 0.015969173 ubox
20 43 0.003597815 ubox
20 69 0.089847528 ubox
20 76 0.033931476 ubox
21 43 0.015440017 ubox
21 69 0.003281387 ubox
21 75 0.038734120 ubox
22 28 0.034993880 ubox
22 29 0.523829612 ubox
22 31 0.015021309 ubox
22 37 0.005024738 ubox
22 42 0.015519549 ubox
22 73 0.015050423 ubox
22 74 0.039348203 ubox
22 79 0.005916701 ubox
23 28 0.525483191 ubox
23 29 0.043822521 ubox
23 31 0.008781712 ubox
23 37 0.007776821 ubox
23 42 0.006117781 ubox
23 72 0.015291590 ubox
23 73 0.039080902 ubox
23 79 0.006653790 ubox
24 43 0.015935221 ubox
24 71 0.014883407 ubox
25 43 0.031181303 ubox
25 71 0.006624395 ubox
26 43 0.054391753 ubox
27 43 0.046415375 ubox
27 69 0.041725957 ubox
28 32 0.016569260 ubox
28 38 0.042911341 ubox
28 43 0.031179630 ubox
28 64 0.004105794 ubox
28 68 0.043224173 ubox
28 78 0.041095750 ubox
29 38 0.040812659 ubox
29 43 0.009806246 ubox
29 63 0.004095593 ubox
29 67 0.043036421 ubox
29 77 0.041065973 ubox
29 78 0.012543584 ubox
30 43 0.016830815 ubox
30 76 0.040900051 ubox
30 77 0.011236416 ubox
31 38 0.878801501 ubox
31 43 0.094021489 ubox
31 75 0.039599834 ubox
31 76 0.003210306 ubox
32 37 0.878486872 ubox
32 42 0.096182193 ubox
32 47 0.003428790 ubox
32 74 0.039608797 ubox
33 43 0.004217613 ubox
34 43 0.010287109 ubox
35 43 0.006878267 ubox
35 77 0.003845437 ubox
36 43 0.021484737 ubox
36 76 0.004320631 ubox
37 43 0.066863310 ubox
37 54 0.005281197 ubox
37 71 0.006756669 ubox
37 75 0.004562501 ubox
38 42 0.068031365 ubox
38 47 0.017230813 ubox
38 58 0.007164613 ubox
38 70 0.006792457 ubox
38 74 0.004588543 ubox
38 79 0.003723432 ubox
39 43 0.010574079 ubox
39 69 0.005009183 ubox
40 52 0.004752307 ubox
41 52 0.100287592 ubox
42 51 0.104241105 ubox
42 54 0.072585692 ubox
42 78 0.009413096 ubox
43 47 0.003253451 ubox
43 48 0.006119493 ubox
43 49 0.006611108 ubox
43 50 0.101197412 ubox
43 53 0.072524294 ubox
43 79 0.012123689 ubox
44 52 0.070408785 ubox
44 77 0.004383297 ubox
45 52 0.006149791 ubox
45 76 0.004438296 ubox
45 77 0.007856087 ubox
46 52 0.013373223 ubox
46 75 0.003207751 ubox
46 76 0.008486257 ubox
46 77 0.021920230 ubox
47 51 0.014646605 ubox
47 54 0.010946106 ubox
47 75 0.007430674 ubox
47 76 0.025979689 ubox
47 77 0.074454573 ubox
47 78 0.973635078 ubox
48 75 0.025688838 ubox
48 76 0.082375695 ubox
48 77 0.974421481 ubox
49 75 0.053872345 ubox
49 76 0.971578437 ubox
49 77 0.004913169 ubox
50 75 0.958771443 ubox
50 76 0.005093629 ubox
51 57 0.006896405 ubox
51 58 0.006235033 ubox
51 72 0.005727109 ubox
51 73 0.494589229 ubox
51 74 0.855662076 ubox
52 56 0.006332307 ubox
52 57 0.006011066 ubox
52 72 0.657569490 ubox
52 73 0.726532761 ubox
53 71 0.790037969 ubox
54 70 0.803375842 ubox
54 72 0.192931859 ubox
54 73 0.003717418 ubox
55 69 0.571371193 ubox
55 71 0.180262961 ubox
56 69 0.804819855 ubox
57 63 0.012983762 ubox
57 64 0.101827039 ubox
57 67 0.088340661 ubox
57 68 0.986647783 ubox
57 69 0.025174424 ubox
57 78 0.014140035 ubox
58 63 0.101468322 ubox
58 64 0.019038620 ubox
58 67 0.985864965 ubox
58 68 0.026862689 ubox
58 77 0.013734850 ubox
58 78 0.062693939 ubox
59 76 0.013306109 ubox
59 77 0.061454500 ubox
60 75 0.011888643 ubox
60 76 0.059805206 ubox
60 77 0.018371390 ubox
61 75 0.037495552 ubox
61 76 0.023632931 ubox
62 75 0.027658348 ubox
63 72 0.003198339 ubox
63 73 0.059190223 ubox
63 74 0.030552812 ubox
64 72 0.059303476 ubox
64 73 0.030405503 ubox
65 71 0.055496312 ubox
65 76 0.009514916 ubox
66 71 0.004352209 ubox
66 75 0.012273055 ubox
67 73 0.003960547 ubox
67 74 0.012950120 ubox
68 72 0.004047460 ubox
68 73 0.012912803 ubox
6 23 0.9500000 lbox
7 22 0.9500000 lbox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
12 17 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
47 78 0.9500000 lbox
48 77 0.9500000 lbox
49 76 0.9500000 lbox
50 75 0.9500000 lbox
51 74 0.9500000 lbox
52 73 0.9500000 lbox
56 69 0.9500000 lbox
57 68 0.9500000 lbox
58 67 0.9500000 lbox
showpage
end
%%EOF
