%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (251)
} def

/sequence { (\
GGAAAAAUGCCCUUGGACGUGCGUCCGGGUUCCUCAAUCAGUCAAUAGUCUGCGAGUCACCAUGGGCGCACUCGAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.017374405 ubox
1 10 0.078024919 ubox
1 11 0.318759772 ubox
1 12 0.753970959 ubox
1 13 0.035743683 ubox
1 14 0.005802287 ubox
1 18 0.022350108 ubox
1 33 0.004373287 ubox
1 73 0.013208800 ubox
1 78 0.104860672 ubox
2 8 0.005786332 ubox
2 10 0.319891781 ubox
2 11 0.754656206 ubox
2 12 0.041424674 ubox
2 13 0.006331336 ubox
2 14 0.010963611 ubox
2 18 0.008014430 ubox
2 32 0.004381096 ubox
2 72 0.011245689 ubox
2 73 0.022377272 ubox
2 76 0.004144479 ubox
2 77 0.104043000 ubox
2 78 0.157895165 ubox
3 8 0.077016899 ubox
3 13 0.011482056 ubox
3 14 0.022420879 ubox
3 31 0.004359497 ubox
3 72 0.021501123 ubox
3 76 0.102118360 ubox
3 77 0.157512097 ubox
4 8 0.056952837 ubox
4 13 0.024195762 ubox
4 14 0.016215127 ubox
4 76 0.152173167 ubox
4 77 0.011113573 ubox
5 13 0.016876314 ubox
5 14 0.029629662 ubox
5 76 0.013810424 ubox
5 77 0.008996002 ubox
6 13 0.029528693 ubox
6 14 0.018467604 ubox
6 76 0.010618327 ubox
6 77 0.015296381 ubox
7 13 0.018592944 ubox
7 14 0.020592266 ubox
7 20 0.011478031 ubox
7 76 0.017652464 ubox
7 77 0.005967396 ubox
8 15 0.007454588 ubox
8 17 0.016695915 ubox
8 19 0.012514859 ubox
8 68 0.003218836 ubox
8 74 0.008693133 ubox
8 75 0.013727538 ubox
8 79 0.057805634 ubox
9 13 0.004410079 ubox
9 14 0.007158357 ubox
9 18 0.075184242 ubox
9 30 0.004042657 ubox
9 67 0.004052728 ubox
9 73 0.008320561 ubox
9 76 0.008926408 ubox
9 77 0.008237937 ubox
9 78 0.092716561 ubox
10 15 0.025760621 ubox
10 16 0.113110870 ubox
10 29 0.004359275 ubox
10 66 0.004054986 ubox
10 74 0.013930027 ubox
10 79 0.061851778 ubox
11 15 0.113376614 ubox
11 16 0.015968767 ubox
11 28 0.004356415 ubox
11 65 0.004055259 ubox
11 74 0.016323970 ubox
11 79 0.038534618 ubox
12 16 0.008061491 ubox
12 27 0.004289950 ubox
12 64 0.004047096 ubox
12 74 0.026005001 ubox
12 79 0.039188028 ubox
13 74 0.017780819 ubox
13 75 0.319734890 ubox
13 79 0.014071473 ubox
14 27 0.003612221 ubox
14 74 0.340390489 ubox
14 75 0.643961545 ubox
14 79 0.098966426 ubox
15 26 0.006182675 ubox
15 72 0.006772224 ubox
15 73 0.339412887 ubox
15 76 0.017145324 ubox
15 77 0.011115016 ubox
15 78 0.169187857 ubox
16 25 0.006199572 ubox
16 71 0.008210019 ubox
16 72 0.271998570 ubox
16 73 0.872628062 ubox
16 76 0.009344370 ubox
16 77 0.165393860 ubox
16 78 0.043437302 ubox
17 24 0.006196843 ubox
17 72 0.874971594 ubox
17 76 0.162097850 ubox
17 77 0.042091590 ubox
18 23 0.006185235 ubox
18 74 0.138975717 ubox
18 79 0.004205546 ubox
19 71 0.994405295 ubox
19 72 0.006405127 ubox
19 73 0.089493020 ubox
20 70 0.999026540 ubox
21 69 0.999967634 ubox
22 68 0.999962359 ubox
23 67 0.999953925 ubox
24 66 0.999625464 ubox
25 65 0.999928889 ubox
25 66 0.005298979 ubox
26 64 0.999829308 ubox
26 65 0.005162119 ubox
27 61 0.026061299 ubox
27 63 0.886184969 ubox
28 60 0.025881492 ubox
28 61 0.998020329 ubox
29 58 0.009703573 ubox
29 60 0.999374134 ubox
29 61 0.010462431 ubox
30 59 0.987435684 ubox
31 55 0.003961785 ubox
31 59 0.018980405 ubox
32 54 0.003936314 ubox
32 56 0.036753541 ubox
33 54 0.005420601 ubox
33 56 0.997547122 ubox
34 55 0.999489684 ubox
35 52 0.006123385 ubox
35 54 0.998924243 ubox
35 56 0.010913851 ubox
36 51 0.007130607 ubox
37 51 0.006025285 ubox
38 52 0.010886101 ubox
38 54 0.005042822 ubox
39 48 0.013695305 ubox
39 52 0.997864708 ubox
40 49 0.008983081 ubox
40 51 0.998878237 ubox
41 49 0.003835297 ubox
41 50 0.998202228 ubox
41 53 0.010924590 ubox
42 47 0.012229197 ubox
42 48 0.055577439 ubox
42 52 0.005611438 ubox
43 48 0.808648518 ubox
43 52 0.010313924 ubox
44 49 0.013025940 ubox
44 51 0.009809901 ubox
45 49 0.005867100 ubox
53 74 0.004430879 ubox
54 73 0.004500073 ubox
55 72 0.004499709 ubox
56 71 0.004499703 ubox
57 70 0.004479650 ubox
58 68 0.004419340 ubox
60 66 0.004459538 ubox
61 65 0.004427852 ubox
73 79 0.030029743 ubox
74 78 0.039273276 ubox
1 12 0.9500000 lbox
2 11 0.9500000 lbox
14 75 0.9500000 lbox
16 73 0.9500000 lbox
17 72 0.9500000 lbox
19 71 0.9500000 lbox
20 70 0.9500000 lbox
21 69 0.9500000 lbox
22 68 0.9500000 lbox
23 67 0.9500000 lbox
24 66 0.9500000 lbox
25 65 0.9500000 lbox
26 64 0.9500000 lbox
27 63 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
