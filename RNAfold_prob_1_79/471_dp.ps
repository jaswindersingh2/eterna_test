%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (471)
} def

/sequence { (\
GGAAAAGAUAUCGGCAGACGAAAGUCGUCGAAAGACGCCAAAAGUUAUCGAAAGAUAACGAUAUCAAACGUAGUAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.005212336 ubox
1 39 0.097145936 ubox
1 65 0.005691949 ubox
1 69 0.141861106 ubox
1 71 0.054013837 ubox
1 74 0.010678710 ubox
1 78 0.071510344 ubox
2 11 0.004652853 ubox
2 12 0.009157234 ubox
2 38 0.097162505 ubox
2 39 0.004610083 ubox
2 64 0.003782700 ubox
2 65 0.009550067 ubox
2 69 0.111552502 ubox
2 71 0.041832507 ubox
2 74 0.007911717 ubox
2 77 0.070115057 ubox
2 78 0.111370451 ubox
3 11 0.008845816 ubox
3 64 0.008685512 ubox
3 71 0.028293320 ubox
3 74 0.006158731 ubox
3 76 0.066414962 ubox
3 77 0.110702859 ubox
4 71 0.022808161 ubox
4 74 0.014469866 ubox
4 76 0.101610090 ubox
4 77 0.007152306 ubox
5 71 0.009149702 ubox
5 74 0.020060004 ubox
5 76 0.008373251 ubox
5 77 0.009068621 ubox
6 71 0.014504221 ubox
6 74 0.048106546 ubox
6 76 0.010709217 ubox
6 77 0.004050031 ubox
7 12 0.004877490 ubox
7 26 0.006101502 ubox
7 36 0.012333835 ubox
7 38 0.003330945 ubox
7 64 0.003177896 ubox
7 65 0.990133698 ubox
7 69 0.006337243 ubox
7 77 0.015738664 ubox
7 78 0.013072053 ubox
8 25 0.006174931 ubox
8 64 0.991193469 ubox
8 71 0.005975600 ubox
8 74 0.005174918 ubox
8 76 0.017531447 ubox
8 77 0.011019107 ubox
9 24 0.005931663 ubox
9 32 0.016604169 ubox
9 33 0.054506524 ubox
9 34 0.004567470 ubox
9 35 0.003950137 ubox
9 63 0.991134415 ubox
9 70 0.005698028 ubox
9 72 0.008061929 ubox
9 73 0.005093491 ubox
9 75 0.018422941 ubox
10 62 0.991056534 ubox
10 71 0.007936504 ubox
10 74 0.018129431 ubox
11 21 0.018453328 ubox
11 31 0.118853516 ubox
11 32 0.004273979 ubox
11 35 0.005554665 ubox
11 40 0.003970977 ubox
11 41 0.005911664 ubox
11 61 0.990705991 ubox
11 70 0.006510847 ubox
11 73 0.015794338 ubox
12 20 0.022378198 ubox
12 30 0.126353056 ubox
12 34 0.006528325 ubox
12 60 0.989369905 ubox
12 70 0.006117466 ubox
12 73 0.004191262 ubox
13 19 0.037292758 ubox
13 26 0.059717877 ubox
13 29 0.147712468 ubox
13 36 0.010224238 ubox
13 38 0.004638868 ubox
13 39 0.961731776 ubox
13 59 0.111318697 ubox
13 69 0.005190960 ubox
14 19 0.012876662 ubox
14 25 0.063924143 ubox
14 28 0.148043908 ubox
14 29 0.006963897 ubox
14 36 0.004798097 ubox
14 38 0.963029646 ubox
14 39 0.004360571 ubox
14 45 0.003827684 ubox
14 59 0.003291237 ubox
14 71 0.006017957 ubox
15 20 0.013980260 ubox
15 24 0.064292972 ubox
15 27 0.147632568 ubox
15 30 0.020875552 ubox
15 34 0.005155601 ubox
15 37 0.961644076 ubox
15 44 0.004230000 ubox
15 70 0.006081368 ubox
16 25 0.004101111 ubox
16 28 0.007707850 ubox
16 56 0.006635786 ubox
17 25 0.004070176 ubox
17 26 0.969360190 ubox
17 29 0.203966927 ubox
17 36 0.012833023 ubox
17 46 0.017000916 ubox
18 25 0.971038147 ubox
18 28 0.204810958 ubox
18 45 0.022323590 ubox
19 24 0.970864910 ubox
19 27 0.205006787 ubox
19 30 0.019510075 ubox
19 34 0.005697500 ubox
19 44 0.023993810 ubox
19 50 0.003349429 ubox
20 26 0.206148515 ubox
20 29 0.019674662 ubox
20 39 0.005261912 ubox
20 49 0.003374922 ubox
21 25 0.179359427 ubox
21 28 0.018568106 ubox
21 48 0.003319127 ubox
24 29 0.005929780 ubox
24 36 0.032251850 ubox
24 38 0.040958285 ubox
24 39 0.055520741 ubox
25 35 0.032322470 ubox
25 37 0.008627893 ubox
25 55 0.003184033 ubox
26 34 0.032336357 ubox
26 37 0.089896280 ubox
26 54 0.003215249 ubox
27 36 0.964486647 ubox
27 38 0.007919908 ubox
27 39 0.007681279 ubox
28 35 0.965736686 ubox
28 37 0.005034506 ubox
28 51 0.010845034 ubox
29 34 0.965740112 ubox
29 37 0.011875608 ubox
29 50 0.012106709 ubox
30 36 0.057788298 ubox
30 38 0.010536851 ubox
30 39 0.025681305 ubox
30 49 0.012693012 ubox
30 78 0.004412899 ubox
31 48 0.012236073 ubox
31 77 0.004506306 ubox
32 74 0.011579262 ubox
32 76 0.004409398 ubox
33 74 0.004231701 ubox
34 38 0.006349724 ubox
34 39 0.027168400 ubox
34 46 0.020282693 ubox
34 65 0.006406854 ubox
34 69 0.006361054 ubox
34 78 0.004089487 ubox
35 45 0.024726038 ubox
35 64 0.006271900 ubox
35 71 0.040108327 ubox
35 74 0.007804311 ubox
35 77 0.003466237 ubox
36 44 0.026153694 ubox
36 70 0.041352794 ubox
36 73 0.008112484 ubox
37 45 0.020229267 ubox
37 65 0.007108281 ubox
37 69 0.041083657 ubox
37 71 0.004586952 ubox
37 74 0.003338486 ubox
38 44 0.022814067 ubox
38 70 0.004808796 ubox
38 73 0.003412595 ubox
39 44 0.016888342 ubox
39 60 0.004035594 ubox
40 62 0.005980691 ubox
40 64 0.006748030 ubox
41 62 0.018549732 ubox
41 64 0.005745509 ubox
42 62 0.009835421 ubox
43 62 0.003688968 ubox
44 59 0.990961564 ubox
44 65 0.011858465 ubox
44 69 0.003507537 ubox
45 58 0.995882887 ubox
45 68 0.003486798 ubox
46 57 0.998398004 ubox
46 63 0.015790020 ubox
47 56 0.999036414 ubox
47 62 0.016736206 ubox
48 55 0.999338289 ubox
48 61 0.016840498 ubox
49 54 0.999139207 ubox
49 60 0.016868150 ubox
49 79 0.008212217 ubox
50 59 0.016823329 ubox
50 78 0.009236794 ubox
51 77 0.009160141 ubox
52 76 0.008783912 ubox
54 65 0.003363531 ubox
55 64 0.003367554 ubox
55 74 0.008206508 ubox
56 63 0.003343275 ubox
56 73 0.008113702 ubox
58 71 0.011558066 ubox
59 70 0.012342272 ubox
59 79 0.009208334 ubox
60 65 0.011766751 ubox
60 69 0.015052421 ubox
60 77 0.068054753 ubox
60 78 0.041409523 ubox
61 71 0.004414516 ubox
61 74 0.006110813 ubox
61 76 0.076973215 ubox
61 77 0.033434998 ubox
62 67 0.003705051 ubox
62 70 0.004426232 ubox
62 72 0.012168404 ubox
62 73 0.006011373 ubox
62 75 0.081457099 ubox
63 71 0.012889015 ubox
63 74 0.081718954 ubox
63 76 0.004729774 ubox
64 70 0.012083644 ubox
64 72 0.004052059 ubox
64 73 0.079746896 ubox
64 75 0.004918761 ubox
65 70 0.018223779 ubox
65 73 0.019715655 ubox
66 71 0.024356807 ubox
66 74 0.012570366 ubox
66 76 0.018038797 ubox
66 77 0.034704716 ubox
67 71 0.013107017 ubox
67 74 0.024493126 ubox
67 76 0.038105952 ubox
67 77 0.021485269 ubox
68 74 0.115185307 ubox
68 76 0.021264035 ubox
68 77 0.014723882 ubox
69 73 0.118268290 ubox
69 79 0.275844376 ubox
70 74 0.011768833 ubox
70 76 0.029047076 ubox
70 77 0.028885838 ubox
70 78 0.288866892 ubox
71 75 0.029047683 ubox
71 79 0.008357638 ubox
72 76 0.032764468 ubox
72 77 0.053550439 ubox
73 77 0.010916370 ubox
73 78 0.112686962 ubox
74 79 0.009875123 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
