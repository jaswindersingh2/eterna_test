%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (47)
} def

/sequence { (\
GGAAAAACGAUCAGUUCAAAAGAACUCCAACCCAGCAAAAGCUGACGUGAAAACACGGGAAGGGAUCGACUAAUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.071219799 ubox
1 12 0.014659858 ubox
1 28 0.089792107 ubox
1 32 0.012575154 ubox
1 54 0.003257508 ubox
1 70 0.013170710 ubox
1 71 0.054600472 ubox
1 74 0.021130319 ubox
1 75 0.222171138 ubox
1 76 0.439275222 ubox
1 77 0.022470907 ubox
1 78 0.222344548 ubox
2 8 0.016690564 ubox
2 11 0.012975894 ubox
2 12 0.022274375 ubox
2 17 0.003332614 ubox
2 27 0.089832419 ubox
2 31 0.012573405 ubox
2 67 0.006325798 ubox
2 70 0.057647865 ubox
2 71 0.011696088 ubox
2 74 0.204273216 ubox
2 75 0.507248139 ubox
2 76 0.013827773 ubox
2 77 0.215931635 ubox
2 78 0.220379956 ubox
3 11 0.021521218 ubox
3 16 0.003205363 ubox
3 26 0.070685971 ubox
3 66 0.005986149 ubox
3 71 0.021836641 ubox
3 74 0.496589428 ubox
3 76 0.207578583 ubox
3 77 0.219804589 ubox
4 11 0.003609234 ubox
4 26 0.003532074 ubox
4 71 0.050032580 ubox
4 74 0.046418897 ubox
4 76 0.204654529 ubox
4 77 0.011141469 ubox
5 71 0.160159309 ubox
5 74 0.073513191 ubox
5 76 0.013112331 ubox
5 77 0.007284512 ubox
6 16 0.008924954 ubox
6 71 0.103569687 ubox
6 74 0.060735967 ubox
6 76 0.008103635 ubox
6 77 0.013923773 ubox
7 15 0.010404559 ubox
7 48 0.004958413 ubox
7 71 0.061345750 ubox
7 74 0.029353101 ubox
7 76 0.015877609 ubox
7 77 0.007102736 ubox
8 14 0.010712721 ubox
8 22 0.003313558 ubox
8 47 0.005059500 ubox
8 58 0.011929765 ubox
8 62 0.004089927 ubox
8 63 0.006306444 ubox
8 68 0.968896455 ubox
8 79 0.048247379 ubox
9 17 0.006995194 ubox
9 27 0.018039388 ubox
9 28 0.026064865 ubox
9 31 0.014368625 ubox
9 32 0.008132397 ubox
9 46 0.004993120 ubox
9 67 0.985788239 ubox
9 70 0.006346154 ubox
9 75 0.043769571 ubox
9 78 0.049957084 ubox
10 16 0.006937321 ubox
10 26 0.014216636 ubox
10 66 0.985561171 ubox
10 74 0.043698325 ubox
10 77 0.044692985 ubox
11 23 0.003264952 ubox
11 29 0.007423694 ubox
11 30 0.007206019 ubox
11 59 0.003268865 ubox
11 60 0.010695132 ubox
11 63 0.006507192 ubox
11 64 0.018029832 ubox
11 65 0.985054629 ubox
11 69 0.012341420 ubox
11 73 0.042077380 ubox
12 22 0.003358257 ubox
12 58 0.010172822 ubox
12 59 0.011260354 ubox
12 62 0.010109563 ubox
12 63 0.033929339 ubox
12 64 0.982884353 ubox
12 68 0.012700035 ubox
12 79 0.007026781 ubox
13 26 0.902011463 ubox
13 71 0.038446759 ubox
13 74 0.003477656 ubox
13 76 0.006802608 ubox
14 25 0.989501140 ubox
14 26 0.004339512 ubox
14 31 0.004971975 ubox
14 70 0.039552073 ubox
14 75 0.007127754 ubox
15 23 0.004309356 ubox
15 24 0.989698788 ubox
15 30 0.004922022 ubox
15 60 0.014783352 ubox
15 61 0.125068743 ubox
15 62 0.005554219 ubox
15 69 0.038326657 ubox
15 73 0.003427693 ubox
16 22 0.005011195 ubox
16 23 0.989798847 ubox
16 29 0.004465581 ubox
16 59 0.016260712 ubox
16 60 0.126434772 ubox
16 61 0.005110385 ubox
16 68 0.036515763 ubox
16 69 0.009302619 ubox
16 72 0.003242211 ubox
17 22 0.988500126 ubox
17 58 0.017330510 ubox
17 59 0.126176705 ubox
17 62 0.003167055 ubox
17 68 0.013080683 ubox
18 26 0.003213533 ubox
18 66 0.005590924 ubox
19 26 0.006057866 ubox
20 26 0.004421057 ubox
21 26 0.004775409 ubox
21 66 0.003551174 ubox
22 27 0.020232583 ubox
22 28 0.027967162 ubox
22 31 0.015817152 ubox
22 32 0.010537884 ubox
22 54 0.005643321 ubox
22 56 0.005607228 ubox
22 67 0.036214734 ubox
23 66 0.035434645 ubox
24 66 0.004115726 ubox
25 62 0.022059708 ubox
25 63 0.006566646 ubox
25 64 0.027651395 ubox
26 30 0.004842569 ubox
26 50 0.011460558 ubox
26 51 0.003827916 ubox
26 59 0.015686948 ubox
26 60 0.210228568 ubox
26 61 0.018409935 ubox
26 62 0.004944648 ubox
26 63 0.021267655 ubox
26 64 0.032322859 ubox
26 65 0.026902223 ubox
27 49 0.011037611 ubox
27 58 0.035153248 ubox
27 59 0.283357355 ubox
27 62 0.030097360 ubox
27 63 0.740862658 ubox
27 64 0.041392893 ubox
27 68 0.003545084 ubox
28 44 0.004090611 ubox
28 47 0.004301553 ubox
28 49 0.025123690 ubox
28 57 0.033404917 ubox
28 58 0.283338067 ubox
28 59 0.013510217 ubox
28 62 0.742037989 ubox
28 63 0.050950998 ubox
28 79 0.004101446 ubox
29 48 0.024973254 ubox
30 48 0.013203936 ubox
31 44 0.006569561 ubox
31 47 0.014389605 ubox
31 57 0.004948349 ubox
31 58 0.108391985 ubox
31 59 0.714283583 ubox
31 62 0.010522309 ubox
31 63 0.147305337 ubox
31 64 0.014986637 ubox
31 79 0.004784278 ubox
32 44 0.031056989 ubox
32 57 0.098408198 ubox
32 58 0.713268734 ubox
32 59 0.035292174 ubox
32 62 0.147252491 ubox
32 63 0.023086571 ubox
32 79 0.004084029 ubox
33 44 0.984624801 ubox
33 57 0.151368467 ubox
33 58 0.029338888 ubox
33 62 0.019613381 ubox
34 43 0.998008712 ubox
35 42 0.999583128 ubox
35 46 0.007019004 ubox
35 54 0.005091275 ubox
35 56 0.005215073 ubox
36 41 0.998152307 ubox
36 44 0.011997413 ubox
37 43 0.011436061 ubox
41 48 0.015213453 ubox
42 47 0.015256059 ubox
42 49 0.006775339 ubox
42 62 0.010012462 ubox
42 63 0.004747413 ubox
43 60 0.006817654 ubox
43 61 0.010322779 ubox
43 62 0.004821158 ubox
44 56 0.006125838 ubox
46 57 0.972458325 ubox
46 58 0.029101389 ubox
46 59 0.020772579 ubox
46 62 0.003773579 ubox
46 63 0.005140976 ubox
47 54 0.057103469 ubox
47 56 0.996690938 ubox
48 53 0.056689235 ubox
48 55 0.996062035 ubox
48 57 0.020617089 ubox
48 61 0.004148934 ubox
49 54 0.990117715 ubox
49 56 0.021979766 ubox
54 59 0.003459614 ubox
54 62 0.003887469 ubox
54 63 0.008269726 ubox
56 62 0.014402291 ubox
56 63 0.017837060 ubox
57 77 0.003699005 ubox
57 78 0.003488873 ubox
58 67 0.006259536 ubox
58 71 0.010436990 ubox
58 74 0.003260162 ubox
58 75 0.007348298 ubox
58 76 0.028449451 ubox
58 78 0.013200082 ubox
59 66 0.004250459 ubox
59 67 0.010906269 ubox
59 70 0.010754266 ubox
59 74 0.006447389 ubox
59 75 0.031097771 ubox
59 77 0.010967326 ubox
59 78 0.130773139 ubox
60 66 0.010433116 ubox
60 74 0.030218754 ubox
60 76 0.008103026 ubox
60 77 0.130843275 ubox
61 71 0.021017531 ubox
61 76 0.129643413 ubox
61 77 0.006256349 ubox
62 67 0.011301618 ubox
62 70 0.021912074 ubox
62 71 0.035602406 ubox
62 75 0.129127565 ubox
62 76 0.007994513 ubox
62 77 0.039035672 ubox
62 78 0.013731417 ubox
63 70 0.039864790 ubox
63 71 0.023323446 ubox
63 74 0.118401364 ubox
63 75 0.008464613 ubox
63 76 0.058741544 ubox
63 77 0.009836254 ubox
63 78 0.005035397 ubox
64 70 0.026592203 ubox
64 71 0.010123532 ubox
64 74 0.006325917 ubox
64 75 0.066524047 ubox
64 77 0.004858144 ubox
64 78 0.012939535 ubox
65 71 0.015790529 ubox
65 74 0.066988399 ubox
65 76 0.004547510 ubox
65 77 0.012859440 ubox
66 72 0.012531084 ubox
66 73 0.063780483 ubox
67 79 0.017022295 ubox
68 75 0.052460669 ubox
68 77 0.007854370 ubox
68 78 0.039129902 ubox
69 74 0.047876950 ubox
69 76 0.015292360 ubox
69 77 0.038249274 ubox
70 79 0.040536688 ubox
71 79 0.005420501 ubox
72 76 0.006833072 ubox
72 77 0.013818441 ubox
73 77 0.007509270 ubox
74 79 0.007371804 ubox
75 79 0.010215281 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
