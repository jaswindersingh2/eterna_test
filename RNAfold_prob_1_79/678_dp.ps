%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (678)
} def

/sequence { (\
GGAAAGCUCAAGUACAAAAAAAAAAAGUACAAGAUCAAAAAAAAAAAGAUCAAGAGCAAAAAAAAAAAGCGUAUGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.031056796 ubox
1 8 0.024036412 ubox
1 9 0.046660813 ubox
1 15 0.004507901 ubox
1 36 0.007532475 ubox
1 57 0.003629877 ubox
1 70 0.015940061 ubox
1 74 0.005117278 ubox
1 76 0.004054885 ubox
1 77 0.003239440 ubox
1 78 0.092992459 ubox
2 7 0.031832624 ubox
2 8 0.038877481 ubox
2 9 0.073175247 ubox
2 35 0.007079108 ubox
2 36 0.018749791 ubox
2 57 0.003388127 ubox
2 70 0.013566469 ubox
2 72 0.003365432 ubox
2 74 0.004321846 ubox
2 76 0.004372044 ubox
2 77 0.087441774 ubox
2 78 0.088577858 ubox
3 8 0.068653798 ubox
3 35 0.018538704 ubox
3 72 0.005420430 ubox
3 74 0.005629637 ubox
3 76 0.082397486 ubox
3 77 0.083522229 ubox
4 72 0.009888857 ubox
4 74 0.008930823 ubox
4 76 0.062450727 ubox
4 77 0.007634777 ubox
5 72 0.011507850 ubox
5 74 0.022394425 ubox
5 76 0.008662598 ubox
5 77 0.010996322 ubox
6 13 0.010191769 ubox
6 15 0.003475751 ubox
6 28 0.009999070 ubox
6 35 0.005500987 ubox
6 36 0.037955900 ubox
6 57 0.969553737 ubox
6 70 0.065559554 ubox
6 72 0.021745947 ubox
6 74 0.005805886 ubox
6 76 0.014108475 ubox
6 78 0.005080905 ubox
7 12 0.010425805 ubox
7 27 0.010235701 ubox
7 33 0.019689592 ubox
7 54 0.003772764 ubox
7 56 0.970592224 ubox
7 69 0.065585439 ubox
7 71 0.022467239 ubox
7 75 0.014600057 ubox
7 79 0.006915284 ubox
8 26 0.009767785 ubox
8 31 0.004486865 ubox
8 32 0.020974346 ubox
8 34 0.055895069 ubox
8 53 0.003952814 ubox
8 55 0.970331654 ubox
8 68 0.061829270 ubox
9 33 0.058196743 ubox
9 54 0.969282035 ubox
9 69 0.011136271 ubox
9 71 0.012649803 ubox
9 75 0.007321424 ubox
9 79 0.006979908 ubox
10 74 0.006562576 ubox
11 28 0.003889221 ubox
12 30 0.997043889 ubox
12 51 0.005287976 ubox
12 74 0.005187077 ubox
13 18 0.003800297 ubox
13 19 0.003606526 ubox
13 20 0.005011088 ubox
13 21 0.003762053 ubox
13 22 0.004938588 ubox
13 26 0.003503944 ubox
13 29 0.998229695 ubox
13 73 0.005544951 ubox
14 28 0.998322690 ubox
14 72 0.005593129 ubox
15 27 0.997553455 ubox
15 71 0.005585863 ubox
19 28 0.004130246 ubox
21 28 0.004414828 ubox
22 28 0.003457153 ubox
23 28 0.003748181 ubox
27 57 0.007561347 ubox
27 74 0.004476703 ubox
28 56 0.007432426 ubox
28 73 0.004721165 ubox
29 72 0.004751491 ubox
30 54 0.006784805 ubox
30 71 0.004748089 ubox
33 51 0.995557334 ubox
34 50 0.996539416 ubox
35 49 0.996616540 ubox
36 48 0.996015089 ubox
48 77 0.004365268 ubox
48 78 0.044537841 ubox
49 76 0.004738472 ubox
49 77 0.043478947 ubox
51 75 0.043984359 ubox
52 74 0.043334031 ubox
53 72 0.004149212 ubox
53 74 0.007399390 ubox
53 76 0.003298771 ubox
54 72 0.035669302 ubox
54 78 0.218341267 ubox
55 72 0.005754045 ubox
55 77 0.218547250 ubox
56 70 0.062392994 ubox
56 72 0.007051156 ubox
56 76 0.218669442 ubox
57 69 0.062405688 ubox
57 71 0.007330220 ubox
57 75 0.218782371 ubox
58 72 0.006139816 ubox
58 74 0.203417348 ubox
58 76 0.003909557 ubox
58 77 0.010166395 ubox
59 72 0.023105751 ubox
59 74 0.011751812 ubox
59 76 0.010139124 ubox
59 77 0.011535378 ubox
60 72 0.053908127 ubox
60 74 0.008171712 ubox
60 76 0.011393579 ubox
60 77 0.012238931 ubox
61 72 0.016444666 ubox
61 74 0.009904746 ubox
61 76 0.011991294 ubox
61 77 0.013204266 ubox
62 72 0.017435043 ubox
62 74 0.010135514 ubox
62 76 0.012898867 ubox
62 77 0.015019854 ubox
63 72 0.022056199 ubox
63 74 0.011440566 ubox
63 76 0.014641506 ubox
63 77 0.015640270 ubox
64 72 0.013923875 ubox
64 74 0.011826327 ubox
64 76 0.015050109 ubox
64 77 0.018337170 ubox
65 72 0.022124825 ubox
65 74 0.022885391 ubox
65 76 0.017326358 ubox
65 77 0.021758965 ubox
66 72 0.017294214 ubox
66 74 0.015278303 ubox
66 76 0.019821089 ubox
66 77 0.032314037 ubox
67 72 0.018732548 ubox
67 74 0.024275364 ubox
67 76 0.032201935 ubox
67 77 0.044754239 ubox
68 72 0.011500451 ubox
68 74 0.039436096 ubox
68 76 0.044532971 ubox
68 77 0.403955269 ubox
69 74 0.012378253 ubox
69 76 0.476976762 ubox
69 77 0.014024323 ubox
69 78 0.044386089 ubox
70 75 0.483010909 ubox
70 79 0.292850750 ubox
71 76 0.014415083 ubox
71 77 0.020429697 ubox
71 78 0.314248723 ubox
72 79 0.009647607 ubox
73 77 0.019486087 ubox
74 79 0.008897370 ubox
6 57 0.9500000 lbox
7 56 0.9500000 lbox
8 55 0.9500000 lbox
9 54 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
showpage
end
%%EOF
