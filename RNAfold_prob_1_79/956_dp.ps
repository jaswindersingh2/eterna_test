%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (956)
} def

/sequence { (\
GGAAAAAGAUGACUAGACAAGCAAAAAACAGUCAAUCAACAGAUCGACUGAGCCUAGCCAUCUAACAAGCGUACUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 63 0.004647899 ubox
1 66 0.121307703 ubox
1 70 0.187146450 ubox
1 72 0.012724429 ubox
1 74 0.019145147 ubox
1 75 0.016351470 ubox
1 77 0.008218352 ubox
1 78 0.219927099 ubox
2 62 0.004299558 ubox
2 63 0.004406972 ubox
2 66 0.074037902 ubox
2 70 0.098226869 ubox
2 72 0.008100310 ubox
2 74 0.018740184 ubox
2 75 0.003684573 ubox
2 76 0.012452039 ubox
2 77 0.217980188 ubox
2 78 0.319666572 ubox
3 61 0.003819946 ubox
3 63 0.006789026 ubox
3 72 0.007888995 ubox
3 75 0.012803641 ubox
3 76 0.213861108 ubox
3 77 0.317746714 ubox
4 63 0.019645318 ubox
4 72 0.009802033 ubox
4 75 0.190826765 ubox
4 76 0.304715547 ubox
4 77 0.036094179 ubox
5 63 0.013415024 ubox
5 72 0.011597719 ubox
5 75 0.271160193 ubox
5 76 0.045365304 ubox
5 77 0.080330558 ubox
6 63 0.047088316 ubox
6 72 0.036067070 ubox
6 75 0.050731187 ubox
6 76 0.097706367 ubox
6 77 0.006381001 ubox
7 14 0.003633929 ubox
7 63 0.951743923 ubox
7 72 0.018888332 ubox
7 75 0.109140430 ubox
7 76 0.004325862 ubox
8 13 0.004304857 ubox
8 62 0.988282125 ubox
8 63 0.003359981 ubox
8 70 0.039753812 ubox
8 72 0.007732863 ubox
8 74 0.112490509 ubox
8 78 0.004492823 ubox
9 61 0.988277812 ubox
9 72 0.135763997 ubox
9 77 0.004328901 ubox
10 23 0.004403454 ubox
10 60 0.988065673 ubox
10 67 0.019348344 ubox
10 68 0.019776343 ubox
10 69 0.010389516 ubox
10 71 0.136601534 ubox
10 73 0.004923928 ubox
11 18 0.003226618 ubox
11 22 0.004964023 ubox
11 58 0.049412238 ubox
11 59 0.985584213 ubox
11 66 0.020713237 ubox
11 70 0.136657122 ubox
11 72 0.004192802 ubox
11 74 0.003211410 ubox
11 78 0.003538197 ubox
12 72 0.008366186 ubox
12 77 0.003407120 ubox
13 21 0.011874953 ubox
13 57 0.985278366 ubox
13 69 0.091416351 ubox
13 71 0.008768907 ubox
14 20 0.011762415 ubox
14 56 0.987285127 ubox
14 64 0.124692135 ubox
14 65 0.009143244 ubox
14 67 0.016134913 ubox
14 68 0.072627861 ubox
15 55 0.987060034 ubox
15 63 0.147354258 ubox
16 22 0.018516294 ubox
16 53 0.046225053 ubox
16 54 0.984012264 ubox
16 58 0.005559090 ubox
16 62 0.147890608 ubox
16 66 0.013199952 ubox
17 55 0.004175625 ubox
17 61 0.144052033 ubox
17 63 0.004839228 ubox
18 50 0.026218582 ubox
18 52 0.401764833 ubox
18 57 0.004626333 ubox
19 49 0.018492861 ubox
19 55 0.008981476 ubox
19 61 0.003619670 ubox
20 49 0.007229973 ubox
20 55 0.009525651 ubox
20 61 0.003555011 ubox
21 29 0.016956425 ubox
21 32 0.003250017 ubox
21 48 0.005488757 ubox
21 49 0.011533438 ubox
21 53 0.766275674 ubox
21 54 0.010341494 ubox
21 58 0.151099276 ubox
21 59 0.010460074 ubox
22 31 0.003707115 ubox
22 50 0.035541855 ubox
22 52 0.765770918 ubox
22 57 0.151382003 ubox
23 49 0.025111401 ubox
23 55 0.016400668 ubox
24 49 0.006792552 ubox
24 55 0.042870192 ubox
25 49 0.020042003 ubox
25 55 0.007550041 ubox
26 49 0.009848362 ubox
26 55 0.004995677 ubox
27 49 0.007674452 ubox
28 49 0.006223807 ubox
29 46 0.004575746 ubox
29 50 0.994614314 ubox
29 52 0.007075153 ubox
30 49 0.998485909 ubox
31 44 0.007116682 ubox
31 48 0.999886804 ubox
32 43 0.007530596 ubox
32 47 0.999768320 ubox
32 51 0.007573180 ubox
33 42 0.007595855 ubox
33 46 0.996730945 ubox
33 50 0.007851932 ubox
34 44 0.031038166 ubox
34 49 0.007757435 ubox
35 44 0.978286747 ubox
36 41 0.004916337 ubox
36 42 0.004976403 ubox
36 43 0.997084002 ubox
36 47 0.007595372 ubox
37 42 0.996069096 ubox
37 46 0.007746696 ubox
40 50 0.003214514 ubox
41 49 0.003240086 ubox
42 48 0.003235311 ubox
52 58 0.021281180 ubox
52 70 0.003676425 ubox
53 57 0.021187904 ubox
53 69 0.003558844 ubox
54 69 0.003318543 ubox
55 64 0.006505677 ubox
55 68 0.003352228 ubox
56 63 0.006819746 ubox
57 62 0.006697994 ubox
57 66 0.003409170 ubox
57 70 0.003889350 ubox
58 69 0.003886185 ubox
62 69 0.004610312 ubox
63 67 0.003864500 ubox
63 68 0.008496132 ubox
63 69 0.005232396 ubox
63 71 0.003633038 ubox
63 73 0.016845297 ubox
64 72 0.023669745 ubox
64 75 0.010759177 ubox
64 76 0.013801592 ubox
64 77 0.019413033 ubox
65 72 0.353024927 ubox
65 75 0.012887891 ubox
65 76 0.016655894 ubox
65 77 0.026091556 ubox
66 71 0.365637450 ubox
66 79 0.036704777 ubox
67 72 0.019231436 ubox
67 75 0.012520963 ubox
67 76 0.249780678 ubox
67 77 0.043186925 ubox
68 72 0.013961891 ubox
68 75 0.287565142 ubox
68 76 0.045799768 ubox
68 77 0.028810208 ubox
69 74 0.292819634 ubox
69 75 0.039177765 ubox
69 76 0.026885794 ubox
69 77 0.008274864 ubox
69 78 0.046026108 ubox
70 79 0.283561283 ubox
71 75 0.008289752 ubox
71 76 0.029465026 ubox
71 77 0.020382168 ubox
71 78 0.305914341 ubox
72 79 0.009715787 ubox
73 77 0.019144790 ubox
74 79 0.040310843 ubox
75 79 0.004899520 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
