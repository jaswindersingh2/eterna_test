%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (272)
} def

/sequence { (\
GGAAAAAACAUCAAGUUCAACAGAACAGUCCUGACAAAGCGCCUUCGGACGCAGUCCUGACAAGAUGACAUCACUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.064954190 ubox
1 12 0.039786459 ubox
1 18 0.006659977 ubox
1 21 0.004339521 ubox
1 31 0.017855302 ubox
1 57 0.012925512 ubox
1 69 0.021438855 ubox
1 71 0.004588020 ubox
1 72 0.073577014 ubox
1 74 0.156510012 ubox
1 75 0.118440073 ubox
1 76 0.013607359 ubox
1 77 0.022925658 ubox
1 78 0.454174044 ubox
2 9 0.027660742 ubox
2 11 0.035135564 ubox
2 12 0.061121704 ubox
2 17 0.006428081 ubox
2 18 0.009139191 ubox
2 30 0.017887472 ubox
2 56 0.012917726 ubox
2 69 0.014561763 ubox
2 71 0.065444027 ubox
2 72 0.220237359 ubox
2 74 0.135987691 ubox
2 75 0.015606913 ubox
2 76 0.035326488 ubox
2 77 0.453047088 ubox
2 78 0.471155764 ubox
3 11 0.058995921 ubox
3 16 0.005968416 ubox
3 17 0.008995190 ubox
3 29 0.017643630 ubox
3 55 0.012020176 ubox
3 71 0.214867391 ubox
3 75 0.036980683 ubox
3 76 0.448874267 ubox
3 77 0.470707177 ubox
4 11 0.008497278 ubox
4 16 0.007706419 ubox
4 66 0.008993631 ubox
4 71 0.063745724 ubox
4 75 0.413619758 ubox
4 76 0.460772291 ubox
4 77 0.024505493 ubox
5 11 0.008340919 ubox
5 66 0.003435832 ubox
5 71 0.100124063 ubox
5 75 0.421933294 ubox
5 76 0.030610580 ubox
5 77 0.017298375 ubox
6 11 0.011632367 ubox
6 66 0.003446250 ubox
6 71 0.101081300 ubox
6 75 0.032597552 ubox
6 76 0.020466672 ubox
6 77 0.024012409 ubox
7 11 0.007187499 ubox
7 17 0.021719133 ubox
7 66 0.005418178 ubox
7 71 0.152095366 ubox
7 75 0.020761922 ubox
7 76 0.027619817 ubox
7 77 0.010949588 ubox
8 16 0.025100369 ubox
8 66 0.005660584 ubox
8 71 0.106700321 ubox
8 75 0.028329872 ubox
8 76 0.011649748 ubox
8 77 0.004909953 ubox
9 15 0.025737105 ubox
9 28 0.003391328 ubox
9 33 0.005231173 ubox
9 64 0.010170226 ubox
9 67 0.871659271 ubox
9 79 0.010914201 ubox
10 29 0.003830274 ubox
10 32 0.005101206 ubox
10 66 0.875308527 ubox
10 71 0.016226998 ubox
11 24 0.007160415 ubox
11 27 0.008097227 ubox
11 28 0.004286386 ubox
11 34 0.005343096 ubox
11 60 0.005064108 ubox
11 63 0.003244801 ubox
11 65 0.875840533 ubox
11 68 0.201867992 ubox
11 70 0.012517934 ubox
12 23 0.007645253 ubox
12 28 0.005684811 ubox
12 33 0.005830457 ubox
12 59 0.005510946 ubox
12 64 0.875052927 ubox
12 67 0.207243541 ubox
12 79 0.008297396 ubox
13 32 0.005609548 ubox
13 58 0.005107950 ubox
13 66 0.186664907 ubox
13 76 0.022190523 ubox
13 77 0.006696275 ubox
14 66 0.012462315 ubox
14 75 0.025299903 ubox
14 76 0.006366087 ubox
14 77 0.003752140 ubox
15 21 0.018084287 ubox
15 26 0.995644801 ubox
15 35 0.003462350 ubox
15 61 0.030015023 ubox
15 69 0.006098440 ubox
15 74 0.025158524 ubox
16 20 0.016317298 ubox
16 24 0.005425016 ubox
16 25 0.996625272 ubox
16 60 0.026153517 ubox
16 63 0.014039867 ubox
16 65 0.003209707 ubox
16 68 0.005080049 ubox
16 73 0.024142271 ubox
17 23 0.005993733 ubox
17 24 0.997106718 ubox
17 59 0.011834969 ubox
17 60 0.017056097 ubox
17 62 0.013039388 ubox
17 65 0.003518761 ubox
17 68 0.009176395 ubox
18 23 0.995842547 ubox
18 33 0.003804124 ubox
18 59 0.022347753 ubox
18 64 0.003603791 ubox
18 67 0.009990032 ubox
19 32 0.003660452 ubox
19 58 0.021746119 ubox
19 66 0.009731013 ubox
20 29 0.005616806 ubox
20 55 0.003433113 ubox
21 28 0.005951982 ubox
21 33 0.011409589 ubox
21 54 0.003557664 ubox
21 59 0.020633802 ubox
21 64 0.006649688 ubox
21 67 0.018131866 ubox
22 32 0.011783914 ubox
22 55 0.003421509 ubox
22 58 0.021587281 ubox
22 66 0.018103003 ubox
23 30 0.004720003 ubox
23 31 0.011621913 ubox
23 46 0.004381209 ubox
23 56 0.019038825 ubox
23 57 0.021160127 ubox
23 66 0.003501095 ubox
23 72 0.003632074 ubox
23 78 0.005794403 ubox
24 29 0.004727862 ubox
24 45 0.004357661 ubox
24 55 0.019266521 ubox
24 71 0.003597221 ubox
24 77 0.005687599 ubox
25 44 0.003981788 ubox
25 55 0.018376908 ubox
25 76 0.004543493 ubox
26 51 0.003624706 ubox
26 54 0.018920034 ubox
26 59 0.011858630 ubox
26 64 0.005650266 ubox
26 67 0.005596956 ubox
27 44 0.008595465 ubox
27 58 0.014928193 ubox
27 66 0.006826904 ubox
27 75 0.004241236 ubox
28 35 0.015283552 ubox
28 40 0.003390352 ubox
28 42 0.020711609 ubox
28 43 0.008908707 ubox
28 50 0.038594328 ubox
28 57 0.015208584 ubox
28 61 0.994495801 ubox
28 66 0.005515953 ubox
28 69 0.018647437 ubox
28 74 0.004443396 ubox
29 34 0.014154470 ubox
29 41 0.020371823 ubox
29 49 0.038640995 ubox
29 60 0.995751954 ubox
29 65 0.006011047 ubox
29 68 0.018655112 ubox
29 73 0.004062093 ubox
30 41 0.009383471 ubox
30 48 0.038386366 ubox
30 59 0.994039114 ubox
30 64 0.006039086 ubox
30 67 0.018558982 ubox
31 39 0.023445262 ubox
31 47 0.038077013 ubox
31 48 0.005713817 ubox
31 54 0.004857460 ubox
31 59 0.048335005 ubox
31 64 0.010103007 ubox
32 37 0.003780967 ubox
32 38 0.023564762 ubox
32 41 0.005764533 ubox
32 47 0.007336676 ubox
32 53 0.004853352 ubox
32 62 0.006096795 ubox
32 63 0.010001134 ubox
32 65 0.005875964 ubox
32 73 0.004605024 ubox
33 40 0.006323272 ubox
33 42 0.003479242 ubox
33 43 0.007660492 ubox
33 45 0.013579350 ubox
33 46 0.028423691 ubox
33 52 0.003330811 ubox
33 56 0.995716637 ubox
33 57 0.044555390 ubox
33 61 0.006176769 ubox
33 72 0.005251017 ubox
34 44 0.013081299 ubox
34 45 0.026778848 ubox
34 55 0.997688602 ubox
34 71 0.004912061 ubox
35 41 0.010771717 ubox
35 54 0.996842675 ubox
35 59 0.006127707 ubox
36 44 0.004444380 ubox
36 55 0.007748416 ubox
36 58 0.005941774 ubox
37 44 0.004407092 ubox
37 45 0.006470589 ubox
38 44 0.011511588 ubox
39 43 0.011420027 ubox
39 50 0.012000095 ubox
39 52 0.998191659 ubox
40 47 0.006506124 ubox
40 48 0.008654401 ubox
40 51 0.998642775 ubox
41 46 0.006345308 ubox
41 50 0.997946807 ubox
41 52 0.005990214 ubox
42 47 0.021052420 ubox
42 48 0.948435865 ubox
42 51 0.005992097 ubox
43 47 0.941635041 ubox
43 48 0.237508506 ubox
43 64 0.005496790 ubox
44 48 0.005267679 ubox
44 49 0.006331949 ubox
44 60 0.006928391 ubox
44 63 0.005363507 ubox
45 59 0.007388206 ubox
45 60 0.016172697 ubox
46 59 0.017503948 ubox
47 57 0.027021115 ubox
47 58 0.005935161 ubox
48 56 0.027195930 ubox
48 57 0.005252448 ubox
49 55 0.027301249 ubox
50 54 0.027031979 ubox
51 61 0.004699054 ubox
51 69 0.004910051 ubox
51 72 0.006955120 ubox
52 59 0.007128535 ubox
53 58 0.006472147 ubox
53 75 0.003941460 ubox
54 61 0.009319220 ubox
54 66 0.006609580 ubox
54 69 0.032056488 ubox
54 74 0.004612543 ubox
55 60 0.008630921 ubox
55 65 0.007089253 ubox
55 68 0.032096813 ubox
55 73 0.004527436 ubox
56 64 0.006501061 ubox
56 67 0.031903338 ubox
57 64 0.033579490 ubox
58 63 0.033993226 ubox
58 65 0.018317638 ubox
58 70 0.006858699 ubox
58 73 0.007233273 ubox
58 79 0.012154243 ubox
59 69 0.007355486 ubox
59 72 0.008199437 ubox
59 78 0.022182459 ubox
60 71 0.007798111 ubox
60 77 0.021977320 ubox
61 67 0.009195595 ubox
62 66 0.009152903 ubox
62 71 0.008319240 ubox
62 75 0.006802497 ubox
62 76 0.139647937 ubox
62 77 0.033245619 ubox
63 71 0.010906784 ubox
63 75 0.168382711 ubox
63 76 0.037295504 ubox
63 77 0.025723099 ubox
64 69 0.038987693 ubox
64 71 0.005465272 ubox
64 72 0.238177918 ubox
64 74 0.176960707 ubox
64 75 0.036210998 ubox
64 76 0.030632800 ubox
64 77 0.014780005 ubox
64 78 0.063717027 ubox
65 71 0.235440866 ubox
65 75 0.031095337 ubox
65 76 0.015944901 ubox
65 77 0.062884748 ubox
66 70 0.208771160 ubox
66 73 0.202075908 ubox
66 79 0.048737241 ubox
67 71 0.006229029 ubox
67 72 0.209358211 ubox
67 74 0.043980126 ubox
67 75 0.013006017 ubox
67 76 0.017155177 ubox
67 77 0.005531825 ubox
67 78 0.081744260 ubox
68 75 0.021174892 ubox
68 76 0.009386943 ubox
68 77 0.081126268 ubox
69 79 0.020192843 ubox
70 75 0.020308490 ubox
70 76 0.023962712 ubox
70 77 0.025019380 ubox
71 79 0.004735629 ubox
72 79 0.030070057 ubox
73 77 0.006609939 ubox
74 79 0.034561994 ubox
75 79 0.004320268 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
42 48 0.9500000 lbox
43 47 0.9500000 lbox
showpage
end
%%EOF
