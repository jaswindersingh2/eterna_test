%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (51)
} def

/sequence { (\
GGAAAAACAGCGCAAUGAAAACAUUGGGAAGUAUGGAAAACCAUAGAACAAAAGUUCACAACCCGCUGCCCUCGAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.031884482 ubox
1 11 0.004098707 ubox
1 13 0.003877145 ubox
1 59 0.005356684 ubox
1 63 0.024346799 ubox
1 64 0.066879528 ubox
1 66 0.003529953 ubox
1 67 0.006438817 ubox
1 69 0.015666403 ubox
1 70 0.305787631 ubox
1 71 0.310259056 ubox
1 72 0.047611894 ubox
1 73 0.142061067 ubox
1 76 0.017836694 ubox
1 77 0.009988817 ubox
1 78 0.201567668 ubox
2 8 0.006484847 ubox
2 11 0.004501166 ubox
2 62 0.024415861 ubox
2 63 0.066739309 ubox
2 64 0.004693967 ubox
2 66 0.006793747 ubox
2 69 0.307286463 ubox
2 70 0.309746521 ubox
2 71 0.062956920 ubox
2 72 0.124924767 ubox
2 73 0.465842704 ubox
2 76 0.012234199 ubox
2 77 0.198227934 ubox
2 78 0.197938480 ubox
3 67 0.006120691 ubox
3 72 0.456599594 ubox
3 76 0.190488337 ubox
3 77 0.197450306 ubox
4 67 0.007796846 ubox
4 72 0.069494436 ubox
4 76 0.182869110 ubox
4 77 0.009202464 ubox
5 67 0.013120947 ubox
5 72 0.056468303 ubox
5 76 0.010940856 ubox
5 77 0.006928640 ubox
6 32 0.004498540 ubox
6 67 0.005773233 ubox
6 72 0.082822686 ubox
6 76 0.007775270 ubox
6 77 0.011637667 ubox
7 32 0.062959824 ubox
7 67 0.003857323 ubox
7 72 0.050799559 ubox
7 76 0.013234513 ubox
7 77 0.004923605 ubox
8 17 0.008589439 ubox
8 31 0.079545925 ubox
8 65 0.005810688 ubox
8 68 0.987360952 ubox
8 74 0.014409109 ubox
9 16 0.008469013 ubox
9 67 0.991095054 ubox
9 72 0.023534620 ubox
10 62 0.003691173 ubox
10 64 0.003377589 ubox
10 66 0.991725424 ubox
10 69 0.028589324 ubox
10 70 0.008098902 ubox
10 71 0.024174679 ubox
11 27 0.012927088 ubox
11 28 0.129461552 ubox
11 65 0.989663947 ubox
11 68 0.028509371 ubox
11 74 0.003521417 ubox
11 79 0.019879422 ubox
12 22 0.004283053 ubox
12 59 0.006983635 ubox
12 62 0.019527058 ubox
12 63 0.042981582 ubox
12 64 0.946117374 ubox
12 66 0.021688845 ubox
12 67 0.014263391 ubox
12 69 0.025092675 ubox
12 73 0.003379781 ubox
12 78 0.021467239 ubox
13 17 0.004643722 ubox
13 26 0.957132856 ubox
13 27 0.045901298 ubox
13 28 0.013224831 ubox
13 31 0.004848931 ubox
13 65 0.021968952 ubox
13 68 0.025066489 ubox
14 25 0.964077356 ubox
14 67 0.021768196 ubox
14 76 0.008020521 ubox
14 77 0.017536887 ubox
15 24 0.965276243 ubox
15 25 0.005134188 ubox
15 76 0.017880830 ubox
16 21 0.007333998 ubox
16 23 0.965377228 ubox
16 27 0.005404875 ubox
16 58 0.126226547 ubox
16 60 0.190933549 ubox
16 61 0.010067816 ubox
16 65 0.005816693 ubox
16 74 0.018568033 ubox
16 75 0.015023725 ubox
16 79 0.008766061 ubox
17 22 0.959859290 ubox
17 25 0.006716757 ubox
17 57 0.130946380 ubox
17 59 0.196646029 ubox
17 63 0.004307076 ubox
17 64 0.005122230 ubox
17 66 0.003973195 ubox
17 73 0.026063526 ubox
17 78 0.014221273 ubox
18 24 0.006773861 ubox
18 25 0.009978656 ubox
18 56 0.129164437 ubox
18 72 0.025583562 ubox
18 77 0.014117848 ubox
19 24 0.008653923 ubox
19 25 0.005284720 ubox
19 55 0.120862270 ubox
19 56 0.016112031 ubox
19 76 0.012657200 ubox
20 24 0.004285871 ubox
20 25 0.003709636 ubox
20 55 0.018726829 ubox
20 56 0.198599386 ubox
21 32 0.012343840 ubox
21 55 0.207566038 ubox
21 56 0.003259760 ubox
22 26 0.004664212 ubox
22 27 0.012095461 ubox
22 28 0.007392120 ubox
22 31 0.015626606 ubox
22 35 0.003337199 ubox
22 54 0.208605887 ubox
22 68 0.028327492 ubox
22 74 0.004333584 ubox
23 32 0.008531555 ubox
23 34 0.003373182 ubox
23 55 0.008559306 ubox
23 67 0.028326628 ubox
23 76 0.006787747 ubox
24 30 0.003442694 ubox
24 31 0.010870483 ubox
24 33 0.003354058 ubox
24 50 0.005147609 ubox
24 51 0.154718848 ubox
24 52 0.108535311 ubox
24 53 0.109606455 ubox
24 54 0.009618498 ubox
24 61 0.005243674 ubox
24 75 0.007821064 ubox
25 29 0.003259435 ubox
25 30 0.012461301 ubox
25 43 0.009506176 ubox
25 50 0.166826562 ubox
25 51 0.097977529 ubox
25 52 0.109964117 ubox
25 53 0.010713719 ubox
25 60 0.006267566 ubox
25 65 0.034063921 ubox
25 74 0.007796360 ubox
26 42 0.011826390 ubox
26 49 0.168605584 ubox
26 59 0.006748509 ubox
26 63 0.024820589 ubox
26 64 0.103489814 ubox
26 71 0.022635255 ubox
26 73 0.007165265 ubox
27 32 0.028548799 ubox
27 34 0.004833826 ubox
27 41 0.012261013 ubox
27 42 0.024213748 ubox
27 49 0.114394119 ubox
27 57 0.014555673 ubox
27 59 0.025578324 ubox
27 62 0.030768447 ubox
27 63 0.216282888 ubox
27 64 0.101798471 ubox
27 70 0.024318166 ubox
27 71 0.007063276 ubox
27 72 0.005766059 ubox
28 32 0.009192427 ubox
28 41 0.024155879 ubox
28 49 0.101203219 ubox
28 56 0.014518632 ubox
28 57 0.015494765 ubox
28 59 0.016179967 ubox
28 62 0.215900139 ubox
28 63 0.102778808 ubox
28 64 0.007075955 ubox
28 69 0.024253137 ubox
28 70 0.007055296 ubox
28 71 0.005748579 ubox
29 34 0.003359496 ubox
29 44 0.004070424 ubox
29 55 0.014352154 ubox
29 56 0.015394966 ubox
30 44 0.005207361 ubox
30 55 0.013971419 ubox
30 67 0.022154736 ubox
31 41 0.008259222 ubox
31 44 0.009812981 ubox
31 49 0.011861015 ubox
31 59 0.103839951 ubox
31 62 0.022824376 ubox
31 63 0.010790381 ubox
31 64 0.004544091 ubox
31 66 0.024587494 ubox
31 69 0.003290134 ubox
32 37 0.007490950 ubox
32 39 0.003745934 ubox
32 40 0.008231545 ubox
32 43 0.006565992 ubox
32 45 0.933348364 ubox
32 46 0.005690779 ubox
32 48 0.009619979 ubox
32 53 0.010754144 ubox
32 58 0.076868358 ubox
32 60 0.003567628 ubox
32 61 0.018271199 ubox
32 65 0.019947015 ubox
33 44 0.989833412 ubox
34 39 0.003787565 ubox
34 43 0.996622491 ubox
34 45 0.004409904 ubox
35 41 0.011818830 ubox
35 42 0.999112719 ubox
35 44 0.004384792 ubox
35 64 0.003729277 ubox
36 41 0.992935620 ubox
36 42 0.006965530 ubox
36 63 0.003729535 ubox
44 58 0.010922175 ubox
44 60 0.004430172 ubox
44 61 0.003790784 ubox
46 56 0.005347192 ubox
46 57 0.964994349 ubox
46 59 0.011551612 ubox
47 55 0.004757322 ubox
47 56 0.965883290 ubox
48 55 0.965332433 ubox
49 54 0.963904692 ubox
53 67 0.003657485 ubox
54 59 0.010905584 ubox
54 62 0.034717117 ubox
54 63 0.007438212 ubox
54 66 0.003771942 ubox
55 61 0.034443944 ubox
55 65 0.003634820 ubox
56 60 0.028724247 ubox
58 67 0.003923670 ubox
59 65 0.016312375 ubox
59 68 0.037544529 ubox
60 67 0.035273878 ubox
62 68 0.006407167 ubox
63 68 0.005037661 ubox
63 74 0.003719693 ubox
64 74 0.022539654 ubox
64 79 0.005199196 ubox
65 69 0.004451411 ubox
65 70 0.005243452 ubox
65 71 0.006075382 ubox
65 73 0.022334936 ubox
65 78 0.006240747 ubox
66 74 0.007519361 ubox
67 74 0.008760113 ubox
67 75 0.004006602 ubox
68 73 0.011123900 ubox
68 78 0.003590874 ubox
69 74 0.056838721 ubox
69 79 0.010999835 ubox
70 74 0.032147888 ubox
70 79 0.024739734 ubox
71 79 0.023021866 ubox
72 79 0.008054222 ubox
73 79 0.083116925 ubox
74 78 0.087547132 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
