%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (797)
} def

/sequence { (\
GGAAAAAGUAGAACGAGAAUUAGAAACCUUAGUACGAAAAGAUACAAGAGUUUCAAUUCCGAUUCACAUUCGAUUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.005023447 ubox
1 14 0.003925697 ubox
1 65 0.004339124 ubox
1 67 0.006264924 ubox
1 71 0.105623846 ubox
1 74 0.014149259 ubox
1 75 0.009561224 ubox
1 76 0.018881506 ubox
1 77 0.030652252 ubox
1 78 0.607909396 ubox
2 9 0.005941850 ubox
2 64 0.004151831 ubox
2 65 0.007559180 ubox
2 70 0.101355626 ubox
2 71 0.439813000 ubox
2 74 0.011088843 ubox
2 75 0.027566866 ubox
2 76 0.048106054 ubox
2 77 0.608651686 ubox
2 78 0.476886155 ubox
3 9 0.004708941 ubox
3 63 0.003857923 ubox
3 64 0.007429781 ubox
3 69 0.094138532 ubox
3 70 0.439119458 ubox
3 74 0.027900401 ubox
3 75 0.052319201 ubox
3 76 0.608343425 ubox
3 77 0.476490985 ubox
4 9 0.005066985 ubox
4 63 0.006473974 ubox
4 69 0.424799461 ubox
4 70 0.035685566 ubox
4 74 0.053270369 ubox
4 75 0.603755545 ubox
4 76 0.473865397 ubox
4 77 0.038432861 ubox
5 9 0.003681500 ubox
5 69 0.042204946 ubox
5 70 0.188745199 ubox
5 74 0.565683627 ubox
5 75 0.463525425 ubox
5 76 0.049115831 ubox
5 77 0.041574021 ubox
6 69 0.243577353 ubox
6 70 0.358119055 ubox
6 74 0.412391078 ubox
6 75 0.056898572 ubox
6 76 0.050575649 ubox
6 77 0.005745813 ubox
7 64 0.008731254 ubox
7 69 0.392061149 ubox
7 70 0.317840856 ubox
7 74 0.061974935 ubox
7 75 0.056701141 ubox
7 76 0.006477542 ubox
8 14 0.018762498 ubox
8 63 0.009741372 ubox
8 65 0.017033321 ubox
8 67 0.754270278 ubox
8 69 0.321597117 ubox
8 70 0.055947544 ubox
8 71 0.389864238 ubox
8 74 0.063375106 ubox
8 75 0.005340387 ubox
8 78 0.008467961 ubox
9 13 0.016961889 ubox
9 62 0.009807207 ubox
9 66 0.753107231 ubox
9 68 0.315025259 ubox
9 72 0.013079984 ubox
9 73 0.064048759 ubox
10 63 0.008235429 ubox
10 64 0.018536323 ubox
10 69 0.117760778 ubox
10 70 0.072624213 ubox
10 74 0.003171699 ubox
10 76 0.005788690 ubox
10 77 0.008043910 ubox
11 63 0.017081396 ubox
11 64 0.184521845 ubox
11 65 0.964906853 ubox
11 67 0.024870729 ubox
11 69 0.015384219 ubox
11 70 0.006181403 ubox
11 71 0.117156255 ubox
11 75 0.007022318 ubox
11 76 0.009186045 ubox
11 78 0.011610505 ubox
12 63 0.191014336 ubox
12 64 0.964897865 ubox
12 69 0.006062143 ubox
12 70 0.117100890 ubox
12 74 0.007117228 ubox
12 75 0.009316396 ubox
12 77 0.011498462 ubox
13 63 0.953654064 ubox
13 64 0.010484310 ubox
13 69 0.113813347 ubox
13 74 0.009166594 ubox
13 76 0.010370526 ubox
14 61 0.991206969 ubox
14 72 0.014077528 ubox
14 79 0.026241829 ubox
15 59 0.004255452 ubox
15 60 0.992007051 ubox
15 64 0.006584409 ubox
15 65 0.037088713 ubox
15 67 0.018506474 ubox
15 71 0.014128779 ubox
15 78 0.027616072 ubox
16 58 0.004662553 ubox
16 63 0.007308719 ubox
16 64 0.036858901 ubox
16 70 0.014004422 ubox
16 77 0.027272997 ubox
17 58 0.008498033 ubox
17 59 0.999148245 ubox
17 60 0.007530639 ubox
17 63 0.005892636 ubox
17 65 0.020109131 ubox
17 76 0.023812758 ubox
18 57 0.007061719 ubox
18 58 0.999011893 ubox
18 64 0.020136017 ubox
18 75 0.023687298 ubox
19 57 0.998087724 ubox
19 58 0.004565783 ubox
19 63 0.020014499 ubox
19 74 0.023020393 ubox
20 55 0.006275863 ubox
20 56 0.996206090 ubox
20 62 0.019873864 ubox
20 73 0.021710937 ubox
21 55 0.983352948 ubox
21 56 0.035429403 ubox
21 61 0.018696457 ubox
21 72 0.009682437 ubox
22 57 0.004202036 ubox
22 58 0.004330637 ubox
23 53 0.020889688 ubox
23 54 0.999191911 ubox
23 59 0.008588257 ubox
24 52 0.019924060 ubox
24 53 0.999248222 ubox
24 58 0.008199833 ubox
25 51 0.018046600 ubox
25 52 0.998409885 ubox
25 57 0.005801300 ubox
26 51 0.999245180 ubox
27 50 0.998926660 ubox
28 41 0.006101163 ubox
28 48 0.986584047 ubox
28 50 0.034943808 ubox
29 40 0.006118512 ubox
29 46 0.007516381 ubox
29 47 0.984888972 ubox
29 48 0.123667224 ubox
29 49 0.048549940 ubox
30 39 0.006104953 ubox
30 44 0.010580798 ubox
30 46 0.971270727 ubox
30 47 0.129989895 ubox
30 48 0.046536395 ubox
30 49 0.003245383 ubox
31 43 0.012887979 ubox
32 43 0.046884255 ubox
32 45 0.994465953 ubox
33 40 0.007021334 ubox
33 41 0.006524712 ubox
33 42 0.048512404 ubox
33 44 0.994232713 ubox
34 43 0.984855141 ubox
35 41 0.806739339 ubox
36 43 0.008401892 ubox
36 45 0.008049693 ubox
37 43 0.007115063 ubox
38 43 0.005482556 ubox
60 72 0.062575228 ubox
60 79 0.008260204 ubox
61 67 0.003793995 ubox
61 70 0.003385095 ubox
61 71 0.064297908 ubox
61 76 0.003978075 ubox
61 78 0.009369291 ubox
62 69 0.006891993 ubox
62 70 0.063619607 ubox
62 74 0.005778217 ubox
62 75 0.006859646 ubox
62 77 0.009206906 ubox
63 68 0.007600418 ubox
63 73 0.005820823 ubox
64 68 0.010051973 ubox
64 72 0.005061758 ubox
64 73 0.033310995 ubox
65 72 0.036213606 ubox
66 70 0.004883170 ubox
66 74 0.004061255 ubox
66 75 0.003337994 ubox
67 72 0.039624922 ubox
67 79 0.005326225 ubox
68 74 0.013191809 ubox
68 75 0.014417523 ubox
68 76 0.008016389 ubox
68 77 0.011954322 ubox
69 73 0.013792213 ubox
70 79 0.004521738 ubox
71 79 0.192053372 ubox
72 76 0.005316969 ubox
72 77 0.010147061 ubox
72 78 0.232495649 ubox
73 77 0.202356213 ubox
74 79 0.005692760 ubox
75 79 0.003797325 ubox
2 71 0.9500000 lbox
3 70 0.9500000 lbox
4 69 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 41 0.9500000 lbox
showpage
end
%%EOF
