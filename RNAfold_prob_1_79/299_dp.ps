%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (299)
} def

/sequence { (\
GGAAAAAAGCCCAAGAUGGAAACAUCAGAUUGGUCAAAGACGGGAAACGGUCGGAUUGGUCAAGGGCAGGAUGUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.008085099 ubox
1 11 0.037216462 ubox
1 12 0.135965212 ubox
1 72 0.007410116 ubox
1 74 0.015060117 ubox
1 75 0.198017491 ubox
1 76 0.403089000 ubox
1 77 0.019469687 ubox
1 78 0.140455104 ubox
2 10 0.037453936 ubox
2 11 0.135966925 ubox
2 12 0.003654278 ubox
2 72 0.006389269 ubox
2 74 0.193123934 ubox
2 75 0.465510667 ubox
2 76 0.008370294 ubox
2 77 0.131666633 ubox
2 78 0.140934240 ubox
3 72 0.022439805 ubox
3 74 0.462091601 ubox
3 76 0.124794314 ubox
3 77 0.139360057 ubox
4 72 0.069534622 ubox
4 74 0.042088531 ubox
4 76 0.123691652 ubox
4 77 0.006261453 ubox
5 72 0.088940061 ubox
5 74 0.064242459 ubox
5 76 0.006735390 ubox
5 77 0.004546878 ubox
6 72 0.049091549 ubox
6 74 0.054849871 ubox
6 76 0.004645915 ubox
6 77 0.004261816 ubox
7 72 0.039232919 ubox
7 74 0.006452652 ubox
7 76 0.004134962 ubox
7 77 0.007753633 ubox
8 72 0.059074037 ubox
8 74 0.010227432 ubox
8 76 0.008422674 ubox
8 77 0.003413756 ubox
9 35 0.003609195 ubox
9 67 0.986579183 ubox
9 75 0.004153257 ubox
10 19 0.003234743 ubox
10 65 0.003731934 ubox
10 66 0.987746354 ubox
10 70 0.006238439 ubox
11 18 0.003238175 ubox
11 19 0.007900185 ubox
11 33 0.007457792 ubox
11 64 0.004281055 ubox
11 65 0.987745268 ubox
11 66 0.004423642 ubox
11 69 0.006166285 ubox
11 70 0.004536220 ubox
12 18 0.008010201 ubox
12 32 0.007644210 ubox
12 64 0.986713931 ubox
12 65 0.005311412 ubox
12 69 0.004563431 ubox
13 17 0.006525640 ubox
13 31 0.007916694 ubox
13 77 0.003610841 ubox
14 30 0.007942972 ubox
14 76 0.003757250 ubox
15 26 0.997645079 ubox
15 61 0.027016418 ubox
15 75 0.003650845 ubox
15 78 0.003307678 ubox
16 25 0.998626003 ubox
16 60 0.027001874 ubox
16 74 0.003596452 ubox
17 24 0.998583864 ubox
17 27 0.011076688 ubox
17 59 0.026905731 ubox
17 73 0.003487173 ubox
17 79 0.012340050 ubox
18 23 0.998373557 ubox
18 26 0.012103034 ubox
18 78 0.019990688 ubox
19 23 0.007666425 ubox
19 25 0.008843797 ubox
19 26 0.012742668 ubox
19 57 0.025971460 ubox
19 77 0.020000840 ubox
19 78 0.011515727 ubox
20 25 0.011739028 ubox
20 56 0.022496460 ubox
20 76 0.019665907 ubox
20 77 0.011523622 ubox
21 76 0.011167903 ubox
22 74 0.023264228 ubox
23 32 0.003957406 ubox
23 53 0.015726602 ubox
23 58 0.003175272 ubox
23 73 0.023828975 ubox
24 31 0.003911548 ubox
24 34 0.007145554 ubox
24 51 0.010587551 ubox
24 56 0.013686545 ubox
24 72 0.023824215 ubox
25 33 0.007511519 ubox
25 50 0.010640726 ubox
25 55 0.020393268 ubox
25 71 0.023813051 ubox
26 32 0.007841079 ubox
26 49 0.010546910 ubox
26 50 0.004896462 ubox
26 54 0.020281515 ubox
26 70 0.023770767 ubox
27 31 0.006428265 ubox
28 35 0.006488258 ubox
28 48 0.005243462 ubox
28 52 0.022286424 ubox
28 61 0.980963472 ubox
28 67 0.009877531 ubox
29 34 0.005762336 ubox
29 51 0.022442384 ubox
29 60 0.982005401 ubox
30 44 0.009592659 ubox
30 50 0.022400222 ubox
30 59 0.980581209 ubox
30 62 0.003522605 ubox
30 63 0.155853974 ubox
31 43 0.010903249 ubox
31 49 0.022233937 ubox
31 58 0.964699059 ubox
31 59 0.005027072 ubox
31 62 0.179093228 ubox
31 63 0.004919832 ubox
32 48 0.022244544 ubox
32 56 0.003254099 ubox
32 57 0.964712682 ubox
32 61 0.182833925 ubox
33 41 0.013245957 ubox
33 56 0.980602726 ubox
33 57 0.006123264 ubox
33 60 0.173777085 ubox
33 61 0.010084288 ubox
34 40 0.013253507 ubox
34 45 0.018648282 ubox
34 54 0.004756694 ubox
34 55 0.981893105 ubox
34 59 0.173999498 ubox
35 39 0.013143917 ubox
35 44 0.019119665 ubox
35 53 0.022163062 ubox
35 54 0.978143343 ubox
35 58 0.183325643 ubox
35 59 0.008821615 ubox
36 56 0.007008762 ubox
36 57 0.181686549 ubox
37 51 0.005973083 ubox
37 56 0.160982229 ubox
37 57 0.011077592 ubox
38 51 0.039938279 ubox
38 56 0.015009882 ubox
39 48 0.004176187 ubox
39 51 0.012718716 ubox
39 52 0.989423431 ubox
40 51 0.991764339 ubox
41 49 0.149471378 ubox
41 50 0.987102092 ubox
41 53 0.022629634 ubox
41 54 0.003256790 ubox
42 48 0.173835738 ubox
42 52 0.022608292 ubox
43 48 0.936890213 ubox
43 51 0.021566609 ubox
43 52 0.003499938 ubox
44 48 0.019145252 ubox
53 61 0.003258315 ubox
54 61 0.005564656 ubox
55 60 0.004945379 ubox
61 79 0.003334097 ubox
62 77 0.016241739 ubox
63 76 0.017338712 ubox
63 77 0.125920076 ubox
64 75 0.015807547 ubox
64 76 0.148885615 ubox
64 77 0.005143192 ubox
64 78 0.005031995 ubox
65 74 0.013576625 ubox
65 75 0.152185199 ubox
65 76 0.004553812 ubox
65 78 0.003744599 ubox
66 74 0.152426111 ubox
66 75 0.004745054 ubox
66 77 0.003509287 ubox
66 78 0.004551834 ubox
67 73 0.152778250 ubox
67 79 0.003391142 ubox
68 72 0.124029768 ubox
68 74 0.017271952 ubox
68 76 0.156175327 ubox
68 77 0.206707242 ubox
69 74 0.020330366 ubox
69 75 0.168939943 ubox
69 76 0.249298968 ubox
69 77 0.018407593 ubox
69 78 0.276859250 ubox
70 74 0.109635961 ubox
70 75 0.254265956 ubox
70 76 0.018980107 ubox
70 77 0.268508144 ubox
70 78 0.395177991 ubox
71 76 0.242448228 ubox
71 77 0.391813359 ubox
72 79 0.061047791 ubox
73 77 0.005134532 ubox
73 78 0.098242459 ubox
74 79 0.005320780 ubox
75 79 0.008005538 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
31 58 0.9500000 lbox
32 57 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
