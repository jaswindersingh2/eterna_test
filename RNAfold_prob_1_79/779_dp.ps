%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (779)
} def

/sequence { (\
GGAAAACUAUGAGGAGAAAAGGAAAAAAGUUGCACAGAAAACUGAGCAACACCCUCCACAUAGAAAAAGCCAUUUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.075095029 ubox
1 8 0.021473492 ubox
1 57 0.008352433 ubox
1 70 0.034679612 ubox
1 71 0.593138505 ubox
1 76 0.004675238 ubox
1 77 0.010706726 ubox
1 78 0.520067641 ubox
2 7 0.030789596 ubox
2 56 0.008329051 ubox
2 70 0.593313559 ubox
2 71 0.009490804 ubox
2 75 0.006923630 ubox
2 76 0.016728445 ubox
2 77 0.521109743 ubox
2 78 0.322940259 ubox
3 8 0.003321398 ubox
3 55 0.007740522 ubox
3 74 0.007155303 ubox
3 75 0.018162954 ubox
3 76 0.521321761 ubox
3 77 0.322809419 ubox
4 73 0.006790614 ubox
4 74 0.019005924 ubox
4 75 0.520509473 ubox
4 76 0.321319358 ubox
4 77 0.009591440 ubox
5 73 0.018517331 ubox
5 74 0.518527646 ubox
5 75 0.319093910 ubox
5 76 0.012110860 ubox
5 77 0.003245867 ubox
6 73 0.507716155 ubox
6 74 0.311448031 ubox
6 75 0.013694384 ubox
6 76 0.003681193 ubox
7 13 0.006307826 ubox
7 14 0.007356822 ubox
7 16 0.008482425 ubox
7 21 0.003447994 ubox
7 63 0.918692900 ubox
7 69 0.012431997 ubox
7 79 0.008375539 ubox
8 12 0.005730244 ubox
8 13 0.007051458 ubox
8 15 0.008271056 ubox
8 20 0.003402930 ubox
8 62 0.990655332 ubox
8 63 0.003875531 ubox
8 68 0.009825145 ubox
8 72 0.003888265 ubox
9 61 0.996743592 ubox
10 58 0.004129950 ubox
10 60 0.997439235 ubox
10 62 0.004848686 ubox
11 56 0.020895825 ubox
11 57 0.003325694 ubox
11 59 0.995247126 ubox
11 61 0.004972106 ubox
12 55 0.023208301 ubox
13 54 0.023284455 ubox
13 57 0.997701238 ubox
14 53 0.023219374 ubox
14 56 0.998917351 ubox
14 57 0.014306290 ubox
14 78 0.008875468 ubox
15 55 0.995517968 ubox
15 77 0.008883201 ubox
16 52 0.016299570 ubox
16 53 0.025373126 ubox
16 54 0.988132933 ubox
16 55 0.003677883 ubox
16 56 0.014667340 ubox
16 76 0.008876290 ubox
17 55 0.013488117 ubox
17 75 0.008873946 ubox
18 74 0.008836772 ubox
19 55 0.007352405 ubox
19 73 0.008447677 ubox
20 30 0.003246060 ubox
20 31 0.003949907 ubox
20 55 0.078609283 ubox
21 30 0.005988346 ubox
21 50 0.024175628 ubox
21 52 0.042003383 ubox
21 53 0.820465546 ubox
21 54 0.127567076 ubox
21 55 0.005874006 ubox
21 57 0.033667227 ubox
21 71 0.008702049 ubox
22 31 0.003300952 ubox
22 47 0.008829260 ubox
22 50 0.021385739 ubox
22 52 0.819814949 ubox
22 53 0.139198820 ubox
22 54 0.009502767 ubox
22 56 0.033730372 ubox
22 70 0.008683306 ubox
23 30 0.004305078 ubox
23 31 0.003410465 ubox
23 55 0.032901872 ubox
24 30 0.003908640 ubox
24 31 0.003358689 ubox
24 55 0.003368033 ubox
25 30 0.003789595 ubox
28 43 0.031119698 ubox
29 42 0.031446165 ubox
29 47 0.004050584 ubox
29 50 0.995332764 ubox
29 52 0.016987640 ubox
29 53 0.009063913 ubox
30 41 0.031404536 ubox
30 46 0.004041835 ubox
30 48 0.004495117 ubox
30 49 0.998238890 ubox
30 51 0.015141018 ubox
31 40 0.031306116 ubox
31 45 0.003895054 ubox
31 48 0.998827217 ubox
32 47 0.999477548 ubox
33 46 0.998259639 ubox
34 43 0.003432163 ubox
35 44 0.995886568 ubox
36 43 0.997194946 ubox
37 42 0.989003848 ubox
37 43 0.006969594 ubox
38 43 0.004201655 ubox
54 63 0.004596010 ubox
55 62 0.004319588 ubox
55 64 0.005526596 ubox
56 63 0.005794510 ubox
62 77 0.003982945 ubox
63 70 0.007545597 ubox
63 71 0.008069201 ubox
63 76 0.009501909 ubox
63 77 0.013685937 ubox
63 78 0.386670004 ubox
64 73 0.010803519 ubox
64 74 0.010632480 ubox
64 75 0.028992450 ubox
64 76 0.042554701 ubox
64 77 0.423613094 ubox
65 73 0.012059015 ubox
65 74 0.033642628 ubox
65 75 0.047371006 ubox
65 76 0.431520143 ubox
65 77 0.059145281 ubox
66 73 0.031975915 ubox
66 74 0.048708983 ubox
66 75 0.433585072 ubox
66 76 0.065858574 ubox
66 77 0.039088676 ubox
67 73 0.045466247 ubox
67 74 0.430679165 ubox
67 75 0.067479403 ubox
67 76 0.043470989 ubox
67 77 0.014564115 ubox
68 73 0.411149503 ubox
68 74 0.065921395 ubox
68 75 0.042821029 ubox
68 76 0.015933498 ubox
68 77 0.009218653 ubox
69 73 0.045429057 ubox
69 74 0.032184812 ubox
69 75 0.014208176 ubox
69 76 0.008828349 ubox
69 78 0.014334600 ubox
70 79 0.009354151 ubox
71 79 0.009182842 ubox
72 76 0.005948716 ubox
72 77 0.020358952 ubox
73 79 0.005883526 ubox
74 79 0.005884645 ubox
75 79 0.004257476 ubox
1 71 0.9500000 lbox
2 70 0.9500000 lbox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
