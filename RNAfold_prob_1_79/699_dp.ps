%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (699)
} def

/sequence { (\
GGAAAUACACCAGAAACAGGAGUAAAGAGACCACAAAAAGAGGACUCAGACAGCACAAAAGAGCAGUCGCGUAGAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.006206137 ubox
1 8 0.064850658 ubox
1 10 0.024945310 ubox
1 11 0.157532584 ubox
1 17 0.014871990 ubox
1 31 0.007082969 ubox
1 32 0.063620598 ubox
1 34 0.003502115 ubox
1 51 0.005113340 ubox
1 56 0.003194899 ubox
1 68 0.005614836 ubox
1 70 0.044456877 ubox
1 72 0.006087778 ubox
1 76 0.006004398 ubox
1 77 0.008923541 ubox
1 78 0.715768435 ubox
2 6 0.003226577 ubox
2 8 0.013900938 ubox
2 10 0.157278876 ubox
2 11 0.017746122 ubox
2 17 0.004022258 ubox
2 31 0.063560478 ubox
2 67 0.003844991 ubox
2 68 0.009962486 ubox
2 70 0.037591892 ubox
2 72 0.007340387 ubox
2 76 0.011046490 ubox
2 77 0.714176221 ubox
2 78 0.504491156 ubox
3 67 0.008872332 ubox
3 72 0.007509641 ubox
3 76 0.702123883 ubox
3 77 0.501233279 ubox
4 23 0.003714024 ubox
4 72 0.009405704 ubox
4 76 0.458448690 ubox
4 77 0.037325507 ubox
5 23 0.019941873 ubox
5 72 0.024201363 ubox
5 76 0.046004781 ubox
5 77 0.006333872 ubox
6 12 0.004047975 ubox
6 14 0.003548464 ubox
6 15 0.004694198 ubox
6 21 0.003575840 ubox
6 22 0.020083177 ubox
6 24 0.488340206 ubox
6 25 0.023223255 ubox
6 26 0.011959439 ubox
6 27 0.004318780 ubox
6 28 0.005013847 ubox
6 71 0.021365051 ubox
6 73 0.805477273 ubox
6 74 0.036974973 ubox
6 75 0.046977383 ubox
7 23 0.518940324 ubox
7 72 0.808843344 ubox
8 13 0.015763980 ubox
8 19 0.010263975 ubox
8 20 0.008133166 ubox
8 22 0.520858904 ubox
8 69 0.017235617 ubox
8 71 0.808058188 ubox
8 74 0.027278985 ubox
8 79 0.005556170 ubox
9 23 0.128660169 ubox
9 67 0.004956039 ubox
9 72 0.041757237 ubox
10 19 0.072900924 ubox
10 20 0.790399721 ubox
10 22 0.133102710 ubox
10 43 0.012948530 ubox
10 66 0.004949585 ubox
10 69 0.379788620 ubox
10 71 0.042522532 ubox
10 74 0.003554600 ubox
10 79 0.004023332 ubox
11 19 0.794905904 ubox
11 20 0.162899019 ubox
11 22 0.034440916 ubox
11 27 0.004548628 ubox
11 42 0.013033135 ubox
11 66 0.003721606 ubox
11 69 0.064012772 ubox
11 71 0.008234358 ubox
11 74 0.006198912 ubox
11 79 0.008622585 ubox
12 23 0.014274062 ubox
12 67 0.004868861 ubox
13 17 0.185944252 ubox
13 23 0.009755412 ubox
13 68 0.016606032 ubox
13 70 0.019844168 ubox
13 77 0.004911496 ubox
13 78 0.087221635 ubox
14 23 0.021617937 ubox
14 67 0.014855383 ubox
14 76 0.005090122 ubox
14 77 0.086750514 ubox
15 23 0.018553058 ubox
15 76 0.080671306 ubox
15 77 0.006034967 ubox
16 23 0.287676634 ubox
16 67 0.006604350 ubox
16 72 0.028617466 ubox
16 76 0.006885988 ubox
17 22 0.297940400 ubox
17 27 0.003389645 ubox
17 49 0.003495880 ubox
17 66 0.007070173 ubox
17 69 0.006914051 ubox
17 71 0.029248799 ubox
17 74 0.057648931 ubox
17 79 0.008079025 ubox
18 23 0.029884920 ubox
18 72 0.026780408 ubox
19 23 0.011289713 ubox
19 32 0.031481868 ubox
19 34 0.028077456 ubox
19 47 0.005601386 ubox
19 54 0.016487785 ubox
19 56 0.005505527 ubox
19 70 0.014625062 ubox
19 72 0.006882244 ubox
19 78 0.029254962 ubox
20 31 0.031422741 ubox
20 32 0.012193669 ubox
20 47 0.099389057 ubox
20 54 0.005808048 ubox
20 68 0.009488682 ubox
20 70 0.029777169 ubox
20 72 0.036649685 ubox
20 77 0.028072580 ubox
20 78 0.132062562 ubox
21 46 0.099882476 ubox
21 67 0.009138746 ubox
21 72 0.005158117 ubox
21 76 0.026257716 ubox
21 77 0.132049938 ubox
22 31 0.033232741 ubox
22 34 0.008339862 ubox
22 45 0.099945427 ubox
22 47 0.003503165 ubox
22 51 0.045322662 ubox
22 54 0.010029005 ubox
22 70 0.072766444 ubox
22 76 0.129970012 ubox
22 78 0.004804336 ubox
23 28 0.021289400 ubox
23 29 0.003367983 ubox
23 30 0.032359517 ubox
23 33 0.008073780 ubox
23 43 0.003851194 ubox
23 44 0.098197927 ubox
23 48 0.014518039 ubox
23 49 0.003596376 ubox
23 50 0.044607349 ubox
23 53 0.009824315 ubox
23 65 0.007473002 ubox
23 69 0.070616093 ubox
23 73 0.011028796 ubox
23 74 0.006278407 ubox
23 75 0.127267851 ubox
24 72 0.011761528 ubox
24 77 0.003595235 ubox
25 72 0.012974075 ubox
25 76 0.004251622 ubox
25 77 0.006587978 ubox
26 46 0.015157581 ubox
26 72 0.023055457 ubox
26 76 0.006390635 ubox
26 77 0.003282526 ubox
27 31 0.003550588 ubox
27 32 0.013311867 ubox
27 34 0.011174237 ubox
27 45 0.016050944 ubox
27 47 0.984756820 ubox
27 70 0.006830063 ubox
27 78 0.008434325 ubox
28 46 0.985847432 ubox
28 77 0.008199680 ubox
29 34 0.010202801 ubox
29 45 0.983827075 ubox
29 47 0.026319734 ubox
29 68 0.005586132 ubox
29 76 0.006139633 ubox
29 78 0.004323233 ubox
30 46 0.025152723 ubox
30 67 0.005591392 ubox
30 77 0.004034547 ubox
31 40 0.010575026 ubox
31 42 0.046358278 ubox
31 43 0.986458556 ubox
31 66 0.005531042 ubox
31 74 0.003647572 ubox
32 40 0.040255942 ubox
32 42 0.986680344 ubox
32 43 0.023445364 ubox
33 72 0.004622902 ubox
34 40 0.640738012 ubox
34 42 0.030014567 ubox
34 43 0.012642416 ubox
34 71 0.004721335 ubox
38 77 0.007061120 ubox
39 46 0.011254673 ubox
39 76 0.007765190 ubox
39 77 0.004699441 ubox
40 45 0.011844303 ubox
40 47 0.026467595 ubox
40 68 0.003310992 ubox
40 70 0.004146158 ubox
40 76 0.004987675 ubox
40 77 0.010959778 ubox
40 78 0.081612129 ubox
41 46 0.024791259 ubox
41 67 0.003297299 ubox
41 76 0.011945187 ubox
41 77 0.081461006 ubox
42 47 0.008132573 ubox
42 70 0.005639332 ubox
42 76 0.077957991 ubox
42 77 0.003164719 ubox
42 78 0.052487238 ubox
43 68 0.012665204 ubox
43 70 0.003622304 ubox
43 72 0.003291864 ubox
43 76 0.004289618 ubox
43 77 0.052708452 ubox
43 78 0.015988156 ubox
44 67 0.012697887 ubox
44 72 0.056243127 ubox
44 76 0.052304558 ubox
44 77 0.015286540 ubox
45 63 0.005516112 ubox
45 66 0.012685051 ubox
45 69 0.004187928 ubox
45 71 0.058162243 ubox
45 74 0.074025958 ubox
46 62 0.005623103 ubox
46 65 0.012505268 ubox
46 71 0.006888202 ubox
46 73 0.072744202 ubox
46 75 0.011581787 ubox
47 61 0.005660458 ubox
47 63 0.003734784 ubox
47 69 0.045069158 ubox
47 71 0.068562159 ubox
47 74 0.011707648 ubox
48 72 0.012103606 ubox
49 54 0.009815230 ubox
49 56 0.009607471 ubox
49 64 0.003173804 ubox
49 67 0.003469666 ubox
49 68 0.989888991 ubox
49 70 0.011277097 ubox
49 78 0.007475647 ubox
50 67 0.991258562 ubox
50 72 0.020586667 ubox
50 77 0.006639005 ubox
51 61 0.004202637 ubox
51 66 0.987841753 ubox
51 69 0.004401511 ubox
51 71 0.021115686 ubox
51 74 0.003460509 ubox
53 64 0.994112925 ubox
53 67 0.005564638 ubox
53 68 0.003911938 ubox
53 70 0.041961569 ubox
53 72 0.005276164 ubox
54 61 0.022733325 ubox
54 63 0.995128089 ubox
54 66 0.005873009 ubox
54 69 0.041990319 ubox
54 71 0.005406740 ubox
55 67 0.037992445 ubox
55 72 0.005096157 ubox
56 61 0.404998024 ubox
56 63 0.012892937 ubox
56 66 0.038174159 ubox
56 69 0.004427196 ubox
56 71 0.005270846 ubox
61 68 0.019132101 ubox
61 72 0.013728908 ubox
61 78 0.012520120 ubox
62 67 0.018662807 ubox
62 72 0.003355340 ubox
62 77 0.011992954 ubox
63 70 0.049191565 ubox
63 72 0.007091011 ubox
63 76 0.006020759 ubox
63 78 0.022598868 ubox
64 69 0.049183499 ubox
64 71 0.007273095 ubox
64 79 0.006848883 ubox
65 77 0.064318893 ubox
66 70 0.004235132 ubox
66 76 0.082080940 ubox
67 75 0.085669492 ubox
68 74 0.086939112 ubox
68 79 0.004459786 ubox
69 76 0.008034477 ubox
69 77 0.003999514 ubox
69 78 0.023816968 ubox
70 74 0.030847524 ubox
70 79 0.145098527 ubox
71 76 0.008709643 ubox
71 77 0.010879582 ubox
71 78 0.156011799 ubox
72 79 0.004878118 ubox
73 77 0.009763690 ubox
74 78 0.015549364 ubox
1 78 0.9500000 lbox
2 77 0.9500000 lbox
3 76 0.9500000 lbox
6 73 0.9500000 lbox
7 72 0.9500000 lbox
8 71 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
showpage
end
%%EOF
