%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (470)
} def

/sequence { (\
GGAAAAGAUAUCGUCAGAGGAAACUCGAGGAAACUCGACAAAAGAUUAGGAAACUAAUCGAUAUCAAAAAUUCGUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.016180788 ubox
1 15 0.011287941 ubox
1 39 0.003652926 ubox
1 65 0.004691276 ubox
1 71 0.028790932 ubox
1 72 0.014725938 ubox
1 73 0.317640769 ubox
1 75 0.016568012 ubox
1 76 0.005882531 ubox
1 77 0.009714610 ubox
1 78 0.239941325 ubox
2 11 0.014424230 ubox
2 12 0.027898879 ubox
2 14 0.009122553 ubox
2 15 0.022539478 ubox
2 65 0.007816547 ubox
2 71 0.020224782 ubox
2 72 0.315634233 ubox
2 73 0.324747356 ubox
2 75 0.005486218 ubox
2 76 0.014354477 ubox
2 77 0.239221625 ubox
2 78 0.219928589 ubox
3 9 0.003681942 ubox
3 11 0.026944723 ubox
3 14 0.021967621 ubox
3 64 0.007096843 ubox
3 71 0.302973647 ubox
3 72 0.324179164 ubox
3 75 0.015424525 ubox
3 76 0.238514762 ubox
3 77 0.219242920 ubox
4 9 0.006164229 ubox
4 11 0.003602028 ubox
4 71 0.303399666 ubox
4 72 0.018923484 ubox
4 75 0.231261265 ubox
4 76 0.215465487 ubox
4 77 0.024349019 ubox
5 9 0.005228593 ubox
5 11 0.003727976 ubox
5 71 0.023615069 ubox
5 72 0.060923363 ubox
5 75 0.194926433 ubox
5 76 0.031092605 ubox
5 77 0.007909742 ubox
6 11 0.015328559 ubox
6 25 0.004334596 ubox
6 35 0.009881783 ubox
6 71 0.069997549 ubox
6 72 0.033285496 ubox
6 75 0.035533664 ubox
6 76 0.009377765 ubox
6 77 0.005265813 ubox
7 12 0.015261410 ubox
7 15 0.073709267 ubox
7 24 0.005840479 ubox
7 34 0.010517314 ubox
7 36 0.015433033 ubox
7 65 0.980158479 ubox
7 71 0.006208595 ubox
7 72 0.025695891 ubox
7 73 0.094985853 ubox
7 76 0.005123231 ubox
7 78 0.008029332 ubox
8 14 0.073163041 ubox
8 35 0.015145888 ubox
8 64 0.982005886 ubox
8 71 0.027539666 ubox
8 72 0.087021905 ubox
8 75 0.005326496 ubox
8 77 0.007615363 ubox
9 13 0.067724901 ubox
9 19 0.004520970 ubox
9 20 0.004456718 ubox
9 21 0.004534307 ubox
9 22 0.005458296 ubox
9 23 0.005398639 ubox
9 32 0.005286026 ubox
9 33 0.011817199 ubox
9 63 0.983320186 ubox
9 68 0.003412897 ubox
9 69 0.004496164 ubox
9 70 0.027261423 ubox
9 74 0.005158077 ubox
10 62 0.983278299 ubox
10 64 0.004535566 ubox
10 71 0.013625470 ubox
10 75 0.004038494 ubox
11 18 0.071901250 ubox
11 20 0.013944007 ubox
11 21 0.030273067 ubox
11 31 0.041606692 ubox
11 40 0.003316089 ubox
11 41 0.004895115 ubox
11 61 0.983142899 ubox
11 63 0.004717130 ubox
11 68 0.004454677 ubox
11 69 0.007683782 ubox
11 70 0.012943385 ubox
11 74 0.003188442 ubox
12 17 0.078007858 ubox
12 19 0.036591852 ubox
12 20 0.033633331 ubox
12 30 0.044995225 ubox
12 60 0.981969923 ubox
12 74 0.005589615 ubox
12 79 0.009337027 ubox
13 24 0.241047553 ubox
13 25 0.003946641 ubox
13 26 0.004634951 ubox
13 34 0.005715151 ubox
13 39 0.542568306 ubox
13 59 0.171021303 ubox
13 62 0.018427902 ubox
13 65 0.003251145 ubox
13 73 0.005370950 ubox
13 78 0.010167032 ubox
14 18 0.018176437 ubox
14 19 0.015268533 ubox
14 20 0.052607410 ubox
14 21 0.281164196 ubox
14 22 0.019908935 ubox
14 23 0.233656991 ubox
14 28 0.052879487 ubox
14 29 0.004845598 ubox
14 30 0.013155154 ubox
14 31 0.010587110 ubox
14 33 0.004922472 ubox
14 38 0.543017186 ubox
14 42 0.003381399 ubox
14 45 0.005240711 ubox
14 51 0.007845871 ubox
14 57 0.007771601 ubox
14 61 0.021293709 ubox
14 66 0.004771943 ubox
14 67 0.004029356 ubox
14 68 0.003569857 ubox
15 19 0.065693345 ubox
15 20 0.302642193 ubox
15 27 0.054468057 ubox
15 29 0.017710421 ubox
15 30 0.011285035 ubox
15 37 0.542210935 ubox
15 44 0.007097070 ubox
15 50 0.007912409 ubox
15 60 0.021910191 ubox
15 79 0.004183467 ubox
16 25 0.066406636 ubox
16 35 0.006343255 ubox
16 55 0.004131351 ubox
16 58 0.003575492 ubox
16 77 0.019314489 ubox
17 24 0.092280019 ubox
17 25 0.009992634 ubox
17 26 0.720195933 ubox
17 34 0.005039818 ubox
17 36 0.145413989 ubox
17 39 0.019951537 ubox
17 47 0.004121588 ubox
17 54 0.004279548 ubox
17 65 0.007240435 ubox
17 73 0.004198063 ubox
17 76 0.023348949 ubox
17 78 0.007493062 ubox
18 25 0.744609375 ubox
18 35 0.145485825 ubox
18 46 0.004368542 ubox
18 47 0.005980616 ubox
18 55 0.018445137 ubox
18 64 0.006750069 ubox
18 72 0.004091133 ubox
18 75 0.023809364 ubox
18 77 0.007330154 ubox
19 24 0.763561348 ubox
19 25 0.030199049 ubox
19 26 0.016039687 ubox
19 34 0.145392539 ubox
19 39 0.031339643 ubox
19 46 0.005924931 ubox
19 54 0.018593724 ubox
19 73 0.004450251 ubox
19 76 0.006320318 ubox
19 78 0.010808568 ubox
20 24 0.040211724 ubox
20 25 0.014315773 ubox
20 26 0.019437987 ubox
20 34 0.004055393 ubox
20 39 0.040464007 ubox
20 65 0.004970852 ubox
20 72 0.004322556 ubox
20 73 0.024834838 ubox
20 75 0.004386554 ubox
20 77 0.009262364 ubox
20 78 0.145097602 ubox
21 25 0.017326121 ubox
21 64 0.004673052 ubox
21 71 0.004033056 ubox
21 72 0.024502793 ubox
21 76 0.008398127 ubox
21 77 0.145307384 ubox
22 71 0.021295824 ubox
22 75 0.006793568 ubox
22 76 0.145248464 ubox
23 75 0.145322118 ubox
24 29 0.074715704 ubox
24 30 0.051022703 ubox
24 44 0.007810454 ubox
24 49 0.015263663 ubox
24 50 0.004648362 ubox
24 74 0.145191271 ubox
25 29 0.046115204 ubox
25 30 0.003720308 ubox
25 31 0.019021508 ubox
25 38 0.597165174 ubox
25 40 0.007559610 ubox
25 41 0.005387504 ubox
25 42 0.003900400 ubox
25 43 0.005567747 ubox
25 48 0.009420328 ubox
26 30 0.019226733 ubox
26 37 0.675301950 ubox
27 34 0.006557409 ubox
27 36 0.986068027 ubox
27 39 0.012900039 ubox
28 35 0.986543084 ubox
29 34 0.985904263 ubox
29 35 0.007715642 ubox
29 36 0.018201391 ubox
29 39 0.009504964 ubox
30 34 0.010815237 ubox
30 35 0.014305662 ubox
30 36 0.024035098 ubox
30 39 0.006093060 ubox
30 73 0.003656020 ubox
30 78 0.004448673 ubox
31 35 0.020945385 ubox
31 72 0.003663991 ubox
31 77 0.004530133 ubox
32 71 0.003471345 ubox
32 76 0.004666808 ubox
33 75 0.004672418 ubox
34 74 0.004570865 ubox
35 45 0.003552825 ubox
35 61 0.003567137 ubox
35 67 0.004397512 ubox
36 44 0.005161294 ubox
36 60 0.003834492 ubox
36 74 0.004138748 ubox
37 59 0.004146335 ubox
37 65 0.039028967 ubox
37 73 0.004673627 ubox
38 58 0.003707315 ubox
38 64 0.038322486 ubox
38 72 0.004524380 ubox
39 44 0.031655344 ubox
39 60 0.006318513 ubox
40 62 0.015114485 ubox
40 64 0.007589422 ubox
41 62 0.031054223 ubox
41 64 0.005194198 ubox
42 62 0.015134990 ubox
43 55 0.003328819 ubox
43 58 0.003450990 ubox
43 62 0.004789513 ubox
44 54 0.003446684 ubox
44 58 0.009479335 ubox
44 59 0.983438197 ubox
44 65 0.003201091 ubox
45 58 0.996520605 ubox
45 64 0.003174409 ubox
46 57 0.997790518 ubox
47 56 0.998889426 ubox
48 55 0.999286695 ubox
49 54 0.998706547 ubox
49 55 0.006309994 ubox
50 54 0.009459955 ubox
50 59 0.004283717 ubox
51 58 0.004067711 ubox
59 74 0.005606675 ubox
60 65 0.034809619 ubox
60 72 0.022708841 ubox
60 73 0.082772617 ubox
60 78 0.007427053 ubox
61 71 0.025737946 ubox
61 72 0.081471995 ubox
61 77 0.007301351 ubox
62 66 0.003172394 ubox
62 67 0.006263868 ubox
62 68 0.006111631 ubox
62 69 0.008850386 ubox
62 70 0.026469269 ubox
63 71 0.018630075 ubox
63 72 0.008072680 ubox
63 75 0.004548656 ubox
64 68 0.005779390 ubox
64 69 0.012527033 ubox
64 70 0.019148749 ubox
64 74 0.004200856 ubox
65 74 0.007563283 ubox
66 71 0.017385365 ubox
66 72 0.028542327 ubox
66 75 0.014366905 ubox
66 76 0.019551769 ubox
66 77 0.067729958 ubox
67 71 0.024633933 ubox
67 72 0.021678965 ubox
67 75 0.020820581 ubox
67 76 0.076249187 ubox
67 77 0.056186220 ubox
68 72 0.011360674 ubox
68 75 0.069700625 ubox
68 76 0.061876548 ubox
68 77 0.061634918 ubox
69 75 0.058151898 ubox
69 76 0.066211344 ubox
69 77 0.051810807 ubox
70 75 0.053645089 ubox
70 76 0.056517201 ubox
70 77 0.031131652 ubox
71 79 0.005675131 ubox
72 79 0.008551683 ubox
73 79 0.081158807 ubox
74 78 0.085267642 ubox
75 79 0.006003245 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
