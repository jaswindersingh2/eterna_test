%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (253)
} def

/sequence { (\
GGAAAAAAGUACAAGAUCAAAAGAUCAGUCAAGACAAACACACAAAAGAGUGAGUCAAGACAAGUACACGCUCUAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.006497497 ubox
1 12 0.030481271 ubox
1 39 0.011199283 ubox
1 41 0.008406025 ubox
1 43 0.005585612 ubox
1 67 0.009774903 ubox
1 69 0.015928086 ubox
1 71 0.026030691 ubox
1 72 0.055801594 ubox
1 73 0.067659807 ubox
1 74 0.509672602 ubox
1 76 0.012860410 ubox
1 77 0.007472536 ubox
1 78 0.173172470 ubox
2 10 0.003454116 ubox
2 12 0.009611552 ubox
2 30 0.004844840 ubox
2 39 0.005795546 ubox
2 67 0.007065368 ubox
2 69 0.015624263 ubox
2 71 0.068710837 ubox
2 72 0.056568192 ubox
2 73 0.539888440 ubox
2 74 0.024128547 ubox
2 76 0.009246035 ubox
2 77 0.170214773 ubox
2 78 0.251482280 ubox
3 10 0.008112371 ubox
3 29 0.004728023 ubox
3 72 0.525921068 ubox
3 74 0.018298656 ubox
3 76 0.162370621 ubox
3 77 0.250642086 ubox
4 10 0.006745991 ubox
4 72 0.056166566 ubox
4 74 0.030954481 ubox
4 76 0.232625295 ubox
4 77 0.012159048 ubox
5 10 0.007376303 ubox
5 72 0.042120546 ubox
5 74 0.052619509 ubox
5 76 0.014198709 ubox
5 77 0.012516595 ubox
6 10 0.004530584 ubox
6 72 0.036090980 ubox
6 74 0.111407089 ubox
6 76 0.014421830 ubox
6 77 0.008435184 ubox
7 72 0.027358607 ubox
7 74 0.018279139 ubox
7 76 0.009056718 ubox
7 77 0.009793547 ubox
8 65 0.003565755 ubox
8 72 0.191554392 ubox
8 74 0.053519928 ubox
8 76 0.010430021 ubox
8 77 0.026842697 ubox
9 30 0.025075195 ubox
9 35 0.018599707 ubox
9 39 0.005619370 ubox
9 41 0.005520994 ubox
9 43 0.005265177 ubox
9 67 0.942984370 ubox
9 69 0.050312705 ubox
9 71 0.193512451 ubox
9 73 0.052601198 ubox
9 76 0.031767362 ubox
9 78 0.008418522 ubox
10 14 0.004073883 ubox
10 27 0.003915734 ubox
10 31 0.005293354 ubox
10 34 0.018440591 ubox
10 38 0.005509508 ubox
10 40 0.005362047 ubox
10 42 0.005093835 ubox
10 63 0.003945339 ubox
10 66 0.945720143 ubox
10 68 0.044690847 ubox
10 70 0.184783550 ubox
10 75 0.032350204 ubox
11 29 0.035806315 ubox
11 65 0.948330719 ubox
11 72 0.006247918 ubox
11 74 0.029849468 ubox
12 28 0.037161934 ubox
12 33 0.004382042 ubox
12 64 0.947281387 ubox
12 70 0.035271895 ubox
12 79 0.007212862 ubox
13 29 0.003678769 ubox
13 65 0.005835243 ubox
13 72 0.005212261 ubox
13 77 0.004791857 ubox
14 29 0.003540711 ubox
14 65 0.006657171 ubox
14 74 0.009103981 ubox
14 76 0.004656058 ubox
15 26 0.998308032 ubox
15 30 0.004856786 ubox
15 61 0.004041472 ubox
15 73 0.009025559 ubox
16 25 0.999287829 ubox
16 29 0.004795603 ubox
16 72 0.008580616 ubox
17 24 0.999261554 ubox
17 28 0.004359159 ubox
17 60 0.004297763 ubox
18 23 0.997845206 ubox
18 59 0.004321758 ubox
18 70 0.005599073 ubox
24 65 0.007509534 ubox
25 53 0.004310047 ubox
25 64 0.007483197 ubox
26 52 0.004550321 ubox
27 51 0.004570770 ubox
27 65 0.004632446 ubox
28 35 0.027211623 ubox
28 39 0.026506399 ubox
28 41 0.011263314 ubox
28 43 0.009947149 ubox
28 61 0.991290190 ubox
29 34 0.025201888 ubox
29 38 0.026222423 ubox
29 40 0.010751830 ubox
29 42 0.009506568 ubox
29 49 0.004585892 ubox
29 60 0.992558838 ubox
30 48 0.004597260 ubox
30 59 0.992084588 ubox
33 39 0.009394906 ubox
33 41 0.006746010 ubox
33 43 0.004666696 ubox
33 56 0.994008293 ubox
33 78 0.003609714 ubox
34 55 0.994613265 ubox
34 77 0.003432301 ubox
35 52 0.004016314 ubox
35 54 0.993516288 ubox
36 51 0.005296925 ubox
36 55 0.004653577 ubox
37 51 0.009579291 ubox
38 51 0.333930820 ubox
38 55 0.021488574 ubox
39 48 0.012463034 ubox
39 50 0.334007240 ubox
39 52 0.919121655 ubox
39 54 0.027952021 ubox
40 51 0.919917923 ubox
41 48 0.251216195 ubox
41 50 0.919430028 ubox
41 52 0.168829349 ubox
41 79 0.005235335 ubox
42 51 0.169716541 ubox
43 48 0.380582640 ubox
43 50 0.169980417 ubox
43 52 0.005768832 ubox
43 79 0.011847455 ubox
44 51 0.005304138 ubox
44 77 0.027337566 ubox
45 76 0.029657519 ubox
45 77 0.013674236 ubox
46 74 0.004038648 ubox
46 76 0.014614358 ubox
46 77 0.003306513 ubox
47 74 0.092250091 ubox
48 73 0.095574136 ubox
48 78 0.013409281 ubox
49 72 0.095580280 ubox
49 77 0.013410802 ubox
50 71 0.095593355 ubox
50 76 0.013384125 ubox
51 70 0.095533371 ubox
51 75 0.013108645 ubox
52 69 0.094692967 ubox
52 73 0.013455410 ubox
53 65 0.003265790 ubox
53 72 0.013643346 ubox
54 61 0.007272791 ubox
54 65 0.003183455 ubox
54 67 0.090335877 ubox
54 71 0.013643349 ubox
55 60 0.006748604 ubox
55 66 0.088345110 ubox
55 70 0.012664153 ubox
56 64 0.076136819 ubox
56 70 0.003889915 ubox
57 65 0.011665004 ubox
58 65 0.013693587 ubox
58 72 0.003473484 ubox
58 74 0.011452314 ubox
59 65 0.004028039 ubox
59 67 0.004564684 ubox
59 71 0.003656956 ubox
59 73 0.011908180 ubox
59 78 0.007034691 ubox
60 65 0.004190498 ubox
60 72 0.011243174 ubox
60 77 0.006953399 ubox
61 70 0.009538549 ubox
62 72 0.006310885 ubox
62 74 0.014037495 ubox
62 76 0.005014098 ubox
62 77 0.005079639 ubox
63 72 0.140694641 ubox
63 74 0.066162539 ubox
63 76 0.004681743 ubox
63 77 0.022815818 ubox
64 69 0.035419157 ubox
64 71 0.150984138 ubox
64 73 0.068704036 ubox
64 76 0.027369722 ubox
64 78 0.006544178 ubox
65 70 0.144823243 ubox
65 75 0.027934272 ubox
66 72 0.006520061 ubox
66 74 0.027063823 ubox
67 79 0.003547512 ubox
68 72 0.009359191 ubox
68 74 0.012340593 ubox
68 76 0.007154015 ubox
68 77 0.011159037 ubox
69 79 0.093622354 ubox
70 74 0.009031715 ubox
70 76 0.008986613 ubox
70 77 0.012290924 ubox
70 78 0.095758763 ubox
71 79 0.021185432 ubox
72 79 0.007398837 ubox
73 79 0.025321879 ubox
74 79 0.007731146 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
showpage
end
%%EOF
