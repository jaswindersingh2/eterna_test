%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (191)
} def

/sequence { (\
GGAAACGGGUGUCCCAGCUCAGCGGCCGCUCGAGCCACGGACCACUGCUGACAGGGUCAGGGAGUCCCAACACGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.272192587 ubox
1 14 0.007650628 ubox
1 15 0.003840558 ubox
1 36 0.020863437 ubox
1 49 0.003552117 ubox
1 52 0.013815831 ubox
1 67 0.012837278 ubox
1 68 0.010293528 ubox
1 71 0.094533965 ubox
1 73 0.200314370 ubox
1 75 0.128896026 ubox
1 76 0.093552421 ubox
1 77 0.006831047 ubox
1 78 0.121320777 ubox
2 6 0.039128944 ubox
2 13 0.007710828 ubox
2 14 0.003765029 ubox
2 35 0.020790868 ubox
2 48 0.003909722 ubox
2 66 0.012933596 ubox
2 67 0.009741763 ubox
2 68 0.003327587 ubox
2 71 0.076060682 ubox
2 73 0.155630098 ubox
2 75 0.107910342 ubox
2 76 0.007069210 ubox
2 77 0.119174167 ubox
2 78 0.267690023 ubox
3 12 0.007542376 ubox
3 65 0.012271609 ubox
3 76 0.114318725 ubox
3 77 0.267494648 ubox
4 49 0.013116636 ubox
4 76 0.251396036 ubox
4 77 0.019908074 ubox
5 49 0.005179067 ubox
5 65 0.003821167 ubox
5 76 0.024988303 ubox
5 77 0.008211179 ubox
6 11 0.003550639 ubox
6 32 0.022754110 ubox
6 47 0.129952978 ubox
6 62 0.004464428 ubox
6 64 0.004284841 ubox
6 74 0.240047444 ubox
6 79 0.026779627 ubox
7 14 0.004885447 ubox
7 15 0.033993548 ubox
7 31 0.023585772 ubox
7 45 0.005801242 ubox
7 46 0.131326865 ubox
7 48 0.003722389 ubox
7 67 0.040553185 ubox
7 68 0.973629843 ubox
7 71 0.007722674 ubox
7 73 0.118510939 ubox
7 75 0.099016482 ubox
7 76 0.015305406 ubox
7 77 0.018220685 ubox
7 78 0.026656625 ubox
8 13 0.004973009 ubox
8 14 0.034317483 ubox
8 15 0.012165120 ubox
8 30 0.023592358 ubox
8 43 0.004990048 ubox
8 45 0.131106798 ubox
8 46 0.053194715 ubox
8 66 0.040852187 ubox
8 67 0.979901001 ubox
8 68 0.040305672 ubox
8 71 0.026345402 ubox
8 73 0.003240404 ubox
8 75 0.017094022 ubox
8 76 0.029314787 ubox
8 77 0.018833728 ubox
9 13 0.033766566 ubox
9 14 0.012096853 ubox
9 29 0.023611398 ubox
9 38 0.013469641 ubox
9 42 0.004781170 ubox
9 43 0.054010693 ubox
9 45 0.057550280 ubox
9 65 0.039178322 ubox
9 66 0.979505301 ubox
9 67 0.039649557 ubox
9 68 0.003168909 ubox
9 71 0.025085406 ubox
9 73 0.102687968 ubox
9 75 0.034993146 ubox
10 28 0.023596134 ubox
10 37 0.013502114 ubox
10 41 0.004043017 ubox
10 44 0.058654489 ubox
10 59 0.013873073 ubox
10 64 0.049356652 ubox
10 69 0.022895165 ubox
10 70 0.022067308 ubox
10 72 0.102819944 ubox
10 74 0.034972685 ubox
11 27 0.023312707 ubox
11 36 0.013512541 ubox
11 38 0.003384439 ubox
11 42 0.137899687 ubox
11 43 0.042597437 ubox
11 58 0.016445229 ubox
11 65 0.041386126 ubox
11 66 0.014944098 ubox
11 67 0.006517182 ubox
11 68 0.027721137 ubox
11 71 0.102751430 ubox
11 73 0.034846559 ubox
12 25 0.003472069 ubox
12 37 0.003287904 ubox
12 41 0.143885601 ubox
12 62 0.004816277 ubox
12 63 0.979574061 ubox
12 64 0.007303065 ubox
12 69 0.004084450 ubox
12 70 0.090196441 ubox
12 72 0.030507444 ubox
13 24 0.003464632 ubox
13 25 0.020958318 ubox
13 39 0.022134759 ubox
13 40 0.144202684 ubox
13 56 0.025122812 ubox
13 61 0.006506916 ubox
13 62 0.983609553 ubox
13 64 0.004863158 ubox
14 24 0.020858538 ubox
14 25 0.009748405 ubox
14 39 0.144324664 ubox
14 40 0.021513260 ubox
14 55 0.025256699 ubox
14 60 0.006811623 ubox
14 61 0.983601342 ubox
14 62 0.007443553 ubox
15 22 0.015932478 ubox
15 24 0.009921548 ubox
15 39 0.030736979 ubox
15 54 0.025211952 ubox
15 60 0.981832642 ubox
15 61 0.008293409 ubox
16 49 0.003436678 ubox
16 57 0.008051803 ubox
17 23 0.030666129 ubox
17 26 0.006465641 ubox
17 35 0.993136605 ubox
17 36 0.069742405 ubox
17 38 0.006482251 ubox
17 48 0.003778509 ubox
17 52 0.022470261 ubox
17 57 0.019473942 ubox
17 58 0.010863172 ubox
17 65 0.006072262 ubox
18 22 0.030493443 ubox
18 25 0.006486225 ubox
18 34 0.997935698 ubox
18 47 0.003410550 ubox
18 54 0.005368692 ubox
18 55 0.010224107 ubox
18 56 0.022216776 ubox
18 64 0.006238215 ubox
19 24 0.005886102 ubox
19 32 0.005680039 ubox
19 33 0.997783320 ubox
19 51 0.031492028 ubox
19 53 0.003303013 ubox
19 54 0.006392814 ubox
19 55 0.015584472 ubox
19 63 0.006231909 ubox
20 32 0.997509717 ubox
20 39 0.009679335 ubox
20 47 0.006183681 ubox
20 50 0.034811244 ubox
20 54 0.009159338 ubox
20 62 0.006202790 ubox
21 30 0.991048474 ubox
21 46 0.007212718 ubox
21 49 0.035633544 ubox
22 29 0.997228447 ubox
22 30 0.009788126 ubox
22 31 0.027180411 ubox
22 38 0.028754910 ubox
22 45 0.007340626 ubox
22 48 0.035661226 ubox
22 52 0.004504254 ubox
23 28 0.995823842 ubox
23 32 0.004062620 ubox
23 39 0.003549765 ubox
23 47 0.035655673 ubox
23 50 0.004795419 ubox
24 29 0.028508722 ubox
24 30 0.008962541 ubox
24 31 0.006987068 ubox
24 36 0.045077379 ubox
24 43 0.015993965 ubox
24 46 0.032587764 ubox
24 49 0.004798326 ubox
25 29 0.008941076 ubox
25 30 0.004923413 ubox
25 35 0.045124434 ubox
25 42 0.016137322 ubox
25 45 0.032481864 ubox
25 48 0.004802445 ubox
26 34 0.044752730 ubox
26 40 0.023238639 ubox
26 47 0.004789325 ubox
27 32 0.036279514 ubox
27 34 0.005743852 ubox
27 39 0.023312843 ubox
28 35 0.008282929 ubox
28 38 0.022178491 ubox
28 42 0.020816681 ubox
28 43 0.011860434 ubox
29 34 0.008730163 ubox
29 40 0.009026151 ubox
30 37 0.005887700 ubox
30 39 0.004809274 ubox
30 40 0.018523176 ubox
30 41 0.017667595 ubox
31 39 0.022054995 ubox
31 40 0.017792393 ubox
32 36 0.003346852 ubox
32 38 0.021924184 ubox
33 76 0.005438066 ubox
34 75 0.005824127 ubox
35 39 0.005511477 ubox
35 62 0.004914649 ubox
35 74 0.005807805 ubox
36 40 0.004940111 ubox
36 60 0.008918240 ubox
36 61 0.006263206 ubox
36 62 0.005232976 ubox
38 47 0.012380315 ubox
38 60 0.042422465 ubox
38 61 0.004210474 ubox
38 74 0.004187510 ubox
39 45 0.003693689 ubox
39 46 0.012519621 ubox
39 58 0.057563526 ubox
39 67 0.042433059 ubox
39 68 0.005054487 ubox
39 73 0.004242838 ubox
40 45 0.012445112 ubox
40 57 0.030270062 ubox
40 58 0.984264428 ubox
40 66 0.042627161 ubox
40 67 0.004272649 ubox
41 57 0.986954050 ubox
41 65 0.042686782 ubox
42 55 0.003735758 ubox
42 56 0.987724871 ubox
42 64 0.042455225 ubox
43 54 0.004167123 ubox
43 55 0.986855424 ubox
43 56 0.003539946 ubox
43 61 0.003379374 ubox
43 62 0.010755041 ubox
43 64 0.003207911 ubox
44 65 0.011272508 ubox
45 50 0.005304361 ubox
45 54 0.985598666 ubox
45 60 0.011464728 ubox
45 61 0.021831455 ubox
45 62 0.015557948 ubox
45 64 0.012122005 ubox
46 51 0.007740160 ubox
46 53 0.986504749 ubox
46 59 0.011706617 ubox
46 60 0.009633724 ubox
46 61 0.014111337 ubox
46 62 0.029515226 ubox
46 63 0.010736936 ubox
47 52 0.980668371 ubox
47 57 0.005050417 ubox
47 58 0.011561937 ubox
47 75 0.007236910 ubox
48 54 0.005275440 ubox
48 56 0.012532077 ubox
48 60 0.145841708 ubox
48 61 0.006718961 ubox
48 74 0.007308640 ubox
49 53 0.004793198 ubox
49 55 0.012418592 ubox
49 59 0.147941111 ubox
49 60 0.003357743 ubox
49 72 0.005918517 ubox
49 79 0.009967695 ubox
50 58 0.148364777 ubox
50 71 0.006027132 ubox
50 78 0.018909884 ubox
51 57 0.148172990 ubox
51 77 0.018750493 ubox
52 56 0.146706552 ubox
53 76 0.022187570 ubox
54 68 0.015188923 ubox
54 75 0.022924183 ubox
55 67 0.015217647 ubox
55 73 0.003660793 ubox
55 75 0.003216770 ubox
56 66 0.015206103 ubox
56 71 0.003956409 ubox
56 73 0.022938623 ubox
57 70 0.003925789 ubox
57 72 0.022192258 ubox
58 64 0.014099217 ubox
60 67 0.012191112 ubox
60 68 0.092405992 ubox
61 66 0.012356231 ubox
61 67 0.092828910 ubox
61 68 0.036645995 ubox
61 76 0.005212663 ubox
61 78 0.138284134 ubox
62 66 0.091334115 ubox
62 67 0.036579358 ubox
62 73 0.003258554 ubox
62 75 0.005736290 ubox
62 77 0.138845516 ubox
62 78 0.007477134 ubox
63 76 0.139100661 ubox
63 77 0.005859758 ubox
64 71 0.008946295 ubox
64 73 0.006986381 ubox
64 75 0.139225319 ubox
65 70 0.008332548 ubox
65 72 0.006769514 ubox
65 74 0.136551850 ubox
66 74 0.019634911 ubox
67 74 0.004734091 ubox
68 74 0.005350055 ubox
69 76 0.018253919 ubox
69 77 0.025365627 ubox
70 76 0.025886568 ubox
70 77 0.015254459 ubox
71 79 0.034445375 ubox
72 76 0.008254690 ubox
72 77 0.012724142 ubox
73 79 0.124215106 ubox
74 78 0.122498011 ubox
75 79 0.013494206 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
