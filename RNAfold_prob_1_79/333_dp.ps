%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (333)
} def

/sequence { (\
GGAAAGCAGCUAGGAAAAACUAGGACAAAGUCACUGCAGGCACUGGAAAACAGGUAGGAAACUACGCCACUCACGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.014708693 ubox
1 32 0.030835638 ubox
1 34 0.018417982 ubox
1 35 0.004783635 ubox
1 37 0.006637519 ubox
1 41 0.022032188 ubox
1 43 0.004785189 ubox
1 67 0.004521226 ubox
1 68 0.118947506 ubox
1 70 0.039938545 ubox
1 71 0.039872460 ubox
1 72 0.103190113 ubox
1 74 0.137060392 ubox
1 76 0.004595470 ubox
1 77 0.007696658 ubox
1 78 0.232975917 ubox
2 7 0.006662885 ubox
2 31 0.029961718 ubox
2 32 0.037480172 ubox
2 34 0.004997512 ubox
2 37 0.004117116 ubox
2 41 0.027178270 ubox
2 67 0.118561545 ubox
2 68 0.009318465 ubox
2 70 0.052727904 ubox
2 71 0.083238089 ubox
2 72 0.184358728 ubox
2 74 0.037618439 ubox
2 76 0.009101437 ubox
2 77 0.224797667 ubox
2 78 0.338214091 ubox
3 31 0.037292156 ubox
3 35 0.004631283 ubox
3 71 0.175794982 ubox
3 76 0.205503604 ubox
3 77 0.333767279 ubox
4 31 0.003714206 ubox
4 71 0.033677207 ubox
4 76 0.283848809 ubox
4 77 0.021857550 ubox
5 35 0.006211803 ubox
5 71 0.021418512 ubox
5 76 0.023856047 ubox
5 77 0.028384246 ubox
6 26 0.013676635 ubox
6 31 0.006049156 ubox
6 34 0.006385945 ubox
6 37 0.990079789 ubox
6 41 0.009916604 ubox
6 67 0.036328012 ubox
6 68 0.004420609 ubox
6 70 0.017507439 ubox
6 72 0.014850290 ubox
6 74 0.037126592 ubox
6 76 0.036308552 ubox
6 78 0.004606882 ubox
7 24 0.007255454 ubox
7 30 0.006551728 ubox
7 36 0.991201376 ubox
7 40 0.009893897 ubox
7 66 0.036583326 ubox
7 75 0.037601752 ubox
8 35 0.989987736 ubox
8 71 0.041463802 ubox
8 77 0.004822454 ubox
9 26 0.009990515 ubox
9 31 0.005560133 ubox
9 32 0.004976012 ubox
9 34 0.984466246 ubox
9 37 0.009736250 ubox
9 41 0.003578227 ubox
9 67 0.006756536 ubox
9 70 0.042485607 ubox
9 71 0.004700095 ubox
9 72 0.006998000 ubox
9 74 0.009779133 ubox
9 76 0.005246719 ubox
10 23 0.995253294 ubox
10 24 0.021344918 ubox
10 30 0.009928663 ubox
10 36 0.009156744 ubox
10 40 0.003545494 ubox
10 66 0.006095607 ubox
10 75 0.005049879 ubox
11 22 0.998847953 ubox
11 23 0.014656373 ubox
11 29 0.008874577 ubox
11 33 0.006640251 ubox
11 39 0.003299398 ubox
12 21 0.999240587 ubox
12 31 0.004274484 ubox
12 35 0.006089551 ubox
13 20 0.998964936 ubox
13 21 0.013861615 ubox
13 26 0.003269976 ubox
13 32 0.007151319 ubox
13 34 0.006226337 ubox
14 20 0.018251847 ubox
14 26 0.005048825 ubox
14 31 0.005296522 ubox
14 32 0.006241815 ubox
15 31 0.005689814 ubox
19 31 0.007117598 ubox
20 30 0.007964694 ubox
21 29 0.007795827 ubox
21 36 0.009929016 ubox
22 35 0.012646735 ubox
23 32 0.013041263 ubox
23 34 0.014676456 ubox
23 78 0.008247459 ubox
24 31 0.015079609 ubox
24 32 0.948560102 ubox
24 37 0.008567658 ubox
24 72 0.003390702 ubox
24 77 0.012245750 ubox
24 78 0.007306744 ubox
25 31 0.948686207 ubox
25 76 0.013045693 ubox
25 77 0.006386434 ubox
26 30 0.939466100 ubox
26 36 0.012286290 ubox
26 45 0.005162287 ubox
26 75 0.013443111 ubox
27 31 0.005338514 ubox
27 35 0.011756501 ubox
27 44 0.005114398 ubox
29 35 0.007591365 ubox
29 71 0.011007156 ubox
30 34 0.007934652 ubox
30 37 0.017204481 ubox
30 41 0.053914707 ubox
30 70 0.011569735 ubox
30 74 0.005628565 ubox
30 78 0.005940652 ubox
31 36 0.016021703 ubox
31 40 0.053931177 ubox
31 69 0.011456879 ubox
31 73 0.005391813 ubox
32 39 0.053751939 ubox
33 76 0.024675698 ubox
34 39 0.004833408 ubox
34 40 0.006209673 ubox
34 53 0.006694896 ubox
34 57 0.003396226 ubox
34 75 0.026762249 ubox
35 39 0.005634257 ubox
35 42 0.008506353 ubox
35 47 0.005802780 ubox
35 52 0.006703372 ubox
35 56 0.003412479 ubox
35 73 0.033617848 ubox
35 75 0.004221256 ubox
36 41 0.009540682 ubox
36 51 0.006692472 ubox
36 55 0.003365244 ubox
36 67 0.004613837 ubox
36 70 0.012024744 ubox
36 71 0.004821847 ubox
36 72 0.035495149 ubox
36 74 0.005970232 ubox
37 45 0.008850960 ubox
37 54 0.003354998 ubox
37 66 0.004704174 ubox
38 44 0.009172822 ubox
38 71 0.026656925 ubox
38 76 0.005377444 ubox
38 77 0.004597344 ubox
39 43 0.009036281 ubox
39 67 0.003387631 ubox
39 68 0.982873650 ubox
39 70 0.016524133 ubox
39 71 0.005954778 ubox
39 72 0.007738028 ubox
39 74 0.005297292 ubox
39 77 0.015842132 ubox
39 78 0.013915546 ubox
40 55 0.020153689 ubox
40 67 0.984010508 ubox
40 68 0.005960498 ubox
40 70 0.006491542 ubox
40 71 0.005187766 ubox
40 74 0.004473072 ubox
40 76 0.019612568 ubox
40 77 0.012367748 ubox
40 78 0.010525816 ubox
41 46 0.003836607 ubox
41 54 0.020910401 ubox
41 66 0.983004479 ubox
41 75 0.020343415 ubox
42 55 0.006478608 ubox
42 76 0.016469647 ubox
43 53 0.995549670 ubox
43 54 0.006465056 ubox
43 75 0.016863666 ubox
44 49 0.006591492 ubox
44 50 0.004860429 ubox
44 52 0.998073033 ubox
44 53 0.007340062 ubox
44 64 0.004461348 ubox
44 69 0.005888372 ubox
44 73 0.011520415 ubox
44 75 0.008547997 ubox
44 79 0.003405034 ubox
45 51 0.998373139 ubox
45 63 0.004711692 ubox
45 68 0.006382104 ubox
45 72 0.011671182 ubox
45 74 0.013124315 ubox
45 78 0.006199354 ubox
46 51 0.019504055 ubox
46 62 0.004715523 ubox
46 67 0.006324792 ubox
46 70 0.003344241 ubox
46 71 0.010284015 ubox
46 72 0.016365111 ubox
46 77 0.006160145 ubox
46 78 0.009321856 ubox
47 71 0.016053643 ubox
47 76 0.006063386 ubox
47 77 0.009302278 ubox
48 71 0.004525554 ubox
48 76 0.009011018 ubox
51 57 0.003921626 ubox
51 66 0.003409918 ubox
52 71 0.004567995 ubox
53 65 0.004172253 ubox
53 67 0.008713757 ubox
53 68 0.007025696 ubox
53 70 0.004681209 ubox
53 71 0.008616149 ubox
54 62 0.007712528 ubox
54 65 0.998036215 ubox
54 67 0.007106237 ubox
54 70 0.011232426 ubox
55 61 0.007557374 ubox
55 64 0.999040471 ubox
55 66 0.006260249 ubox
55 69 0.011183323 ubox
56 63 0.999183679 ubox
57 62 0.998592638 ubox
57 63 0.007156520 ubox
57 65 0.007485844 ubox
57 68 0.019378451 ubox
58 62 0.010061324 ubox
58 65 0.004534376 ubox
58 67 0.019384858 ubox
58 78 0.004638292 ubox
59 77 0.004435720 ubox
64 76 0.007869252 ubox
65 75 0.009420775 ubox
66 70 0.007381224 ubox
66 72 0.008547873 ubox
66 74 0.014129796 ubox
66 76 0.016093940 ubox
66 78 0.005555761 ubox
67 75 0.017605213 ubox
68 75 0.016456885 ubox
69 76 0.201961486 ubox
69 77 0.012151296 ubox
70 75 0.223041277 ubox
70 79 0.045960980 ubox
71 75 0.012730236 ubox
71 79 0.005264802 ubox
72 79 0.039242633 ubox
73 77 0.008378429 ubox
74 79 0.047059590 ubox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
showpage
end
%%EOF
