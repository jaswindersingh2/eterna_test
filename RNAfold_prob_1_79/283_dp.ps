%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (283)
} def

/sequence { (\
GGAAAAAAGUACAAGUUCGAAAGAACAGCGGAGUGAAAGACGCGAAAGGGUCGCACGACGCAAGUACAGUUACAGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.006345315 ubox
1 12 0.029516089 ubox
1 18 0.006272816 ubox
1 67 0.010240862 ubox
1 71 0.010721333 ubox
1 73 0.158917832 ubox
1 76 0.016481854 ubox
1 77 0.014822920 ubox
1 78 0.314630683 ubox
2 10 0.003346406 ubox
2 12 0.009238571 ubox
2 17 0.006146255 ubox
2 18 0.009740670 ubox
2 67 0.005657451 ubox
2 70 0.011916817 ubox
2 71 0.053698788 ubox
2 73 0.093505107 ubox
2 76 0.022233827 ubox
2 77 0.313487424 ubox
2 78 0.356136031 ubox
3 10 0.007686762 ubox
3 16 0.005803874 ubox
3 17 0.009664219 ubox
3 70 0.055059348 ubox
3 71 0.096442872 ubox
3 76 0.307757149 ubox
3 77 0.355765104 ubox
4 10 0.006139152 ubox
4 16 0.008693036 ubox
4 70 0.135737138 ubox
4 71 0.086150150 ubox
4 76 0.344821765 ubox
4 77 0.016591672 ubox
5 10 0.006745525 ubox
5 70 0.083131827 ubox
5 71 0.329334030 ubox
5 76 0.019439985 ubox
5 77 0.019945785 ubox
6 10 0.004122005 ubox
6 70 0.348542744 ubox
6 71 0.112670035 ubox
6 76 0.023701264 ubox
6 77 0.008576139 ubox
7 70 0.115475040 ubox
7 71 0.154248453 ubox
7 76 0.009059498 ubox
7 77 0.013220376 ubox
8 65 0.003523914 ubox
8 70 0.141141750 ubox
8 71 0.064499918 ubox
8 76 0.014390996 ubox
8 77 0.005769968 ubox
9 18 0.003765150 ubox
9 67 0.959249891 ubox
9 70 0.015436396 ubox
9 71 0.012529463 ubox
9 73 0.124638810 ubox
9 76 0.003833973 ubox
9 77 0.004488190 ubox
9 78 0.033662270 ubox
10 14 0.003695079 ubox
10 63 0.003930551 ubox
10 66 0.961072680 ubox
10 68 0.017637992 ubox
10 69 0.006007682 ubox
10 72 0.123708923 ubox
10 74 0.009043440 ubox
10 75 0.003558267 ubox
11 65 0.961184524 ubox
11 70 0.089099005 ubox
11 71 0.101825918 ubox
11 76 0.041302570 ubox
12 64 0.960072849 ubox
12 69 0.109461312 ubox
12 75 0.044438791 ubox
12 79 0.007177589 ubox
13 65 0.003450359 ubox
13 70 0.008450640 ubox
13 71 0.004813496 ubox
13 77 0.004732425 ubox
14 65 0.004683536 ubox
14 70 0.006082663 ubox
14 76 0.004614684 ubox
15 26 0.997293356 ubox
15 67 0.004078421 ubox
16 24 0.003196875 ubox
16 25 0.998258475 ubox
16 66 0.003685587 ubox
17 24 0.998946977 ubox
18 23 0.998902911 ubox
18 79 0.006443930 ubox
19 26 0.005203525 ubox
19 78 0.007143935 ubox
20 77 0.007076025 ubox
21 76 0.006476559 ubox
23 67 0.003661274 ubox
23 78 0.027628976 ubox
24 71 0.004310265 ubox
24 77 0.027661531 ubox
25 65 0.006685997 ubox
25 70 0.004376588 ubox
25 76 0.027662286 ubox
26 64 0.007007536 ubox
26 69 0.004367979 ubox
26 75 0.027638863 ubox
27 65 0.004167928 ubox
28 43 0.006445340 ubox
28 61 0.998873225 ubox
29 42 0.006453351 ubox
29 60 0.999905612 ubox
30 41 0.006434514 ubox
30 59 0.999827310 ubox
30 78 0.003331220 ubox
31 59 0.004534829 ubox
31 77 0.003329898 ubox
32 76 0.003319749 ubox
33 54 0.003255647 ubox
33 56 0.999837177 ubox
34 53 0.003314552 ubox
34 55 0.999357315 ubox
34 57 0.006116640 ubox
34 74 0.003291299 ubox
35 54 0.993352011 ubox
35 56 0.007116958 ubox
35 73 0.003285991 ubox
38 51 0.031361818 ubox
39 51 0.003784978 ubox
39 52 0.996266309 ubox
40 51 0.998867198 ubox
41 48 0.034001841 ubox
41 49 0.013283876 ubox
41 50 0.998855980 ubox
41 53 0.006634853 ubox
42 51 0.006554597 ubox
42 52 0.006493977 ubox
42 54 0.011003784 ubox
43 48 0.974435581 ubox
43 49 0.109180004 ubox
43 50 0.009597432 ubox
43 53 0.012353065 ubox
44 52 0.012358104 ubox
45 51 0.011836558 ubox
48 61 0.006900180 ubox
50 59 0.007102503 ubox
51 58 0.007103384 ubox
52 57 0.007092339 ubox
62 71 0.018144477 ubox
62 76 0.003672286 ubox
62 77 0.011249724 ubox
63 70 0.020064195 ubox
63 71 0.006948708 ubox
63 76 0.012227609 ubox
63 77 0.003214143 ubox
64 70 0.006818674 ubox
64 71 0.009150449 ubox
64 73 0.163396129 ubox
64 77 0.003949135 ubox
64 78 0.028686716 ubox
65 69 0.003242347 ubox
65 72 0.162436701 ubox
65 74 0.010588170 ubox
66 70 0.005189093 ubox
66 71 0.148464502 ubox
66 76 0.036060625 ubox
67 75 0.039551386 ubox
67 79 0.005217428 ubox
68 76 0.021001257 ubox
68 77 0.025037166 ubox
69 73 0.011298190 ubox
69 76 0.024173676 ubox
69 77 0.016413594 ubox
69 78 0.103683174 ubox
70 74 0.016143097 ubox
70 75 0.014389784 ubox
70 79 0.007905430 ubox
71 75 0.009191331 ubox
71 79 0.006153228 ubox
72 76 0.007977672 ubox
72 77 0.010882705 ubox
73 79 0.041596774 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
