%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (52)
} def

/sequence { (\
GGAAAAACCGAGCUUUGAAAACAAAGGGAACCUGCGAAAACGCAACUUCAAAAGAAGGGAACCCUCGGACUGGAGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.160011523 ubox
1 9 0.434602406 ubox
1 32 0.020122556 ubox
1 63 0.003587114 ubox
1 64 0.005837566 ubox
1 71 0.003635921 ubox
1 78 0.028485568 ubox
2 8 0.435982149 ubox
2 9 0.048490276 ubox
2 31 0.020124170 ubox
2 62 0.003591832 ubox
2 63 0.005833321 ubox
2 70 0.003839931 ubox
2 77 0.028217076 ubox
2 78 0.030218539 ubox
3 76 0.027584473 ubox
3 77 0.029899773 ubox
4 76 0.027519118 ubox
5 71 0.008627491 ubox
5 76 0.003822757 ubox
6 71 0.007740318 ubox
6 77 0.018431682 ubox
7 71 0.011353907 ubox
7 76 0.021499969 ubox
8 27 0.009660999 ubox
8 28 0.031919200 ubox
8 58 0.013018489 ubox
8 59 0.006048777 ubox
8 68 0.061376732 ubox
8 73 0.016665221 ubox
8 75 0.022053763 ubox
8 79 0.044373779 ubox
9 17 0.005089274 ubox
9 26 0.009045179 ubox
9 27 0.032025514 ubox
9 28 0.005555765 ubox
9 57 0.012804209 ubox
9 58 0.007111470 ubox
9 67 0.061701109 ubox
9 72 0.016721476 ubox
9 73 0.024628931 ubox
9 79 0.835961457 ubox
10 16 0.004977080 ubox
10 31 0.009410034 ubox
10 32 0.005750030 ubox
10 66 0.061930727 ubox
10 71 0.010219585 ubox
10 78 0.993962690 ubox
11 15 0.004254396 ubox
11 33 0.003576629 ubox
11 65 0.061485957 ubox
11 71 0.027868331 ubox
11 77 0.993767539 ubox
12 32 0.003959912 ubox
12 64 0.059663059 ubox
12 70 0.028876068 ubox
12 76 0.993891027 ubox
13 26 0.092243392 ubox
13 27 0.012880292 ubox
13 28 0.012409729 ubox
13 54 0.005314735 ubox
13 68 0.007520505 ubox
13 75 0.994330727 ubox
14 25 0.094147742 ubox
14 26 0.012413057 ubox
14 27 0.012382534 ubox
14 52 0.006661270 ubox
14 53 0.004676859 ubox
14 67 0.006912526 ubox
14 69 0.029256125 ubox
14 73 0.012008245 ubox
14 74 0.988571004 ubox
14 75 0.003260100 ubox
15 24 0.098034479 ubox
15 25 0.012256079 ubox
15 26 0.012221985 ubox
15 51 0.007601514 ubox
15 52 0.003871741 ubox
15 68 0.031613204 ubox
15 69 0.004379984 ubox
15 72 0.023711961 ubox
15 73 0.975293915 ubox
15 74 0.095475544 ubox
16 21 0.008329565 ubox
16 23 0.101992823 ubox
16 24 0.012951122 ubox
16 25 0.012474812 ubox
16 50 0.008153967 ubox
16 67 0.038696972 ubox
16 68 0.005344399 ubox
16 69 0.009566456 ubox
16 72 0.886292006 ubox
16 73 0.134442155 ubox
16 74 0.009147998 ubox
17 22 0.103325836 ubox
17 49 0.008574766 ubox
17 66 0.042237989 ubox
17 70 0.156382391 ubox
17 71 0.609128046 ubox
18 48 0.008479245 ubox
18 65 0.033159787 ubox
18 71 0.195541162 ubox
19 47 0.007610385 ubox
19 71 0.178961188 ubox
20 71 0.051694152 ubox
21 65 0.004163652 ubox
21 71 0.027638308 ubox
22 27 0.004165856 ubox
22 67 0.391956349 ubox
22 68 0.791752413 ubox
22 72 0.016116954 ubox
23 65 0.021182039 ubox
23 71 0.015831458 ubox
24 65 0.082933404 ubox
24 71 0.004852770 ubox
25 33 0.017726189 ubox
25 65 0.973781287 ubox
26 31 0.005528566 ubox
26 32 0.021731511 ubox
26 63 0.024181859 ubox
26 64 0.994481236 ubox
26 65 0.017337841 ubox
26 66 0.006455647 ubox
27 31 0.021640279 ubox
27 32 0.009859446 ubox
27 33 0.004215363 ubox
27 49 0.005662667 ubox
27 62 0.024658890 ubox
27 63 0.995148663 ubox
27 64 0.018729171 ubox
27 65 0.005368320 ubox
28 32 0.005518833 ubox
28 48 0.005507971 ubox
28 49 0.028443355 ubox
28 62 0.993897144 ubox
28 63 0.018737699 ubox
28 64 0.005341698 ubox
28 78 0.009665922 ubox
29 47 0.005234684 ubox
29 48 0.028731189 ubox
29 77 0.009584492 ubox
30 47 0.028147918 ubox
30 76 0.008895143 ubox
31 57 0.003464991 ubox
31 58 0.162538552 ubox
31 59 0.950690898 ubox
31 75 0.008520931 ubox
32 57 0.146626003 ubox
32 58 0.949437591 ubox
32 59 0.041332635 ubox
32 73 0.003468126 ubox
33 42 0.004287410 ubox
33 44 0.915673914 ubox
33 45 0.033045524 ubox
33 55 0.004221592 ubox
33 56 0.098207994 ubox
33 57 0.093362305 ubox
33 58 0.031850859 ubox
34 41 0.005918325 ubox
34 43 0.999039755 ubox
35 42 0.999150780 ubox
35 54 0.022568133 ubox
36 41 0.973287998 ubox
36 43 0.004927330 ubox
36 49 0.020257134 ubox
37 48 0.020242252 ubox
38 47 0.019797772 ubox
39 48 0.003375063 ubox
40 47 0.003219881 ubox
41 79 0.005511862 ubox
42 49 0.003562507 ubox
42 78 0.005791632 ubox
44 77 0.017065583 ubox
45 76 0.030572747 ubox
46 54 0.060863100 ubox
46 57 0.978099864 ubox
46 58 0.019638336 ubox
46 59 0.008225981 ubox
46 75 0.032507143 ubox
47 52 0.004378325 ubox
47 53 0.060486342 ubox
47 54 0.008143865 ubox
47 55 0.012115812 ubox
47 56 0.985457295 ubox
47 57 0.016066169 ubox
47 58 0.007784303 ubox
47 59 0.004591512 ubox
47 60 0.012080557 ubox
47 61 0.006881633 ubox
47 74 0.032629690 ubox
48 52 0.050433253 ubox
48 53 0.008012641 ubox
48 54 0.012036729 ubox
48 55 0.988741319 ubox
48 56 0.012826991 ubox
48 57 0.006734000 ubox
48 58 0.005761314 ubox
48 59 0.012786456 ubox
48 60 0.008067340 ubox
48 73 0.032642222 ubox
49 54 0.987808929 ubox
49 57 0.010072272 ubox
49 58 0.013161613 ubox
49 59 0.008146515 ubox
49 72 0.032696436 ubox
50 71 0.031610337 ubox
53 71 0.003414657 ubox
54 66 0.028746096 ubox
54 70 0.003835399 ubox
55 65 0.021508146 ubox
56 65 0.027141545 ubox
57 62 0.004420977 ubox
57 63 0.013348580 ubox
57 64 0.033872013 ubox
57 65 0.005494003 ubox
57 66 0.009013277 ubox
58 62 0.013565304 ubox
58 63 0.034745192 ubox
58 64 0.012712564 ubox
58 65 0.010047870 ubox
58 66 0.004226310 ubox
58 71 0.005162581 ubox
58 78 0.005926411 ubox
59 63 0.012847305 ubox
59 64 0.010376561 ubox
59 65 0.003450267 ubox
59 66 0.008255406 ubox
59 70 0.005549867 ubox
59 77 0.005233877 ubox
59 78 0.062661625 ubox
60 65 0.007739249 ubox
60 76 0.004857699 ubox
60 77 0.062810755 ubox
61 76 0.062776227 ubox
62 67 0.004454085 ubox
62 68 0.008586758 ubox
62 73 0.003687839 ubox
62 75 0.062538158 ubox
63 67 0.008559975 ubox
63 68 0.008285641 ubox
63 72 0.003742772 ubox
63 73 0.062273511 ubox
64 72 0.062283749 ubox
64 73 0.009377602 ubox
64 75 0.013743573 ubox
65 72 0.008255711 ubox
65 73 0.005123243 ubox
65 74 0.018597668 ubox
66 72 0.020303696 ubox
66 73 0.025716417 ubox
66 79 0.031499515 ubox
67 71 0.012794816 ubox
67 78 0.035103303 ubox
68 77 0.035187739 ubox
69 76 0.036153905 ubox
70 75 0.036147339 ubox
71 79 0.004715168 ubox
72 78 0.008626548 ubox
73 77 0.005609061 ubox
73 78 0.006428915 ubox
9 79 0.9500000 lbox
10 78 0.9500000 lbox
11 77 0.9500000 lbox
12 76 0.9500000 lbox
13 75 0.9500000 lbox
14 74 0.9500000 lbox
15 73 0.9500000 lbox
16 72 0.9500000 lbox
17 71 0.9500000 lbox
22 68 0.9500000 lbox
25 65 0.9500000 lbox
26 64 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
