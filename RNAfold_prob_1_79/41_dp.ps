%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (41)
} def

/sequence { (\
GGAAAAAGGAGCGCCACUAACGUGGCCCGGGCGGUGAUCUCACCAACUCUAACGAGUGCAAGGGCUCCUAUUGCUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 72 0.010016526 ubox
1 74 0.309422720 ubox
1 75 0.354100055 ubox
1 76 0.031761262 ubox
1 77 0.041252181 ubox
1 78 0.542853940 ubox
2 71 0.009705716 ubox
2 72 0.057576982 ubox
2 74 0.407404616 ubox
2 75 0.036223840 ubox
2 76 0.063662791 ubox
2 77 0.541466838 ubox
2 78 0.394552306 ubox
3 69 0.003204474 ubox
3 71 0.060034109 ubox
3 72 0.292466776 ubox
3 75 0.066737220 ubox
3 76 0.537184526 ubox
3 77 0.393622400 ubox
4 69 0.004700519 ubox
4 71 0.273159894 ubox
4 72 0.389176506 ubox
4 75 0.473441646 ubox
4 76 0.378776331 ubox
4 77 0.037389767 ubox
5 69 0.010890962 ubox
5 71 0.487507657 ubox
5 72 0.302427875 ubox
5 75 0.331590663 ubox
5 76 0.047743256 ubox
5 77 0.011215748 ubox
6 69 0.065031455 ubox
6 71 0.334207226 ubox
6 72 0.195854417 ubox
6 75 0.055208981 ubox
6 76 0.013474929 ubox
6 77 0.004308178 ubox
7 69 0.963619367 ubox
7 71 0.095987021 ubox
7 72 0.071441693 ubox
7 75 0.008321983 ubox
8 28 0.003625067 ubox
8 68 0.999726347 ubox
8 69 0.006058769 ubox
8 71 0.008085556 ubox
8 72 0.005363887 ubox
8 74 0.004407769 ubox
8 77 0.005687329 ubox
9 27 0.003619294 ubox
9 67 0.999922332 ubox
9 68 0.004550096 ubox
9 76 0.007163387 ubox
10 66 0.999786950 ubox
10 75 0.007564704 ubox
11 65 0.999896730 ubox
11 74 0.007782232 ubox
12 63 0.005683042 ubox
12 64 0.998597115 ubox
12 73 0.007778699 ubox
13 26 0.997398300 ubox
13 27 0.005705880 ubox
13 72 0.004630705 ubox
14 25 0.999837475 ubox
14 62 0.012064923 ubox
14 63 0.006821785 ubox
15 24 0.999895746 ubox
15 58 0.010171897 ubox
15 62 0.006729448 ubox
16 23 0.999060607 ubox
16 57 0.010323339 ubox
17 22 0.996896547 ubox
17 56 0.010326855 ubox
18 22 0.006048440 ubox
18 55 0.009669434 ubox
20 57 0.006063752 ubox
21 54 0.009525569 ubox
21 56 0.006105604 ubox
22 53 0.009662304 ubox
23 51 0.005379551 ubox
23 52 0.008744943 ubox
23 54 0.005955723 ubox
24 50 0.006737100 ubox
24 53 0.006026770 ubox
24 66 0.003534477 ubox
25 32 0.006916252 ubox
25 49 0.006877307 ubox
25 65 0.007927648 ubox
26 31 0.006935659 ubox
26 63 0.007055725 ubox
26 64 0.029479428 ubox
27 31 0.004353191 ubox
27 34 0.004578535 ubox
27 62 0.010048412 ubox
27 63 0.991977850 ubox
27 64 0.004248718 ubox
28 33 0.004745066 ubox
28 62 0.994222521 ubox
28 63 0.013378305 ubox
29 44 0.011581263 ubox
29 48 0.013432253 ubox
29 49 0.013963462 ubox
29 50 0.003441042 ubox
29 59 0.005842912 ubox
30 43 0.011582304 ubox
30 44 0.006630228 ubox
30 47 0.014528075 ubox
30 48 0.013800625 ubox
30 49 0.003658810 ubox
30 59 0.017645435 ubox
31 41 0.003204772 ubox
31 43 0.006628398 ubox
31 47 0.013834099 ubox
31 48 0.003367310 ubox
31 57 0.004733555 ubox
31 59 0.994248270 ubox
32 56 0.004580183 ubox
32 58 0.993393173 ubox
33 39 0.003686426 ubox
33 40 0.011407705 ubox
33 41 0.007218922 ubox
33 43 0.003243476 ubox
33 44 0.998653698 ubox
33 57 0.015509132 ubox
34 39 0.012056496 ubox
34 40 0.005462412 ubox
34 41 0.003332676 ubox
34 43 0.999786116 ubox
34 44 0.003364393 ubox
35 42 0.999320962 ubox
35 45 0.003399779 ubox
35 55 0.004861142 ubox
36 40 0.004395699 ubox
36 41 0.996269420 ubox
36 44 0.003778222 ubox
39 56 0.004329909 ubox
40 55 0.004333005 ubox
41 54 0.004333483 ubox
45 57 0.034865749 ubox
46 57 0.968051289 ubox
47 54 0.007518765 ubox
47 56 0.998945962 ubox
48 55 0.998988504 ubox
49 54 0.997166015 ubox
49 56 0.013151219 ubox
49 62 0.004565538 ubox
50 54 0.004872702 ubox
50 55 0.012705163 ubox
50 61 0.004499553 ubox
53 58 0.004047549 ubox
53 62 0.007035957 ubox
53 63 0.003670836 ubox
53 79 0.004638092 ubox
54 78 0.004873593 ubox
55 77 0.004862694 ubox
56 76 0.004047554 ubox
58 74 0.006192345 ubox
59 63 0.007784682 ubox
59 73 0.006198352 ubox
60 72 0.006053945 ubox
61 69 0.003872445 ubox
61 71 0.004712493 ubox
62 68 0.004518173 ubox
63 67 0.004448811 ubox
70 75 0.006908085 ubox
70 76 0.012017187 ubox
70 77 0.015016363 ubox
71 79 0.003389362 ubox
72 79 0.018803564 ubox
73 77 0.004459249 ubox
73 78 0.033547840 ubox
74 79 0.020499760 ubox
75 79 0.003873552 ubox
7 69 0.9500000 lbox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
