%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (275)
} def

/sequence { (\
GGAAAAAAGAUCACGAUGGAAACAUCAGACUGGACGAGGAGGCGAAAGGCUCAGUCUGGUCACGAUCAUCUGAUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.005901419 ubox
1 14 0.009660575 ubox
1 71 0.004323679 ubox
1 75 0.003913738 ubox
1 76 0.009233926 ubox
1 77 0.003542081 ubox
1 78 0.131060844 ubox
2 11 0.005231389 ubox
2 12 0.011861027 ubox
2 70 0.004584293 ubox
2 74 0.003569341 ubox
2 75 0.010616248 ubox
2 77 0.106346189 ubox
2 78 0.268349545 ubox
3 11 0.011439284 ubox
3 69 0.004434196 ubox
3 74 0.010388434 ubox
3 76 0.067952087 ubox
3 77 0.249990307 ubox
4 11 0.003577995 ubox
4 76 0.125456973 ubox
4 77 0.022591364 ubox
5 71 0.003673763 ubox
5 74 0.004614053 ubox
5 76 0.014361071 ubox
5 77 0.023420784 ubox
6 71 0.004584694 ubox
6 76 0.013573651 ubox
6 77 0.056328776 ubox
7 69 0.004858720 ubox
7 76 0.046196989 ubox
7 77 0.855232624 ubox
8 69 0.004199504 ubox
8 71 0.013034026 ubox
8 76 0.975660472 ubox
8 77 0.018979582 ubox
9 14 0.007739172 ubox
9 67 0.023629255 ubox
9 70 0.012975811 ubox
9 75 0.997641703 ubox
9 78 0.011778531 ubox
10 66 0.023717122 ubox
10 69 0.012719646 ubox
10 74 0.997481991 ubox
10 77 0.010975056 ubox
11 65 0.023927969 ubox
11 68 0.011478714 ubox
11 73 0.997491163 ubox
12 64 0.023963096 ubox
12 72 0.997688632 ubox
13 66 0.003266746 ubox
13 71 0.987137083 ubox
14 64 0.010057229 ubox
15 26 0.215344885 ubox
15 67 0.045355187 ubox
15 69 0.007481685 ubox
15 70 0.974800963 ubox
16 25 0.215677223 ubox
16 66 0.045305267 ubox
16 69 0.974927006 ubox
17 24 0.215769896 ubox
17 27 0.004117626 ubox
17 64 0.004540713 ubox
17 65 0.044727808 ubox
17 68 0.974188031 ubox
18 23 0.216125126 ubox
18 26 0.006318342 ubox
18 63 0.007583330 ubox
18 66 0.008189301 ubox
18 67 0.969256576 ubox
18 70 0.003526368 ubox
18 71 0.008110117 ubox
19 23 0.023892850 ubox
19 25 0.006378879 ubox
19 26 0.143722469 ubox
19 61 0.011161929 ubox
19 63 0.045418246 ubox
19 66 0.731940190 ubox
19 67 0.101272076 ubox
19 69 0.003215390 ubox
19 70 0.011432535 ubox
20 25 0.131641640 ubox
20 60 0.009476859 ubox
20 66 0.127137190 ubox
20 69 0.011106163 ubox
21 25 0.006937545 ubox
21 66 0.033206927 ubox
22 60 0.018100765 ubox
22 66 0.031078249 ubox
23 59 0.017735294 ubox
23 64 0.210014913 ubox
24 60 0.422047703 ubox
24 66 0.567190272 ubox
25 59 0.437127670 ubox
25 62 0.077688584 ubox
25 64 0.055378953 ubox
25 65 0.781112277 ubox
26 58 0.440759438 ubox
26 59 0.007004584 ubox
26 64 0.780863895 ubox
27 57 0.440770054 ubox
27 66 0.005152792 ubox
28 56 0.440877327 ubox
28 60 0.004510598 ubox
28 61 0.895365230 ubox
28 63 0.017947931 ubox
28 67 0.007467104 ubox
29 55 0.440823330 ubox
29 60 0.897212379 ubox
29 66 0.007428493 ubox
30 38 0.003589308 ubox
30 54 0.440841432 ubox
30 59 0.897465321 ubox
31 37 0.004678309 ubox
31 53 0.440046325 ubox
31 58 0.893947661 ubox
31 64 0.007482271 ubox
32 51 0.012711826 ubox
32 52 0.408498137 ubox
32 57 0.893947161 ubox
32 63 0.008233641 ubox
33 43 0.005530426 ubox
33 50 0.081246107 ubox
33 51 0.249667856 ubox
33 52 0.028677929 ubox
33 56 0.897469405 ubox
33 61 0.010292951 ubox
34 51 0.032832807 ubox
34 55 0.897244366 ubox
34 60 0.010330892 ubox
35 39 0.013688837 ubox
35 41 0.051765102 ubox
35 42 0.010670572 ubox
35 44 0.030923357 ubox
35 48 0.106465329 ubox
35 49 0.142238893 ubox
35 54 0.894108268 ubox
35 59 0.010338554 ubox
36 43 0.031982180 ubox
36 50 0.011128296 ubox
36 51 0.005294007 ubox
36 52 0.122658131 ubox
36 55 0.004518482 ubox
37 51 0.121688494 ubox
37 57 0.010216290 ubox
38 43 0.099078150 ubox
38 50 0.117403503 ubox
38 51 0.019874017 ubox
38 52 0.134919859 ubox
38 56 0.010229645 ubox
39 43 0.028545080 ubox
39 50 0.018415328 ubox
39 51 0.061474682 ubox
39 52 0.883553692 ubox
39 55 0.006736648 ubox
40 51 0.900339882 ubox
41 50 0.900181612 ubox
41 51 0.301100067 ubox
41 52 0.009073063 ubox
42 50 0.369461042 ubox
43 48 0.884887754 ubox
43 49 0.382490704 ubox
44 50 0.005191925 ubox
62 66 0.006039404 ubox
62 69 0.005731990 ubox
62 71 0.005043592 ubox
62 76 0.004092085 ubox
62 77 0.005561411 ubox
63 79 0.004101256 ubox
64 69 0.003847263 ubox
64 70 0.081508118 ubox
64 71 0.004596532 ubox
64 75 0.060904502 ubox
64 78 0.004017238 ubox
65 69 0.071015693 ubox
65 71 0.003987790 ubox
65 74 0.060998148 ubox
65 77 0.003843003 ubox
66 73 0.061041057 ubox
67 72 0.060967035 ubox
72 78 0.005403460 ubox
73 77 0.004705270 ubox
7 77 0.9500000 lbox
8 76 0.9500000 lbox
9 75 0.9500000 lbox
10 74 0.9500000 lbox
11 73 0.9500000 lbox
12 72 0.9500000 lbox
13 71 0.9500000 lbox
15 70 0.9500000 lbox
16 69 0.9500000 lbox
17 68 0.9500000 lbox
18 67 0.9500000 lbox
24 66 0.9500000 lbox
25 65 0.9500000 lbox
26 64 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
31 58 0.9500000 lbox
32 57 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
