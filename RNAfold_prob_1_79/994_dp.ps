%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (994)
} def

/sequence { (\
GGAAAAGGCCAAGCCACGGAGAAACUCCAAGGAUCAAAGAUCCAAGCUCAAAGAGCAACGCAAAGCGGCCAGUUUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.017957502 ubox
1 15 0.005446533 ubox
1 70 0.045969295 ubox
1 75 0.007657364 ubox
1 76 0.065684211 ubox
1 77 0.040689502 ubox
1 78 0.891571078 ubox
2 9 0.017922377 ubox
2 14 0.005434972 ubox
2 17 0.003285547 ubox
2 69 0.045840897 ubox
2 73 0.004083508 ubox
2 74 0.010824009 ubox
2 75 0.098159239 ubox
2 76 0.063906793 ubox
2 77 0.893415763 ubox
2 78 0.405221646 ubox
3 73 0.010492362 ubox
3 74 0.102401573 ubox
3 75 0.069513416 ubox
3 76 0.893631929 ubox
3 77 0.404106427 ubox
4 73 0.103969927 ubox
4 74 0.072881769 ubox
4 75 0.891916677 ubox
4 76 0.401405982 ubox
4 77 0.037654518 ubox
5 73 0.072004488 ubox
5 74 0.885244985 ubox
5 75 0.396935643 ubox
5 76 0.048291888 ubox
5 77 0.003808862 ubox
6 73 0.756778247 ubox
6 74 0.382393764 ubox
6 75 0.056389342 ubox
6 76 0.004470496 ubox
7 14 0.003608412 ubox
7 15 0.207803698 ubox
7 17 0.003273628 ubox
7 70 0.967662847 ubox
7 73 0.084602303 ubox
7 74 0.062376618 ubox
7 75 0.003920928 ubox
8 14 0.208119090 ubox
8 69 0.970940482 ubox
8 70 0.013597128 ubox
8 73 0.074890118 ubox
8 74 0.004424315 ubox
9 13 0.206610928 ubox
9 68 0.970742361 ubox
9 72 0.082219756 ubox
10 65 0.005704477 ubox
10 67 0.944436795 ubox
10 68 0.015680500 ubox
10 72 0.035691903 ubox
12 48 0.018733064 ubox
13 17 0.064997283 ubox
13 47 0.019936458 ubox
13 56 0.005402666 ubox
13 59 0.013988874 ubox
13 61 0.214205244 ubox
13 66 0.489689771 ubox
13 69 0.114535130 ubox
13 70 0.005761433 ubox
14 18 0.003401516 ubox
14 19 0.005264396 ubox
14 31 0.004194874 ubox
14 32 0.020906449 ubox
14 46 0.019854131 ubox
14 55 0.005361361 ubox
14 60 0.213611755 ubox
14 65 0.489470871 ubox
14 68 0.114831081 ubox
15 21 0.004600404 ubox
15 31 0.024209903 ubox
15 53 0.003776619 ubox
15 60 0.046921590 ubox
15 65 0.038945270 ubox
15 67 0.111995254 ubox
16 73 0.007068679 ubox
17 31 0.005216843 ubox
17 60 0.078903259 ubox
17 65 0.066407102 ubox
17 68 0.004104751 ubox
17 72 0.007864356 ubox
17 79 0.017577458 ubox
18 25 0.012279009 ubox
18 26 0.005909872 ubox
18 27 0.008050973 ubox
18 28 0.995838447 ubox
18 59 0.028991027 ubox
18 61 0.007096529 ubox
18 78 0.016192967 ubox
19 25 0.006632103 ubox
19 26 0.006559336 ubox
19 27 0.997233558 ubox
19 28 0.009463963 ubox
19 61 0.003871521 ubox
19 77 0.013512790 ubox
19 78 0.064214296 ubox
20 26 0.995719181 ubox
20 76 0.012891872 ubox
20 77 0.064840841 ubox
21 25 0.973805495 ubox
21 26 0.005160859 ubox
21 27 0.010062056 ubox
21 28 0.007083920 ubox
21 59 0.003187809 ubox
21 75 0.011609391 ubox
21 76 0.064957502 ubox
22 26 0.008857472 ubox
22 74 0.009944817 ubox
22 75 0.065218771 ubox
23 73 0.007675124 ubox
23 74 0.065463559 ubox
24 73 0.065780011 ubox
25 72 0.066055060 ubox
26 71 0.061755652 ubox
27 68 0.029528333 ubox
28 67 0.028520232 ubox
28 68 0.013483203 ubox
31 43 0.998591981 ubox
32 42 0.999730104 ubox
33 41 0.999465382 ubox
34 39 0.008305066 ubox
34 40 0.998697864 ubox
35 39 0.990414304 ubox
46 56 0.997085616 ubox
46 59 0.004381273 ubox
46 61 0.019283681 ubox
46 66 0.032471556 ubox
47 53 0.011811000 ubox
47 55 0.998140782 ubox
47 60 0.019215329 ubox
47 65 0.032503103 ubox
47 72 0.003243660 ubox
48 52 0.010757966 ubox
48 53 0.006657521 ubox
48 54 0.997413838 ubox
48 64 0.031253801 ubox
48 71 0.003183232 ubox
49 53 0.989046818 ubox
49 55 0.004090270 ubox
49 60 0.004184159 ubox
53 59 0.023100849 ubox
53 61 0.005796400 ubox
53 70 0.005261661 ubox
55 59 0.005192011 ubox
55 61 0.007918178 ubox
55 66 0.040374011 ubox
55 69 0.007296783 ubox
55 73 0.003184747 ubox
56 60 0.007442545 ubox
56 65 0.040619015 ubox
56 68 0.007337364 ubox
56 72 0.003355153 ubox
57 74 0.011993681 ubox
58 73 0.017675537 ubox
59 65 0.144283495 ubox
59 67 0.291377233 ubox
59 68 0.009756192 ubox
59 72 0.018503150 ubox
59 79 0.018803181 ubox
60 66 0.688738531 ubox
60 69 0.057671969 ubox
60 70 0.004500245 ubox
60 73 0.003775392 ubox
60 78 0.019834141 ubox
61 65 0.684320336 ubox
61 67 0.006660898 ubox
61 68 0.057856314 ubox
61 72 0.004063722 ubox
62 76 0.021397387 ubox
63 75 0.025285469 ubox
64 74 0.027807036 ubox
65 73 0.031501897 ubox
66 72 0.032050368 ubox
68 73 0.003787317 ubox
72 77 0.003275237 ubox
72 78 0.012897590 ubox
1 78 0.9500000 lbox
2 77 0.9500000 lbox
3 76 0.9500000 lbox
4 75 0.9500000 lbox
5 74 0.9500000 lbox
6 73 0.9500000 lbox
7 70 0.9500000 lbox
8 69 0.9500000 lbox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
showpage
end
%%EOF
