%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (336)
} def

/sequence { (\
GGAAAGAUGGAUCGAAAAAGAUCGGCAAAGCCACAUCACGCAGACGAAAAGUCGAUCGAAAGAUCGCGUUUCGGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.006219083 ubox
1 26 0.006404643 ubox
1 31 0.005178345 ubox
1 32 0.177303431 ubox
1 34 0.012795072 ubox
1 37 0.015491393 ubox
1 39 0.027206207 ubox
1 41 0.096431037 ubox
1 72 0.013271565 ubox
1 75 0.009108607 ubox
1 76 0.011695522 ubox
1 77 0.003234556 ubox
1 78 0.096997336 ubox
2 13 0.003687448 ubox
2 26 0.005886568 ubox
2 31 0.177355593 ubox
2 32 0.003896459 ubox
2 34 0.006246622 ubox
2 36 0.010267035 ubox
2 37 0.028115290 ubox
2 39 0.082822911 ubox
2 41 0.105164433 ubox
2 71 0.013047914 ubox
2 72 0.018983152 ubox
2 75 0.013370296 ubox
2 76 0.003780021 ubox
2 77 0.093088353 ubox
2 78 0.142301003 ubox
3 8 0.004763950 ubox
3 12 0.003644392 ubox
3 36 0.026182704 ubox
3 70 0.012539535 ubox
3 71 0.018857325 ubox
3 76 0.085278381 ubox
3 77 0.139404123 ubox
4 36 0.004090677 ubox
4 69 0.007309935 ubox
4 70 0.017480530 ubox
4 76 0.118798586 ubox
4 77 0.025552953 ubox
5 69 0.010310222 ubox
5 71 0.005008155 ubox
5 76 0.032274426 ubox
5 77 0.003803712 ubox
6 23 0.005094151 ubox
6 26 0.097796854 ubox
6 34 0.009287814 ubox
6 37 0.954817161 ubox
6 39 0.008598969 ubox
6 41 0.005229501 ubox
6 70 0.005879386 ubox
6 72 0.005682619 ubox
6 75 0.035407314 ubox
6 78 0.026825539 ubox
7 22 0.005013702 ubox
7 36 0.955771914 ubox
7 69 0.006162396 ubox
7 71 0.005291742 ubox
7 77 0.025131483 ubox
8 21 0.004674217 ubox
8 24 0.013419208 ubox
8 25 0.169592670 ubox
8 27 0.018208385 ubox
8 33 0.006139860 ubox
8 35 0.955615183 ubox
8 38 0.017667186 ubox
8 40 0.005206983 ubox
8 42 0.004806031 ubox
8 68 0.006271184 ubox
8 73 0.007174724 ubox
8 74 0.005515629 ubox
8 79 0.008089072 ubox
9 23 0.015373103 ubox
9 26 0.019556287 ubox
9 32 0.006387500 ubox
9 34 0.954130268 ubox
9 37 0.019928904 ubox
9 39 0.007264446 ubox
9 41 0.005688076 ubox
9 67 0.006261133 ubox
9 72 0.008684221 ubox
9 75 0.015691787 ubox
9 76 0.004757841 ubox
9 78 0.013019180 ubox
10 22 0.008465728 ubox
10 23 0.998324779 ubox
10 26 0.007986698 ubox
10 31 0.006056389 ubox
10 32 0.004689064 ubox
10 65 0.005366053 ubox
10 75 0.004805228 ubox
10 77 0.006967297 ubox
11 22 0.999186036 ubox
11 64 0.005382681 ubox
11 76 0.006856291 ubox
12 21 0.999362593 ubox
12 25 0.013818134 ubox
12 63 0.005387656 ubox
12 74 0.008530424 ubox
13 20 0.999357076 ubox
13 24 0.016755548 ubox
13 62 0.005386504 ubox
13 73 0.008782046 ubox
14 23 0.020128133 ubox
14 72 0.008788543 ubox
15 22 0.019004250 ubox
15 71 0.008714769 ubox
16 70 0.008126355 ubox
17 69 0.004965009 ubox
20 37 0.011559662 ubox
20 57 0.005391219 ubox
21 36 0.011542415 ubox
21 56 0.005392383 ubox
22 35 0.010981210 ubox
22 55 0.005392504 ubox
23 54 0.005391757 ubox
24 31 0.018306345 ubox
24 32 0.973573428 ubox
24 34 0.003478454 ubox
24 53 0.004635890 ubox
24 76 0.007858255 ubox
24 78 0.013242523 ubox
25 31 0.974565188 ubox
25 32 0.007520261 ubox
25 41 0.005725041 ubox
25 52 0.004626161 ubox
25 75 0.008531456 ubox
25 77 0.009668292 ubox
25 78 0.015903196 ubox
26 30 0.967486881 ubox
26 40 0.005739429 ubox
26 51 0.004619347 ubox
26 74 0.008529504 ubox
26 79 0.032488524 ubox
27 77 0.007607299 ubox
28 76 0.005906668 ubox
28 77 0.110869240 ubox
29 76 0.123466227 ubox
30 41 0.021841031 ubox
30 75 0.125302678 ubox
31 40 0.021836014 ubox
31 74 0.125302076 ubox
32 73 0.124803691 ubox
33 70 0.005695928 ubox
33 71 0.013872569 ubox
34 40 0.012488247 ubox
34 43 0.011978601 ubox
34 73 0.005524625 ubox
34 74 0.003546411 ubox
35 70 0.023843806 ubox
35 71 0.026720528 ubox
36 44 0.031546771 ubox
36 47 0.003414846 ubox
37 43 0.034523637 ubox
37 46 0.003655118 ubox
37 68 0.003344702 ubox
37 74 0.003594399 ubox
37 79 0.004716679 ubox
38 69 0.127263438 ubox
38 70 0.004355847 ubox
38 76 0.017714304 ubox
38 77 0.026911171 ubox
39 43 0.009316729 ubox
39 46 0.007972207 ubox
39 68 0.132380273 ubox
39 73 0.038797745 ubox
39 74 0.009955798 ubox
39 79 0.843964126 ubox
40 45 0.009561526 ubox
40 67 0.132520952 ubox
40 72 0.039273869 ubox
40 75 0.225391618 ubox
40 76 0.006521828 ubox
40 77 0.031303370 ubox
40 78 0.886045091 ubox
41 66 0.132363155 ubox
41 73 0.005549113 ubox
41 74 0.225505476 ubox
41 79 0.022588873 ubox
42 71 0.043195911 ubox
42 76 0.881590647 ubox
42 77 0.085137633 ubox
43 53 0.136559878 ubox
43 70 0.045583887 ubox
43 72 0.014248747 ubox
43 75 0.872879968 ubox
43 76 0.071834136 ubox
43 77 0.018716580 ubox
43 78 0.065043441 ubox
44 52 0.136757981 ubox
44 69 0.045941954 ubox
44 71 0.013141546 ubox
44 76 0.018909514 ubox
44 77 0.064422846 ubox
45 51 0.136769925 ubox
45 68 0.046091344 ubox
45 73 0.974987622 ubox
45 74 0.067031445 ubox
45 79 0.021211198 ubox
46 53 0.006451840 ubox
46 67 0.045508299 ubox
46 70 0.003806126 ubox
46 71 0.005394186 ubox
46 72 0.987525470 ubox
46 78 0.022247439 ubox
47 52 0.005927954 ubox
47 69 0.003719559 ubox
47 70 0.013645292 ubox
47 71 0.980060751 ubox
47 77 0.020476567 ubox
48 69 0.017149166 ubox
48 70 0.964032809 ubox
48 71 0.125301393 ubox
48 76 0.010470472 ubox
49 69 0.820091908 ubox
49 70 0.170350450 ubox
49 71 0.003277263 ubox
49 77 0.014245326 ubox
50 69 0.206047537 ubox
50 70 0.006874696 ubox
50 76 0.022846695 ubox
51 64 0.003945071 ubox
51 67 0.942105584 ubox
51 69 0.009549168 ubox
51 75 0.025452719 ubox
52 63 0.004283085 ubox
52 66 0.197558045 ubox
52 68 0.024126269 ubox
52 74 0.025456146 ubox
53 62 0.004340634 ubox
53 66 0.968530507 ubox
53 68 0.003207229 ubox
53 73 0.025275462 ubox
54 65 0.999505487 ubox
54 72 0.025152448 ubox
55 64 0.999361341 ubox
55 70 0.003504056 ubox
55 71 0.024492801 ubox
56 63 0.999321886 ubox
56 68 0.003601703 ubox
56 74 0.004595640 ubox
57 62 0.999108513 ubox
57 66 0.011330980 ubox
57 68 0.021436849 ubox
57 73 0.005666424 ubox
58 65 0.011760323 ubox
58 67 0.021415517 ubox
58 72 0.005728472 ubox
59 64 0.010762935 ubox
59 71 0.005724868 ubox
60 70 0.005711040 ubox
61 69 0.005541797 ubox
66 75 0.032287441 ubox
67 73 0.003349103 ubox
67 74 0.032293757 ubox
68 72 0.003553683 ubox
72 79 0.009997948 ubox
73 78 0.011678755 ubox
74 78 0.010231535 ubox
75 79 0.003293987 ubox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
39 79 0.9500000 lbox
40 78 0.9500000 lbox
42 76 0.9500000 lbox
43 75 0.9500000 lbox
45 73 0.9500000 lbox
46 72 0.9500000 lbox
47 71 0.9500000 lbox
48 70 0.9500000 lbox
49 69 0.9500000 lbox
51 67 0.9500000 lbox
53 66 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
showpage
end
%%EOF
