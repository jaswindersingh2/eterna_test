%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (317)
} def

/sequence { (\
GGAAAGCCCGCUCAAAAACGAGCGCGAAUCGCAGGGCACCGAGCCUAAAUGGCCCACGAAAGUGGCGGUGCCCUUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.048895546 ubox
1 8 0.329901812 ubox
1 9 0.385229460 ubox
1 25 0.010613358 ubox
1 29 0.007529196 ubox
1 30 0.104938255 ubox
1 32 0.218393393 ubox
1 76 0.006144302 ubox
1 77 0.014413615 ubox
1 78 0.388094507 ubox
2 7 0.330219645 ubox
2 8 0.385429893 ubox
2 9 0.032031393 ubox
2 25 0.011482037 ubox
2 29 0.096599753 ubox
2 30 0.223928855 ubox
2 32 0.109196445 ubox
2 75 0.008110848 ubox
2 76 0.022231485 ubox
2 77 0.386783826 ubox
2 78 0.468852890 ubox
3 29 0.210560435 ubox
3 74 0.006039236 ubox
3 75 0.023365231 ubox
3 76 0.383855004 ubox
3 77 0.468474816 ubox
4 29 0.132002097 ubox
4 74 0.014729902 ubox
4 75 0.358943805 ubox
4 76 0.459258140 ubox
4 77 0.019920521 ubox
5 29 0.103500779 ubox
5 74 0.223741172 ubox
5 75 0.419845982 ubox
5 76 0.024388906 ubox
5 77 0.006648119 ubox
6 23 0.044019570 ubox
6 25 0.176549335 ubox
6 29 0.013162649 ubox
6 30 0.045328277 ubox
6 32 0.242511279 ubox
6 73 0.087016774 ubox
6 74 0.163814107 ubox
6 75 0.022275098 ubox
6 76 0.006790725 ubox
6 78 0.010259128 ubox
7 22 0.043985874 ubox
7 24 0.159762637 ubox
7 26 0.337793932 ubox
7 31 0.242273100 ubox
7 79 0.006216974 ubox
8 22 0.005877563 ubox
8 24 0.035179156 ubox
8 26 0.391793639 ubox
8 31 0.009958638 ubox
8 79 0.006261091 ubox
9 20 0.044556576 ubox
9 24 0.728490916 ubox
9 26 0.019515835 ubox
9 34 0.003442994 ubox
9 79 0.010243269 ubox
10 19 0.044499388 ubox
10 23 0.998160220 ubox
10 25 0.017909905 ubox
11 22 0.998750442 ubox
11 24 0.017444533 ubox
12 17 0.007351672 ubox
12 18 0.004914149 ubox
12 21 0.998631823 ubox
13 20 0.997739143 ubox
13 22 0.014617763 ubox
19 79 0.005296201 ubox
20 78 0.005561991 ubox
21 77 0.005396710 ubox
22 32 0.009468809 ubox
22 76 0.003493488 ubox
23 31 0.009598123 ubox
24 30 0.011439005 ubox
24 32 0.627502296 ubox
24 78 0.008235713 ubox
25 31 0.634190883 ubox
25 34 0.012784541 ubox
25 79 0.389068478 ubox
26 30 0.593600455 ubox
26 32 0.041228274 ubox
26 75 0.003274211 ubox
26 76 0.012345213 ubox
26 77 0.028789127 ubox
26 78 0.423385899 ubox
27 75 0.014200165 ubox
27 76 0.040984465 ubox
27 77 0.421044504 ubox
28 74 0.007648226 ubox
28 75 0.047595918 ubox
28 76 0.380665637 ubox
28 77 0.024527685 ubox
29 33 0.004294597 ubox
29 79 0.009402813 ubox
30 34 0.004406984 ubox
30 79 0.178407662 ubox
31 73 0.009267877 ubox
31 74 0.025238881 ubox
31 75 0.157142326 ubox
31 76 0.106764647 ubox
31 77 0.018437821 ubox
31 78 0.201622560 ubox
32 79 0.013628886 ubox
33 74 0.898120028 ubox
33 75 0.040033243 ubox
33 76 0.013432837 ubox
33 77 0.008586930 ubox
34 72 0.005968923 ubox
34 73 0.995683294 ubox
34 74 0.009036418 ubox
35 71 0.004236474 ubox
35 72 0.999920544 ubox
35 73 0.007619885 ubox
36 71 0.999969035 ubox
36 72 0.005399911 ubox
37 70 0.999987870 ubox
38 69 0.999790110 ubox
39 68 0.999987751 ubox
40 67 0.999947248 ubox
41 54 0.015680563 ubox
41 66 0.986028826 ubox
43 53 0.997257137 ubox
43 54 0.006016655 ubox
43 66 0.005269755 ubox
44 51 0.003241909 ubox
44 52 0.999633185 ubox
44 65 0.005686390 ubox
45 51 0.999409710 ubox
45 52 0.006894612 ubox
45 64 0.005661690 ubox
46 51 0.007824760 ubox
50 58 0.003582152 ubox
51 57 0.004002593 ubox
52 66 0.005624017 ubox
53 65 0.007990573 ubox
54 64 0.008512324 ubox
54 65 0.991170617 ubox
55 64 0.999852170 ubox
55 65 0.003522870 ubox
56 63 0.999587302 ubox
57 62 0.999251771 ubox
57 64 0.004045871 ubox
75 79 0.004114015 ubox
1 9 0.9500000 lbox
2 8 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
33 74 0.9500000 lbox
34 73 0.9500000 lbox
35 72 0.9500000 lbox
36 71 0.9500000 lbox
37 70 0.9500000 lbox
38 69 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
showpage
end
%%EOF
