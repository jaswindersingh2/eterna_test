%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (211)
} def

/sequence { (\
GGAAAACACGGCAUCAGUACCACAAAAGUGAGUACAAAAGGAUAGUCAAAAGACAUCCAGAUGAAGUGCUACUACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.097215301 ubox
1 9 0.077061239 ubox
1 12 0.036980860 ubox
1 15 0.022328669 ubox
1 58 0.015442884 ubox
1 69 0.032716737 ubox
1 70 0.110420560 ubox
1 72 0.118540939 ubox
1 73 0.259941988 ubox
1 75 0.157441271 ubox
1 76 0.079273728 ubox
1 77 0.008242804 ubox
1 78 0.173999070 ubox
2 7 0.034468949 ubox
2 9 0.035852330 ubox
2 12 0.015208585 ubox
2 14 0.015697253 ubox
2 15 0.043534670 ubox
2 57 0.015419663 ubox
2 69 0.116877778 ubox
2 70 0.013899574 ubox
2 72 0.274734283 ubox
2 73 0.049924701 ubox
2 75 0.091235269 ubox
2 76 0.010005757 ubox
2 77 0.172459983 ubox
2 78 0.221992667 ubox
3 14 0.041532581 ubox
3 56 0.014545808 ubox
3 70 0.081242957 ubox
3 73 0.057634008 ubox
3 76 0.165643775 ubox
3 77 0.221556709 ubox
4 14 0.003431305 ubox
4 70 0.087500757 ubox
4 73 0.047552696 ubox
4 76 0.208216263 ubox
4 77 0.012484356 ubox
5 14 0.005177287 ubox
5 62 0.003338551 ubox
5 70 0.236122988 ubox
5 73 0.034709181 ubox
5 76 0.014673460 ubox
5 77 0.013382745 ubox
6 67 0.014102342 ubox
6 70 0.165829672 ubox
6 73 0.066654663 ubox
6 76 0.015827517 ubox
6 77 0.005613343 ubox
7 11 0.011340627 ubox
7 60 0.012040495 ubox
7 66 0.014238738 ubox
7 68 0.921718002 ubox
7 79 0.012064509 ubox
8 14 0.003534953 ubox
8 18 0.003477240 ubox
8 67 0.925452548 ubox
8 70 0.003329326 ubox
8 73 0.007388676 ubox
9 17 0.004198708 ubox
9 60 0.011385184 ubox
9 66 0.925761066 ubox
9 68 0.006520668 ubox
9 79 0.018078524 ubox
10 15 0.038320760 ubox
10 21 0.003275621 ubox
10 35 0.003301322 ubox
10 47 0.008458326 ubox
10 67 0.005761827 ubox
10 69 0.003631473 ubox
10 70 0.148595657 ubox
10 72 0.003868512 ubox
10 78 0.013653148 ubox
11 15 0.012331061 ubox
11 18 0.004093520 ubox
11 20 0.003287609 ubox
11 33 0.004767519 ubox
11 46 0.008544663 ubox
11 67 0.010001248 ubox
11 69 0.154564697 ubox
11 77 0.007026754 ubox
12 17 0.004456634 ubox
12 32 0.004872104 ubox
12 40 0.003491515 ubox
12 45 0.008575526 ubox
12 60 0.014627358 ubox
12 63 0.927966312 ubox
12 66 0.010228675 ubox
12 68 0.154535712 ubox
12 79 0.009763758 ubox
13 43 0.008761224 ubox
13 62 0.931972517 ubox
13 67 0.150758319 ubox
14 31 0.005971920 ubox
14 36 0.008294921 ubox
14 37 0.010527750 ubox
14 38 0.035498103 ubox
14 39 0.008266101 ubox
14 42 0.008870184 ubox
14 61 0.932842415 ubox
14 64 0.079880777 ubox
14 65 0.009816604 ubox
14 66 0.121048961 ubox
15 30 0.006045074 ubox
15 41 0.008842316 ubox
15 60 0.932114998 ubox
15 63 0.096818059 ubox
15 66 0.028192906 ubox
15 79 0.008866543 ubox
16 29 0.006017236 ubox
16 62 0.087407357 ubox
17 35 0.998109491 ubox
18 27 0.005668480 ubox
18 34 0.999314520 ubox
19 33 0.999550361 ubox
20 32 0.999578954 ubox
21 28 0.004080650 ubox
21 30 0.999413080 ubox
22 29 0.998950437 ubox
23 28 0.997171066 ubox
23 30 0.017112620 ubox
24 29 0.014953135 ubox
31 70 0.003359864 ubox
32 69 0.003659643 ubox
33 68 0.003658975 ubox
34 67 0.003655067 ubox
35 63 0.003436775 ubox
35 66 0.003605042 ubox
36 62 0.012398927 ubox
37 62 0.009382712 ubox
38 62 0.012022901 ubox
39 62 0.006916354 ubox
40 57 0.004057010 ubox
40 58 0.998665038 ubox
41 56 0.003422038 ubox
41 57 0.999711025 ubox
41 58 0.004122694 ubox
42 56 0.999091361 ubox
43 55 0.989259469 ubox
44 56 0.004208941 ubox
45 54 0.999193701 ubox
46 52 0.004565167 ubox
46 53 0.999483124 ubox
47 52 0.997930740 ubox
60 78 0.008551346 ubox
61 77 0.008242120 ubox
62 79 0.200220386 ubox
63 75 0.007005485 ubox
63 78 0.336897985 ubox
64 77 0.341279636 ubox
65 73 0.013482297 ubox
65 76 0.342350060 ubox
66 72 0.013921644 ubox
66 75 0.342693483 ubox
67 71 0.012567796 ubox
67 74 0.338980587 ubox
68 72 0.033618108 ubox
68 73 0.293647336 ubox
68 75 0.007678208 ubox
69 79 0.016361247 ubox
70 74 0.008651069 ubox
70 79 0.008286984 ubox
71 76 0.010695872 ubox
71 77 0.010308653 ubox
72 79 0.047892242 ubox
73 79 0.007533240 ubox
75 79 0.016431196 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
