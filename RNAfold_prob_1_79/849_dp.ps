%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (849)
} def

/sequence { (\
GGAAAGCAAGCACAAAAAAGGCAAAAGUCCAGCAAAAGACUGAAGACAGGCAAAAGACCAAGCAAAAAGAUGGUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.131986991 ubox
1 11 0.056255043 ubox
1 13 0.070698003 ubox
1 22 0.013655185 ubox
1 29 0.009864635 ubox
1 30 0.717969180 ubox
1 33 0.011797340 ubox
1 47 0.017833584 ubox
1 51 0.024028116 ubox
1 78 0.085461588 ubox
2 7 0.055560258 ubox
2 11 0.057919598 ubox
2 13 0.017475425 ubox
2 22 0.005279655 ubox
2 28 0.009579172 ubox
2 29 0.718908251 ubox
2 30 0.008393248 ubox
2 33 0.005528391 ubox
2 47 0.009496858 ubox
2 51 0.016768177 ubox
2 77 0.057871089 ubox
2 78 0.112444389 ubox
3 28 0.711191907 ubox
3 76 0.039924888 ubox
3 77 0.097288704 ubox
4 28 0.055433677 ubox
4 76 0.055227694 ubox
4 77 0.006684014 ubox
5 28 0.010553458 ubox
5 74 0.004280997 ubox
5 76 0.005319552 ubox
5 77 0.004056824 ubox
6 11 0.040262691 ubox
6 13 0.046232026 ubox
6 22 0.207323866 ubox
6 28 0.042021558 ubox
6 29 0.004785833 ubox
6 33 0.041721683 ubox
6 47 0.012829477 ubox
6 51 0.288309508 ubox
6 63 0.004360266 ubox
6 74 0.006115276 ubox
6 78 0.019587891 ubox
7 20 0.024161011 ubox
7 21 0.207068746 ubox
7 27 0.053843744 ubox
7 32 0.041720991 ubox
7 42 0.018069169 ubox
7 45 0.015361181 ubox
7 49 0.021296473 ubox
7 50 0.287994771 ubox
7 62 0.004360549 ubox
7 72 0.004686216 ubox
7 73 0.006303003 ubox
7 79 0.017056894 ubox
8 41 0.014324957 ubox
8 71 0.004261422 ubox
8 77 0.005799269 ubox
9 28 0.003242476 ubox
9 41 0.010858522 ubox
9 76 0.004244026 ubox
9 77 0.003770042 ubox
10 22 0.820293099 ubox
10 28 0.015768632 ubox
10 29 0.023961409 ubox
10 30 0.013094513 ubox
10 33 0.039099743 ubox
10 40 0.011872872 ubox
10 47 0.063566628 ubox
10 51 0.130990923 ubox
10 78 0.011497411 ubox
11 20 0.168308314 ubox
11 21 0.819563824 ubox
11 27 0.018204902 ubox
11 32 0.039093747 ubox
11 38 0.017005206 ubox
11 42 0.008219592 ubox
11 45 0.051657990 ubox
11 49 0.008427372 ubox
11 50 0.130951650 ubox
11 79 0.009625057 ubox
12 28 0.029426050 ubox
12 41 0.007241639 ubox
13 20 0.705680949 ubox
13 21 0.021881515 ubox
13 27 0.029940174 ubox
13 32 0.003180169 ubox
13 38 0.005685787 ubox
13 42 0.012287071 ubox
13 45 0.015592507 ubox
13 49 0.053011603 ubox
13 50 0.007425267 ubox
13 79 0.012107651 ubox
14 41 0.010789655 ubox
18 77 0.006215037 ubox
19 41 0.015483338 ubox
19 76 0.006577743 ubox
20 29 0.178768274 ubox
20 30 0.080835258 ubox
20 33 0.005556980 ubox
20 40 0.015490986 ubox
20 41 0.010781615 ubox
20 47 0.099614307 ubox
20 51 0.066033901 ubox
20 75 0.006502725 ubox
20 78 0.021459579 ubox
21 28 0.181218230 ubox
21 29 0.080548519 ubox
21 30 0.004051085 ubox
21 33 0.052991927 ubox
21 40 0.010555214 ubox
21 47 0.057334918 ubox
21 51 0.361161683 ubox
21 63 0.003165402 ubox
21 74 0.006377400 ubox
21 77 0.005586122 ubox
21 78 0.005625794 ubox
22 27 0.195374632 ubox
22 32 0.053072448 ubox
22 38 0.010150966 ubox
22 42 0.025006316 ubox
22 45 0.088103075 ubox
22 49 0.062713530 ubox
22 50 0.361851370 ubox
22 62 0.003164803 ubox
22 73 0.006339797 ubox
22 79 0.004136315 ubox
23 28 0.012830055 ubox
23 41 0.017717335 ubox
24 28 0.003426001 ubox
24 41 0.004214567 ubox
25 41 0.015259284 ubox
25 77 0.003654971 ubox
26 41 0.343361820 ubox
26 76 0.003655405 ubox
27 33 0.032398610 ubox
27 40 0.354643482 ubox
27 47 0.520185102 ubox
27 51 0.062116791 ubox
27 75 0.003554044 ubox
28 32 0.030340623 ubox
28 39 0.355457494 ubox
28 43 0.044328665 ubox
28 44 0.065529015 ubox
28 45 0.009734797 ubox
28 46 0.521076800 ubox
28 50 0.060928345 ubox
29 38 0.355108141 ubox
29 42 0.033026839 ubox
29 45 0.517210834 ubox
29 49 0.060448417 ubox
29 50 0.014363903 ubox
29 73 0.003563991 ubox
30 38 0.025118379 ubox
30 42 0.549779753 ubox
30 45 0.026041407 ubox
30 49 0.014449661 ubox
30 72 0.003565228 ubox
31 41 0.558274291 ubox
31 71 0.003353582 ubox
32 40 0.558111690 ubox
32 41 0.012228301 ubox
32 47 0.013932096 ubox
32 51 0.246919352 ubox
32 78 0.016460328 ubox
33 38 0.457302225 ubox
33 42 0.096767419 ubox
33 45 0.018551972 ubox
33 49 0.009515144 ubox
33 50 0.246954140 ubox
33 79 0.013129445 ubox
34 41 0.090880082 ubox
34 77 0.004152228 ubox
35 41 0.008780158 ubox
35 77 0.004861497 ubox
36 41 0.009142238 ubox
36 76 0.003468411 ubox
36 77 0.052520557 ubox
37 41 0.005075920 ubox
37 76 0.058209690 ubox
38 47 0.047754384 ubox
38 51 0.336207171 ubox
38 75 0.058952617 ubox
38 78 0.041090886 ubox
39 74 0.058926462 ubox
39 77 0.030921641 ubox
40 45 0.031684004 ubox
40 49 0.682785756 ubox
40 50 0.062919487 ubox
40 73 0.058899612 ubox
40 79 0.014776166 ubox
41 45 0.003936942 ubox
41 46 0.012801610 ubox
41 48 0.686615527 ubox
41 49 0.058161182 ubox
41 50 0.006689305 ubox
41 52 0.053844217 ubox
41 53 0.005369240 ubox
41 72 0.057291622 ubox
41 79 0.071277043 ubox
42 47 0.683935353 ubox
42 51 0.064599568 ubox
42 71 0.037074892 ubox
42 78 0.176941213 ubox
43 71 0.003550637 ubox
43 77 0.176821523 ubox
44 76 0.175521234 ubox
45 51 0.033296487 ubox
45 63 0.003413686 ubox
45 75 0.175204300 ubox
45 78 0.027498793 ubox
46 74 0.174782368 ubox
46 77 0.025101263 ubox
47 72 0.025971581 ubox
47 73 0.172279008 ubox
47 79 0.007659202 ubox
48 71 0.035563455 ubox
49 58 0.012775967 ubox
49 59 0.080886765 ubox
49 63 0.003894054 ubox
49 71 0.031359618 ubox
49 75 0.003184455 ubox
49 77 0.004005673 ubox
49 78 0.059931423 ubox
50 58 0.081025661 ubox
50 59 0.006661413 ubox
50 63 0.116427604 ubox
50 71 0.010230723 ubox
50 77 0.044302319 ubox
50 78 0.103281575 ubox
51 56 0.066556634 ubox
51 62 0.116419185 ubox
51 69 0.077099459 ubox
51 72 0.016967262 ubox
51 79 0.062090707 ubox
52 71 0.015530197 ubox
52 76 0.005311453 ubox
52 77 0.027374082 ubox
53 76 0.014088037 ubox
53 77 0.058914544 ubox
54 76 0.046124298 ubox
54 77 0.866360038 ubox
55 76 0.967016638 ubox
55 77 0.019201897 ubox
56 63 0.043848713 ubox
56 75 0.982535263 ubox
57 74 0.982563653 ubox
58 62 0.021841689 ubox
58 73 0.982755146 ubox
59 69 0.004348325 ubox
59 72 0.982574663 ubox
60 71 0.909512468 ubox
61 71 0.112946641 ubox
62 71 0.027451258 ubox
63 69 0.389053560 ubox
63 72 0.067070430 ubox
64 71 0.062890028 ubox
65 71 0.009375165 ubox
66 71 0.008134715 ubox
67 71 0.004608697 ubox
67 77 0.004538281 ubox
68 76 0.005105379 ubox
69 75 0.005213182 ubox
69 78 0.003626287 ubox
70 74 0.004536604 ubox
70 77 0.003581052 ubox
1 30 0.9500000 lbox
2 29 0.9500000 lbox
3 28 0.9500000 lbox
10 22 0.9500000 lbox
11 21 0.9500000 lbox
13 20 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
42 47 0.9500000 lbox
54 77 0.9500000 lbox
55 76 0.9500000 lbox
56 75 0.9500000 lbox
57 74 0.9500000 lbox
58 73 0.9500000 lbox
59 72 0.9500000 lbox
60 71 0.9500000 lbox
showpage
end
%%EOF
