%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1051)
} def

/sequence { (\
GGAAAAGGCAAAGCCAAGGUCAAAGACCAAGUAGCAAAGCUACAAGCUGAAACAGCAAGCCAAAGGCAGCACCACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.008479090 ubox
1 15 0.010116527 ubox
1 21 0.003645623 ubox
1 61 0.071738356 ubox
1 67 0.011802006 ubox
1 70 0.060560298 ubox
1 72 0.039082519 ubox
1 73 0.702513556 ubox
1 75 0.059247037 ubox
1 76 0.052437008 ubox
1 77 0.011502788 ubox
1 78 0.351856035 ubox
2 9 0.005448060 ubox
2 14 0.010103236 ubox
2 20 0.003559615 ubox
2 21 0.004604531 ubox
2 47 0.003317092 ubox
2 60 0.071549576 ubox
2 61 0.004652756 ubox
2 67 0.005833986 ubox
2 70 0.047684219 ubox
2 72 0.699866096 ubox
2 73 0.060538774 ubox
2 75 0.060191123 ubox
2 76 0.014710470 ubox
2 77 0.343879459 ubox
2 78 0.563667754 ubox
3 20 0.004629853 ubox
3 76 0.324449377 ubox
3 77 0.560086743 ubox
4 76 0.514973952 ubox
4 77 0.031784501 ubox
5 76 0.036645724 ubox
5 77 0.044859864 ubox
6 76 0.053282201 ubox
6 77 0.018758108 ubox
7 14 0.015854740 ubox
7 15 0.915321266 ubox
7 41 0.003754128 ubox
7 48 0.003956404 ubox
7 61 0.060854207 ubox
7 67 0.004089315 ubox
7 70 0.008773561 ubox
7 72 0.115183160 ubox
7 73 0.324102772 ubox
7 75 0.049860301 ubox
7 76 0.020258376 ubox
7 78 0.006382264 ubox
8 14 0.916447714 ubox
8 15 0.007673615 ubox
8 40 0.003921327 ubox
8 47 0.004206158 ubox
8 60 0.060923524 ubox
8 67 0.010162594 ubox
8 70 0.210295017 ubox
8 72 0.321394558 ubox
8 73 0.016388326 ubox
8 75 0.020929603 ubox
8 77 0.004443965 ubox
9 13 0.909822951 ubox
9 39 0.003924663 ubox
9 46 0.004217111 ubox
9 59 0.060860506 ubox
9 65 0.004095962 ubox
9 66 0.010162464 ubox
9 69 0.213130011 ubox
9 79 0.003392533 ubox
11 77 0.009170658 ubox
12 48 0.007437667 ubox
12 76 0.010218338 ubox
13 20 0.004899781 ubox
13 35 0.004562796 ubox
13 47 0.007706646 ubox
13 60 0.008729542 ubox
13 67 0.346005485 ubox
13 70 0.091096770 ubox
13 75 0.010260170 ubox
14 19 0.005241718 ubox
14 34 0.004556600 ubox
14 46 0.007672499 ubox
14 59 0.008734341 ubox
14 66 0.346401995 ubox
14 69 0.090813642 ubox
15 31 0.003908258 ubox
15 65 0.346027524 ubox
15 69 0.007627686 ubox
16 76 0.004124026 ubox
16 77 0.010924053 ubox
17 76 0.011418762 ubox
17 77 0.005701358 ubox
18 27 0.007914942 ubox
18 28 0.997853359 ubox
18 61 0.031718694 ubox
18 73 0.023657624 ubox
18 75 0.006489528 ubox
18 76 0.004077095 ubox
19 27 0.998913115 ubox
19 28 0.004311224 ubox
19 60 0.031712542 ubox
19 72 0.023640000 ubox
19 75 0.004148721 ubox
20 25 0.008297871 ubox
20 26 0.998145589 ubox
20 59 0.029532841 ubox
20 71 0.022767776 ubox
20 74 0.003889022 ubox
21 25 0.989748834 ubox
21 59 0.008227818 ubox
21 69 0.015951549 ubox
29 77 0.007686016 ubox
30 41 0.019056886 ubox
30 76 0.008515479 ubox
31 40 0.019766914 ubox
31 43 0.997865455 ubox
31 53 0.006087207 ubox
31 70 0.003413700 ubox
31 72 0.003361436 ubox
31 75 0.007320416 ubox
32 39 0.019387308 ubox
32 42 0.999083039 ubox
32 49 0.004052415 ubox
32 52 0.005981174 ubox
32 71 0.003326267 ubox
32 74 0.006799033 ubox
33 41 0.999293674 ubox
33 48 0.004555794 ubox
34 40 0.999552418 ubox
34 47 0.004602315 ubox
34 70 0.007401033 ubox
35 39 0.992286167 ubox
35 46 0.004599055 ubox
35 49 0.004945330 ubox
35 69 0.007401061 ubox
36 48 0.003357796 ubox
38 48 0.009768301 ubox
39 47 0.010637254 ubox
39 60 0.005099416 ubox
39 67 0.004739878 ubox
39 70 0.007903887 ubox
40 46 0.010639251 ubox
40 59 0.005123614 ubox
40 66 0.004737759 ubox
40 69 0.007911176 ubox
41 45 0.009591283 ubox
41 58 0.004906565 ubox
41 65 0.004564855 ubox
41 68 0.007533521 ubox
43 59 0.006188894 ubox
44 77 0.004472772 ubox
45 76 0.005258219 ubox
46 53 0.012187588 ubox
46 56 0.992644978 ubox
46 60 0.075778542 ubox
46 61 0.005385966 ubox
46 67 0.005642000 ubox
46 70 0.048550906 ubox
46 75 0.004903949 ubox
47 55 0.993688094 ubox
47 59 0.076136459 ubox
47 66 0.005630078 ubox
47 69 0.048594548 ubox
48 54 0.992533256 ubox
48 57 0.033721988 ubox
48 58 0.069492405 ubox
48 65 0.005493306 ubox
48 68 0.048276805 ubox
48 74 0.005379637 ubox
48 79 0.005357052 ubox
49 53 0.976743544 ubox
49 56 0.045956661 ubox
49 67 0.041665063 ubox
49 73 0.005586410 ubox
49 78 0.010011203 ubox
50 77 0.009974732 ubox
51 76 0.009229520 ubox
53 59 0.005511206 ubox
53 65 0.009017199 ubox
53 66 0.003789863 ubox
55 60 0.013337107 ubox
55 61 0.015674604 ubox
55 67 0.004285873 ubox
55 70 0.058088985 ubox
56 66 0.004608550 ubox
56 69 0.058264337 ubox
57 77 0.003307406 ubox
58 76 0.004464606 ubox
59 67 0.918065070 ubox
59 70 0.128331826 ubox
59 75 0.004433840 ubox
60 65 0.009521963 ubox
60 66 0.919060857 ubox
60 69 0.128197673 ubox
61 65 0.912396568 ubox
61 66 0.019387328 ubox
61 69 0.007308476 ubox
61 79 0.003293246 ubox
62 76 0.005148005 ubox
62 77 0.004814446 ubox
63 76 0.004993239 ubox
63 77 0.032394707 ubox
64 76 0.036500219 ubox
64 77 0.015870721 ubox
65 70 0.023629725 ubox
65 72 0.017207210 ubox
65 73 0.093410010 ubox
65 75 0.037193219 ubox
65 76 0.019034795 ubox
65 78 0.010662599 ubox
66 70 0.004652702 ubox
66 72 0.093274890 ubox
66 73 0.013478804 ubox
66 75 0.019714648 ubox
66 77 0.010247220 ubox
66 78 0.009996788 ubox
68 76 0.072682887 ubox
68 77 0.007698252 ubox
69 73 0.048027542 ubox
69 75 0.094445352 ubox
69 76 0.010583808 ubox
69 78 0.007572929 ubox
70 79 0.006096039 ubox
71 76 0.007326539 ubox
71 77 0.003611962 ubox
72 79 0.008150342 ubox
73 79 0.007978179 ubox
75 79 0.013830581 ubox
1 73 0.9500000 lbox
2 72 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
showpage
end
%%EOF
