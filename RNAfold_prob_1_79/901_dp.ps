%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (901)
} def

/sequence { (\
GGAAAAAGAACAAUAGACAAGCACAAAAUGAUCAUACAACAGUACGAUCAAGCCUAUCGUUCUAACAAUCGUACUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.006153830 ubox
1 63 0.006752772 ubox
1 66 0.116450056 ubox
1 69 0.036950071 ubox
1 70 0.210258433 ubox
1 72 0.022716487 ubox
1 74 0.023913643 ubox
1 75 0.017538315 ubox
1 76 0.003436684 ubox
1 77 0.008992122 ubox
1 78 0.225737995 ubox
2 11 0.003242421 ubox
2 62 0.006771985 ubox
2 63 0.004250677 ubox
2 66 0.071105007 ubox
2 69 0.192555123 ubox
2 70 0.251504632 ubox
2 72 0.008473720 ubox
2 74 0.020021454 ubox
2 75 0.003892362 ubox
2 76 0.013811008 ubox
2 77 0.224814885 ubox
2 78 0.310937264 ubox
3 61 0.006451168 ubox
3 63 0.006583852 ubox
3 69 0.246397951 ubox
3 72 0.009425636 ubox
3 75 0.014350557 ubox
3 76 0.222581993 ubox
3 77 0.310108367 ubox
4 60 0.004522919 ubox
4 63 0.018983570 ubox
4 69 0.012993630 ubox
4 72 0.010237725 ubox
4 75 0.202473273 ubox
4 76 0.303465238 ubox
4 77 0.031657613 ubox
5 63 0.013095068 ubox
5 69 0.009533502 ubox
5 72 0.012974718 ubox
5 75 0.276437137 ubox
5 76 0.040272779 ubox
5 77 0.026465317 ubox
6 63 0.046675319 ubox
6 69 0.021911607 ubox
6 72 0.039988061 ubox
6 75 0.045499864 ubox
6 76 0.032043735 ubox
6 77 0.005174069 ubox
7 63 0.955273661 ubox
7 69 0.003986145 ubox
7 72 0.025187935 ubox
7 75 0.033446307 ubox
8 33 0.006173918 ubox
8 62 0.991886784 ubox
8 63 0.003521463 ubox
8 70 0.106879852 ubox
8 72 0.008384217 ubox
8 74 0.033630491 ubox
8 78 0.006574658 ubox
9 32 0.006087353 ubox
9 61 0.991771611 ubox
9 69 0.104477462 ubox
9 72 0.005375320 ubox
9 77 0.006500185 ubox
10 60 0.991628354 ubox
10 69 0.006508310 ubox
10 72 0.032037451 ubox
10 76 0.005658803 ubox
11 16 0.003968432 ubox
11 30 0.006008785 ubox
11 59 0.988953464 ubox
11 71 0.032450820 ubox
12 29 0.005535790 ubox
12 57 0.030240525 ubox
12 69 0.006723202 ubox
13 57 0.970234165 ubox
13 69 0.021094021 ubox
14 21 0.003192733 ubox
14 56 0.988840661 ubox
14 64 0.112385547 ubox
14 65 0.005012049 ubox
14 68 0.015494512 ubox
15 55 0.989573241 ubox
15 57 0.007304190 ubox
15 63 0.118005125 ubox
16 22 0.022962407 ubox
16 24 0.015437140 ubox
16 33 0.008650617 ubox
16 53 0.046952546 ubox
16 54 0.986489190 ubox
16 55 0.003591564 ubox
16 58 0.052619018 ubox
16 61 0.010131271 ubox
16 62 0.118305500 ubox
16 66 0.007048816 ubox
16 78 0.005789293 ubox
17 29 0.008573955 ubox
17 32 0.008567084 ubox
17 55 0.006995866 ubox
17 57 0.051781797 ubox
17 60 0.037714963 ubox
17 61 0.109571748 ubox
17 77 0.005714661 ubox
18 30 0.008799309 ubox
18 52 0.403900708 ubox
18 59 0.052173774 ubox
19 29 0.013046179 ubox
19 55 0.031969099 ubox
19 57 0.010367584 ubox
19 60 0.028800553 ubox
19 61 0.005781207 ubox
19 76 0.006055700 ubox
20 29 0.056818725 ubox
20 55 0.022467559 ubox
20 57 0.023734984 ubox
20 60 0.012368019 ubox
20 61 0.014693893 ubox
20 63 0.005734354 ubox
20 75 0.006408773 ubox
21 29 0.009506974 ubox
21 49 0.010682045 ubox
21 53 0.767612757 ubox
21 54 0.021441547 ubox
21 57 0.008829504 ubox
21 58 0.055769655 ubox
21 60 0.034966586 ubox
21 62 0.005952337 ubox
21 74 0.006435078 ubox
22 30 0.012333179 ubox
22 52 0.767025076 ubox
22 59 0.035129830 ubox
23 29 0.022027114 ubox
23 55 0.009712813 ubox
23 57 0.013970954 ubox
23 60 0.008652139 ubox
23 72 0.005786908 ubox
24 30 0.011134393 ubox
24 52 0.039623407 ubox
24 59 0.008737791 ubox
24 71 0.005889003 ubox
25 29 0.017367288 ubox
25 55 0.007832738 ubox
26 55 0.005236216 ubox
28 55 0.003312023 ubox
29 38 0.005201049 ubox
29 41 0.005618189 ubox
29 50 0.960597901 ubox
29 51 0.093099343 ubox
29 52 0.006504912 ubox
30 37 0.005733580 ubox
30 40 0.005761599 ubox
30 49 0.999250041 ubox
31 48 0.999360506 ubox
32 47 0.999357524 ubox
33 46 0.997269927 ubox
34 43 0.017548760 ubox
35 42 0.018509025 ubox
35 44 0.988576973 ubox
36 43 0.996568454 ubox
37 42 0.995266170 ubox
37 79 0.003929248 ubox
38 77 0.004143522 ubox
39 76 0.004532953 ubox
39 77 0.005055239 ubox
41 75 0.021841161 ubox
42 74 0.023590933 ubox
43 73 0.023598068 ubox
44 72 0.023600266 ubox
45 71 0.023605606 ubox
46 70 0.023602813 ubox
47 69 0.023457695 ubox
48 68 0.021980170 ubox
51 57 0.005355467 ubox
51 61 0.016331646 ubox
51 63 0.007275554 ubox
52 58 0.007984308 ubox
52 60 0.020904924 ubox
52 62 0.007363472 ubox
52 66 0.004680524 ubox
53 59 0.021228462 ubox
54 59 0.006335009 ubox
55 64 0.003802914 ubox
55 73 0.004203688 ubox
56 61 0.003298944 ubox
56 63 0.003772550 ubox
56 72 0.004464369 ubox
57 71 0.003507455 ubox
58 71 0.005734507 ubox
59 66 0.009466133 ubox
59 69 0.004060892 ubox
59 70 0.006068083 ubox
59 74 0.005934837 ubox
60 65 0.008770513 ubox
60 68 0.004572367 ubox
60 73 0.005669666 ubox
61 67 0.004320694 ubox
62 71 0.005320338 ubox
63 67 0.003929486 ubox
63 68 0.006374973 ubox
63 71 0.003843788 ubox
63 73 0.017323268 ubox
64 69 0.015825660 ubox
64 72 0.024298817 ubox
64 75 0.011004012 ubox
64 76 0.013517689 ubox
64 77 0.011909784 ubox
65 69 0.011467864 ubox
65 72 0.361947472 ubox
65 75 0.013010220 ubox
65 76 0.011514329 ubox
65 77 0.006451911 ubox
66 71 0.374879102 ubox
66 79 0.024920872 ubox
67 72 0.019717207 ubox
67 75 0.011302367 ubox
67 76 0.032021688 ubox
67 77 0.037834808 ubox
68 72 0.014313461 ubox
68 75 0.032754017 ubox
68 76 0.041598361 ubox
68 77 0.030453057 ubox
69 73 0.010657712 ubox
69 79 0.006592393 ubox
70 79 0.268471889 ubox
71 75 0.008416395 ubox
71 76 0.022111744 ubox
71 77 0.020338186 ubox
71 78 0.295936192 ubox
72 79 0.010426386 ubox
73 77 0.018756547 ubox
74 79 0.043102413 ubox
75 79 0.005231930 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
