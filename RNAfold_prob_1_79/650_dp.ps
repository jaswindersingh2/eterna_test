%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (650)
} def

/sequence { (\
GGAAACCGCGAACAAGAACAAGAAACAGAACAAGACAAAGAAACAGAACAAGAACAAGAAACAAGCGGGUCAUGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.048892849 ubox
1 7 0.222352205 ubox
1 9 0.059384082 ubox
1 13 0.040955839 ubox
1 19 0.029023137 ubox
1 26 0.025478992 ubox
1 31 0.018530145 ubox
1 36 0.016649856 ubox
1 44 0.011523456 ubox
1 49 0.010216625 ubox
1 55 0.008068506 ubox
1 62 0.006710868 ubox
1 71 0.193315771 ubox
1 73 0.097896823 ubox
1 75 0.156121368 ubox
1 76 0.084716096 ubox
1 77 0.007348603 ubox
1 78 0.110217566 ubox
2 6 0.218946267 ubox
2 7 0.048539470 ubox
2 9 0.038256039 ubox
2 13 0.011245616 ubox
2 19 0.009922590 ubox
2 26 0.007350600 ubox
2 31 0.005025930 ubox
2 36 0.004374773 ubox
2 44 0.003419703 ubox
2 70 0.164733711 ubox
2 71 0.672126257 ubox
2 73 0.028250320 ubox
2 75 0.097516360 ubox
2 76 0.006534283 ubox
2 77 0.106157785 ubox
2 78 0.110987439 ubox
3 70 0.657116363 ubox
3 73 0.118862065 ubox
3 76 0.101888240 ubox
3 77 0.110026967 ubox
4 70 0.096368129 ubox
4 73 0.015750432 ubox
4 76 0.092444343 ubox
4 77 0.008453755 ubox
5 70 0.118271212 ubox
5 73 0.029924646 ubox
5 76 0.010342912 ubox
6 10 0.009306214 ubox
6 16 0.009656363 ubox
6 22 0.008895754 ubox
6 28 0.006578014 ubox
6 34 0.003884439 ubox
6 40 0.003660772 ubox
6 46 0.003234389 ubox
6 67 0.013752614 ubox
6 68 0.908273116 ubox
6 69 0.103308772 ubox
6 74 0.006919740 ubox
7 16 0.073972988 ubox
7 22 0.028927189 ubox
7 28 0.020591542 ubox
7 34 0.014352482 ubox
7 40 0.012156736 ubox
7 46 0.009672980 ubox
7 52 0.007146958 ubox
7 58 0.006197624 ubox
7 67 0.911899518 ubox
7 68 0.076963030 ubox
7 69 0.005999175 ubox
7 74 0.004995489 ubox
7 79 0.007129409 ubox
8 13 0.032548372 ubox
8 19 0.018844804 ubox
8 26 0.012057069 ubox
8 31 0.007981757 ubox
8 36 0.014567405 ubox
8 44 0.005470787 ubox
8 49 0.004175984 ubox
8 55 0.003286117 ubox
8 66 0.914643291 ubox
8 73 0.004955357 ubox
8 75 0.014185992 ubox
8 78 0.007301061 ubox
9 16 0.086187922 ubox
9 22 0.029958072 ubox
9 28 0.022304692 ubox
9 34 0.020209787 ubox
9 40 0.012164437 ubox
9 46 0.009995426 ubox
9 52 0.007432619 ubox
9 58 0.006400557 ubox
9 65 0.914368896 ubox
9 67 0.031162340 ubox
9 74 0.014161555 ubox
9 79 0.045903685 ubox
10 19 0.065709983 ubox
10 26 0.021317503 ubox
10 31 0.015174399 ubox
10 36 0.012580072 ubox
10 44 0.009015552 ubox
10 49 0.008835169 ubox
10 55 0.010784496 ubox
10 62 0.040824607 ubox
10 66 0.030881119 ubox
10 71 0.005965468 ubox
10 73 0.010041117 ubox
10 78 0.049685928 ubox
11 70 0.004808159 ubox
11 77 0.047958340 ubox
12 70 0.008003977 ubox
12 76 0.042791482 ubox
13 22 0.062111922 ubox
13 28 0.019546018 ubox
13 34 0.016598291 ubox
13 40 0.014728056 ubox
13 46 0.013081057 ubox
13 52 0.014980741 ubox
13 58 0.048677345 ubox
13 65 0.004624072 ubox
13 69 0.008747926 ubox
13 74 0.039329956 ubox
13 79 0.003211340 ubox
14 73 0.038603841 ubox
14 77 0.004486844 ubox
15 73 0.009603511 ubox
15 76 0.006051992 ubox
16 26 0.028467935 ubox
16 31 0.028072147 ubox
16 36 0.013803618 ubox
16 44 0.012635942 ubox
16 49 0.011865556 ubox
16 55 0.036019103 ubox
16 62 0.022141477 ubox
16 66 0.007939855 ubox
16 71 0.037446225 ubox
16 75 0.006387945 ubox
16 78 0.024930753 ubox
17 70 0.029942295 ubox
17 77 0.024580134 ubox
18 70 0.022789992 ubox
18 76 0.023314839 ubox
19 28 0.061191302 ubox
19 34 0.022447220 ubox
19 40 0.012252761 ubox
19 46 0.014367788 ubox
19 52 0.037029271 ubox
19 58 0.036349595 ubox
19 67 0.008004328 ubox
19 68 0.017009970 ubox
19 69 0.030079928 ubox
19 74 0.023793183 ubox
19 79 0.004545080 ubox
20 73 0.023553161 ubox
20 77 0.005387296 ubox
21 76 0.006292154 ubox
22 26 0.028101896 ubox
22 31 0.058071898 ubox
22 36 0.020013737 ubox
22 44 0.012027278 ubox
22 49 0.029596886 ubox
22 55 0.025521024 ubox
22 62 0.010704150 ubox
22 66 0.029260503 ubox
22 71 0.023990045 ubox
22 75 0.006444891 ubox
22 78 0.065191940 ubox
23 70 0.023862095 ubox
23 77 0.065080644 ubox
24 76 0.061554365 ubox
24 77 0.003325271 ubox
25 76 0.004035075 ubox
26 34 0.039506278 ubox
26 40 0.019104170 ubox
26 46 0.017991174 ubox
26 52 0.020355571 ubox
26 58 0.012585438 ubox
26 65 0.003505673 ubox
26 67 0.022478871 ubox
26 68 0.004248667 ubox
26 74 0.064968892 ubox
26 79 0.020753424 ubox
27 73 0.064911527 ubox
27 76 0.009141929 ubox
28 36 0.038882199 ubox
28 44 0.021176361 ubox
28 49 0.015098170 ubox
28 55 0.013130233 ubox
28 62 0.010723474 ubox
28 66 0.008735298 ubox
28 71 0.021843191 ubox
28 75 0.009989541 ubox
28 77 0.014355985 ubox
28 78 0.128752465 ubox
29 70 0.017203346 ubox
29 76 0.015553391 ubox
29 77 0.128722501 ubox
30 70 0.061628793 ubox
30 76 0.127012400 ubox
31 40 0.062600811 ubox
31 46 0.019974362 ubox
31 52 0.013908588 ubox
31 58 0.016653452 ubox
31 67 0.004313856 ubox
31 68 0.009462562 ubox
31 69 0.063134788 ubox
31 74 0.131240042 ubox
31 79 0.003765299 ubox
32 73 0.130166282 ubox
32 77 0.009272331 ubox
33 73 0.011800033 ubox
33 76 0.010783522 ubox
34 44 0.029271030 ubox
34 49 0.018403462 ubox
34 55 0.016202309 ubox
34 62 0.013526126 ubox
34 66 0.059325638 ubox
34 71 0.133821497 ubox
34 75 0.011042367 ubox
34 78 0.010678754 ubox
35 70 0.133997004 ubox
35 77 0.009557994 ubox
36 40 0.020714573 ubox
36 46 0.028403820 ubox
36 52 0.019889552 ubox
36 58 0.012641351 ubox
36 65 0.040418417 ubox
36 68 0.005933669 ubox
36 69 0.133689447 ubox
36 74 0.010463723 ubox
36 79 0.005414742 ubox
37 73 0.009927672 ubox
38 77 0.007801135 ubox
39 76 0.008814406 ubox
40 44 0.028422197 ubox
40 49 0.057437688 ubox
40 55 0.018443753 ubox
40 62 0.017911761 ubox
40 66 0.067010907 ubox
40 71 0.012260103 ubox
40 75 0.008902813 ubox
40 78 0.099746376 ubox
41 70 0.012214845 ubox
41 77 0.099629494 ubox
42 76 0.094355703 ubox
42 77 0.004986300 ubox
43 76 0.006085764 ubox
44 52 0.039646448 ubox
44 58 0.025370637 ubox
44 65 0.009672699 ubox
44 67 0.012011673 ubox
44 68 0.005115187 ubox
44 74 0.099954214 ubox
44 79 0.011169335 ubox
45 73 0.099898540 ubox
45 76 0.005091203 ubox
46 55 0.064313604 ubox
46 62 0.024098822 ubox
46 66 0.009263849 ubox
46 71 0.035104057 ubox
46 75 0.005548905 ubox
46 77 0.007128416 ubox
46 78 0.068011602 ubox
47 70 0.027920881 ubox
47 76 0.007663328 ubox
47 77 0.067665788 ubox
48 70 0.094381199 ubox
48 76 0.064940456 ubox
49 58 0.077876572 ubox
49 65 0.006110349 ubox
49 67 0.008233166 ubox
49 68 0.017240387 ubox
49 69 0.096663132 ubox
49 74 0.064162909 ubox
49 79 0.010933743 ubox
50 73 0.063287733 ubox
50 77 0.020105155 ubox
51 73 0.017278149 ubox
51 76 0.023327042 ubox
52 62 0.030314860 ubox
52 66 0.089371831 ubox
52 71 0.063612367 ubox
52 75 0.023687826 ubox
52 77 0.016548278 ubox
52 78 0.160897152 ubox
53 70 0.049707592 ubox
53 76 0.018075928 ubox
53 77 0.160678692 ubox
54 70 0.043131206 ubox
54 73 0.003474528 ubox
54 76 0.157497788 ubox
55 65 0.019207029 ubox
55 67 0.012750176 ubox
55 68 0.025805802 ubox
55 69 0.056813992 ubox
55 74 0.163185010 ubox
55 79 0.005017832 ubox
56 73 0.161836567 ubox
56 77 0.005629319 ubox
57 73 0.015349076 ubox
57 76 0.006346520 ubox
58 62 0.032614046 ubox
58 66 0.060657955 ubox
58 71 0.166495102 ubox
58 75 0.006402832 ubox
58 78 0.072447464 ubox
59 70 0.166191311 ubox
59 77 0.067700054 ubox
60 70 0.003352207 ubox
60 76 0.036103336 ubox
60 77 0.006500590 ubox
61 70 0.015002896 ubox
61 76 0.004100588 ubox
61 77 0.006336567 ubox
62 67 0.163888328 ubox
62 68 0.024518751 ubox
62 69 0.018231952 ubox
62 74 0.016578714 ubox
62 79 0.086276437 ubox
63 73 0.015594877 ubox
63 76 0.006763510 ubox
63 77 0.261198167 ubox
64 73 0.003607635 ubox
64 76 0.298879868 ubox
64 77 0.006650014 ubox
65 71 0.009680099 ubox
65 75 0.305123494 ubox
65 78 0.009771641 ubox
66 74 0.305117133 ubox
66 79 0.018528029 ubox
67 71 0.005818201 ubox
67 73 0.285079737 ubox
67 75 0.003486456 ubox
67 76 0.011894027 ubox
67 77 0.012076497 ubox
67 78 0.020090625 ubox
68 73 0.014304202 ubox
68 75 0.014013263 ubox
68 76 0.022661531 ubox
68 77 0.017762390 ubox
68 78 0.008503985 ubox
69 73 0.006806568 ubox
69 75 0.090974098 ubox
69 76 0.015892115 ubox
69 77 0.013168306 ubox
69 78 0.079023829 ubox
70 74 0.085270444 ubox
70 79 0.005566244 ubox
71 79 0.015256377 ubox
72 76 0.008370164 ubox
72 77 0.027240478 ubox
73 79 0.030209744 ubox
74 78 0.046837101 ubox
75 79 0.012889701 ubox
2 71 0.9500000 lbox
3 70 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
showpage
end
%%EOF
