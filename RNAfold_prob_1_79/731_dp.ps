%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (731)
} def

/sequence { (\
GGAAAGCGGUGGCAAAGGCAGCGCAAGAGGACGGGAAAACGGUGCUCAGUCGACGCAAAAGGGUGGACGCUAAUGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.006343510 ubox
1 51 0.003912119 ubox
1 68 0.006425704 ubox
1 70 0.050381335 ubox
1 71 0.113832542 ubox
1 74 0.009146587 ubox
1 76 0.012040404 ubox
1 77 0.013517096 ubox
1 78 0.390165574 ubox
2 51 0.006296437 ubox
2 68 0.004300714 ubox
2 70 0.120015807 ubox
2 71 0.014946895 ubox
2 74 0.007423756 ubox
2 76 0.014765461 ubox
2 77 0.371432702 ubox
2 78 0.569432952 ubox
3 50 0.005901338 ubox
3 71 0.015170306 ubox
3 74 0.018535549 ubox
3 76 0.324540519 ubox
3 77 0.559016168 ubox
4 71 0.017090235 ubox
4 74 0.036602852 ubox
4 76 0.440388121 ubox
4 77 0.036792674 ubox
5 71 0.074408643 ubox
5 74 0.084104156 ubox
5 76 0.037177060 ubox
5 77 0.063266428 ubox
6 13 0.024415116 ubox
6 19 0.006070456 ubox
6 22 0.010179133 ubox
6 24 0.991197979 ubox
6 56 0.007036441 ubox
6 70 0.074521932 ubox
6 74 0.006733481 ubox
6 76 0.081760769 ubox
7 12 0.024438495 ubox
7 18 0.006070153 ubox
7 21 0.010158079 ubox
7 23 0.992271119 ubox
7 55 0.007043925 ubox
7 69 0.074023633 ubox
7 75 0.084744608 ubox
7 79 0.015496681 ubox
8 19 0.003246660 ubox
8 22 0.991622794 ubox
8 24 0.023596921 ubox
8 54 0.007023171 ubox
8 68 0.031916724 ubox
8 71 0.010856464 ubox
8 74 0.079974116 ubox
8 78 0.016715455 ubox
9 19 0.012761031 ubox
9 22 0.064065112 ubox
9 24 0.036264604 ubox
9 70 0.011180148 ubox
9 74 0.004095891 ubox
9 77 0.012738349 ubox
9 78 0.009152195 ubox
10 17 0.003258598 ubox
10 18 0.012726128 ubox
10 20 0.984877382 ubox
10 21 0.073061606 ubox
10 23 0.036094368 ubox
10 25 0.013838314 ubox
10 52 0.004669334 ubox
10 66 0.013843934 ubox
10 69 0.010779547 ubox
10 72 0.083643212 ubox
10 73 0.003991778 ubox
10 79 0.004689070 ubox
11 19 0.956677586 ubox
11 22 0.033924763 ubox
11 24 0.015657666 ubox
11 51 0.006885376 ubox
11 64 0.003677973 ubox
11 68 0.005317736 ubox
11 71 0.087488146 ubox
11 77 0.016864936 ubox
11 78 0.007969357 ubox
12 19 0.270855346 ubox
12 22 0.022563934 ubox
12 24 0.007890898 ubox
12 50 0.006856806 ubox
12 64 0.018156451 ubox
12 70 0.087845176 ubox
12 76 0.025045178 ubox
12 77 0.005648851 ubox
13 17 0.806166096 ubox
13 18 0.360817254 ubox
13 21 0.024618325 ubox
13 23 0.007937583 ubox
13 49 0.006850315 ubox
13 62 0.004495395 ubox
13 63 0.018126489 ubox
13 69 0.087753318 ubox
13 75 0.026067628 ubox
14 74 0.025801325 ubox
17 22 0.020538550 ubox
17 24 0.026401097 ubox
17 46 0.010585512 ubox
17 47 0.003731347 ubox
17 71 0.027267510 ubox
17 77 0.014074521 ubox
17 78 0.005544708 ubox
18 22 0.005577784 ubox
18 24 0.064063480 ubox
18 45 0.011772801 ubox
18 47 0.003469132 ubox
18 56 0.018408648 ubox
18 70 0.027645801 ubox
18 76 0.017469122 ubox
18 77 0.003953164 ubox
19 23 0.063754102 ubox
19 44 0.011825300 ubox
19 55 0.018405865 ubox
19 69 0.027624952 ubox
19 75 0.018141098 ubox
20 43 0.011798448 ubox
20 46 0.005665111 ubox
20 71 0.012150210 ubox
20 74 0.017248188 ubox
21 45 0.005948133 ubox
21 54 0.005439985 ubox
21 56 0.004629745 ubox
21 70 0.013653553 ubox
22 41 0.011784089 ubox
22 44 0.005949437 ubox
22 52 0.018447605 ubox
22 55 0.004637029 ubox
22 69 0.013645257 ubox
23 40 0.011604754 ubox
23 43 0.005934882 ubox
23 50 0.004015515 ubox
23 51 0.018283392 ubox
23 54 0.004607414 ubox
23 68 0.004286704 ubox
23 70 0.019366420 ubox
23 76 0.003917013 ubox
24 35 0.003400539 ubox
24 42 0.005927203 ubox
24 49 0.010102637 ubox
24 52 0.003966332 ubox
24 69 0.019426121 ubox
24 75 0.004972204 ubox
25 71 0.006213430 ubox
25 74 0.006927352 ubox
25 76 0.004384457 ubox
25 77 0.011281214 ubox
26 46 0.004088312 ubox
26 71 0.008413653 ubox
26 74 0.006750991 ubox
26 76 0.010060143 ubox
26 77 0.007556023 ubox
27 32 0.003667744 ubox
27 45 0.004278121 ubox
27 47 0.998311763 ubox
27 70 0.004310230 ubox
27 78 0.004274066 ubox
28 46 0.999435057 ubox
28 77 0.003516650 ubox
29 45 0.999445046 ubox
29 46 0.005915689 ubox
29 78 0.008553153 ubox
30 43 0.009353831 ubox
30 45 0.008115396 ubox
30 77 0.008590763 ubox
31 43 0.993340011 ubox
31 76 0.008592694 ubox
32 41 0.152997515 ubox
32 42 0.986935993 ubox
32 75 0.008571803 ubox
32 79 0.003436770 ubox
33 40 0.198651038 ubox
33 47 0.004233381 ubox
33 74 0.007043661 ubox
33 78 0.003579836 ubox
34 40 0.965375931 ubox
34 46 0.004240584 ubox
35 40 0.044338066 ubox
35 45 0.004239123 ubox
35 78 0.005110324 ubox
36 77 0.004948763 ubox
37 76 0.004165232 ubox
38 77 0.005343643 ubox
39 76 0.006704584 ubox
40 75 0.007001138 ubox
41 71 0.005295064 ubox
41 74 0.006691209 ubox
42 70 0.005605532 ubox
43 69 0.005589455 ubox
44 68 0.004413998 ubox
44 70 0.010462912 ubox
45 69 0.010467424 ubox
46 66 0.003545735 ubox
47 65 0.004076097 ubox
47 69 0.007604367 ubox
47 75 0.003795671 ubox
48 64 0.005354131 ubox
48 71 0.051482349 ubox
48 74 0.009892488 ubox
48 76 0.003872266 ubox
48 77 0.004107274 ubox
49 56 0.005050503 ubox
49 68 0.995004275 ubox
49 70 0.047582909 ubox
49 71 0.003360642 ubox
50 55 0.004751689 ubox
50 62 0.005767794 ubox
50 66 0.005038667 ubox
50 67 0.997253252 ubox
50 69 0.033586373 ubox
51 61 0.006112656 ubox
51 65 0.008274123 ubox
51 66 0.997892036 ubox
51 69 0.023691693 ubox
51 79 0.021080993 ubox
52 64 0.005866543 ubox
52 68 0.024160848 ubox
52 78 0.023128656 ubox
53 64 0.995565087 ubox
53 76 0.003308288 ubox
53 77 0.022714592 ubox
54 61 0.009598455 ubox
54 62 0.014620176 ubox
54 63 0.998031586 ubox
54 65 0.039694623 ubox
54 75 0.003868016 ubox
55 64 0.040487589 ubox
55 74 0.003463096 ubox
55 76 0.023424637 ubox
56 61 0.930274041 ubox
56 62 0.088700447 ubox
56 63 0.040548084 ubox
56 75 0.023812956 ubox
57 74 0.023313040 ubox
60 71 0.022628092 ubox
61 70 0.023082991 ubox
62 68 0.006955259 ubox
62 71 0.006670880 ubox
63 68 0.020296518 ubox
63 70 0.006751839 ubox
64 69 0.006480837 ubox
64 79 0.012310043 ubox
65 78 0.036998083 ubox
66 77 0.037509932 ubox
66 78 0.005565155 ubox
67 76 0.038700239 ubox
67 77 0.005161860 ubox
68 75 0.040554740 ubox
68 79 0.008085027 ubox
69 74 0.033169693 ubox
69 76 0.416839500 ubox
69 77 0.016100170 ubox
69 78 0.039524794 ubox
70 75 0.460990030 ubox
70 79 0.026699092 ubox
71 75 0.014801329 ubox
71 79 0.004577739 ubox
72 76 0.007992674 ubox
72 77 0.011990817 ubox
73 77 0.006810453 ubox
74 79 0.007389864 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
showpage
end
%%EOF
