%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (54)
} def

/sequence { (\
GGAAAAAGUACAGAUACAAAAGUAUCCCAAGGAUUGAAAACAAUAGCAGAAAACUGCCCAAGGUGUACAUUUAGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.018905647 ubox
1 17 0.004920234 ubox
1 27 0.005034365 ubox
1 28 0.027766143 ubox
1 41 0.004353205 ubox
1 59 0.066064756 ubox
1 72 0.019240886 ubox
1 75 0.399724005 ubox
1 76 0.338309497 ubox
1 77 0.021932491 ubox
1 78 0.414201659 ubox
2 9 0.003190999 ubox
2 11 0.010275370 ubox
2 26 0.004996881 ubox
2 27 0.027764326 ubox
2 58 0.065956426 ubox
2 59 0.003566580 ubox
2 70 0.003254229 ubox
2 71 0.021718330 ubox
2 72 0.112479642 ubox
2 75 0.390543452 ubox
2 76 0.022471989 ubox
2 77 0.412083105 ubox
2 78 0.339293890 ubox
3 9 0.004574209 ubox
3 25 0.004489033 ubox
3 70 0.020548649 ubox
3 71 0.115562650 ubox
3 72 0.095885502 ubox
3 76 0.405676988 ubox
3 77 0.338841990 ubox
4 9 0.004519782 ubox
4 35 0.003188937 ubox
4 70 0.113068780 ubox
4 71 0.101699050 ubox
4 72 0.592215664 ubox
4 76 0.302860763 ubox
4 77 0.010431895 ubox
5 70 0.095412919 ubox
5 71 0.625154524 ubox
5 72 0.561113477 ubox
5 76 0.010091395 ubox
5 77 0.004742069 ubox
6 35 0.003446997 ubox
6 70 0.605320303 ubox
6 71 0.575864341 ubox
6 72 0.078327513 ubox
6 76 0.004618599 ubox
6 77 0.038987927 ubox
7 34 0.003579247 ubox
7 35 0.006452587 ubox
7 70 0.571943772 ubox
7 71 0.070686228 ubox
7 72 0.024123705 ubox
7 76 0.045459331 ubox
8 15 0.004147465 ubox
8 17 0.037797528 ubox
8 25 0.006470794 ubox
8 27 0.004729081 ubox
8 28 0.005799298 ubox
8 34 0.006977905 ubox
8 41 0.003578941 ubox
8 68 0.985560385 ubox
8 70 0.022083264 ubox
8 71 0.005200707 ubox
8 75 0.046421332 ubox
8 78 0.005452284 ubox
9 14 0.004121887 ubox
9 16 0.037543937 ubox
9 24 0.007373606 ubox
9 29 0.003310314 ubox
9 30 0.005331721 ubox
9 33 0.006762347 ubox
9 40 0.003484826 ubox
9 65 0.007450513 ubox
9 67 0.987627439 ubox
9 69 0.017512072 ubox
9 73 0.005314166 ubox
9 74 0.044875012 ubox
10 15 0.033845195 ubox
10 23 0.007534933 ubox
10 64 0.009647442 ubox
10 66 0.987878378 ubox
10 72 0.006109491 ubox
11 22 0.007546721 ubox
11 31 0.007098522 ubox
11 36 0.004168202 ubox
11 63 0.010193475 ubox
11 65 0.987834000 ubox
11 79 0.012859373 ubox
12 35 0.004230033 ubox
12 64 0.886070586 ubox
12 70 0.003373438 ubox
12 71 0.006072625 ubox
12 72 0.013923018 ubox
12 76 0.012815090 ubox
13 17 0.004822354 ubox
13 25 0.005448263 ubox
13 26 0.987139981 ubox
13 27 0.029091572 ubox
13 28 0.009945533 ubox
13 58 0.005392948 ubox
13 59 0.007501441 ubox
13 71 0.015352619 ubox
13 75 0.013717743 ubox
13 77 0.005527824 ubox
13 78 0.078517399 ubox
14 23 0.008793237 ubox
14 25 0.991660061 ubox
14 44 0.005344174 ubox
14 66 0.004666137 ubox
14 70 0.015483137 ubox
14 76 0.005797657 ubox
14 77 0.078394443 ubox
15 22 0.008805356 ubox
15 24 0.992308331 ubox
15 43 0.005189887 ubox
15 61 0.019280376 ubox
15 62 0.005845227 ubox
15 63 0.003386063 ubox
15 65 0.004795983 ubox
15 67 0.006049543 ubox
15 69 0.015190155 ubox
15 73 0.007529416 ubox
15 74 0.003438189 ubox
16 23 0.992608559 ubox
16 64 0.005895765 ubox
16 66 0.006444514 ubox
16 72 0.007036450 ubox
16 76 0.004682650 ubox
17 22 0.990919219 ubox
17 36 0.010080823 ubox
17 63 0.006671928 ubox
17 65 0.006477345 ubox
17 74 0.072774046 ubox
18 35 0.010058626 ubox
18 64 0.005967929 ubox
18 71 0.004589497 ubox
18 72 0.062286713 ubox
19 34 0.006597084 ubox
19 70 0.004648810 ubox
19 71 0.064720805 ubox
19 72 0.056504242 ubox
20 70 0.062640762 ubox
20 71 0.060333810 ubox
20 72 0.004404854 ubox
21 35 0.003604979 ubox
21 55 0.007789196 ubox
21 70 0.059913137 ubox
21 71 0.004104344 ubox
22 35 0.004556521 ubox
22 41 0.010843098 ubox
22 54 0.007858559 ubox
22 68 0.102093168 ubox
23 36 0.006387313 ubox
23 40 0.010763036 ubox
23 53 0.007628534 ubox
23 67 0.102295245 ubox
24 34 0.044459445 ubox
24 35 0.005235446 ubox
24 66 0.102208891 ubox
25 32 0.003341294 ubox
25 33 0.054750800 ubox
25 65 0.098439230 ubox
26 31 0.008583076 ubox
26 32 0.081433594 ubox
26 49 0.003262911 ubox
26 63 0.022565660 ubox
26 65 0.015823951 ubox
27 31 0.094440875 ubox
27 32 0.267122410 ubox
27 36 0.035312199 ubox
27 49 0.005451099 ubox
27 62 0.033675247 ubox
27 63 0.718064852 ubox
27 79 0.006254280 ubox
28 32 0.048708266 ubox
28 36 0.192559824 ubox
28 49 0.008654881 ubox
28 62 0.721344040 ubox
28 63 0.025442989 ubox
28 79 0.008239507 ubox
29 34 0.011893231 ubox
29 35 0.188980131 ubox
29 44 0.008659304 ubox
29 77 0.015648770 ubox
30 34 0.144143092 ubox
30 35 0.013599236 ubox
30 44 0.010658072 ubox
30 55 0.004903993 ubox
30 76 0.017396374 ubox
30 77 0.020079485 ubox
31 35 0.004018438 ubox
31 41 0.061356651 ubox
31 44 0.012258692 ubox
31 47 0.011594635 ubox
31 54 0.005128050 ubox
31 58 0.024787087 ubox
31 59 0.736367101 ubox
31 72 0.010210947 ubox
31 75 0.017538830 ubox
31 76 0.023318992 ubox
31 78 0.021902483 ubox
32 41 0.039520599 ubox
32 44 0.030014212 ubox
32 47 0.003912240 ubox
32 57 0.016901855 ubox
32 58 0.735224294 ubox
32 59 0.026514765 ubox
32 71 0.011771167 ubox
32 72 0.015464821 ubox
32 75 0.023783220 ubox
32 77 0.021722024 ubox
32 78 0.008882755 ubox
33 44 0.865759834 ubox
33 64 0.004040990 ubox
33 70 0.011835707 ubox
33 71 0.016003823 ubox
33 76 0.021401982 ubox
33 77 0.007817920 ubox
34 38 0.013645119 ubox
34 39 0.014234909 ubox
34 40 0.018751809 ubox
34 42 0.010675136 ubox
34 43 0.897339988 ubox
34 45 0.012171871 ubox
34 49 0.003790410 ubox
34 51 0.003534652 ubox
34 56 0.003709263 ubox
34 61 0.018624527 ubox
34 63 0.004340822 ubox
34 69 0.009661556 ubox
34 74 0.031839861 ubox
35 39 0.018382897 ubox
35 40 0.032754024 ubox
35 42 0.910592691 ubox
35 43 0.025526072 ubox
35 45 0.018336131 ubox
35 48 0.005201368 ubox
35 50 0.003501475 ubox
35 60 0.020789988 ubox
35 62 0.004272201 ubox
35 69 0.023379005 ubox
35 73 0.033370339 ubox
36 41 0.907796330 ubox
36 44 0.017444509 ubox
36 47 0.005410341 ubox
36 54 0.003999119 ubox
36 58 0.004588659 ubox
36 59 0.021007443 ubox
36 68 0.024966837 ubox
36 71 0.003894218 ubox
36 72 0.033606349 ubox
36 78 0.004813867 ubox
37 44 0.021618082 ubox
37 64 0.003927249 ubox
37 66 0.005470698 ubox
37 70 0.003870867 ubox
37 71 0.033524133 ubox
37 72 0.004459700 ubox
37 77 0.004516876 ubox
38 44 0.015547811 ubox
38 64 0.006670696 ubox
38 66 0.007870653 ubox
38 70 0.032356027 ubox
38 71 0.004790833 ubox
39 44 0.017034267 ubox
39 64 0.012537790 ubox
39 70 0.004824438 ubox
40 44 0.010365202 ubox
40 64 0.091774405 ubox
40 66 0.036722367 ubox
41 46 0.006905546 ubox
41 49 0.004312325 ubox
41 62 0.068631591 ubox
41 63 0.104953789 ubox
41 65 0.037325150 ubox
42 64 0.036902120 ubox
43 64 0.005709905 ubox
43 66 0.003184381 ubox
44 56 0.005162272 ubox
44 60 0.029806209 ubox
44 61 0.022894416 ubox
44 62 0.007007075 ubox
44 63 0.006451374 ubox
44 65 0.003292808 ubox
45 55 0.008759953 ubox
45 64 0.004351669 ubox
45 76 0.009498266 ubox
46 54 0.009026374 ubox
46 57 0.995404203 ubox
46 58 0.030618905 ubox
46 59 0.006384630 ubox
46 75 0.010661056 ubox
47 56 0.999042858 ubox
47 74 0.010649196 ubox
48 55 0.997653115 ubox
48 72 0.006066356 ubox
49 54 0.989374935 ubox
49 71 0.006131506 ubox
49 72 0.004778349 ubox
50 70 0.005887104 ubox
50 71 0.005547257 ubox
50 72 0.005552031 ubox
51 70 0.005270301 ubox
51 71 0.005596150 ubox
52 70 0.005429260 ubox
53 64 0.015135526 ubox
53 66 0.005753252 ubox
54 62 0.016361192 ubox
54 63 0.017409259 ubox
54 65 0.005840822 ubox
55 61 0.016363682 ubox
55 62 0.017123608 ubox
55 65 0.005014700 ubox
55 67 0.005698333 ubox
56 64 0.022964014 ubox
56 66 0.005934775 ubox
57 62 0.006817583 ubox
57 63 0.046823709 ubox
57 65 0.005961753 ubox
58 62 0.070649433 ubox
58 63 0.194806454 ubox
58 65 0.003489257 ubox
58 79 0.014734961 ubox
59 63 0.035522466 ubox
59 65 0.007783965 ubox
59 79 0.011141867 ubox
60 64 0.008806498 ubox
60 71 0.004697456 ubox
60 72 0.004968712 ubox
60 77 0.065152503 ubox
61 70 0.005199890 ubox
61 71 0.005329321 ubox
61 72 0.009391784 ubox
61 76 0.074226837 ubox
61 77 0.027308452 ubox
62 68 0.014777901 ubox
62 70 0.005123222 ubox
62 71 0.010345828 ubox
62 75 0.075932309 ubox
62 76 0.032500092 ubox
62 78 0.011470127 ubox
63 68 0.005392373 ubox
63 70 0.010487666 ubox
63 75 0.033559728 ubox
63 77 0.009863188 ubox
64 69 0.010093516 ubox
64 73 0.075510899 ubox
64 74 0.032742732 ubox
65 71 0.004338419 ubox
65 72 0.073938090 ubox
65 75 0.016904585 ubox
66 73 0.009324580 ubox
66 74 0.016595215 ubox
67 71 0.013192563 ubox
67 72 0.009648485 ubox
68 74 0.005432704 ubox
69 76 0.007642959 ubox
69 77 0.009517690 ubox
70 74 0.004451448 ubox
70 79 0.004572540 ubox
72 79 0.005806088 ubox
73 77 0.005223844 ubox
74 78 0.024102984 ubox
75 79 0.009104006 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
