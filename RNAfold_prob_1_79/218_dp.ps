%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (218)
} def

/sequence { (\
GGAAAACGGAAGUACACGCCCGCCUUGGCGCGGCGAAAACAACGCAGGAUGCUGGUUGGGUACAACCGCACCCACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.266108522 ubox
1 15 0.010339401 ubox
1 17 0.004465534 ubox
1 24 0.003297349 ubox
1 40 0.004342114 ubox
1 43 0.004515765 ubox
1 45 0.009072051 ubox
1 69 0.004017743 ubox
1 71 0.005050932 ubox
1 72 0.053846485 ubox
1 73 0.167668873 ubox
1 75 0.016779017 ubox
1 76 0.010883506 ubox
1 78 0.064771793 ubox
2 7 0.085502548 ubox
2 15 0.009655382 ubox
2 23 0.003301459 ubox
2 45 0.009160734 ubox
2 69 0.004716028 ubox
2 71 0.054184572 ubox
2 72 0.167376578 ubox
2 73 0.015234564 ubox
2 75 0.012491147 ubox
2 77 0.063241332 ubox
2 78 0.092593319 ubox
3 76 0.059737777 ubox
3 77 0.091769270 ubox
4 76 0.082582399 ubox
4 77 0.006204689 ubox
5 13 0.003946990 ubox
5 76 0.007182393 ubox
5 77 0.003757673 ubox
6 13 0.075555573 ubox
6 76 0.003904986 ubox
7 12 0.078373769 ubox
7 18 0.007206036 ubox
7 22 0.004090348 ubox
7 44 0.142964792 ubox
7 68 0.186941338 ubox
7 79 0.216858262 ubox
8 13 0.004124629 ubox
8 15 0.038583762 ubox
8 17 0.010433320 ubox
8 21 0.004247569 ubox
8 40 0.005419087 ubox
8 43 0.145866075 ubox
8 45 0.030244129 ubox
8 67 0.188426362 ubox
8 72 0.011441467 ubox
8 73 0.015108532 ubox
8 75 0.009017031 ubox
8 76 0.008888165 ubox
8 78 0.192712153 ubox
9 15 0.009653234 ubox
9 20 0.004239902 ubox
9 40 0.004215334 ubox
9 43 0.039109930 ubox
9 45 0.012790132 ubox
9 66 0.188290727 ubox
9 71 0.011405798 ubox
9 72 0.014478259 ubox
9 73 0.005021903 ubox
9 75 0.009771567 ubox
9 77 0.145938262 ubox
9 78 0.936338182 ubox
10 76 0.116831904 ubox
10 77 0.945016547 ubox
11 76 0.948503892 ubox
12 17 0.004299177 ubox
12 34 0.004294986 ubox
12 40 0.169048107 ubox
12 43 0.016785928 ubox
12 45 0.006858753 ubox
12 63 0.188126006 ubox
12 69 0.007342118 ubox
12 73 0.004355193 ubox
12 75 0.951629873 ubox
13 33 0.004126359 ubox
13 36 0.008472241 ubox
13 37 0.016840550 ubox
13 38 0.018496757 ubox
13 39 0.165441750 ubox
13 41 0.005338944 ubox
13 42 0.016374414 ubox
13 44 0.006739724 ubox
13 62 0.188343990 ubox
13 68 0.007025881 ubox
13 74 0.905595708 ubox
14 61 0.188265084 ubox
15 32 0.312463329 ubox
15 33 0.012317455 ubox
15 35 0.013862777 ubox
15 44 0.010442206 ubox
15 59 0.008872258 ubox
15 60 0.187794524 ubox
17 30 0.347583152 ubox
17 32 0.266807114 ubox
17 35 0.875498630 ubox
17 44 0.003544367 ubox
17 58 0.003687788 ubox
17 59 0.028477311 ubox
18 29 0.357543737 ubox
18 31 0.269110932 ubox
18 34 0.893388243 ubox
18 45 0.006837432 ubox
18 56 0.003174301 ubox
19 28 0.356431538 ubox
19 30 0.268805813 ubox
19 32 0.009344572 ubox
19 33 0.889852959 ubox
19 35 0.012524815 ubox
19 44 0.006825078 ubox
19 55 0.003832164 ubox
20 27 0.354311958 ubox
20 28 0.266313796 ubox
20 30 0.004140495 ubox
20 32 0.886180496 ubox
20 33 0.082496465 ubox
20 54 0.003826851 ubox
21 27 0.267763157 ubox
21 28 0.038303144 ubox
21 30 0.882306925 ubox
21 32 0.116558161 ubox
21 35 0.017382441 ubox
22 26 0.166145285 ubox
22 29 0.883075270 ubox
22 31 0.141460684 ubox
22 34 0.017596118 ubox
22 52 0.003901421 ubox
23 27 0.021577661 ubox
23 28 0.879721437 ubox
23 30 0.141118640 ubox
23 33 0.017596138 ubox
23 51 0.003890245 ubox
23 55 0.003384351 ubox
24 28 0.042757236 ubox
24 30 0.006674163 ubox
24 32 0.017583573 ubox
24 54 0.003369130 ubox
27 53 0.003205724 ubox
28 45 0.005311184 ubox
28 52 0.003465592 ubox
29 44 0.005715056 ubox
29 51 0.003467524 ubox
30 43 0.005775741 ubox
30 45 0.078255479 ubox
30 50 0.003264968 ubox
30 69 0.005568050 ubox
31 44 0.080393725 ubox
31 47 0.008401077 ubox
31 48 0.004519105 ubox
31 68 0.005665511 ubox
32 40 0.005010085 ubox
32 43 0.080363133 ubox
32 45 0.008157172 ubox
32 67 0.005667072 ubox
33 40 0.010237889 ubox
33 43 0.003760298 ubox
33 45 0.438712008 ubox
33 66 0.005656905 ubox
34 44 0.439447191 ubox
35 40 0.052345447 ubox
35 43 0.435557772 ubox
35 45 0.018590129 ubox
37 50 0.003532766 ubox
37 61 0.006060645 ubox
38 57 0.014055775 ubox
39 56 0.015116224 ubox
40 44 0.017071318 ubox
40 47 0.022174513 ubox
40 48 0.006372193 ubox
40 51 0.007456461 ubox
40 54 0.006301375 ubox
40 55 0.015161220 ubox
40 58 0.197045250 ubox
40 59 0.009676334 ubox
40 79 0.005674404 ubox
41 50 0.007717035 ubox
41 53 0.005993238 ubox
41 57 0.207759709 ubox
41 77 0.008116439 ubox
42 53 0.007687022 ubox
42 56 0.210653273 ubox
42 57 0.008276692 ubox
42 76 0.008934224 ubox
42 77 0.006280535 ubox
43 47 0.006606606 ubox
43 48 0.021126035 ubox
43 54 0.005464391 ubox
43 55 0.210787022 ubox
43 79 0.032337012 ubox
44 52 0.051924697 ubox
44 56 0.004261880 ubox
44 73 0.057071527 ubox
44 75 0.050841683 ubox
44 76 0.006201085 ubox
44 78 0.033975002 ubox
45 51 0.052013291 ubox
45 54 0.211863648 ubox
45 55 0.003321123 ubox
46 50 0.042159077 ubox
46 53 0.212247920 ubox
46 76 0.020143442 ubox
46 77 0.008836696 ubox
47 52 0.212015892 ubox
47 71 0.008229010 ubox
47 72 0.424109967 ubox
47 73 0.874187092 ubox
47 75 0.017570232 ubox
47 76 0.005932695 ubox
47 78 0.004876039 ubox
48 71 0.426151237 ubox
48 72 0.873676457 ubox
48 73 0.016297242 ubox
48 75 0.005906599 ubox
48 77 0.004875087 ubox
48 78 0.003754030 ubox
49 76 0.004845516 ubox
49 77 0.003713082 ubox
50 70 0.964667578 ubox
51 69 0.975429610 ubox
52 68 0.953441130 ubox
53 68 0.207363097 ubox
53 74 0.004937225 ubox
54 66 0.006763811 ubox
54 67 0.976160348 ubox
54 72 0.015007326 ubox
54 73 0.008484090 ubox
54 76 0.003377190 ubox
55 66 0.976669428 ubox
55 71 0.015352387 ubox
55 72 0.008379367 ubox
55 75 0.006591685 ubox
56 65 0.976233465 ubox
56 70 0.015090764 ubox
56 74 0.004708451 ubox
57 64 0.976048662 ubox
57 68 0.011350323 ubox
57 70 0.008282165 ubox
57 74 0.025517256 ubox
58 63 0.975940018 ubox
58 67 0.012638865 ubox
58 69 0.008927630 ubox
58 73 0.080710014 ubox
59 63 0.007514171 ubox
59 66 0.012907356 ubox
59 67 0.038501996 ubox
59 71 0.003358415 ubox
59 72 0.093096712 ubox
59 73 0.007403163 ubox
60 66 0.038516703 ubox
60 69 0.005622574 ubox
60 71 0.093192699 ubox
60 72 0.006773608 ubox
61 65 0.034702115 ubox
61 68 0.005565130 ubox
61 70 0.091917486 ubox
63 68 0.063567482 ubox
68 73 0.006135571 ubox
73 79 0.004861344 ubox
75 79 0.004878892 ubox
9 78 0.9500000 lbox
10 77 0.9500000 lbox
11 76 0.9500000 lbox
12 75 0.9500000 lbox
13 74 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
47 73 0.9500000 lbox
48 72 0.9500000 lbox
50 70 0.9500000 lbox
51 69 0.9500000 lbox
52 68 0.9500000 lbox
54 67 0.9500000 lbox
55 66 0.9500000 lbox
56 65 0.9500000 lbox
57 64 0.9500000 lbox
58 63 0.9500000 lbox
showpage
end
%%EOF
