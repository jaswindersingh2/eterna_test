%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (456)
} def

/sequence { (\
GGAAAAGACUACGGCAGACAAAAGUCGUCAAAAGACGCCAAAAGUAUUCAAAAGAAUACGUAGUCAAAGCGAUAGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 65 0.003583327 ubox
1 70 0.114272015 ubox
1 73 0.008155726 ubox
1 78 0.066027169 ubox
2 65 0.005233109 ubox
2 70 0.158139245 ubox
2 77 0.057458876 ubox
2 78 0.095734664 ubox
3 64 0.004032747 ubox
3 76 0.050680620 ubox
3 77 0.090676080 ubox
4 76 0.073243767 ubox
4 77 0.004883327 ubox
5 73 0.003486501 ubox
5 76 0.004021165 ubox
5 77 0.005076527 ubox
6 73 0.014033329 ubox
6 76 0.004960973 ubox
6 77 0.005843115 ubox
7 65 0.990518894 ubox
7 70 0.004230023 ubox
7 76 0.004570062 ubox
7 77 0.108003421 ubox
7 78 0.044912166 ubox
8 64 0.991693449 ubox
8 76 0.120443521 ubox
8 77 0.031764680 ubox
9 63 0.991962948 ubox
9 75 0.125911422 ubox
10 62 0.991665019 ubox
10 74 0.125840861 ubox
11 28 0.005779494 ubox
11 61 0.991445429 ubox
11 73 0.125120425 ubox
12 27 0.007327792 ubox
12 60 0.990265283 ubox
12 71 0.033009862 ubox
13 19 0.057171769 ubox
13 26 0.113903728 ubox
13 29 0.138006879 ubox
13 38 0.003881288 ubox
13 39 0.946673147 ubox
13 59 0.103641784 ubox
13 70 0.030130623 ubox
14 19 0.020492018 ubox
14 25 0.121539043 ubox
14 26 0.004464782 ubox
14 28 0.138901420 ubox
14 29 0.010184824 ubox
14 38 0.947892475 ubox
14 39 0.004373062 ubox
14 45 0.004287705 ubox
14 70 0.121892525 ubox
15 24 0.122215825 ubox
15 27 0.138585191 ubox
15 37 0.946450833 ubox
15 44 0.004742847 ubox
15 60 0.003398947 ubox
15 69 0.122476299 ubox
16 25 0.007687615 ubox
16 28 0.014088777 ubox
17 25 0.004710917 ubox
17 26 0.963037785 ubox
17 29 0.040573776 ubox
17 36 0.010895998 ubox
17 39 0.003570499 ubox
17 65 0.119250356 ubox
18 25 0.964466809 ubox
18 28 0.040709430 ubox
18 45 0.011487294 ubox
18 64 0.119293369 ubox
19 24 0.962890718 ubox
19 27 0.040694857 ubox
19 34 0.007128657 ubox
19 44 0.013269003 ubox
19 63 0.119132499 ubox
20 25 0.006645142 ubox
20 61 0.010848366 ubox
21 25 0.005563233 ubox
21 61 0.016297318 ubox
22 61 0.003799019 ubox
23 61 0.003806523 ubox
24 29 0.007310399 ubox
24 36 0.118336607 ubox
24 38 0.092744446 ubox
24 39 0.125371307 ubox
25 35 0.118559664 ubox
25 37 0.019536617 ubox
25 40 0.005049892 ubox
25 41 0.003588581 ubox
26 34 0.118576033 ubox
26 37 0.186075091 ubox
27 36 0.978975047 ubox
27 38 0.010318796 ubox
27 39 0.003425617 ubox
28 32 0.007794949 ubox
28 33 0.008131741 ubox
28 34 0.003839780 ubox
28 35 0.980058105 ubox
28 37 0.009924352 ubox
29 34 0.978795451 ubox
29 37 0.003769242 ubox
34 38 0.008007030 ubox
34 39 0.034479649 ubox
34 65 0.016532131 ubox
35 45 0.006521834 ubox
35 64 0.016548501 ubox
36 44 0.007681582 ubox
36 63 0.016535149 ubox
37 45 0.015049453 ubox
37 61 0.007859714 ubox
37 64 0.009553525 ubox
37 65 0.007402737 ubox
38 44 0.017892536 ubox
38 60 0.008453663 ubox
38 63 0.010359325 ubox
39 44 0.015861929 ubox
39 60 0.005813829 ubox
39 63 0.007554718 ubox
40 61 0.005160592 ubox
40 64 0.003165469 ubox
41 61 0.012775533 ubox
42 61 0.022230938 ubox
43 61 0.014725858 ubox
44 49 0.003635839 ubox
44 59 0.992546978 ubox
45 58 0.998273462 ubox
46 57 0.999178668 ubox
47 55 0.003516690 ubox
47 56 0.998871763 ubox
48 54 0.004381898 ubox
48 55 0.999185797 ubox
49 54 0.997856615 ubox
60 65 0.008575179 ubox
60 70 0.003529494 ubox
61 69 0.003486609 ubox
63 70 0.003690633 ubox
63 73 0.005257212 ubox
64 69 0.003511386 ubox
64 72 0.006084535 ubox
65 71 0.006711538 ubox
66 73 0.009092767 ubox
66 76 0.003705144 ubox
66 77 0.018302291 ubox
67 73 0.008391038 ubox
67 76 0.016130646 ubox
67 77 0.032729558 ubox
68 73 0.018941241 ubox
68 76 0.029456136 ubox
68 77 0.407818097 ubox
69 73 0.005684493 ubox
69 76 0.481616750 ubox
69 77 0.012276799 ubox
69 78 0.025260564 ubox
70 75 0.488113878 ubox
70 79 0.675706121 ubox
71 76 0.009255210 ubox
71 77 0.014571462 ubox
71 78 0.738120975 ubox
72 76 0.016439609 ubox
72 77 0.721871316 ubox
73 79 0.004646601 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
70 79 0.9500000 lbox
71 78 0.9500000 lbox
72 77 0.9500000 lbox
showpage
end
%%EOF
