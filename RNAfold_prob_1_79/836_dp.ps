%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (836)
} def

/sequence { (\
GGAAAGCACGGACGAAAAAGCCAAAAGCCGGCCGAAAGAGCCAAGGCAGGUAAAAAACCAAGCAAAAAUGUGUAAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.010598603 ubox
1 9 0.010426276 ubox
1 22 0.008792470 ubox
1 29 0.003433839 ubox
1 59 0.006611415 ubox
1 76 0.006315645 ubox
1 77 0.008122842 ubox
1 78 0.857394485 ubox
2 7 0.005730134 ubox
2 9 0.005056009 ubox
2 21 0.008771785 ubox
2 28 0.003429820 ubox
2 58 0.006580749 ubox
2 76 0.010560016 ubox
2 77 0.857974072 ubox
2 78 0.445540637 ubox
3 76 0.848888293 ubox
3 77 0.443674774 ubox
4 73 0.006417195 ubox
4 76 0.414514313 ubox
4 77 0.029312851 ubox
5 73 0.020826062 ubox
5 76 0.033782887 ubox
5 77 0.006730255 ubox
6 21 0.010363334 ubox
6 28 0.003478412 ubox
6 32 0.007392178 ubox
6 63 0.034678147 ubox
6 71 0.025308393 ubox
6 73 0.987246337 ubox
6 76 0.003199784 ubox
6 78 0.003764597 ubox
7 14 0.005381307 ubox
7 20 0.010413639 ubox
7 27 0.003496483 ubox
7 31 0.007417888 ubox
7 62 0.034681918 ubox
7 70 0.025646887 ubox
7 72 0.996175815 ubox
8 69 0.022316139 ubox
8 71 0.994719301 ubox
8 73 0.020214514 ubox
9 14 0.005783010 ubox
9 30 0.010193962 ubox
9 34 0.004269658 ubox
9 70 0.993273344 ubox
9 72 0.020844953 ubox
9 79 0.013539373 ubox
10 21 0.024814475 ubox
10 22 0.955326976 ubox
10 29 0.037390477 ubox
10 33 0.007656421 ubox
10 42 0.024814305 ubox
10 59 0.021424321 ubox
10 63 0.005944898 ubox
10 69 0.214861323 ubox
10 71 0.005973623 ubox
10 73 0.004887333 ubox
10 78 0.013950326 ubox
11 21 0.957054885 ubox
11 22 0.079775547 ubox
11 28 0.037427404 ubox
11 29 0.003853848 ubox
11 32 0.007508669 ubox
11 41 0.024855336 ubox
11 58 0.021557050 ubox
11 59 0.004931623 ubox
11 63 0.017211253 ubox
11 69 0.007109451 ubox
11 77 0.013330670 ubox
11 78 0.003444424 ubox
12 69 0.006474989 ubox
12 71 0.007432392 ubox
12 73 0.003657293 ubox
12 76 0.011890813 ubox
12 77 0.003205668 ubox
13 20 0.930806264 ubox
13 27 0.033202653 ubox
13 30 0.009056017 ubox
13 34 0.007844744 ubox
13 38 0.005890943 ubox
13 40 0.013149850 ubox
13 62 0.017803740 ubox
13 70 0.008166154 ubox
13 72 0.004029512 ubox
13 79 0.024425721 ubox
14 21 0.040426282 ubox
14 22 0.040052136 ubox
14 29 0.009580464 ubox
14 33 0.007983805 ubox
14 58 0.005682749 ubox
14 59 0.003730667 ubox
14 63 0.034566832 ubox
14 69 0.008282832 ubox
14 78 0.025682780 ubox
15 77 0.025345712 ubox
16 76 0.022353040 ubox
19 73 0.004078847 ubox
20 28 0.039064002 ubox
20 29 0.005323563 ubox
20 32 0.039752764 ubox
20 33 0.003267066 ubox
20 47 0.031380587 ubox
20 51 0.046540162 ubox
20 58 0.015439654 ubox
20 59 0.015412920 ubox
20 63 0.088961174 ubox
20 71 0.006480005 ubox
20 73 0.010133183 ubox
21 27 0.039111618 ubox
21 31 0.039983590 ubox
21 46 0.031416001 ubox
21 50 0.048020692 ubox
21 62 0.088704101 ubox
21 70 0.006389134 ubox
21 72 0.010346771 ubox
22 27 0.006268069 ubox
22 30 0.039979345 ubox
22 45 0.031357133 ubox
22 49 0.047941017 ubox
22 62 0.007731457 ubox
22 70 0.010001267 ubox
23 51 0.008698135 ubox
23 69 0.009734138 ubox
24 51 0.003394815 ubox
24 69 0.004583567 ubox
25 51 0.004244639 ubox
25 69 0.004537072 ubox
26 51 0.004460303 ubox
26 69 0.004546935 ubox
27 41 0.017521965 ubox
27 47 0.985572964 ubox
27 51 0.093836104 ubox
27 63 0.013082644 ubox
28 40 0.017543309 ubox
28 45 0.015182873 ubox
28 46 0.986602987 ubox
28 50 0.096041694 ubox
28 62 0.013006351 ubox
29 38 0.017324407 ubox
29 45 0.981519311 ubox
29 49 0.095709114 ubox
30 41 0.007198978 ubox
30 42 0.988084404 ubox
31 41 0.993213093 ubox
31 42 0.022750596 ubox
31 47 0.099751824 ubox
32 38 0.003789950 ubox
32 40 0.990239431 ubox
32 46 0.100142460 ubox
33 38 0.926585367 ubox
33 40 0.079090812 ubox
33 45 0.100130146 ubox
33 79 0.005376690 ubox
34 41 0.011727386 ubox
34 42 0.009602828 ubox
34 78 0.005834929 ubox
35 77 0.005722886 ubox
36 76 0.005127705 ubox
38 42 0.006868812 ubox
40 47 0.030774130 ubox
40 51 0.006903200 ubox
41 46 0.030795745 ubox
41 50 0.007080149 ubox
42 49 0.007076910 ubox
42 70 0.003460884 ubox
43 69 0.003874765 ubox
45 59 0.006339852 ubox
45 63 0.021359477 ubox
46 58 0.006318881 ubox
46 63 0.107331585 ubox
47 62 0.107579605 ubox
48 69 0.005537556 ubox
49 58 0.044597992 ubox
49 59 0.984983287 ubox
49 63 0.026625252 ubox
50 58 0.985919346 ubox
50 59 0.021718354 ubox
50 63 0.040625469 ubox
50 69 0.004640895 ubox
51 55 0.006855172 ubox
51 56 0.048207463 ubox
51 57 0.962942776 ubox
51 60 0.004959385 ubox
51 61 0.019448243 ubox
51 62 0.040024995 ubox
51 68 0.004705166 ubox
57 73 0.006126450 ubox
58 62 0.009670666 ubox
58 72 0.006345746 ubox
59 70 0.006971180 ubox
60 69 0.038081155 ubox
60 73 0.008468612 ubox
61 69 0.066111718 ubox
61 71 0.003576555 ubox
61 73 0.004137560 ubox
62 69 0.027089063 ubox
62 71 0.053508116 ubox
62 73 0.050920493 ubox
63 70 0.060616680 ubox
63 72 0.052121920 ubox
64 69 0.063193523 ubox
64 71 0.047639064 ubox
65 69 0.027471032 ubox
67 77 0.008234919 ubox
68 76 0.009329093 ubox
69 75 0.009543916 ubox
70 78 0.004989953 ubox
71 79 0.003591390 ubox
72 78 0.006521693 ubox
1 78 0.9500000 lbox
2 77 0.9500000 lbox
3 76 0.9500000 lbox
6 73 0.9500000 lbox
7 72 0.9500000 lbox
8 71 0.9500000 lbox
9 70 0.9500000 lbox
10 22 0.9500000 lbox
11 21 0.9500000 lbox
13 20 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 42 0.9500000 lbox
31 41 0.9500000 lbox
32 40 0.9500000 lbox
33 38 0.9500000 lbox
49 59 0.9500000 lbox
50 58 0.9500000 lbox
51 57 0.9500000 lbox
showpage
end
%%EOF
