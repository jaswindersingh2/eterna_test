%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (790)
} def

/sequence { (\
GGAAAACAAUGAGGUCAAAAGGAAAAAACUACGAGAGAAAACUCACGUAGACCGACCACAUUGAAAAAUUUGCGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.035869100 ubox
1 69 0.044449303 ubox
1 70 0.022730859 ubox
1 71 0.065112087 ubox
1 73 0.346893406 ubox
1 75 0.062804483 ubox
1 76 0.033091130 ubox
1 77 0.003484926 ubox
1 78 0.093147178 ubox
2 7 0.009827378 ubox
2 69 0.029432225 ubox
2 70 0.077809094 ubox
2 71 0.079982363 ubox
2 73 0.101215025 ubox
2 75 0.038083244 ubox
2 76 0.003815931 ubox
2 77 0.091880547 ubox
2 78 0.116358923 ubox
3 69 0.076214891 ubox
3 70 0.084639049 ubox
3 71 0.341245643 ubox
3 76 0.088247840 ubox
3 77 0.115769960 ubox
4 69 0.080873180 ubox
4 70 0.340741003 ubox
4 71 0.113871815 ubox
4 76 0.104486452 ubox
4 77 0.008020333 ubox
5 69 0.318503435 ubox
5 70 0.136286351 ubox
5 71 0.042381945 ubox
5 76 0.009413943 ubox
5 77 0.010126391 ubox
6 62 0.003171285 ubox
6 69 0.137647215 ubox
6 70 0.043225262 ubox
6 71 0.022034494 ubox
6 76 0.012036516 ubox
6 77 0.004308442 ubox
7 63 0.989993455 ubox
7 72 0.046765946 ubox
7 74 0.006142579 ubox
8 62 0.994777423 ubox
8 70 0.009062865 ubox
8 71 0.046062347 ubox
9 61 0.995571224 ubox
9 62 0.004134359 ubox
9 69 0.011137355 ubox
9 70 0.043161134 ubox
10 60 0.996149578 ubox
10 68 0.012447568 ubox
10 79 0.037470783 ubox
11 59 0.993855883 ubox
11 70 0.004410464 ubox
11 77 0.004040405 ubox
11 78 0.060797898 ubox
12 69 0.004785406 ubox
12 76 0.004776993 ubox
12 77 0.060777812 ubox
13 53 0.011263036 ubox
13 57 0.995725496 ubox
13 75 0.005175929 ubox
13 76 0.060708532 ubox
14 52 0.011299235 ubox
14 56 0.996940462 ubox
14 57 0.003288340 ubox
14 75 0.060751398 ubox
15 22 0.007249280 ubox
15 23 0.012727102 ubox
15 51 0.011257441 ubox
15 54 0.004250225 ubox
15 55 0.996475655 ubox
15 64 0.048495437 ubox
15 74 0.057931134 ubox
16 21 0.018337591 ubox
16 22 0.019141758 ubox
16 50 0.009291830 ubox
16 54 0.995056330 ubox
16 63 0.051452171 ubox
16 72 0.051865951 ubox
16 74 0.004894303 ubox
17 62 0.051051040 ubox
17 71 0.051543521 ubox
18 61 0.046717703 ubox
18 62 0.004337155 ubox
18 70 0.049930750 ubox
18 71 0.014757906 ubox
19 61 0.005583644 ubox
19 62 0.004022157 ubox
19 69 0.042769361 ubox
19 70 0.015219592 ubox
19 71 0.005683033 ubox
20 30 0.043914909 ubox
20 61 0.005432184 ubox
20 62 0.003337259 ubox
20 69 0.014780708 ubox
20 70 0.005683869 ubox
21 29 0.059161100 ubox
21 30 0.023056454 ubox
21 52 0.041744245 ubox
21 53 0.824884227 ubox
21 56 0.003885998 ubox
21 57 0.057206926 ubox
21 59 0.010204921 ubox
21 69 0.004102835 ubox
21 73 0.003696361 ubox
22 29 0.030955491 ubox
22 52 0.824218895 ubox
22 53 0.056657673 ubox
22 56 0.057221629 ubox
22 57 0.015530106 ubox
23 30 0.003257568 ubox
23 71 0.003580078 ubox
24 70 0.003517692 ubox
25 62 0.003389508 ubox
26 61 0.003171996 ubox
26 62 0.005493900 ubox
27 61 0.005136025 ubox
27 62 0.007444584 ubox
28 48 0.005127631 ubox
28 61 0.007414744 ubox
29 47 0.005206917 ubox
29 50 0.993873455 ubox
30 49 0.997977417 ubox
30 50 0.003592943 ubox
31 48 0.999510824 ubox
32 47 0.999842751 ubox
33 44 0.037272357 ubox
33 46 0.996002373 ubox
34 43 0.044351515 ubox
35 42 0.045166114 ubox
35 44 0.995192296 ubox
36 43 0.997054590 ubox
37 42 0.988738486 ubox
37 44 0.037890661 ubox
38 43 0.035480873 ubox
53 63 0.027464842 ubox
54 59 0.007939110 ubox
54 62 0.027193553 ubox
55 61 0.025483632 ubox
56 63 0.004812387 ubox
56 74 0.003262833 ubox
57 63 0.015744767 ubox
57 72 0.008540234 ubox
58 62 0.012860479 ubox
58 71 0.008751854 ubox
59 63 0.004423771 ubox
59 72 0.007565425 ubox
60 69 0.019355373 ubox
60 71 0.007329966 ubox
61 67 0.003964748 ubox
61 68 0.023045974 ubox
62 66 0.003841186 ubox
62 67 0.024152539 ubox
62 68 0.006815030 ubox
62 72 0.003754722 ubox
62 74 0.004522092 ubox
62 79 0.013788780 ubox
63 70 0.005481975 ubox
63 71 0.010628058 ubox
63 73 0.010104727 ubox
63 75 0.004324234 ubox
63 78 0.043339585 ubox
64 69 0.017267665 ubox
64 70 0.029152876 ubox
64 71 0.068297024 ubox
64 76 0.007949567 ubox
64 77 0.046712514 ubox
65 69 0.024473392 ubox
65 70 0.062399006 ubox
65 71 0.037664439 ubox
65 76 0.043922925 ubox
65 77 0.019879437 ubox
66 70 0.030561559 ubox
66 71 0.026459587 ubox
66 76 0.020506965 ubox
66 77 0.038931702 ubox
67 71 0.013856931 ubox
67 76 0.042502502 ubox
67 77 0.023683631 ubox
68 76 0.024543803 ubox
68 77 0.032030846 ubox
69 74 0.015000539 ubox
69 79 0.004698701 ubox
70 74 0.010958609 ubox
70 79 0.009068910 ubox
71 79 0.032786101 ubox
72 76 0.007794720 ubox
72 77 0.011526934 ubox
72 78 0.055230582 ubox
73 79 0.099738103 ubox
74 78 0.101963480 ubox
75 79 0.014322605 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
