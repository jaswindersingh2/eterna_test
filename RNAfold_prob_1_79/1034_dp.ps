%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1034)
} def

/sequence { (\
GGAAAAAUAUAGUAUCAAAAGCAAAAAAAUAUGAGUGAAAACACACAUAUAGCGAUAGUAUAUAAAAAUAAAUAUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.004758839 ubox
1 16 0.006647355 ubox
1 22 0.005604161 ubox
1 63 0.003631408 ubox
1 69 0.068554331 ubox
1 73 0.007423549 ubox
1 77 0.006136738 ubox
1 78 0.192160570 ubox
2 15 0.005265968 ubox
2 16 0.011831138 ubox
2 63 0.006895498 ubox
2 69 0.028121628 ubox
2 73 0.003319977 ubox
2 76 0.009442240 ubox
2 77 0.191246764 ubox
2 78 0.263627536 ubox
3 8 0.003231572 ubox
3 15 0.011358029 ubox
3 63 0.009605797 ubox
3 69 0.018877649 ubox
3 73 0.003522517 ubox
3 75 0.009814593 ubox
3 76 0.189636889 ubox
3 77 0.262375321 ubox
4 13 0.004506687 ubox
4 63 0.012546284 ubox
4 69 0.013326712 ubox
4 73 0.005790108 ubox
4 75 0.175138544 ubox
4 76 0.256682767 ubox
4 77 0.033638822 ubox
5 13 0.003824961 ubox
5 63 0.020090997 ubox
5 69 0.012058006 ubox
5 73 0.020090504 ubox
5 75 0.236806716 ubox
5 76 0.042921350 ubox
5 77 0.027202264 ubox
6 63 0.048147017 ubox
6 69 0.026164660 ubox
6 73 0.110830256 ubox
6 75 0.049257735 ubox
6 76 0.032996873 ubox
6 77 0.006215653 ubox
7 13 0.004637793 ubox
7 15 0.007521343 ubox
7 61 0.013494748 ubox
7 63 0.941158278 ubox
7 69 0.009624438 ubox
7 73 0.068889027 ubox
7 75 0.034206409 ubox
7 76 0.004700559 ubox
8 12 0.004400986 ubox
8 14 0.008065299 ubox
8 60 0.013828949 ubox
8 62 0.985389036 ubox
8 64 0.020915790 ubox
8 65 0.004259245 ubox
8 66 0.003185642 ubox
8 68 0.006813643 ubox
8 70 0.010945794 ubox
8 71 0.007277784 ubox
8 72 0.048420276 ubox
8 74 0.034112338 ubox
9 13 0.007227069 ubox
9 59 0.013647107 ubox
9 61 0.993120461 ubox
9 63 0.021448981 ubox
9 69 0.010843564 ubox
9 73 0.032237013 ubox
10 24 0.004224429 ubox
10 58 0.012974416 ubox
10 60 0.994117002 ubox
10 62 0.020233286 ubox
10 64 0.004649996 ubox
10 65 0.003220480 ubox
10 68 0.009165613 ubox
10 70 0.016684888 ubox
10 72 0.028077470 ubox
10 74 0.003646834 ubox
11 59 0.991053827 ubox
11 61 0.016874443 ubox
11 63 0.004784300 ubox
11 69 0.016803609 ubox
11 73 0.003521800 ubox
11 76 0.004565313 ubox
12 16 0.004602395 ubox
12 22 0.032270411 ubox
12 59 0.004162411 ubox
12 61 0.016614441 ubox
12 63 0.016935036 ubox
12 69 0.004714297 ubox
12 75 0.005810430 ubox
13 20 0.003343859 ubox
13 21 0.031839580 ubox
13 57 0.991237636 ubox
13 58 0.003319969 ubox
13 60 0.019104343 ubox
13 62 0.017431861 ubox
13 64 0.004964994 ubox
13 67 0.003340465 ubox
13 68 0.004761400 ubox
13 70 0.007019235 ubox
13 74 0.006012142 ubox
14 56 0.994530262 ubox
14 59 0.019346133 ubox
14 61 0.017453538 ubox
14 63 0.005129493 ubox
14 69 0.007211551 ubox
14 73 0.005961558 ubox
15 19 0.005062850 ubox
15 20 0.003341979 ubox
15 34 0.004153460 ubox
15 54 0.004238779 ubox
15 55 0.994372028 ubox
15 58 0.018053242 ubox
15 60 0.016832756 ubox
15 62 0.004839087 ubox
15 68 0.006836775 ubox
15 72 0.005574299 ubox
16 21 0.009328140 ubox
16 33 0.004544623 ubox
16 52 0.006414952 ubox
16 54 0.993279614 ubox
16 58 0.014800222 ubox
17 32 0.004346758 ubox
17 50 0.013303955 ubox
17 56 0.006229995 ubox
18 30 0.003439043 ubox
18 50 0.025427054 ubox
18 56 0.008638774 ubox
19 30 0.003889752 ubox
19 50 0.021629579 ubox
19 61 0.005281125 ubox
20 30 0.008400268 ubox
20 32 0.003788581 ubox
20 50 0.038401999 ubox
20 59 0.003445118 ubox
21 30 0.007145244 ubox
21 50 0.023410605 ubox
21 53 0.845124115 ubox
21 59 0.020012585 ubox
22 33 0.041968662 ubox
22 52 0.844674663 ubox
22 54 0.005497470 ubox
22 58 0.020334607 ubox
23 30 0.010117688 ubox
23 32 0.041293353 ubox
23 48 0.003516914 ubox
23 50 0.101033391 ubox
23 56 0.005367570 ubox
24 30 0.009864529 ubox
24 32 0.004135055 ubox
24 48 0.004927908 ubox
24 50 0.208361428 ubox
24 56 0.005765228 ubox
25 30 0.012920541 ubox
25 32 0.006410484 ubox
25 48 0.005835082 ubox
25 50 0.067428964 ubox
26 30 0.006375741 ubox
26 32 0.004934160 ubox
26 48 0.011608947 ubox
26 50 0.093500700 ubox
27 32 0.005374387 ubox
27 48 0.008320910 ubox
27 50 0.041723609 ubox
27 77 0.003292133 ubox
28 32 0.003283622 ubox
28 48 0.007201001 ubox
28 50 0.060678984 ubox
28 76 0.003645691 ubox
29 48 0.016236200 ubox
29 50 0.823092555 ubox
29 75 0.003695955 ubox
30 45 0.003729703 ubox
30 47 0.015899223 ubox
30 49 0.907541867 ubox
30 51 0.396767651 ubox
30 52 0.004648059 ubox
30 74 0.003705113 ubox
31 48 0.912050658 ubox
31 50 0.400801564 ubox
31 73 0.003673774 ubox
32 43 0.009792976 ubox
32 45 0.022807677 ubox
32 47 0.912716225 ubox
32 49 0.401061004 ubox
32 51 0.011289132 ubox
32 72 0.003530796 ubox
33 42 0.010148422 ubox
33 44 0.023476118 ubox
33 46 0.910269440 ubox
33 48 0.397114146 ubox
33 50 0.011041214 ubox
34 48 0.012902447 ubox
35 42 0.077890070 ubox
35 44 0.908667628 ubox
35 46 0.401698215 ubox
35 48 0.014296838 ubox
36 41 0.077251637 ubox
36 43 0.910506087 ubox
36 45 0.402480056 ubox
36 47 0.015430779 ubox
37 42 0.905131340 ubox
37 44 0.401145075 ubox
37 46 0.015573755 ubox
46 52 0.010421934 ubox
47 63 0.008887207 ubox
48 62 0.009502389 ubox
48 64 0.005403753 ubox
49 61 0.009720976 ubox
49 63 0.006088181 ubox
50 60 0.009777147 ubox
50 62 0.006390767 ubox
51 59 0.008114486 ubox
51 61 0.006734191 ubox
52 59 0.039729666 ubox
52 78 0.012714210 ubox
53 58 0.041182280 ubox
53 79 0.065523482 ubox
54 76 0.017243627 ubox
54 78 0.071313468 ubox
55 63 0.005037391 ubox
55 75 0.018443653 ubox
55 77 0.069532187 ubox
56 62 0.005191213 ubox
56 64 0.004544731 ubox
56 74 0.019103005 ubox
57 61 0.004631541 ubox
57 63 0.004778681 ubox
57 73 0.018894620 ubox
57 75 0.007841377 ubox
57 76 0.060781022 ubox
58 69 0.004341280 ubox
58 73 0.008400532 ubox
58 75 0.069725217 ubox
58 76 0.003616814 ubox
58 78 0.004257700 ubox
59 68 0.004446111 ubox
59 70 0.017117171 ubox
59 72 0.009088874 ubox
59 74 0.070205269 ubox
60 69 0.018321273 ubox
60 73 0.069983943 ubox
60 75 0.015685834 ubox
61 68 0.017867917 ubox
61 70 0.025046534 ubox
61 71 0.003338632 ubox
61 72 0.066679134 ubox
61 74 0.019488345 ubox
62 69 0.029343402 ubox
62 73 0.021621896 ubox
62 75 0.014105921 ubox
63 67 0.004578822 ubox
63 68 0.028964688 ubox
63 70 0.055565869 ubox
63 71 0.008826635 ubox
63 72 0.022771432 ubox
63 74 0.023137903 ubox
63 79 0.003932759 ubox
64 69 0.056570719 ubox
64 73 0.033040370 ubox
64 75 0.007668536 ubox
64 76 0.016557231 ubox
64 77 0.061270360 ubox
65 69 0.016300166 ubox
65 73 0.018751810 ubox
65 75 0.017671651 ubox
65 76 0.070189955 ubox
65 77 0.051655930 ubox
66 73 0.030897514 ubox
66 75 0.070346251 ubox
66 76 0.056150279 ubox
66 77 0.170130470 ubox
67 73 0.025394867 ubox
67 75 0.052917467 ubox
67 76 0.189311161 ubox
67 77 0.046536700 ubox
68 73 0.025863964 ubox
68 75 0.189650413 ubox
68 76 0.050742600 ubox
68 77 0.033102831 ubox
69 74 0.176916304 ubox
69 79 0.007522225 ubox
70 75 0.015144813 ubox
70 76 0.021405846 ubox
70 77 0.034959316 ubox
71 75 0.019252005 ubox
71 76 0.035115100 ubox
71 77 0.024724708 ubox
72 76 0.020986003 ubox
72 77 0.030312528 ubox
73 79 0.009693577 ubox
75 79 0.006469539 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
