%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (884)
} def

/sequence { (\
GGAAAUCAACAACAGUUGCAAGGAAAACCAGCAAAAGCAAAGCAAACAAAGUUGAACCAAAAGGAAGAAUGCUUGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.003698610 ubox
1 7 0.029128932 ubox
1 10 0.053761251 ubox
1 13 0.021149838 ubox
1 19 0.008173950 ubox
1 29 0.022475549 ubox
1 38 0.003494717 ubox
1 43 0.004329092 ubox
1 47 0.005729414 ubox
1 57 0.010365956 ubox
1 58 0.921793045 ubox
1 72 0.005430403 ubox
1 73 0.005014208 ubox
1 78 0.056935723 ubox
2 6 0.018989446 ubox
2 7 0.019208144 ubox
2 10 0.009171071 ubox
2 13 0.005843448 ubox
2 19 0.008142782 ubox
2 28 0.022445509 ubox
2 57 0.921996707 ubox
2 58 0.039778469 ubox
2 72 0.005755157 ubox
2 77 0.053260370 ubox
2 78 0.080861781 ubox
3 17 0.003965707 ubox
3 70 0.004374977 ubox
3 74 0.003378609 ubox
3 76 0.048254342 ubox
3 77 0.078734441 ubox
4 16 0.003465607 ubox
4 17 0.005992278 ubox
4 53 0.003665585 ubox
4 73 0.003277436 ubox
4 74 0.006602991 ubox
4 76 0.065761564 ubox
4 77 0.007610712 ubox
5 16 0.007656552 ubox
5 52 0.003794221 ubox
5 73 0.006071054 ubox
5 74 0.007118080 ubox
5 76 0.009054829 ubox
6 15 0.007892905 ubox
6 20 0.021936410 ubox
6 21 0.006422270 ubox
6 22 0.005930177 ubox
6 23 0.005073462 ubox
6 24 0.013492627 ubox
6 51 0.003603913 ubox
6 55 0.964812460 ubox
6 56 0.026989066 ubox
6 75 0.008469150 ubox
6 79 0.004006804 ubox
7 15 0.007404879 ubox
7 18 0.084648159 ubox
7 22 0.004042478 ubox
7 23 0.012977056 ubox
7 42 0.004170395 ubox
7 54 0.978436038 ubox
7 67 0.003286198 ubox
7 71 0.004398168 ubox
7 75 0.010267772 ubox
7 79 0.006598828 ubox
8 17 0.087758972 ubox
8 53 0.978173354 ubox
8 70 0.003951672 ubox
8 74 0.009099637 ubox
8 77 0.022594938 ubox
9 16 0.090399475 ubox
9 52 0.977764702 ubox
9 73 0.007598092 ubox
9 76 0.025659934 ubox
10 15 0.091381926 ubox
10 18 0.012255953 ubox
10 37 0.005501354 ubox
10 42 0.005128059 ubox
10 51 0.975148268 ubox
10 54 0.052478354 ubox
10 71 0.005234092 ubox
10 75 0.026085151 ubox
10 79 0.007638519 ubox
11 16 0.003939125 ubox
11 17 0.012609369 ubox
11 53 0.054846588 ubox
11 70 0.004672755 ubox
11 74 0.022891754 ubox
11 77 0.020270588 ubox
12 16 0.009962971 ubox
12 52 0.056217229 ubox
12 73 0.019113859 ubox
12 76 0.022725335 ubox
13 18 0.008716484 ubox
13 22 0.004997591 ubox
13 37 0.049615961 ubox
13 42 0.005014429 ubox
13 51 0.056450484 ubox
13 71 0.014459857 ubox
13 75 0.023032704 ubox
13 79 0.004471053 ubox
14 70 0.012931859 ubox
14 73 0.005807704 ubox
14 74 0.018990606 ubox
15 19 0.003945980 ubox
15 28 0.036344235 ubox
15 32 0.031728283 ubox
15 38 0.028009058 ubox
15 43 0.020338159 ubox
15 47 0.336596475 ubox
15 70 0.006420178 ubox
15 72 0.007486359 ubox
15 73 0.012514665 ubox
15 78 0.006198661 ubox
16 25 0.003944733 ubox
16 27 0.036502044 ubox
16 31 0.031736731 ubox
16 33 0.004545512 ubox
16 34 0.212653159 ubox
16 35 0.013718937 ubox
16 36 0.005510395 ubox
16 37 0.026208019 ubox
16 40 0.023539320 ubox
16 42 0.019068356 ubox
16 44 0.011985215 ubox
16 45 0.899367175 ubox
16 46 0.276186031 ubox
16 48 0.006059765 ubox
16 49 0.006593094 ubox
16 69 0.006398398 ubox
16 71 0.006486516 ubox
17 23 0.003275745 ubox
17 24 0.004587569 ubox
17 25 0.003211794 ubox
17 26 0.036446383 ubox
17 30 0.031779364 ubox
17 33 0.244633886 ubox
17 34 0.011452317 ubox
17 35 0.003494146 ubox
17 36 0.011669310 ubox
17 39 0.028979380 ubox
17 41 0.009888746 ubox
17 44 0.938468369 ubox
17 45 0.194775128 ubox
17 48 0.006868687 ubox
17 68 0.005659976 ubox
18 29 0.030823897 ubox
18 32 0.251858316 ubox
18 38 0.030390412 ubox
18 43 0.960094299 ubox
18 47 0.006831256 ubox
18 72 0.013538369 ubox
18 76 0.011276348 ubox
19 23 0.004162898 ubox
19 31 0.251667053 ubox
19 37 0.030375044 ubox
19 42 0.959141021 ubox
19 71 0.013574564 ubox
19 75 0.015656390 ubox
20 70 0.012114884 ubox
20 74 0.015521055 ubox
21 73 0.015374775 ubox
22 28 0.165409192 ubox
22 29 0.941223792 ubox
22 32 0.010669789 ubox
22 38 0.062321312 ubox
22 58 0.003945656 ubox
22 72 0.015192751 ubox
22 78 0.004762682 ubox
23 28 0.936407884 ubox
23 29 0.076861491 ubox
23 32 0.021792272 ubox
23 38 0.094461744 ubox
23 57 0.003942252 ubox
23 77 0.004230972 ubox
23 78 0.011266166 ubox
24 70 0.011485120 ubox
24 76 0.003527608 ubox
24 77 0.010714708 ubox
25 76 0.007871240 ubox
26 77 0.012075168 ubox
27 76 0.014697104 ubox
28 37 0.015881359 ubox
28 42 0.003377964 ubox
28 64 0.006305387 ubox
28 75 0.015291921 ubox
28 79 0.004144027 ubox
29 37 0.011085803 ubox
29 42 0.004362456 ubox
29 54 0.010382179 ubox
29 63 0.006306208 ubox
29 75 0.003309269 ubox
30 53 0.010576631 ubox
30 73 0.016742564 ubox
30 77 0.013980040 ubox
31 38 0.929640023 ubox
31 43 0.034822526 ubox
31 52 0.010646030 ubox
31 72 0.017278209 ubox
31 76 0.016848066 ubox
31 78 0.006289296 ubox
32 37 0.929304381 ubox
32 42 0.034853748 ubox
32 51 0.010646498 ubox
32 71 0.017278629 ubox
32 75 0.017119829 ubox
32 79 0.003628083 ubox
33 70 0.015477782 ubox
33 74 0.014941951 ubox
34 73 0.007222139 ubox
35 74 0.033742198 ubox
35 77 0.008088249 ubox
36 53 0.010799919 ubox
36 73 0.038689243 ubox
36 76 0.006582131 ubox
36 77 0.116437775 ubox
37 43 0.175552824 ubox
37 47 0.011584057 ubox
37 52 0.012179033 ubox
37 72 0.040097530 ubox
37 76 0.137601266 ubox
37 77 0.004250827 ubox
37 78 0.010710705 ubox
38 42 0.174510527 ubox
38 51 0.012320869 ubox
38 54 0.007122656 ubox
38 71 0.040096069 ubox
38 75 0.139822085 ubox
39 53 0.006835583 ubox
39 70 0.036064420 ubox
39 74 0.113899002 ubox
39 76 0.003463650 ubox
40 52 0.005217627 ubox
40 53 0.003438958 ubox
40 73 0.080078108 ubox
40 74 0.096142727 ubox
41 52 0.003271049 ubox
41 53 0.031499178 ubox
41 73 0.127485509 ubox
41 77 0.024002310 ubox
42 47 0.028184237 ubox
42 52 0.035326885 ubox
42 72 0.151424834 ubox
42 76 0.028667440 ubox
42 78 0.012593858 ubox
43 51 0.035696627 ubox
43 54 0.030863760 ubox
43 64 0.003318381 ubox
43 67 0.005635147 ubox
43 71 0.151404954 ubox
43 75 0.029177317 ubox
43 79 0.022237242 ubox
44 53 0.030550941 ubox
44 70 0.140093926 ubox
44 74 0.028937391 ubox
44 77 0.005457074 ubox
45 52 0.026922085 ubox
45 53 0.039185181 ubox
45 70 0.006157837 ubox
45 73 0.026946514 ubox
45 76 0.004383084 ubox
45 77 0.071712182 ubox
46 52 0.041799104 ubox
46 53 0.003621723 ubox
46 76 0.080959874 ubox
47 51 0.042101582 ubox
47 54 0.033274910 ubox
47 63 0.010249481 ubox
47 64 0.014598337 ubox
47 67 0.058426395 ubox
47 71 0.024055583 ubox
47 75 0.082535917 ubox
48 53 0.030138256 ubox
48 70 0.021870191 ubox
48 73 0.004789220 ubox
48 74 0.076776674 ubox
49 73 0.067170735 ubox
49 74 0.033265392 ubox
50 70 0.005772811 ubox
50 73 0.045094322 ubox
51 57 0.007949066 ubox
51 58 0.005580653 ubox
51 70 0.075510118 ubox
51 72 0.053932554 ubox
52 56 0.007320318 ubox
52 59 0.003418230 ubox
52 60 0.051376984 ubox
52 61 0.052945777 ubox
52 62 0.062841451 ubox
52 63 0.049987350 ubox
52 64 0.008279602 ubox
52 65 0.011507962 ubox
52 66 0.018002614 ubox
52 67 0.010919666 ubox
52 68 0.025736073 ubox
52 69 0.088146235 ubox
52 71 0.053019668 ubox
53 59 0.052932777 ubox
53 60 0.053630018 ubox
53 61 0.063286412 ubox
53 62 0.051166456 ubox
53 63 0.008045917 ubox
53 64 0.010274634 ubox
53 65 0.017882026 ubox
53 66 0.011873059 ubox
53 67 0.027193279 ubox
53 68 0.088302215 ubox
53 69 0.016979845 ubox
53 79 0.035136005 ubox
54 58 0.052460123 ubox
54 78 0.069690844 ubox
55 77 0.071940603 ubox
56 76 0.075340370 ubox
56 77 0.007171648 ubox
57 63 0.019380363 ubox
57 64 0.237541073 ubox
57 67 0.004025338 ubox
57 75 0.074336210 ubox
57 79 0.016555776 ubox
58 63 0.238790609 ubox
58 64 0.018091426 ubox
58 67 0.012679261 ubox
58 71 0.006770287 ubox
58 75 0.036672908 ubox
58 79 0.012682947 ubox
59 70 0.006581876 ubox
59 73 0.006020275 ubox
59 74 0.038293013 ubox
59 76 0.057858236 ubox
59 77 0.065057547 ubox
60 73 0.029637415 ubox
60 74 0.025678505 ubox
60 76 0.062806470 ubox
60 77 0.028276613 ubox
61 70 0.006883871 ubox
61 73 0.019918246 ubox
61 74 0.372863125 ubox
61 76 0.023793480 ubox
61 77 0.057011929 ubox
62 70 0.012119110 ubox
62 73 0.395686149 ubox
62 74 0.087439689 ubox
62 76 0.060702685 ubox
62 77 0.284909547 ubox
63 70 0.024014506 ubox
63 72 0.399027126 ubox
63 73 0.095015807 ubox
63 74 0.009093896 ubox
63 76 0.331565440 ubox
63 77 0.023614183 ubox
63 78 0.133364149 ubox
64 70 0.007657794 ubox
64 72 0.095915457 ubox
64 73 0.009896086 ubox
64 74 0.054971786 ubox
64 76 0.024853866 ubox
64 77 0.129333676 ubox
64 78 0.550630833 ubox
65 70 0.209859566 ubox
65 73 0.047680383 ubox
65 74 0.375685978 ubox
65 76 0.114665198 ubox
65 77 0.550978226 ubox
66 70 0.016671517 ubox
66 73 0.387246302 ubox
66 74 0.025790218 ubox
66 76 0.544087116 ubox
66 77 0.011800380 ubox
67 72 0.387512606 ubox
67 73 0.025381778 ubox
67 74 0.103231472 ubox
67 76 0.014132125 ubox
67 77 0.009574590 ubox
67 78 0.511327987 ubox
68 73 0.102397339 ubox
68 74 0.510883494 ubox
68 76 0.010346638 ubox
68 77 0.511710975 ubox
69 73 0.394624642 ubox
69 74 0.050101801 ubox
69 76 0.503041227 ubox
69 77 0.007938495 ubox
70 75 0.479273107 ubox
70 79 0.012806451 ubox
71 76 0.004391136 ubox
71 78 0.020149089 ubox
72 79 0.011472368 ubox
1 58 0.9500000 lbox
2 57 0.9500000 lbox
6 55 0.9500000 lbox
7 54 0.9500000 lbox
8 53 0.9500000 lbox
9 52 0.9500000 lbox
10 51 0.9500000 lbox
16 45 0.9500000 lbox
17 44 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
67 78 0.9500000 lbox
68 77 0.9500000 lbox
69 76 0.9500000 lbox
70 75 0.9500000 lbox
showpage
end
%%EOF
