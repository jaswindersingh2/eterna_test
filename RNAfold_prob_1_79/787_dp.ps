%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (787)
} def

/sequence { (\
GGAAAAACGACUCCGAUAUAGCUAAUACAUCGUCCGACCAGCGACAUGCUAUUACUAUACGCGAGCGAGUAUUAAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.253974715 ubox
1 11 0.008519551 ubox
1 12 0.003547698 ubox
1 14 0.058705499 ubox
1 66 0.008633781 ubox
1 70 0.007865510 ubox
1 72 0.011630620 ubox
1 73 0.026673967 ubox
1 76 0.012794911 ubox
1 77 0.007431799 ubox
1 78 0.187063006 ubox
2 8 0.058990885 ubox
2 11 0.006038717 ubox
2 13 0.059028394 ubox
2 66 0.008535740 ubox
2 70 0.017699789 ubox
2 72 0.027801185 ubox
2 73 0.123110089 ubox
2 76 0.009782764 ubox
2 77 0.185765880 ubox
2 78 0.198143385 ubox
3 12 0.058409776 ubox
3 70 0.032104287 ubox
3 72 0.123291016 ubox
3 73 0.066406888 ubox
3 76 0.177410627 ubox
3 77 0.197650364 ubox
4 70 0.030401737 ubox
4 72 0.070665401 ubox
4 73 0.119601597 ubox
4 76 0.180511142 ubox
4 77 0.009421131 ubox
5 70 0.137641389 ubox
5 72 0.130270809 ubox
5 73 0.085735544 ubox
5 76 0.010897111 ubox
5 77 0.006627694 ubox
6 70 0.045257350 ubox
6 72 0.088516024 ubox
6 73 0.101407864 ubox
6 76 0.007561401 ubox
6 77 0.009120768 ubox
7 70 0.212715383 ubox
7 72 0.102174119 ubox
7 73 0.044034744 ubox
7 76 0.010270228 ubox
7 77 0.003840343 ubox
8 15 0.004268059 ubox
8 63 0.009359705 ubox
8 65 0.006843964 ubox
8 67 0.641917762 ubox
8 69 0.214543983 ubox
8 79 0.041151373 ubox
9 14 0.004352100 ubox
9 62 0.009542169 ubox
9 66 0.700839439 ubox
9 70 0.006600962 ubox
9 72 0.007329972 ubox
9 73 0.005789501 ubox
9 78 0.042711839 ubox
10 70 0.120735369 ubox
10 72 0.005584852 ubox
10 77 0.042124353 ubox
11 63 0.006289444 ubox
11 65 0.986850109 ubox
11 67 0.005135966 ubox
11 69 0.121815499 ubox
12 63 0.009543771 ubox
12 64 0.989857649 ubox
12 68 0.121334648 ubox
13 63 0.989884866 ubox
13 65 0.007933782 ubox
13 67 0.120786095 ubox
14 61 0.989885137 ubox
14 63 0.065915567 ubox
14 65 0.048084081 ubox
14 67 0.004573057 ubox
15 60 0.990011397 ubox
15 62 0.070896955 ubox
15 66 0.006391397 ubox
15 78 0.003787653 ubox
16 58 0.012864487 ubox
16 77 0.003673178 ubox
17 57 0.009998460 ubox
17 59 0.992090446 ubox
17 61 0.005509186 ubox
18 56 0.006927766 ubox
18 58 0.998456628 ubox
19 57 0.999238082 ubox
20 56 0.999476385 ubox
21 55 0.999211865 ubox
21 56 0.005449692 ubox
21 76 0.003576479 ubox
23 51 0.007905121 ubox
23 54 0.991777260 ubox
23 74 0.013034789 ubox
24 50 0.007893365 ubox
24 52 0.020271838 ubox
24 53 0.997307789 ubox
24 73 0.013540300 ubox
25 52 0.997773404 ubox
25 53 0.003470503 ubox
25 72 0.013638514 ubox
26 48 0.004695712 ubox
26 51 0.997761127 ubox
26 71 0.013660804 ubox
27 47 0.005716374 ubox
27 50 0.991693990 ubox
27 70 0.013663336 ubox
28 48 0.994118531 ubox
28 69 0.013622753 ubox
29 47 0.992822999 ubox
30 44 0.129012476 ubox
30 46 0.975610712 ubox
30 48 0.004818653 ubox
30 68 0.013591628 ubox
31 43 0.147166362 ubox
31 48 0.012879095 ubox
31 67 0.013643081 ubox
32 42 0.147514555 ubox
32 45 0.988015723 ubox
32 47 0.008395927 ubox
32 66 0.013608453 ubox
33 40 0.007546342 ubox
33 41 0.138246684 ubox
33 43 0.005522202 ubox
33 44 0.988385463 ubox
33 46 0.007842131 ubox
33 64 0.003685015 ubox
33 65 0.012704914 ubox
34 41 0.041484182 ubox
34 43 0.973144501 ubox
34 63 0.004298294 ubox
35 41 0.797545506 ubox
35 43 0.173588851 ubox
35 61 0.004345789 ubox
35 63 0.012298768 ubox
36 42 0.242482091 ubox
36 60 0.004305992 ubox
36 62 0.012046832 ubox
38 61 0.005144876 ubox
40 50 0.012502679 ubox
41 49 0.013512562 ubox
41 62 0.003962558 ubox
42 48 0.013511238 ubox
42 61 0.004096311 ubox
43 47 0.008336452 ubox
43 60 0.004056273 ubox
51 58 0.003408560 ubox
52 57 0.003360382 ubox
59 70 0.003544636 ubox
60 65 0.007939402 ubox
60 67 0.003837005 ubox
60 69 0.003913232 ubox
61 66 0.004640468 ubox
61 70 0.008033234 ubox
62 69 0.008324941 ubox
62 79 0.007953234 ubox
63 78 0.008606795 ubox
64 77 0.008492034 ubox
65 76 0.007045937 ubox
66 79 0.606998063 ubox
67 73 0.007212968 ubox
67 77 0.011346412 ubox
67 78 0.700657712 ubox
68 72 0.008943134 ubox
68 73 0.017477237 ubox
68 76 0.020131528 ubox
68 77 0.702555723 ubox
69 73 0.008581082 ubox
69 76 0.688857191 ubox
69 77 0.012781672 ubox
69 78 0.080636543 ubox
70 74 0.017843569 ubox
70 75 0.665065300 ubox
70 79 0.007030470 ubox
71 76 0.011924819 ubox
71 77 0.022584967 ubox
72 79 0.007201959 ubox
73 79 0.006144086 ubox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 41 0.9500000 lbox
showpage
end
%%EOF
