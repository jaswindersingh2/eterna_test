%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (207)
} def

/sequence { (\
GGAAAAGUGAAGUAGACUACGUCAAAAGACAGUAGAAAACAUGACACAAAAGUGCAUGACUACGGCACGUGCAUGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.018285930 ubox
1 13 0.006856509 ubox
1 17 0.005276550 ubox
1 20 0.003752951 ubox
1 23 0.007358800 ubox
1 30 0.009154416 ubox
1 70 0.003418224 ubox
1 72 0.287413157 ubox
1 74 0.088017986 ubox
1 76 0.025231402 ubox
1 77 0.015801523 ubox
1 78 0.345587943 ubox
2 8 0.008195453 ubox
2 13 0.005407207 ubox
2 20 0.007239265 ubox
2 22 0.007198249 ubox
2 23 0.004984199 ubox
2 30 0.005625483 ubox
2 70 0.006676391 ubox
2 72 0.276044583 ubox
2 74 0.028309874 ubox
2 76 0.023416174 ubox
2 77 0.343328586 ubox
2 78 0.319519492 ubox
3 8 0.012432155 ubox
3 13 0.005925928 ubox
3 22 0.004865064 ubox
3 70 0.195962920 ubox
3 74 0.033171762 ubox
3 76 0.338112235 ubox
3 77 0.318028846 ubox
4 8 0.007192577 ubox
4 13 0.011536602 ubox
4 70 0.088617488 ubox
4 74 0.046156992 ubox
4 76 0.305692519 ubox
4 77 0.009458612 ubox
5 13 0.007738355 ubox
5 70 0.142732589 ubox
5 74 0.035844969 ubox
5 76 0.009162112 ubox
5 77 0.007908098 ubox
6 13 0.024078590 ubox
6 18 0.044003591 ubox
6 33 0.003614940 ubox
6 61 0.007138290 ubox
6 70 0.132589103 ubox
6 74 0.067186328 ubox
6 76 0.009015102 ubox
6 77 0.003897438 ubox
7 13 0.008680975 ubox
7 17 0.050823313 ubox
7 20 0.020324661 ubox
7 30 0.007033762 ubox
7 42 0.005055957 ubox
7 45 0.048435769 ubox
7 47 0.046388977 ubox
7 60 0.007434037 ubox
7 63 0.004277977 ubox
7 66 0.013130120 ubox
7 68 0.847899723 ubox
7 70 0.007670107 ubox
7 72 0.026760841 ubox
7 74 0.034022571 ubox
7 78 0.013332700 ubox
8 12 0.005383004 ubox
8 14 0.015142140 ubox
8 15 0.017607378 ubox
8 16 0.052644399 ubox
8 19 0.020299838 ubox
8 24 0.019423087 ubox
8 29 0.006906115 ubox
8 31 0.003997133 ubox
8 36 0.003884837 ubox
8 41 0.005284616 ubox
8 44 0.048352355 ubox
8 46 0.046442285 ubox
8 59 0.007242223 ubox
8 62 0.004209229 ubox
8 64 0.004359682 ubox
8 65 0.012640658 ubox
8 67 0.849172897 ubox
8 69 0.005406176 ubox
8 71 0.023650884 ubox
8 73 0.034304810 ubox
8 79 0.038809126 ubox
9 13 0.013813142 ubox
9 17 0.004333145 ubox
9 18 0.019589021 ubox
9 20 0.005390117 ubox
9 23 0.021048062 ubox
9 30 0.004058120 ubox
9 40 0.005262565 ubox
9 45 0.046342967 ubox
9 61 0.003264770 ubox
9 63 0.005682583 ubox
9 66 0.849437477 ubox
9 68 0.007093345 ubox
9 70 0.013661915 ubox
9 72 0.034038896 ubox
9 78 0.066165065 ubox
10 22 0.019887324 ubox
10 42 0.045333390 ubox
10 70 0.003679335 ubox
10 77 0.057025524 ubox
11 18 0.009853448 ubox
11 42 0.020497995 ubox
11 61 0.010024426 ubox
11 70 0.004388486 ubox
11 76 0.030637703 ubox
11 77 0.003197195 ubox
12 17 0.010995515 ubox
12 20 0.025258030 ubox
12 40 0.058924931 ubox
12 42 0.028278826 ubox
12 60 0.010658293 ubox
12 63 0.850792913 ubox
12 66 0.003609635 ubox
12 68 0.008901494 ubox
12 72 0.003196384 ubox
12 78 0.013208400 ubox
13 19 0.025156904 ubox
13 25 0.003982460 ubox
13 36 0.016909279 ubox
13 37 0.023304877 ubox
13 38 0.009123178 ubox
13 39 0.057703435 ubox
13 41 0.027397212 ubox
13 59 0.010342221 ubox
13 62 0.850777150 ubox
13 65 0.003498265 ubox
13 67 0.008560923 ubox
13 75 0.003272930 ubox
14 18 0.022307329 ubox
14 61 0.850285789 ubox
14 74 0.003258068 ubox
15 23 0.012365821 ubox
15 40 0.009488643 ubox
15 60 0.845265581 ubox
15 61 0.003456557 ubox
15 66 0.004870070 ubox
15 72 0.003420886 ubox
15 78 0.037489957 ubox
16 22 0.012389652 ubox
16 33 0.055441833 ubox
16 77 0.027966434 ubox
17 21 0.012272565 ubox
17 32 0.057138389 ubox
17 35 0.988099093 ubox
17 58 0.006475402 ubox
18 31 0.052953266 ubox
18 34 0.994583391 ubox
18 35 0.004173703 ubox
19 33 0.995452645 ubox
19 70 0.003590108 ubox
20 32 0.994764301 ubox
20 69 0.003626084 ubox
21 30 0.991214155 ubox
21 68 0.003485524 ubox
22 28 0.003382404 ubox
22 29 0.997065440 ubox
22 31 0.006588096 ubox
22 67 0.003410053 ubox
23 28 0.995731482 ubox
32 63 0.010743525 ubox
32 78 0.003190405 ubox
33 39 0.003310065 ubox
33 62 0.010772287 ubox
34 61 0.010781932 ubox
35 60 0.010754893 ubox
35 78 0.041346831 ubox
36 77 0.039387591 ubox
37 61 0.004823689 ubox
37 76 0.017837014 ubox
37 77 0.029822367 ubox
38 76 0.023666863 ubox
38 77 0.453300985 ubox
39 76 0.509298498 ubox
39 77 0.010016678 ubox
40 58 0.847355205 ubox
40 75 0.518421968 ubox
41 57 0.850872215 ubox
41 74 0.518361862 ubox
42 56 0.851318569 ubox
42 73 0.518364306 ubox
42 79 0.007533752 ubox
43 55 0.851584128 ubox
43 72 0.518444330 ubox
43 77 0.009641648 ubox
43 78 0.012432977 ubox
44 53 0.080757945 ubox
44 70 0.022081937 ubox
44 76 0.011415746 ubox
44 77 0.011464273 ubox
45 52 0.080924795 ubox
45 54 0.847799263 ubox
45 69 0.022124690 ubox
45 71 0.517410741 ubox
45 75 0.012391946 ubox
46 53 0.847378874 ubox
46 70 0.517195765 ubox
46 74 0.011372755 ubox
46 76 0.015658817 ubox
47 52 0.845869898 ubox
47 54 0.006564530 ubox
47 69 0.516665651 ubox
47 71 0.015876613 ubox
47 75 0.016495015 ubox
47 79 0.013716682 ubox
48 53 0.005777946 ubox
48 70 0.015030922 ubox
48 74 0.013188841 ubox
48 77 0.012697145 ubox
49 70 0.004099844 ubox
49 76 0.013362298 ubox
49 77 0.030079801 ubox
50 70 0.005732096 ubox
50 76 0.026646093 ubox
50 77 0.010506004 ubox
51 61 0.007963487 ubox
51 70 0.003191207 ubox
51 74 0.003166256 ubox
51 76 0.009614363 ubox
52 60 0.008266948 ubox
52 63 0.027628330 ubox
52 66 0.005354627 ubox
52 68 0.517217460 ubox
52 72 0.005059796 ubox
52 74 0.059866254 ubox
52 78 0.021983538 ubox
53 59 0.008235663 ubox
53 62 0.027576740 ubox
53 64 0.006520494 ubox
53 65 0.005067583 ubox
53 67 0.517750290 ubox
53 71 0.005065701 ubox
53 73 0.063990573 ubox
54 60 0.004714175 ubox
54 61 0.024869090 ubox
54 63 0.006812139 ubox
54 66 0.517886606 ubox
54 70 0.005100411 ubox
54 72 0.064789189 ubox
54 76 0.025162553 ubox
55 64 0.032096775 ubox
55 65 0.516331247 ubox
55 69 0.005136397 ubox
55 71 0.064869813 ubox
55 75 0.026314101 ubox
56 61 0.012037171 ubox
56 70 0.064807733 ubox
56 74 0.026314628 ubox
57 62 0.051547672 ubox
57 64 0.367450235 ubox
57 67 0.008494711 ubox
57 69 0.064397441 ubox
57 73 0.026313443 ubox
58 63 0.406641222 ubox
58 66 0.010257695 ubox
58 68 0.063582387 ubox
58 72 0.026244297 ubox
59 70 0.012478242 ubox
59 76 0.004669270 ubox
60 64 0.013475029 ubox
60 65 0.050290608 ubox
60 69 0.012587139 ubox
60 71 0.017817689 ubox
60 75 0.005140767 ubox
61 65 0.003644886 ubox
61 71 0.024814025 ubox
62 70 0.032933375 ubox
62 76 0.014446465 ubox
63 69 0.033387517 ubox
63 75 0.016358220 ubox
63 79 0.008890719 ubox
64 68 0.031276522 ubox
64 74 0.014775137 ubox
64 77 0.012892824 ubox
64 78 0.012347321 ubox
65 72 0.032625983 ubox
65 76 0.017269724 ubox
65 77 0.010617054 ubox
65 78 0.005773977 ubox
66 71 0.032721771 ubox
66 75 0.018545733 ubox
67 74 0.016443849 ubox
67 76 0.013772412 ubox
68 75 0.015124809 ubox
68 79 0.018091282 ubox
69 74 0.013282735 ubox
69 76 0.008846514 ubox
69 77 0.010448758 ubox
69 78 0.082064284 ubox
70 75 0.009596293 ubox
70 79 0.026422936 ubox
71 76 0.014261766 ubox
71 77 0.007472560 ubox
71 78 0.044776414 ubox
72 79 0.028528611 ubox
73 77 0.009098439 ubox
74 79 0.008056227 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
