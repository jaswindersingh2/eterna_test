%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (931)
} def

/sequence { (\
GGAAAGCUGCCGAGCAGACGCUCCGUCGUCCGGCGUAGAACCGGACGACUCCACAGUUGUGGUGCAGCAGAUGGGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.003564293 ubox
1 8 0.004311223 ubox
1 11 0.022666378 ubox
1 22 0.003285003 ubox
1 24 0.288310956 ubox
1 52 0.004215261 ubox
1 72 0.039918774 ubox
1 76 0.008506627 ubox
1 77 0.007214572 ubox
1 78 0.158675824 ubox
2 7 0.004584991 ubox
2 10 0.022646075 ubox
2 21 0.003943132 ubox
2 23 0.288522086 ubox
2 51 0.004219067 ubox
2 72 0.034061837 ubox
2 76 0.010781906 ubox
2 77 0.158367601 ubox
2 78 0.141274403 ubox
3 8 0.005388530 ubox
3 22 0.285547954 ubox
3 50 0.004013382 ubox
3 72 0.029554982 ubox
3 76 0.156161432 ubox
3 77 0.140710626 ubox
4 8 0.003167693 ubox
4 22 0.006440255 ubox
4 72 0.045548797 ubox
4 76 0.132337872 ubox
4 77 0.013963530 ubox
5 22 0.008236682 ubox
5 72 0.043723120 ubox
5 76 0.017496033 ubox
5 77 0.006906038 ubox
6 15 0.008028270 ubox
6 19 0.271906764 ubox
6 21 0.013180238 ubox
6 65 0.003479253 ubox
6 68 0.945636221 ubox
6 72 0.031318634 ubox
6 76 0.007240134 ubox
6 78 0.006182201 ubox
7 14 0.008066577 ubox
7 17 0.288393794 ubox
7 20 0.012005769 ubox
7 64 0.003473674 ubox
7 67 0.946710987 ubox
7 70 0.136583336 ubox
7 73 0.003992261 ubox
7 74 0.005447576 ubox
7 75 0.007342026 ubox
8 13 0.007987477 ubox
8 16 0.288603199 ubox
8 66 0.946501969 ubox
8 69 0.136889528 ubox
8 73 0.004745976 ubox
8 74 0.004611778 ubox
9 15 0.288672700 ubox
9 24 0.003816980 ubox
9 65 0.946696002 ubox
9 68 0.136975375 ubox
9 76 0.013951846 ubox
10 14 0.286574222 ubox
10 17 0.003869783 ubox
10 25 0.006279277 ubox
10 62 0.004229895 ubox
10 64 0.940632166 ubox
10 67 0.136376839 ubox
10 74 0.004160970 ubox
10 75 0.014631748 ubox
11 17 0.004888456 ubox
11 20 0.006763159 ubox
11 25 0.025852724 ubox
11 61 0.005302165 ubox
11 62 0.158484967 ubox
11 64 0.078029697 ubox
11 67 0.008617734 ubox
11 73 0.004222360 ubox
11 74 0.014438894 ubox
11 79 0.003882231 ubox
12 19 0.006938067 ubox
12 23 0.951980059 ubox
12 24 0.063292350 ubox
12 63 0.009764606 ubox
12 65 0.008608551 ubox
12 78 0.004461089 ubox
13 22 0.956235033 ubox
13 60 0.008318004 ubox
13 63 0.004540989 ubox
13 77 0.004435215 ubox
14 21 0.956654689 ubox
14 60 0.029171328 ubox
14 65 0.011710142 ubox
14 76 0.004398626 ubox
15 20 0.955278777 ubox
15 59 0.030230767 ubox
15 61 0.005498363 ubox
15 64 0.011718074 ubox
15 75 0.004377027 ubox
16 58 0.028500921 ubox
16 60 0.005164502 ubox
16 63 0.010627636 ubox
17 23 0.004512878 ubox
17 24 0.003908918 ubox
17 57 0.024491942 ubox
17 58 0.011967014 ubox
18 22 0.003948310 ubox
18 57 0.017424273 ubox
19 56 0.021432505 ubox
20 54 0.008075946 ubox
20 57 0.005460956 ubox
20 68 0.004029012 ubox
21 56 0.006035980 ubox
21 67 0.004035318 ubox
22 55 0.005854759 ubox
22 66 0.003887679 ubox
24 64 0.003516300 ubox
25 49 0.997384944 ubox
25 50 0.008158204 ubox
26 48 0.999401360 ubox
27 47 0.999946086 ubox
28 46 0.999956905 ubox
29 45 0.999870620 ubox
30 44 0.999991745 ubox
31 43 0.999976992 ubox
32 41 0.014670504 ubox
32 42 0.999799738 ubox
33 41 0.997236666 ubox
33 42 0.007048520 ubox
34 38 0.068748291 ubox
35 41 0.022073055 ubox
36 40 0.036406136 ubox
47 78 0.003926627 ubox
48 76 0.007759940 ubox
48 77 0.003990517 ubox
49 64 0.017061124 ubox
49 75 0.009860534 ubox
50 62 0.012560744 ubox
50 64 0.016245350 ubox
50 66 0.006341649 ubox
50 74 0.006712474 ubox
50 75 0.220729995 ubox
51 61 0.016511711 ubox
51 62 0.935680022 ubox
51 73 0.007365617 ubox
51 74 0.280667098 ubox
51 75 0.053438652 ubox
52 59 0.014996718 ubox
52 61 0.956263331 ubox
52 62 0.008052857 ubox
52 64 0.008146000 ubox
52 73 0.280965675 ubox
52 74 0.053693853 ubox
52 75 0.004673072 ubox
53 58 0.012822940 ubox
53 60 0.955729756 ubox
53 63 0.010163615 ubox
53 72 0.277094393 ubox
54 59 0.954024406 ubox
54 61 0.028057197 ubox
54 62 0.009978243 ubox
54 70 0.244690436 ubox
54 73 0.051882768 ubox
55 60 0.027122229 ubox
55 72 0.051674664 ubox
56 65 0.003729188 ubox
56 68 0.279557233 ubox
57 64 0.003696116 ubox
57 67 0.279761335 ubox
57 70 0.051988846 ubox
57 71 0.004238121 ubox
58 66 0.279707334 ubox
58 69 0.062286812 ubox
58 70 0.003233337 ubox
58 71 0.008047183 ubox
59 65 0.279865793 ubox
59 68 0.062621654 ubox
60 64 0.261812606 ubox
60 66 0.006565118 ubox
60 67 0.061714889 ubox
60 69 0.010070106 ubox
61 65 0.007798172 ubox
61 68 0.010158489 ubox
63 69 0.003561412 ubox
63 75 0.013797388 ubox
63 79 0.011080737 ubox
64 68 0.003888827 ubox
64 76 0.005138623 ubox
64 78 0.018879561 ubox
65 70 0.003858404 ubox
65 73 0.020818596 ubox
65 74 0.003326589 ubox
65 75 0.005377263 ubox
65 79 0.004178124 ubox
66 72 0.020530511 ubox
66 76 0.005218059 ubox
66 77 0.023683924 ubox
67 76 0.025900853 ubox
68 73 0.006985316 ubox
68 74 0.007247659 ubox
68 75 0.026315304 ubox
68 79 0.003459568 ubox
69 76 0.027074918 ubox
69 77 0.020339404 ubox
70 76 0.021376146 ubox
70 77 0.035834430 ubox
70 78 0.456325720 ubox
71 76 0.034363047 ubox
71 77 0.452318971 ubox
72 79 0.076739025 ubox
73 77 0.006865961 ubox
73 78 0.123426597 ubox
74 78 0.036782399 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
showpage
end
%%EOF
