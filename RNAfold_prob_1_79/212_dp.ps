%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (212)
} def

/sequence { (\
GGAAAAGACAAGAUCAGUACCUCGAAAGAGAGUACAAAAGAUGACUGGAAACAGCAUCAGAUCAAGUCGAUCUGGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.050425868 ubox
1 15 0.009570005 ubox
1 52 0.004277423 ubox
1 55 0.004639073 ubox
1 71 0.007443615 ubox
1 72 0.079182033 ubox
1 73 0.663585649 ubox
1 76 0.008814867 ubox
1 77 0.007986330 ubox
1 78 0.209626930 ubox
2 9 0.020962012 ubox
2 14 0.006729274 ubox
2 15 0.019352908 ubox
2 55 0.003285240 ubox
2 68 0.003332073 ubox
2 71 0.072723213 ubox
2 72 0.702800400 ubox
2 73 0.024008218 ubox
2 76 0.010922096 ubox
2 77 0.204701487 ubox
2 78 0.225273527 ubox
3 14 0.018458111 ubox
3 71 0.682730648 ubox
3 73 0.024194696 ubox
3 76 0.198622484 ubox
3 77 0.219561714 ubox
4 71 0.102682263 ubox
4 73 0.022381236 ubox
4 76 0.192653002 ubox
4 77 0.015898098 ubox
5 14 0.004393590 ubox
5 71 0.035909102 ubox
5 73 0.013774567 ubox
5 76 0.017023951 ubox
5 77 0.020693971 ubox
6 14 0.006065044 ubox
6 46 0.008223557 ubox
6 71 0.014564719 ubox
6 73 0.111014837 ubox
6 76 0.022788623 ubox
6 77 0.033176245 ubox
7 14 0.003169573 ubox
7 15 0.067209072 ubox
7 45 0.008500020 ubox
7 67 0.003949445 ubox
7 68 0.816866293 ubox
7 72 0.099397776 ubox
7 73 0.014173736 ubox
7 76 0.026437600 ubox
7 77 0.407446201 ubox
7 78 0.203538556 ubox
8 14 0.063548260 ubox
8 67 0.818609741 ubox
8 71 0.089779141 ubox
8 73 0.003287613 ubox
8 76 0.454253075 ubox
8 77 0.162206994 ubox
9 43 0.017135050 ubox
9 47 0.007600613 ubox
9 48 0.004135768 ubox
9 66 0.819121450 ubox
9 69 0.050031110 ubox
9 74 0.086610475 ubox
9 75 0.471081135 ubox
9 79 0.016264706 ubox
10 42 0.016544269 ubox
10 46 0.006321688 ubox
10 67 0.025564563 ubox
10 73 0.062411398 ubox
10 76 0.006573312 ubox
10 77 0.005331993 ubox
11 42 0.004610678 ubox
11 46 0.009074958 ubox
11 67 0.018860536 ubox
11 73 0.465458343 ubox
11 76 0.004663582 ubox
11 77 0.006201201 ubox
12 45 0.010211107 ubox
12 63 0.822698013 ubox
12 68 0.041499359 ubox
12 72 0.502290160 ubox
12 76 0.003775834 ubox
12 77 0.126432739 ubox
12 78 0.075895388 ubox
13 42 0.033154473 ubox
13 62 0.823209171 ubox
13 67 0.041123420 ubox
13 71 0.502193794 ubox
13 76 0.140417966 ubox
13 77 0.064278123 ubox
14 36 0.005089640 ubox
14 37 0.006489374 ubox
14 38 0.022215987 ubox
14 39 0.005758028 ubox
14 41 0.034724210 ubox
14 44 0.017033377 ubox
14 61 0.823149109 ubox
14 66 0.038104368 ubox
14 70 0.502127680 ubox
14 75 0.145860743 ubox
15 40 0.035170152 ubox
15 43 0.018104820 ubox
15 60 0.822349961 ubox
15 66 0.010034403 ubox
15 69 0.501618567 ubox
15 74 0.146264783 ubox
15 75 0.038749903 ubox
15 79 0.004602548 ubox
16 42 0.017958340 ubox
16 67 0.029350446 ubox
16 73 0.087934446 ubox
17 35 0.998071390 ubox
17 68 0.004041605 ubox
17 72 0.004217807 ubox
18 34 0.999282848 ubox
19 33 0.999475282 ubox
20 32 0.996279411 ubox
21 28 0.003184791 ubox
21 30 0.993069174 ubox
21 32 0.081628894 ubox
22 29 0.993160192 ubox
22 31 0.114500863 ubox
23 28 0.992860131 ubox
23 30 0.114691214 ubox
36 62 0.011243199 ubox
37 62 0.007506728 ubox
38 62 0.009558796 ubox
39 46 0.003552332 ubox
39 62 0.006493438 ubox
39 67 0.003851439 ubox
40 45 0.003709327 ubox
40 55 0.005080318 ubox
40 57 0.006640364 ubox
40 58 0.986659955 ubox
40 63 0.007216770 ubox
40 68 0.009834084 ubox
40 78 0.011221263 ubox
41 57 0.992838788 ubox
41 62 0.007031097 ubox
41 67 0.009655779 ubox
41 77 0.010115416 ubox
42 53 0.003348777 ubox
42 56 0.994308517 ubox
42 59 0.016357344 ubox
42 61 0.004747629 ubox
42 64 0.011637897 ubox
42 66 0.006377767 ubox
42 79 0.005546307 ubox
43 52 0.003697122 ubox
43 55 0.996646593 ubox
43 58 0.018301391 ubox
43 63 0.013844527 ubox
43 68 0.009992887 ubox
43 78 0.009395957 ubox
44 57 0.017481244 ubox
44 62 0.013812309 ubox
44 67 0.010004048 ubox
44 77 0.008719796 ubox
45 54 0.999255350 ubox
45 60 0.014304137 ubox
45 66 0.009995463 ubox
46 53 0.999251533 ubox
46 56 0.003580007 ubox
46 59 0.014320672 ubox
46 65 0.009232279 ubox
47 52 0.998854070 ubox
47 55 0.004251492 ubox
47 58 0.014268020 ubox
48 52 0.007681545 ubox
48 57 0.012533142 ubox
48 63 0.008026623 ubox
48 78 0.005195697 ubox
49 62 0.007710258 ubox
49 77 0.005150557 ubox
52 60 0.003589859 ubox
54 78 0.015128850 ubox
55 79 0.004264669 ubox
56 76 0.085323527 ubox
56 77 0.003668262 ubox
57 75 0.098934312 ubox
58 69 0.003192666 ubox
58 74 0.151102055 ubox
59 67 0.013014137 ubox
59 73 0.234726936 ubox
60 67 0.012000611 ubox
60 68 0.394704101 ubox
60 72 0.257537305 ubox
60 77 0.013486866 ubox
60 78 0.007121725 ubox
61 67 0.391826384 ubox
61 71 0.257695432 ubox
61 76 0.015035584 ubox
61 77 0.005916770 ubox
62 66 0.362680369 ubox
62 70 0.257775333 ubox
62 75 0.015651781 ubox
63 69 0.257688174 ubox
63 74 0.015833845 ubox
64 73 0.014248717 ubox
65 73 0.010618476 ubox
66 72 0.012675418 ubox
67 75 0.004212169 ubox
68 74 0.005836977 ubox
68 75 0.004683327 ubox
68 79 0.043380335 ubox
69 73 0.004754279 ubox
69 76 0.004698922 ubox
69 77 0.023464211 ubox
69 78 0.215098819 ubox
70 76 0.026212949 ubox
70 77 0.212232667 ubox
71 75 0.025575279 ubox
72 79 0.011473604 ubox
73 79 0.010816249 ubox
74 78 0.034034822 ubox
1 73 0.9500000 lbox
2 72 0.9500000 lbox
3 71 0.9500000 lbox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
