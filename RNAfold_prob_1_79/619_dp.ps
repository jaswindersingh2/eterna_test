%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (619)
} def

/sequence { (\
GGAAAAGAUGGUGGUGGUGGUAUAUAUAUAGAAAAAAAAAAAAUAUAUAUAUAUUAUUAUUAUUAUAGGGUGGUGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 71 0.038670161 ubox
1 74 0.052570344 ubox
1 76 0.025335693 ubox
1 77 0.011664356 ubox
1 78 0.242559516 ubox
2 66 0.004417324 ubox
2 71 0.063016855 ubox
2 74 0.035126909 ubox
2 76 0.017133858 ubox
2 77 0.241432181 ubox
2 78 0.320974468 ubox
3 9 0.003284487 ubox
3 66 0.006207016 ubox
3 71 0.155206420 ubox
3 74 0.039169448 ubox
3 76 0.235479526 ubox
3 77 0.320545135 ubox
4 9 0.003412067 ubox
4 66 0.008109382 ubox
4 71 0.121749036 ubox
4 74 0.054465161 ubox
4 76 0.310183414 ubox
4 77 0.021834076 ubox
5 66 0.012665765 ubox
5 71 0.094358422 ubox
5 74 0.076740499 ubox
5 76 0.027073841 ubox
5 77 0.016871017 ubox
6 66 0.017621708 ubox
6 71 0.043697972 ubox
6 74 0.040859151 ubox
6 76 0.019976478 ubox
6 77 0.008630342 ubox
7 64 0.026436110 ubox
7 66 0.048128003 ubox
7 71 0.098241919 ubox
7 74 0.036982741 ubox
7 76 0.010496526 ubox
7 77 0.011328865 ubox
7 78 0.037640580 ubox
8 63 0.027239058 ubox
8 64 0.005693423 ubox
8 66 0.950789200 ubox
8 71 0.070977697 ubox
8 74 0.022417409 ubox
8 76 0.011514210 ubox
8 77 0.033178778 ubox
9 62 0.027192560 ubox
9 65 0.984185549 ubox
9 67 0.021361001 ubox
9 68 0.012754106 ubox
9 69 0.014635925 ubox
9 70 0.058343602 ubox
9 72 0.009968245 ubox
9 73 0.018928689 ubox
9 75 0.010201662 ubox
10 61 0.026951697 ubox
10 63 0.004349704 ubox
10 64 0.993210573 ubox
10 66 0.017996758 ubox
10 71 0.005314425 ubox
10 74 0.004966197 ubox
10 78 0.003316519 ubox
11 60 0.026466719 ubox
11 63 0.997722297 ubox
11 64 0.006187274 ubox
11 66 0.019102073 ubox
11 71 0.006730163 ubox
12 59 0.026356187 ubox
12 62 0.998729823 ubox
12 65 0.019590996 ubox
13 58 0.026056090 ubox
13 61 0.997258392 ubox
13 64 0.019314031 ubox
14 57 0.025525581 ubox
14 60 0.998294449 ubox
14 63 0.018639592 ubox
15 56 0.025406073 ubox
15 59 0.998936803 ubox
15 62 0.018477152 ubox
16 55 0.025076723 ubox
16 58 0.997367583 ubox
16 61 0.018090312 ubox
17 54 0.024445023 ubox
17 57 0.998352571 ubox
17 60 0.017327549 ubox
18 53 0.023586501 ubox
18 56 0.998989787 ubox
18 59 0.017146781 ubox
19 52 0.017039754 ubox
19 55 0.997414495 ubox
19 58 0.016725563 ubox
20 50 0.004168985 ubox
20 52 0.018275344 ubox
20 54 0.998387049 ubox
20 57 0.015863356 ubox
21 49 0.004567923 ubox
21 51 0.024489136 ubox
21 53 0.999214937 ubox
21 56 0.015516811 ubox
22 48 0.004600651 ubox
22 50 0.025164573 ubox
22 52 0.999040531 ubox
22 54 0.010971835 ubox
22 55 0.011318069 ubox
23 47 0.004611565 ubox
23 49 0.025536580 ubox
23 51 0.999008969 ubox
23 53 0.015187005 ubox
24 46 0.004617083 ubox
24 48 0.025784338 ubox
24 50 0.998999960 ubox
24 52 0.015600853 ubox
25 45 0.004622840 ubox
25 47 0.026103192 ubox
25 49 0.998987997 ubox
25 51 0.015839147 ubox
26 44 0.004609974 ubox
26 46 0.026340186 ubox
26 48 0.998976899 ubox
26 50 0.016008683 ubox
27 43 0.004472298 ubox
27 45 0.026640406 ubox
27 47 0.998950079 ubox
27 49 0.016226919 ubox
28 44 0.026760875 ubox
28 46 0.998795589 ubox
28 48 0.016387694 ubox
29 42 0.003216390 ubox
29 43 0.026072000 ubox
29 45 0.997787800 ubox
29 47 0.016583426 ubox
30 44 0.986295371 ubox
30 46 0.016562295 ubox
31 44 0.012604748 ubox
32 44 0.010117628 ubox
33 44 0.007250922 ubox
34 44 0.005599699 ubox
35 44 0.008315425 ubox
36 44 0.004015979 ubox
37 44 0.005561691 ubox
38 44 0.004019403 ubox
39 44 0.004019356 ubox
61 72 0.003502407 ubox
61 75 0.005425789 ubox
62 71 0.003888089 ubox
62 74 0.007514609 ubox
63 70 0.003947522 ubox
63 73 0.007975442 ubox
64 69 0.004051409 ubox
64 72 0.010984280 ubox
64 75 0.012233275 ubox
65 71 0.012083527 ubox
65 74 0.017009759 ubox
65 76 0.029229910 ubox
65 77 0.003312968 ubox
66 70 0.011462169 ubox
66 72 0.006709461 ubox
66 73 0.017700242 ubox
66 75 0.035629013 ubox
66 79 0.003772113 ubox
67 71 0.010974649 ubox
67 74 0.048467576 ubox
67 76 0.043382763 ubox
67 77 0.031652996 ubox
68 74 0.020926511 ubox
68 76 0.038172109 ubox
68 77 0.045525773 ubox
68 78 0.174436613 ubox
69 74 0.047017717 ubox
69 76 0.052790636 ubox
69 77 0.168202105 ubox
69 78 0.295510494 ubox
70 74 0.025663130 ubox
70 76 0.138243713 ubox
70 77 0.274824196 ubox
70 78 0.082412069 ubox
71 75 0.040379548 ubox
71 79 0.083587407 ubox
72 76 0.017136661 ubox
72 77 0.015284983 ubox
72 78 0.145371943 ubox
73 77 0.094534768 ubox
73 78 0.115841796 ubox
74 79 0.008634501 ubox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 59 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
18 56 0.9500000 lbox
19 55 0.9500000 lbox
20 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
23 51 0.9500000 lbox
24 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
showpage
end
%%EOF
