%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (85)
} def

/sequence { (\
GGAAAAAUUUGCGAAUUGAAAAAUUCCCGAGCGUAUGAAAAUACAGUAAGAAAUUACGCGAGGGCAAAUAGGUUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.009764463 ubox
1 12 0.049309456 ubox
1 27 0.018911964 ubox
1 28 0.013005953 ubox
1 59 0.003642108 ubox
1 73 0.006059450 ubox
1 74 0.015323201 ubox
1 75 0.616220030 ubox
1 76 0.565885976 ubox
1 77 0.027124222 ubox
1 78 0.183524159 ubox
2 9 0.011551273 ubox
2 10 0.011235084 ubox
2 12 0.008524231 ubox
2 26 0.019074457 ubox
2 27 0.012880191 ubox
2 32 0.003577074 ubox
2 73 0.022330565 ubox
2 74 0.619699990 ubox
2 75 0.653534835 ubox
2 76 0.011020254 ubox
2 77 0.172683462 ubox
2 78 0.176399621 ubox
3 8 0.010735953 ubox
3 9 0.011779382 ubox
3 10 0.048060092 ubox
3 25 0.018920933 ubox
3 69 0.003208361 ubox
3 73 0.615439777 ubox
3 74 0.650927966 ubox
3 76 0.167854270 ubox
3 77 0.175970061 ubox
4 8 0.009199529 ubox
4 9 0.042355539 ubox
4 10 0.006101516 ubox
4 24 0.017100008 ubox
4 25 0.003739335 ubox
4 69 0.005258246 ubox
4 73 0.610267670 ubox
4 74 0.092930881 ubox
4 76 0.163558151 ubox
4 77 0.005949376 ubox
5 9 0.005528643 ubox
5 10 0.003837389 ubox
5 24 0.003953146 ubox
5 69 0.012344946 ubox
5 73 0.102282289 ubox
5 74 0.134619980 ubox
5 76 0.007039634 ubox
5 77 0.006308156 ubox
6 17 0.007981954 ubox
6 25 0.010692618 ubox
6 55 0.003185437 ubox
6 69 0.034350710 ubox
6 73 0.139344979 ubox
6 74 0.125671468 ubox
6 76 0.007488502 ubox
6 77 0.003823224 ubox
7 16 0.008523576 ubox
7 24 0.012390552 ubox
7 54 0.003393365 ubox
7 69 0.866598290 ubox
7 73 0.119793044 ubox
7 74 0.005220094 ubox
7 76 0.003363956 ubox
8 15 0.008478437 ubox
8 19 0.004010662 ubox
8 20 0.007671170 ubox
8 21 0.011872150 ubox
8 22 0.009582655 ubox
8 23 0.013092932 ubox
8 30 0.008050591 ubox
8 31 0.041741701 ubox
8 53 0.003382727 ubox
8 67 0.008004680 ubox
8 68 0.961753127 ubox
8 70 0.019148342 ubox
8 71 0.015973266 ubox
8 72 0.108510218 ubox
9 14 0.007407961 ubox
9 18 0.004197005 ubox
9 19 0.008229282 ubox
9 20 0.013042004 ubox
9 21 0.010021232 ubox
9 22 0.013098737 ubox
9 29 0.008005399 ubox
9 30 0.077794874 ubox
9 49 0.003885177 ubox
9 52 0.003220289 ubox
9 61 0.004846074 ubox
9 66 0.006321286 ubox
9 67 0.978877749 ubox
9 68 0.027712901 ubox
9 70 0.011131546 ubox
9 71 0.076422335 ubox
9 79 0.003348835 ubox
10 18 0.008134102 ubox
10 19 0.013251497 ubox
10 20 0.008497571 ubox
10 21 0.012969217 ubox
10 29 0.081128902 ubox
10 33 0.003502094 ubox
10 48 0.004112683 ubox
10 60 0.006282270 ubox
10 66 0.983976829 ubox
10 67 0.020571139 ubox
10 70 0.052365870 ubox
10 79 0.010878968 ubox
11 17 0.005623377 ubox
11 27 0.014766665 ubox
11 28 0.083541217 ubox
11 32 0.013122471 ubox
11 47 0.004175827 ubox
11 59 0.011185507 ubox
11 65 0.985318353 ubox
11 69 0.041277327 ubox
11 73 0.006957406 ubox
11 76 0.007549271 ubox
11 77 0.012876227 ubox
11 78 0.018476548 ubox
12 18 0.013488063 ubox
12 29 0.003263201 ubox
12 31 0.013130967 ubox
12 46 0.004175345 ubox
12 58 0.011199023 ubox
12 63 0.003756647 ubox
12 64 0.983687388 ubox
12 71 0.003957786 ubox
12 72 0.007247578 ubox
12 79 0.063441138 ubox
13 17 0.008626609 ubox
13 25 0.007586800 ubox
13 26 0.984564990 ubox
13 27 0.005733625 ubox
13 57 0.003760958 ubox
13 65 0.006405932 ubox
13 75 0.105316790 ubox
13 78 0.069686637 ubox
14 24 0.006680411 ubox
14 25 0.986919475 ubox
14 55 0.003223165 ubox
14 69 0.003986687 ubox
14 74 0.105446747 ubox
14 77 0.069247371 ubox
15 24 0.986714565 ubox
15 25 0.004761095 ubox
15 54 0.003236141 ubox
15 69 0.006963039 ubox
15 73 0.105454175 ubox
15 76 0.060681681 ubox
15 77 0.003245782 ubox
16 21 0.004335163 ubox
16 22 0.013579195 ubox
16 23 0.984366977 ubox
16 53 0.003209761 ubox
16 61 0.016206926 ubox
16 67 0.017838063 ubox
16 68 0.007487705 ubox
16 71 0.005227027 ubox
16 72 0.104906389 ubox
17 21 0.015600462 ubox
17 22 0.966656731 ubox
17 23 0.022333428 ubox
17 60 0.016411898 ubox
17 66 0.019707513 ubox
17 67 0.006894800 ubox
17 70 0.006813235 ubox
17 71 0.100846472 ubox
17 72 0.007083874 ubox
17 79 0.014846510 ubox
18 25 0.007070028 ubox
18 26 0.045997622 ubox
18 59 0.016383206 ubox
18 65 0.019992072 ubox
18 69 0.006481400 ubox
18 73 0.012657300 ubox
18 74 0.012537628 ubox
18 75 0.057259815 ubox
18 78 0.025781853 ubox
19 24 0.007052099 ubox
19 25 0.045562956 ubox
19 69 0.016284014 ubox
19 73 0.013054641 ubox
19 74 0.057292801 ubox
19 77 0.025769847 ubox
20 24 0.034764324 ubox
20 25 0.003429372 ubox
20 69 0.015145143 ubox
20 73 0.055334769 ubox
20 76 0.024236000 ubox
21 69 0.011806345 ubox
21 73 0.003680653 ubox
22 55 0.013232219 ubox
22 69 0.014141658 ubox
22 74 0.023875114 ubox
23 54 0.014111865 ubox
23 69 0.029102655 ubox
23 73 0.025376736 ubox
24 52 0.005986212 ubox
24 53 0.013848371 ubox
24 66 0.031489239 ubox
24 67 0.054279622 ubox
24 68 0.033405955 ubox
24 71 0.004417383 ubox
24 72 0.025043227 ubox
25 51 0.006994904 ubox
25 52 0.012658453 ubox
25 64 0.004500785 ubox
25 66 0.058756198 ubox
25 67 0.028632418 ubox
25 68 0.010237701 ubox
25 70 0.004906663 ubox
25 71 0.023631734 ubox
26 50 0.007453612 ubox
26 63 0.016454180 ubox
26 64 0.141819431 ubox
27 50 0.008822249 ubox
27 62 0.019910483 ubox
27 63 0.991687228 ubox
27 64 0.009204766 ubox
28 50 0.013029110 ubox
28 60 0.008723458 ubox
28 62 0.993850456 ubox
28 63 0.021996471 ubox
28 79 0.005263406 ubox
29 59 0.006363015 ubox
29 75 0.022922863 ubox
29 78 0.005750287 ubox
30 47 0.009305169 ubox
30 74 0.022963332 ubox
30 77 0.004563041 ubox
31 47 0.022702832 ubox
31 59 0.996942316 ubox
31 73 0.023062797 ubox
32 46 0.023369615 ubox
32 58 0.997019498 ubox
32 60 0.005251066 ubox
32 72 0.023081036 ubox
33 42 0.003972537 ubox
33 44 0.261412228 ubox
33 57 0.964509018 ubox
33 59 0.005115608 ubox
34 41 0.004173059 ubox
34 43 0.262288157 ubox
34 48 0.012111681 ubox
34 56 0.962256108 ubox
34 58 0.005027765 ubox
34 70 0.020209038 ubox
35 42 0.262886602 ubox
35 47 0.020431622 ubox
35 54 0.154144224 ubox
35 55 0.936671081 ubox
35 69 0.020160884 ubox
36 40 0.006428159 ubox
36 41 0.261277909 ubox
36 43 0.022541836 ubox
36 45 0.173044819 ubox
36 46 0.022693722 ubox
36 48 0.024259041 ubox
36 49 0.029467007 ubox
36 50 0.025276494 ubox
36 51 0.048631130 ubox
36 52 0.071952234 ubox
36 53 0.214563794 ubox
36 56 0.016748765 ubox
36 66 0.003482795 ubox
36 68 0.019422451 ubox
37 42 0.018113413 ubox
37 44 0.174405025 ubox
37 47 0.022918003 ubox
37 54 0.034182157 ubox
37 55 0.034218808 ubox
37 65 0.004242810 ubox
38 42 0.017327581 ubox
38 47 0.022811449 ubox
38 54 0.043332491 ubox
38 55 0.017241282 ubox
39 47 0.015533825 ubox
39 54 0.026556154 ubox
39 55 0.015501791 ubox
40 47 0.031655286 ubox
40 54 0.024084233 ubox
40 55 0.029438477 ubox
41 47 0.079528563 ubox
41 54 0.049825070 ubox
41 55 0.005416766 ubox
42 46 0.076337683 ubox
42 48 0.181406865 ubox
42 49 0.190638511 ubox
42 50 0.035334292 ubox
42 51 0.042084332 ubox
42 52 0.024371453 ubox
42 53 0.048447297 ubox
42 61 0.006671239 ubox
42 62 0.004108949 ubox
43 47 0.168096438 ubox
43 54 0.007037855 ubox
43 55 0.003264788 ubox
44 50 0.068888385 ubox
44 58 0.003659074 ubox
44 60 0.006287284 ubox
45 54 0.031521778 ubox
45 55 0.026353210 ubox
46 54 0.051979777 ubox
46 55 0.008856176 ubox
46 57 0.259728264 ubox
46 78 0.006415742 ubox
47 51 0.008386992 ubox
47 52 0.017755341 ubox
47 53 0.051546807 ubox
47 56 0.260395505 ubox
48 54 0.010584954 ubox
48 55 0.259975420 ubox
48 77 0.010145367 ubox
49 54 0.248632858 ubox
49 55 0.006959898 ubox
49 76 0.011389458 ubox
50 54 0.008095885 ubox
50 55 0.004562938 ubox
50 57 0.007741162 ubox
50 75 0.011625889 ubox
51 74 0.011574154 ubox
52 73 0.010918197 ubox
54 71 0.009300755 ubox
55 70 0.010322632 ubox
56 69 0.010248510 ubox
57 62 0.003996700 ubox
57 63 0.003984196 ubox
57 79 0.014210997 ubox
58 65 0.024921547 ubox
58 78 0.018463253 ubox
59 64 0.024941250 ubox
59 79 0.045861138 ubox
60 77 0.057842320 ubox
60 78 0.061512674 ubox
61 76 0.068551685 ubox
61 77 0.054819193 ubox
62 75 0.075086915 ubox
62 76 0.047184758 ubox
63 74 0.075010789 ubox
63 75 0.047042767 ubox
64 73 0.081312090 ubox
64 74 0.034124550 ubox
65 71 0.008560292 ubox
65 72 0.086787279 ubox
66 73 0.004818530 ubox
70 76 0.021367787 ubox
70 77 0.009579564 ubox
71 75 0.022946831 ubox
71 76 0.009602605 ubox
71 77 0.006765640 ubox
71 78 0.084149772 ubox
72 76 0.005435809 ubox
72 77 0.075042120 ubox
72 78 0.038969195 ubox
75 79 0.004239856 ubox
1 75 0.9500000 lbox
2 74 0.9500000 lbox
3 73 0.9500000 lbox
7 69 0.9500000 lbox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 57 0.9500000 lbox
34 56 0.9500000 lbox
35 55 0.9500000 lbox
showpage
end
%%EOF
