%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (36)
} def

/sequence { (\
GGAAAAAAGGUGUGUGCAGAGCCUCAAAGAGUGCUCAAAAGCUGCGUCAAAGACCAGCAGCACUCACCGCGCAGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 70 0.009800267 ubox
1 72 0.068023042 ubox
1 75 0.152177567 ubox
1 76 0.342495395 ubox
1 77 0.024428919 ubox
1 78 0.407364253 ubox
2 70 0.013019623 ubox
2 72 0.079914726 ubox
2 75 0.395144279 ubox
2 76 0.025139548 ubox
2 77 0.402100110 ubox
2 78 0.403516911 ubox
3 76 0.385342935 ubox
3 77 0.401621253 ubox
4 76 0.368575981 ubox
4 77 0.019364374 ubox
5 76 0.022423403 ubox
5 77 0.011503003 ubox
6 76 0.012044028 ubox
6 77 0.013780482 ubox
7 76 0.012197451 ubox
7 77 0.166205421 ubox
8 76 0.189561331 ubox
8 77 0.036505434 ubox
9 68 0.978929931 ubox
9 70 0.013532539 ubox
9 72 0.004358376 ubox
9 75 0.193437820 ubox
9 76 0.043234620 ubox
9 77 0.003274251 ubox
9 78 0.009680886 ubox
10 67 0.979808844 ubox
10 68 0.005511239 ubox
10 70 0.008716774 ubox
10 72 0.013340044 ubox
10 75 0.044349027 ubox
10 76 0.003715940 ubox
10 77 0.008315055 ubox
10 78 0.003277216 ubox
11 66 0.979601564 ubox
11 69 0.008627898 ubox
11 71 0.013362534 ubox
11 73 0.193616321 ubox
11 74 0.040080787 ubox
12 64 0.004306970 ubox
12 65 0.977843612 ubox
12 67 0.003749970 ubox
12 68 0.007916651 ubox
12 70 0.013376827 ubox
12 72 0.194153724 ubox
12 75 0.009472770 ubox
13 66 0.004527011 ubox
13 69 0.013337687 ubox
13 71 0.194060327 ubox
13 73 0.039142768 ubox
13 74 0.005642225 ubox
14 63 0.977216120 ubox
14 64 0.003396864 ubox
14 65 0.003352244 ubox
14 67 0.008239629 ubox
14 68 0.008965581 ubox
14 70 0.193677208 ubox
14 72 0.043690139 ubox
15 62 0.979745606 ubox
15 66 0.009522472 ubox
15 69 0.193112640 ubox
15 71 0.043740861 ubox
16 22 0.020932654 ubox
16 23 0.003481297 ubox
16 25 0.006060191 ubox
16 61 0.979927886 ubox
16 65 0.009620476 ubox
16 67 0.012016708 ubox
16 68 0.186889001 ubox
16 70 0.044077167 ubox
17 21 0.022022647 ubox
17 60 0.978895437 ubox
17 69 0.044055627 ubox
18 24 0.018996511 ubox
18 64 0.013811381 ubox
19 23 0.019782940 ubox
19 24 0.004531802 ubox
19 25 0.054688865 ubox
19 36 0.993837022 ubox
19 63 0.005970893 ubox
19 65 0.019800512 ubox
19 67 0.013142721 ubox
19 68 0.005170769 ubox
20 24 0.047640547 ubox
20 35 0.994952547 ubox
20 64 0.017527521 ubox
21 25 0.010394854 ubox
21 34 0.995270991 ubox
21 63 0.013968177 ubox
21 67 0.007229619 ubox
22 33 0.995155850 ubox
23 29 0.012321969 ubox
23 31 0.993893516 ubox
23 33 0.006727070 ubox
24 28 0.011618497 ubox
24 29 0.007281287 ubox
24 30 0.993384203 ubox
24 31 0.017205956 ubox
25 29 0.985056868 ubox
25 31 0.030518256 ubox
29 65 0.095125832 ubox
30 64 0.095572163 ubox
31 63 0.095946829 ubox
32 62 0.096510966 ubox
33 61 0.096639731 ubox
34 60 0.096637972 ubox
35 59 0.096036656 ubox
37 64 0.003635852 ubox
38 64 0.013123809 ubox
39 64 0.004969137 ubox
40 64 0.004487379 ubox
40 76 0.003193574 ubox
41 58 0.985210125 ubox
41 61 0.164153698 ubox
41 75 0.003249394 ubox
42 57 0.986227684 ubox
42 60 0.164445861 ubox
42 74 0.003249672 ubox
43 56 0.985990380 ubox
43 59 0.165042398 ubox
43 73 0.003248903 ubox
44 54 0.007865467 ubox
44 55 0.985906590 ubox
44 58 0.165185801 ubox
44 72 0.003249634 ubox
45 52 0.024866608 ubox
45 57 0.164637167 ubox
45 71 0.003249550 ubox
46 54 0.995315457 ubox
46 55 0.029395029 ubox
46 70 0.003225474 ubox
47 51 0.003313345 ubox
47 52 0.009724199 ubox
47 53 0.995165943 ubox
47 56 0.008125564 ubox
48 52 0.986812843 ubox
60 65 0.006294331 ubox
60 67 0.008014840 ubox
68 74 0.003611104 ubox
68 79 0.004604412 ubox
69 75 0.389032341 ubox
69 76 0.009704907 ubox
69 77 0.006482794 ubox
69 78 0.034479012 ubox
70 74 0.386693106 ubox
70 79 0.090778059 ubox
71 75 0.025078578 ubox
71 76 0.011882761 ubox
71 77 0.007853198 ubox
71 78 0.094129178 ubox
72 79 0.027862620 ubox
73 77 0.014355454 ubox
74 78 0.022267342 ubox
75 79 0.008353107 ubox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
showpage
end
%%EOF
