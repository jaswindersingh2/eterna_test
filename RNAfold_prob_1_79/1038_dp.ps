%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1038)
} def

/sequence { (\
GGAAAAGCCAAAGGCAAGCUCAAAGAGCAACCAUCAAAGAUGGAAGACCAAAGGUCAACGCAAAGCGACCUAGACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.013522205 ubox
1 9 0.151547614 ubox
1 15 0.003428012 ubox
1 20 0.004052177 ubox
1 21 0.006684428 ubox
1 31 0.006792492 ubox
1 32 0.037058837 ubox
1 35 0.004318687 ubox
1 48 0.013455033 ubox
1 49 0.266943227 ubox
1 59 0.018611452 ubox
1 61 0.015950502 ubox
1 66 0.009711352 ubox
1 69 0.035775664 ubox
1 70 0.481445962 ubox
1 71 0.111784493 ubox
1 75 0.062586996 ubox
1 76 0.062655219 ubox
1 77 0.013004970 ubox
1 78 0.407315581 ubox
2 8 0.151366474 ubox
2 9 0.012398253 ubox
2 19 0.005404794 ubox
2 20 0.005599600 ubox
2 21 0.006800973 ubox
2 31 0.037275181 ubox
2 35 0.007246547 ubox
2 48 0.265953730 ubox
2 49 0.019876848 ubox
2 59 0.013623469 ubox
2 61 0.010231317 ubox
2 66 0.008359839 ubox
2 69 0.480120463 ubox
2 70 0.117944881 ubox
2 71 0.012783565 ubox
2 75 0.071912978 ubox
2 76 0.016517437 ubox
2 77 0.396124578 ubox
2 78 0.582510450 ubox
3 20 0.006688653 ubox
3 34 0.006794861 ubox
3 71 0.013097977 ubox
3 76 0.373332768 ubox
3 77 0.576039548 ubox
4 71 0.015013530 ubox
4 76 0.515933840 ubox
4 77 0.039635810 ubox
5 71 0.017137073 ubox
5 76 0.045703354 ubox
5 77 0.084505381 ubox
6 20 0.003346332 ubox
6 71 0.017832430 ubox
6 76 0.101914954 ubox
6 77 0.013269180 ubox
7 15 0.974542956 ubox
7 19 0.003563440 ubox
7 55 0.004251250 ubox
7 61 0.007943357 ubox
7 66 0.026841846 ubox
7 70 0.007674822 ubox
7 75 0.102142968 ubox
7 76 0.006626638 ubox
7 78 0.005952228 ubox
8 13 0.009804816 ubox
8 14 0.975591711 ubox
8 18 0.003523645 ubox
8 54 0.004565334 ubox
8 60 0.007907641 ubox
8 65 0.026713004 ubox
8 73 0.066750312 ubox
9 13 0.968505398 ubox
9 14 0.010337261 ubox
9 53 0.004564411 ubox
9 73 0.060343167 ubox
9 79 0.008335021 ubox
10 71 0.005666513 ubox
10 77 0.006515823 ubox
11 71 0.014584316 ubox
11 76 0.006867266 ubox
11 77 0.036454801 ubox
12 71 0.180960417 ubox
12 76 0.040293805 ubox
12 77 0.022244019 ubox
13 31 0.004561241 ubox
13 32 0.019951784 ubox
13 49 0.032036181 ubox
13 59 0.003396605 ubox
13 69 0.006121871 ubox
13 70 0.187417350 ubox
13 71 0.007915482 ubox
13 75 0.040528290 ubox
13 76 0.026087219 ubox
13 78 0.010570873 ubox
14 28 0.003256161 ubox
14 31 0.020186869 ubox
14 48 0.031999434 ubox
14 59 0.003342754 ubox
14 61 0.030866521 ubox
14 66 0.019546815 ubox
14 69 0.186626915 ubox
14 70 0.008109228 ubox
14 75 0.026522987 ubox
14 77 0.007900980 ubox
14 78 0.004989218 ubox
15 27 0.003263216 ubox
15 46 0.022744681 ubox
15 60 0.030900168 ubox
15 65 0.019726084 ubox
15 67 0.043629825 ubox
15 73 0.029157921 ubox
15 79 0.003384586 ubox
16 71 0.006472793 ubox
16 76 0.005561543 ubox
16 77 0.015219983 ubox
17 71 0.008720346 ubox
17 76 0.016077418 ubox
17 77 0.005768306 ubox
18 28 0.998371139 ubox
18 66 0.008567115 ubox
18 70 0.003326504 ubox
18 75 0.010496537 ubox
19 25 0.006103705 ubox
19 27 0.999479516 ubox
19 65 0.008561660 ubox
19 73 0.005292735 ubox
20 24 0.005650683 ubox
20 25 0.006523099 ubox
20 26 0.998701892 ubox
20 64 0.008112939 ubox
20 72 0.004983509 ubox
20 74 0.007452008 ubox
21 25 0.990318069 ubox
21 73 0.007529800 ubox
24 71 0.004048639 ubox
25 49 0.008261154 ubox
25 70 0.004183366 ubox
25 77 0.004618514 ubox
25 78 0.004500493 ubox
26 76 0.005086661 ubox
26 77 0.004208226 ubox
27 48 0.004757832 ubox
27 61 0.004878590 ubox
27 66 0.003801375 ubox
27 75 0.005288602 ubox
28 46 0.014742121 ubox
28 60 0.004883362 ubox
28 65 0.003801637 ubox
28 73 0.004003617 ubox
29 71 0.003463214 ubox
29 77 0.004820120 ubox
30 71 0.003200746 ubox
30 76 0.004694302 ubox
31 39 0.003615154 ubox
31 42 0.011266806 ubox
31 43 0.972012196 ubox
31 79 0.003558389 ubox
32 39 0.012065398 ubox
32 42 0.996677273 ubox
32 43 0.004715788 ubox
32 46 0.003215552 ubox
33 41 0.996430613 ubox
34 39 0.008347726 ubox
34 40 0.995851375 ubox
34 43 0.006042879 ubox
34 44 0.005948579 ubox
35 39 0.987595452 ubox
35 42 0.020221480 ubox
35 43 0.006208014 ubox
36 41 0.017664249 ubox
37 77 0.003802685 ubox
38 76 0.004228501 ubox
39 75 0.004286043 ubox
41 50 0.032704401 ubox
41 79 0.003836979 ubox
42 49 0.037132592 ubox
42 78 0.005320720 ubox
43 48 0.037257382 ubox
43 49 0.008853453 ubox
43 59 0.007966704 ubox
43 77 0.004130929 ubox
43 78 0.211177821 ubox
44 71 0.003653920 ubox
44 76 0.005163819 ubox
44 77 0.234800318 ubox
45 71 0.004105965 ubox
45 76 0.243218711 ubox
45 77 0.009856843 ubox
46 56 0.793023281 ubox
46 75 0.245734338 ubox
46 76 0.010909638 ubox
46 77 0.023702135 ubox
46 78 0.082883161 ubox
47 55 0.793913218 ubox
47 76 0.025725642 ubox
47 77 0.081006435 ubox
48 53 0.006948230 ubox
48 54 0.794070001 ubox
48 73 0.202737687 ubox
48 79 0.006680756 ubox
49 53 0.788300893 ubox
49 54 0.006999885 ubox
49 73 0.111008524 ubox
49 79 0.005760753 ubox
50 71 0.013962354 ubox
50 76 0.004405085 ubox
50 77 0.012548517 ubox
51 71 0.034838927 ubox
51 76 0.014066274 ubox
51 77 0.010279303 ubox
52 71 0.578865170 ubox
52 76 0.009692975 ubox
52 77 0.076328831 ubox
53 70 0.599483912 ubox
53 71 0.004263774 ubox
53 75 0.007872955 ubox
53 76 0.092959428 ubox
54 69 0.599578136 ubox
54 70 0.004053274 ubox
54 75 0.096884866 ubox
55 68 0.598482994 ubox
55 74 0.097052626 ubox
56 65 0.009272722 ubox
56 67 0.555454718 ubox
56 73 0.096939004 ubox
57 71 0.048301795 ubox
58 71 0.039591208 ubox
59 65 0.223319038 ubox
59 67 0.800428657 ubox
59 73 0.010966939 ubox
59 79 0.025362594 ubox
60 66 0.880408635 ubox
60 69 0.019765313 ubox
60 70 0.005843000 ubox
60 75 0.010771489 ubox
60 78 0.026544730 ubox
61 65 0.874140726 ubox
61 67 0.026365361 ubox
61 73 0.012012771 ubox
61 79 0.011764722 ubox
62 71 0.004856835 ubox
62 77 0.015577190 ubox
63 71 0.004559668 ubox
63 76 0.015661682 ubox
63 77 0.044645180 ubox
64 71 0.027480021 ubox
64 76 0.055688144 ubox
65 69 0.005445800 ubox
65 70 0.028061151 ubox
65 75 0.060158865 ubox
66 73 0.072980215 ubox
66 79 0.032679361 ubox
67 71 0.003327523 ubox
67 75 0.017540054 ubox
67 78 0.036873793 ubox
68 76 0.005978258 ubox
68 77 0.036451240 ubox
69 73 0.036502490 ubox
70 79 0.006439210 ubox
71 79 0.004162431 ubox
72 76 0.007401572 ubox
72 77 0.010720816 ubox
73 77 0.006578870 ubox
73 78 0.069637800 ubox
75 79 0.011722007 ubox
1 70 0.9500000 lbox
2 69 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
showpage
end
%%EOF
