%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (907)
} def

/sequence { (\
GGAAAGCAAGAUCAGAGCCAAGCGAAAGCAGGGAAACCAAAGGACUCAAAGAUCAAGGAAAACCAAGCGUGCUACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.031190891 ubox
1 19 0.004783606 ubox
1 63 0.012505701 ubox
1 64 0.124354664 ubox
1 68 0.005003603 ubox
1 72 0.044899118 ubox
1 73 0.107803573 ubox
1 75 0.064084636 ubox
1 76 0.091258943 ubox
1 77 0.025606252 ubox
1 78 0.513373778 ubox
2 7 0.012963137 ubox
2 13 0.004272736 ubox
2 18 0.004763164 ubox
2 63 0.124237177 ubox
2 64 0.003856884 ubox
2 68 0.004114394 ubox
2 72 0.114142555 ubox
2 73 0.006589723 ubox
2 75 0.105055436 ubox
2 76 0.035329483 ubox
2 77 0.509344460 ubox
2 78 0.716525949 ubox
3 12 0.004226759 ubox
3 70 0.036021262 ubox
3 73 0.012089134 ubox
3 76 0.491275927 ubox
3 77 0.716443549 ubox
4 70 0.023756072 ubox
4 73 0.035943617 ubox
4 76 0.641484916 ubox
4 77 0.026504391 ubox
5 70 0.012943635 ubox
5 73 0.929788408 ubox
5 76 0.028924475 ubox
6 18 0.004559060 ubox
6 68 0.140124616 ubox
6 70 0.022809070 ubox
6 72 0.969587426 ubox
6 73 0.007517626 ubox
6 75 0.031010465 ubox
6 78 0.003542660 ubox
7 17 0.004592926 ubox
7 57 0.089950348 ubox
7 58 0.062823690 ubox
7 67 0.140055463 ubox
7 69 0.023308375 ubox
7 71 0.969501512 ubox
8 70 0.871149823 ubox
8 73 0.006307609 ubox
8 77 0.003169961 ubox
9 53 0.006109813 ubox
9 70 0.041388992 ubox
9 73 0.003749123 ubox
9 76 0.003221776 ubox
10 53 0.003210536 ubox
10 54 0.994231214 ubox
10 68 0.063875675 ubox
10 72 0.003373521 ubox
10 78 0.004419630 ubox
11 53 0.996291347 ubox
11 77 0.004301677 ubox
12 50 0.011273504 ubox
12 51 0.003938172 ubox
12 52 0.996510168 ubox
12 65 0.003331546 ubox
12 66 0.014447983 ubox
12 67 0.006603096 ubox
13 51 0.996062843 ubox
13 67 0.011791098 ubox
13 69 0.005626695 ubox
14 46 0.008922606 ubox
14 76 0.003683270 ubox
15 45 0.008976514 ubox
15 47 0.998157532 ubox
15 63 0.003624498 ubox
15 75 0.003918407 ubox
15 77 0.005385464 ubox
15 78 0.005648447 ubox
16 46 0.998750442 ubox
16 73 0.005587600 ubox
16 76 0.005941029 ubox
16 77 0.005414825 ubox
17 23 0.005210268 ubox
17 29 0.004494048 ubox
17 45 0.998612275 ubox
17 47 0.004866655 ubox
17 72 0.005651286 ubox
17 75 0.006165819 ubox
17 76 0.004526805 ubox
18 22 0.005218533 ubox
18 28 0.004486970 ubox
18 32 0.025049850 ubox
18 33 0.128145276 ubox
18 42 0.007067598 ubox
18 43 0.986736674 ubox
18 58 0.008031983 ubox
18 71 0.005535801 ubox
19 31 0.025179930 ubox
19 32 0.128521033 ubox
19 42 0.985788269 ubox
19 43 0.058121397 ubox
19 57 0.008027340 ubox
19 69 0.003162504 ubox
21 73 0.010304887 ubox
22 29 0.996626289 ubox
22 37 0.003370466 ubox
22 38 0.005646918 ubox
22 72 0.010621383 ubox
23 28 0.997267865 ubox
23 31 0.007905375 ubox
23 32 0.008086574 ubox
23 33 0.003642660 ubox
23 71 0.010618519 ubox
23 79 0.005534997 ubox
24 29 0.027891479 ubox
24 37 0.008031897 ubox
24 38 0.006907345 ubox
24 70 0.008919308 ubox
24 78 0.006278101 ubox
25 77 0.006265447 ubox
26 76 0.005605262 ubox
27 73 0.006271295 ubox
28 68 0.010972769 ubox
28 72 0.006573367 ubox
29 33 0.005801401 ubox
29 67 0.010987132 ubox
29 71 0.006573485 ubox
30 70 0.006378830 ubox
31 37 0.041336928 ubox
31 38 0.977020431 ubox
31 47 0.009470910 ubox
31 64 0.007500674 ubox
32 37 0.977395854 ubox
32 38 0.142183332 ubox
32 46 0.009506934 ubox
32 63 0.007507202 ubox
32 64 0.009674527 ubox
32 68 0.004832488 ubox
33 37 0.140234039 ubox
33 38 0.028043702 ubox
33 45 0.009542882 ubox
33 47 0.009282707 ubox
33 63 0.009671324 ubox
34 46 0.009405366 ubox
37 42 0.016931246 ubox
37 43 0.085348544 ubox
37 58 0.013063442 ubox
38 42 0.085113189 ubox
38 43 0.021152081 ubox
38 57 0.013075555 ubox
42 47 0.007537896 ubox
42 54 0.005920272 ubox
42 64 0.005110435 ubox
43 53 0.005034223 ubox
43 54 0.018058451 ubox
43 63 0.005101407 ubox
44 53 0.017931707 ubox
45 51 0.013608883 ubox
46 50 0.012307830 ubox
46 52 0.009487639 ubox
46 59 0.004095142 ubox
47 51 0.009592902 ubox
47 58 0.004247210 ubox
51 68 0.006499320 ubox
52 70 0.003719484 ubox
53 59 0.006877875 ubox
53 69 0.003951949 ubox
54 58 0.007565275 ubox
54 67 0.016133516 ubox
54 69 0.004003869 ubox
55 70 0.006150808 ubox
55 77 0.052990558 ubox
56 70 0.027519493 ubox
56 73 0.018161214 ubox
56 76 0.060000194 ubox
56 77 0.017900001 ubox
57 63 0.126207679 ubox
57 64 0.952053030 ubox
57 68 0.070155356 ubox
57 70 0.003716610 ubox
57 72 0.018809142 ubox
57 73 0.011119651 ubox
57 75 0.060922440 ubox
57 76 0.021044509 ubox
57 78 0.021517216 ubox
58 63 0.947178725 ubox
58 64 0.076791657 ubox
58 68 0.050237748 ubox
58 72 0.011660237 ubox
58 75 0.021506461 ubox
58 77 0.021404020 ubox
58 78 0.031474329 ubox
59 70 0.013405806 ubox
59 73 0.017045419 ubox
59 76 0.020593522 ubox
59 77 0.031318779 ubox
60 70 0.005384983 ubox
60 73 0.007759810 ubox
60 76 0.028898550 ubox
61 70 0.010177820 ubox
61 73 0.004146833 ubox
62 70 0.097223079 ubox
62 73 0.010823203 ubox
63 67 0.022983414 ubox
63 69 0.106196151 ubox
63 71 0.009558091 ubox
63 79 0.008313136 ubox
64 69 0.064436368 ubox
64 71 0.030172774 ubox
64 79 0.004955106 ubox
65 70 0.030842566 ubox
65 73 0.003321805 ubox
65 77 0.036510630 ubox
66 70 0.012973400 ubox
66 73 0.039975632 ubox
66 76 0.041212834 ubox
66 77 0.005942944 ubox
67 72 0.041132525 ubox
67 73 0.003172826 ubox
67 75 0.041768772 ubox
67 76 0.006665055 ubox
67 77 0.004473641 ubox
67 78 0.006261306 ubox
68 79 0.052756011 ubox
69 73 0.007228776 ubox
69 75 0.032980038 ubox
69 76 0.004103683 ubox
69 77 0.003442862 ubox
69 78 0.057581080 ubox
70 74 0.029799222 ubox
70 79 0.007580046 ubox
71 75 0.008161860 ubox
71 76 0.009737491 ubox
71 78 0.012649613 ubox
72 79 0.007460303 ubox
75 79 0.008202270 ubox
2 78 0.9500000 lbox
3 77 0.9500000 lbox
4 76 0.9500000 lbox
5 73 0.9500000 lbox
6 72 0.9500000 lbox
7 71 0.9500000 lbox
8 70 0.9500000 lbox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
17 45 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
57 64 0.9500000 lbox
58 63 0.9500000 lbox
showpage
end
%%EOF
