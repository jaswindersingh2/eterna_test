%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (754)
} def

/sequence { (\
GGAAAGUCGGAGCAAAGGUCGGACAAACGGAGAGGAAAACACUGCGUAGCAGUCUGGAAACUGAGUGCGACACGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.016817005 ubox
1 8 0.098351090 ubox
1 28 0.024233598 ubox
1 71 0.006692956 ubox
1 73 0.008229197 ubox
1 75 0.015184920 ubox
1 76 0.030856630 ubox
1 78 0.078982048 ubox
2 7 0.073883652 ubox
2 8 0.097661562 ubox
2 28 0.017570155 ubox
2 71 0.004595791 ubox
2 73 0.013510420 ubox
2 75 0.035594191 ubox
2 77 0.077895348 ubox
2 78 0.090715178 ubox
3 7 0.085602791 ubox
3 76 0.075141048 ubox
3 77 0.087007183 ubox
4 76 0.076628539 ubox
4 77 0.034330671 ubox
5 43 0.003772552 ubox
5 76 0.044021846 ubox
6 24 0.144684111 ubox
6 42 0.003871265 ubox
6 71 0.091865904 ubox
6 73 0.064327754 ubox
6 75 0.050272472 ubox
6 78 0.005536089 ubox
7 23 0.144899293 ubox
7 41 0.003803486 ubox
7 70 0.092269215 ubox
7 72 0.063725870 ubox
7 74 0.038931137 ubox
7 79 0.013130458 ubox
8 21 0.004588593 ubox
8 22 0.144816710 ubox
8 69 0.092497350 ubox
8 74 0.031753448 ubox
8 79 0.886884766 ubox
9 20 0.005279597 ubox
9 40 0.003234478 ubox
9 68 0.091852161 ubox
9 71 0.073466197 ubox
9 73 0.032124381 ubox
9 78 0.980135918 ubox
10 19 0.004621666 ubox
10 20 0.144704702 ubox
10 66 0.006015049 ubox
10 68 0.005690685 ubox
10 71 0.020728451 ubox
10 77 0.980423064 ubox
10 78 0.022085990 ubox
11 19 0.143188457 ubox
11 66 0.067510777 ubox
11 76 0.981125631 ubox
11 77 0.016204003 ubox
12 19 0.018752078 ubox
12 66 0.051813918 ubox
12 68 0.082467156 ubox
12 75 0.981552224 ubox
12 76 0.005220102 ubox
13 17 0.126574325 ubox
13 18 0.034912885 ubox
13 63 0.048441493 ubox
13 65 0.058656653 ubox
13 67 0.082516016 ubox
13 74 0.980402211 ubox
14 62 0.046636871 ubox
14 66 0.079521615 ubox
15 62 0.009944124 ubox
16 62 0.076442138 ubox
17 24 0.025870987 ubox
17 61 0.077254144 ubox
17 62 0.072115681 ubox
17 66 0.003237741 ubox
17 71 0.037237633 ubox
17 73 0.322077425 ubox
18 24 0.013994063 ubox
18 61 0.073881112 ubox
18 62 0.008262573 ubox
18 68 0.003653788 ubox
18 71 0.977940556 ubox
18 73 0.008052936 ubox
19 23 0.012643928 ubox
19 30 0.024602640 ubox
19 31 0.006650562 ubox
19 57 0.096768969 ubox
19 58 0.025925978 ubox
19 59 0.007513199 ubox
19 60 0.063469699 ubox
19 64 0.004516169 ubox
19 67 0.003264815 ubox
19 70 0.979291445 ubox
19 72 0.006627376 ubox
20 29 0.031747026 ubox
20 30 0.006804830 ubox
20 56 0.124265536 ubox
20 57 0.020425104 ubox
20 63 0.004677889 ubox
20 69 0.979386329 ubox
21 28 0.033514847 ubox
21 55 0.125862654 ubox
21 62 0.004654893 ubox
21 68 0.949424062 ubox
21 71 0.003665457 ubox
22 28 0.006566889 ubox
22 54 0.126565194 ubox
22 61 0.004670360 ubox
22 66 0.004249078 ubox
22 68 0.009387441 ubox
23 47 0.003939783 ubox
23 53 0.126541012 ubox
23 66 0.942320574 ubox
24 29 0.003913174 ubox
24 46 0.003707339 ubox
24 49 0.014696258 ubox
24 52 0.126181746 ubox
24 63 0.010696264 ubox
24 65 0.943472214 ubox
24 67 0.023961978 ubox
25 47 0.009261522 ubox
25 62 0.013508385 ubox
25 66 0.023289505 ubox
26 47 0.040111473 ubox
26 62 0.021417894 ubox
27 47 0.877125339 ubox
27 62 0.070771432 ubox
27 66 0.006176278 ubox
28 32 0.007226682 ubox
28 34 0.041057191 ubox
28 35 0.036981925 ubox
28 44 0.017426370 ubox
28 46 0.910043505 ubox
28 49 0.009618385 ubox
28 56 0.055085674 ubox
28 57 0.006282279 ubox
28 63 0.336372039 ubox
28 65 0.009540199 ubox
28 67 0.005264839 ubox
28 79 0.063134530 ubox
29 40 0.021936584 ubox
29 42 0.009629991 ubox
29 43 0.020635385 ubox
29 45 0.911128593 ubox
29 47 0.003429416 ubox
29 55 0.055286758 ubox
29 61 0.058512417 ubox
29 62 0.335766427 ubox
29 66 0.005187935 ubox
29 78 0.066660101 ubox
30 40 0.007707593 ubox
30 42 0.021072505 ubox
30 43 0.003240945 ubox
30 45 0.011601006 ubox
30 47 0.006768435 ubox
30 54 0.055333875 ubox
30 55 0.003496529 ubox
30 61 0.334490944 ubox
30 62 0.005859217 ubox
30 77 0.066094660 ubox
30 78 0.017991718 ubox
31 43 0.906980056 ubox
31 53 0.042650180 ubox
31 55 0.054525845 ubox
31 62 0.038140179 ubox
31 76 0.065024216 ubox
31 77 0.017872190 ubox
32 40 0.021204238 ubox
32 42 0.906413327 ubox
32 43 0.006317366 ubox
32 45 0.015779871 ubox
32 54 0.054943984 ubox
32 61 0.039668796 ubox
32 62 0.004347199 ubox
32 75 0.053517624 ubox
32 76 0.015960016 ubox
32 78 0.018860989 ubox
33 43 0.079320499 ubox
33 53 0.041884167 ubox
33 55 0.105133132 ubox
33 62 0.051821148 ubox
33 77 0.018743461 ubox
34 40 0.824196585 ubox
34 42 0.084035514 ubox
34 43 0.022383073 ubox
34 45 0.008527286 ubox
34 50 0.013215691 ubox
34 54 0.105394841 ubox
34 55 0.274875917 ubox
34 61 0.053578024 ubox
34 62 0.019152371 ubox
34 73 0.022428062 ubox
34 76 0.018257684 ubox
34 78 0.010695248 ubox
35 40 0.245083689 ubox
35 42 0.025497554 ubox
35 45 0.004223529 ubox
35 53 0.051689922 ubox
35 54 0.276975239 ubox
35 55 0.015765857 ubox
35 61 0.019715812 ubox
35 71 0.005282623 ubox
35 73 0.006934267 ubox
35 75 0.014914272 ubox
35 77 0.010646653 ubox
35 78 0.022851599 ubox
36 43 0.008792896 ubox
36 53 0.210754448 ubox
36 55 0.037136662 ubox
36 76 0.010525342 ubox
36 77 0.022774716 ubox
37 43 0.003453847 ubox
37 53 0.014130822 ubox
37 55 0.069146074 ubox
37 76 0.022251615 ubox
38 43 0.003632569 ubox
38 53 0.009143030 ubox
38 55 0.040709922 ubox
39 47 0.016992483 ubox
39 53 0.012784320 ubox
39 55 0.102580507 ubox
40 46 0.017567456 ubox
40 49 0.013101197 ubox
40 52 0.011650122 ubox
40 56 0.040860613 ubox
40 57 0.009120364 ubox
40 67 0.016869714 ubox
40 79 0.010897162 ubox
41 47 0.009169002 ubox
41 53 0.306940891 ubox
41 55 0.026906522 ubox
41 66 0.016928037 ubox
41 77 0.004561558 ubox
42 46 0.009293211 ubox
42 49 0.009174035 ubox
42 52 0.388297471 ubox
42 65 0.016930140 ubox
42 74 0.006985520 ubox
42 79 0.005431107 ubox
43 48 0.008639266 ubox
43 51 0.388540389 ubox
43 64 0.016862898 ubox
43 72 0.015720535 ubox
43 74 0.030971021 ubox
44 50 0.388699708 ubox
44 53 0.004715634 ubox
44 68 0.004024594 ubox
44 71 0.016898354 ubox
44 73 0.045555405 ubox
44 75 0.109596543 ubox
45 49 0.385877503 ubox
45 52 0.005391968 ubox
45 67 0.004042609 ubox
45 69 0.019493730 ubox
45 74 0.111977112 ubox
46 61 0.014862280 ubox
46 66 0.003204302 ubox
46 68 0.019579077 ubox
46 71 0.055298999 ubox
46 73 0.111860887 ubox
47 56 0.007875284 ubox
47 60 0.014666780 ubox
47 63 0.005828148 ubox
47 64 0.007120381 ubox
47 67 0.019639523 ubox
47 70 0.051612208 ubox
47 72 0.106386387 ubox
48 53 0.003645534 ubox
48 55 0.015845455 ubox
48 62 0.011084074 ubox
48 66 0.019901193 ubox
49 54 0.016112166 ubox
49 61 0.011425007 ubox
49 68 0.284006151 ubox
50 56 0.019888354 ubox
50 57 0.018388274 ubox
50 63 0.854225091 ubox
50 67 0.294727729 ubox
51 55 0.016200443 ubox
51 62 0.856800662 ubox
51 66 0.294239455 ubox
52 61 0.857166052 ubox
53 57 0.004456010 ubox
53 58 0.008417304 ubox
53 59 0.029360849 ubox
53 60 0.815401728 ubox
53 64 0.307690058 ubox
54 63 0.311656194 ubox
54 65 0.008993108 ubox
55 59 0.044582727 ubox
55 60 0.027560665 ubox
55 63 0.015410369 ubox
55 64 0.015566814 ubox
56 61 0.214855471 ubox
56 62 0.042376888 ubox
57 61 0.044030943 ubox
57 62 0.010815506 ubox
58 62 0.003713427 ubox
60 66 0.003471420 ubox
61 65 0.003583426 ubox
61 67 0.003342187 ubox
62 79 0.003881600 ubox
63 77 0.004306053 ubox
63 78 0.007904415 ubox
64 76 0.008240939 ubox
64 77 0.007795693 ubox
65 71 0.003839994 ubox
65 73 0.023919819 ubox
65 75 0.009379568 ubox
65 76 0.007092264 ubox
66 70 0.003466180 ubox
66 72 0.023935638 ubox
66 74 0.009378812 ubox
67 71 0.023568468 ubox
67 73 0.009427944 ubox
67 75 0.015386831 ubox
68 74 0.015484515 ubox
69 73 0.015885457 ubox
69 75 0.009950127 ubox
69 78 0.017445833 ubox
70 77 0.016335647 ubox
73 79 0.011741892 ubox
74 78 0.011563337 ubox
8 79 0.9500000 lbox
9 78 0.9500000 lbox
10 77 0.9500000 lbox
11 76 0.9500000 lbox
12 75 0.9500000 lbox
13 74 0.9500000 lbox
18 71 0.9500000 lbox
19 70 0.9500000 lbox
20 69 0.9500000 lbox
21 68 0.9500000 lbox
23 66 0.9500000 lbox
24 65 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
50 63 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
showpage
end
%%EOF
