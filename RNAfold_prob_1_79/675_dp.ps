%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (675)
} def

/sequence { (\
GGAAAGCUCAACGAUAACCACAACAAAUCGAAGCACAACAAAACAAAGUGCAAGAGCAACAAAAACAAUGUGAGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.016976822 ubox
1 8 0.013375285 ubox
1 9 0.026054146 ubox
1 12 0.017510120 ubox
1 18 0.006398274 ubox
1 19 0.083545818 ubox
1 21 0.010517695 ubox
1 24 0.008833610 ubox
1 39 0.003362765 ubox
1 60 0.005352923 ubox
1 77 0.004994163 ubox
1 78 0.203644043 ubox
2 7 0.017686911 ubox
2 8 0.021710120 ubox
2 9 0.041220776 ubox
2 12 0.005374513 ubox
2 18 0.083409114 ubox
2 19 0.005645574 ubox
2 29 0.004205961 ubox
2 77 0.155998558 ubox
2 78 0.812517643 ubox
3 8 0.038699473 ubox
3 15 0.005695508 ubox
3 28 0.004025442 ubox
3 76 0.092782522 ubox
3 77 0.664301347 ubox
4 15 0.005164427 ubox
4 76 0.467057415 ubox
4 77 0.667211628 ubox
5 15 0.021067711 ubox
5 76 0.857002868 ubox
5 77 0.010761141 ubox
6 12 0.021737556 ubox
6 15 0.007752313 ubox
6 18 0.003442984 ubox
6 19 0.003729098 ubox
6 21 0.003390690 ubox
6 34 0.010226287 ubox
6 57 0.032789657 ubox
6 75 0.987835207 ubox
7 13 0.057488399 ubox
7 33 0.010272115 ubox
7 56 0.032830871 ubox
7 74 0.987940583 ubox
8 13 0.004432316 ubox
8 14 0.008120909 ubox
8 17 0.003737453 ubox
8 32 0.010202171 ubox
8 55 0.032828846 ubox
8 73 0.987708186 ubox
9 13 0.007777513 ubox
9 33 0.004000047 ubox
9 54 0.032799221 ubox
9 70 0.005660224 ubox
9 72 0.986735435 ubox
10 15 0.004682025 ubox
10 69 0.007902824 ubox
10 71 0.737103567 ubox
11 15 0.004955386 ubox
11 69 0.044644956 ubox
11 71 0.526670294 ubox
12 30 0.608412618 ubox
12 33 0.003271781 ubox
12 70 0.745106468 ubox
12 72 0.003999160 ubox
12 79 0.003835540 ubox
13 18 0.031011748 ubox
13 19 0.054395511 ubox
13 21 0.031042636 ubox
13 24 0.022922149 ubox
13 29 0.627397991 ubox
13 66 0.022058598 ubox
13 69 0.630036328 ubox
13 71 0.009128780 ubox
13 78 0.003973201 ubox
14 28 0.624210145 ubox
14 69 0.253964124 ubox
14 71 0.017217294 ubox
14 77 0.003542377 ubox
15 20 0.011317119 ubox
15 22 0.017440280 ubox
15 23 0.012791866 ubox
15 25 0.012689281 ubox
15 26 0.030672766 ubox
15 27 0.604512327 ubox
15 64 0.007840221 ubox
15 65 0.021518829 ubox
15 67 0.158275723 ubox
15 68 0.282890621 ubox
15 70 0.026482189 ubox
16 28 0.003422171 ubox
16 69 0.025268153 ubox
17 28 0.003277284 ubox
17 69 0.003547065 ubox
18 30 0.012058425 ubox
18 33 0.003669937 ubox
18 56 0.003261350 ubox
18 70 0.004009681 ubox
19 30 0.024399892 ubox
19 70 0.008698156 ubox
19 72 0.007787377 ubox
20 28 0.006081691 ubox
20 49 0.003377161 ubox
20 69 0.008306252 ubox
20 71 0.011975357 ubox
21 30 0.040576714 ubox
21 33 0.004530302 ubox
21 48 0.003594019 ubox
21 56 0.005075050 ubox
21 70 0.014626018 ubox
22 28 0.007449641 ubox
22 69 0.014006273 ubox
23 28 0.007977157 ubox
23 71 0.008530101 ubox
24 30 0.034506573 ubox
24 33 0.009059950 ubox
24 56 0.043692889 ubox
24 70 0.011447988 ubox
25 69 0.011007487 ubox
28 32 0.004564124 ubox
28 52 0.003595749 ubox
28 53 0.007546279 ubox
28 54 0.010309666 ubox
28 55 0.750044066 ubox
28 56 0.010868905 ubox
28 58 0.005329912 ubox
29 54 0.753616238 ubox
29 56 0.029742363 ubox
29 79 0.134247884 ubox
30 34 0.004889710 ubox
30 36 0.009196683 ubox
30 39 0.010228561 ubox
30 44 0.003577162 ubox
30 57 0.013928315 ubox
30 78 0.148390599 ubox
31 77 0.148453755 ubox
32 76 0.148435480 ubox
33 39 0.021448855 ubox
33 44 0.011078215 ubox
33 49 0.013836769 ubox
33 51 0.976749616 ubox
33 57 0.020347513 ubox
33 71 0.010188690 ubox
33 75 0.148485508 ubox
34 48 0.015398938 ubox
34 50 0.978021371 ubox
34 56 0.020314240 ubox
34 70 0.012686531 ubox
34 72 0.027470518 ubox
34 74 0.146998109 ubox
35 49 0.977372162 ubox
35 69 0.012126836 ubox
35 71 0.054447743 ubox
36 48 0.976379011 ubox
36 50 0.006584500 ubox
36 54 0.009224824 ubox
36 70 0.060073769 ubox
36 72 0.116048836 ubox
37 49 0.005351334 ubox
37 69 0.057497296 ubox
37 71 0.101291345 ubox
38 49 0.042990456 ubox
38 69 0.009876634 ubox
38 71 0.098843892 ubox
39 48 0.051598689 ubox
39 50 0.011069736 ubox
39 70 0.115043097 ubox
40 49 0.011009660 ubox
40 69 0.110938444 ubox
41 69 0.003668552 ubox
43 49 0.012895226 ubox
43 71 0.012902233 ubox
44 48 0.014512997 ubox
44 50 0.003686060 ubox
44 70 0.014894619 ubox
45 49 0.003165711 ubox
45 69 0.014480767 ubox
48 57 0.015348161 ubox
48 60 0.112083757 ubox
48 66 0.012894771 ubox
49 56 0.015192732 ubox
49 58 0.178852890 ubox
49 59 0.079645155 ubox
49 61 0.005332212 ubox
49 65 0.011398574 ubox
50 57 0.204965815 ubox
50 60 0.005190504 ubox
51 56 0.204808530 ubox
51 70 0.004721105 ubox
52 69 0.007623624 ubox
52 77 0.005376359 ubox
53 69 0.021941629 ubox
53 71 0.015075753 ubox
53 76 0.006062081 ubox
54 60 0.090105164 ubox
54 66 0.042924023 ubox
54 69 0.003937917 ubox
54 75 0.006188524 ubox
54 77 0.023457171 ubox
54 78 0.009740069 ubox
55 69 0.024670900 ubox
55 71 0.011279023 ubox
55 76 0.026024156 ubox
55 77 0.006946562 ubox
56 60 0.048924573 ubox
56 66 0.054205559 ubox
56 69 0.005296096 ubox
56 71 0.135622720 ubox
56 75 0.027242457 ubox
57 70 0.168908975 ubox
57 72 0.010664424 ubox
57 74 0.027228368 ubox
58 69 0.156423919 ubox
58 71 0.012489319 ubox
59 69 0.012918867 ubox
59 71 0.261129085 ubox
60 70 0.301470697 ubox
60 72 0.005176985 ubox
61 69 0.284319984 ubox
61 71 0.006831834 ubox
62 69 0.037001094 ubox
62 71 0.011831379 ubox
63 69 0.024250352 ubox
63 71 0.007905816 ubox
64 69 0.026063026 ubox
64 71 0.012788802 ubox
65 69 0.015941966 ubox
65 71 0.058927043 ubox
66 70 0.067451625 ubox
66 72 0.006000191 ubox
67 71 0.007084679 ubox
70 78 0.003201674 ubox
71 79 0.004315318 ubox
72 78 0.008065893 ubox
73 77 0.007024193 ubox
4 77 0.9500000 lbox
5 76 0.9500000 lbox
6 75 0.9500000 lbox
7 74 0.9500000 lbox
8 73 0.9500000 lbox
9 72 0.9500000 lbox
10 71 0.9500000 lbox
12 70 0.9500000 lbox
13 69 0.9500000 lbox
28 55 0.9500000 lbox
29 54 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
showpage
end
%%EOF
