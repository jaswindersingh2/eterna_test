%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (176)
} def

/sequence { (\
GGAAAAAAGCAGAGGAGAGCCCGUGAAAGCCGGAAACGAGCGCAGGGAGCACGACCUCGAGCAAAAAAGCAUUAGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.167904076 ubox
1 62 0.006503992 ubox
1 70 0.155231254 ubox
1 72 0.006916273 ubox
1 73 0.005468854 ubox
1 78 0.101764190 ubox
2 10 0.042329817 ubox
2 62 0.004733683 ubox
2 70 0.069018952 ubox
2 72 0.005144033 ubox
2 73 0.009351462 ubox
2 76 0.003588532 ubox
2 77 0.097474133 ubox
2 78 0.144695517 ubox
3 72 0.009068891 ubox
3 73 0.006253167 ubox
3 76 0.092144728 ubox
3 77 0.142254351 ubox
4 72 0.006236504 ubox
4 73 0.009964882 ubox
4 76 0.128133822 ubox
4 77 0.008843733 ubox
5 72 0.010116433 ubox
5 73 0.014949270 ubox
5 76 0.010060847 ubox
5 77 0.006459164 ubox
6 72 0.014531127 ubox
6 73 0.040885868 ubox
6 76 0.006947511 ubox
6 77 0.005344967 ubox
7 72 0.040111272 ubox
7 73 0.062043218 ubox
7 76 0.005027641 ubox
7 77 0.007279971 ubox
8 57 0.003353470 ubox
8 72 0.063409293 ubox
8 73 0.010998661 ubox
8 76 0.007219878 ubox
8 77 0.049052514 ubox
9 20 0.003516185 ubox
9 56 0.003513590 ubox
9 58 0.012751958 ubox
9 62 0.752313780 ubox
9 70 0.055956349 ubox
9 72 0.007662590 ubox
9 73 0.003844244 ubox
9 76 0.058696994 ubox
9 78 0.005702841 ubox
10 19 0.003538598 ubox
10 59 0.073466165 ubox
10 61 0.752350660 ubox
10 69 0.055490562 ubox
10 75 0.059550913 ubox
10 79 0.011340055 ubox
11 57 0.033453462 ubox
11 73 0.007103847 ubox
12 56 0.035388348 ubox
12 57 0.005246582 ubox
12 58 0.995087388 ubox
13 57 0.998235397 ubox
14 52 0.004038926 ubox
14 55 0.048679655 ubox
14 56 0.998357168 ubox
15 52 0.008436195 ubox
15 55 0.996895950 ubox
15 56 0.003332429 ubox
15 58 0.007869509 ubox
16 57 0.007911796 ubox
17 50 0.095875876 ubox
17 52 0.847469467 ubox
17 56 0.007819988 ubox
17 58 0.003970255 ubox
18 57 0.003995925 ubox
19 50 0.992114447 ubox
19 52 0.015844688 ubox
19 56 0.003922831 ubox
20 47 0.112345493 ubox
20 49 0.993141917 ubox
21 46 0.113652706 ubox
21 47 0.992789889 ubox
22 45 0.113660539 ubox
22 46 0.992731231 ubox
22 47 0.032620325 ubox
22 53 0.004900778 ubox
23 43 0.044271485 ubox
23 52 0.004936371 ubox
24 42 0.044296738 ubox
24 44 0.989980902 ubox
24 45 0.042390432 ubox
24 46 0.004076365 ubox
24 51 0.004933021 ubox
25 41 0.027557469 ubox
25 43 0.985600602 ubox
25 50 0.004905607 ubox
29 37 0.009476786 ubox
29 41 0.992248173 ubox
29 43 0.008955616 ubox
30 38 0.019738752 ubox
30 40 0.993803495 ubox
30 42 0.009434240 ubox
31 38 0.997204599 ubox
31 40 0.013033915 ubox
31 42 0.020084228 ubox
32 37 0.995167709 ubox
32 41 0.020327360 ubox
33 37 0.045960468 ubox
45 56 0.003198606 ubox
46 55 0.003199111 ubox
49 62 0.003660883 ubox
50 61 0.003660518 ubox
52 59 0.004839831 ubox
52 79 0.018799638 ubox
53 58 0.004901912 ubox
53 78 0.019985446 ubox
54 77 0.019586529 ubox
56 75 0.019636077 ubox
57 74 0.019313605 ubox
58 79 0.083528242 ubox
59 70 0.005357797 ubox
59 72 0.047431818 ubox
59 73 0.063775485 ubox
59 77 0.006656018 ubox
59 78 0.590480562 ubox
60 72 0.066739850 ubox
60 73 0.008205108 ubox
60 76 0.007352279 ubox
60 77 0.590899325 ubox
61 70 0.256992162 ubox
61 76 0.590464133 ubox
61 78 0.003871684 ubox
62 69 0.257079180 ubox
62 75 0.590451767 ubox
63 72 0.029279290 ubox
63 73 0.149861501 ubox
63 76 0.006026723 ubox
63 77 0.012147183 ubox
64 72 0.140394837 ubox
64 73 0.379815554 ubox
64 76 0.012203541 ubox
64 77 0.013334275 ubox
65 72 0.359751069 ubox
65 73 0.072894725 ubox
65 76 0.012632357 ubox
65 77 0.014403998 ubox
66 72 0.072271347 ubox
66 73 0.086778275 ubox
66 76 0.012903456 ubox
66 77 0.025117828 ubox
67 72 0.075029664 ubox
67 73 0.028814724 ubox
67 76 0.025163132 ubox
67 77 0.035815383 ubox
68 72 0.023955045 ubox
68 73 0.018337179 ubox
68 76 0.035655151 ubox
68 77 0.323625861 ubox
69 73 0.009327840 ubox
69 76 0.382138866 ubox
69 77 0.011274654 ubox
69 78 0.038424303 ubox
70 75 0.386974366 ubox
70 79 0.028611269 ubox
71 76 0.012132585 ubox
71 77 0.025310431 ubox
72 79 0.007763292 ubox
73 79 0.006619097 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
showpage
end
%%EOF
