%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (89)
} def

/sequence { (\
GGAAAAAGGCGCGCCUCGAAAGAGGCGCUGGCGCUCGAAAGAGCAGCCCGAAAGGGCGCUGGCGCGCCGGAGGCCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.014799384 ubox
1 74 0.017359713 ubox
1 75 0.524078546 ubox
1 76 0.016339846 ubox
1 77 0.004300041 ubox
1 78 0.149510614 ubox
2 10 0.004419626 ubox
2 74 0.524749563 ubox
2 75 0.018563222 ubox
2 76 0.003242489 ubox
2 77 0.121929324 ubox
2 78 0.301551415 ubox
3 76 0.079920171 ubox
3 77 0.280657356 ubox
4 76 0.140833693 ubox
4 77 0.026237938 ubox
5 76 0.016047221 ubox
5 77 0.046391033 ubox
6 76 0.039736396 ubox
6 77 0.698751389 ubox
7 76 0.815308522 ubox
7 77 0.015692088 ubox
8 32 0.007845096 ubox
8 48 0.009392144 ubox
8 68 0.538868358 ubox
8 74 0.006941347 ubox
8 75 0.839918834 ubox
8 76 0.004238629 ubox
8 78 0.005929376 ubox
9 29 0.005653701 ubox
9 32 0.007465690 ubox
9 47 0.009419705 ubox
9 59 0.003385779 ubox
9 67 0.539098987 ubox
9 74 0.839971382 ubox
9 75 0.003775007 ubox
9 77 0.005321843 ubox
10 30 0.008702348 ubox
10 31 0.007376964 ubox
10 46 0.009410417 ubox
10 58 0.003392264 ubox
10 66 0.539089036 ubox
10 70 0.004228734 ubox
10 72 0.033030723 ubox
10 73 0.838575426 ubox
11 28 0.803401957 ubox
11 29 0.006100528 ubox
11 65 0.536914443 ubox
11 67 0.003729743 ubox
11 75 0.006286165 ubox
12 27 0.841583331 ubox
12 64 0.536305106 ubox
12 66 0.003738946 ubox
12 70 0.005479726 ubox
12 72 0.028296564 ubox
13 26 0.998032482 ubox
13 63 0.055963098 ubox
13 74 0.008341755 ubox
14 25 0.998386124 ubox
14 62 0.055643467 ubox
14 73 0.008450137 ubox
15 24 0.998473582 ubox
15 61 0.054166197 ubox
15 72 0.008563518 ubox
16 23 0.998711053 ubox
16 38 0.008578132 ubox
16 42 0.007259019 ubox
16 71 0.008548638 ubox
17 22 0.998439853 ubox
17 24 0.006566920 ubox
17 37 0.009018388 ubox
17 41 0.012175227 ubox
17 58 0.003889599 ubox
17 70 0.008468310 ubox
18 36 0.008742819 ubox
19 35 0.007256608 ubox
21 60 0.003919239 ubox
22 34 0.003707898 ubox
22 36 0.016883956 ubox
22 59 0.003900823 ubox
22 67 0.004111569 ubox
22 68 0.003742008 ubox
23 35 0.016909547 ubox
23 60 0.004158366 ubox
24 34 0.016756322 ubox
24 35 0.006231551 ubox
24 59 0.003797502 ubox
24 60 0.044774859 ubox
25 32 0.027445332 ubox
25 34 0.008788168 ubox
25 57 0.005447157 ubox
25 59 0.046889075 ubox
25 65 0.010424655 ubox
26 31 0.027474448 ubox
26 33 0.009240192 ubox
26 56 0.005463097 ubox
26 58 0.046947465 ubox
26 64 0.012322377 ubox
27 32 0.009050443 ubox
27 57 0.046900851 ubox
27 63 0.533540863 ubox
28 50 0.023501275 ubox
28 54 0.009427016 ubox
28 56 0.046797922 ubox
28 62 0.534156087 ubox
28 69 0.005254206 ubox
28 70 0.252262694 ubox
28 72 0.007613285 ubox
29 50 0.095535111 ubox
29 51 0.025677905 ubox
29 52 0.017988528 ubox
29 53 0.015992228 ubox
29 54 0.010220672 ubox
29 55 0.046016503 ubox
29 61 0.532079610 ubox
29 69 0.534223816 ubox
29 70 0.022440968 ubox
29 71 0.012635889 ubox
29 72 0.007795856 ubox
30 47 0.011052693 ubox
30 48 0.532926662 ubox
30 49 0.099798971 ubox
30 60 0.532141414 ubox
30 65 0.003397341 ubox
30 67 0.012952845 ubox
30 68 0.634129837 ubox
30 75 0.009544821 ubox
31 44 0.003456140 ubox
31 47 0.539105870 ubox
31 48 0.077018190 ubox
31 59 0.534248417 ubox
31 63 0.003189171 ubox
31 65 0.061258848 ubox
31 67 0.634306827 ubox
31 68 0.006587648 ubox
31 74 0.009561800 ubox
32 43 0.003430247 ubox
32 46 0.542607029 ubox
32 58 0.533700871 ubox
32 62 0.003192389 ubox
32 64 0.061690499 ubox
32 66 0.634250843 ubox
32 73 0.009546663 ubox
33 44 0.775657204 ubox
33 47 0.010967824 ubox
33 57 0.023622994 ubox
33 63 0.063119795 ubox
33 65 0.624568576 ubox
33 67 0.007765600 ubox
34 41 0.004781523 ubox
34 43 0.777419810 ubox
34 46 0.010941498 ubox
34 56 0.022779103 ubox
34 62 0.063368276 ubox
34 64 0.614758722 ubox
34 66 0.008009767 ubox
35 39 0.004220782 ubox
35 40 0.007725449 ubox
35 41 0.005842772 ubox
35 42 0.780018140 ubox
35 45 0.010785187 ubox
35 55 0.022690443 ubox
35 61 0.061345646 ubox
35 62 0.317150453 ubox
35 64 0.009898012 ubox
36 41 0.783709774 ubox
36 43 0.010950073 ubox
36 54 0.022647530 ubox
36 61 0.322270838 ubox
36 62 0.342058866 ubox
36 64 0.107282839 ubox
37 44 0.005743879 ubox
37 60 0.158610461 ubox
37 63 0.259375272 ubox
38 60 0.253965268 ubox
39 60 0.029945637 ubox
40 60 0.039956857 ubox
41 48 0.005788507 ubox
41 49 0.016232085 ubox
41 59 0.027753113 ubox
41 60 0.035206638 ubox
41 63 0.027376454 ubox
42 60 0.528680985 ubox
43 47 0.005762075 ubox
43 48 0.007007156 ubox
43 57 0.004192318 ubox
43 59 0.624671301 ubox
43 63 0.031130358 ubox
44 56 0.003246976 ubox
44 58 0.622962037 ubox
44 61 0.039631886 ubox
44 62 0.024206412 ubox
45 60 0.044213554 ubox
46 57 0.836200245 ubox
46 59 0.043137328 ubox
46 74 0.004381157 ubox
47 55 0.004198226 ubox
47 56 0.836947749 ubox
47 58 0.042710813 ubox
47 70 0.003890186 ubox
47 72 0.004499012 ubox
47 73 0.004370202 ubox
48 54 0.007436897 ubox
48 55 0.837077460 ubox
48 56 0.042189459 ubox
48 69 0.004027630 ubox
48 70 0.025881289 ubox
48 72 0.005149836 ubox
48 73 0.004307135 ubox
49 54 0.865453275 ubox
49 55 0.043389441 ubox
49 56 0.003975482 ubox
49 69 0.032926269 ubox
49 70 0.012559124 ubox
49 72 0.126344336 ubox
49 73 0.004420737 ubox
49 79 0.048715657 ubox
50 68 0.019202243 ubox
50 78 0.052175302 ubox
51 77 0.043588733 ubox
52 76 0.029137077 ubox
52 77 0.029792112 ubox
53 76 0.041124889 ubox
53 77 0.011633095 ubox
54 65 0.013488951 ubox
54 67 0.010263579 ubox
54 68 0.034464410 ubox
54 75 0.049737930 ubox
54 76 0.020997927 ubox
55 67 0.026940251 ubox
55 68 0.537945849 ubox
55 74 0.049631592 ubox
55 75 0.023744443 ubox
56 63 0.013909548 ubox
56 65 0.019691028 ubox
56 67 0.539210092 ubox
56 74 0.023908376 ubox
57 62 0.013923294 ubox
57 64 0.019751467 ubox
57 66 0.539649091 ubox
57 72 0.049808722 ubox
57 73 0.023946397 ubox
58 63 0.020265975 ubox
58 65 0.549611249 ubox
58 67 0.008066329 ubox
59 64 0.548697731 ubox
59 66 0.008095283 ubox
59 70 0.113346472 ubox
59 72 0.004021708 ubox
60 69 0.113730170 ubox
60 71 0.003606025 ubox
61 68 0.114231526 ubox
61 75 0.008359589 ubox
62 67 0.113528754 ubox
62 74 0.008374887 ubox
63 69 0.003886096 ubox
63 73 0.008353303 ubox
64 68 0.003688311 ubox
65 70 0.005585489 ubox
65 72 0.006681495 ubox
66 74 0.008253760 ubox
67 72 0.005998989 ubox
67 73 0.008448640 ubox
68 72 0.009563066 ubox
68 79 0.005864903 ubox
69 74 0.013296348 ubox
69 75 0.049185397 ubox
69 76 0.016590293 ubox
69 78 0.044023489 ubox
70 74 0.048453321 ubox
70 75 0.017961295 ubox
70 77 0.043030480 ubox
70 78 0.039490670 ubox
71 76 0.039898104 ubox
71 77 0.038866448 ubox
72 76 0.026377733 ubox
72 78 0.010237198 ubox
73 77 0.006675596 ubox
73 78 0.004420553 ubox
1 75 0.9500000 lbox
2 74 0.9500000 lbox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
29 61 0.9500000 lbox
30 60 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
