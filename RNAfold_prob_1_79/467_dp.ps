%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (467)
} def

/sequence { (\
GGAAAAGAGUAGCACAGGGAAAACCCGACAAAAGUCGUGAAAAGACUUCAAAAGAAGUCCUACUCAAACGACGUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.006011450 ubox
1 13 0.021165898 ubox
1 15 0.023158243 ubox
1 26 0.005854275 ubox
1 29 0.003379812 ubox
1 65 0.003836332 ubox
1 69 0.114450390 ubox
1 72 0.130114213 ubox
1 74 0.004660487 ubox
1 75 0.031744613 ubox
1 76 0.064866008 ubox
1 77 0.003846662 ubox
1 78 0.078050861 ubox
2 13 0.012292389 ubox
2 15 0.006040694 ubox
2 25 0.005806482 ubox
2 65 0.006087513 ubox
2 69 0.090181684 ubox
2 72 0.035629861 ubox
2 74 0.030664074 ubox
2 75 0.074899662 ubox
2 76 0.003175795 ubox
2 77 0.075704821 ubox
2 78 0.119036700 ubox
3 10 0.005529723 ubox
3 64 0.005102877 ubox
3 74 0.074080052 ubox
3 76 0.071205080 ubox
3 77 0.117517832 ubox
4 10 0.007358832 ubox
4 74 0.010914482 ubox
4 76 0.104306153 ubox
4 77 0.008849599 ubox
5 10 0.007927982 ubox
5 74 0.014912858 ubox
5 76 0.009677252 ubox
5 77 0.054503997 ubox
6 10 0.003511401 ubox
6 74 0.036021141 ubox
6 76 0.066353086 ubox
6 77 0.004339333 ubox
7 13 0.024353547 ubox
7 15 0.016926148 ubox
7 36 0.004074080 ubox
7 65 0.971213899 ubox
7 69 0.010623721 ubox
7 72 0.008237287 ubox
7 74 0.003917515 ubox
7 75 0.069039841 ubox
7 76 0.003252337 ubox
7 77 0.018144669 ubox
7 78 0.052117510 ubox
8 35 0.004074965 ubox
8 64 0.972448641 ubox
8 74 0.064490726 ubox
8 76 0.020152367 ubox
8 77 0.050960954 ubox
9 13 0.013190289 ubox
9 15 0.052895069 ubox
9 29 0.011338785 ubox
9 63 0.972781376 ubox
9 69 0.007271166 ubox
9 72 0.025566201 ubox
9 75 0.020389780 ubox
9 76 0.039541744 ubox
9 78 0.017003790 ubox
10 14 0.047731356 ubox
10 16 0.004793038 ubox
10 28 0.010778241 ubox
10 31 0.003827184 ubox
10 32 0.003959424 ubox
10 33 0.006295882 ubox
10 62 0.972439140 ubox
10 68 0.007015764 ubox
10 71 0.024474836 ubox
10 73 0.008732848 ubox
11 61 0.971261031 ubox
11 74 0.005879080 ubox
11 76 0.023820379 ubox
11 77 0.004475063 ubox
12 26 0.003771739 ubox
12 29 0.020087108 ubox
12 38 0.006460311 ubox
12 59 0.003651404 ubox
12 60 0.960047488 ubox
12 61 0.004236033 ubox
12 69 0.013843629 ubox
12 72 0.004018835 ubox
12 74 0.024195793 ubox
12 75 0.025978618 ubox
12 76 0.004608293 ubox
12 78 0.004355687 ubox
13 17 0.018240268 ubox
13 18 0.029713758 ubox
13 19 0.024952991 ubox
13 27 0.012164365 ubox
13 37 0.014297942 ubox
13 39 0.487270622 ubox
13 70 0.008480341 ubox
13 73 0.027154670 ubox
13 79 0.003393506 ubox
14 38 0.488422587 ubox
14 58 0.049114709 ubox
14 74 0.025973276 ubox
15 19 0.008693186 ubox
15 27 0.037314371 ubox
15 37 0.487575830 ubox
15 39 0.036322497 ubox
15 57 0.049720536 ubox
15 73 0.026316349 ubox
15 79 0.004376710 ubox
16 35 0.007241272 ubox
16 38 0.033047939 ubox
16 61 0.003429872 ubox
17 24 0.055507568 ubox
17 25 0.457673136 ubox
17 26 0.854672065 ubox
17 36 0.003831686 ubox
17 60 0.004208138 ubox
17 65 0.005360007 ubox
18 24 0.459626872 ubox
18 25 0.869601558 ubox
18 26 0.087980677 ubox
18 35 0.003214783 ubox
18 36 0.003185937 ubox
18 64 0.005364275 ubox
19 24 0.864391252 ubox
19 25 0.089023427 ubox
19 26 0.007833514 ubox
19 63 0.005344078 ubox
19 78 0.004831164 ubox
20 77 0.004826282 ubox
21 76 0.004677363 ubox
22 38 0.003268569 ubox
23 38 0.007407198 ubox
24 37 0.005973665 ubox
24 39 0.060248754 ubox
25 37 0.005706598 ubox
25 39 0.103075319 ubox
26 37 0.493052782 ubox
26 39 0.011407252 ubox
26 79 0.027742051 ubox
27 36 0.968051474 ubox
27 38 0.004130174 ubox
27 49 0.007664412 ubox
27 59 0.005272938 ubox
27 75 0.182443077 ubox
27 77 0.005790455 ubox
27 78 0.071169093 ubox
28 35 0.968548046 ubox
28 38 0.038163796 ubox
28 48 0.006990309 ubox
28 58 0.005283382 ubox
28 74 0.182687165 ubox
28 76 0.006341274 ubox
28 77 0.069750774 ubox
29 34 0.966847675 ubox
29 37 0.039233729 ubox
29 39 0.019162096 ubox
29 57 0.005268594 ubox
29 73 0.182545275 ubox
29 79 0.006070510 ubox
30 35 0.005700297 ubox
30 38 0.018124717 ubox
30 74 0.004061937 ubox
30 76 0.016126768 ubox
30 77 0.011110182 ubox
31 35 0.005046090 ubox
31 38 0.003809137 ubox
31 74 0.023464804 ubox
31 76 0.012525737 ubox
31 77 0.006581426 ubox
32 48 0.031303055 ubox
32 74 0.016542622 ubox
32 76 0.006670496 ubox
32 77 0.006002588 ubox
33 38 0.005814762 ubox
33 47 0.037219555 ubox
33 74 0.010269030 ubox
33 76 0.006788699 ubox
34 46 0.038769567 ubox
34 69 0.007816273 ubox
34 72 0.228067227 ubox
34 75 0.006019736 ubox
35 45 0.038802043 ubox
35 68 0.007598952 ubox
35 71 0.228377170 ubox
36 44 0.038857356 ubox
36 70 0.228452103 ubox
36 73 0.005170554 ubox
37 46 0.018343221 ubox
37 60 0.004279673 ubox
37 63 0.007118900 ubox
37 65 0.003566629 ubox
37 69 0.227386563 ubox
37 72 0.005326961 ubox
38 42 0.018384245 ubox
38 43 0.078791656 ubox
38 44 0.003637512 ubox
38 45 0.018391740 ubox
38 50 0.022020173 ubox
38 62 0.007144917 ubox
38 66 0.127956795 ubox
38 67 0.024683829 ubox
38 68 0.182081334 ubox
38 71 0.004275465 ubox
39 49 0.024460656 ubox
39 59 0.004099665 ubox
39 60 0.009084547 ubox
39 61 0.006330327 ubox
39 63 0.016458639 ubox
39 64 0.010887993 ubox
39 65 0.193499909 ubox
40 48 0.024334560 ubox
40 61 0.005485111 ubox
40 64 0.190834876 ubox
41 47 0.022748307 ubox
41 61 0.012318528 ubox
41 64 0.017271535 ubox
42 61 0.057829418 ubox
42 64 0.015326654 ubox
43 61 0.115079177 ubox
43 64 0.012869530 ubox
44 58 0.004271179 ubox
44 59 0.992051513 ubox
44 60 0.083267143 ubox
44 63 0.008281300 ubox
45 58 0.998155860 ubox
46 54 0.003990316 ubox
46 57 0.998639463 ubox
47 53 0.004035996 ubox
47 55 0.003455203 ubox
47 56 0.998284239 ubox
48 52 0.003438163 ubox
48 54 0.004351661 ubox
48 55 0.998270297 ubox
49 54 0.996962135 ubox
62 74 0.004602216 ubox
63 73 0.005325203 ubox
64 71 0.009506664 ubox
65 70 0.011600090 ubox
66 74 0.007864707 ubox
66 76 0.013447094 ubox
66 77 0.028622354 ubox
67 74 0.014195348 ubox
67 76 0.031570608 ubox
67 77 0.021964821 ubox
68 74 0.067452543 ubox
68 76 0.023037947 ubox
68 77 0.014796188 ubox
69 73 0.070762486 ubox
69 79 0.582460488 ubox
70 74 0.007566691 ubox
70 75 0.085774248 ubox
70 76 0.010942950 ubox
70 77 0.029822448 ubox
70 78 0.612507764 ubox
71 76 0.040477029 ubox
71 77 0.582588671 ubox
72 79 0.275125741 ubox
73 77 0.007564518 ubox
73 78 0.286283811 ubox
74 79 0.006163211 ubox
75 79 0.009286776 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
