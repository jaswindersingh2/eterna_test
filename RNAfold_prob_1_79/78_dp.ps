%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (78)
} def

/sequence { (\
GGAAAAAGACACGUGACAAAGGUCACCCGAGGGAUGGAAGCAUCACAUCGAAAGAUGCCAAGGGUGUCGAUGCACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.256939189 ubox
1 12 0.118293734 ubox
1 17 0.003971730 ubox
1 27 0.003314031 ubox
1 28 0.020827352 ubox
1 59 0.020206197 ubox
1 71 0.004310809 ubox
1 73 0.089766381 ubox
1 75 0.103814961 ubox
1 76 0.044307204 ubox
1 77 0.006017473 ubox
1 78 0.156190581 ubox
2 10 0.056361173 ubox
2 12 0.036256564 ubox
2 27 0.020897073 ubox
2 58 0.020147242 ubox
2 71 0.004431899 ubox
2 73 0.081738853 ubox
2 75 0.050911738 ubox
2 76 0.007939060 ubox
2 77 0.155035388 ubox
2 78 0.210572828 ubox
3 71 0.068750363 ubox
3 76 0.151020915 ubox
3 77 0.210160343 ubox
4 71 0.027045163 ubox
4 76 0.202102131 ubox
4 77 0.014135768 ubox
5 71 0.074221645 ubox
5 76 0.017488108 ubox
5 77 0.011627610 ubox
6 71 0.040571621 ubox
6 76 0.013642420 ubox
6 77 0.025417188 ubox
7 35 0.004134639 ubox
7 71 0.019390276 ubox
7 76 0.029408451 ubox
7 77 0.016893809 ubox
8 12 0.032195964 ubox
8 17 0.003734420 ubox
8 24 0.015972108 ubox
8 27 0.005704235 ubox
8 68 0.313145936 ubox
8 73 0.011372187 ubox
8 75 0.024206519 ubox
8 76 0.019593425 ubox
8 77 0.039671584 ubox
8 78 0.460850513 ubox
9 23 0.016573611 ubox
9 67 0.313908241 ubox
9 76 0.043110193 ubox
9 77 0.457567487 ubox
10 15 0.004289651 ubox
10 22 0.016620355 ubox
10 29 0.008687067 ubox
10 31 0.005500083 ubox
10 32 0.006919148 ubox
10 66 0.314033738 ubox
10 69 0.004659813 ubox
10 72 0.014087443 ubox
10 79 0.053876697 ubox
11 23 0.009235985 ubox
11 65 0.313494768 ubox
11 71 0.012985724 ubox
11 76 0.139874589 ubox
11 77 0.107265558 ubox
12 21 0.017850277 ubox
12 22 0.009887263 ubox
12 29 0.007510802 ubox
12 31 0.004060545 ubox
12 63 0.004773324 ubox
12 64 0.312822164 ubox
12 69 0.009326783 ubox
12 72 0.006858361 ubox
12 79 0.040096007 ubox
13 26 0.339991800 ubox
13 27 0.007346518 ubox
13 28 0.005087050 ubox
13 68 0.003432789 ubox
13 71 0.006094972 ubox
13 73 0.010954072 ubox
13 75 0.935638614 ubox
13 76 0.008110715 ubox
13 78 0.030549135 ubox
14 19 0.003822103 ubox
14 20 0.009576806 ubox
14 25 0.341444859 ubox
14 62 0.009160897 ubox
14 69 0.006238695 ubox
14 70 0.005967423 ubox
14 72 0.010379094 ubox
14 74 0.937293857 ubox
14 79 0.007754974 ubox
15 24 0.342299566 ubox
15 68 0.008792978 ubox
15 71 0.006702051 ubox
15 73 0.937581313 ubox
15 75 0.010108268 ubox
15 76 0.006650420 ubox
15 77 0.003717184 ubox
15 78 0.013255409 ubox
16 23 0.342147462 ubox
16 67 0.008789240 ubox
16 71 0.018878714 ubox
16 76 0.003979858 ubox
16 77 0.013041234 ubox
17 21 0.006396498 ubox
17 22 0.341337276 ubox
17 66 0.007306505 ubox
17 69 0.009764895 ubox
17 72 0.909567942 ubox
17 79 0.003162893 ubox
18 65 0.004976099 ubox
18 71 0.885896007 ubox
19 71 0.088086324 ubox
19 77 0.007167265 ubox
20 67 0.004305905 ubox
20 71 0.010373198 ubox
20 76 0.008216083 ubox
20 77 0.003331346 ubox
21 59 0.004282648 ubox
21 67 0.005815761 ubox
21 68 0.855477285 ubox
21 71 0.003359030 ubox
21 75 0.008291002 ubox
21 76 0.004070237 ubox
22 56 0.007102125 ubox
22 58 0.004283114 ubox
22 67 0.830355681 ubox
22 68 0.360890531 ubox
22 71 0.003904002 ubox
22 73 0.007900933 ubox
22 75 0.004146822 ubox
23 55 0.007286846 ubox
23 57 0.003346197 ubox
23 66 0.016668817 ubox
23 70 0.004980795 ubox
23 72 0.007878381 ubox
23 74 0.004113380 ubox
24 54 0.007360735 ubox
24 66 0.938728799 ubox
24 69 0.003974116 ubox
25 65 0.939352684 ubox
26 32 0.010442850 ubox
26 33 0.007867218 ubox
26 63 0.004659577 ubox
26 64 0.939722637 ubox
27 31 0.012516973 ubox
27 32 0.033515045 ubox
27 33 0.022051740 ubox
27 37 0.044379120 ubox
27 50 0.003683505 ubox
27 54 0.004218074 ubox
27 62 0.005602808 ubox
27 63 0.984968945 ubox
27 64 0.003588336 ubox
27 79 0.004786060 ubox
28 32 0.022981902 ubox
28 33 0.009060676 ubox
28 36 0.044525408 ubox
28 37 0.009753669 ubox
28 50 0.075683086 ubox
28 62 0.985052330 ubox
28 63 0.006871529 ubox
28 79 0.097417865 ubox
29 35 0.030913971 ubox
29 44 0.004665835 ubox
29 49 0.076879255 ubox
29 58 0.005636806 ubox
29 59 0.010811788 ubox
29 77 0.005340624 ubox
29 78 0.105363970 ubox
30 35 0.011261757 ubox
30 43 0.004436846 ubox
30 48 0.074801105 ubox
30 76 0.007385665 ubox
30 77 0.105156086 ubox
31 46 0.034252454 ubox
31 58 0.024163704 ubox
31 59 0.979933665 ubox
31 75 0.008755155 ubox
31 76 0.104664660 ubox
32 41 0.004217710 ubox
32 44 0.007675718 ubox
32 46 0.051326262 ubox
32 58 0.977787196 ubox
32 59 0.050473996 ubox
32 73 0.007529042 ubox
32 75 0.104327794 ubox
32 78 0.007562373 ubox
33 41 0.004009755 ubox
33 43 0.005118177 ubox
33 44 0.992868955 ubox
33 49 0.046334262 ubox
33 58 0.032771114 ubox
33 59 0.004953663 ubox
33 73 0.013164695 ubox
33 75 0.003344651 ubox
33 77 0.007356641 ubox
33 78 0.012730470 ubox
34 43 0.994467691 ubox
34 48 0.046423549 ubox
34 56 0.026075859 ubox
34 71 0.014478407 ubox
34 76 0.006959970 ubox
34 77 0.012416223 ubox
35 42 0.994474284 ubox
35 45 0.013900848 ubox
35 47 0.046560517 ubox
35 51 0.004704254 ubox
35 55 0.025049416 ubox
35 60 0.006121682 ubox
35 70 0.014618231 ubox
35 72 0.004611848 ubox
35 74 0.007604923 ubox
35 79 0.011756743 ubox
36 41 0.993873755 ubox
36 44 0.015844603 ubox
36 46 0.046604356 ubox
36 59 0.006866194 ubox
36 71 0.004555499 ubox
36 73 0.005233942 ubox
36 75 0.011408480 ubox
36 76 0.008250389 ubox
36 78 0.019130668 ubox
37 41 0.009832298 ubox
37 43 0.011586428 ubox
37 44 0.044031711 ubox
37 49 0.005762658 ubox
37 58 0.005555050 ubox
37 59 0.003303435 ubox
37 68 0.014884699 ubox
37 75 0.009010703 ubox
37 77 0.018981602 ubox
37 78 0.024275524 ubox
38 43 0.040311958 ubox
38 48 0.005582027 ubox
38 67 0.012370260 ubox
38 71 0.003426573 ubox
38 76 0.018347493 ubox
38 77 0.024330034 ubox
39 43 0.006187489 ubox
39 76 0.021487874 ubox
40 46 0.004593889 ubox
40 49 0.008402519 ubox
40 58 0.035010855 ubox
40 65 0.010346835 ubox
40 67 0.010971995 ubox
40 73 0.061162056 ubox
40 75 0.010481000 ubox
41 50 0.014942039 ubox
41 57 0.036794645 ubox
41 63 0.003738809 ubox
41 64 0.010506120 ubox
41 66 0.013168675 ubox
41 72 0.062242362 ubox
42 48 0.005141619 ubox
42 56 0.036781514 ubox
42 65 0.013187620 ubox
42 71 0.062237705 ubox
43 47 0.004689833 ubox
43 51 0.005898210 ubox
43 55 0.036780593 ubox
43 63 0.004194408 ubox
43 64 0.013133633 ubox
43 70 0.062242735 ubox
44 50 0.006074440 ubox
44 54 0.036753661 ubox
44 62 0.004682535 ubox
44 63 0.013002997 ubox
44 69 0.062230356 ubox
45 67 0.060797544 ubox
46 50 0.004413740 ubox
46 54 0.004159881 ubox
46 57 0.982849210 ubox
46 66 0.061122622 ubox
46 72 0.094626261 ubox
47 56 0.986961690 ubox
47 65 0.061075594 ubox
47 71 0.095027480 ubox
48 55 0.987605561 ubox
48 64 0.060956435 ubox
48 70 0.095081275 ubox
49 54 0.987502474 ubox
49 57 0.003544289 ubox
49 62 0.004083853 ubox
49 63 0.060860686 ubox
49 69 0.095085614 ubox
49 72 0.004083653 ubox
50 59 0.006834253 ubox
50 68 0.077695417 ubox
50 71 0.004025863 ubox
50 73 0.014240738 ubox
51 56 0.003847436 ubox
51 67 0.067521574 ubox
51 71 0.013174750 ubox
52 67 0.004605618 ubox
52 71 0.006006625 ubox
52 77 0.003247478 ubox
53 65 0.007683831 ubox
53 67 0.005501195 ubox
53 76 0.003725416 ubox
54 58 0.009283933 ubox
54 59 0.021888966 ubox
54 65 0.003816243 ubox
54 68 0.082350767 ubox
54 75 0.003848266 ubox
55 65 0.016036120 ubox
55 67 0.090183466 ubox
56 61 0.010804800 ubox
56 62 0.009690195 ubox
56 63 0.010720617 ubox
56 64 0.016416224 ubox
56 66 0.105292146 ubox
56 74 0.004316028 ubox
57 65 0.108893262 ubox
57 73 0.004512188 ubox
58 62 0.016519643 ubox
58 63 0.041312266 ubox
58 64 0.109779512 ubox
58 72 0.004355770 ubox
59 63 0.109291313 ubox
59 66 0.003458245 ubox
62 68 0.003738648 ubox
62 73 0.007314249 ubox
62 77 0.022990026 ubox
62 78 0.008705094 ubox
63 76 0.029937418 ubox
63 77 0.006185145 ubox
64 71 0.007372855 ubox
64 73 0.003773772 ubox
64 75 0.039174303 ubox
65 70 0.007361216 ubox
65 72 0.003709291 ubox
65 74 0.039578841 ubox
66 73 0.039790430 ubox
67 72 0.037022316 ubox
68 72 0.004229506 ubox
68 79 0.026490662 ubox
69 73 0.009448210 ubox
69 75 0.016054900 ubox
69 76 0.003871364 ubox
69 77 0.007541595 ubox
69 78 0.148057288 ubox
70 76 0.008110011 ubox
70 77 0.146167693 ubox
71 79 0.007300632 ubox
72 76 0.003320783 ubox
72 78 0.011851785 ubox
73 79 0.007495118 ubox
75 79 0.004355328 ubox
13 75 0.9500000 lbox
14 74 0.9500000 lbox
15 73 0.9500000 lbox
17 72 0.9500000 lbox
18 71 0.9500000 lbox
21 68 0.9500000 lbox
22 67 0.9500000 lbox
24 66 0.9500000 lbox
25 65 0.9500000 lbox
26 64 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
