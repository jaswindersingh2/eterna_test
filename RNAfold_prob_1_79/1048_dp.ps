%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1048)
} def

/sequence { (\
GGAAAAGGCAAAGCCAAGCUCAAAGAGCAAGCUACAAAGUAGCAACUCGAAACGAGAAGCGAAACGCACCAUAGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.023627091 ubox
1 15 0.036724696 ubox
1 19 0.007047999 ubox
1 20 0.016310658 ubox
1 21 0.026943550 ubox
1 46 0.033977788 ubox
1 47 0.025134427 ubox
1 48 0.061001477 ubox
1 53 0.035819994 ubox
1 60 0.020553464 ubox
1 65 0.014780744 ubox
1 67 0.007122845 ubox
1 69 0.031064774 ubox
1 70 0.625670002 ubox
1 72 0.007232184 ubox
1 75 0.038733489 ubox
1 76 0.054085937 ubox
1 77 0.010402456 ubox
1 78 0.325119021 ubox
2 9 0.014642131 ubox
2 14 0.036649378 ubox
2 19 0.021843786 ubox
2 20 0.022510743 ubox
2 21 0.027230053 ubox
2 46 0.035234434 ubox
2 47 0.049083450 ubox
2 48 0.098505594 ubox
2 53 0.021668297 ubox
2 60 0.017495309 ubox
2 65 0.009587490 ubox
2 67 0.004886566 ubox
2 69 0.623332804 ubox
2 70 0.046741621 ubox
2 72 0.006192034 ubox
2 75 0.062155825 ubox
2 76 0.012731034 ubox
2 77 0.308736406 ubox
2 78 0.463517388 ubox
3 20 0.026676676 ubox
3 47 0.093910636 ubox
3 72 0.010174729 ubox
3 76 0.287250147 ubox
3 77 0.453973797 ubox
4 47 0.006386907 ubox
4 72 0.015726735 ubox
4 76 0.396843771 ubox
4 77 0.030073596 ubox
5 47 0.004835154 ubox
5 72 0.025697453 ubox
5 76 0.033471193 ubox
5 77 0.028185623 ubox
6 47 0.006654772 ubox
6 72 0.021106431 ubox
6 76 0.031199272 ubox
6 77 0.128904950 ubox
7 14 0.016851365 ubox
7 15 0.970529583 ubox
7 20 0.027488975 ubox
7 21 0.009571751 ubox
7 46 0.004985674 ubox
7 65 0.006007367 ubox
7 69 0.004939372 ubox
7 70 0.035536321 ubox
7 75 0.020105883 ubox
7 76 0.161870338 ubox
7 77 0.003954921 ubox
7 78 0.022516035 ubox
8 14 0.971598897 ubox
8 15 0.007722694 ubox
8 19 0.030979879 ubox
8 60 0.017572707 ubox
8 65 0.003371831 ubox
8 67 0.008800649 ubox
8 69 0.035271834 ubox
8 75 0.168689032 ubox
8 77 0.015914336 ubox
8 78 0.027904752 ubox
9 13 0.964545200 ubox
9 18 0.031037489 ubox
9 59 0.017631823 ubox
9 66 0.008850659 ubox
9 74 0.168811911 ubox
9 79 0.041953900 ubox
10 72 0.017466874 ubox
10 77 0.009929628 ubox
11 72 0.026764443 ubox
11 76 0.007576403 ubox
11 77 0.119565542 ubox
12 20 0.012890083 ubox
12 33 0.011491761 ubox
12 72 0.005865696 ubox
12 76 0.133449199 ubox
13 19 0.013740532 ubox
13 28 0.006128846 ubox
13 32 0.012036206 ubox
13 60 0.014602052 ubox
13 67 0.008489130 ubox
13 69 0.015568604 ubox
13 70 0.021060470 ubox
13 72 0.004629548 ubox
13 75 0.135263773 ubox
14 18 0.013657005 ubox
14 27 0.006105728 ubox
14 31 0.011922031 ubox
14 59 0.014574361 ubox
14 66 0.008468777 ubox
14 74 0.134648161 ubox
15 25 0.004742887 ubox
15 74 0.009356891 ubox
15 79 0.003882997 ubox
16 72 0.028458906 ubox
16 76 0.004160945 ubox
16 77 0.053569621 ubox
17 33 0.004138458 ubox
17 72 0.008140331 ubox
17 76 0.060465269 ubox
17 77 0.004915036 ubox
18 28 0.992465844 ubox
18 32 0.004314535 ubox
18 53 0.005528186 ubox
18 60 0.007412326 ubox
18 75 0.060770485 ubox
19 25 0.006329208 ubox
19 27 0.993507408 ubox
19 31 0.004314702 ubox
19 54 0.011455855 ubox
19 56 0.028335076 ubox
19 59 0.007402279 ubox
19 74 0.060633870 ubox
20 24 0.005927596 ubox
20 25 0.006539861 ubox
20 26 0.992750684 ubox
20 30 0.004129685 ubox
20 50 0.011166947 ubox
20 55 0.034223460 ubox
20 58 0.006551807 ubox
20 73 0.056191083 ubox
21 25 0.984428798 ubox
21 27 0.006281579 ubox
21 49 0.011887222 ubox
21 54 0.034883779 ubox
21 56 0.003482105 ubox
21 79 0.003978109 ubox
22 72 0.010694924 ubox
23 72 0.004869699 ubox
24 72 0.003729064 ubox
25 48 0.068400779 ubox
25 69 0.012482469 ubox
25 70 0.009410964 ubox
25 77 0.052060428 ubox
25 78 0.022159823 ubox
26 47 0.068469534 ubox
26 76 0.057361218 ubox
26 77 0.015932518 ubox
27 43 0.003571734 ubox
27 46 0.068193432 ubox
27 60 0.005047815 ubox
27 67 0.015114944 ubox
27 69 0.005241182 ubox
27 75 0.059844885 ubox
27 76 0.003332824 ubox
27 78 0.004816021 ubox
28 42 0.003569301 ubox
28 59 0.005071132 ubox
28 66 0.015117124 ubox
28 74 0.059829072 ubox
29 47 0.007891927 ubox
29 72 0.006219209 ubox
29 76 0.003237727 ubox
29 77 0.104038739 ubox
30 47 0.005480582 ubox
30 72 0.009028057 ubox
30 76 0.119463740 ubox
30 77 0.003406830 ubox
31 40 0.032294824 ubox
31 43 0.990485887 ubox
31 67 0.003288862 ubox
31 75 0.122548209 ubox
32 39 0.033065134 ubox
32 42 0.991543839 ubox
32 66 0.003284785 ubox
32 74 0.122549235 ubox
33 38 0.031492913 ubox
33 41 0.991261027 ubox
33 73 0.122039238 ubox
34 40 0.990300976 ubox
34 72 0.116684949 ubox
35 39 0.980624213 ubox
35 42 0.007710658 ubox
35 66 0.012986773 ubox
38 47 0.004863305 ubox
39 46 0.005722720 ubox
39 65 0.100662573 ubox
39 67 0.033382911 ubox
39 69 0.018507191 ubox
39 70 0.003627315 ubox
39 78 0.003377346 ubox
40 45 0.005601030 ubox
40 61 0.003308272 ubox
40 62 0.011627909 ubox
40 63 0.014332912 ubox
40 64 0.095305512 ubox
40 66 0.030677595 ubox
40 68 0.017929770 ubox
41 76 0.005547695 ubox
42 60 0.120496937 ubox
42 67 0.014676263 ubox
42 75 0.006439928 ubox
43 59 0.120588549 ubox
43 61 0.008925797 ubox
43 66 0.014657631 ubox
43 74 0.006453882 ubox
46 54 0.015812551 ubox
46 56 0.910720159 ubox
46 59 0.010782513 ubox
46 79 0.006207123 ubox
47 51 0.003593364 ubox
47 52 0.004682627 ubox
47 54 0.005595822 ubox
47 55 0.948450853 ubox
47 57 0.053444117 ubox
47 58 0.008174140 ubox
47 62 0.031858042 ubox
48 54 0.952335719 ubox
48 56 0.056630567 ubox
48 61 0.033327199 ubox
48 66 0.004222204 ubox
48 79 0.041209854 ubox
49 53 0.891010703 ubox
49 60 0.033043508 ubox
49 65 0.005470818 ubox
49 78 0.045981930 ubox
50 77 0.045862059 ubox
51 76 0.043243863 ubox
53 59 0.011495836 ubox
53 61 0.013816362 ubox
53 74 0.040075220 ubox
53 79 0.030556521 ubox
54 60 0.013968665 ubox
54 70 0.004779415 ubox
54 72 0.009733937 ubox
54 78 0.028575802 ubox
55 72 0.016205665 ubox
55 76 0.003513108 ubox
55 77 0.026004022 ubox
56 65 0.005298135 ubox
56 69 0.008679266 ubox
56 70 0.043500166 ubox
56 75 0.004394212 ubox
56 76 0.010936865 ubox
56 78 0.382270488 ubox
57 72 0.007258545 ubox
57 76 0.006571514 ubox
57 77 0.410330672 ubox
58 72 0.009180548 ubox
58 76 0.429894016 ubox
58 77 0.003500581 ubox
59 65 0.033916032 ubox
59 67 0.839064232 ubox
59 69 0.010770722 ubox
59 70 0.006695349 ubox
59 72 0.004794430 ubox
59 75 0.440343404 ubox
60 66 0.839896267 ubox
60 74 0.440255006 ubox
60 79 0.160496768 ubox
61 65 0.785979565 ubox
61 67 0.023645399 ubox
61 69 0.018372986 ubox
61 70 0.051062105 ubox
61 72 0.010363110 ubox
61 75 0.004590741 ubox
61 77 0.003288584 ubox
61 78 0.175830151 ubox
62 72 0.045089205 ubox
62 76 0.004318442 ubox
62 77 0.174104310 ubox
63 72 0.052435565 ubox
63 76 0.151626279 ubox
63 77 0.025039168 ubox
64 72 0.014170968 ubox
64 76 0.034353140 ubox
64 77 0.009150445 ubox
65 74 0.084799432 ubox
65 79 0.003214675 ubox
66 70 0.029834833 ubox
66 72 0.003896255 ubox
66 75 0.264860568 ubox
67 74 0.265107661 ubox
68 72 0.017981053 ubox
68 76 0.006010860 ubox
68 77 0.003189819 ubox
69 74 0.060044651 ubox
70 74 0.022800808 ubox
70 79 0.005864566 ubox
71 76 0.011369911 ubox
71 77 0.018671818 ubox
72 79 0.008722648 ubox
73 77 0.005526503 ubox
74 78 0.024885684 ubox
75 79 0.009394143 ubox
1 70 0.9500000 lbox
2 69 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
showpage
end
%%EOF
