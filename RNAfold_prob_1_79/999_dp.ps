%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (999)
} def

/sequence { (\
GGAAACGGGAAUCCCAAGCUCAAAGAGCAAGCAUCAAAGAUGCAACCGCAAAGCGGACGGCCAAGCCACUUAAUGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.070038460 ubox
1 14 0.065748601 ubox
1 15 0.022705832 ubox
1 19 0.012788377 ubox
1 20 0.030893838 ubox
1 21 0.050359390 ubox
1 47 0.028555625 ubox
1 58 0.047487605 ubox
1 62 0.064271273 ubox
1 67 0.066559782 ubox
1 69 0.061280116 ubox
1 70 0.061248677 ubox
1 71 0.020584574 ubox
1 74 0.009683613 ubox
1 76 0.012105622 ubox
1 77 0.013377837 ubox
1 78 0.407032909 ubox
2 6 0.016174943 ubox
2 13 0.066323443 ubox
2 14 0.021805640 ubox
2 19 0.041007044 ubox
2 20 0.042102975 ubox
2 21 0.055629651 ubox
2 46 0.028462032 ubox
2 58 0.029162279 ubox
2 61 0.064113506 ubox
2 62 0.004477326 ubox
2 66 0.066270859 ubox
2 67 0.006009699 ubox
2 69 0.070130457 ubox
2 70 0.019993843 ubox
2 71 0.046758634 ubox
2 74 0.007237762 ubox
2 76 0.015027409 ubox
2 77 0.382355144 ubox
2 78 0.779532299 ubox
3 12 0.065647999 ubox
3 20 0.054656433 ubox
3 70 0.045543063 ubox
3 71 0.036010555 ubox
3 74 0.018746507 ubox
3 76 0.335706165 ubox
3 77 0.705732660 ubox
4 12 0.005128481 ubox
4 20 0.003794238 ubox
4 70 0.035086523 ubox
4 71 0.033541736 ubox
4 74 0.037002763 ubox
4 76 0.548519278 ubox
4 77 0.453093758 ubox
5 70 0.031047303 ubox
5 71 0.015984696 ubox
5 74 0.073533892 ubox
5 76 0.581449897 ubox
5 77 0.013521618 ubox
6 18 0.016234695 ubox
6 48 0.008731792 ubox
6 56 0.003566971 ubox
6 59 0.026647431 ubox
6 60 0.010447906 ubox
6 65 0.006093506 ubox
6 75 0.668328796 ubox
6 79 0.076335041 ubox
7 13 0.011552043 ubox
7 14 0.134947426 ubox
7 15 0.954459179 ubox
7 21 0.014557414 ubox
7 47 0.008891793 ubox
7 58 0.023887683 ubox
7 61 0.003481743 ubox
7 62 0.014781411 ubox
7 67 0.015721752 ubox
7 69 0.019526404 ubox
7 70 0.018456516 ubox
7 71 0.029078992 ubox
7 74 0.130266877 ubox
7 78 0.068109543 ubox
8 12 0.007606740 ubox
8 13 0.135191693 ubox
8 14 0.955914496 ubox
8 15 0.216381138 ubox
8 20 0.014550167 ubox
8 46 0.008677373 ubox
8 58 0.003736297 ubox
8 61 0.014517721 ubox
8 62 0.015874027 ubox
8 66 0.015686175 ubox
8 67 0.012909078 ubox
8 69 0.019020217 ubox
8 70 0.034446508 ubox
8 71 0.010543160 ubox
8 77 0.037865541 ubox
8 78 0.020494642 ubox
9 13 0.940485619 ubox
9 14 0.216155866 ubox
9 15 0.015621777 ubox
9 19 0.014531897 ubox
9 61 0.015871875 ubox
9 66 0.012918322 ubox
9 69 0.034626162 ubox
9 70 0.009052460 ubox
9 71 0.024362766 ubox
9 76 0.028058292 ubox
9 77 0.019694091 ubox
9 78 0.065974522 ubox
10 70 0.023610587 ubox
10 71 0.034378953 ubox
10 74 0.004433577 ubox
10 76 0.017871425 ubox
10 77 0.065888596 ubox
11 70 0.030531432 ubox
11 71 0.004064336 ubox
11 74 0.015348015 ubox
11 76 0.063669425 ubox
12 16 0.004615619 ubox
12 17 0.004096040 ubox
12 57 0.004700548 ubox
12 63 0.003729166 ubox
12 68 0.005481979 ubox
12 73 0.014837069 ubox
12 75 0.058924516 ubox
13 56 0.004733059 ubox
13 60 0.013921014 ubox
13 75 0.010570955 ubox
14 55 0.004505143 ubox
14 59 0.013883907 ubox
14 60 0.020776540 ubox
14 75 0.003841644 ubox
15 59 0.020822258 ubox
15 75 0.021849325 ubox
15 79 0.006338678 ubox
16 70 0.007493788 ubox
16 71 0.023737366 ubox
16 74 0.020840793 ubox
16 76 0.004960377 ubox
16 77 0.012303468 ubox
17 70 0.023589428 ubox
17 71 0.009592279 ubox
17 74 0.008412336 ubox
17 76 0.011450287 ubox
17 77 0.009773406 ubox
18 28 0.986123576 ubox
18 69 0.009735648 ubox
18 76 0.007225166 ubox
18 78 0.005184089 ubox
19 25 0.005883792 ubox
19 27 0.987195108 ubox
19 75 0.007296326 ubox
20 24 0.005703368 ubox
20 25 0.006442453 ubox
20 26 0.986426350 ubox
21 25 0.978145293 ubox
21 75 0.006548940 ubox
21 79 0.003593281 ubox
22 74 0.006480481 ubox
23 71 0.006909501 ubox
24 70 0.007390245 ubox
25 69 0.007391381 ubox
25 71 0.008170929 ubox
25 78 0.157103603 ubox
26 70 0.008365548 ubox
26 77 0.157245297 ubox
27 69 0.008339093 ubox
27 76 0.157319296 ubox
28 75 0.157384390 ubox
29 70 0.004414048 ubox
29 71 0.012930527 ubox
29 74 0.141715839 ubox
29 77 0.005981436 ubox
30 70 0.014183039 ubox
30 71 0.010017799 ubox
30 74 0.008458732 ubox
30 76 0.005633095 ubox
30 77 0.007114093 ubox
31 43 0.998836466 ubox
31 69 0.005544925 ubox
31 76 0.007290345 ubox
32 42 0.999901826 ubox
32 75 0.007419237 ubox
33 41 0.999395188 ubox
33 74 0.007341078 ubox
34 39 0.008310918 ubox
34 40 0.998773926 ubox
34 73 0.006961466 ubox
35 39 0.990486309 ubox
37 71 0.004941927 ubox
38 70 0.005367336 ubox
39 69 0.005467539 ubox
43 59 0.004211693 ubox
44 70 0.003671107 ubox
44 71 0.008230141 ubox
44 74 0.004064021 ubox
44 77 0.005942906 ubox
45 70 0.007682181 ubox
45 71 0.003974547 ubox
45 74 0.003893413 ubox
45 76 0.006775405 ubox
46 55 0.006091250 ubox
46 56 0.993901762 ubox
46 60 0.016082252 ubox
46 75 0.006436786 ubox
47 53 0.004479605 ubox
47 55 0.998502146 ubox
47 56 0.007160372 ubox
47 59 0.016166426 ubox
47 75 0.006594096 ubox
48 54 0.998502146 ubox
48 58 0.016242431 ubox
48 66 0.009622217 ubox
48 74 0.006321945 ubox
48 76 0.021822519 ubox
49 53 0.991252368 ubox
49 55 0.003202028 ubox
49 56 0.014734151 ubox
49 65 0.009666843 ubox
49 75 0.023528234 ubox
50 74 0.022460525 ubox
51 71 0.031815660 ubox
52 70 0.034677942 ubox
52 77 0.003937470 ubox
53 61 0.010498373 ubox
53 69 0.034887282 ubox
53 76 0.004727868 ubox
54 60 0.010518728 ubox
54 75 0.004828323 ubox
54 79 0.024719708 ubox
55 62 0.004791933 ubox
55 67 0.035243689 ubox
55 70 0.005645756 ubox
55 74 0.004563429 ubox
55 78 0.027545040 ubox
56 61 0.004895578 ubox
56 66 0.035265882 ubox
56 69 0.011000185 ubox
56 70 0.003765059 ubox
56 71 0.011518025 ubox
56 77 0.027800962 ubox
57 70 0.030775967 ubox
57 71 0.039700774 ubox
57 74 0.004573483 ubox
57 76 0.035700048 ubox
58 65 0.045703721 ubox
58 75 0.038444456 ubox
58 79 0.012622966 ubox
59 66 0.019064140 ubox
59 67 0.990765100 ubox
59 69 0.015286353 ubox
59 70 0.016511194 ubox
59 74 0.023744926 ubox
59 77 0.004332698 ubox
59 78 0.013155927 ubox
60 66 0.991851029 ubox
60 67 0.009085432 ubox
60 69 0.017649800 ubox
60 76 0.007558353 ubox
60 77 0.011703326 ubox
61 65 0.984655825 ubox
61 75 0.008638524 ubox
62 75 0.012673318 ubox
63 70 0.004371077 ubox
63 71 0.029319236 ubox
63 74 0.011694860 ubox
64 70 0.031904497 ubox
64 71 0.005700554 ubox
64 77 0.019955076 ubox
65 69 0.031455018 ubox
65 70 0.004683607 ubox
65 76 0.024157998 ubox
65 78 0.005742962 ubox
66 75 0.024472121 ubox
67 75 0.016532896 ubox
68 74 0.029768406 ubox
68 76 0.229509523 ubox
68 77 0.007347780 ubox
69 75 0.284890181 ubox
69 79 0.005142586 ubox
70 75 0.036316383 ubox
71 75 0.011661450 ubox
72 76 0.005678177 ubox
72 77 0.005641766 ubox
73 77 0.003460278 ubox
2 78 0.9500000 lbox
3 77 0.9500000 lbox
4 76 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
showpage
end
%%EOF
