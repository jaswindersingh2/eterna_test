%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (125)
} def

/sequence { (\
GGAAAAAAGCGCCCGAGAGCCCACCAAAGCCGAAUUCGAGCAGGAGGAGCACGCCGGGAAGCAGAAACAGAUGCAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.214107822 ubox
1 12 0.015824955 ubox
1 13 0.013374039 ubox
1 14 0.017134444 ubox
1 55 0.007069266 ubox
1 62 0.005370965 ubox
1 68 0.054461367 ubox
1 72 0.005670454 ubox
1 74 0.016446421 ubox
1 77 0.004975839 ubox
1 78 0.189102862 ubox
2 10 0.064272773 ubox
2 12 0.015981287 ubox
2 13 0.017129810 ubox
2 54 0.007031632 ubox
2 62 0.003889060 ubox
2 68 0.033509855 ubox
2 74 0.005679621 ubox
2 76 0.005021023 ubox
2 77 0.182988519 ubox
2 78 0.273204691 ubox
3 72 0.011067587 ubox
3 76 0.169203913 ubox
3 77 0.269879959 ubox
4 76 0.234278619 ubox
4 77 0.018211250 ubox
5 76 0.020449776 ubox
5 77 0.013219796 ubox
6 72 0.003689436 ubox
6 76 0.014035817 ubox
6 77 0.018936901 ubox
7 72 0.006248358 ubox
7 76 0.020329056 ubox
7 77 0.015614515 ubox
8 72 0.014332626 ubox
8 76 0.016277283 ubox
8 77 0.009545542 ubox
9 20 0.005353991 ubox
9 54 0.014837681 ubox
9 55 0.005203650 ubox
9 62 0.466055213 ubox
9 74 0.058182249 ubox
9 76 0.008564921 ubox
9 77 0.004778560 ubox
9 78 0.017022748 ubox
10 17 0.004112314 ubox
10 19 0.005371860 ubox
10 53 0.014898724 ubox
10 56 0.017166723 ubox
10 57 0.005112606 ubox
10 58 0.012886881 ubox
10 61 0.466401607 ubox
10 64 0.004661966 ubox
10 70 0.003671307 ubox
10 73 0.058199816 ubox
10 79 0.045654333 ubox
11 52 0.014558583 ubox
11 54 0.008556891 ubox
11 55 0.017124012 ubox
11 62 0.014572499 ubox
11 68 0.004054941 ubox
11 72 0.054841682 ubox
11 76 0.006125959 ubox
11 77 0.005011969 ubox
11 78 0.046995792 ubox
12 17 0.003522383 ubox
12 53 0.008709897 ubox
12 56 0.004393102 ubox
12 57 0.070425373 ubox
12 58 0.962621284 ubox
12 61 0.010893213 ubox
12 79 0.003440450 ubox
13 53 0.004524620 ubox
13 56 0.069882225 ubox
13 57 0.996202052 ubox
13 58 0.018804126 ubox
14 53 0.025000478 ubox
14 56 0.996575811 ubox
14 57 0.018572292 ubox
15 52 0.026790298 ubox
15 54 0.130860642 ubox
15 55 0.985180359 ubox
17 50 0.019020335 ubox
17 52 0.791468512 ubox
17 54 0.408996377 ubox
17 55 0.004080223 ubox
19 50 0.997431885 ubox
19 52 0.026309488 ubox
19 54 0.018179723 ubox
20 47 0.023434729 ubox
20 49 0.998822115 ubox
20 53 0.018185460 ubox
21 46 0.023458949 ubox
21 47 0.995967214 ubox
21 49 0.006171676 ubox
22 46 0.994874545 ubox
22 47 0.076324252 ubox
22 49 0.008536194 ubox
24 43 0.022730288 ubox
24 44 0.995364232 ubox
24 46 0.011979342 ubox
24 47 0.026599119 ubox
25 43 0.996800729 ubox
25 44 0.041001790 ubox
25 46 0.026597804 ubox
29 37 0.003675985 ubox
29 41 0.997531526 ubox
30 38 0.015773945 ubox
30 40 0.997686422 ubox
31 38 0.996038398 ubox
31 40 0.021400694 ubox
32 36 0.006615590 ubox
32 37 0.982883929 ubox
52 57 0.004306002 ubox
55 79 0.008306633 ubox
56 78 0.008540849 ubox
57 77 0.007937132 ubox
57 78 0.031706049 ubox
58 76 0.006957066 ubox
58 77 0.039861677 ubox
58 78 0.253995997 ubox
59 76 0.108338541 ubox
59 77 0.288964526 ubox
60 72 0.003266451 ubox
60 76 0.292840179 ubox
60 77 0.018182136 ubox
61 68 0.015984475 ubox
61 74 0.874705640 ubox
61 78 0.003371399 ubox
62 70 0.011593761 ubox
62 73 0.875691073 ubox
62 79 0.004433909 ubox
63 72 0.871195937 ubox
63 76 0.005974728 ubox
63 77 0.004457002 ubox
64 68 0.027642791 ubox
64 72 0.005697584 ubox
64 74 0.025351274 ubox
64 76 0.004084783 ubox
64 77 0.013632098 ubox
64 78 0.151712412 ubox
65 72 0.015333392 ubox
65 76 0.014497712 ubox
65 77 0.150501829 ubox
66 72 0.011893908 ubox
66 76 0.136094843 ubox
66 77 0.016497566 ubox
67 72 0.011548644 ubox
67 76 0.019670543 ubox
67 77 0.003687919 ubox
68 73 0.070475158 ubox
68 79 0.036259486 ubox
69 76 0.017171235 ubox
69 77 0.007984193 ubox
70 74 0.026693553 ubox
70 76 0.007410293 ubox
70 77 0.019000459 ubox
70 78 0.223840151 ubox
71 76 0.018099735 ubox
71 77 0.221870718 ubox
72 79 0.017154549 ubox
73 77 0.003323290 ubox
73 78 0.026504862 ubox
74 79 0.016487836 ubox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
61 74 0.9500000 lbox
62 73 0.9500000 lbox
63 72 0.9500000 lbox
showpage
end
%%EOF
