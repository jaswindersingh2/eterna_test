%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (464)
} def

/sequence { (\
GGAAAACCCGGGCGCAGGGUAAACCCGCGUAAACGCGCGAAAAUGGCCCUAAUGGGCCACCCGGGAAACCUUUUUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.008459333 ubox
1 8 0.004455449 ubox
1 9 0.003892111 ubox
1 25 0.009217480 ubox
1 62 0.004766401 ubox
1 69 0.029407798 ubox
1 70 0.503114004 ubox
1 71 0.072013754 ubox
1 72 0.007975575 ubox
1 73 0.012792587 ubox
1 74 0.019553280 ubox
1 75 0.027484278 ubox
1 76 0.086080284 ubox
1 77 0.063319981 ubox
1 78 0.669254182 ubox
2 7 0.005626864 ubox
2 8 0.003910821 ubox
2 24 0.009236826 ubox
2 61 0.004763962 ubox
2 69 0.503251530 ubox
2 70 0.082506433 ubox
2 71 0.009295030 ubox
2 72 0.018579618 ubox
2 73 0.028823323 ubox
2 74 0.040581368 ubox
2 75 0.128653589 ubox
2 76 0.099671634 ubox
2 77 0.669436354 ubox
2 78 0.410494710 ubox
3 71 0.018436963 ubox
3 72 0.029669442 ubox
3 73 0.041959787 ubox
3 74 0.134322017 ubox
3 75 0.108664135 ubox
3 76 0.668608376 ubox
3 77 0.410565091 ubox
4 71 0.028145239 ubox
4 72 0.042160582 ubox
4 73 0.138052322 ubox
4 74 0.115397802 ubox
4 75 0.666370532 ubox
4 76 0.409134728 ubox
4 77 0.011956284 ubox
5 71 0.039921489 ubox
5 72 0.141191606 ubox
5 73 0.121303688 ubox
5 74 0.662490015 ubox
5 75 0.406721300 ubox
5 76 0.015240597 ubox
5 77 0.003837495 ubox
6 20 0.016078858 ubox
6 71 0.142630672 ubox
6 72 0.124929975 ubox
6 73 0.647285173 ubox
6 74 0.397118273 ubox
6 75 0.017389516 ubox
6 76 0.004543797 ubox
7 19 0.017174569 ubox
7 64 0.009080176 ubox
7 65 0.997132003 ubox
8 18 0.017183385 ubox
8 63 0.006593927 ubox
8 64 0.999698236 ubox
8 65 0.003172873 ubox
9 17 0.017178563 ubox
9 63 0.999734963 ubox
10 15 0.006495143 ubox
10 61 0.007491194 ubox
10 62 0.999735917 ubox
10 70 0.007441602 ubox
10 71 0.006626770 ubox
11 58 0.004044555 ubox
11 60 0.010335513 ubox
11 61 0.999664250 ubox
11 62 0.003264917 ubox
11 69 0.007447990 ubox
11 70 0.006766987 ubox
12 20 0.020230858 ubox
12 28 0.003282074 ubox
12 30 0.104842752 ubox
12 36 0.004562844 ubox
12 38 0.022844509 ubox
12 57 0.005675980 ubox
12 60 0.989234224 ubox
12 61 0.004353310 ubox
12 69 0.006748627 ubox
13 17 0.020150504 ubox
13 18 0.058748815 ubox
13 19 0.046527411 ubox
13 27 0.007086479 ubox
13 29 0.241188828 ubox
13 35 0.004837087 ubox
13 37 0.024971410 ubox
13 39 0.363572076 ubox
13 56 0.006756194 ubox
13 65 0.005626396 ubox
14 20 0.030487014 ubox
14 24 0.008250767 ubox
14 25 0.008675011 ubox
14 26 0.015333946 ubox
14 28 0.249859472 ubox
14 30 0.009473919 ubox
14 34 0.003933213 ubox
14 36 0.023962986 ubox
14 38 0.368385795 ubox
14 57 0.007381514 ubox
14 58 0.020460036 ubox
14 60 0.006899861 ubox
15 19 0.031248576 ubox
15 27 0.249473397 ubox
15 29 0.010080851 ubox
15 35 0.023743229 ubox
15 37 0.367870669 ubox
15 39 0.013737839 ubox
15 54 0.006791684 ubox
15 56 0.007960234 ubox
15 63 0.005479833 ubox
15 64 0.005216262 ubox
15 65 0.003809745 ubox
16 30 0.003227847 ubox
16 50 0.009468420 ubox
16 53 0.004781386 ubox
17 24 0.053677509 ubox
17 25 0.606999781 ubox
17 26 0.746252952 ubox
17 34 0.007076367 ubox
17 36 0.027167392 ubox
17 49 0.010680202 ubox
17 62 0.010004422 ubox
18 24 0.608249089 ubox
18 25 0.775423717 ubox
18 26 0.049095443 ubox
18 34 0.004939048 ubox
18 48 0.010682543 ubox
18 61 0.010024767 ubox
19 24 0.770855998 ubox
19 25 0.050755719 ubox
19 26 0.004805396 ubox
19 28 0.004055597 ubox
19 34 0.027365200 ubox
19 44 0.003394457 ubox
19 47 0.010682586 ubox
19 60 0.010018563 ubox
20 27 0.003958108 ubox
20 31 0.006631548 ubox
20 33 0.026869635 ubox
20 43 0.003793272 ubox
20 46 0.010529489 ubox
20 59 0.008414600 ubox
21 30 0.006572464 ubox
23 30 0.025152339 ubox
24 29 0.025497628 ubox
24 39 0.017009865 ubox
25 39 0.026783425 ubox
26 37 0.089056631 ubox
26 39 0.640817264 ubox
27 34 0.009185739 ubox
27 36 0.405229332 ubox
27 38 0.876793250 ubox
28 35 0.405620178 ubox
28 37 0.877257127 ubox
28 39 0.038909445 ubox
29 34 0.395277978 ubox
29 36 0.876775235 ubox
29 38 0.053916268 ubox
30 35 0.840732229 ubox
30 37 0.053095774 ubox
30 39 0.008465958 ubox
30 40 0.004906012 ubox
30 41 0.004780338 ubox
30 42 0.004319542 ubox
30 43 0.003985271 ubox
34 39 0.043901533 ubox
35 44 0.004252442 ubox
37 44 0.005262406 ubox
37 60 0.003923576 ubox
39 44 0.008076787 ubox
39 60 0.008766709 ubox
40 44 0.015080909 ubox
44 59 0.869364712 ubox
45 58 0.999465084 ubox
46 57 0.999934284 ubox
47 56 0.999934045 ubox
48 55 0.999927071 ubox
49 54 0.999380695 ubox
49 55 0.003880415 ubox
50 54 0.004280191 ubox
62 79 0.009000153 ubox
63 70 0.013408593 ubox
63 71 0.004013797 ubox
63 78 0.010225616 ubox
64 69 0.013459009 ubox
64 70 0.004941861 ubox
64 77 0.010229216 ubox
64 78 0.005471461 ubox
65 69 0.005397201 ubox
65 70 0.007003027 ubox
65 72 0.004815205 ubox
65 73 0.004927199 ubox
65 74 0.005378696 ubox
65 75 0.005201884 ubox
65 76 0.012166006 ubox
65 77 0.007574225 ubox
65 78 0.052048550 ubox
66 71 0.016863944 ubox
66 72 0.023490947 ubox
66 73 0.029902713 ubox
66 74 0.024897866 ubox
66 75 0.028766750 ubox
66 76 0.020790692 ubox
66 77 0.057567480 ubox
67 71 0.019824512 ubox
67 72 0.030623786 ubox
67 73 0.029876630 ubox
67 74 0.032146206 ubox
67 75 0.022927062 ubox
67 76 0.058421422 ubox
67 77 0.006978162 ubox
68 72 0.024321493 ubox
68 73 0.027850535 ubox
68 74 0.021533197 ubox
68 75 0.051165072 ubox
68 76 0.007112599 ubox
68 77 0.004576413 ubox
69 79 0.005814624 ubox
70 79 0.013225066 ubox
71 79 0.003505788 ubox
72 79 0.006234574 ubox
73 79 0.004891205 ubox
74 79 0.005314076 ubox
75 79 0.003857437 ubox
1 78 0.9500000 lbox
2 77 0.9500000 lbox
3 76 0.9500000 lbox
4 75 0.9500000 lbox
5 74 0.9500000 lbox
6 73 0.9500000 lbox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
17 25 0.9500000 lbox
18 24 0.9500000 lbox
26 39 0.9500000 lbox
27 38 0.9500000 lbox
28 37 0.9500000 lbox
29 36 0.9500000 lbox
30 35 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
