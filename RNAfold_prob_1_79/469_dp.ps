%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (469)
} def

/sequence { (\
GGAAAAGACUCCGCGAGGUAACAACCGCUAACAAGCCGCACAACUGUAGAAAACUACAGGGAGUCAAACUGACGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.003730669 ubox
1 12 0.159729348 ubox
1 26 0.004277732 ubox
1 65 0.003441339 ubox
1 69 0.096569977 ubox
1 70 0.196844180 ubox
1 73 0.133242151 ubox
1 75 0.030394554 ubox
1 76 0.022731811 ubox
1 78 0.061583734 ubox
2 11 0.159848080 ubox
2 25 0.004273440 ubox
2 65 0.004998652 ubox
2 69 0.208451349 ubox
2 70 0.031091561 ubox
2 73 0.033965883 ubox
2 75 0.026210236 ubox
2 77 0.060571406 ubox
2 78 0.091267107 ubox
3 10 0.153174501 ubox
3 64 0.003803459 ubox
3 70 0.033897001 ubox
3 76 0.057504364 ubox
3 77 0.090763295 ubox
4 10 0.005538655 ubox
4 70 0.091923363 ubox
4 76 0.083275666 ubox
4 77 0.006351943 ubox
5 70 0.022396516 ubox
5 76 0.007469720 ubox
5 77 0.011505681 ubox
6 70 0.035162698 ubox
6 76 0.013830562 ubox
6 77 0.003666732 ubox
7 64 0.003258598 ubox
7 65 0.984767109 ubox
7 69 0.022188587 ubox
7 73 0.015308717 ubox
7 75 0.010046434 ubox
7 78 0.004494295 ubox
8 64 0.986392361 ubox
8 77 0.004044309 ubox
9 17 0.003347302 ubox
9 63 0.986702332 ubox
9 74 0.003271307 ubox
10 16 0.003561621 ubox
10 62 0.986684059 ubox
11 15 0.003563770 ubox
11 18 0.003355126 ubox
11 60 0.004125856 ubox
11 61 0.986819909 ubox
12 17 0.003508374 ubox
12 59 0.004681533 ubox
12 60 0.985925997 ubox
12 61 0.003266019 ubox
13 19 0.010740018 ubox
13 22 0.008366826 ubox
13 26 0.005897991 ubox
13 28 0.169840508 ubox
13 29 0.005971958 ubox
13 32 0.010678356 ubox
13 36 0.041016349 ubox
13 37 0.005313038 ubox
13 39 0.918245996 ubox
13 41 0.033910418 ubox
13 75 0.031810462 ubox
14 18 0.011011657 ubox
14 27 0.169961886 ubox
14 35 0.041169706 ubox
14 38 0.919187994 ubox
14 59 0.015390433 ubox
14 74 0.031835095 ubox
14 79 0.093018004 ubox
15 22 0.009700542 ubox
15 25 0.006343394 ubox
15 26 0.154091971 ubox
15 28 0.053934872 ubox
15 29 0.005433155 ubox
15 32 0.003811460 ubox
15 36 0.004728517 ubox
15 37 0.909267696 ubox
15 39 0.038969601 ubox
15 41 0.007066638 ubox
15 73 0.023344668 ubox
15 78 0.100505686 ubox
16 29 0.013081178 ubox
16 77 0.099986517 ubox
17 22 0.073414403 ubox
17 25 0.134649081 ubox
17 26 0.969499852 ubox
17 28 0.011665982 ubox
17 29 0.015494061 ubox
17 32 0.015619378 ubox
17 36 0.061989521 ubox
17 37 0.053522751 ubox
17 70 0.017165549 ubox
17 76 0.095279676 ubox
18 22 0.012554899 ubox
18 25 0.971020161 ubox
18 26 0.014625177 ubox
18 28 0.016736559 ubox
18 32 0.030638842 ubox
18 36 0.055850395 ubox
18 39 0.003911117 ubox
18 41 0.004410331 ubox
18 69 0.017190448 ubox
18 75 0.095296062 ubox
19 23 0.023505081 ubox
19 24 0.924357418 ubox
19 27 0.016501421 ubox
19 30 0.017886424 ubox
19 31 0.028429006 ubox
19 33 0.004900890 ubox
19 34 0.041199113 ubox
19 35 0.054966748 ubox
19 38 0.003647983 ubox
19 40 0.004303195 ubox
19 68 0.016744819 ubox
19 74 0.092400086 ubox
20 29 0.022139836 ubox
21 29 0.010026354 ubox
21 64 0.010698690 ubox
22 27 0.019682291 ubox
22 38 0.003948112 ubox
22 63 0.010796508 ubox
22 71 0.011792574 ubox
23 29 0.006927771 ubox
23 70 0.010513260 ubox
24 29 0.007290920 ubox
25 38 0.055454025 ubox
25 60 0.006659456 ubox
25 61 0.023921684 ubox
26 35 0.006958841 ubox
26 38 0.028210133 ubox
26 59 0.005616416 ubox
26 60 0.023993932 ubox
26 61 0.003178206 ubox
27 32 0.024174439 ubox
27 36 0.969300975 ubox
27 37 0.030174688 ubox
27 39 0.084718974 ubox
27 41 0.003430978 ubox
28 35 0.971517333 ubox
28 38 0.084693589 ubox
29 33 0.022923479 ubox
29 34 0.924822057 ubox
29 35 0.010105038 ubox
29 38 0.006474742 ubox
29 42 0.003283283 ubox
32 38 0.029386555 ubox
32 79 0.005686325 ubox
33 77 0.016987418 ubox
34 76 0.018984222 ubox
35 39 0.015388182 ubox
35 41 0.029436721 ubox
35 44 0.003487675 ubox
35 75 0.019227577 ubox
36 61 0.004546745 ubox
36 74 0.019087430 ubox
37 60 0.004994150 ubox
37 61 0.003494731 ubox
38 44 0.005237718 ubox
38 64 0.008598155 ubox
38 65 0.007635309 ubox
38 75 0.009078532 ubox
39 60 0.005078117 ubox
39 61 0.006132121 ubox
39 63 0.009544264 ubox
39 71 0.003905202 ubox
39 74 0.009091183 ubox
40 64 0.010931613 ubox
40 70 0.003265565 ubox
41 59 0.009161123 ubox
41 60 0.013141847 ubox
41 61 0.028259930 ubox
41 63 0.011602250 ubox
44 59 0.996466204 ubox
44 60 0.006561721 ubox
45 58 0.999240050 ubox
45 59 0.003791142 ubox
46 57 0.999970138 ubox
47 56 0.999726765 ubox
48 55 0.999048018 ubox
49 54 0.990805738 ubox
49 55 0.003709671 ubox
59 77 0.009778870 ubox
59 78 0.005209979 ubox
60 65 0.003216503 ubox
60 69 0.004999699 ubox
60 73 0.004365518 ubox
60 75 0.010725265 ubox
60 76 0.085573248 ubox
60 77 0.007543333 ubox
60 78 0.072116815 ubox
61 75 0.090813970 ubox
61 76 0.006298173 ubox
61 77 0.071883166 ubox
61 78 0.015734005 ubox
62 70 0.012106029 ubox
62 76 0.070925337 ubox
62 77 0.015466719 ubox
63 69 0.012589261 ubox
63 73 0.144969591 ubox
63 75 0.065140205 ubox
63 76 0.004180705 ubox
64 68 0.011348487 ubox
64 72 0.148095289 ubox
64 74 0.051725614 ubox
65 71 0.151379203 ubox
65 74 0.027052255 ubox
66 70 0.123204180 ubox
66 76 0.008469504 ubox
66 77 0.042920817 ubox
67 76 0.047108110 ubox
67 77 0.028780381 ubox
68 76 0.030450423 ubox
68 77 0.014173199 ubox
69 74 0.086499509 ubox
69 79 0.048461700 ubox
70 74 0.010579140 ubox
70 79 0.190412775 ubox
71 75 0.033249474 ubox
71 76 0.014960550 ubox
71 77 0.028576526 ubox
71 78 0.350964313 ubox
72 76 0.027827739 ubox
72 77 0.316335258 ubox
73 79 0.124980124 ubox
74 78 0.122949134 ubox
75 79 0.013285940 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
