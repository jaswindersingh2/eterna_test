%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (21)
} def

/sequence { (\
GGAAAAAAUAUAGUAUAAGAUAAGCAAAGUUAUGUCAAAACAUUAUGCAAAGUAAAUGAUAUAGUAUAGUUUUUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.003360467 ubox
1 74 0.005484832 ubox
1 75 0.184309922 ubox
1 76 0.832677349 ubox
1 77 0.038747239 ubox
1 78 0.123030669 ubox
2 73 0.008258383 ubox
2 74 0.183910462 ubox
2 75 0.961685386 ubox
2 76 0.010001603 ubox
2 77 0.087145722 ubox
2 78 0.048573958 ubox
3 9 0.003446665 ubox
3 72 0.008727064 ubox
3 73 0.183530929 ubox
3 74 0.962091017 ubox
3 76 0.083175392 ubox
3 77 0.047574905 ubox
4 9 0.003522649 ubox
4 11 0.004074667 ubox
4 71 0.008960317 ubox
4 72 0.182612404 ubox
4 73 0.961175501 ubox
4 74 0.083180915 ubox
4 76 0.036041702 ubox
5 11 0.003181134 ubox
5 14 0.003776473 ubox
5 70 0.008467848 ubox
5 71 0.180198720 ubox
5 72 0.959997198 ubox
5 73 0.093721480 ubox
5 74 0.031355752 ubox
6 11 0.003496595 ubox
6 70 0.168520183 ubox
6 71 0.953091292 ubox
6 72 0.099153349 ubox
6 73 0.032773900 ubox
6 74 0.012061984 ubox
7 14 0.004109634 ubox
7 16 0.003797802 ubox
7 70 0.783087857 ubox
7 71 0.102749146 ubox
7 72 0.031862136 ubox
7 73 0.012460716 ubox
8 14 0.007230835 ubox
8 16 0.016596620 ubox
8 67 0.033889626 ubox
8 70 0.100535690 ubox
8 71 0.028573296 ubox
8 72 0.012042812 ubox
9 13 0.006872244 ubox
9 15 0.017192425 ubox
9 17 0.007692333 ubox
9 63 0.004168044 ubox
9 66 0.036392439 ubox
9 68 0.956924993 ubox
9 69 0.074066910 ubox
10 14 0.015348369 ubox
10 16 0.009042498 ubox
10 62 0.004434897 ubox
10 65 0.036682548 ubox
10 67 0.982070405 ubox
10 70 0.004201910 ubox
11 15 0.008160079 ubox
11 61 0.004505201 ubox
11 64 0.035563879 ubox
11 66 0.984152602 ubox
11 68 0.005114735 ubox
11 69 0.004269539 ubox
12 16 0.003329689 ubox
12 60 0.004505520 ubox
12 65 0.980916867 ubox
12 67 0.004491603 ubox
12 70 0.003559256 ubox
13 21 0.004101283 ubox
13 25 0.014713434 ubox
13 41 0.004985527 ubox
13 48 0.016153733 ubox
13 60 0.003377084 ubox
13 62 0.047060592 ubox
13 65 0.003408503 ubox
13 67 0.007286572 ubox
13 78 0.022715093 ubox
14 20 0.004146544 ubox
14 22 0.005029357 ubox
14 24 0.014457870 ubox
14 34 0.003317809 ubox
14 40 0.004864403 ubox
14 47 0.016164699 ubox
14 58 0.003417117 ubox
14 59 0.003386268 ubox
14 61 0.048958996 ubox
14 63 0.979725286 ubox
14 64 0.004560762 ubox
14 66 0.007798966 ubox
14 68 0.004872582 ubox
14 79 0.005872403 ubox
15 21 0.005563013 ubox
15 33 0.003927361 ubox
15 46 0.016190893 ubox
15 57 0.004939770 ubox
15 60 0.049340334 ubox
15 62 0.982623646 ubox
15 65 0.007857189 ubox
15 67 0.004947154 ubox
15 77 0.004682701 ubox
16 20 0.005035454 ubox
16 22 0.008707160 ubox
16 32 0.004436892 ubox
16 37 0.003440971 ubox
16 39 0.003202288 ubox
16 45 0.016230513 ubox
16 54 0.005054412 ubox
16 56 0.005676592 ubox
16 58 0.008288025 ubox
16 59 0.048070969 ubox
16 61 0.980317032 ubox
16 64 0.007189985 ubox
16 66 0.004961058 ubox
16 79 0.012618856 ubox
17 21 0.008159567 ubox
17 31 0.004895609 ubox
17 44 0.016224255 ubox
17 53 0.006451626 ubox
17 57 0.011091041 ubox
17 60 0.961890361 ubox
17 65 0.004836759 ubox
17 76 0.003381356 ubox
17 77 0.143044962 ubox
18 30 0.005219217 ubox
18 35 0.088405684 ubox
18 43 0.015817108 ubox
18 53 0.029308899 ubox
18 57 0.079326105 ubox
18 60 0.029413644 ubox
18 76 0.164458790 ubox
18 77 0.003814623 ubox
19 25 0.016526090 ubox
19 31 0.020082445 ubox
19 35 0.006864089 ubox
19 36 0.262217402 ubox
19 41 0.007524051 ubox
19 53 0.019471915 ubox
19 57 0.062038170 ubox
19 60 0.005072956 ubox
19 75 0.167149960 ubox
20 30 0.020854479 ubox
20 33 0.119088787 ubox
20 35 0.262126989 ubox
20 46 0.009829728 ubox
20 53 0.067176704 ubox
20 57 0.868199900 ubox
20 60 0.010186201 ubox
20 74 0.164409684 ubox
21 27 0.004220560 ubox
21 28 0.004896181 ubox
21 29 0.020620782 ubox
21 32 0.123110006 ubox
21 34 0.260687233 ubox
21 37 0.004368006 ubox
21 38 0.008921908 ubox
21 39 0.004522874 ubox
21 40 0.003796089 ubox
21 45 0.010168032 ubox
21 49 0.007062506 ubox
21 50 0.013802508 ubox
21 51 0.043728153 ubox
21 52 0.065983824 ubox
21 54 0.111854701 ubox
21 55 0.037097948 ubox
21 56 0.848832049 ubox
21 58 0.041736209 ubox
21 59 0.014941692 ubox
22 31 0.124716624 ubox
22 33 0.250669373 ubox
22 44 0.010265335 ubox
22 53 0.125900134 ubox
22 57 0.041200075 ubox
22 72 0.142687481 ubox
22 73 0.004246152 ubox
23 30 0.122000671 ubox
23 31 0.224293711 ubox
23 33 0.011414510 ubox
23 35 0.003338701 ubox
23 43 0.009468601 ubox
23 53 0.067047064 ubox
23 57 0.013982984 ubox
23 71 0.166177312 ubox
23 72 0.003896450 ubox
24 30 0.236383865 ubox
24 31 0.049866164 ubox
24 33 0.004314558 ubox
24 35 0.083145193 ubox
24 36 0.022541446 ubox
24 48 0.199977719 ubox
24 53 0.845812854 ubox
24 70 0.166953077 ubox
25 29 0.236286861 ubox
25 34 0.089327261 ubox
25 47 0.200378409 ubox
25 52 0.849989918 ubox
25 58 0.008004253 ubox
25 69 0.166798865 ubox
26 30 0.006720492 ubox
26 31 0.012770548 ubox
26 33 0.081659362 ubox
26 44 0.018099482 ubox
26 46 0.188797988 ubox
26 53 0.009517596 ubox
26 57 0.007707046 ubox
26 67 0.021404212 ubox
27 31 0.005361813 ubox
27 33 0.004302042 ubox
27 43 0.024444880 ubox
27 44 0.053006806 ubox
27 46 0.014627667 ubox
27 53 0.003455198 ubox
27 65 0.007121824 ubox
27 67 0.063702380 ubox
28 33 0.006873165 ubox
28 35 0.003804952 ubox
28 43 0.051852223 ubox
28 44 0.077365732 ubox
28 46 0.057195142 ubox
28 53 0.010860039 ubox
28 57 0.003460864 ubox
28 65 0.022408382 ubox
28 67 0.016951820 ubox
29 36 0.015754468 ubox
29 41 0.074380529 ubox
29 43 0.063125594 ubox
29 44 0.017673303 ubox
29 46 0.525087915 ubox
29 48 0.667341551 ubox
29 57 0.004591032 ubox
29 60 0.009794907 ubox
29 65 0.071948441 ubox
29 67 0.013467736 ubox
30 38 0.004843430 ubox
30 39 0.010307322 ubox
30 40 0.074171327 ubox
30 42 0.053336149 ubox
30 45 0.522596024 ubox
30 47 0.651461890 ubox
30 49 0.015649464 ubox
30 50 0.011183101 ubox
30 51 0.027030353 ubox
30 52 0.006422060 ubox
30 55 0.018145423 ubox
30 56 0.004371209 ubox
30 59 0.013270860 ubox
30 63 0.008471378 ubox
30 64 0.151601481 ubox
30 66 0.011826761 ubox
31 37 0.005794566 ubox
31 38 0.012377274 ubox
31 39 0.071447370 ubox
31 40 0.014368145 ubox
31 42 0.007363748 ubox
31 45 0.209081502 ubox
31 47 0.106511087 ubox
31 49 0.010499942 ubox
31 50 0.026664973 ubox
31 51 0.017880519 ubox
31 54 0.018737878 ubox
31 55 0.003907496 ubox
31 58 0.013316016 ubox
31 63 0.169298993 ubox
32 43 0.846479804 ubox
32 44 0.161084914 ubox
32 46 0.135483777 ubox
32 53 0.018787329 ubox
32 57 0.013216180 ubox
32 62 0.171392783 ubox
33 37 0.011342225 ubox
33 38 0.025418178 ubox
33 39 0.025851256 ubox
33 40 0.019511006 ubox
33 42 0.906207544 ubox
33 45 0.135587920 ubox
33 47 0.003770637 ubox
33 49 0.041011499 ubox
33 52 0.017453581 ubox
33 56 0.012808465 ubox
33 61 0.172083187 ubox
34 41 0.909772702 ubox
34 43 0.087951411 ubox
34 44 0.130033664 ubox
34 46 0.010207251 ubox
34 48 0.043694747 ubox
34 60 0.173826303 ubox
35 39 0.026329847 ubox
35 40 0.841578657 ubox
35 42 0.087715103 ubox
35 45 0.010102821 ubox
35 47 0.025405596 ubox
35 49 0.005656009 ubox
35 59 0.175055404 ubox
36 47 0.039605297 ubox
36 52 0.004708957 ubox
36 58 0.175222446 ubox
37 43 0.008875753 ubox
37 44 0.014428252 ubox
37 46 0.039520829 ubox
37 57 0.166751566 ubox
37 60 0.004461900 ubox
38 43 0.013914898 ubox
38 44 0.014114619 ubox
38 46 0.004617202 ubox
38 53 0.003855687 ubox
38 57 0.010792545 ubox
38 60 0.005359948 ubox
38 72 0.003217812 ubox
39 43 0.011504051 ubox
39 44 0.010643261 ubox
39 46 0.007249104 ubox
39 53 0.008046533 ubox
39 57 0.006880558 ubox
39 60 0.021867236 ubox
39 71 0.003361842 ubox
39 73 0.003317806 ubox
40 46 0.004061755 ubox
40 53 0.104304439 ubox
40 57 0.006360083 ubox
40 60 0.015850962 ubox
40 70 0.003380627 ubox
40 72 0.003294272 ubox
41 47 0.023852217 ubox
41 52 0.108021631 ubox
41 58 0.268406026 ubox
41 69 0.003366830 ubox
42 46 0.019485197 ubox
42 53 0.072814967 ubox
42 57 0.269446470 ubox
42 60 0.050988261 ubox
42 65 0.004889828 ubox
42 70 0.009040290 ubox
43 49 0.005890876 ubox
43 50 0.058971961 ubox
43 51 0.068501227 ubox
43 52 0.074946639 ubox
43 54 0.008398341 ubox
43 55 0.130926350 ubox
43 56 0.255666573 ubox
43 59 0.072494704 ubox
43 64 0.005707344 ubox
43 69 0.010042587 ubox
44 49 0.054896390 ubox
44 50 0.066894082 ubox
44 51 0.069554030 ubox
44 52 0.006685284 ubox
44 54 0.164827669 ubox
44 55 0.234375834 ubox
44 56 0.018132322 ubox
44 58 0.077060266 ubox
44 61 0.004470073 ubox
44 63 0.006404069 ubox
44 68 0.011751415 ubox
45 53 0.185404301 ubox
45 57 0.077265681 ubox
45 60 0.006103214 ubox
45 62 0.006561076 ubox
45 67 0.011940280 ubox
46 50 0.005028324 ubox
46 51 0.030182777 ubox
46 52 0.183847637 ubox
46 54 0.214626844 ubox
46 55 0.015515910 ubox
46 56 0.074759259 ubox
46 59 0.007322299 ubox
46 61 0.006636619 ubox
46 66 0.011957238 ubox
47 53 0.222299776 ubox
47 60 0.006735735 ubox
47 65 0.011972988 ubox
48 52 0.221315496 ubox
48 58 0.029775443 ubox
48 64 0.011969886 ubox
49 53 0.010807185 ubox
49 57 0.028619449 ubox
50 57 0.012171840 ubox
50 62 0.003179021 ubox
51 57 0.019503021 ubox
51 60 0.007798980 ubox
52 57 0.005427697 ubox
52 60 0.012265434 ubox
52 62 0.010249307 ubox
53 58 0.008082732 ubox
53 59 0.014172623 ubox
53 61 0.010670883 ubox
54 60 0.010642924 ubox
55 60 0.003646017 ubox
1 76 0.9500000 lbox
2 75 0.9500000 lbox
3 74 0.9500000 lbox
4 73 0.9500000 lbox
5 72 0.9500000 lbox
6 71 0.9500000 lbox
7 70 0.9500000 lbox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
20 57 0.9500000 lbox
21 56 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
29 48 0.9500000 lbox
30 47 0.9500000 lbox
32 43 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
35 40 0.9500000 lbox
showpage
end
%%EOF
