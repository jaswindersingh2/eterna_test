%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (934)
} def

/sequence { (\
GGAAAAGUAGGAGAUGAAAAGGAAAAAAGUAAGAGAGAAAACUCACUUACGCCCAUCACCUACAAAAAAAAGCUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 63 0.003707508 ubox
1 73 0.023507639 ubox
1 74 0.020013536 ubox
1 75 0.016450849 ubox
1 76 0.042793956 ubox
1 78 0.062794591 ubox
2 63 0.003996813 ubox
2 73 0.024657712 ubox
2 74 0.012401971 ubox
2 75 0.049412867 ubox
2 77 0.061482234 ubox
2 78 0.128392757 ubox
3 74 0.048009864 ubox
3 76 0.058818240 ubox
3 77 0.128068346 ubox
4 74 0.007106974 ubox
4 76 0.118446045 ubox
4 77 0.006515285 ubox
5 74 0.017871955 ubox
5 76 0.007664429 ubox
5 77 0.010991339 ubox
6 74 0.097682992 ubox
6 76 0.013211090 ubox
6 77 0.003515208 ubox
7 63 0.994148539 ubox
7 73 0.088297765 ubox
7 75 0.009577170 ubox
7 78 0.005768177 ubox
8 62 0.996356765 ubox
8 71 0.003303662 ubox
8 72 0.076874088 ubox
9 61 0.999395307 ubox
9 77 0.007564163 ubox
10 59 0.003536971 ubox
10 60 0.999737854 ubox
10 76 0.008734172 ubox
10 78 0.011283985 ubox
11 59 0.997761605 ubox
11 75 0.008883992 ubox
11 77 0.011345085 ubox
12 61 0.005068876 ubox
12 74 0.008884753 ubox
12 76 0.011367589 ubox
13 57 0.989626847 ubox
13 59 0.005175214 ubox
13 60 0.005442251 ubox
13 73 0.008850623 ubox
13 75 0.011379011 ubox
14 56 0.992077799 ubox
14 74 0.011235696 ubox
15 20 0.004212497 ubox
15 55 0.991413265 ubox
15 58 0.117769011 ubox
15 64 0.011879355 ubox
16 52 0.005347063 ubox
16 53 0.035598683 ubox
16 54 0.978186729 ubox
16 57 0.119405327 ubox
16 63 0.012305109 ubox
16 73 0.004213196 ubox
17 56 0.117985263 ubox
18 56 0.007219422 ubox
19 48 0.004268917 ubox
19 56 0.006016220 ubox
20 47 0.004544971 ubox
20 56 0.003192958 ubox
20 61 0.017232777 ubox
21 46 0.004557729 ubox
21 50 0.031770959 ubox
21 52 0.028748851 ubox
21 53 0.602453711 ubox
21 54 0.181946743 ubox
21 57 0.003913052 ubox
21 59 0.004272133 ubox
21 60 0.017804407 ubox
22 48 0.005666011 ubox
22 50 0.019404910 ubox
22 52 0.599576023 ubox
22 53 0.198425227 ubox
22 54 0.011293155 ubox
22 56 0.003671559 ubox
22 57 0.015056776 ubox
22 59 0.017682667 ubox
23 47 0.004051657 ubox
23 48 0.006281398 ubox
23 56 0.015004559 ubox
24 47 0.005607097 ubox
24 48 0.006062836 ubox
25 47 0.003462868 ubox
25 48 0.005144617 ubox
25 56 0.003974738 ubox
26 47 0.003359348 ubox
26 48 0.032936564 ubox
27 47 0.024878031 ubox
27 48 0.281182811 ubox
28 43 0.006894056 ubox
28 47 0.301557468 ubox
28 48 0.005201294 ubox
29 42 0.007188392 ubox
29 46 0.304140786 ubox
29 47 0.003572245 ubox
29 48 0.003181230 ubox
29 50 0.948181182 ubox
29 52 0.011289878 ubox
29 53 0.005630610 ubox
30 41 0.006993432 ubox
30 45 0.288238937 ubox
30 49 0.951648945 ubox
30 51 0.010317275 ubox
31 43 0.004070209 ubox
31 48 0.951566015 ubox
32 43 0.103024921 ubox
32 47 0.951421153 ubox
33 42 0.104556897 ubox
33 44 0.264439377 ubox
33 46 0.947919231 ubox
33 48 0.006410540 ubox
34 43 0.266560939 ubox
34 47 0.007140491 ubox
35 42 0.265374725 ubox
35 44 0.954258698 ubox
35 46 0.007195515 ubox
36 43 0.956012822 ubox
37 42 0.948043472 ubox
37 44 0.037273343 ubox
38 43 0.034904301 ubox
46 51 0.003551224 ubox
63 72 0.008232589 ubox
64 74 0.010009270 ubox
64 76 0.008464958 ubox
64 77 0.021059077 ubox
65 74 0.022615246 ubox
65 76 0.022090410 ubox
65 77 0.023722823 ubox
66 74 0.015524883 ubox
66 76 0.024441861 ubox
66 77 0.043540298 ubox
67 74 0.027123107 ubox
67 76 0.047358808 ubox
67 77 0.029987259 ubox
68 74 0.021582175 ubox
68 76 0.031498070 ubox
68 77 0.049337168 ubox
69 74 0.023492396 ubox
69 76 0.050269869 ubox
69 77 0.037768988 ubox
70 74 0.012286845 ubox
70 76 0.039376320 ubox
70 77 0.043995900 ubox
71 76 0.042704631 ubox
71 77 0.023129079 ubox
72 76 0.018534858 ubox
72 77 0.014457071 ubox
72 78 0.044846702 ubox
73 79 0.035159179 ubox
74 79 0.008165898 ubox
75 79 0.013302383 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
