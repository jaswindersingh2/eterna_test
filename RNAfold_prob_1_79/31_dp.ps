%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (31)
} def

/sequence { (\
GGAAAAAACUAGGUAUCAGAUGGUAAAAUACACAUCAAAACUAGAGACAAAGUCCUAGAGAUAGCUAGGAUACAUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.009542871 ubox
1 10 0.008222447 ubox
1 48 0.004878725 ubox
1 71 0.003944473 ubox
1 73 0.055180537 ubox
1 75 0.013620903 ubox
1 76 0.017959230 ubox
1 77 0.031827184 ubox
1 78 0.633475768 ubox
2 9 0.009218468 ubox
2 17 0.003810389 ubox
2 71 0.004577478 ubox
2 73 0.042225104 ubox
2 75 0.023401845 ubox
2 76 0.049430759 ubox
2 77 0.633651954 ubox
2 78 0.593236752 ubox
3 16 0.003670560 ubox
3 71 0.012284705 ubox
3 75 0.051764330 ubox
3 76 0.630690726 ubox
3 77 0.593517157 ubox
4 71 0.020775706 ubox
4 75 0.593814319 ubox
4 76 0.587422359 ubox
4 77 0.023162077 ubox
5 71 0.058037935 ubox
5 75 0.554345630 ubox
5 76 0.029340623 ubox
5 77 0.007144357 ubox
6 71 0.497948611 ubox
6 75 0.030275327 ubox
6 76 0.008130840 ubox
6 77 0.009739490 ubox
7 71 0.137267815 ubox
7 75 0.007104520 ubox
7 76 0.011153495 ubox
7 77 0.003996048 ubox
8 14 0.003744682 ubox
8 71 0.049542840 ubox
8 75 0.011660562 ubox
8 76 0.004394364 ubox
9 13 0.003847111 ubox
9 44 0.104736279 ubox
9 46 0.016057740 ubox
9 68 0.990870826 ubox
9 69 0.040298817 ubox
10 43 0.107273598 ubox
10 44 0.003475985 ubox
10 45 0.015967091 ubox
10 67 0.992353170 ubox
10 68 0.025554558 ubox
11 42 0.106608594 ubox
11 66 0.992761851 ubox
12 17 0.004015875 ubox
12 41 0.105124619 ubox
12 42 0.036042645 ubox
12 65 0.992666775 ubox
12 66 0.008463749 ubox
13 41 0.041012632 ubox
13 65 0.010405148 ubox
13 73 0.008852788 ubox
14 38 0.005031298 ubox
14 39 0.015129331 ubox
14 40 0.043569106 ubox
14 63 0.990249002 ubox
14 64 0.008594792 ubox
14 72 0.008871765 ubox
15 62 0.992526650 ubox
15 71 0.008788645 ubox
16 37 0.016169488 ubox
16 38 0.018319661 ubox
16 39 0.028722447 ubox
16 61 0.992628195 ubox
16 70 0.008739876 ubox
17 60 0.991657175 ubox
17 69 0.008612550 ubox
18 35 0.005988816 ubox
19 31 0.003670135 ubox
19 33 0.012652162 ubox
19 35 0.003328409 ubox
19 36 0.997986376 ubox
20 29 0.005550599 ubox
20 35 0.998968695 ubox
21 28 0.005672882 ubox
21 32 0.025089484 ubox
21 34 0.998785503 ubox
21 37 0.014966930 ubox
22 31 0.028471425 ubox
22 33 0.997369436 ubox
22 36 0.016617264 ubox
23 29 0.012282300 ubox
23 31 0.938424799 ubox
23 33 0.025829616 ubox
23 35 0.016214008 ubox
24 28 0.012008297 ubox
24 30 0.933279807 ubox
24 32 0.034253621 ubox
24 34 0.015796867 ubox
25 29 0.827460004 ubox
40 53 0.009412270 ubox
41 52 0.010061961 ubox
41 58 0.986175888 ubox
42 51 0.010006701 ubox
42 57 0.992034029 ubox
42 58 0.004326099 ubox
42 59 0.003979228 ubox
43 56 0.992546047 ubox
44 54 0.017755695 ubox
44 55 0.992456385 ubox
44 56 0.005537305 ubox
44 78 0.041997136 ubox
45 53 0.024433312 ubox
45 56 0.007309065 ubox
45 77 0.043092518 ubox
46 53 0.017618226 ubox
46 54 0.991235562 ubox
46 55 0.006849049 ubox
46 73 0.003657835 ubox
46 76 0.043074944 ubox
46 77 0.008464017 ubox
46 78 0.033534366 ubox
47 53 0.990098150 ubox
47 75 0.041636425 ubox
47 76 0.009012778 ubox
47 77 0.032788241 ubox
48 52 0.980316029 ubox
48 79 0.003337555 ubox
49 75 0.009246084 ubox
49 76 0.012091739 ubox
49 77 0.008339673 ubox
50 75 0.012490985 ubox
50 76 0.009905045 ubox
50 77 0.003698079 ubox
51 71 0.004688248 ubox
51 75 0.010081487 ubox
51 76 0.004119298 ubox
52 71 0.112674333 ubox
52 73 0.007850260 ubox
53 70 0.116092409 ubox
53 72 0.004959583 ubox
54 69 0.116764390 ubox
55 68 0.116815704 ubox
56 67 0.116780975 ubox
57 66 0.116761107 ubox
58 65 0.116342694 ubox
59 66 0.004293939 ubox
60 65 0.004589490 ubox
68 73 0.010293249 ubox
68 78 0.021590480 ubox
69 73 0.018677982 ubox
69 75 0.003809813 ubox
69 76 0.015810799 ubox
69 77 0.037286032 ubox
69 78 0.295103990 ubox
70 75 0.014772939 ubox
70 76 0.039772491 ubox
70 77 0.291154240 ubox
72 76 0.007879239 ubox
72 77 0.004853619 ubox
73 79 0.018655646 ubox
1 78 0.9500000 lbox
2 77 0.9500000 lbox
3 76 0.9500000 lbox
4 75 0.9500000 lbox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
showpage
end
%%EOF
