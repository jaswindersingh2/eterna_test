%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (955)
} def

/sequence { (\
GGAAACUAUCAGAAGGAAACUUCAGAACUUAUCGAAAAAAGAUAAGUUCAGAUCGAAAGAUCAGAUAGGACUAUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.029556503 ubox
1 7 0.010125010 ubox
1 10 0.025294264 ubox
1 71 0.188205574 ubox
1 72 0.391974445 ubox
1 74 0.034940313 ubox
1 75 0.149410273 ubox
1 76 0.297240835 ubox
1 77 0.015384921 ubox
1 78 0.160343230 ubox
2 6 0.010804982 ubox
2 7 0.003640991 ubox
2 9 0.017213277 ubox
2 10 0.038765388 ubox
2 23 0.003602582 ubox
2 71 0.413967482 ubox
2 72 0.077784284 ubox
2 74 0.136939341 ubox
2 75 0.343232372 ubox
2 76 0.008916237 ubox
2 77 0.152066265 ubox
2 78 0.167615225 ubox
3 9 0.037266904 ubox
3 22 0.003586085 ubox
3 72 0.073781858 ubox
3 74 0.337126712 ubox
3 76 0.139444329 ubox
3 77 0.164268580 ubox
4 9 0.004798545 ubox
4 21 0.003301898 ubox
4 72 0.070156232 ubox
4 74 0.013960693 ubox
4 76 0.115621333 ubox
4 77 0.012985265 ubox
5 72 0.071826039 ubox
5 74 0.049381466 ubox
5 76 0.014511430 ubox
5 77 0.004790613 ubox
6 15 0.004473826 ubox
6 64 0.005647613 ubox
6 68 0.977779027 ubox
6 69 0.036750905 ubox
6 79 0.011213578 ubox
7 11 0.004551642 ubox
7 14 0.004350753 ubox
7 24 0.003283036 ubox
7 63 0.005489410 ubox
7 67 0.980360413 ubox
7 68 0.023362776 ubox
7 73 0.014381929 ubox
8 53 0.005565374 ubox
8 66 0.980676120 ubox
8 72 0.014180543 ubox
8 77 0.003473626 ubox
9 17 0.003527771 ubox
9 24 0.004841228 ubox
9 26 0.006552941 ubox
9 52 0.006073758 ubox
9 65 0.980782083 ubox
9 69 0.005471407 ubox
9 70 0.017637714 ubox
10 16 0.003674286 ubox
10 25 0.008424969 ubox
10 51 0.006166984 ubox
10 64 0.979826941 ubox
10 68 0.006578430 ubox
10 69 0.017956701 ubox
10 79 0.009027293 ubox
11 21 0.005138631 ubox
11 77 0.004245430 ubox
12 20 0.005476743 ubox
12 22 0.004825777 ubox
12 23 0.997702134 ubox
12 62 0.008667346 ubox
12 78 0.013207155 ubox
13 21 0.003998085 ubox
13 22 0.998565897 ubox
13 61 0.008249344 ubox
13 77 0.013063777 ubox
14 21 0.998458568 ubox
14 22 0.008561686 ubox
14 76 0.012564683 ubox
15 20 0.998148008 ubox
15 21 0.010857164 ubox
15 23 0.015314655 ubox
15 75 0.012315785 ubox
16 20 0.012893990 ubox
16 22 0.014822915 ubox
16 23 0.017675130 ubox
16 74 0.009861205 ubox
17 21 0.012656784 ubox
17 22 0.016570760 ubox
20 68 0.005695600 ubox
20 69 0.004367339 ubox
21 67 0.005414795 ubox
21 68 0.004251887 ubox
21 70 0.006331125 ubox
22 52 0.008838279 ubox
22 65 0.005771844 ubox
22 69 0.006534576 ubox
23 51 0.009134523 ubox
23 64 0.005965774 ubox
23 68 0.006550075 ubox
25 48 0.004464011 ubox
25 49 0.998393318 ubox
26 47 0.003487178 ubox
26 48 0.999286636 ubox
27 47 0.999470213 ubox
28 46 0.999972939 ubox
29 45 0.999425723 ubox
30 44 0.999253233 ubox
31 43 0.999440305 ubox
32 42 0.999720236 ubox
33 41 0.999799261 ubox
49 64 0.003613906 ubox
51 62 0.998042336 ubox
52 61 0.999024392 ubox
53 60 0.999149139 ubox
54 59 0.998969829 ubox
54 79 0.017312303 ubox
55 62 0.012832637 ubox
55 75 0.003334355 ubox
55 78 0.019004839 ubox
56 61 0.011738815 ubox
56 74 0.003298618 ubox
56 77 0.015663498 ubox
57 76 0.010949519 ubox
57 77 0.011792431 ubox
58 72 0.003900655 ubox
58 76 0.016171452 ubox
59 71 0.003963495 ubox
59 75 0.019491514 ubox
59 78 0.004572056 ubox
60 74 0.019467871 ubox
60 77 0.004431948 ubox
61 70 0.004921646 ubox
61 73 0.018924607 ubox
62 69 0.005208149 ubox
63 72 0.022378936 ubox
63 76 0.154077954 ubox
63 77 0.005679559 ubox
64 71 0.022762687 ubox
64 75 0.183189698 ubox
64 78 0.019203718 ubox
65 74 0.183268147 ubox
65 77 0.018495058 ubox
66 73 0.182251201 ubox
67 72 0.172169401 ubox
67 76 0.017555325 ubox
67 77 0.018397834 ubox
68 72 0.003472943 ubox
68 74 0.003546254 ubox
68 75 0.020433387 ubox
68 76 0.034666548 ubox
68 78 0.022451972 ubox
69 74 0.014571574 ubox
69 75 0.123024076 ubox
69 76 0.015813932 ubox
69 77 0.036164032 ubox
69 78 0.279230443 ubox
70 74 0.107321870 ubox
70 76 0.036708007 ubox
70 77 0.261341492 ubox
71 79 0.025065419 ubox
72 79 0.008431584 ubox
73 77 0.007790012 ubox
74 79 0.008184192 ubox
75 79 0.011336654 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
showpage
end
%%EOF
