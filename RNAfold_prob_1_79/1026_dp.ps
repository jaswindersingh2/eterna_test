%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1026)
} def

/sequence { (\
GGAAAAGCGAAACGCAAGCGGAAACCGCAAGCAUCAAAGAUGCAAGUACAAAGUACAAGCCAAAGGCAGAACAACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.026657256 ubox
1 13 0.007730437 ubox
1 15 0.005119485 ubox
1 26 0.005192341 ubox
1 49 0.010110466 ubox
1 56 0.009133049 ubox
1 60 0.003702787 ubox
1 61 0.101657163 ubox
1 67 0.008779669 ubox
1 72 0.120098729 ubox
1 75 0.080297814 ubox
1 76 0.080572385 ubox
1 77 0.016943356 ubox
1 78 0.526839828 ubox
2 8 0.010101336 ubox
2 13 0.003450673 ubox
2 25 0.005187672 ubox
2 49 0.005414214 ubox
2 56 0.004871124 ubox
2 60 0.101402634 ubox
2 61 0.006476051 ubox
2 67 0.006283332 ubox
2 72 0.063114974 ubox
2 75 0.092469244 ubox
2 76 0.021362142 ubox
2 77 0.513340078 ubox
2 78 0.753513689 ubox
3 76 0.482591205 ubox
3 77 0.746032313 ubox
4 76 0.666166070 ubox
4 77 0.048955801 ubox
5 76 0.056104306 ubox
5 77 0.047156171 ubox
6 76 0.054112023 ubox
6 77 0.015820770 ubox
7 13 0.014653803 ubox
7 15 0.973791938 ubox
7 19 0.006865873 ubox
7 28 0.017245636 ubox
7 43 0.004174753 ubox
7 54 0.003975168 ubox
7 60 0.007181361 ubox
7 67 0.043273659 ubox
7 72 0.015324176 ubox
7 75 0.039970206 ubox
7 78 0.005323626 ubox
8 14 0.974883842 ubox
8 18 0.006921603 ubox
8 27 0.017264985 ubox
8 42 0.004174160 ubox
8 53 0.004067543 ubox
8 59 0.007218955 ubox
8 66 0.043284128 ubox
8 69 0.011514696 ubox
8 79 0.165495990 ubox
9 13 0.912046573 ubox
9 15 0.020334909 ubox
9 26 0.017087156 ubox
9 35 0.005192153 ubox
9 72 0.011868053 ubox
9 75 0.008386105 ubox
9 77 0.004694318 ubox
9 78 0.179984138 ubox
10 34 0.005162584 ubox
10 76 0.005886698 ubox
10 77 0.177921396 ubox
11 76 0.158811125 ubox
11 77 0.008057829 ubox
12 76 0.009639360 ubox
13 18 0.003517059 ubox
13 20 0.014132639 ubox
13 21 0.003799764 ubox
13 69 0.010220989 ubox
13 79 0.019848722 ubox
14 19 0.013805483 ubox
14 28 0.003440013 ubox
14 32 0.014891251 ubox
14 47 0.004416372 ubox
14 60 0.042918771 ubox
14 67 0.010351869 ubox
14 72 0.020551015 ubox
14 75 0.021952225 ubox
14 78 0.019245732 ubox
15 20 0.006217291 ubox
15 27 0.003363607 ubox
15 31 0.015150690 ubox
15 46 0.004534356 ubox
15 59 0.042961161 ubox
15 66 0.010330381 ubox
15 69 0.017226971 ubox
15 79 0.006316471 ubox
16 76 0.008677356 ubox
16 77 0.019991818 ubox
17 76 0.019918389 ubox
17 77 0.007650660 ubox
18 28 0.998621288 ubox
18 75 0.008078723 ubox
19 27 0.999690306 ubox
19 79 0.003901186 ubox
20 25 0.020471943 ubox
20 26 0.999297939 ubox
20 78 0.004244528 ubox
21 25 0.983166028 ubox
21 26 0.009278977 ubox
21 77 0.004114165 ubox
22 76 0.003869342 ubox
28 46 0.003668258 ubox
29 47 0.004787460 ubox
29 76 0.003531331 ubox
29 77 0.008061737 ubox
30 47 0.003187728 ubox
30 76 0.008401630 ubox
30 77 0.003689340 ubox
31 43 0.998765302 ubox
31 75 0.003320775 ubox
32 42 0.999817206 ubox
33 41 0.999327642 ubox
34 39 0.008313529 ubox
34 40 0.998708547 ubox
35 39 0.990421857 ubox
35 42 0.003464920 ubox
42 60 0.005255486 ubox
43 59 0.005602016 ubox
44 77 0.012052765 ubox
45 54 0.013697657 ubox
45 76 0.014426500 ubox
46 54 0.003465575 ubox
46 56 0.987713587 ubox
46 67 0.005966482 ubox
46 72 0.005319548 ubox
46 75 0.014645102 ubox
46 78 0.004631815 ubox
47 52 0.011061334 ubox
47 53 0.004204226 ubox
47 55 0.988872577 ubox
47 66 0.005923842 ubox
47 71 0.005076940 ubox
47 74 0.014055176 ubox
48 54 0.988112213 ubox
49 53 0.978476670 ubox
49 69 0.003496790 ubox
49 79 0.015910848 ubox
51 77 0.037583954 ubox
52 76 0.043446104 ubox
53 60 0.007345268 ubox
53 67 0.003768370 ubox
53 72 0.060273155 ubox
53 75 0.045407913 ubox
54 59 0.007158604 ubox
54 66 0.003646439 ubox
54 68 0.003217512 ubox
54 70 0.005885942 ubox
54 71 0.059071987 ubox
54 73 0.004359009 ubox
54 74 0.043878757 ubox
56 65 0.003836565 ubox
56 69 0.043696145 ubox
57 77 0.004350823 ubox
58 76 0.005838550 ubox
59 67 0.990081083 ubox
59 72 0.004532841 ubox
59 75 0.005288265 ubox
60 65 0.010143143 ubox
60 66 0.991076771 ubox
60 69 0.007614730 ubox
61 65 0.983877420 ubox
61 66 0.010269828 ubox
61 69 0.008843118 ubox
61 79 0.005461967 ubox
62 77 0.003240110 ubox
63 77 0.041835728 ubox
64 76 0.047520433 ubox
64 77 0.021690063 ubox
65 72 0.038475764 ubox
65 75 0.048866005 ubox
65 76 0.026338911 ubox
65 78 0.014543571 ubox
66 72 0.009502762 ubox
66 75 0.027454325 ubox
66 77 0.013969531 ubox
66 78 0.013761464 ubox
67 79 0.006575364 ubox
68 76 0.123880123 ubox
68 77 0.015209411 ubox
69 75 0.161424535 ubox
69 76 0.022955956 ubox
69 77 0.019907009 ubox
69 78 0.154979391 ubox
70 76 0.024464018 ubox
70 77 0.153302277 ubox
71 76 0.124920112 ubox
71 77 0.005804936 ubox
72 79 0.013846766 ubox
73 77 0.003787552 ubox
75 79 0.004868595 ubox
2 78 0.9500000 lbox
3 77 0.9500000 lbox
4 76 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
showpage
end
%%EOF
