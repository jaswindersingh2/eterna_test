%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (832)
} def

/sequence { (\
GGAAAGCACGGACGAAAAAGCCAAAACCCGGCCUACGGAGCCUAGGGAGCCGAAAGAGCAAGCAAAAACAACAAAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.121198440 ubox
1 9 0.115767804 ubox
1 13 0.027414786 ubox
1 21 0.005722310 ubox
1 22 0.108394313 ubox
1 27 0.006122372 ubox
1 28 0.039163786 ubox
1 29 0.098364598 ubox
1 33 0.022994672 ubox
1 34 0.037347919 ubox
1 36 0.017200932 ubox
1 42 0.007580841 ubox
1 50 0.004433935 ubox
1 51 0.103330086 ubox
1 59 0.025676905 ubox
1 63 0.070459507 ubox
1 69 0.151796765 ubox
1 72 0.063600427 ubox
1 76 0.003543232 ubox
1 77 0.005825145 ubox
1 78 0.214932103 ubox
2 7 0.065508663 ubox
2 9 0.057126940 ubox
2 13 0.009042182 ubox
2 21 0.108139317 ubox
2 22 0.008384968 ubox
2 27 0.039389811 ubox
2 28 0.098226485 ubox
2 29 0.009348154 ubox
2 32 0.019904091 ubox
2 33 0.039720520 ubox
2 34 0.011158579 ubox
2 36 0.014766177 ubox
2 41 0.007555561 ubox
2 50 0.102858102 ubox
2 51 0.011513494 ubox
2 59 0.024379008 ubox
2 63 0.069780570 ubox
2 69 0.043777600 ubox
2 72 0.029725897 ubox
2 76 0.005997711 ubox
2 77 0.208017143 ubox
2 78 0.310353177 ubox
3 34 0.011600321 ubox
3 76 0.192800040 ubox
3 77 0.306805791 ubox
4 34 0.047642436 ubox
4 76 0.267843950 ubox
4 77 0.021031558 ubox
5 34 0.091367809 ubox
5 76 0.023919313 ubox
5 77 0.010703631 ubox
6 13 0.031802865 ubox
6 21 0.096059399 ubox
6 22 0.008915482 ubox
6 27 0.023956225 ubox
6 28 0.008095517 ubox
6 29 0.005415957 ubox
6 32 0.253044294 ubox
6 33 0.088847970 ubox
6 41 0.009042236 ubox
6 50 0.085498155 ubox
6 51 0.005871929 ubox
6 59 0.196304226 ubox
6 63 0.627312530 ubox
6 69 0.030271246 ubox
6 72 0.056804557 ubox
6 76 0.010441663 ubox
6 77 0.005187566 ubox
6 78 0.018222294 ubox
7 11 0.014948809 ubox
7 14 0.064831192 ubox
7 20 0.096608121 ubox
7 30 0.004640125 ubox
7 31 0.255979553 ubox
7 40 0.009187826 ubox
7 45 0.014274400 ubox
7 46 0.007705254 ubox
7 47 0.007505502 ubox
7 49 0.085967086 ubox
7 52 0.006724013 ubox
7 56 0.018315212 ubox
7 58 0.196275976 ubox
7 62 0.627316854 ubox
7 79 0.014569495 ubox
8 34 0.003294510 ubox
8 76 0.006913729 ubox
8 77 0.006476498 ubox
9 14 0.068798101 ubox
9 20 0.024576284 ubox
9 30 0.374727905 ubox
9 37 0.004458727 ubox
9 45 0.004971440 ubox
9 46 0.005234812 ubox
9 47 0.009575344 ubox
9 49 0.006932897 ubox
9 52 0.098619729 ubox
9 56 0.074997810 ubox
9 58 0.024285558 ubox
9 62 0.027270307 ubox
9 79 0.109313518 ubox
10 21 0.021989556 ubox
10 22 0.823890150 ubox
10 27 0.006361606 ubox
10 28 0.033840544 ubox
10 29 0.376900052 ubox
10 33 0.033145994 ubox
10 34 0.010376490 ubox
10 36 0.004589549 ubox
10 42 0.021979146 ubox
10 43 0.003225499 ubox
10 51 0.100214146 ubox
10 59 0.043917916 ubox
10 63 0.010070260 ubox
10 69 0.016525278 ubox
10 72 0.015974106 ubox
10 78 0.113460514 ubox
11 21 0.824590445 ubox
11 22 0.050380455 ubox
11 27 0.036544328 ubox
11 28 0.375860598 ubox
11 32 0.032383188 ubox
11 33 0.010951672 ubox
11 41 0.021995161 ubox
11 42 0.003301952 ubox
11 50 0.099996800 ubox
11 59 0.026405548 ubox
11 63 0.011651471 ubox
11 69 0.016338625 ubox
11 72 0.012848580 ubox
11 77 0.108637113 ubox
11 78 0.028734780 ubox
12 76 0.098379925 ubox
12 77 0.026898844 ubox
13 20 0.801319035 ubox
13 30 0.038040339 ubox
13 31 0.008505726 ubox
13 37 0.010328420 ubox
13 38 0.003187310 ubox
13 40 0.011540568 ubox
13 49 0.043886738 ubox
13 52 0.036931477 ubox
13 56 0.037133184 ubox
13 58 0.018554061 ubox
13 62 0.010104695 ubox
13 79 0.190174303 ubox
14 21 0.044064919 ubox
14 22 0.050326056 ubox
14 27 0.035442203 ubox
14 28 0.004194951 ubox
14 29 0.038157402 ubox
14 33 0.009431911 ubox
14 36 0.010997955 ubox
14 51 0.036808623 ubox
14 59 0.008860512 ubox
14 63 0.008463535 ubox
14 69 0.014525984 ubox
14 72 0.019698596 ubox
14 77 0.004165276 ubox
14 78 0.199955848 ubox
15 34 0.003320228 ubox
15 76 0.005846981 ubox
15 77 0.197401991 ubox
16 34 0.011082684 ubox
16 76 0.173536372 ubox
16 77 0.009286704 ubox
17 34 0.011316853 ubox
17 76 0.011297565 ubox
17 77 0.003530787 ubox
18 34 0.048871560 ubox
18 76 0.005068031 ubox
18 77 0.003287280 ubox
19 34 0.045894191 ubox
19 76 0.004172512 ubox
20 27 0.023533138 ubox
20 28 0.003654415 ubox
20 29 0.005917590 ubox
20 32 0.247349721 ubox
20 33 0.033858213 ubox
20 41 0.006441389 ubox
20 50 0.055884319 ubox
20 51 0.008207462 ubox
20 59 0.024139113 ubox
20 63 0.073110268 ubox
20 69 0.012647950 ubox
20 72 0.031014197 ubox
21 30 0.007952877 ubox
21 31 0.250405132 ubox
21 40 0.006502115 ubox
21 46 0.023783095 ubox
21 47 0.021307185 ubox
21 49 0.055953112 ubox
21 52 0.007864204 ubox
21 58 0.024099237 ubox
21 62 0.072859716 ubox
22 30 0.250425498 ubox
22 31 0.003505808 ubox
22 45 0.023800818 ubox
22 46 0.021275895 ubox
22 47 0.008923111 ubox
22 49 0.009322090 ubox
22 52 0.014292146 ubox
22 56 0.013783788 ubox
22 62 0.006519309 ubox
23 43 0.004503296 ubox
23 77 0.006254557 ubox
24 43 0.012386838 ubox
24 76 0.006174277 ubox
24 77 0.006762068 ubox
25 43 0.005983628 ubox
25 76 0.006570236 ubox
25 77 0.006006224 ubox
26 76 0.005614185 ubox
27 38 0.003517649 ubox
27 40 0.030372991 ubox
27 45 0.023042685 ubox
27 46 0.131509681 ubox
27 47 0.826789535 ubox
27 49 0.009919645 ubox
27 56 0.013655187 ubox
27 58 0.004391005 ubox
27 62 0.023764292 ubox
28 38 0.063534754 ubox
28 45 0.131583530 ubox
28 46 0.830579934 ubox
28 47 0.057152953 ubox
28 52 0.005185613 ubox
28 56 0.008704169 ubox
28 62 0.080488633 ubox
29 37 0.063701912 ubox
29 45 0.826289572 ubox
29 46 0.057148804 ubox
29 52 0.112020548 ubox
29 56 0.004387518 ubox
29 58 0.004672256 ubox
29 62 0.042538882 ubox
29 79 0.006019413 ubox
30 36 0.063730743 ubox
30 41 0.006826200 ubox
30 42 0.839699986 ubox
30 43 0.038970904 ubox
30 51 0.113532240 ubox
30 59 0.036125435 ubox
30 63 0.015540523 ubox
30 69 0.004197223 ubox
30 72 0.003478467 ubox
30 78 0.006552195 ubox
31 41 0.844250142 ubox
31 42 0.037129469 ubox
31 50 0.113534804 ubox
31 59 0.351976839 ubox
31 63 0.020784313 ubox
32 38 0.018107689 ubox
32 40 0.842831995 ubox
32 46 0.028595205 ubox
32 47 0.011292063 ubox
32 49 0.110369664 ubox
32 56 0.018084198 ubox
32 58 0.352471966 ubox
32 62 0.020727681 ubox
33 37 0.023676878 ubox
33 38 0.815262573 ubox
33 40 0.058310751 ubox
33 45 0.037944988 ubox
33 46 0.015604104 ubox
33 47 0.090329449 ubox
33 49 0.010854409 ubox
33 52 0.004065911 ubox
33 56 0.392946251 ubox
33 58 0.030795450 ubox
33 62 0.007230649 ubox
34 38 0.037396643 ubox
34 39 0.073187639 ubox
34 44 0.038066046 ubox
34 45 0.015457303 ubox
34 46 0.084162482 ubox
34 47 0.016810866 ubox
34 48 0.013574847 ubox
34 53 0.058390782 ubox
34 54 0.104016281 ubox
34 55 0.374308127 ubox
34 56 0.036908256 ubox
34 57 0.030118676 ubox
34 61 0.007071197 ubox
35 43 0.037365508 ubox
36 45 0.086090540 ubox
36 46 0.021234379 ubox
36 47 0.010134150 ubox
36 52 0.510513167 ubox
36 56 0.003887235 ubox
36 79 0.003707326 ubox
37 41 0.014237761 ubox
37 42 0.034285076 ubox
37 43 0.034075343 ubox
37 51 0.516803925 ubox
37 78 0.003908369 ubox
38 42 0.036873352 ubox
38 43 0.011226823 ubox
38 50 0.516809432 ubox
38 51 0.006178834 ubox
38 77 0.003859433 ubox
39 43 0.005238733 ubox
39 76 0.003758151 ubox
40 50 0.013927232 ubox
40 59 0.035337862 ubox
40 63 0.006227830 ubox
41 45 0.004708430 ubox
41 46 0.013575189 ubox
41 47 0.517228149 ubox
41 49 0.013971965 ubox
41 58 0.035362299 ubox
41 62 0.006014941 ubox
42 46 0.513490072 ubox
42 47 0.010670295 ubox
42 49 0.008280689 ubox
42 56 0.034687812 ubox
43 48 0.008651131 ubox
43 53 0.003552442 ubox
43 54 0.004789622 ubox
43 55 0.032693600 ubox
43 65 0.003310006 ubox
45 50 0.005795712 ubox
45 51 0.035575805 ubox
45 63 0.017810105 ubox
46 50 0.035029953 ubox
46 51 0.009747480 ubox
46 63 0.008824311 ubox
46 78 0.004349334 ubox
47 51 0.006867693 ubox
47 59 0.011985033 ubox
47 63 0.014552728 ubox
47 77 0.004420867 ubox
47 78 0.006271671 ubox
48 76 0.004689806 ubox
48 77 0.006338400 ubox
49 59 0.771050826 ubox
49 63 0.141268945 ubox
49 69 0.005052246 ubox
49 72 0.004887095 ubox
49 76 0.003270104 ubox
50 56 0.026885299 ubox
50 58 0.769478307 ubox
50 62 0.140344738 ubox
50 79 0.003517693 ubox
51 56 0.726135785 ubox
51 58 0.095618420 ubox
51 62 0.019943395 ubox
51 79 0.088558016 ubox
52 59 0.070127764 ubox
52 63 0.012181349 ubox
52 69 0.007797314 ubox
52 72 0.006015477 ubox
52 78 0.097664227 ubox
53 76 0.003232510 ubox
53 77 0.096421248 ubox
54 76 0.085996580 ubox
54 77 0.011852657 ubox
55 76 0.015292512 ubox
56 63 0.058512202 ubox
56 69 0.017391058 ubox
56 72 0.023775729 ubox
56 77 0.009777386 ubox
56 78 0.052753542 ubox
57 76 0.011275577 ubox
57 77 0.051979871 ubox
58 63 0.048025176 ubox
58 69 0.023965948 ubox
58 72 0.033967891 ubox
58 76 0.041723060 ubox
58 78 0.008909656 ubox
59 79 0.004731023 ubox
60 76 0.004637777 ubox
60 77 0.015898240 ubox
61 76 0.017754545 ubox
61 77 0.006699235 ubox
62 69 0.112425515 ubox
62 72 0.050954912 ubox
62 76 0.006507421 ubox
62 77 0.003229502 ubox
62 78 0.014772972 ubox
63 79 0.010434956 ubox
64 76 0.007714852 ubox
64 77 0.017184703 ubox
65 76 0.017241175 ubox
65 77 0.017707786 ubox
66 76 0.017966136 ubox
66 77 0.032925509 ubox
67 76 0.036225760 ubox
67 77 0.020052522 ubox
68 76 0.020493664 ubox
68 77 0.014181867 ubox
69 79 0.026900684 ubox
70 76 0.013733526 ubox
70 77 0.031355358 ubox
71 76 0.028215047 ubox
71 77 0.013468514 ubox
72 79 0.055821629 ubox
73 77 0.008697852 ubox
6 63 0.9500000 lbox
7 62 0.9500000 lbox
10 22 0.9500000 lbox
11 21 0.9500000 lbox
13 20 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 42 0.9500000 lbox
31 41 0.9500000 lbox
32 40 0.9500000 lbox
33 38 0.9500000 lbox
49 59 0.9500000 lbox
50 58 0.9500000 lbox
51 56 0.9500000 lbox
showpage
end
%%EOF
