%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (472)
} def

/sequence { (\
GGAAAAGGCAUGCCCACUGGAAACAGGUCGUAAGACGGGAUAAGAUACCGCAAGGUAUCCAUGCCAAACUCUGGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.017225024 ubox
1 14 0.005216507 ubox
1 15 0.011975948 ubox
1 60 0.012695692 ubox
1 69 0.072627822 ubox
1 70 0.092909342 ubox
1 71 0.183803499 ubox
1 72 0.608125702 ubox
1 75 0.026463387 ubox
1 76 0.019218827 ubox
1 77 0.003219306 ubox
1 78 0.080618628 ubox
2 9 0.011052817 ubox
2 13 0.005260039 ubox
2 14 0.011940984 ubox
2 59 0.011012524 ubox
2 60 0.004886745 ubox
2 69 0.114174601 ubox
2 70 0.164808790 ubox
2 71 0.644435598 ubox
2 72 0.008280541 ubox
2 75 0.021954711 ubox
2 76 0.003349773 ubox
2 77 0.078226179 ubox
2 78 0.114571804 ubox
3 58 0.007971906 ubox
3 70 0.632244892 ubox
3 72 0.007975737 ubox
3 76 0.073990103 ubox
3 77 0.113579813 ubox
4 11 0.004811834 ubox
4 70 0.023228898 ubox
4 72 0.009085960 ubox
4 76 0.102526628 ubox
4 77 0.007851349 ubox
5 11 0.005841097 ubox
5 70 0.009581052 ubox
5 72 0.013731111 ubox
5 76 0.009025312 ubox
5 77 0.022112573 ubox
6 11 0.009456786 ubox
6 70 0.015926150 ubox
6 72 0.023833480 ubox
6 76 0.026774548 ubox
6 77 0.018511540 ubox
7 13 0.006393601 ubox
7 14 0.034912720 ubox
7 15 0.034751414 ubox
7 60 0.011073821 ubox
7 65 0.986826191 ubox
7 69 0.008449544 ubox
7 71 0.012590123 ubox
7 75 0.026341087 ubox
7 76 0.022916015 ubox
7 78 0.018606895 ubox
8 13 0.034890774 ubox
8 14 0.034525491 ubox
8 59 0.009656084 ubox
8 64 0.988247686 ubox
8 65 0.005921626 ubox
8 70 0.003536868 ubox
8 75 0.023627533 ubox
8 77 0.015562739 ubox
8 78 0.011494751 ubox
9 34 0.004517803 ubox
9 44 0.004598443 ubox
9 63 0.988299343 ubox
9 73 0.025597218 ubox
9 74 0.023402593 ubox
9 79 0.004456099 ubox
10 41 0.044496107 ubox
10 58 0.009192726 ubox
10 62 0.987552510 ubox
10 72 0.023447636 ubox
10 76 0.006972781 ubox
10 77 0.009961153 ubox
11 32 0.007492788 ubox
11 40 0.047224562 ubox
11 42 0.043077878 ubox
11 43 0.005195694 ubox
11 57 0.009305518 ubox
11 61 0.986381635 ubox
11 79 0.003460721 ubox
12 31 0.008167390 ubox
12 41 0.050737800 ubox
12 56 0.009335787 ubox
12 60 0.978086366 ubox
12 69 0.007530724 ubox
12 70 0.004193270 ubox
12 71 0.014291667 ubox
12 75 0.037337092 ubox
12 78 0.005379318 ubox
13 20 0.026474553 ubox
13 27 0.005540157 ubox
13 30 0.008677028 ubox
13 37 0.003619296 ubox
13 38 0.056177863 ubox
13 39 0.965629875 ubox
13 55 0.009368919 ubox
13 74 0.036874151 ubox
14 19 0.026432215 ubox
14 20 0.019222560 ubox
14 26 0.005341743 ubox
14 27 0.007171392 ubox
14 37 0.056131017 ubox
14 38 0.968757445 ubox
14 39 0.072743345 ubox
14 54 0.009325890 ubox
14 73 0.036231467 ubox
14 74 0.008527608 ubox
15 19 0.019147690 ubox
15 20 0.003664820 ubox
15 26 0.007340104 ubox
15 27 0.019584554 ubox
15 37 0.967752250 ubox
15 38 0.072793067 ubox
15 39 0.005425709 ubox
15 73 0.010709658 ubox
16 28 0.012561049 ubox
16 31 0.003316752 ubox
16 72 0.010978097 ubox
17 26 0.995261918 ubox
17 27 0.010825509 ubox
17 34 0.010008853 ubox
17 37 0.004530153 ubox
17 38 0.003413710 ubox
18 23 0.005168563 ubox
18 25 0.997794491 ubox
18 26 0.008290429 ubox
18 33 0.009550975 ubox
18 37 0.003440381 ubox
18 79 0.005987825 ubox
19 24 0.997847326 ubox
19 31 0.003369974 ubox
19 36 0.003790801 ubox
19 78 0.011105585 ubox
20 24 0.008810006 ubox
20 29 0.008598438 ubox
20 77 0.011125496 ubox
20 78 0.004122097 ubox
21 28 0.008141237 ubox
21 41 0.004863256 ubox
21 76 0.011091101 ubox
21 77 0.004094527 ubox
22 41 0.004813867 ubox
22 76 0.003743711 ubox
23 31 0.004733378 ubox
23 41 0.003435847 ubox
24 30 0.004980489 ubox
24 38 0.012116247 ubox
24 39 0.018784284 ubox
24 73 0.011808983 ubox
25 72 0.011806853 ubox
26 36 0.004099449 ubox
26 71 0.011770929 ubox
27 36 0.995817408 ubox
27 41 0.040012589 ubox
27 75 0.003768320 ubox
28 35 0.996895112 ubox
28 38 0.036860268 ubox
28 39 0.008047817 ubox
28 40 0.041021267 ubox
28 74 0.003770845 ubox
29 34 0.996807486 ubox
29 37 0.048452994 ubox
29 38 0.010414453 ubox
29 39 0.041039236 ubox
29 73 0.003779001 ubox
30 36 0.051788440 ubox
30 72 0.003275738 ubox
31 35 0.046668666 ubox
31 37 0.028749572 ubox
31 38 0.003840848 ubox
33 72 0.003645258 ubox
34 71 0.003816839 ubox
35 70 0.003738157 ubox
37 41 0.004679940 ubox
37 49 0.007410001 ubox
37 51 0.003229988 ubox
37 60 0.005242590 ubox
37 65 0.048972591 ubox
38 48 0.007409695 ubox
38 49 0.005831984 ubox
38 59 0.004687620 ubox
38 60 0.013135972 ubox
38 64 0.049011024 ubox
38 65 0.020029988 ubox
38 78 0.003776341 ubox
39 48 0.005836986 ubox
39 59 0.013044087 ubox
39 60 0.004582924 ubox
39 64 0.020072706 ubox
39 77 0.003673257 ubox
40 58 0.012299505 ubox
40 62 0.051940996 ubox
40 76 0.003443954 ubox
41 57 0.008943189 ubox
41 61 0.050015555 ubox
41 63 0.005043975 ubox
42 56 0.005306822 ubox
42 62 0.008301757 ubox
43 62 0.007051779 ubox
44 58 0.004444552 ubox
44 59 0.996442098 ubox
44 60 0.013955620 ubox
45 58 0.999101563 ubox
46 57 0.999333129 ubox
47 56 0.999663505 ubox
48 55 0.999932525 ubox
49 54 0.999546097 ubox
49 55 0.003190788 ubox
60 79 0.008549088 ubox
61 76 0.010410911 ubox
61 77 0.020332618 ubox
63 75 0.142169412 ubox
64 74 0.142668774 ubox
65 73 0.143098658 ubox
66 70 0.007354210 ubox
66 72 0.136904284 ubox
66 76 0.011747021 ubox
66 77 0.031901718 ubox
67 72 0.021749754 ubox
67 76 0.035103523 ubox
67 77 0.020590854 ubox
68 72 0.010856434 ubox
68 76 0.021535493 ubox
68 77 0.011235048 ubox
69 73 0.037735875 ubox
69 74 0.050500688 ubox
69 79 0.018299339 ubox
70 74 0.008544016 ubox
70 79 0.006472123 ubox
71 79 0.020559630 ubox
72 79 0.062081124 ubox
73 77 0.008502910 ubox
73 78 0.133142384 ubox
74 78 0.044531384 ubox
75 79 0.014306831 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
