%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (238)
} def

/sequence { (\
GGAAAAGACUGGUACAGAUCCUCGAAAGAGCGAUCGAAGGUACAUGCGAAAGCAGUACAGUACUGGUCGCGUAUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.072352557 ubox
1 10 0.092267171 ubox
1 13 0.006856378 ubox
1 15 0.058509382 ubox
1 21 0.012657758 ubox
1 70 0.020908563 ubox
1 72 0.035758683 ubox
1 74 0.051282284 ubox
1 75 0.236741910 ubox
1 76 0.404927577 ubox
1 77 0.020902996 ubox
1 78 0.196421119 ubox
2 9 0.097275636 ubox
2 10 0.006892703 ubox
2 13 0.006577866 ubox
2 15 0.018476453 ubox
2 20 0.012715704 ubox
2 23 0.004190069 ubox
2 68 0.005187839 ubox
2 70 0.031185584 ubox
2 72 0.080995305 ubox
2 74 0.217736476 ubox
2 75 0.467574219 ubox
2 76 0.013468650 ubox
2 77 0.190605327 ubox
2 78 0.183566974 ubox
3 10 0.015527891 ubox
3 13 0.009051708 ubox
3 19 0.012253375 ubox
3 22 0.004158829 ubox
3 67 0.004049713 ubox
3 72 0.187163817 ubox
3 74 0.457328586 ubox
3 76 0.181416394 ubox
3 77 0.182974288 ubox
4 10 0.012780232 ubox
4 13 0.014323052 ubox
4 72 0.128775140 ubox
4 74 0.044144688 ubox
4 76 0.168750518 ubox
4 77 0.007081136 ubox
5 10 0.016122072 ubox
5 13 0.007134410 ubox
5 72 0.121509665 ubox
5 74 0.030303748 ubox
5 76 0.006864819 ubox
5 77 0.012224245 ubox
6 10 0.010192814 ubox
6 13 0.021694765 ubox
6 72 0.037058862 ubox
6 74 0.058523585 ubox
6 76 0.014762055 ubox
6 77 0.003257907 ubox
7 13 0.008748561 ubox
7 15 0.030197812 ubox
7 20 0.016975327 ubox
7 68 0.868063922 ubox
7 70 0.019971742 ubox
7 75 0.012333968 ubox
7 78 0.005958587 ubox
8 13 0.010547986 ubox
8 19 0.017045404 ubox
8 41 0.003807686 ubox
8 67 0.869114393 ubox
8 74 0.009586304 ubox
8 77 0.005659089 ubox
9 17 0.065671173 ubox
9 40 0.003915662 ubox
9 66 0.869374242 ubox
9 79 0.010451873 ubox
10 14 0.004729440 ubox
10 16 0.082131707 ubox
10 39 0.003885114 ubox
10 65 0.865967933 ubox
11 15 0.083333781 ubox
11 20 0.003624919 ubox
11 21 0.006800282 ubox
11 64 0.865969825 ubox
11 75 0.006787337 ubox
12 19 0.003654971 ubox
12 20 0.006826518 ubox
12 43 0.009853278 ubox
12 63 0.869378287 ubox
12 74 0.006794891 ubox
13 18 0.003716612 ubox
13 42 0.009887295 ubox
13 62 0.869162021 ubox
13 73 0.006819505 ubox
14 41 0.009870749 ubox
14 61 0.868901526 ubox
14 72 0.006808862 ubox
15 36 0.014715874 ubox
15 39 0.009391850 ubox
15 40 0.009575474 ubox
15 60 0.867740661 ubox
15 71 0.006795757 ubox
15 79 0.011426737 ubox
17 34 0.004771192 ubox
17 35 0.993786012 ubox
18 34 0.998358542 ubox
19 32 0.005354419 ubox
19 33 0.999027793 ubox
20 32 0.999236411 ubox
20 39 0.008913772 ubox
20 40 0.004496919 ubox
21 28 0.003603691 ubox
21 30 0.999279269 ubox
21 39 0.009314330 ubox
22 27 0.003364663 ubox
22 29 0.999387255 ubox
22 33 0.013886493 ubox
22 37 0.014976710 ubox
22 38 0.006601030 ubox
23 28 0.999086619 ubox
23 30 0.007523975 ubox
23 32 0.014882588 ubox
23 36 0.016771211 ubox
23 79 0.008785903 ubox
24 31 0.014811335 ubox
24 35 0.016805463 ubox
24 78 0.009887393 ubox
25 34 0.016562235 ubox
25 77 0.008729948 ubox
26 76 0.007142025 ubox
26 77 0.005126725 ubox
27 76 0.006987820 ubox
28 72 0.003369991 ubox
28 75 0.008398081 ubox
29 74 0.008317321 ubox
30 70 0.011691826 ubox
31 69 0.011771314 ubox
32 68 0.011774916 ubox
33 67 0.011773289 ubox
34 66 0.011762457 ubox
35 39 0.004489438 ubox
35 65 0.011739728 ubox
35 79 0.087976575 ubox
36 43 0.003455511 ubox
36 58 0.005760580 ubox
36 63 0.004412968 ubox
36 64 0.009641813 ubox
36 78 0.492974243 ubox
37 61 0.009216854 ubox
37 77 0.493433828 ubox
38 76 0.493483819 ubox
39 58 0.045129320 ubox
39 75 0.493750211 ubox
40 58 0.866389758 ubox
40 74 0.493251302 ubox
41 57 0.868730941 ubox
41 73 0.491691764 ubox
42 56 0.868850179 ubox
42 72 0.476124218 ubox
42 74 0.003911082 ubox
43 55 0.866278060 ubox
43 71 0.459609414 ubox
44 72 0.122661912 ubox
44 74 0.010704708 ubox
45 54 0.864018777 ubox
45 69 0.016041433 ubox
45 71 0.167154395 ubox
45 73 0.013774633 ubox
46 53 0.869421513 ubox
46 68 0.015925025 ubox
46 70 0.491292594 ubox
46 72 0.017824321 ubox
47 52 0.869098585 ubox
47 66 0.004980519 ubox
47 69 0.493208991 ubox
47 71 0.018943107 ubox
48 68 0.492214808 ubox
48 70 0.020577345 ubox
49 67 0.447872816 ubox
50 67 0.049906519 ubox
51 64 0.012691420 ubox
51 67 0.159536640 ubox
52 61 0.009531720 ubox
52 63 0.012529701 ubox
52 64 0.006447937 ubox
52 67 0.018297352 ubox
53 60 0.010213218 ubox
53 65 0.491291184 ubox
53 66 0.018051966 ubox
54 61 0.008419722 ubox
54 64 0.493330990 ubox
55 63 0.493595033 ubox
56 62 0.490189995 ubox
57 61 0.434554813 ubox
68 79 0.004568592 ubox
69 74 0.007970012 ubox
69 75 0.029099844 ubox
69 76 0.009422602 ubox
69 77 0.006535725 ubox
69 78 0.035440982 ubox
70 79 0.214692253 ubox
71 75 0.025376974 ubox
71 76 0.013032701 ubox
71 77 0.015212310 ubox
71 78 0.230386825 ubox
72 79 0.007074593 ubox
73 77 0.014362089 ubox
74 79 0.005798539 ubox
75 79 0.008066914 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
10 65 0.9500000 lbox
11 64 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
