%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (793)
} def

/sequence { (\
GGAAAAACGACUCAGAUAUAGCUACUACAUAGUGCAACCAGUCACAUGAUAGUACUAUACUAGAGCGAUGAUAUGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.136665143 ubox
1 11 0.013231051 ubox
1 12 0.012576092 ubox
1 13 0.016757702 ubox
1 66 0.006179317 ubox
1 69 0.003442527 ubox
1 72 0.027212260 ubox
1 74 0.054725081 ubox
1 76 0.019411888 ubox
1 77 0.011839089 ubox
1 78 0.270888945 ubox
2 8 0.031778213 ubox
2 11 0.016817249 ubox
2 12 0.012508285 ubox
2 13 0.042537388 ubox
2 66 0.006095508 ubox
2 69 0.006229487 ubox
2 72 0.027542319 ubox
2 74 0.022619440 ubox
2 76 0.017706108 ubox
2 77 0.270502015 ubox
2 78 0.230540046 ubox
3 12 0.042222124 ubox
3 69 0.014122800 ubox
3 72 0.057888582 ubox
3 74 0.026763827 ubox
3 76 0.266716663 ubox
3 77 0.230147647 ubox
4 69 0.046649784 ubox
4 72 0.057408434 ubox
4 74 0.032540537 ubox
4 76 0.220901695 ubox
4 77 0.013907066 ubox
5 69 0.047924006 ubox
5 72 0.046318410 ubox
5 74 0.052782289 ubox
5 76 0.017111977 ubox
5 77 0.006621160 ubox
6 69 0.233256005 ubox
6 72 0.035645869 ubox
6 74 0.048226795 ubox
6 76 0.007205655 ubox
6 77 0.033596907 ubox
7 69 0.228455291 ubox
7 72 0.062273304 ubox
7 74 0.036856761 ubox
7 76 0.039109861 ubox
7 77 0.004280759 ubox
8 15 0.011468739 ubox
8 65 0.008678417 ubox
8 67 0.908042352 ubox
8 70 0.092104953 ubox
8 75 0.038515703 ubox
8 79 0.077807158 ubox
9 13 0.005101321 ubox
9 66 0.929544518 ubox
9 69 0.088254396 ubox
9 74 0.031890906 ubox
9 77 0.015865188 ubox
9 78 0.082049538 ubox
10 69 0.023891095 ubox
10 72 0.010767804 ubox
10 74 0.004006109 ubox
10 76 0.023769383 ubox
10 77 0.079449169 ubox
11 63 0.029332550 ubox
11 65 0.986698225 ubox
11 67 0.005371264 ubox
11 75 0.028751282 ubox
11 79 0.003193019 ubox
12 62 0.032865593 ubox
12 63 0.014038981 ubox
12 64 0.987411056 ubox
12 68 0.005008497 ubox
12 71 0.029284464 ubox
12 75 0.007076770 ubox
13 63 0.986988655 ubox
13 67 0.005139457 ubox
13 70 0.029957644 ubox
13 75 0.058060264 ubox
13 79 0.003900767 ubox
14 61 0.939983924 ubox
14 69 0.029404461 ubox
14 72 0.011526281 ubox
14 74 0.057333078 ubox
14 76 0.007158667 ubox
15 60 0.945853874 ubox
15 61 0.091888641 ubox
15 72 0.009375732 ubox
15 77 0.011371483 ubox
15 78 0.005051923 ubox
16 58 0.014034141 ubox
16 61 0.060400445 ubox
16 69 0.004455313 ubox
16 72 0.031160357 ubox
16 74 0.008717831 ubox
16 76 0.012946065 ubox
16 77 0.003908941 ubox
17 57 0.011665213 ubox
17 59 0.986954020 ubox
17 68 0.004588068 ubox
17 70 0.045330829 ubox
17 71 0.032718511 ubox
17 73 0.008980178 ubox
17 75 0.013376217 ubox
18 56 0.009416345 ubox
18 58 0.995343333 ubox
18 69 0.050278761 ubox
18 72 0.008819783 ubox
18 74 0.013396597 ubox
19 57 0.996304000 ubox
19 68 0.044531066 ubox
19 70 0.004242504 ubox
19 71 0.006556790 ubox
19 73 0.013340453 ubox
20 56 0.996555924 ubox
20 69 0.004463197 ubox
20 72 0.013241697 ubox
21 53 0.008608159 ubox
21 55 0.996290060 ubox
21 56 0.005409530 ubox
21 66 0.077240445 ubox
22 52 0.011608190 ubox
22 65 0.077344278 ubox
23 51 0.011651466 ubox
23 54 0.990362035 ubox
23 64 0.076999986 ubox
24 50 0.011491162 ubox
24 53 0.996335887 ubox
25 52 0.996884799 ubox
25 63 0.073642701 ubox
26 49 0.006791265 ubox
26 51 0.996192119 ubox
26 62 0.073574859 ubox
27 50 0.989885468 ubox
27 61 0.070912523 ubox
28 48 0.990932121 ubox
29 47 0.990459529 ubox
29 50 0.005290971 ubox
29 58 0.073165959 ubox
30 46 0.980717236 ubox
30 48 0.031416007 ubox
30 49 0.007363704 ubox
30 57 0.076959433 ubox
31 42 0.024579503 ubox
31 47 0.033374947 ubox
31 56 0.077340840 ubox
32 42 0.003458063 ubox
32 43 0.016550584 ubox
32 45 0.993192569 ubox
32 47 0.014612828 ubox
32 55 0.077388165 ubox
33 40 0.028359131 ubox
33 44 0.993292426 ubox
33 46 0.015309118 ubox
33 54 0.077357681 ubox
34 39 0.028413827 ubox
34 42 0.170981469 ubox
34 43 0.980348587 ubox
34 45 0.015406079 ubox
34 53 0.077342739 ubox
35 41 0.805614049 ubox
35 52 0.077253044 ubox
36 42 0.132145680 ubox
36 50 0.007368631 ubox
37 42 0.026654818 ubox
37 50 0.042214957 ubox
38 48 0.004180885 ubox
39 48 0.071713640 ubox
40 47 0.070360763 ubox
41 45 0.007037007 ubox
41 47 0.005461656 ubox
41 50 0.019842979 ubox
42 46 0.005468866 ubox
42 49 0.020938660 ubox
43 48 0.020941748 ubox
60 79 0.003200748 ubox
63 78 0.127632743 ubox
64 77 0.128022291 ubox
65 76 0.128459771 ubox
66 70 0.005933055 ubox
66 75 0.130033119 ubox
66 79 0.238946034 ubox
67 74 0.084245854 ubox
67 76 0.003319430 ubox
67 77 0.026877888 ubox
67 78 0.275807991 ubox
68 72 0.013850585 ubox
68 74 0.032797366 ubox
68 76 0.048116466 ubox
68 77 0.275282737 ubox
69 73 0.031384840 ubox
69 75 0.051806072 ubox
69 79 0.318795111 ubox
70 74 0.026251627 ubox
70 76 0.012466324 ubox
70 77 0.026441030 ubox
70 78 0.531776056 ubox
71 76 0.027570657 ubox
71 77 0.526766567 ubox
72 79 0.009330493 ubox
73 77 0.006059036 ubox
74 79 0.007982768 ubox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 41 0.9500000 lbox
showpage
end
%%EOF
