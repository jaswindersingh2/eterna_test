%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1002)
} def

/sequence { (\
GGAAAAGACAAAGUCAAGUACAAAGUACAAGGUACAAAGUACCAAGAGGAAACCUCAACACAAAGUGACCAUGCCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.032886655 ubox
1 15 0.004087196 ubox
1 21 0.006625282 ubox
1 59 0.011629908 ubox
1 61 0.012369236 ubox
1 69 0.011413286 ubox
1 70 0.220571301 ubox
1 74 0.015890309 ubox
1 75 0.199393355 ubox
1 76 0.025380753 ubox
1 77 0.006276488 ubox
1 78 0.279878291 ubox
2 9 0.013712508 ubox
2 14 0.003392904 ubox
2 15 0.007163174 ubox
2 59 0.007853184 ubox
2 61 0.005890867 ubox
2 69 0.219714067 ubox
2 70 0.016748780 ubox
2 74 0.199093153 ubox
2 75 0.029190515 ubox
2 76 0.005802824 ubox
2 77 0.255969395 ubox
2 78 0.523002159 ubox
3 14 0.006924294 ubox
3 19 0.004311408 ubox
3 66 0.003661507 ubox
3 72 0.028200230 ubox
3 76 0.223889449 ubox
3 77 0.495028772 ubox
4 66 0.010764287 ubox
4 72 0.030407329 ubox
4 76 0.356712116 ubox
4 77 0.091999966 ubox
5 14 0.003250772 ubox
5 66 0.019583630 ubox
5 72 0.020689307 ubox
5 76 0.102222882 ubox
5 77 0.637882340 ubox
6 14 0.004158420 ubox
6 66 0.008463130 ubox
6 72 0.016383603 ubox
6 76 0.777104595 ubox
6 77 0.020353946 ubox
7 14 0.003664470 ubox
7 15 0.335410037 ubox
7 21 0.005812873 ubox
7 69 0.015980682 ubox
7 70 0.026414629 ubox
7 72 0.011388106 ubox
7 74 0.337076994 ubox
7 75 0.812672780 ubox
7 76 0.015945720 ubox
7 77 0.018643024 ubox
7 78 0.079321300 ubox
8 14 0.335432383 ubox
8 19 0.010968885 ubox
8 26 0.004666113 ubox
8 66 0.020273620 ubox
8 72 0.022752670 ubox
8 76 0.019129075 ubox
8 77 0.078217845 ubox
9 13 0.332170098 ubox
9 18 0.011286219 ubox
9 25 0.004772726 ubox
9 65 0.020500916 ubox
9 67 0.016343994 ubox
9 73 0.906412209 ubox
9 79 0.016233947 ubox
10 66 0.014504770 ubox
10 72 0.895238971 ubox
10 77 0.005103091 ubox
11 72 0.026806346 ubox
11 76 0.005543445 ubox
11 77 0.036394958 ubox
12 72 0.013289940 ubox
12 76 0.041133304 ubox
13 21 0.006459969 ubox
13 28 0.004273769 ubox
13 59 0.007674120 ubox
13 61 0.011062782 ubox
13 69 0.931836346 ubox
13 70 0.022382189 ubox
13 72 0.004576970 ubox
13 74 0.012270909 ubox
13 75 0.041264981 ubox
13 78 0.003219686 ubox
14 20 0.006161893 ubox
14 27 0.004134132 ubox
14 30 0.003829517 ubox
14 58 0.007268264 ubox
14 60 0.010375454 ubox
14 68 0.933138078 ubox
14 71 0.004495365 ubox
14 73 0.009989012 ubox
15 25 0.003344523 ubox
15 65 0.005571002 ubox
15 67 0.932140096 ubox
15 73 0.038529717 ubox
16 66 0.804291155 ubox
16 72 0.034874803 ubox
16 77 0.006917960 ubox
17 26 0.013577991 ubox
17 66 0.038097542 ubox
17 76 0.007632850 ubox
18 26 0.003432686 ubox
18 28 0.985180208 ubox
18 35 0.009900055 ubox
18 42 0.102129057 ubox
18 43 0.007088095 ubox
18 59 0.006521478 ubox
18 61 0.015540122 ubox
18 69 0.006458162 ubox
18 70 0.004111775 ubox
18 74 0.007484919 ubox
18 75 0.006664805 ubox
19 24 0.010719415 ubox
19 25 0.004158932 ubox
19 27 0.986314014 ubox
19 34 0.009911934 ubox
19 41 0.102681048 ubox
19 58 0.006294836 ubox
19 60 0.014848487 ubox
19 62 0.004084799 ubox
19 63 0.027190859 ubox
19 64 0.016199549 ubox
19 65 0.005691485 ubox
19 67 0.006142703 ubox
19 68 0.005767833 ubox
19 73 0.007665977 ubox
20 26 0.985571119 ubox
20 33 0.009912083 ubox
20 40 0.102721629 ubox
20 66 0.012227554 ubox
20 72 0.006986198 ubox
21 25 0.975961882 ubox
21 32 0.009888318 ubox
21 39 0.102469739 ubox
21 65 0.015382065 ubox
21 67 0.003760592 ubox
21 73 0.007255854 ubox
22 26 0.003165203 ubox
22 66 0.003367563 ubox
22 72 0.007091959 ubox
23 77 0.005517937 ubox
24 76 0.006060147 ubox
25 35 0.102720178 ubox
25 42 0.007407210 ubox
25 59 0.026248190 ubox
25 61 0.012093774 ubox
25 69 0.008134050 ubox
25 74 0.006538421 ubox
25 75 0.005853955 ubox
26 34 0.102973020 ubox
26 41 0.007447349 ubox
26 57 0.005402692 ubox
26 58 0.025398044 ubox
26 60 0.011548092 ubox
26 67 0.007523355 ubox
26 68 0.007244920 ubox
26 73 0.006724795 ubox
27 33 0.102892512 ubox
27 40 0.007451130 ubox
27 66 0.008996078 ubox
27 72 0.006073165 ubox
28 32 0.101888052 ubox
28 39 0.007445577 ubox
28 65 0.009493053 ubox
28 67 0.003807178 ubox
28 73 0.006174179 ubox
29 66 0.003636720 ubox
29 72 0.006456193 ubox
29 77 0.016543444 ubox
30 76 0.018898760 ubox
31 43 0.993168474 ubox
31 70 0.016617284 ubox
31 75 0.019269029 ubox
32 42 0.994205915 ubox
32 69 0.016629403 ubox
32 74 0.019245128 ubox
33 41 0.993922511 ubox
33 67 0.003748842 ubox
33 68 0.016134710 ubox
33 73 0.019113149 ubox
34 40 0.992907766 ubox
34 66 0.005394897 ubox
34 72 0.017693420 ubox
35 39 0.983200099 ubox
35 65 0.005511813 ubox
35 67 0.018592323 ubox
36 66 0.018422288 ubox
39 61 0.006322424 ubox
39 69 0.005470673 ubox
40 60 0.006146753 ubox
40 62 0.003688761 ubox
40 67 0.005310289 ubox
40 68 0.005162646 ubox
41 66 0.005580871 ubox
42 65 0.005577172 ubox
45 55 0.016263241 ubox
46 53 0.003190344 ubox
46 54 0.017274055 ubox
46 56 0.995782482 ubox
46 59 0.016658175 ubox
46 61 0.004911151 ubox
46 77 0.050435849 ubox
46 78 0.024887879 ubox
47 55 0.996911286 ubox
47 76 0.056783639 ubox
47 77 0.020425536 ubox
48 53 0.026736423 ubox
48 54 0.996914006 ubox
48 55 0.010926085 ubox
48 56 0.008627451 ubox
48 59 0.005751842 ubox
48 61 0.004383855 ubox
48 70 0.009139231 ubox
48 75 0.059942754 ubox
48 76 0.014639993 ubox
49 53 0.980811648 ubox
49 54 0.014886027 ubox
49 55 0.007046762 ubox
49 56 0.021789101 ubox
49 69 0.009140811 ubox
49 74 0.059936933 ubox
49 75 0.014519402 ubox
50 55 0.020410419 ubox
50 72 0.005091902 ubox
51 72 0.010289849 ubox
52 66 0.007407051 ubox
52 72 0.007125503 ubox
53 65 0.007192657 ubox
53 73 0.003858221 ubox
54 65 0.007939732 ubox
55 64 0.008189996 ubox
55 68 0.057635626 ubox
56 65 0.008398632 ubox
56 67 0.059213170 ubox
57 66 0.054944685 ubox
57 72 0.003863948 ubox
58 66 0.272854606 ubox
58 72 0.005409991 ubox
59 65 0.312169914 ubox
59 67 0.295478321 ubox
59 73 0.017268714 ubox
60 66 0.305779822 ubox
60 72 0.015801348 ubox
61 65 0.307993668 ubox
61 67 0.040744258 ubox
61 73 0.023966239 ubox
61 79 0.007841231 ubox
62 66 0.034221969 ubox
62 72 0.022377363 ubox
62 77 0.006029539 ubox
63 72 0.006402878 ubox
63 76 0.007336222 ubox
63 77 0.020110840 ubox
64 72 0.007405069 ubox
64 76 0.024764970 ubox
65 69 0.010059460 ubox
65 70 0.019339637 ubox
65 72 0.009522744 ubox
65 74 0.047741410 ubox
65 75 0.026140941 ubox
66 71 0.009796399 ubox
66 73 0.047176057 ubox
66 79 0.009409072 ubox
67 72 0.019416680 ubox
67 74 0.025921080 ubox
67 75 0.013259678 ubox
67 78 0.016742288 ubox
68 72 0.010041808 ubox
68 77 0.016515138 ubox
69 73 0.017430576 ubox
70 79 0.007254516 ubox
71 76 0.004594515 ubox
71 77 0.007768341 ubox
72 79 0.011702559 ubox
73 78 0.018103437 ubox
74 79 0.009524028 ubox
75 79 0.005304570 ubox
5 77 0.9500000 lbox
6 76 0.9500000 lbox
7 75 0.9500000 lbox
9 73 0.9500000 lbox
10 72 0.9500000 lbox
13 69 0.9500000 lbox
14 68 0.9500000 lbox
15 67 0.9500000 lbox
16 66 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
showpage
end
%%EOF
