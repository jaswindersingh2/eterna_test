%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (287)
} def

/sequence { (\
GGAAAAAAGAUCAAGAUGGAAACAUCAGUCAGGUCAAAGACAGGAAACAGUCAGACAAGACAAGAUCAGUCGAUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.007259597 ubox
1 12 0.119234212 ubox
1 61 0.004703301 ubox
1 71 0.008396638 ubox
1 75 0.015715077 ubox
1 76 0.030647368 ubox
1 77 0.005263583 ubox
1 78 0.162172340 ubox
2 11 0.105665756 ubox
2 12 0.183861841 ubox
2 26 0.004243187 ubox
2 35 0.003893084 ubox
2 70 0.007949588 ubox
2 71 0.029125209 ubox
2 74 0.014372686 ubox
2 75 0.035347383 ubox
2 76 0.003369679 ubox
2 77 0.113249618 ubox
2 78 0.230663726 ubox
3 11 0.177451674 ubox
3 25 0.004007672 ubox
3 34 0.003864137 ubox
3 70 0.028906020 ubox
3 74 0.034541999 ubox
3 76 0.077341415 ubox
3 77 0.206572177 ubox
4 11 0.022044791 ubox
4 70 0.004426959 ubox
4 74 0.003545671 ubox
4 76 0.113713324 ubox
4 77 0.015262242 ubox
5 11 0.014200960 ubox
5 70 0.003949785 ubox
5 74 0.006105910 ubox
5 76 0.010477978 ubox
5 77 0.013439431 ubox
6 11 0.015243653 ubox
6 70 0.016467838 ubox
6 74 0.010220410 ubox
6 76 0.008337893 ubox
6 77 0.026968259 ubox
7 11 0.009318425 ubox
7 70 0.005888344 ubox
7 76 0.021762171 ubox
7 77 0.391159360 ubox
8 70 0.004158782 ubox
8 76 0.446176110 ubox
8 77 0.011535872 ubox
9 23 0.003406036 ubox
9 26 0.012486446 ubox
9 30 0.050404021 ubox
9 35 0.017811117 ubox
9 67 0.109017166 ubox
9 71 0.023784122 ubox
9 75 0.456197728 ubox
9 76 0.004444186 ubox
9 77 0.008978867 ubox
9 78 0.151168878 ubox
10 25 0.012241742 ubox
10 29 0.050469471 ubox
10 34 0.017829592 ubox
10 66 0.109167353 ubox
10 70 0.023545551 ubox
10 74 0.456079388 ubox
10 76 0.006206246 ubox
10 77 0.125100059 ubox
11 19 0.006200468 ubox
11 20 0.012372752 ubox
11 24 0.009757916 ubox
11 27 0.015086336 ubox
11 28 0.049328569 ubox
11 33 0.017773373 ubox
11 60 0.003495327 ubox
11 65 0.109234588 ubox
11 69 0.021775090 ubox
11 73 0.455965070 ubox
11 79 0.041487037 ubox
12 18 0.009416555 ubox
12 19 0.013286366 ubox
12 28 0.009288775 ubox
12 32 0.017661776 ubox
12 59 0.003693976 ubox
12 64 0.109157887 ubox
12 69 0.006152375 ubox
12 72 0.455400148 ubox
12 79 0.064867663 ubox
13 17 0.007694523 ubox
13 29 0.003263366 ubox
13 66 0.003877015 ubox
13 70 0.035913960 ubox
13 76 0.007788835 ubox
13 77 0.250812046 ubox
14 66 0.004424091 ubox
14 70 0.054555732 ubox
14 76 0.291045693 ubox
14 77 0.009262283 ubox
15 23 0.003479270 ubox
15 26 0.949576511 ubox
15 30 0.012811176 ubox
15 67 0.007623560 ubox
15 70 0.003197729 ubox
15 71 0.073291762 ubox
15 75 0.295103497 ubox
15 78 0.006134273 ubox
16 25 0.950529849 ubox
16 29 0.012795988 ubox
16 66 0.007357169 ubox
16 70 0.073630388 ubox
16 74 0.295050385 ubox
16 77 0.003740605 ubox
17 24 0.950511695 ubox
17 27 0.010694455 ubox
17 28 0.011595490 ubox
17 65 0.006811181 ubox
17 68 0.027586658 ubox
17 69 0.067627153 ubox
17 72 0.005653411 ubox
17 73 0.293250648 ubox
18 23 0.950337539 ubox
18 26 0.011949435 ubox
18 67 0.029175595 ubox
18 71 0.012250771 ubox
18 78 0.003294832 ubox
19 23 0.007415629 ubox
19 25 0.008738700 ubox
19 26 0.018668633 ubox
19 66 0.020853127 ubox
19 67 0.063633629 ubox
19 70 0.011837556 ubox
19 71 0.295343905 ubox
19 78 0.003805234 ubox
20 25 0.017208717 ubox
20 66 0.058616723 ubox
20 70 0.293578708 ubox
20 77 0.003345906 ubox
21 66 0.006125570 ubox
21 70 0.005714012 ubox
22 66 0.004798728 ubox
22 70 0.011066058 ubox
23 64 0.016854440 ubox
23 69 0.017068184 ubox
24 66 0.278977739 ubox
25 62 0.007585095 ubox
25 63 0.012284939 ubox
25 64 0.011571545 ubox
25 65 0.297257428 ubox
26 64 0.297395351 ubox
27 66 0.004489976 ubox
28 35 0.006508573 ubox
28 41 0.033222049 ubox
28 48 0.010876421 ubox
28 56 0.008762511 ubox
28 61 0.991629887 ubox
28 66 0.015344076 ubox
28 67 0.004146843 ubox
29 40 0.033266624 ubox
29 44 0.004794038 ubox
29 45 0.042123365 ubox
29 47 0.007311282 ubox
29 55 0.008754654 ubox
29 60 0.993140326 ubox
29 65 0.016476917 ubox
30 39 0.033273732 ubox
30 43 0.006369044 ubox
30 44 0.045521223 ubox
30 54 0.008724525 ubox
30 59 0.992925024 ubox
30 64 0.016599633 ubox
31 76 0.011717661 ubox
32 41 0.003589308 ubox
32 52 0.003386314 ubox
32 56 0.009876481 ubox
32 75 0.012660826 ubox
33 41 0.048465870 ubox
33 56 0.997150564 ubox
33 61 0.019399212 ubox
33 74 0.012671540 ubox
34 40 0.048455284 ubox
34 45 0.003561432 ubox
34 55 0.997280865 ubox
34 60 0.019410193 ubox
34 73 0.012687619 ubox
35 39 0.048049990 ubox
35 44 0.003754686 ubox
35 54 0.996662980 ubox
35 59 0.019366829 ubox
35 72 0.012674926 ubox
38 51 0.011409410 ubox
39 48 0.005480297 ubox
39 51 0.004030902 ubox
39 52 0.996592348 ubox
39 71 0.019020286 ubox
40 51 0.997180600 ubox
40 70 0.019043646 ubox
41 50 0.995316086 ubox
41 69 0.019025420 ubox
43 48 0.703756303 ubox
43 52 0.006046552 ubox
43 67 0.006876848 ubox
44 48 0.092342530 ubox
44 51 0.004928756 ubox
44 52 0.007770488 ubox
44 66 0.006275424 ubox
44 67 0.019705315 ubox
45 51 0.007466393 ubox
45 66 0.019290246 ubox
48 64 0.004914934 ubox
50 56 0.006735076 ubox
50 61 0.057820406 ubox
51 55 0.006076328 ubox
51 60 0.057914229 ubox
51 65 0.003183070 ubox
52 59 0.057877961 ubox
52 64 0.003197319 ubox
54 71 0.016419383 ubox
55 70 0.016438786 ubox
56 69 0.016414359 ubox
59 67 0.011939821 ubox
59 71 0.073292826 ubox
59 78 0.021359228 ubox
60 66 0.011298216 ubox
60 70 0.073460660 ubox
60 77 0.019194963 ubox
61 69 0.073487155 ubox
61 79 0.020281257 ubox
62 66 0.007360897 ubox
62 70 0.008293405 ubox
62 76 0.017270360 ubox
62 77 0.700865102 ubox
63 70 0.028004607 ubox
63 76 0.810067975 ubox
63 77 0.016916406 ubox
64 70 0.011472364 ubox
64 71 0.221396917 ubox
64 75 0.831507594 ubox
64 78 0.005556785 ubox
65 70 0.196505934 ubox
65 74 0.831439170 ubox
65 77 0.005343884 ubox
66 73 0.831300585 ubox
67 72 0.830112160 ubox
68 74 0.003211969 ubox
68 76 0.018116595 ubox
69 75 0.019609439 ubox
69 78 0.010711465 ubox
71 79 0.041911838 ubox
72 78 0.046312360 ubox
73 77 0.040302146 ubox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
62 77 0.9500000 lbox
63 76 0.9500000 lbox
64 75 0.9500000 lbox
65 74 0.9500000 lbox
66 73 0.9500000 lbox
67 72 0.9500000 lbox
showpage
end
%%EOF
