%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (548)
} def

/sequence { (\
GGAAACUAUUCGUAUACAAGAUAUAUGAUAAAAAUGAUAUAUGUGAAAAAACAAGGUAUACAGGGUAGAUAUAUGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.026145161 ubox
1 7 0.004291795 ubox
1 11 0.016631144 ubox
1 17 0.004707809 ubox
1 70 0.011634396 ubox
1 72 0.064944737 ubox
1 74 0.054135681 ubox
1 76 0.018855541 ubox
1 77 0.009938161 ubox
1 78 0.241582330 ubox
2 6 0.005432237 ubox
2 10 0.016449392 ubox
2 11 0.028645748 ubox
2 70 0.051958281 ubox
2 72 0.082622086 ubox
2 74 0.021655654 ubox
2 76 0.014752449 ubox
2 77 0.241097481 ubox
2 78 0.208612298 ubox
3 9 0.015672270 ubox
3 10 0.028310780 ubox
3 70 0.053398993 ubox
3 72 0.059743280 ubox
3 74 0.027880818 ubox
3 76 0.236891288 ubox
3 77 0.207058878 ubox
4 9 0.023580985 ubox
4 70 0.237771106 ubox
4 72 0.070294696 ubox
4 74 0.031576714 ubox
4 76 0.187343522 ubox
4 77 0.031421365 ubox
5 13 0.007245225 ubox
5 66 0.025542818 ubox
5 70 0.185652171 ubox
5 72 0.056560213 ubox
5 74 0.101237708 ubox
5 76 0.039858898 ubox
5 77 0.006535669 ubox
6 12 0.007477861 ubox
6 63 0.004696288 ubox
6 64 0.003650740 ubox
6 65 0.026458536 ubox
6 68 0.989728358 ubox
6 75 0.034720262 ubox
7 16 0.004109420 ubox
7 30 0.009787647 ubox
7 31 0.003292094 ubox
7 62 0.004645426 ubox
7 63 0.003430237 ubox
7 64 0.025600267 ubox
7 67 0.997009724 ubox
7 68 0.004419646 ubox
7 71 0.008744494 ubox
7 73 0.010728552 ubox
8 15 0.004377620 ubox
8 29 0.010046428 ubox
8 66 0.997612995 ubox
8 70 0.008706955 ubox
8 72 0.010686701 ubox
9 14 0.004278968 ubox
9 28 0.007158533 ubox
9 62 0.004532064 ubox
9 63 0.010266508 ubox
9 64 0.016448878 ubox
9 65 0.996514983 ubox
9 69 0.008260061 ubox
9 71 0.009814579 ubox
10 28 0.020853745 ubox
10 62 0.015247040 ubox
10 63 0.022446148 ubox
10 64 0.993842929 ubox
10 65 0.011120382 ubox
10 68 0.006747480 ubox
10 69 0.009455153 ubox
11 27 0.023369741 ubox
11 63 0.993567551 ubox
11 64 0.014921753 ubox
11 68 0.009714288 ubox
12 26 0.023526518 ubox
12 52 0.003682348 ubox
12 59 0.004998092 ubox
12 61 0.992481879 ubox
13 25 0.023551080 ubox
13 51 0.003573469 ubox
13 58 0.005115587 ubox
13 60 0.998369198 ubox
14 24 0.023540328 ubox
14 57 0.005234454 ubox
14 59 0.998583744 ubox
15 23 0.023470875 ubox
15 45 0.006105709 ubox
15 56 0.005186167 ubox
15 58 0.998561868 ubox
16 22 0.022356191 ubox
16 44 0.008829137 ubox
16 57 0.998348750 ubox
17 43 0.009974761 ubox
17 45 0.045173294 ubox
17 55 0.045476693 ubox
17 56 0.994058812 ubox
17 79 0.004841041 ubox
18 22 0.003858642 ubox
18 42 0.011330163 ubox
18 44 0.054787795 ubox
18 77 0.012034858 ubox
19 24 0.004846040 ubox
19 26 0.005350598 ubox
19 40 0.003537738 ubox
19 42 0.013229998 ubox
19 44 0.306153378 ubox
19 76 0.013347789 ubox
20 40 0.003687288 ubox
20 42 0.040171029 ubox
20 44 0.081980613 ubox
20 52 0.075298641 ubox
20 77 0.023715298 ubox
20 78 0.010166782 ubox
21 29 0.005723058 ubox
21 35 0.003703865 ubox
21 38 0.008937283 ubox
21 40 0.039340536 ubox
21 42 0.891443312 ubox
21 44 0.169065807 ubox
21 74 0.014376131 ubox
21 76 0.026114831 ubox
21 77 0.007374574 ubox
22 28 0.005775717 ubox
22 30 0.008053734 ubox
22 34 0.003678957 ubox
22 36 0.006219956 ubox
22 37 0.009055855 ubox
22 39 0.040619865 ubox
22 41 0.967792037 ubox
22 43 0.170353396 ubox
22 45 0.022091707 ubox
22 49 0.003208671 ubox
22 50 0.006196054 ubox
22 51 0.007469865 ubox
22 53 0.003706699 ubox
22 73 0.014647062 ubox
22 75 0.027175026 ubox
23 29 0.008440127 ubox
23 35 0.007337420 ubox
23 38 0.040533769 ubox
23 40 0.979551334 ubox
23 42 0.171171891 ubox
23 44 0.024272183 ubox
23 72 0.014664059 ubox
23 74 0.027273202 ubox
24 28 0.007533843 ubox
24 30 0.003446083 ubox
24 34 0.007237553 ubox
24 36 0.027628224 ubox
24 37 0.032315410 ubox
24 39 0.981075601 ubox
24 41 0.171489668 ubox
24 43 0.024440079 ubox
24 45 0.004758812 ubox
24 48 0.005065019 ubox
24 49 0.003294159 ubox
24 71 0.014663786 ubox
24 73 0.027288159 ubox
25 29 0.003241349 ubox
25 35 0.037435806 ubox
25 38 0.981285181 ubox
25 40 0.171169546 ubox
25 42 0.024526271 ubox
25 44 0.005165514 ubox
25 70 0.014625975 ubox
25 72 0.027270367 ubox
26 31 0.005544751 ubox
26 32 0.007159232 ubox
26 33 0.010615295 ubox
26 34 0.038595835 ubox
26 36 0.008659459 ubox
26 37 0.976585632 ubox
26 39 0.169546848 ubox
26 41 0.024111477 ubox
26 43 0.005086314 ubox
26 46 0.016596697 ubox
26 47 0.003964300 ubox
26 69 0.014208877 ubox
26 71 0.027005047 ubox
27 35 0.011359048 ubox
27 38 0.159017170 ubox
27 40 0.019836587 ubox
27 70 0.025030753 ubox
28 35 0.951433432 ubox
28 38 0.035338983 ubox
28 40 0.017117285 ubox
28 42 0.008334435 ubox
28 44 0.023671897 ubox
28 66 0.004185435 ubox
28 70 0.004825795 ubox
29 33 0.023222244 ubox
29 34 0.903109469 ubox
29 36 0.133183151 ubox
29 37 0.045437338 ubox
29 39 0.021070228 ubox
29 41 0.008782860 ubox
29 43 0.023692567 ubox
29 65 0.004226247 ubox
29 67 0.018720521 ubox
29 68 0.006389508 ubox
29 69 0.006435099 ubox
30 35 0.119728821 ubox
30 38 0.020629171 ubox
30 40 0.008506634 ubox
30 42 0.022251634 ubox
30 66 0.018702720 ubox
31 35 0.017408594 ubox
31 38 0.005306995 ubox
31 40 0.005454279 ubox
31 42 0.003690110 ubox
31 66 0.006942510 ubox
32 38 0.004495087 ubox
32 40 0.007434713 ubox
33 38 0.003515774 ubox
33 40 0.004829143 ubox
34 40 0.005455674 ubox
34 42 0.007209933 ubox
35 39 0.005026677 ubox
35 41 0.007782304 ubox
35 62 0.030808351 ubox
35 63 0.003275197 ubox
35 79 0.006233309 ubox
36 40 0.006577817 ubox
36 61 0.031376801 ubox
36 77 0.013532874 ubox
36 78 0.010115095 ubox
37 59 0.028472792 ubox
37 76 0.016037523 ubox
37 77 0.007706772 ubox
38 58 0.028746421 ubox
38 60 0.017982680 ubox
38 75 0.017386582 ubox
39 57 0.028758603 ubox
39 59 0.018155628 ubox
39 74 0.017498672 ubox
39 76 0.003877619 ubox
40 54 0.005632179 ubox
40 55 0.012052552 ubox
40 56 0.028485929 ubox
40 58 0.018171945 ubox
40 73 0.017511000 ubox
40 75 0.004046419 ubox
41 57 0.018150355 ubox
41 72 0.017508309 ubox
41 74 0.004062543 ubox
42 47 0.009295480 ubox
42 48 0.008568608 ubox
42 49 0.010944759 ubox
42 50 0.006792875 ubox
42 51 0.008779552 ubox
42 53 0.357956221 ubox
42 54 0.017663689 ubox
42 55 0.009483652 ubox
42 56 0.017123888 ubox
42 71 0.017478289 ubox
42 73 0.004063994 ubox
43 52 0.735983447 ubox
43 70 0.017441206 ubox
43 72 0.004060613 ubox
44 48 0.008192342 ubox
44 49 0.035607224 ubox
44 50 0.041491087 ubox
44 51 0.731753642 ubox
44 53 0.162137127 ubox
44 54 0.023907047 ubox
44 55 0.010396751 ubox
44 69 0.017324744 ubox
44 71 0.004037302 ubox
45 52 0.218393947 ubox
45 70 0.003730737 ubox
47 66 0.003870121 ubox
50 77 0.005423668 ubox
51 57 0.005114590 ubox
51 66 0.004279907 ubox
51 76 0.006155333 ubox
52 56 0.006020118 ubox
52 63 0.005487658 ubox
52 64 0.008892533 ubox
52 65 0.004447710 ubox
52 75 0.006273501 ubox
53 74 0.006088820 ubox
53 77 0.005434964 ubox
54 76 0.006372328 ubox
55 61 0.010539421 ubox
56 61 0.003831323 ubox
56 72 0.005766270 ubox
56 74 0.006951601 ubox
57 71 0.005828247 ubox
57 73 0.007100113 ubox
58 70 0.005804865 ubox
58 72 0.007107572 ubox
59 67 0.003596614 ubox
59 69 0.005540474 ubox
59 71 0.007086460 ubox
60 66 0.004014088 ubox
60 70 0.006954623 ubox
61 65 0.004016685 ubox
61 68 0.007794986 ubox
62 77 0.018270703 ubox
63 76 0.022086198 ubox
63 78 0.011807175 ubox
64 77 0.011654706 ubox
64 78 0.004251557 ubox
65 74 0.024422669 ubox
65 76 0.010435493 ubox
65 77 0.003780321 ubox
66 73 0.024674099 ubox
66 75 0.010912428 ubox
67 72 0.024296589 ubox
67 74 0.011305815 ubox
68 77 0.016959489 ubox
68 78 0.050469376 ubox
69 74 0.020053134 ubox
69 76 0.050825384 ubox
69 77 0.054261739 ubox
70 75 0.050760967 ubox
70 79 0.011356101 ubox
71 76 0.011403631 ubox
71 77 0.024343544 ubox
72 79 0.012643979 ubox
73 77 0.007903264 ubox
74 79 0.010842869 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 61 0.9500000 lbox
13 60 0.9500000 lbox
14 59 0.9500000 lbox
15 58 0.9500000 lbox
16 57 0.9500000 lbox
17 56 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
showpage
end
%%EOF
