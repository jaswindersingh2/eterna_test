%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (436)
} def

/sequence { (\
GGAAAAGCAUAGGGCAGGCGAAAGCCGCCGAAAGGCGCCAAUACUCAGCAUCCGCUGAGCUAUGCAGGAUACGAGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.004592511 ubox
1 39 0.009185681 ubox
1 70 0.020681327 ubox
1 72 0.099383327 ubox
1 78 0.066487820 ubox
2 38 0.009127610 ubox
2 70 0.023800467 ubox
2 72 0.030254280 ubox
2 77 0.065546501 ubox
2 78 0.097991349 ubox
3 70 0.024104178 ubox
3 76 0.063616437 ubox
3 77 0.097555208 ubox
4 70 0.014908931 ubox
4 76 0.092791084 ubox
4 77 0.004630463 ubox
5 70 0.007442106 ubox
5 76 0.005328845 ubox
5 77 0.005237226 ubox
6 70 0.010532191 ubox
6 76 0.006108836 ubox
6 77 0.003176740 ubox
7 15 0.006984106 ubox
7 36 0.023626594 ubox
7 65 0.998425168 ubox
7 72 0.006386386 ubox
8 14 0.006978489 ubox
8 34 0.003441994 ubox
8 35 0.023632394 ubox
8 64 0.999504801 ubox
9 63 0.999083904 ubox
9 70 0.003779576 ubox
10 32 0.008644869 ubox
10 62 0.998941427 ubox
10 69 0.003891225 ubox
11 42 0.003692991 ubox
11 61 0.998730808 ubox
12 39 0.008937342 ubox
12 60 0.995127759 ubox
12 61 0.007607836 ubox
12 78 0.006317712 ubox
13 19 0.005958324 ubox
13 26 0.116709816 ubox
13 29 0.153697110 ubox
13 38 0.008610272 ubox
13 39 0.962855000 ubox
13 60 0.011055297 ubox
13 61 0.006894542 ubox
13 77 0.006314749 ubox
14 25 0.118199631 ubox
14 28 0.153925908 ubox
14 36 0.004096670 ubox
14 38 0.964045886 ubox
14 39 0.003785465 ubox
14 60 0.008761860 ubox
14 65 0.005732042 ubox
14 76 0.006344674 ubox
15 24 0.118184821 ubox
15 27 0.153445691 ubox
15 35 0.004064709 ubox
15 37 0.963022188 ubox
15 57 0.003478888 ubox
15 59 0.008583351 ubox
15 64 0.005735226 ubox
15 75 0.006348208 ubox
16 56 0.003219637 ubox
16 63 0.004608279 ubox
17 25 0.003908346 ubox
17 26 0.990627534 ubox
17 29 0.019450591 ubox
17 39 0.020729624 ubox
18 25 0.992375334 ubox
18 26 0.004045399 ubox
18 28 0.019514991 ubox
18 38 0.020729970 ubox
18 55 0.003264106 ubox
19 24 0.992005579 ubox
19 27 0.019523041 ubox
19 37 0.020272353 ubox
19 54 0.003839820 ubox
20 26 0.019661302 ubox
20 36 0.008482472 ubox
20 53 0.003794894 ubox
24 36 0.016598642 ubox
24 38 0.009474221 ubox
24 39 0.009207307 ubox
24 49 0.003952718 ubox
25 35 0.017976179 ubox
25 37 0.006738079 ubox
25 48 0.003954557 ubox
26 34 0.017975538 ubox
26 37 0.040615954 ubox
27 36 0.986608243 ubox
27 38 0.008549345 ubox
28 35 0.987643583 ubox
28 37 0.008409611 ubox
29 34 0.987270607 ubox
29 35 0.008137237 ubox
29 37 0.005028083 ubox
30 36 0.028339710 ubox
30 38 0.015394620 ubox
30 39 0.037587878 ubox
30 78 0.003217364 ubox
31 42 0.004552169 ubox
31 77 0.003176590 ubox
32 42 0.004134838 ubox
33 42 0.013187556 ubox
34 38 0.008139818 ubox
34 39 0.034865462 ubox
34 42 0.007428902 ubox
34 44 0.004240390 ubox
35 39 0.011478147 ubox
35 42 0.006312025 ubox
37 42 0.007753693 ubox
37 44 0.006059700 ubox
37 65 0.020317108 ubox
38 64 0.019727246 ubox
38 68 0.010101875 ubox
39 64 0.006005253 ubox
39 67 0.010106183 ubox
40 63 0.006494201 ubox
41 63 0.023036527 ubox
42 59 0.003813840 ubox
42 62 0.025238475 ubox
43 61 0.025499840 ubox
43 76 0.007981855 ubox
44 59 0.993040094 ubox
44 75 0.008721392 ubox
45 58 0.999148662 ubox
45 74 0.008728110 ubox
46 57 0.999931810 ubox
46 73 0.008695238 ubox
47 56 0.999706732 ubox
48 55 0.999926892 ubox
48 72 0.007557667 ubox
49 54 0.998487043 ubox
50 70 0.008340281 ubox
51 69 0.008749995 ubox
52 68 0.008760144 ubox
53 67 0.008754317 ubox
54 65 0.008696502 ubox
55 64 0.008724049 ubox
65 75 0.003872566 ubox
65 79 0.004632572 ubox
66 70 0.006157458 ubox
66 76 0.007779929 ubox
66 77 0.025034821 ubox
67 72 0.137325073 ubox
67 76 0.029753916 ubox
67 77 0.010786577 ubox
67 78 0.772424863 ubox
68 72 0.025055745 ubox
68 76 0.010794123 ubox
68 77 0.776150770 ubox
68 78 0.263253834 ubox
69 76 0.772436785 ubox
69 77 0.259784038 ubox
70 74 0.017113344 ubox
70 75 0.745879537 ubox
70 79 0.006274902 ubox
71 76 0.015793763 ubox
71 77 0.005980314 ubox
72 79 0.189096183 ubox
73 77 0.004849499 ubox
73 78 0.196864674 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
67 78 0.9500000 lbox
68 77 0.9500000 lbox
69 76 0.9500000 lbox
70 75 0.9500000 lbox
showpage
end
%%EOF
