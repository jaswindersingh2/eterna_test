%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (993)
} def

/sequence { (\
GGAAAGAUACAGUUGGAAACGGCAGAAAGAUAGGAAAAAACUGUUUUUCAGGUGGAAACAUCAGUAUCCGAUGCAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.004734069 ubox
1 10 0.044275495 ubox
1 68 0.004645438 ubox
1 69 0.183239168 ubox
1 72 0.030258298 ubox
1 74 0.214924762 ubox
1 76 0.007179577 ubox
1 77 0.003419757 ubox
1 78 0.081663719 ubox
2 10 0.007827548 ubox
2 67 0.003174957 ubox
2 68 0.177923950 ubox
2 69 0.057971977 ubox
2 72 0.028607621 ubox
2 74 0.068418654 ubox
2 76 0.004286130 ubox
2 77 0.078760312 ubox
2 78 0.154248870 ubox
3 8 0.004849184 ubox
3 67 0.161133876 ubox
3 72 0.161502016 ubox
3 76 0.074184793 ubox
3 77 0.151843208 ubox
4 8 0.003844689 ubox
4 65 0.009871677 ubox
4 67 0.009427871 ubox
4 72 0.041628375 ubox
4 76 0.137218326 ubox
4 77 0.024487663 ubox
5 65 0.022529070 ubox
5 72 0.029581325 ubox
5 76 0.030651529 ubox
5 77 0.012375749 ubox
6 10 0.012280792 ubox
6 62 0.008056407 ubox
6 65 0.005532766 ubox
6 67 0.006366181 ubox
6 68 0.855010306 ubox
6 69 0.063407971 ubox
6 72 0.004001883 ubox
6 74 0.070801656 ubox
6 76 0.013405512 ubox
6 77 0.121622986 ubox
6 78 0.410747465 ubox
7 61 0.007902890 ubox
7 65 0.019992485 ubox
7 67 0.861789709 ubox
7 72 0.016576448 ubox
7 76 0.136888895 ubox
7 77 0.406230211 ubox
8 54 0.003763764 ubox
8 60 0.007363759 ubox
8 63 0.009007630 ubox
8 64 0.019719309 ubox
8 66 0.870365951 ubox
8 71 0.015227523 ubox
8 73 0.034615485 ubox
8 75 0.138465439 ubox
9 53 0.005449530 ubox
9 65 0.870570928 ubox
9 72 0.021433152 ubox
9 76 0.023620336 ubox
9 77 0.005940482 ubox
10 15 0.003481228 ubox
10 22 0.003384070 ubox
10 52 0.005669348 ubox
10 54 0.004421281 ubox
10 64 0.869236184 ubox
10 70 0.011327256 ubox
10 73 0.143204866 ubox
10 79 0.004238830 ubox
11 53 0.004349920 ubox
11 61 0.007946488 ubox
11 72 0.118756053 ubox
11 76 0.005197079 ubox
11 77 0.004145269 ubox
12 20 0.032715813 ubox
12 23 0.799102288 ubox
12 59 0.019746917 ubox
12 61 0.021531911 ubox
12 62 0.295666846 ubox
12 72 0.446061675 ubox
12 74 0.020839191 ubox
12 76 0.003250683 ubox
13 19 0.032290567 ubox
13 22 0.799336241 ubox
13 51 0.003783089 ubox
13 58 0.019829256 ubox
13 60 0.018139171 ubox
13 63 0.004667694 ubox
13 64 0.003815125 ubox
13 70 0.003747581 ubox
13 71 0.464592056 ubox
13 73 0.018444208 ubox
14 18 0.026910104 ubox
14 19 0.005758368 ubox
14 21 0.797262771 ubox
14 22 0.006140149 ubox
14 24 0.031113014 ubox
14 50 0.004390316 ubox
14 57 0.019513678 ubox
14 60 0.353829787 ubox
14 63 0.018891740 ubox
14 70 0.467075696 ubox
14 71 0.003268242 ubox
14 75 0.005015255 ubox
15 20 0.798588910 ubox
15 23 0.033596392 ubox
15 49 0.004440422 ubox
15 59 0.359771820 ubox
15 61 0.003688256 ubox
15 62 0.019100967 ubox
15 69 0.468290119 ubox
15 74 0.005467235 ubox
15 78 0.004357308 ubox
16 20 0.010414758 ubox
16 23 0.009325271 ubox
16 48 0.004298257 ubox
16 59 0.023288167 ubox
16 61 0.017152127 ubox
16 68 0.468284869 ubox
16 77 0.004218074 ubox
16 78 0.011345012 ubox
17 47 0.004155884 ubox
17 67 0.459822648 ubox
17 72 0.003885283 ubox
17 76 0.003825787 ubox
17 77 0.011263875 ubox
18 46 0.003859054 ubox
18 65 0.016306824 ubox
18 67 0.012673727 ubox
18 76 0.010200041 ubox
19 53 0.015737769 ubox
19 65 0.433680534 ubox
19 67 0.003564529 ubox
20 25 0.003187042 ubox
20 52 0.015867397 ubox
20 54 0.305140525 ubox
20 55 0.200051987 ubox
20 64 0.438804809 ubox
20 70 0.007374452 ubox
21 49 0.003690454 ubox
21 53 0.303373683 ubox
21 62 0.025131315 ubox
21 65 0.009339399 ubox
21 69 0.007461736 ubox
22 44 0.004182420 ubox
22 49 0.003430602 ubox
22 53 0.209990468 ubox
22 61 0.012788322 ubox
22 62 0.019667329 ubox
22 65 0.044864613 ubox
22 68 0.007370544 ubox
22 74 0.013614965 ubox
23 43 0.004254863 ubox
23 51 0.301681262 ubox
23 52 0.212171328 ubox
23 54 0.010396345 ubox
23 64 0.046321929 ubox
23 73 0.013642601 ubox
24 42 0.004251171 ubox
24 53 0.010327191 ubox
24 61 0.003321814 ubox
24 72 0.012233695 ubox
25 41 0.004232487 ubox
25 48 0.006108103 ubox
25 49 0.998099608 ubox
26 47 0.005865317 ubox
26 48 0.999165694 ubox
27 46 0.004949584 ubox
27 47 0.998397885 ubox
27 48 0.003611008 ubox
28 45 0.003514921 ubox
28 46 0.997601912 ubox
28 47 0.004098983 ubox
29 45 0.998711561 ubox
29 46 0.004207922 ubox
30 44 0.999623347 ubox
30 45 0.003932839 ubox
31 43 0.999406400 ubox
32 42 0.999339989 ubox
33 41 0.999204409 ubox
33 42 0.013040400 ubox
33 49 0.003635778 ubox
34 41 0.027478566 ubox
34 48 0.003637210 ubox
34 49 0.006119679 ubox
35 47 0.003633834 ubox
35 48 0.006129429 ubox
36 46 0.003619910 ubox
36 47 0.006122743 ubox
37 45 0.003579866 ubox
37 46 0.006114310 ubox
38 44 0.003273941 ubox
38 45 0.005940234 ubox
39 44 0.004951389 ubox
50 61 0.005674639 ubox
50 65 0.005010972 ubox
50 72 0.004694926 ubox
51 59 0.012259966 ubox
51 61 0.006058585 ubox
51 62 0.917825793 ubox
51 65 0.006750610 ubox
51 72 0.005808438 ubox
51 74 0.008827686 ubox
51 77 0.005216369 ubox
51 78 0.003448758 ubox
52 59 0.043024034 ubox
52 61 0.922623605 ubox
52 62 0.023298664 ubox
52 72 0.008975327 ubox
52 74 0.009809722 ubox
52 76 0.006622832 ubox
53 58 0.042745861 ubox
53 60 0.923739181 ubox
53 63 0.017753013 ubox
53 70 0.037792284 ubox
53 71 0.009350233 ubox
53 73 0.009033247 ubox
53 75 0.006889329 ubox
53 79 0.015568117 ubox
54 59 0.923599634 ubox
54 62 0.019920529 ubox
54 69 0.052929931 ubox
54 74 0.006839687 ubox
54 78 0.026934637 ubox
55 59 0.007792280 ubox
55 61 0.014569694 ubox
55 62 0.028660834 ubox
55 68 0.053004942 ubox
55 77 0.026971387 ubox
55 78 0.018154335 ubox
56 61 0.026342971 ubox
56 67 0.052362453 ubox
56 76 0.026591359 ubox
56 77 0.018096129 ubox
57 76 0.016935332 ubox
58 65 0.058167320 ubox
59 64 0.059175819 ubox
59 73 0.036209852 ubox
60 72 0.036319139 ubox
61 71 0.036346860 ubox
62 70 0.036324035 ubox
64 68 0.010867363 ubox
64 69 0.010762435 ubox
64 74 0.053438909 ubox
65 73 0.053456808 ubox
66 72 0.052520448 ubox
67 71 0.046586917 ubox
69 73 0.009906853 ubox
69 79 0.664842439 ubox
70 74 0.020186169 ubox
70 76 0.004058544 ubox
70 77 0.018339413 ubox
70 78 0.718054933 ubox
71 76 0.022392179 ubox
71 77 0.710851266 ubox
72 79 0.019515983 ubox
73 77 0.004442043 ubox
73 78 0.030807032 ubox
74 79 0.019452957 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
69 79 0.9500000 lbox
70 78 0.9500000 lbox
71 77 0.9500000 lbox
showpage
end
%%EOF
