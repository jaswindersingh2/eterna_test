%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (879)
} def

/sequence { (\
GGAAAAGCAAUGUAGUGAAACCGAAAAAAGUAUGAAGGAAACUUGAUACUAGGACUAGAUUGCAAAAAGAACUUGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.003798347 ubox
1 22 0.030951720 ubox
1 72 0.034011007 ubox
1 73 0.015173301 ubox
1 76 0.004488215 ubox
1 78 0.118409721 ubox
2 21 0.030921562 ubox
2 72 0.017421231 ubox
2 74 0.005153781 ubox
2 76 0.004229026 ubox
2 77 0.117747174 ubox
2 78 0.139528316 ubox
3 73 0.005210634 ubox
3 74 0.007489232 ubox
3 76 0.114558737 ubox
3 77 0.139197836 ubox
4 73 0.007721482 ubox
4 74 0.016144517 ubox
4 76 0.131175535 ubox
4 77 0.005557039 ubox
5 73 0.015882044 ubox
5 74 0.083164768 ubox
5 76 0.006356736 ubox
5 77 0.006819499 ubox
6 73 0.088859914 ubox
6 74 0.043343182 ubox
6 76 0.008047289 ubox
6 77 0.007433284 ubox
7 16 0.030329911 ubox
7 63 0.997313945 ubox
7 72 0.042047909 ubox
7 73 0.004826700 ubox
7 76 0.008597210 ubox
8 15 0.030446148 ubox
8 17 0.005651524 ubox
8 62 0.999340287 ubox
8 75 0.008791568 ubox
9 16 0.005160621 ubox
9 61 0.998795171 ubox
9 74 0.008752241 ubox
10 60 0.998344452 ubox
10 73 0.008533497 ubox
11 59 0.992006030 ubox
11 64 0.012229727 ubox
12 63 0.012827664 ubox
13 57 0.996579280 ubox
13 62 0.012824890 ubox
14 56 0.999022930 ubox
14 61 0.012797027 ubox
15 21 0.005359645 ubox
15 22 0.003942596 ubox
15 55 0.999201814 ubox
15 60 0.012773620 ubox
16 20 0.005833019 ubox
16 23 0.050303016 ubox
16 24 0.012247329 ubox
16 25 0.017379626 ubox
16 26 0.008395984 ubox
16 27 0.007726920 ubox
16 28 0.007109759 ubox
16 51 0.008153962 ubox
16 52 0.004899250 ubox
16 53 0.043400269 ubox
16 54 0.988636722 ubox
16 59 0.012688549 ubox
17 21 0.036836864 ubox
17 22 0.192621093 ubox
17 50 0.008567742 ubox
17 55 0.006983475 ubox
18 50 0.012580282 ubox
19 50 0.018784696 ubox
19 56 0.003704798 ubox
20 31 0.003564027 ubox
20 50 0.040775494 ubox
21 30 0.004234294 ubox
21 52 0.028758610 ubox
21 53 0.650144788 ubox
22 30 0.004092271 ubox
22 52 0.649670589 ubox
22 53 0.089134281 ubox
23 49 0.006764323 ubox
23 50 0.031433748 ubox
23 55 0.003292972 ubox
24 50 0.109622429 ubox
25 47 0.004155889 ubox
25 50 0.086130519 ubox
26 50 0.048865757 ubox
27 50 0.022489207 ubox
28 44 0.020408996 ubox
28 50 0.055983578 ubox
29 43 0.020793719 ubox
29 50 0.912936112 ubox
30 42 0.020873937 ubox
30 49 0.999163844 ubox
30 50 0.003607361 ubox
31 41 0.020397481 ubox
31 48 0.999432761 ubox
32 47 0.999201545 ubox
33 39 0.012499429 ubox
33 40 0.007083887 ubox
33 45 0.004334479 ubox
33 46 0.994487170 ubox
34 44 0.006257102 ubox
35 43 0.004995759 ubox
35 44 0.989655997 ubox
36 43 0.998870271 ubox
36 44 0.009049369 ubox
37 42 0.998579506 ubox
37 43 0.010911903 ubox
38 42 0.012911607 ubox
52 78 0.031884254 ubox
53 77 0.032058249 ubox
54 76 0.032119851 ubox
55 75 0.031984779 ubox
57 73 0.028504155 ubox
57 74 0.004109761 ubox
58 72 0.030406382 ubox
58 73 0.003942396 ubox
60 68 0.006465018 ubox
60 69 0.006264058 ubox
60 70 0.016646714 ubox
60 71 0.022058141 ubox
61 67 0.006596895 ubox
61 68 0.007004008 ubox
61 69 0.016551778 ubox
61 70 0.022279759 ubox
62 76 0.005861833 ubox
63 69 0.010315220 ubox
63 75 0.015270545 ubox
64 73 0.016735449 ubox
64 74 0.032433494 ubox
64 76 0.010483218 ubox
64 77 0.024527865 ubox
65 73 0.032850764 ubox
65 74 0.061547165 ubox
65 76 0.024415367 ubox
65 77 0.021102017 ubox
66 73 0.059634860 ubox
66 74 0.048040043 ubox
66 76 0.020704835 ubox
66 77 0.031669919 ubox
67 73 0.047671234 ubox
67 74 0.058917793 ubox
67 76 0.033601097 ubox
67 77 0.047906834 ubox
68 73 0.054582845 ubox
68 74 0.031593018 ubox
68 76 0.052516416 ubox
68 77 0.029731826 ubox
69 73 0.023425566 ubox
69 74 0.017828127 ubox
69 76 0.029215124 ubox
69 77 0.035856456 ubox
69 78 0.543096020 ubox
70 74 0.035206879 ubox
70 76 0.037599692 ubox
70 77 0.534753606 ubox
71 76 0.421135325 ubox
71 77 0.014357316 ubox
72 79 0.047011316 ubox
73 79 0.006191480 ubox
74 79 0.008574265 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
