%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (297)
} def

/sequence { (\
GGAAAAAAGCUCAAGUACAAAAGUACAGUCAACAGAAAGAUGCGAAAGGAUCGCUGAAGACAAGAGCAGAGCAUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.018814333 ubox
1 11 0.009068206 ubox
1 12 0.025702994 ubox
1 30 0.003576435 ubox
1 33 0.003912116 ubox
1 72 0.033670820 ubox
1 74 0.008184621 ubox
1 75 0.084070685 ubox
1 76 0.172593404 ubox
1 77 0.009583243 ubox
1 78 0.252891110 ubox
2 10 0.012078753 ubox
2 11 0.024004215 ubox
2 12 0.027402723 ubox
2 30 0.005109369 ubox
2 72 0.039857212 ubox
2 74 0.077196390 ubox
2 75 0.199293141 ubox
2 76 0.007174853 ubox
2 77 0.248839741 ubox
2 78 0.558442262 ubox
3 11 0.026703881 ubox
3 29 0.004611339 ubox
3 74 0.194790228 ubox
3 76 0.239263721 ubox
3 77 0.555464939 ubox
4 11 0.003303069 ubox
4 74 0.022708122 ubox
4 76 0.517634522 ubox
4 77 0.070892613 ubox
5 74 0.122342466 ubox
5 76 0.085131923 ubox
5 77 0.035294217 ubox
6 74 0.150360916 ubox
6 76 0.039853181 ubox
6 77 0.031947047 ubox
7 74 0.195528740 ubox
7 76 0.036090036 ubox
7 77 0.020451835 ubox
8 55 0.006909185 ubox
8 74 0.107822253 ubox
8 76 0.022615969 ubox
8 77 0.006474833 ubox
9 24 0.003780181 ubox
9 29 0.043302170 ubox
9 30 0.012641878 ubox
9 33 0.004835304 ubox
9 54 0.007186447 ubox
9 67 0.627533261 ubox
9 72 0.766801747 ubox
9 75 0.011010313 ubox
9 78 0.003979322 ubox
10 23 0.003868321 ubox
10 28 0.046538954 ubox
10 53 0.007177551 ubox
10 66 0.628241098 ubox
10 69 0.004666986 ubox
10 71 0.767734502 ubox
10 79 0.003204259 ubox
11 22 0.003704403 ubox
11 27 0.045958796 ubox
11 57 0.003609015 ubox
11 65 0.628079789 ubox
11 68 0.004510935 ubox
11 70 0.767509011 ubox
12 28 0.005995529 ubox
12 56 0.004147378 ubox
12 64 0.627406779 ubox
12 66 0.006300626 ubox
12 69 0.766651944 ubox
12 79 0.003290356 ubox
13 29 0.004425328 ubox
13 55 0.003849978 ubox
14 24 0.003665749 ubox
14 29 0.003749805 ubox
15 26 0.997967263 ubox
15 61 0.004555975 ubox
15 67 0.014161364 ubox
16 22 0.003675757 ubox
16 25 0.999183351 ubox
16 60 0.004328821 ubox
16 65 0.003797978 ubox
16 66 0.013141551 ubox
17 24 0.999187915 ubox
18 23 0.997468247 ubox
18 64 0.004960778 ubox
23 67 0.007258107 ubox
24 65 0.004186232 ubox
24 66 0.007120993 ubox
26 56 0.005663152 ubox
26 64 0.006839192 ubox
27 41 0.003238492 ubox
27 55 0.006600574 ubox
28 33 0.023123124 ubox
28 41 0.063151543 ubox
28 51 0.004188236 ubox
28 54 0.006680968 ubox
28 61 0.979318560 ubox
28 67 0.011062944 ubox
29 34 0.003880646 ubox
29 35 0.003800652 ubox
29 36 0.083034219 ubox
29 37 0.004783405 ubox
29 38 0.004491325 ubox
29 40 0.067102516 ubox
29 50 0.004471883 ubox
29 53 0.006518163 ubox
29 57 0.009295837 ubox
29 60 0.980590205 ubox
29 65 0.005455031 ubox
29 66 0.009844625 ubox
30 35 0.088775703 ubox
30 39 0.067889767 ubox
30 44 0.003277335 ubox
30 49 0.004500160 ubox
30 56 0.009888085 ubox
30 59 0.979967726 ubox
30 64 0.006018662 ubox
31 41 0.003433357 ubox
31 55 0.009611927 ubox
33 39 0.009178703 ubox
33 42 0.008133756 ubox
33 53 0.003734697 ubox
33 56 0.978737294 ubox
33 79 0.010633481 ubox
34 41 0.009121931 ubox
34 55 0.979734746 ubox
35 54 0.972837133 ubox
35 55 0.015760594 ubox
35 61 0.007701892 ubox
35 78 0.062434290 ubox
36 55 0.023045822 ubox
36 77 0.051006978 ubox
37 55 0.006779981 ubox
37 76 0.035850462 ubox
37 77 0.056550991 ubox
38 51 0.033390324 ubox
38 55 0.003502227 ubox
38 76 0.070441875 ubox
39 51 0.003896820 ubox
39 52 0.987228949 ubox
39 75 0.079735076 ubox
40 51 0.989625973 ubox
40 55 0.009656994 ubox
40 74 0.079726120 ubox
41 46 0.004162881 ubox
41 47 0.014391821 ubox
41 48 0.020609141 ubox
41 49 0.007493069 ubox
41 50 0.984220190 ubox
41 68 0.009961259 ubox
41 73 0.079713360 ubox
42 54 0.098532323 ubox
42 67 0.012557477 ubox
42 72 0.079729639 ubox
43 48 0.969835657 ubox
43 49 0.100885911 ubox
43 53 0.102039615 ubox
43 66 0.012559352 ubox
43 71 0.079670806 ubox
43 79 0.003867102 ubox
44 52 0.104479129 ubox
44 67 0.005339310 ubox
44 78 0.004246485 ubox
45 51 0.100072481 ubox
45 77 0.003938393 ubox
46 51 0.005132656 ubox
47 55 0.006399239 ubox
48 54 0.006482233 ubox
48 61 0.004164555 ubox
48 67 0.016258610 ubox
48 76 0.003943133 ubox
49 61 0.012942771 ubox
49 67 0.028175411 ubox
49 75 0.004414410 ubox
50 74 0.004440480 ubox
51 60 0.018783502 ubox
51 65 0.041301340 ubox
51 68 0.012233758 ubox
51 69 0.003578774 ubox
51 70 0.048120807 ubox
51 73 0.004353876 ubox
52 59 0.019132412 ubox
52 64 0.042771411 ubox
52 66 0.006836812 ubox
52 69 0.048390911 ubox
53 61 0.006459477 ubox
53 67 0.157259174 ubox
53 72 0.004268047 ubox
54 59 0.006143112 ubox
54 64 0.018432832 ubox
54 66 0.157462340 ubox
54 69 0.006966219 ubox
54 71 0.004270452 ubox
55 60 0.009129238 ubox
55 62 0.044770114 ubox
55 63 0.019065144 ubox
55 64 0.009979833 ubox
55 65 0.155997424 ubox
55 68 0.015352914 ubox
55 70 0.004226060 ubox
55 79 0.006292253 ubox
56 61 0.048392248 ubox
56 67 0.016327276 ubox
56 78 0.012915164 ubox
57 77 0.012927872 ubox
58 76 0.012892850 ubox
59 67 0.015876042 ubox
59 75 0.012885706 ubox
59 78 0.003794681 ubox
60 74 0.012157293 ubox
60 77 0.003415285 ubox
61 66 0.019099089 ubox
62 77 0.077907958 ubox
63 76 0.089335544 ubox
64 72 0.004331222 ubox
64 74 0.003420146 ubox
64 75 0.091567295 ubox
64 77 0.005492210 ubox
64 78 0.009054064 ubox
65 74 0.091245854 ubox
65 76 0.006075742 ubox
65 77 0.008746634 ubox
66 72 0.080004781 ubox
66 75 0.006310037 ubox
66 76 0.005221806 ubox
66 78 0.006826088 ubox
67 71 0.079540823 ubox
68 74 0.014975299 ubox
68 76 0.185452357 ubox
68 77 0.019629261 ubox
69 74 0.005457619 ubox
69 75 0.200911242 ubox
69 76 0.018443316 ubox
69 77 0.107759669 ubox
69 78 0.281751768 ubox
70 74 0.174871778 ubox
70 76 0.118526345 ubox
70 77 0.274850180 ubox
71 75 0.120943638 ubox
71 76 0.200992226 ubox
71 77 0.006639357 ubox
71 78 0.026644825 ubox
72 79 0.022479029 ubox
73 77 0.007085388 ubox
74 79 0.006341865 ubox
75 79 0.008837542 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
