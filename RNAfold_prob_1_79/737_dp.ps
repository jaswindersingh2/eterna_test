%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (737)
} def

/sequence { (\
GGAAAGAUGACGCAAAGGGUGAUCAACAGGUAGCGAAAAGGUAGCUGAGAGGCAGCGAAAGGUGGCUCGGUGCACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.004533110 ubox
1 11 0.018033597 ubox
1 13 0.012888710 ubox
1 24 0.005809477 ubox
1 27 0.051477311 ubox
1 31 0.004940661 ubox
1 34 0.006282495 ubox
1 73 0.041511322 ubox
1 75 0.028739847 ubox
1 76 0.026465105 ubox
1 77 0.006860596 ubox
1 78 0.224048827 ubox
2 11 0.012523820 ubox
2 13 0.004554266 ubox
2 23 0.004106437 ubox
2 24 0.010430483 ubox
2 27 0.029318601 ubox
2 31 0.005995705 ubox
2 34 0.004233956 ubox
2 71 0.003752825 ubox
2 73 0.021879769 ubox
2 75 0.030324101 ubox
2 76 0.007837151 ubox
2 77 0.196556223 ubox
2 78 0.313881123 ubox
3 8 0.003601285 ubox
3 23 0.009422207 ubox
3 31 0.003674103 ubox
3 71 0.033061918 ubox
3 76 0.177303641 ubox
3 77 0.296582831 ubox
4 8 0.007192647 ubox
4 31 0.003295657 ubox
4 71 0.007371287 ubox
4 76 0.246715283 ubox
4 77 0.047553210 ubox
5 71 0.007647435 ubox
5 76 0.059544411 ubox
5 77 0.008493885 ubox
6 11 0.008322576 ubox
6 13 0.011835043 ubox
6 24 0.970027788 ubox
6 27 0.045814140 ubox
6 73 0.013121853 ubox
6 75 0.064397593 ubox
6 76 0.004537215 ubox
6 77 0.004254710 ubox
6 78 0.035632425 ubox
7 23 0.971043395 ubox
7 71 0.005196479 ubox
7 76 0.004435893 ubox
7 77 0.031283910 ubox
8 14 0.008720562 ubox
8 15 0.005281724 ubox
8 16 0.003282984 ubox
8 21 0.006416800 ubox
8 22 0.966062325 ubox
8 25 0.174110013 ubox
8 26 0.006904176 ubox
8 37 0.004156341 ubox
8 38 0.007560359 ubox
8 70 0.004517622 ubox
8 74 0.056517160 ubox
8 79 0.014728092 ubox
9 13 0.009534966 ubox
9 20 0.005627195 ubox
9 24 0.192294832 ubox
9 73 0.056920090 ubox
9 75 0.013089666 ubox
9 78 0.023835586 ubox
10 20 0.966811671 ubox
10 23 0.191658292 ubox
10 71 0.010919321 ubox
10 77 0.022729359 ubox
11 17 0.020678497 ubox
11 18 0.051011513 ubox
11 19 0.968283326 ubox
11 21 0.202015838 ubox
11 35 0.038293127 ubox
11 70 0.010877964 ubox
11 72 0.055522198 ubox
11 79 0.025819648 ubox
12 20 0.202596343 ubox
12 34 0.039174649 ubox
12 71 0.055463366 ubox
12 73 0.034759954 ubox
12 78 0.027093351 ubox
13 17 0.763308387 ubox
13 18 0.226841106 ubox
13 19 0.202365519 ubox
13 21 0.008637755 ubox
13 33 0.039132068 ubox
13 69 0.006486066 ubox
13 70 0.055348009 ubox
13 72 0.034825177 ubox
13 79 0.007452465 ubox
14 20 0.008225628 ubox
14 31 0.009141194 ubox
14 71 0.034044024 ubox
14 77 0.006128791 ubox
15 31 0.019141715 ubox
15 76 0.003188232 ubox
15 77 0.008442412 ubox
16 23 0.003689934 ubox
16 76 0.008958349 ubox
16 77 0.009584478 ubox
17 24 0.029110503 ubox
17 68 0.034189153 ubox
17 75 0.008815816 ubox
17 76 0.010097100 ubox
17 77 0.080268857 ubox
17 78 0.029745415 ubox
18 23 0.025936299 ubox
18 24 0.012904854 ubox
18 27 0.011525651 ubox
18 67 0.034235733 ubox
18 75 0.009009555 ubox
18 76 0.099773646 ubox
18 77 0.021125532 ubox
18 78 0.003437769 ubox
19 23 0.008421955 ubox
19 24 0.011743782 ubox
19 27 0.037432043 ubox
19 34 0.007234034 ubox
19 66 0.034256901 ubox
19 73 0.009292886 ubox
19 75 0.104263974 ubox
20 26 0.037464184 ubox
20 28 0.006452958 ubox
20 33 0.006991495 ubox
20 65 0.034174997 ubox
20 72 0.009059139 ubox
20 74 0.104434340 ubox
21 27 0.006601894 ubox
21 73 0.104260812 ubox
22 31 0.009318753 ubox
22 63 0.033808171 ubox
22 71 0.089153463 ubox
23 30 0.009808416 ubox
23 48 0.003948593 ubox
23 50 0.007485185 ubox
23 62 0.033746705 ubox
23 70 0.089386898 ubox
24 29 0.010041622 ubox
24 47 0.003911385 ubox
24 49 0.009057982 ubox
24 51 0.003759434 ubox
24 61 0.033469925 ubox
24 69 0.089042987 ubox
24 70 0.049763693 ubox
24 72 0.006482228 ubox
25 31 0.003408501 ubox
25 71 0.006170433 ubox
25 77 0.005162858 ubox
26 31 0.003748445 ubox
26 42 0.004811132 ubox
26 71 0.005545306 ubox
26 76 0.004465854 ubox
26 77 0.003250946 ubox
27 33 0.016140569 ubox
27 35 0.010736961 ubox
27 41 0.004979322 ubox
27 47 0.957111028 ubox
27 49 0.011847051 ubox
27 51 0.011266171 ubox
27 57 0.003286246 ubox
27 70 0.005356367 ubox
27 72 0.003663567 ubox
27 79 0.007826249 ubox
28 46 0.967603158 ubox
28 71 0.003427747 ubox
28 76 0.013437399 ubox
28 77 0.018966741 ubox
29 34 0.030248046 ubox
29 45 0.968414187 ubox
29 46 0.074080429 ubox
29 56 0.011738803 ubox
29 75 0.014513636 ubox
29 76 0.022566501 ubox
29 78 0.008121552 ubox
30 34 0.006890157 ubox
30 45 0.085737204 ubox
30 56 0.010684741 ubox
30 73 0.017733597 ubox
30 75 0.023066274 ubox
30 77 0.005977478 ubox
30 78 0.005741434 ubox
31 37 0.003299489 ubox
31 38 0.003244159 ubox
31 43 0.964770573 ubox
31 44 0.087999830 ubox
31 47 0.068772718 ubox
31 48 0.004089337 ubox
31 54 0.011271705 ubox
31 55 0.010202396 ubox
31 72 0.017721413 ubox
31 74 0.022438354 ubox
32 42 0.957946744 ubox
32 46 0.083047016 ubox
32 67 0.004718926 ubox
32 71 0.017472370 ubox
33 42 0.155263882 ubox
33 45 0.084734656 ubox
33 53 0.015333089 ubox
33 66 0.004943840 ubox
33 73 0.019247230 ubox
33 78 0.008033070 ubox
34 40 0.951840520 ubox
34 41 0.194788478 ubox
34 44 0.084721485 ubox
34 51 0.003721981 ubox
34 52 0.015327310 ubox
34 65 0.004942264 ubox
34 69 0.017399971 ubox
34 72 0.019245026 ubox
34 79 0.141569535 ubox
35 42 0.005494213 ubox
35 68 0.016598145 ubox
35 71 0.013537442 ubox
35 78 0.153443512 ubox
36 42 0.011092736 ubox
36 63 0.004371182 ubox
36 67 0.014971596 ubox
36 77 0.145620130 ubox
37 42 0.006853124 ubox
37 63 0.003378485 ubox
37 76 0.080858320 ubox
37 77 0.015296080 ubox
38 63 0.003566149 ubox
38 76 0.016505042 ubox
38 77 0.047863037 ubox
39 46 0.018672067 ubox
39 63 0.005146746 ubox
39 67 0.006192838 ubox
39 76 0.071112902 ubox
39 77 0.111681836 ubox
40 45 0.018985779 ubox
40 46 0.004537148 ubox
40 63 0.005481261 ubox
40 66 0.008249835 ubox
40 73 0.009826411 ubox
40 75 0.077414837 ubox
40 76 0.168296743 ubox
40 77 0.003713866 ubox
40 78 0.007501428 ubox
41 45 0.004509974 ubox
41 66 0.003511927 ubox
41 73 0.077745245 ubox
41 75 0.181822091 ubox
41 77 0.006357891 ubox
41 78 0.003190837 ubox
42 58 0.003343672 ubox
42 64 0.008150521 ubox
42 65 0.003215811 ubox
42 72 0.076335767 ubox
42 74 0.181041571 ubox
43 63 0.008147066 ubox
43 71 0.073172002 ubox
44 53 0.007962991 ubox
44 56 0.028314127 ubox
44 63 0.003302106 ubox
44 71 0.071304310 ubox
44 73 0.185172265 ubox
45 52 0.007976828 ubox
45 55 0.028349943 ubox
45 61 0.007264993 ubox
45 62 0.003382881 ubox
45 69 0.051482155 ubox
45 70 0.084875483 ubox
45 72 0.185146080 ubox
46 51 0.007791197 ubox
46 54 0.028346308 ubox
46 60 0.007203891 ubox
46 61 0.003352346 ubox
46 69 0.083142866 ubox
46 70 0.014085549 ubox
46 79 0.028674789 ubox
47 53 0.028304582 ubox
47 68 0.071863178 ubox
47 71 0.008631882 ubox
47 77 0.044183638 ubox
47 78 0.130734113 ubox
48 67 0.068515392 ubox
48 71 0.012535314 ubox
48 76 0.169370040 ubox
48 77 0.133421979 ubox
49 56 0.007352719 ubox
49 66 0.063321033 ubox
49 68 0.421999683 ubox
49 73 0.004538583 ubox
49 75 0.186103938 ubox
49 76 0.113923161 ubox
49 77 0.700150471 ubox
49 78 0.344773125 ubox
50 67 0.422996091 ubox
50 76 0.777957846 ubox
50 77 0.276859613 ubox
51 56 0.012610630 ubox
51 63 0.004467346 ubox
51 66 0.423725309 ubox
51 67 0.012899476 ubox
51 68 0.003331615 ubox
51 71 0.004009825 ubox
51 73 0.016649812 ubox
51 75 0.814162241 ubox
51 76 0.154583472 ubox
51 77 0.003578580 ubox
51 78 0.009439812 ubox
52 63 0.039709467 ubox
52 66 0.018356406 ubox
52 68 0.003996523 ubox
52 73 0.898367871 ubox
52 75 0.073076598 ubox
53 61 0.005571006 ubox
53 62 0.039828684 ubox
53 64 0.426264200 ubox
53 65 0.020096181 ubox
53 69 0.006152795 ubox
53 70 0.003459180 ubox
53 72 0.902049822 ubox
54 63 0.424895967 ubox
54 67 0.019381298 ubox
54 71 0.900653693 ubox
55 63 0.036222570 ubox
55 66 0.026068691 ubox
55 71 0.007214150 ubox
55 73 0.008696698 ubox
56 61 0.420400675 ubox
56 62 0.052112388 ubox
56 65 0.026079399 ubox
56 69 0.901437279 ubox
56 70 0.008799807 ubox
56 72 0.008692147 ubox
56 79 0.013473538 ubox
57 66 0.003768078 ubox
57 68 0.901121658 ubox
57 71 0.007765941 ubox
57 78 0.014950152 ubox
58 63 0.012552701 ubox
58 67 0.873071794 ubox
58 77 0.013941774 ubox
59 63 0.013610252 ubox
59 67 0.044262044 ubox
59 76 0.007406595 ubox
60 67 0.170232095 ubox
60 76 0.003326339 ubox
60 77 0.009543292 ubox
61 66 0.283326379 ubox
61 67 0.024646291 ubox
61 68 0.005578136 ubox
61 75 0.003511818 ubox
61 76 0.016047174 ubox
62 66 0.039095376 ubox
62 67 0.005315758 ubox
62 73 0.003902771 ubox
62 75 0.017992699 ubox
63 72 0.003874092 ubox
63 74 0.017985614 ubox
64 71 0.003291517 ubox
64 73 0.016195930 ubox
65 71 0.003194570 ubox
65 73 0.011662276 ubox
66 70 0.003376908 ubox
66 72 0.014053534 ubox
68 79 0.010535458 ubox
69 73 0.022121021 ubox
69 75 0.119844519 ubox
69 76 0.045755944 ubox
69 77 0.005598822 ubox
69 78 0.073810771 ubox
70 75 0.054542477 ubox
70 76 0.006438667 ubox
70 77 0.068663934 ubox
70 78 0.022050438 ubox
71 79 0.007729163 ubox
72 76 0.004715817 ubox
72 77 0.003247688 ubox
72 78 0.012921175 ubox
73 79 0.008226035 ubox
75 79 0.005269221 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 77 0.9500000 lbox
50 76 0.9500000 lbox
51 75 0.9500000 lbox
52 73 0.9500000 lbox
53 72 0.9500000 lbox
54 71 0.9500000 lbox
56 69 0.9500000 lbox
57 68 0.9500000 lbox
58 67 0.9500000 lbox
showpage
end
%%EOF
