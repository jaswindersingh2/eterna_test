%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (307)
} def

/sequence { (\
GGAAAAAAGAUCAAGUAGGAAACUACAGUGGACUGAAAGUGGCGAAAGGCACGCAGGACACAAGAUCAGCUUAGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.027599450 ubox
1 67 0.012805172 ubox
1 70 0.013014353 ubox
1 71 0.028364359 ubox
1 72 0.006958963 ubox
1 75 0.121471351 ubox
1 76 0.102559601 ubox
1 77 0.008836604 ubox
1 78 0.191559234 ubox
2 11 0.024456857 ubox
2 12 0.042201338 ubox
2 66 0.007871079 ubox
2 67 0.020236178 ubox
2 70 0.032655910 ubox
2 71 0.006774602 ubox
2 72 0.027413048 ubox
2 75 0.118320700 ubox
2 76 0.008978293 ubox
2 77 0.184276872 ubox
2 78 0.238328429 ubox
3 11 0.040733252 ubox
3 66 0.018927416 ubox
3 71 0.027048471 ubox
3 72 0.042005182 ubox
3 76 0.164784280 ubox
3 77 0.234098653 ubox
4 11 0.005521470 ubox
4 71 0.042924033 ubox
4 72 0.113960642 ubox
4 76 0.180746555 ubox
4 77 0.013798866 ubox
5 11 0.004004310 ubox
5 71 0.112891757 ubox
5 72 0.104976414 ubox
5 76 0.012998895 ubox
5 77 0.009349290 ubox
6 11 0.004318681 ubox
6 71 0.098660729 ubox
6 72 0.109695616 ubox
6 76 0.007863555 ubox
6 77 0.009108068 ubox
7 71 0.112476934 ubox
7 72 0.099646730 ubox
7 76 0.007166369 ubox
7 77 0.028815380 ubox
8 71 0.105924645 ubox
8 72 0.025968862 ubox
8 76 0.032021313 ubox
8 77 0.007344238 ubox
9 67 0.970543985 ubox
9 70 0.080107890 ubox
9 71 0.006560738 ubox
9 72 0.006298043 ubox
9 75 0.031387079 ubox
9 77 0.005319659 ubox
9 78 0.040263957 ubox
10 66 0.973131546 ubox
10 71 0.006161389 ubox
10 76 0.005289573 ubox
10 77 0.037856119 ubox
11 20 0.003546435 ubox
11 27 0.004132326 ubox
11 65 0.973223999 ubox
11 68 0.008534507 ubox
11 69 0.008160173 ubox
11 73 0.007146081 ubox
11 74 0.010216692 ubox
11 79 0.004534659 ubox
12 19 0.003771544 ubox
12 64 0.972316116 ubox
12 69 0.009121375 ubox
12 74 0.012296714 ubox
12 79 0.008603693 ubox
13 66 0.005778978 ubox
13 72 0.019510439 ubox
13 76 0.003952179 ubox
13 77 0.026175383 ubox
14 24 0.028730228 ubox
14 66 0.003584829 ubox
14 71 0.021402753 ubox
14 76 0.030276375 ubox
15 23 0.029799727 ubox
15 26 0.996974212 ubox
15 70 0.021212038 ubox
15 75 0.030512935 ubox
16 22 0.029112200 ubox
16 25 0.998169595 ubox
16 69 0.020874046 ubox
16 73 0.022993197 ubox
16 74 0.022464301 ubox
17 24 0.998296837 ubox
17 71 0.005352386 ubox
17 72 0.030873989 ubox
18 23 0.997704643 ubox
18 24 0.007089878 ubox
18 26 0.007867654 ubox
18 67 0.007192864 ubox
18 70 0.005675173 ubox
18 71 0.031475206 ubox
19 23 0.010008557 ubox
19 26 0.003796557 ubox
19 66 0.007081394 ubox
19 67 0.019121873 ubox
19 70 0.031526017 ubox
19 78 0.003302146 ubox
20 66 0.018477733 ubox
20 77 0.003289740 ubox
21 66 0.004705703 ubox
23 64 0.022219328 ubox
24 63 0.022035526 ubox
24 65 0.007169541 ubox
26 64 0.005038596 ubox
28 61 0.998052489 ubox
29 60 0.999298744 ubox
29 62 0.003995766 ubox
30 59 0.999954580 ubox
30 61 0.004349440 ubox
31 59 0.004017612 ubox
33 56 0.999785043 ubox
33 57 0.019049843 ubox
34 55 0.999153226 ubox
34 56 0.018847870 ubox
35 54 0.992114477 ubox
39 50 0.035176258 ubox
39 52 0.991922448 ubox
39 54 0.048775559 ubox
40 49 0.035110169 ubox
40 51 0.995036802 ubox
40 53 0.059946430 ubox
41 50 0.989336950 ubox
41 52 0.060280918 ubox
42 50 0.139779503 ubox
43 48 0.972006462 ubox
43 49 0.176988030 ubox
62 72 0.057481580 ubox
62 77 0.019026426 ubox
63 71 0.062899782 ubox
63 72 0.007521091 ubox
63 76 0.021860470 ubox
63 77 0.003560984 ubox
64 70 0.063433662 ubox
64 71 0.007127679 ubox
64 72 0.007920713 ubox
64 75 0.022297246 ubox
64 77 0.007402458 ubox
64 78 0.111063354 ubox
65 71 0.007870403 ubox
65 72 0.008159634 ubox
65 76 0.006865291 ubox
65 77 0.107776036 ubox
66 73 0.006901427 ubox
66 74 0.004664965 ubox
66 79 0.004432196 ubox
67 74 0.018584789 ubox
67 79 0.008654784 ubox
68 72 0.007131006 ubox
68 76 0.699264035 ubox
68 77 0.036293951 ubox
69 75 0.758126341 ubox
69 76 0.018752045 ubox
69 77 0.006106642 ubox
69 78 0.030680386 ubox
70 74 0.752898140 ubox
70 79 0.024019476 ubox
71 79 0.003523612 ubox
72 79 0.007196829 ubox
73 77 0.005025106 ubox
74 78 0.022704803 ubox
75 79 0.008571461 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
68 76 0.9500000 lbox
69 75 0.9500000 lbox
70 74 0.9500000 lbox
showpage
end
%%EOF
