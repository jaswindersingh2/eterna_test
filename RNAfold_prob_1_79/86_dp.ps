%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (86)
} def

/sequence { (\
GGAAAAAGAUACGUAUGGAAACAUACCUUGCGCUACGAAAGUAGACUACGAAAGUAGCGUGAGGUAUCGGAGGGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.014157769 ubox
1 12 0.065913840 ubox
1 14 0.005155338 ubox
1 16 0.003652089 ubox
1 22 0.028183660 ubox
1 68 0.011715005 ubox
1 75 0.238232514 ubox
1 76 0.202904765 ubox
1 77 0.014298984 ubox
1 78 0.242553895 ubox
2 10 0.005227650 ubox
2 12 0.023688582 ubox
2 14 0.003835279 ubox
2 22 0.007632997 ubox
2 67 0.006593901 ubox
2 68 0.018610087 ubox
2 75 0.234097141 ubox
2 76 0.014876625 ubox
2 77 0.239258529 ubox
2 78 0.249008844 ubox
3 10 0.017660649 ubox
3 14 0.004168451 ubox
3 16 0.004372392 ubox
3 67 0.016365181 ubox
3 76 0.229010031 ubox
3 77 0.247726489 ubox
4 10 0.012537214 ubox
4 14 0.004356025 ubox
4 16 0.004621812 ubox
4 76 0.226061143 ubox
4 77 0.013998512 ubox
5 10 0.010746246 ubox
5 14 0.009445757 ubox
5 16 0.006217504 ubox
5 76 0.016126569 ubox
5 77 0.010015607 ubox
6 10 0.006521625 ubox
6 14 0.006882990 ubox
6 16 0.005664859 ubox
6 29 0.013418017 ubox
6 76 0.009865242 ubox
6 77 0.092223924 ubox
7 14 0.019526381 ubox
7 16 0.022985959 ubox
7 28 0.014220498 ubox
7 76 0.107528525 ubox
7 77 0.011821888 ubox
8 12 0.018729241 ubox
8 14 0.008012779 ubox
8 16 0.003275562 ubox
8 22 0.021916495 ubox
8 27 0.014323705 ubox
8 29 0.003420729 ubox
8 68 0.798974842 ubox
8 75 0.110139779 ubox
8 76 0.012397685 ubox
8 77 0.047698650 ubox
8 78 0.323838563 ubox
9 14 0.008611772 ubox
9 16 0.024949618 ubox
9 28 0.003645569 ubox
9 67 0.800438747 ubox
9 76 0.052296033 ubox
9 77 0.322829095 ubox
10 15 0.023889813 ubox
10 17 0.011655732 ubox
10 18 0.004070605 ubox
10 19 0.013503270 ubox
10 20 0.015986705 ubox
10 21 0.004651386 ubox
10 66 0.800347746 ubox
10 69 0.003529418 ubox
10 70 0.006513076 ubox
10 71 0.022670550 ubox
10 72 0.013918566 ubox
10 73 0.014366241 ubox
10 74 0.030649952 ubox
10 79 0.003645335 ubox
11 16 0.011469977 ubox
11 24 0.003684905 ubox
11 28 0.005294062 ubox
11 65 0.800030091 ubox
11 76 0.027295497 ubox
11 77 0.013781486 ubox
12 17 0.047387468 ubox
12 18 0.060265412 ubox
12 64 0.798501505 ubox
12 69 0.103785895 ubox
12 70 0.013575963 ubox
12 72 0.062382267 ubox
12 73 0.148830177 ubox
12 74 0.296615751 ubox
12 79 0.144826587 ubox
13 22 0.118887801 ubox
13 24 0.004170172 ubox
13 26 0.800785232 ubox
13 27 0.004737221 ubox
13 67 0.003170475 ubox
13 68 0.103360640 ubox
13 75 0.134498504 ubox
13 76 0.004147449 ubox
13 77 0.008276379 ubox
13 78 0.151509931 ubox
14 18 0.003818356 ubox
14 19 0.007316915 ubox
14 20 0.007792447 ubox
14 21 0.115414979 ubox
14 23 0.004602903 ubox
14 25 0.805277821 ubox
14 66 0.005330498 ubox
14 69 0.005427302 ubox
14 70 0.020007242 ubox
14 71 0.130572075 ubox
14 72 0.265611480 ubox
14 73 0.024629358 ubox
14 74 0.133214524 ubox
14 79 0.005215799 ubox
15 24 0.809033003 ubox
15 67 0.013841570 ubox
15 76 0.029901707 ubox
15 77 0.039072722 ubox
16 20 0.006253850 ubox
16 21 0.014503295 ubox
16 23 0.811673184 ubox
16 66 0.009696994 ubox
16 69 0.136034534 ubox
16 70 0.282796766 ubox
16 71 0.024717450 ubox
16 72 0.042261480 ubox
16 73 0.028543397 ubox
16 74 0.022329358 ubox
16 79 0.093201763 ubox
17 22 0.816198259 ubox
17 65 0.004680695 ubox
17 68 0.143040840 ubox
17 75 0.067476097 ubox
17 76 0.074754504 ubox
17 77 0.004903754 ubox
17 78 0.151288671 ubox
18 22 0.014398481 ubox
18 67 0.096321430 ubox
18 68 0.321028479 ubox
18 75 0.079342748 ubox
18 76 0.004613486 ubox
18 77 0.151309876 ubox
18 78 0.083794007 ubox
19 67 0.283876539 ubox
19 76 0.150046276 ubox
19 77 0.083548114 ubox
20 67 0.019487199 ubox
20 76 0.076958292 ubox
20 77 0.004399880 ubox
21 65 0.006349529 ubox
21 67 0.011344785 ubox
21 76 0.005371500 ubox
22 64 0.003385498 ubox
22 69 0.222360188 ubox
22 70 0.039447122 ubox
22 72 0.050031841 ubox
22 73 0.145460089 ubox
22 74 0.054193958 ubox
22 79 0.004010117 ubox
23 67 0.473822927 ubox
24 66 0.581429471 ubox
24 69 0.003691462 ubox
24 70 0.005141257 ubox
24 71 0.005877827 ubox
24 72 0.003737521 ubox
25 65 0.590672624 ubox
26 63 0.003323955 ubox
26 64 0.595264962 ubox
27 61 0.004639026 ubox
27 63 0.996579639 ubox
27 64 0.005039128 ubox
28 62 0.998265909 ubox
28 63 0.006968309 ubox
29 61 0.994167695 ubox
29 62 0.007428546 ubox
30 60 0.997746223 ubox
31 59 0.999959706 ubox
32 58 0.999970436 ubox
33 44 0.018290363 ubox
33 57 0.999818249 ubox
34 43 0.018661568 ubox
34 56 0.999519531 ubox
35 42 0.018786024 ubox
35 55 0.999501670 ubox
36 41 0.018812902 ubox
36 50 0.006364895 ubox
36 54 0.999097417 ubox
37 46 0.005247588 ubox
37 49 0.010132675 ubox
38 47 0.003231182 ubox
39 47 0.003940643 ubox
40 47 0.047603348 ubox
41 46 0.048960254 ubox
41 47 0.006174981 ubox
41 49 0.984708729 ubox
42 48 0.978527107 ubox
42 50 0.011602496 ubox
42 51 0.015910658 ubox
43 47 0.867514987 ubox
44 49 0.030059156 ubox
46 57 0.018360315 ubox
47 53 0.003392168 ubox
47 56 0.018722388 ubox
48 55 0.018812276 ubox
49 54 0.018836374 ubox
60 79 0.006637454 ubox
61 78 0.036809995 ubox
62 77 0.036865522 ubox
63 76 0.037002565 ubox
64 75 0.040553108 ubox
64 78 0.005026871 ubox
65 74 0.039945119 ubox
66 76 0.003722044 ubox
67 72 0.005798154 ubox
67 73 0.009361315 ubox
67 74 0.037081680 ubox
68 72 0.015952789 ubox
68 73 0.076878837 ubox
68 74 0.026145931 ubox
68 79 0.238190305 ubox
69 75 0.110966161 ubox
69 76 0.099930535 ubox
69 77 0.015094738 ubox
69 78 0.388274790 ubox
70 75 0.108701326 ubox
70 76 0.016843341 ubox
70 77 0.378902219 ubox
70 78 0.284673112 ubox
71 76 0.351171817 ubox
71 77 0.280299368 ubox
72 76 0.190252398 ubox
72 77 0.011682641 ubox
72 78 0.073829707 ubox
73 77 0.048148891 ubox
73 78 0.071906376 ubox
74 78 0.025372589 ubox
75 79 0.008215085 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
29 61 0.9500000 lbox
30 60 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 57 0.9500000 lbox
34 56 0.9500000 lbox
35 55 0.9500000 lbox
36 54 0.9500000 lbox
41 49 0.9500000 lbox
42 48 0.9500000 lbox
43 47 0.9500000 lbox
showpage
end
%%EOF
