%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (943)
} def

/sequence { (\
GGAAAUUAAGACCAGAAAACUGGACAUCUGAUCAAAAAAAGAUCAGAUGACAUGAAAACAUGACUUAACCGUAUGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.008438934 ubox
1 7 0.010196630 ubox
1 12 0.004305091 ubox
1 13 0.024932832 ubox
1 51 0.027200023 ubox
1 59 0.003577116 ubox
1 64 0.015703038 ubox
1 65 0.015728815 ubox
1 66 0.005285464 ubox
1 69 0.023387301 ubox
1 70 0.743302842 ubox
1 72 0.025217004 ubox
1 74 0.019959082 ubox
1 76 0.008446962 ubox
1 77 0.005762023 ubox
1 78 0.175701017 ubox
2 6 0.008263496 ubox
2 7 0.012171760 ubox
2 12 0.024918822 ubox
2 51 0.014266257 ubox
2 64 0.018022439 ubox
2 65 0.005149909 ubox
2 66 0.012113931 ubox
2 69 0.743206449 ubox
2 70 0.081540416 ubox
2 72 0.050557202 ubox
2 74 0.007885150 ubox
2 76 0.007525346 ubox
2 77 0.167073197 ubox
2 78 0.284819914 ubox
3 7 0.008860725 ubox
3 53 0.004001229 ubox
3 65 0.013337128 ubox
3 66 0.022640160 ubox
3 72 0.021144488 ubox
3 74 0.012684642 ubox
3 76 0.156024603 ubox
3 77 0.280163667 ubox
4 53 0.003730546 ubox
4 65 0.023541877 ubox
4 66 0.026147249 ubox
4 72 0.027796508 ubox
4 74 0.016816561 ubox
4 76 0.256947961 ubox
4 77 0.031768819 ubox
5 53 0.008350978 ubox
5 65 0.024255488 ubox
5 66 0.021014891 ubox
5 72 0.048111910 ubox
5 74 0.093944318 ubox
5 76 0.039825681 ubox
5 77 0.005815992 ubox
6 10 0.005556526 ubox
6 11 0.010381325 ubox
6 24 0.006275395 ubox
6 50 0.003170881 ubox
6 52 0.008057932 ubox
6 55 0.021835821 ubox
6 56 0.007494246 ubox
6 57 0.003296275 ubox
6 63 0.008857038 ubox
6 67 0.030554856 ubox
6 68 0.759302974 ubox
6 71 0.041831151 ubox
6 73 0.082633391 ubox
6 75 0.042041166 ubox
6 79 0.004593062 ubox
7 11 0.007586327 ubox
7 24 0.009150756 ubox
7 50 0.004355175 ubox
7 54 0.023457009 ubox
7 55 0.008016638 ubox
7 56 0.004736437 ubox
7 62 0.006588271 ubox
7 63 0.010359260 ubox
7 67 0.806482369 ubox
7 68 0.015681885 ubox
7 71 0.015180181 ubox
7 73 0.182371862 ubox
7 75 0.020315990 ubox
7 79 0.004676417 ubox
8 53 0.022188971 ubox
8 61 0.005912724 ubox
8 65 0.008908323 ubox
8 66 0.811214053 ubox
8 72 0.168994158 ubox
8 74 0.020467455 ubox
8 77 0.010053927 ubox
9 53 0.004563925 ubox
9 65 0.811178600 ubox
9 66 0.010540693 ubox
9 72 0.012309379 ubox
9 74 0.005382343 ubox
9 76 0.010734054 ubox
9 77 0.006686762 ubox
10 20 0.003290590 ubox
10 25 0.043972738 ubox
10 51 0.020551900 ubox
10 59 0.004028019 ubox
10 64 0.806647866 ubox
10 65 0.010046727 ubox
10 66 0.011199218 ubox
10 69 0.036485907 ubox
10 70 0.159957221 ubox
10 72 0.006616333 ubox
10 76 0.005756535 ubox
10 77 0.011000362 ubox
10 78 0.077218477 ubox
11 53 0.003446194 ubox
11 65 0.011047679 ubox
11 66 0.008418681 ubox
11 72 0.008758233 ubox
11 74 0.009572228 ubox
11 76 0.011066593 ubox
11 77 0.065626659 ubox
12 22 0.005119597 ubox
12 23 0.993815431 ubox
12 62 0.010760661 ubox
12 71 0.007109452 ubox
12 75 0.008071204 ubox
13 22 0.998737074 ubox
13 23 0.005055918 ubox
13 62 0.013750558 ubox
13 75 0.004032754 ubox
14 21 0.997345531 ubox
14 61 0.013839428 ubox
14 74 0.003884586 ubox
15 20 0.989069206 ubox
15 59 0.007532680 ubox
15 78 0.014355649 ubox
16 77 0.014239949 ubox
17 76 0.013574473 ubox
18 77 0.003184491 ubox
19 53 0.003427626 ubox
19 72 0.006836071 ubox
19 76 0.003777398 ubox
20 54 0.020591467 ubox
20 71 0.006957919 ubox
20 75 0.003897885 ubox
21 52 0.026242217 ubox
21 71 0.012961151 ubox
22 51 0.028466408 ubox
22 53 0.003259779 ubox
22 70 0.015953753 ubox
22 78 0.005462849 ubox
23 51 0.035435680 ubox
23 69 0.015896024 ubox
23 77 0.005389108 ubox
23 78 0.004639633 ubox
24 53 0.014158422 ubox
24 72 0.003276301 ubox
24 76 0.006286193 ubox
24 77 0.004288380 ubox
25 49 0.993546644 ubox
25 54 0.003293080 ubox
25 75 0.005994340 ubox
26 48 0.998758499 ubox
26 74 0.003942953 ubox
27 47 0.999604534 ubox
28 46 0.999981493 ubox
29 45 0.999754458 ubox
30 44 0.999982476 ubox
31 43 0.999737646 ubox
32 41 0.004370652 ubox
32 42 0.999661657 ubox
33 41 0.999268562 ubox
48 67 0.004088051 ubox
49 64 0.026341990 ubox
49 66 0.006461165 ubox
49 77 0.011677306 ubox
49 78 0.007951860 ubox
50 61 0.003579199 ubox
50 65 0.013723670 ubox
50 66 0.012173131 ubox
50 72 0.006257063 ubox
50 76 0.044594259 ubox
50 77 0.006750172 ubox
51 62 0.899245587 ubox
51 71 0.006183069 ubox
51 75 0.048492160 ubox
51 79 0.010303251 ubox
52 61 0.903013072 ubox
52 72 0.008135856 ubox
52 74 0.048346305 ubox
53 57 0.003352741 ubox
53 58 0.010057223 ubox
53 60 0.902941617 ubox
53 63 0.006007605 ubox
53 67 0.006192886 ubox
53 71 0.008987499 ubox
53 73 0.047861183 ubox
53 79 0.138296681 ubox
54 59 0.897869594 ubox
54 64 0.003318348 ubox
54 66 0.006755298 ubox
54 70 0.010001101 ubox
54 72 0.042091574 ubox
54 77 0.005418800 ubox
54 78 0.223798957 ubox
55 61 0.006341682 ubox
55 65 0.006563243 ubox
55 66 0.007598987 ubox
55 76 0.004211591 ubox
55 77 0.205747556 ubox
56 61 0.004417337 ubox
56 65 0.007714182 ubox
56 66 0.004168847 ubox
56 76 0.110562595 ubox
56 77 0.029497927 ubox
57 65 0.004337837 ubox
57 66 0.009124804 ubox
57 74 0.003991854 ubox
57 76 0.027139797 ubox
57 77 0.305565693 ubox
58 65 0.008497211 ubox
58 72 0.015831911 ubox
58 74 0.027059208 ubox
58 76 0.384240038 ubox
58 77 0.006727336 ubox
59 71 0.017077994 ubox
59 75 0.404089464 ubox
60 65 0.005476194 ubox
60 66 0.018066446 ubox
60 72 0.069468851 ubox
60 74 0.403627717 ubox
60 76 0.005308972 ubox
61 67 0.006745019 ubox
61 68 0.009555862 ubox
61 71 0.073114551 ubox
61 73 0.391169131 ubox
61 75 0.005860203 ubox
61 79 0.009459273 ubox
62 66 0.006102009 ubox
62 69 0.016453534 ubox
62 70 0.075402729 ubox
62 72 0.289256933 ubox
62 74 0.004626169 ubox
62 77 0.022379285 ubox
62 78 0.016187266 ubox
63 72 0.306876171 ubox
63 74 0.004102628 ubox
63 76 0.061122761 ubox
63 77 0.012682147 ubox
64 71 0.402669164 ubox
64 75 0.068496322 ubox
64 79 0.005760942 ubox
65 71 0.012076329 ubox
65 73 0.010582493 ubox
65 75 0.005841351 ubox
65 79 0.005739774 ubox
66 71 0.011229569 ubox
66 73 0.045668434 ubox
66 75 0.014577336 ubox
67 72 0.043869114 ubox
67 74 0.015374165 ubox
67 76 0.003897884 ubox
67 77 0.041112758 ubox
68 72 0.005646671 ubox
68 74 0.006919155 ubox
68 76 0.056226242 ubox
68 77 0.005730578 ubox
69 75 0.060088055 ubox
69 79 0.010970438 ubox
70 75 0.039510577 ubox
70 79 0.144695485 ubox
71 76 0.010489314 ubox
71 77 0.019907981 ubox
71 78 0.191698610 ubox
72 79 0.010246693 ubox
73 77 0.013163679 ubox
74 79 0.009491275 ubox
1 70 0.9500000 lbox
2 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
showpage
end
%%EOF
