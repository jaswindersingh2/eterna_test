%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (558)
} def

/sequence { (\
GGAAAGAUUUCCUAUAUAAAUAGGUAGUAGAAAUAGUAUUUAGCGAAAAAGCAAAAUAUAGAGAGGUCACCUUUAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.003407087 ubox
1 11 0.010139770 ubox
1 12 0.094897907 ubox
1 34 0.018647879 ubox
1 68 0.003321270 ubox
1 70 0.012551367 ubox
1 71 0.820643876 ubox
1 72 0.066902700 ubox
1 73 0.019171124 ubox
1 74 0.051487695 ubox
1 76 0.009319967 ubox
1 77 0.008520408 ubox
1 78 0.120353339 ubox
2 9 0.005048128 ubox
2 10 0.011549821 ubox
2 11 0.096009348 ubox
2 34 0.007849696 ubox
2 68 0.006257897 ubox
2 70 0.821606442 ubox
2 71 0.076524280 ubox
2 72 0.024755049 ubox
2 73 0.060910248 ubox
2 74 0.121763714 ubox
2 76 0.010916742 ubox
2 77 0.116397167 ubox
2 78 0.141313365 ubox
3 8 0.004797599 ubox
3 9 0.011866612 ubox
3 10 0.094979568 ubox
3 34 0.005478995 ubox
3 67 0.005723784 ubox
3 72 0.059146151 ubox
3 73 0.125789015 ubox
3 74 0.073042754 ubox
3 76 0.106934560 ubox
3 77 0.139601666 ubox
4 8 0.009351615 ubox
4 9 0.082654752 ubox
4 10 0.004020680 ubox
4 28 0.004370664 ubox
4 34 0.004263680 ubox
4 37 0.003815439 ubox
4 72 0.124626458 ubox
4 73 0.086408290 ubox
4 74 0.045694132 ubox
4 76 0.121511661 ubox
4 77 0.011083943 ubox
5 9 0.003937460 ubox
5 13 0.003351511 ubox
5 28 0.009398931 ubox
5 34 0.006699891 ubox
5 67 0.006746434 ubox
5 72 0.089251619 ubox
5 73 0.047994633 ubox
5 74 0.038736562 ubox
5 76 0.013132733 ubox
5 77 0.004553623 ubox
6 11 0.003213413 ubox
6 12 0.003474999 ubox
6 28 0.014728827 ubox
6 34 0.005554165 ubox
6 68 0.965048950 ubox
6 70 0.008386767 ubox
6 71 0.059554121 ubox
6 72 0.008458667 ubox
6 73 0.011807278 ubox
6 74 0.014402522 ubox
6 76 0.003436041 ubox
6 77 0.007067536 ubox
6 78 0.028220293 ubox
7 25 0.004348623 ubox
7 28 0.184051369 ubox
7 34 0.071868291 ubox
7 67 0.967262387 ubox
7 72 0.007718525 ubox
7 73 0.007218247 ubox
7 74 0.003173949 ubox
7 76 0.007332619 ubox
7 77 0.022900506 ubox
8 26 0.011412179 ubox
8 27 0.187696304 ubox
8 29 0.008939944 ubox
8 30 0.003260040 ubox
8 31 0.016829303 ubox
8 32 0.010880475 ubox
8 33 0.074689676 ubox
8 64 0.011281252 ubox
8 65 0.009326728 ubox
8 66 0.966328795 ubox
8 69 0.004269930 ubox
8 75 0.006973361 ubox
9 26 0.159066552 ubox
9 27 0.031414612 ubox
9 29 0.003622968 ubox
9 30 0.017965765 ubox
9 31 0.012346278 ubox
9 32 0.075795205 ubox
9 33 0.004262779 ubox
9 63 0.011903431 ubox
9 64 0.011982737 ubox
9 65 0.963556056 ubox
9 75 0.005453614 ubox
10 26 0.039555577 ubox
10 27 0.004272679 ubox
10 29 0.017520521 ubox
10 30 0.012365886 ubox
10 31 0.075976090 ubox
10 32 0.004589200 ubox
10 62 0.012508260 ubox
10 63 0.011913100 ubox
10 64 0.966815679 ubox
11 24 0.218353508 ubox
11 30 0.071674578 ubox
11 61 0.009601108 ubox
11 63 0.967139382 ubox
11 66 0.005306657 ubox
12 23 0.220986851 ubox
12 27 0.068111156 ubox
12 30 0.032251928 ubox
12 61 0.966341254 ubox
12 63 0.006572191 ubox
12 65 0.005281122 ubox
13 22 0.221063042 ubox
13 26 0.069620275 ubox
13 29 0.037722907 ubox
13 35 0.003753106 ubox
13 60 0.966430687 ubox
13 61 0.005143454 ubox
13 62 0.008347656 ubox
13 64 0.005015991 ubox
13 79 0.005655983 ubox
14 21 0.219380611 ubox
14 25 0.069679835 ubox
14 28 0.037067891 ubox
14 34 0.003880091 ubox
14 57 0.003967166 ubox
14 59 0.966045882 ubox
14 76 0.004119000 ubox
14 77 0.003898479 ubox
15 19 0.005196705 ubox
15 20 0.207232081 ubox
15 22 0.003785993 ubox
15 24 0.069091099 ubox
15 26 0.037869061 ubox
15 27 0.030634636 ubox
15 29 0.006046287 ubox
15 33 0.003684571 ubox
15 35 0.005167273 ubox
15 56 0.004687084 ubox
15 58 0.965162804 ubox
15 60 0.018944228 ubox
15 75 0.004390977 ubox
16 21 0.004530767 ubox
16 25 0.043064017 ubox
16 28 0.006386171 ubox
16 34 0.005493006 ubox
16 57 0.958583150 ubox
16 59 0.020157963 ubox
16 74 0.003863679 ubox
16 76 0.036490242 ubox
16 77 0.003936354 ubox
17 22 0.012285247 ubox
17 23 0.005417132 ubox
17 24 0.042402400 ubox
17 26 0.012835832 ubox
17 27 0.006201565 ubox
17 33 0.005299427 ubox
17 42 0.037334847 ubox
17 45 0.006566308 ubox
17 46 0.020484622 ubox
17 47 0.006574174 ubox
17 48 0.003734467 ubox
17 53 0.010805750 ubox
17 54 0.018487532 ubox
17 55 0.042590739 ubox
17 56 0.917198020 ubox
17 58 0.021177463 ubox
17 75 0.039837212 ubox
18 25 0.012819473 ubox
18 41 0.055679748 ubox
18 57 0.020758666 ubox
18 74 0.039944770 ubox
18 76 0.005197939 ubox
18 77 0.005794228 ubox
19 25 0.003741109 ubox
19 40 0.058260025 ubox
19 41 0.014363848 ubox
19 57 0.003894195 ubox
19 73 0.036555217 ubox
19 74 0.014149500 ubox
19 76 0.005887843 ubox
19 77 0.016790039 ubox
20 28 0.008240973 ubox
20 37 0.003813661 ubox
20 39 0.058340752 ubox
20 40 0.012906028 ubox
20 41 0.012822133 ubox
20 57 0.003994978 ubox
20 72 0.017381377 ubox
20 73 0.014238960 ubox
20 74 0.019337152 ubox
20 76 0.018457725 ubox
21 27 0.008352342 ubox
21 29 0.011349866 ubox
21 35 0.005869582 ubox
21 36 0.003792759 ubox
21 38 0.057975692 ubox
21 42 0.886464557 ubox
21 50 0.005518170 ubox
21 51 0.003435836 ubox
21 53 0.012986965 ubox
21 54 0.018435107 ubox
21 55 0.012378600 ubox
21 56 0.004854446 ubox
21 75 0.017822199 ubox
22 28 0.011787372 ubox
22 34 0.006197441 ubox
22 37 0.054699858 ubox
22 40 0.011501773 ubox
22 41 0.936964518 ubox
22 72 0.060328980 ubox
22 73 0.003444599 ubox
22 74 0.011590782 ubox
23 28 0.004704582 ubox
23 34 0.003449086 ubox
23 37 0.022481213 ubox
23 39 0.010666847 ubox
23 40 0.950720114 ubox
23 41 0.015069032 ubox
23 44 0.006956074 ubox
23 52 0.003943096 ubox
23 71 0.067244439 ubox
23 73 0.005156769 ubox
23 78 0.003433900 ubox
24 34 0.020186174 ubox
24 39 0.962080051 ubox
24 40 0.012225718 ubox
24 41 0.005552394 ubox
24 44 0.003773826 ubox
24 52 0.005433431 ubox
24 70 0.067283145 ubox
24 72 0.003867721 ubox
24 76 0.003506762 ubox
24 78 0.003818077 ubox
25 30 0.004462054 ubox
25 31 0.005841258 ubox
25 32 0.009576566 ubox
25 33 0.020271160 ubox
25 35 0.040740114 ubox
25 36 0.003565253 ubox
25 38 0.963953480 ubox
25 42 0.010451548 ubox
25 43 0.003638667 ubox
25 46 0.004648402 ubox
25 47 0.004470029 ubox
25 48 0.003206265 ubox
25 51 0.005278071 ubox
25 69 0.066089146 ubox
25 75 0.003739980 ubox
26 34 0.041046635 ubox
26 37 0.960682409 ubox
26 40 0.022774150 ubox
26 41 0.009630715 ubox
26 67 0.011778203 ubox
26 74 0.003347914 ubox
26 77 0.006378724 ubox
27 34 0.025770135 ubox
27 37 0.003920749 ubox
27 39 0.029013049 ubox
27 40 0.008070198 ubox
27 44 0.020622325 ubox
27 67 0.012895050 ubox
27 68 0.047761409 ubox
27 70 0.005998684 ubox
27 71 0.003259858 ubox
27 76 0.007764951 ubox
28 32 0.006269946 ubox
28 33 0.026112495 ubox
28 35 0.957437048 ubox
28 36 0.011534009 ubox
28 38 0.029962829 ubox
28 42 0.015221735 ubox
28 43 0.020049346 ubox
28 65 0.008735110 ubox
28 66 0.014706177 ubox
28 69 0.006049227 ubox
28 75 0.007869763 ubox
29 34 0.942936963 ubox
29 37 0.029861858 ubox
29 41 0.016396633 ubox
29 67 0.011432745 ubox
29 74 0.007285487 ubox
30 34 0.011735409 ubox
30 40 0.016464567 ubox
30 41 0.021241283 ubox
30 68 0.016590441 ubox
30 73 0.005601983 ubox
30 77 0.003317787 ubox
30 78 0.049040573 ubox
31 39 0.015817857 ubox
31 40 0.022114870 ubox
31 41 0.017101607 ubox
31 67 0.016513550 ubox
31 72 0.004757833 ubox
31 76 0.003363804 ubox
31 77 0.047806147 ubox
32 37 0.003193319 ubox
32 39 0.019713674 ubox
32 40 0.017855285 ubox
32 41 0.009651987 ubox
32 76 0.040948954 ubox
32 77 0.012631816 ubox
33 37 0.003332649 ubox
33 39 0.017615915 ubox
33 40 0.010040317 ubox
33 59 0.004970219 ubox
33 76 0.015653385 ubox
34 38 0.015715359 ubox
34 42 0.007106531 ubox
34 58 0.004645592 ubox
34 60 0.036815942 ubox
34 61 0.029131997 ubox
34 62 0.019125411 ubox
34 64 0.005240915 ubox
34 75 0.017468623 ubox
35 41 0.007336967 ubox
35 57 0.004142046 ubox
35 59 0.028064790 ubox
35 74 0.014606894 ubox
36 40 0.005059319 ubox
36 41 0.003185323 ubox
36 44 0.003544482 ubox
36 52 0.003223060 ubox
36 57 0.003743631 ubox
36 59 0.237225335 ubox
37 43 0.003497037 ubox
37 51 0.003167368 ubox
37 56 0.003815021 ubox
37 58 0.246622509 ubox
37 60 0.003698489 ubox
38 57 0.248977762 ubox
38 59 0.003685548 ubox
39 54 0.003512780 ubox
39 55 0.026006330 ubox
39 56 0.249252401 ubox
39 58 0.003243017 ubox
40 53 0.004922178 ubox
40 54 0.040163010 ubox
40 55 0.253149931 ubox
40 56 0.003815129 ubox
41 47 0.003206534 ubox
41 53 0.047019666 ubox
41 54 0.239790343 ubox
41 55 0.009249590 ubox
43 52 0.989422618 ubox
44 51 0.990189621 ubox
44 79 0.005237884 ubox
45 52 0.027075973 ubox
45 78 0.005672369 ubox
46 77 0.005640478 ubox
47 76 0.004010657 ubox
55 77 0.006668529 ubox
56 76 0.007103975 ubox
56 77 0.004295449 ubox
57 75 0.006963284 ubox
58 74 0.006185994 ubox
58 76 0.042077285 ubox
59 75 0.053894974 ubox
60 72 0.005155167 ubox
60 74 0.072201156 ubox
60 76 0.026360288 ubox
60 77 0.021950383 ubox
61 68 0.030633476 ubox
61 71 0.005526105 ubox
61 73 0.077232379 ubox
61 74 0.016726174 ubox
61 76 0.024524081 ubox
61 77 0.011070535 ubox
61 78 0.048846494 ubox
62 67 0.029879259 ubox
62 72 0.077884659 ubox
62 73 0.015360029 ubox
62 74 0.195726185 ubox
62 76 0.010576785 ubox
62 77 0.046734572 ubox
63 68 0.006293835 ubox
63 70 0.005221179 ubox
63 71 0.077904255 ubox
63 72 0.010685937 ubox
63 73 0.218945680 ubox
63 74 0.028049662 ubox
63 76 0.024044004 ubox
63 78 0.008666244 ubox
64 72 0.222916108 ubox
64 73 0.029356737 ubox
64 74 0.004388130 ubox
64 77 0.008486530 ubox
65 70 0.071027360 ubox
65 71 0.223571386 ubox
65 72 0.029326792 ubox
65 73 0.004087430 ubox
65 74 0.007041793 ubox
65 76 0.007590203 ubox
66 70 0.219971558 ubox
66 71 0.029166290 ubox
66 72 0.003431587 ubox
66 73 0.006791096 ubox
69 73 0.004696852 ubox
69 74 0.008204924 ubox
69 76 0.007029977 ubox
69 77 0.004585950 ubox
70 79 0.019673175 ubox
71 79 0.014303056 ubox
72 79 0.009278169 ubox
73 79 0.007921181 ubox
74 79 0.010144654 ubox
1 71 0.9500000 lbox
2 70 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 61 0.9500000 lbox
13 60 0.9500000 lbox
14 59 0.9500000 lbox
15 58 0.9500000 lbox
16 57 0.9500000 lbox
17 56 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
showpage
end
%%EOF
