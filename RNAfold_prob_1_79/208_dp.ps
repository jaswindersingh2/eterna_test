%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (208)
} def

/sequence { (\
GGAAAAGAGAAACACAGAUCCACGAAAGUGAGAUCAAAACUAGAGUCGAAAGACCUAGAGUGUAACUCGUGACUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 73 0.209420133 ubox
1 74 0.186599416 ubox
1 75 0.168257620 ubox
1 76 0.282240844 ubox
1 77 0.015152144 ubox
1 78 0.210498379 ubox
2 68 0.003933778 ubox
2 70 0.004352952 ubox
2 73 0.229372789 ubox
2 74 0.135012897 ubox
2 75 0.325900839 ubox
2 76 0.009290044 ubox
2 77 0.183919141 ubox
2 78 0.374189574 ubox
3 67 0.003322887 ubox
3 70 0.021544767 ubox
3 74 0.318748248 ubox
3 76 0.149102559 ubox
3 77 0.346503436 ubox
4 70 0.156054744 ubox
4 74 0.030513032 ubox
4 76 0.197491460 ubox
4 77 0.051142565 ubox
5 70 0.166042685 ubox
5 74 0.022823220 ubox
5 76 0.046193156 ubox
5 77 0.562622031 ubox
6 67 0.006580730 ubox
6 70 0.128992009 ubox
6 74 0.057884888 ubox
6 76 0.685519704 ubox
6 77 0.014238573 ubox
7 66 0.006983539 ubox
7 68 0.662531378 ubox
7 70 0.039720120 ubox
7 73 0.043039506 ubox
7 75 0.719492073 ubox
7 76 0.005632274 ubox
7 77 0.157885580 ubox
7 78 0.068165057 ubox
8 67 0.663938197 ubox
8 70 0.011322083 ubox
8 74 0.719537511 ubox
8 76 0.176062237 ubox
8 77 0.049895155 ubox
9 15 0.003740288 ubox
9 66 0.662796811 ubox
9 68 0.066564232 ubox
9 70 0.006995703 ubox
9 73 0.718262590 ubox
9 75 0.184153970 ubox
9 76 0.016320881 ubox
9 78 0.012895895 ubox
10 63 0.004152888 ubox
10 67 0.067805523 ubox
10 70 0.008014173 ubox
10 74 0.182280480 ubox
10 77 0.012797843 ubox
11 63 0.015241503 ubox
11 67 0.007523978 ubox
11 70 0.034080790 ubox
11 74 0.006195346 ubox
11 76 0.011521636 ubox
12 61 0.011674436 ubox
12 63 0.662536191 ubox
12 70 0.310837675 ubox
13 60 0.011751577 ubox
13 62 0.673861870 ubox
13 69 0.311214796 ubox
13 71 0.660922244 ubox
14 61 0.673627121 ubox
14 63 0.054148197 ubox
14 67 0.014074147 ubox
14 70 0.661315532 ubox
15 60 0.672797523 ubox
15 62 0.054627539 ubox
15 69 0.660534045 ubox
15 71 0.008878488 ubox
16 61 0.049009485 ubox
16 63 0.003551459 ubox
16 67 0.042548683 ubox
16 70 0.008036577 ubox
17 35 0.998188076 ubox
17 66 0.019289954 ubox
17 68 0.010558534 ubox
18 34 0.999355705 ubox
18 67 0.007392243 ubox
19 31 0.003473611 ubox
19 32 0.004944945 ubox
19 33 0.999547409 ubox
20 32 0.999663922 ubox
21 30 0.999628147 ubox
22 29 0.999566252 ubox
23 28 0.999241064 ubox
23 30 0.006245009 ubox
24 29 0.004478975 ubox
30 68 0.003283242 ubox
31 67 0.003718466 ubox
32 66 0.003792007 ubox
35 62 0.008769164 ubox
36 41 0.007973514 ubox
36 61 0.015674185 ubox
36 63 0.023469632 ubox
37 41 0.004901558 ubox
37 61 0.066630350 ubox
37 63 0.019819707 ubox
38 61 0.021813678 ubox
38 63 0.006965439 ubox
39 61 0.047736848 ubox
39 63 0.011657048 ubox
39 70 0.005109756 ubox
40 58 0.817664678 ubox
40 60 0.045979952 ubox
40 62 0.009013969 ubox
40 69 0.005280752 ubox
40 79 0.003263134 ubox
41 57 0.980778497 ubox
41 58 0.004502128 ubox
41 59 0.040761350 ubox
42 56 0.994085674 ubox
42 76 0.013877356 ubox
43 55 0.995463333 ubox
43 56 0.020982645 ubox
43 68 0.004636958 ubox
43 75 0.015314222 ubox
44 56 0.032210425 ubox
44 67 0.004640415 ubox
44 74 0.015320559 ubox
45 54 0.999253859 ubox
45 55 0.023209510 ubox
45 66 0.004598619 ubox
45 73 0.015320231 ubox
46 53 0.999609633 ubox
46 65 0.004366018 ubox
46 72 0.015302046 ubox
47 52 0.999286904 ubox
47 58 0.003188231 ubox
47 71 0.015174435 ubox
48 70 0.012125496 ubox
51 67 0.007791610 ubox
52 66 0.007962804 ubox
52 68 0.003886076 ubox
53 61 0.004642520 ubox
53 63 0.005867486 ubox
53 67 0.003803044 ubox
53 70 0.003605848 ubox
54 60 0.004669756 ubox
54 62 0.006022109 ubox
54 69 0.004085012 ubox
55 60 0.004477705 ubox
55 62 0.004820769 ubox
55 71 0.015952859 ubox
56 64 0.004612513 ubox
56 71 0.003490707 ubox
57 63 0.004704150 ubox
57 70 0.004303596 ubox
57 76 0.006051523 ubox
58 66 0.004686405 ubox
58 68 0.565266376 ubox
58 75 0.012506167 ubox
59 63 0.009943203 ubox
59 67 0.621685849 ubox
59 70 0.004001734 ubox
59 74 0.014758644 ubox
59 76 0.005443984 ubox
60 66 0.627887754 ubox
60 67 0.013947680 ubox
60 68 0.070851098 ubox
60 70 0.003932960 ubox
60 73 0.015526978 ubox
60 75 0.006062703 ubox
61 65 0.565701645 ubox
61 69 0.013319844 ubox
61 72 0.015516906 ubox
62 66 0.039627084 ubox
62 67 0.011231457 ubox
62 68 0.091478200 ubox
62 73 0.008430191 ubox
63 71 0.005456283 ubox
63 72 0.008582336 ubox
64 70 0.006570797 ubox
65 70 0.004667181 ubox
66 71 0.033799923 ubox
67 72 0.003500542 ubox
68 79 0.011656636 ubox
69 73 0.017305173 ubox
69 74 0.006319412 ubox
69 75 0.047846862 ubox
69 76 0.006856066 ubox
69 77 0.007464634 ubox
69 78 0.057017078 ubox
70 79 0.090192001 ubox
71 75 0.015635834 ubox
71 76 0.013463981 ubox
71 77 0.012447354 ubox
71 78 0.157338730 ubox
72 76 0.012254349 ubox
72 77 0.141814204 ubox
73 79 0.017990959 ubox
74 79 0.003816151 ubox
75 79 0.006714446 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
