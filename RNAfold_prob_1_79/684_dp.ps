%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (684)
} def

/sequence { (\
GGAAAGAUAAAGAUCGAAAAAAAAAAGAUCAAGAUCGAAAAAAAAAAGAUCAAUAUCAAAAAAAAAAACGGGUGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.013397569 ubox
1 15 0.005346199 ubox
1 51 0.005446495 ubox
1 57 0.032696236 ubox
1 69 0.026724980 ubox
1 75 0.025447873 ubox
1 76 0.022737193 ubox
1 77 0.004231833 ubox
1 78 0.134741359 ubox
2 8 0.005619938 ubox
2 14 0.003762470 ubox
2 15 0.012305759 ubox
2 30 0.003366446 ubox
2 36 0.003887410 ubox
2 50 0.004753300 ubox
2 51 0.008410189 ubox
2 56 0.022121288 ubox
2 57 0.055226490 ubox
2 69 0.014822227 ubox
2 73 0.003748201 ubox
2 75 0.026136900 ubox
2 76 0.005270552 ubox
2 77 0.129796530 ubox
2 78 0.270519311 ubox
3 8 0.009518168 ubox
3 14 0.011715778 ubox
3 29 0.003189427 ubox
3 35 0.003704740 ubox
3 50 0.008182992 ubox
3 54 0.005901002 ubox
3 56 0.051942361 ubox
3 73 0.020077616 ubox
3 76 0.121051046 ubox
3 77 0.258737336 ubox
4 8 0.006433797 ubox
4 54 0.008931670 ubox
4 56 0.004026613 ubox
4 73 0.006394031 ubox
4 76 0.233076232 ubox
4 77 0.107964058 ubox
5 54 0.011821182 ubox
5 56 0.004253344 ubox
5 73 0.014253652 ubox
5 76 0.138511410 ubox
5 77 0.007192907 ubox
6 15 0.069473637 ubox
6 30 0.010110442 ubox
6 36 0.148108255 ubox
6 51 0.009621041 ubox
6 54 0.003498392 ubox
6 56 0.003599708 ubox
6 57 0.840879077 ubox
6 69 0.014622946 ubox
6 73 0.027280342 ubox
6 75 0.158708137 ubox
6 76 0.007589657 ubox
6 77 0.009073868 ubox
6 78 0.065407521 ubox
7 14 0.068955796 ubox
7 29 0.010000327 ubox
7 35 0.148222297 ubox
7 50 0.009541131 ubox
7 54 0.017000892 ubox
7 56 0.841461256 ubox
7 73 0.167292503 ubox
7 76 0.009503616 ubox
7 77 0.062004247 ubox
8 13 0.065129427 ubox
8 28 0.009401070 ubox
8 31 0.008790710 ubox
8 32 0.015603129 ubox
8 34 0.146229363 ubox
8 49 0.009296070 ubox
8 52 0.004865469 ubox
8 53 0.017447214 ubox
8 55 0.839009247 ubox
8 59 0.003446243 ubox
8 60 0.003426681 ubox
8 61 0.003479713 ubox
8 62 0.003643301 ubox
8 63 0.003573965 ubox
8 64 0.003517695 ubox
8 65 0.003581878 ubox
8 66 0.003633454 ubox
8 67 0.004951189 ubox
8 68 0.004554912 ubox
8 70 0.007999064 ubox
8 71 0.018272413 ubox
8 72 0.163726298 ubox
8 74 0.044898405 ubox
8 79 0.007115286 ubox
9 54 0.816625575 ubox
9 73 0.040806180 ubox
9 76 0.007972427 ubox
9 77 0.009972854 ubox
10 54 0.023203773 ubox
10 73 0.008558594 ubox
10 76 0.011658913 ubox
10 77 0.041341474 ubox
11 54 0.008916999 ubox
11 73 0.014095691 ubox
11 76 0.047428686 ubox
11 77 0.003514428 ubox
12 30 0.648978777 ubox
12 36 0.031667417 ubox
12 51 0.748267955 ubox
12 57 0.003379073 ubox
12 69 0.007122744 ubox
12 73 0.010147728 ubox
12 75 0.047363065 ubox
12 78 0.006213472 ubox
13 29 0.649668731 ubox
13 35 0.031705379 ubox
13 50 0.748893478 ubox
13 56 0.003178224 ubox
13 73 0.044884560 ubox
13 77 0.005973988 ubox
14 28 0.649779299 ubox
14 34 0.031714352 ubox
14 38 0.009853907 ubox
14 49 0.748882813 ubox
14 71 0.047758940 ubox
14 72 0.043714101 ubox
15 27 0.649809592 ubox
15 33 0.031705518 ubox
15 37 0.010802450 ubox
15 48 0.748660998 ubox
15 70 0.052754612 ubox
15 71 0.042286739 ubox
15 72 0.013870286 ubox
15 79 0.014408764 ubox
16 30 0.014057888 ubox
16 36 0.011952198 ubox
16 69 0.053619322 ubox
16 78 0.016836394 ubox
17 29 0.013403572 ubox
17 35 0.011289433 ubox
17 77 0.016627504 ubox
18 76 0.014871384 ubox
20 29 0.003688325 ubox
21 73 0.003304568 ubox
25 77 0.006546951 ubox
26 35 0.009045335 ubox
26 76 0.007387851 ubox
27 35 0.003373848 ubox
27 36 0.739003993 ubox
27 51 0.016808775 ubox
27 57 0.110482746 ubox
27 75 0.007492615 ubox
28 35 0.729251521 ubox
28 50 0.016826280 ubox
28 54 0.005794552 ubox
28 56 0.110432616 ubox
28 73 0.006461067 ubox
29 33 0.026290082 ubox
29 34 0.666237310 ubox
29 38 0.033255280 ubox
29 49 0.016826650 ubox
29 53 0.006143984 ubox
29 55 0.105219002 ubox
29 72 0.006492128 ubox
30 37 0.034141681 ubox
30 48 0.016813607 ubox
30 71 0.006486792 ubox
30 72 0.003641070 ubox
31 54 0.019569421 ubox
31 56 0.003987466 ubox
31 77 0.019097335 ubox
32 54 0.015350393 ubox
32 56 0.005752377 ubox
32 76 0.021646135 ubox
33 51 0.641111282 ubox
33 57 0.011306406 ubox
33 75 0.021810382 ubox
33 78 0.003387583 ubox
34 50 0.641766253 ubox
34 56 0.011191232 ubox
34 73 0.020240309 ubox
34 77 0.003280315 ubox
35 49 0.641871960 ubox
35 55 0.010491274 ubox
35 71 0.011457870 ubox
35 72 0.019983581 ubox
36 48 0.641903671 ubox
36 70 0.014650252 ubox
36 71 0.019663731 ubox
36 72 0.008981558 ubox
36 79 0.009776905 ubox
37 51 0.022166180 ubox
37 57 0.012811199 ubox
37 69 0.015411425 ubox
37 78 0.018206049 ubox
38 50 0.021100476 ubox
38 56 0.012160776 ubox
38 77 0.017922982 ubox
39 76 0.015687759 ubox
40 54 0.003398495 ubox
42 73 0.004314898 ubox
45 77 0.009107624 ubox
46 76 0.009819072 ubox
46 77 0.044223469 ubox
47 54 0.006334056 ubox
47 56 0.004390333 ubox
47 76 0.049565963 ubox
48 57 0.086443482 ubox
48 69 0.003758877 ubox
48 75 0.050338160 ubox
48 77 0.003795266 ubox
48 78 0.029521250 ubox
49 56 0.085026486 ubox
49 73 0.046149014 ubox
49 76 0.004084001 ubox
49 77 0.029238636 ubox
50 55 0.075391813 ubox
50 71 0.006451945 ubox
50 72 0.046331428 ubox
51 70 0.008054434 ubox
51 71 0.046217242 ubox
51 72 0.024308477 ubox
51 74 0.011702638 ubox
52 56 0.006264418 ubox
52 73 0.011047424 ubox
52 76 0.024273834 ubox
52 77 0.029671280 ubox
53 73 0.020647810 ubox
53 76 0.033792470 ubox
53 77 0.006030442 ubox
54 58 0.007226598 ubox
54 59 0.013840879 ubox
54 60 0.012784522 ubox
54 61 0.016403644 ubox
54 62 0.010209570 ubox
54 63 0.015262664 ubox
54 64 0.007718086 ubox
54 65 0.007499168 ubox
54 66 0.007156210 ubox
54 67 0.007359051 ubox
54 68 0.016062659 ubox
54 70 0.004911831 ubox
54 71 0.004962577 ubox
54 72 0.020086096 ubox
54 74 0.163052733 ubox
55 73 0.182707871 ubox
55 76 0.003871361 ubox
56 60 0.007461719 ubox
56 61 0.011200046 ubox
56 62 0.010353760 ubox
56 63 0.013351656 ubox
56 64 0.008525696 ubox
56 65 0.013865551 ubox
56 66 0.008635932 ubox
56 67 0.006979463 ubox
56 68 0.005235200 ubox
56 70 0.004340029 ubox
56 71 0.037691042 ubox
56 72 0.183787893 ubox
57 70 0.050392857 ubox
57 71 0.184474587 ubox
57 72 0.011456649 ubox
57 74 0.021155934 ubox
57 79 0.003704981 ubox
58 73 0.020002535 ubox
58 76 0.004087365 ubox
58 77 0.009764757 ubox
59 73 0.007296448 ubox
59 76 0.010187774 ubox
59 77 0.011555900 ubox
60 73 0.007873665 ubox
60 76 0.011978250 ubox
60 77 0.013051983 ubox
61 73 0.008726709 ubox
61 76 0.013588008 ubox
61 77 0.013200740 ubox
62 73 0.009952629 ubox
62 76 0.013617214 ubox
62 77 0.014937921 ubox
63 73 0.010947836 ubox
63 76 0.015647828 ubox
63 77 0.015403580 ubox
64 73 0.022762020 ubox
64 76 0.016056043 ubox
64 77 0.017038390 ubox
65 73 0.015183385 ubox
65 76 0.017819032 ubox
65 77 0.017720828 ubox
66 73 0.024711609 ubox
66 76 0.018301858 ubox
66 77 0.039831572 ubox
67 73 0.019375297 ubox
67 76 0.042836624 ubox
67 77 0.036649551 ubox
68 73 0.017867664 ubox
68 76 0.039752904 ubox
68 77 0.023136256 ubox
69 74 0.083246698 ubox
69 79 0.515269475 ubox
70 75 0.169204750 ubox
70 76 0.055905111 ubox
70 77 0.023640934 ubox
70 78 0.539741310 ubox
71 75 0.060472470 ubox
71 76 0.029827628 ubox
71 77 0.500181821 ubox
71 78 0.234169679 ubox
72 76 0.324988451 ubox
72 77 0.210391778 ubox
72 78 0.091560089 ubox
73 79 0.022312729 ubox
74 78 0.036383079 ubox
75 79 0.010418972 ubox
6 57 0.9500000 lbox
7 56 0.9500000 lbox
8 55 0.9500000 lbox
9 54 0.9500000 lbox
12 51 0.9500000 lbox
13 50 0.9500000 lbox
14 49 0.9500000 lbox
15 48 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
showpage
end
%%EOF
