%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (937)
} def

/sequence { (\
GGAAAAUAACAGUCCAAAAGGACACCAUCGCGGAAAAAAACCGCGAUGGAGAUGAAAACAUCAGUUAUGGUACGUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.006041950 ubox
1 10 0.073964093 ubox
1 15 0.010644375 ubox
1 71 0.037637875 ubox
1 73 0.484498500 ubox
1 75 0.018299781 ubox
1 76 0.014650565 ubox
1 77 0.026845529 ubox
1 78 0.360582459 ubox
2 7 0.003544172 ubox
2 10 0.012761286 ubox
2 14 0.010651022 ubox
2 66 0.006373516 ubox
2 68 0.003863334 ubox
2 71 0.045421894 ubox
2 73 0.184531707 ubox
2 75 0.020580858 ubox
2 76 0.041995506 ubox
2 77 0.359182845 ubox
2 78 0.532148723 ubox
3 7 0.003719655 ubox
3 13 0.010089419 ubox
3 65 0.006066162 ubox
3 66 0.005047030 ubox
3 68 0.008122316 ubox
3 71 0.248431786 ubox
3 75 0.045014630 ubox
3 76 0.355313844 ubox
3 77 0.531335908 ubox
4 65 0.004645259 ubox
4 66 0.005042399 ubox
4 68 0.010970209 ubox
4 71 0.077876823 ubox
4 75 0.328518688 ubox
4 76 0.522448160 ubox
4 77 0.050081847 ubox
5 65 0.004686178 ubox
5 66 0.017670883 ubox
5 68 0.030819753 ubox
5 71 0.044964097 ubox
5 75 0.501790803 ubox
5 76 0.063934599 ubox
5 77 0.008422252 ubox
6 53 0.004441976 ubox
6 65 0.018932659 ubox
6 68 0.810172010 ubox
6 71 0.042242520 ubox
6 75 0.072424337 ubox
6 76 0.007898926 ubox
6 77 0.007335107 ubox
7 11 0.006458441 ubox
7 24 0.003983441 ubox
7 52 0.004504203 ubox
7 64 0.018548468 ubox
7 67 0.829494352 ubox
7 69 0.020758830 ubox
7 70 0.037154387 ubox
7 72 0.187480161 ubox
7 74 0.076589175 ubox
7 79 0.003438790 ubox
8 65 0.003262990 ubox
8 66 0.832659560 ubox
8 68 0.017766775 ubox
8 71 0.149725726 ubox
8 75 0.005012734 ubox
8 76 0.066283807 ubox
8 77 0.005481218 ubox
9 65 0.833092528 ubox
9 66 0.004018239 ubox
9 68 0.009500897 ubox
9 71 0.255557122 ubox
9 75 0.083030159 ubox
9 76 0.005076917 ubox
10 51 0.006809517 ubox
10 54 0.005810952 ubox
10 64 0.832360001 ubox
10 69 0.304024060 ubox
10 70 0.263064398 ubox
10 74 0.086223919 ubox
10 79 0.011021136 ubox
11 53 0.005361580 ubox
11 65 0.005831729 ubox
11 66 0.009806154 ubox
11 68 0.275278826 ubox
11 71 0.005829368 ubox
12 23 0.998029884 ubox
12 68 0.003762070 ubox
12 73 0.013059705 ubox
13 22 0.999374701 ubox
13 67 0.003186269 ubox
13 72 0.012884055 ubox
14 21 0.999779647 ubox
14 70 0.014699359 ubox
15 20 0.998338959 ubox
15 69 0.014704609 ubox
16 68 0.013311859 ubox
18 66 0.005140567 ubox
19 65 0.004644314 ubox
21 66 0.007886956 ubox
21 76 0.003442933 ubox
22 65 0.008386230 ubox
22 75 0.003622762 ubox
23 51 0.007436783 ubox
23 64 0.008470433 ubox
23 74 0.003738519 ubox
24 53 0.004966490 ubox
25 48 0.005748813 ubox
25 49 0.993352851 ubox
26 48 0.999921587 ubox
26 49 0.004616141 ubox
27 47 0.999589269 ubox
28 46 0.999747751 ubox
29 45 0.999969035 ubox
30 44 0.999981701 ubox
31 43 0.999981463 ubox
32 41 0.014688816 ubox
32 42 0.999814702 ubox
33 41 0.997481094 ubox
33 42 0.006544505 ubox
49 62 0.005084665 ubox
49 66 0.004853811 ubox
49 78 0.064451261 ubox
50 61 0.005810218 ubox
50 65 0.012656387 ubox
50 66 0.024329511 ubox
50 68 0.007169764 ubox
50 77 0.071694553 ubox
51 59 0.012279063 ubox
51 62 0.970668830 ubox
51 65 0.017558086 ubox
51 66 0.019834190 ubox
51 73 0.015923428 ubox
51 76 0.074593167 ubox
51 78 0.019362997 ubox
52 61 0.971783718 ubox
52 65 0.019871519 ubox
52 68 0.010701684 ubox
52 71 0.029959816 ubox
52 75 0.075251339 ubox
52 77 0.018307016 ubox
53 58 0.010637704 ubox
53 60 0.971225713 ubox
53 63 0.080031242 ubox
53 64 0.013963688 ubox
53 67 0.011144024 ubox
53 70 0.030422651 ubox
53 74 0.075308220 ubox
53 79 0.100237256 ubox
54 59 0.965706968 ubox
54 62 0.088469985 ubox
54 66 0.010739783 ubox
54 73 0.074798036 ubox
54 75 0.005129847 ubox
54 76 0.008253289 ubox
54 77 0.015411888 ubox
54 78 0.162660197 ubox
55 61 0.084761218 ubox
55 65 0.009667615 ubox
55 66 0.003360373 ubox
55 68 0.030072028 ubox
55 71 0.009192810 ubox
55 75 0.008885861 ubox
55 76 0.018933965 ubox
55 77 0.153979476 ubox
56 61 0.006644178 ubox
56 65 0.003393660 ubox
56 66 0.003361993 ubox
56 68 0.004023605 ubox
56 71 0.019681060 ubox
56 75 0.020397412 ubox
56 76 0.143266473 ubox
56 77 0.068422557 ubox
57 66 0.049377948 ubox
57 71 0.007906832 ubox
57 75 0.125772851 ubox
57 76 0.089416874 ubox
58 65 0.052830584 ubox
58 71 0.022215242 ubox
58 75 0.105062807 ubox
59 64 0.053125108 ubox
59 69 0.060824456 ubox
59 70 0.021390997 ubox
59 74 0.116900900 ubox
60 66 0.003698278 ubox
60 68 0.060575033 ubox
60 71 0.169268591 ubox
61 67 0.057265969 ubox
61 70 0.184972527 ubox
61 72 0.005367805 ubox
62 69 0.189923283 ubox
62 70 0.011572766 ubox
62 74 0.004310539 ubox
63 68 0.185217656 ubox
63 71 0.012973960 ubox
63 75 0.010544452 ubox
64 68 0.006907608 ubox
64 71 0.009007831 ubox
64 73 0.204850970 ubox
64 78 0.030356672 ubox
65 69 0.010943984 ubox
65 70 0.006734354 ubox
65 72 0.201664266 ubox
65 74 0.005611969 ubox
66 70 0.009574322 ubox
66 72 0.016805534 ubox
66 74 0.004349773 ubox
67 71 0.017781392 ubox
67 75 0.042134102 ubox
67 76 0.004693508 ubox
68 72 0.004258499 ubox
68 74 0.046207002 ubox
68 79 0.043286969 ubox
69 73 0.054075039 ubox
69 75 0.013029465 ubox
69 76 0.011932872 ubox
69 77 0.015833544 ubox
69 78 0.161656194 ubox
70 75 0.011022885 ubox
70 76 0.019999429 ubox
70 77 0.150251169 ubox
70 78 0.047071319 ubox
71 79 0.003499078 ubox
72 76 0.009142120 ubox
72 77 0.009105109 ubox
73 79 0.068113853 ubox
74 78 0.070447590 ubox
75 79 0.004649434 ubox
1 73 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
showpage
end
%%EOF
