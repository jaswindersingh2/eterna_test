%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (365)
} def

/sequence { (\
GGAAAGAUCGGAGGAAAAACUCCGCCAAAGGCAGAUCAGGCAGUCGAAAAGACGAUCGAAAGAUCGCCGCGCUGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.009497651 ubox
1 9 0.030452881 ubox
1 23 0.006992624 ubox
1 25 0.012956919 ubox
1 26 0.455087522 ubox
1 32 0.024120047 ubox
1 37 0.012804926 ubox
1 78 0.089171940 ubox
2 8 0.022720111 ubox
2 9 0.077504276 ubox
2 22 0.006987572 ubox
2 25 0.455129514 ubox
2 26 0.015572072 ubox
2 32 0.010806161 ubox
2 36 0.007518577 ubox
2 37 0.018922698 ubox
2 77 0.067183341 ubox
2 78 0.124237083 ubox
3 8 0.071514515 ubox
3 21 0.006790232 ubox
3 36 0.017615708 ubox
3 76 0.046434503 ubox
3 77 0.112777003 ubox
4 8 0.006273095 ubox
4 76 0.064073380 ubox
4 77 0.007940688 ubox
5 76 0.006562043 ubox
5 77 0.004595899 ubox
6 25 0.068197430 ubox
6 26 0.148793784 ubox
6 32 0.003476655 ubox
6 37 0.726249135 ubox
6 75 0.004320935 ubox
6 78 0.045108351 ubox
7 36 0.726987571 ubox
7 77 0.037277885 ubox
8 15 0.006573854 ubox
8 24 0.013708040 ubox
8 27 0.025990600 ubox
8 28 0.020099106 ubox
8 29 0.007603340 ubox
8 35 0.726996876 ubox
9 14 0.006753625 ubox
9 24 0.647563414 ubox
9 34 0.725890598 ubox
9 79 0.005725699 ubox
10 23 0.996605506 ubox
10 26 0.070777731 ubox
11 22 0.997225459 ubox
11 25 0.070729555 ubox
12 21 0.997065171 ubox
13 20 0.996602874 ubox
13 21 0.005683736 ubox
13 23 0.073612064 ubox
14 20 0.012865178 ubox
14 22 0.073773088 ubox
15 21 0.071457250 ubox
16 21 0.003562160 ubox
24 32 0.741274423 ubox
24 72 0.003892019 ubox
24 75 0.004241817 ubox
24 78 0.013193070 ubox
25 30 0.011896421 ubox
25 31 0.742306710 ubox
25 34 0.003566977 ubox
25 71 0.003928408 ubox
25 74 0.004258505 ubox
25 79 0.034212327 ubox
26 30 0.736933250 ubox
26 31 0.008104356 ubox
26 34 0.004203661 ubox
26 79 0.042488840 ubox
27 77 0.018266184 ubox
28 76 0.009744858 ubox
28 77 0.054256793 ubox
29 76 0.052323453 ubox
29 77 0.551382670 ubox
30 37 0.012184113 ubox
30 68 0.009779916 ubox
30 75 0.037532240 ubox
30 76 0.649556447 ubox
30 77 0.015635614 ubox
30 78 0.017439022 ubox
31 36 0.008305437 ubox
31 67 0.009789352 ubox
31 75 0.663636374 ubox
31 77 0.004017753 ubox
31 78 0.003452731 ubox
32 66 0.009757979 ubox
32 74 0.664779164 ubox
33 73 0.664590962 ubox
34 65 0.009766008 ubox
34 72 0.664170402 ubox
34 78 0.052811099 ubox
35 64 0.009776104 ubox
35 77 0.049722646 ubox
36 63 0.009772818 ubox
36 69 0.007518144 ubox
36 71 0.119463327 ubox
36 79 0.020992384 ubox
37 62 0.009748987 ubox
37 69 0.265486597 ubox
37 71 0.052843354 ubox
37 74 0.003807108 ubox
37 79 0.031811210 ubox
38 73 0.003965762 ubox
38 76 0.024887270 ubox
38 77 0.601274397 ubox
39 67 0.003568556 ubox
39 68 0.664622037 ubox
39 72 0.003934884 ubox
39 75 0.019087451 ubox
39 76 0.728444155 ubox
39 77 0.018515718 ubox
39 78 0.020178235 ubox
40 67 0.664833003 ubox
40 70 0.005227654 ubox
40 75 0.746478995 ubox
40 77 0.003473097 ubox
41 58 0.007841847 ubox
41 66 0.663982790 ubox
41 69 0.005238892 ubox
41 74 0.746817832 ubox
42 64 0.005214326 ubox
42 73 0.746624543 ubox
42 76 0.003287019 ubox
43 53 0.660314417 ubox
43 56 0.012705574 ubox
43 64 0.052463210 ubox
43 65 0.009140626 ubox
43 70 0.004016753 ubox
43 72 0.746598877 ubox
43 75 0.003402838 ubox
44 52 0.661553636 ubox
44 55 0.013584169 ubox
44 59 0.025027938 ubox
44 63 0.052776995 ubox
44 71 0.411699516 ubox
44 74 0.003239463 ubox
45 51 0.662071587 ubox
45 54 0.014044261 ubox
45 58 0.025902156 ubox
45 62 0.052520677 ubox
45 69 0.343687605 ubox
45 71 0.619819510 ubox
46 53 0.016284839 ubox
46 57 0.027066885 ubox
46 67 0.021267343 ubox
46 68 0.342236209 ubox
46 70 0.631401726 ubox
46 72 0.004588333 ubox
47 56 0.026680586 ubox
50 56 0.004060886 ubox
51 57 0.041585823 ubox
51 65 0.012586267 ubox
51 67 0.618828102 ubox
51 68 0.216564311 ubox
51 70 0.022280520 ubox
52 56 0.036196673 ubox
52 64 0.011930421 ubox
53 62 0.009300094 ubox
53 66 0.745198337 ubox
53 69 0.003527833 ubox
54 65 0.997378370 ubox
55 64 0.997701089 ubox
56 63 0.997755691 ubox
57 62 0.997565077 ubox
57 66 0.003568254 ubox
58 65 0.010939202 ubox
59 64 0.010005600 ubox
66 72 0.007149169 ubox
67 71 0.007227529 ubox
69 75 0.008564520 ubox
70 74 0.008513804 ubox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
38 77 0.9500000 lbox
39 76 0.9500000 lbox
40 75 0.9500000 lbox
41 74 0.9500000 lbox
42 73 0.9500000 lbox
43 72 0.9500000 lbox
45 71 0.9500000 lbox
46 70 0.9500000 lbox
51 67 0.9500000 lbox
53 66 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
showpage
end
%%EOF
