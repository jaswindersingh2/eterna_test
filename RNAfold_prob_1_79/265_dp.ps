%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (265)
} def

/sequence { (\
GGAAAAAACUACACGUCGGAAACGACAGAGUGCUGAAAGUGGCGAAAGGCACGCAGUGCUCACGUAGACAAUAGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.053209959 ubox
1 10 0.065453500 ubox
1 12 0.051956329 ubox
1 14 0.045546435 ubox
1 63 0.018701036 ubox
1 69 0.024540154 ubox
1 72 0.014373333 ubox
1 75 0.197558195 ubox
1 76 0.169735439 ubox
1 77 0.012319275 ubox
1 78 0.222382076 ubox
2 9 0.069586503 ubox
2 10 0.006781081 ubox
2 12 0.021558501 ubox
2 14 0.014303481 ubox
2 63 0.011299867 ubox
2 69 0.018679380 ubox
2 72 0.015583641 ubox
2 75 0.195799878 ubox
2 76 0.012857812 ubox
2 77 0.219328431 ubox
2 78 0.238950906 ubox
3 10 0.016453618 ubox
3 72 0.029854792 ubox
3 76 0.209041436 ubox
3 77 0.237671149 ubox
4 10 0.013038216 ubox
4 72 0.081136909 ubox
4 76 0.217349405 ubox
4 77 0.014078163 ubox
5 10 0.012929341 ubox
5 72 0.085697541 ubox
5 76 0.016680496 ubox
5 77 0.010493013 ubox
6 10 0.006381416 ubox
6 72 0.050269353 ubox
6 76 0.011655830 ubox
6 77 0.023732572 ubox
7 72 0.033450892 ubox
7 76 0.026194888 ubox
7 77 0.020297524 ubox
8 16 0.003843684 ubox
8 31 0.007023128 ubox
8 65 0.032318805 ubox
8 72 0.050770096 ubox
8 76 0.022583968 ubox
8 77 0.006088666 ubox
9 15 0.004506232 ubox
9 30 0.007253593 ubox
9 64 0.033489333 ubox
9 67 0.911673105 ubox
9 74 0.072977111 ubox
9 79 0.008624875 ubox
10 27 0.006581215 ubox
10 29 0.007208135 ubox
10 62 0.004203669 ubox
10 66 0.917332108 ubox
10 67 0.005222969 ubox
10 68 0.010817875 ubox
10 70 0.005459596 ubox
10 71 0.004157077 ubox
10 73 0.072744807 ubox
11 65 0.917572098 ubox
11 72 0.067637219 ubox
12 28 0.004428829 ubox
12 64 0.916462316 ubox
12 67 0.029675345 ubox
12 74 0.009937745 ubox
12 79 0.009439597 ubox
13 65 0.051098178 ubox
14 24 0.015297781 ubox
14 28 0.012510154 ubox
14 64 0.054081932 ubox
14 67 0.012823784 ubox
14 74 0.009308638 ubox
14 79 0.009774942 ubox
15 23 0.015588957 ubox
15 26 0.997070283 ubox
15 63 0.023326283 ubox
15 69 0.036532466 ubox
16 22 0.015022176 ubox
16 25 0.998493759 ubox
16 62 0.017617291 ubox
16 68 0.036612956 ubox
17 24 0.999034773 ubox
17 67 0.036535503 ubox
18 23 0.996286920 ubox
18 26 0.003547090 ubox
18 69 0.006060485 ubox
19 23 0.007151448 ubox
19 65 0.003772159 ubox
21 65 0.004754118 ubox
22 65 0.032789496 ubox
23 64 0.038420017 ubox
24 63 0.038411426 ubox
25 65 0.004919080 ubox
26 64 0.005425906 ubox
27 65 0.005466897 ubox
28 61 0.998314988 ubox
28 63 0.009574968 ubox
28 78 0.015171972 ubox
29 60 0.999512196 ubox
29 77 0.015158642 ubox
30 59 0.999811989 ubox
30 76 0.014033773 ubox
31 58 0.997782633 ubox
32 57 0.997783708 ubox
32 75 0.017624271 ubox
33 56 0.999812764 ubox
33 74 0.017644568 ubox
34 55 0.999182755 ubox
34 73 0.017540703 ubox
35 54 0.992142233 ubox
35 72 0.016267877 ubox
39 50 0.035177066 ubox
39 52 0.991764820 ubox
39 54 0.048721471 ubox
39 69 0.010290892 ubox
40 49 0.035110974 ubox
40 51 0.994879877 ubox
40 53 0.059902378 ubox
40 67 0.004433729 ubox
40 68 0.010164163 ubox
41 50 0.989180988 ubox
41 52 0.060237394 ubox
42 50 0.139745938 ubox
42 65 0.017363187 ubox
43 48 0.971853239 ubox
43 49 0.176951034 ubox
43 64 0.017601546 ubox
44 63 0.017469797 ubox
47 60 0.003793961 ubox
48 60 0.016159582 ubox
48 61 0.004415894 ubox
49 59 0.017629918 ubox
50 58 0.017842392 ubox
51 57 0.017804516 ubox
52 56 0.017629648 ubox
62 76 0.014957049 ubox
62 77 0.013591507 ubox
63 67 0.011357094 ubox
63 74 0.032616114 ubox
63 79 0.195059173 ubox
64 69 0.032220414 ubox
64 72 0.021217910 ubox
64 75 0.144143661 ubox
64 77 0.007264232 ubox
64 78 0.203824691 ubox
65 70 0.006546605 ubox
65 71 0.021848904 ubox
65 73 0.044283348 ubox
65 74 0.141983005 ubox
65 79 0.003734489 ubox
66 72 0.050542879 ubox
66 76 0.191359096 ubox
66 77 0.033633488 ubox
67 72 0.016640951 ubox
67 75 0.205325277 ubox
67 76 0.033350818 ubox
67 77 0.014175067 ubox
67 78 0.080133448 ubox
68 72 0.016292271 ubox
68 76 0.020102638 ubox
68 77 0.079913129 ubox
69 74 0.182226763 ubox
69 79 0.029365752 ubox
70 76 0.016324815 ubox
70 77 0.033530603 ubox
71 76 0.031509948 ubox
71 77 0.029165203 ubox
72 79 0.011701689 ubox
73 77 0.007295857 ubox
74 78 0.033523105 ubox
75 79 0.012724978 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
31 58 0.9500000 lbox
32 57 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
