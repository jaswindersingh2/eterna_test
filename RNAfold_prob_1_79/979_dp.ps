%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (979)
} def

/sequence { (\
GGAAAAGAAUGGCAUCAAAACCGAAAAGGAUUGGCAGGAAACUGGCAAUCAGGGAUGGCAUUCAAAAAGAUAUCCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 22 0.019109103 ubox
1 63 0.005859434 ubox
1 71 0.013059478 ubox
1 74 0.008398030 ubox
1 75 0.338564427 ubox
1 76 0.008966673 ubox
1 78 0.058113422 ubox
2 21 0.019087130 ubox
2 62 0.004994512 ubox
2 63 0.010070734 ubox
2 71 0.005393546 ubox
2 73 0.007617507 ubox
2 74 0.339113240 ubox
2 75 0.010150125 ubox
2 77 0.052835372 ubox
2 78 0.077738503 ubox
3 61 0.003794941 ubox
3 62 0.009533734 ubox
3 71 0.007195045 ubox
3 73 0.330546741 ubox
3 76 0.048647688 ubox
3 77 0.074503137 ubox
4 61 0.006161237 ubox
4 71 0.038020702 ubox
4 73 0.018377317 ubox
4 76 0.062580928 ubox
4 77 0.005278929 ubox
5 71 0.092791194 ubox
5 73 0.006285833 ubox
5 76 0.005770597 ubox
5 77 0.007790454 ubox
6 71 0.046328365 ubox
6 73 0.020991485 ubox
6 76 0.009190206 ubox
7 16 0.019091819 ubox
7 62 0.004908739 ubox
7 63 0.997088725 ubox
7 71 0.004065864 ubox
7 74 0.006052124 ubox
7 75 0.006197894 ubox
7 78 0.008323229 ubox
8 15 0.018036875 ubox
8 61 0.003871095 ubox
8 62 0.998157443 ubox
8 73 0.005566134 ubox
8 77 0.007568178 ubox
9 61 0.998012953 ubox
9 76 0.004361133 ubox
10 17 0.005429971 ubox
10 23 0.019193159 ubox
10 60 0.998619677 ubox
11 16 0.005956424 ubox
11 22 0.031372950 ubox
11 59 0.998840584 ubox
12 21 0.031370384 ubox
12 59 0.008794845 ubox
13 57 0.998793381 ubox
13 58 0.009369862 ubox
14 56 0.998524770 ubox
15 24 0.013334222 ubox
15 53 0.004432551 ubox
15 54 0.026063304 ubox
15 55 0.997917600 ubox
15 58 0.005593604 ubox
16 23 0.017285497 ubox
16 28 0.004147014 ubox
16 52 0.006672658 ubox
16 53 0.049493255 ubox
16 54 0.986225176 ubox
16 57 0.006839772 ubox
17 56 0.006999921 ubox
18 32 0.008809038 ubox
19 31 0.011485081 ubox
19 32 0.006298410 ubox
19 56 0.004173590 ubox
20 31 0.008371021 ubox
20 49 0.003514799 ubox
21 28 0.131319979 ubox
21 29 0.170775058 ubox
21 34 0.006844346 ubox
21 52 0.020467570 ubox
21 53 0.356640175 ubox
21 54 0.143806140 ubox
21 58 0.007236153 ubox
22 28 0.321908533 ubox
22 29 0.022443751 ubox
22 33 0.006897755 ubox
22 52 0.354909499 ubox
22 53 0.176672752 ubox
22 54 0.010752119 ubox
22 57 0.007260540 ubox
22 79 0.006377387 ubox
23 32 0.006864349 ubox
23 50 0.042657363 ubox
23 56 0.006558878 ubox
23 78 0.007797693 ubox
24 31 0.006439300 ubox
24 49 0.037852249 ubox
24 77 0.007086414 ubox
25 49 0.013855281 ubox
25 76 0.004015159 ubox
26 49 0.005292696 ubox
27 49 0.004257338 ubox
28 49 0.003780190 ubox
28 50 0.042205422 ubox
29 49 0.022981026 ubox
29 50 0.980878585 ubox
30 49 0.995547455 ubox
31 48 0.997936265 ubox
32 47 0.999177654 ubox
33 46 0.999746439 ubox
34 46 0.008851363 ubox
35 44 0.999773447 ubox
35 45 0.008563299 ubox
36 43 0.999601732 ubox
37 42 0.998934029 ubox
37 43 0.004703336 ubox
38 42 0.008517846 ubox
42 52 0.004031789 ubox
43 51 0.004048153 ubox
44 50 0.004051066 ubox
51 77 0.033090090 ubox
52 76 0.041178819 ubox
53 75 0.042853295 ubox
54 74 0.042878680 ubox
54 78 0.003689700 ubox
55 73 0.042873446 ubox
55 77 0.003602635 ubox
56 72 0.042703161 ubox
57 71 0.039250770 ubox
57 75 0.004587507 ubox
58 74 0.004589694 ubox
59 69 0.022692033 ubox
60 71 0.004845135 ubox
61 67 0.011423790 ubox
61 68 0.020241932 ubox
61 70 0.006310186 ubox
62 66 0.010065336 ubox
62 67 0.017868521 ubox
62 68 0.003253078 ubox
62 69 0.005941128 ubox
62 70 0.019596976 ubox
63 69 0.021828604 ubox
64 71 0.029393077 ubox
64 73 0.014597568 ubox
64 76 0.005937542 ubox
64 77 0.016884954 ubox
65 71 0.027128261 ubox
65 73 0.010582167 ubox
65 76 0.017349439 ubox
65 77 0.018720135 ubox
66 71 0.029565240 ubox
66 73 0.016883290 ubox
66 76 0.017797696 ubox
66 77 0.043615891 ubox
67 71 0.018192889 ubox
67 73 0.013367760 ubox
67 76 0.044701757 ubox
67 77 0.310751098 ubox
68 73 0.031081732 ubox
68 76 0.346420782 ubox
68 77 0.029655236 ubox
69 73 0.009088248 ubox
69 74 0.071519414 ubox
69 75 0.350825544 ubox
69 76 0.029584402 ubox
69 77 0.030919260 ubox
69 78 0.508939578 ubox
70 76 0.032448747 ubox
70 77 0.502558629 ubox
71 79 0.006042291 ubox
72 76 0.013764320 ubox
72 77 0.020154590 ubox
73 79 0.006284603 ubox
74 79 0.019589330 ubox
75 79 0.011143135 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
