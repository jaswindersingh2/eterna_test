%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (368)
} def

/sequence { (\
GGAAAGGUUUUUAUUUUUAUGAAAUGAGAGGAAAUAUAAAAAUAUUUUUUUUUAAUGGGAAUGGGAAUUAUAUACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 69 0.007634824 ubox
1 71 0.016072015 ubox
1 73 0.057695293 ubox
1 75 0.189282380 ubox
1 76 0.104256444 ubox
1 77 0.010203446 ubox
1 78 0.225072665 ubox
2 11 0.003508054 ubox
2 68 0.004000570 ubox
2 69 0.018046327 ubox
2 71 0.043762832 ubox
2 73 0.073832817 ubox
2 75 0.120059748 ubox
2 76 0.012178405 ubox
2 77 0.221652638 ubox
2 78 0.276840559 ubox
3 10 0.003738938 ubox
3 68 0.012678455 ubox
3 69 0.022712965 ubox
3 71 0.050707208 ubox
3 73 0.069845493 ubox
3 76 0.212043766 ubox
3 77 0.255726685 ubox
4 9 0.003358409 ubox
4 68 0.013608095 ubox
4 69 0.033638430 ubox
4 71 0.223883052 ubox
4 73 0.085375255 ubox
4 76 0.212079015 ubox
4 77 0.148504744 ubox
5 68 0.021246670 ubox
5 69 0.065067910 ubox
5 71 0.128857524 ubox
5 73 0.067077463 ubox
5 76 0.190571463 ubox
5 77 0.064997015 ubox
6 15 0.003169297 ubox
6 68 0.051951207 ubox
6 69 0.843257654 ubox
6 71 0.036611615 ubox
6 73 0.056125419 ubox
6 75 0.216920001 ubox
6 76 0.086323734 ubox
6 77 0.004793551 ubox
6 78 0.018027206 ubox
7 14 0.003175954 ubox
7 62 0.004054527 ubox
7 68 0.970680344 ubox
7 69 0.039571709 ubox
7 71 0.030639951 ubox
7 73 0.034826272 ubox
7 75 0.091516457 ubox
7 77 0.010787788 ubox
7 78 0.005150353 ubox
8 61 0.004195963 ubox
8 66 0.008996087 ubox
8 67 0.982610119 ubox
8 70 0.026149085 ubox
8 72 0.032508251 ubox
8 74 0.086732340 ubox
9 24 0.005254935 ubox
9 29 0.003428098 ubox
9 60 0.004262959 ubox
9 65 0.008619755 ubox
9 66 0.988251546 ubox
9 67 0.017243467 ubox
9 70 0.004935549 ubox
9 72 0.100770101 ubox
10 23 0.006095288 ubox
10 28 0.003539639 ubox
10 59 0.004266880 ubox
10 64 0.007429014 ubox
10 65 0.988114083 ubox
10 66 0.017433808 ubox
10 67 0.004902450 ubox
10 70 0.010444372 ubox
10 72 0.022816019 ubox
11 22 0.006306617 ubox
11 27 0.004090844 ubox
11 58 0.004252476 ubox
11 63 0.005575588 ubox
11 64 0.985189343 ubox
11 65 0.014726270 ubox
11 66 0.004690693 ubox
11 67 0.003362600 ubox
11 70 0.049690084 ubox
11 72 0.004456542 ubox
12 21 0.006347580 ubox
12 26 0.004174444 ubox
12 57 0.004260899 ubox
12 63 0.987927822 ubox
12 64 0.010904112 ubox
12 65 0.003775701 ubox
12 70 0.031468599 ubox
12 72 0.003417047 ubox
13 20 0.006324387 ubox
13 25 0.004213869 ubox
13 56 0.004255164 ubox
13 62 0.989397918 ubox
13 68 0.131491019 ubox
13 69 0.023659299 ubox
14 19 0.006139879 ubox
14 24 0.004231183 ubox
14 55 0.004206775 ubox
14 61 0.989359121 ubox
14 67 0.136872552 ubox
15 23 0.004249430 ubox
15 59 0.003480796 ubox
15 60 0.989530957 ubox
15 61 0.006858501 ubox
15 66 0.137623606 ubox
15 67 0.006380007 ubox
16 22 0.004215019 ubox
16 58 0.004219891 ubox
16 59 0.988745268 ubox
16 60 0.009268920 ubox
16 61 0.003389732 ubox
16 65 0.137583498 ubox
16 66 0.006451505 ubox
17 21 0.003816907 ubox
17 57 0.004307969 ubox
17 58 0.985024768 ubox
17 59 0.010810071 ubox
17 60 0.004908183 ubox
17 64 0.137132129 ubox
17 65 0.005816301 ubox
18 55 0.003547538 ubox
18 57 0.986855696 ubox
18 58 0.011175928 ubox
18 59 0.005443337 ubox
18 63 0.137429529 ubox
18 64 0.004922440 ubox
19 56 0.985556726 ubox
19 62 0.137399688 ubox
20 54 0.038503999 ubox
20 55 0.972531996 ubox
20 57 0.013887848 ubox
20 58 0.014950275 ubox
20 59 0.007862248 ubox
20 60 0.010809345 ubox
20 61 0.135425026 ubox
21 52 0.006750590 ubox
21 53 0.050305261 ubox
21 56 0.024242200 ubox
22 51 0.006683981 ubox
22 52 0.049263598 ubox
22 53 0.072274691 ubox
22 56 0.018154926 ubox
23 50 0.006194510 ubox
23 51 0.039247738 ubox
23 52 0.074603383 ubox
23 53 0.043731250 ubox
23 56 0.076769638 ubox
24 49 0.005075060 ubox
24 50 0.031706315 ubox
24 51 0.047863336 ubox
24 52 0.036837394 ubox
24 53 0.018740687 ubox
24 56 0.078184865 ubox
25 54 0.967751450 ubox
25 55 0.059800950 ubox
25 57 0.007020398 ubox
25 58 0.003510831 ubox
26 48 0.012333702 ubox
26 49 0.017939294 ubox
26 50 0.016440920 ubox
26 51 0.026919879 ubox
26 52 0.061569615 ubox
26 53 0.984090673 ubox
27 47 0.013383178 ubox
27 48 0.018526279 ubox
27 49 0.016734391 ubox
27 50 0.027953054 ubox
27 51 0.061814044 ubox
27 52 0.989967717 ubox
27 53 0.010289887 ubox
28 46 0.013063479 ubox
28 47 0.017503540 ubox
28 48 0.013692679 ubox
28 49 0.026193157 ubox
28 50 0.059915432 ubox
28 51 0.994002297 ubox
28 52 0.012194948 ubox
28 53 0.004154497 ubox
29 45 0.012716616 ubox
29 46 0.016765485 ubox
29 47 0.012438054 ubox
29 48 0.023795881 ubox
29 49 0.058102734 ubox
29 50 0.995380760 ubox
29 51 0.012121900 ubox
29 52 0.004613722 ubox
30 45 0.014485103 ubox
30 46 0.009368252 ubox
30 47 0.020589301 ubox
30 48 0.049724102 ubox
30 49 0.993107467 ubox
30 50 0.011646745 ubox
30 51 0.004796967 ubox
31 45 0.005876974 ubox
31 46 0.018385143 ubox
31 47 0.040005701 ubox
31 48 0.996339326 ubox
31 49 0.011444803 ubox
31 50 0.005049482 ubox
32 45 0.016956322 ubox
32 46 0.033703522 ubox
32 47 0.997722028 ubox
32 48 0.010895561 ubox
32 49 0.005148405 ubox
33 45 0.025040696 ubox
33 46 0.997472699 ubox
33 47 0.009835913 ubox
33 48 0.005130839 ubox
34 43 0.016325699 ubox
34 45 0.998052578 ubox
34 46 0.008302808 ubox
34 47 0.004842134 ubox
34 73 0.004031857 ubox
35 40 0.003549798 ubox
35 41 0.003390365 ubox
35 42 0.016614246 ubox
35 44 0.998632420 ubox
35 72 0.004308062 ubox
36 43 0.991096648 ubox
36 45 0.011331023 ubox
36 71 0.004327946 ubox
37 41 0.022746526 ubox
37 42 0.936182973 ubox
37 44 0.014019521 ubox
37 70 0.004327458 ubox
38 43 0.014187226 ubox
38 69 0.004298978 ubox
39 68 0.004002340 ubox
43 63 0.004105885 ubox
44 62 0.004167298 ubox
45 61 0.004159593 ubox
46 60 0.004143857 ubox
47 59 0.004118730 ubox
48 58 0.004033953 ubox
49 57 0.003876808 ubox
64 78 0.005027646 ubox
65 77 0.005002749 ubox
65 78 0.019170722 ubox
66 76 0.004839438 ubox
66 77 0.019174083 ubox
67 73 0.004148334 ubox
67 76 0.018653536 ubox
68 72 0.004068157 ubox
68 74 0.005406120 ubox
69 74 0.009075266 ubox
70 76 0.011082425 ubox
70 77 0.028764973 ubox
71 79 0.007517462 ubox
72 76 0.007642640 ubox
72 77 0.025178033 ubox
73 79 0.009437380 ubox
75 79 0.016791445 ubox
6 69 0.9500000 lbox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
10 65 0.9500000 lbox
11 64 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
16 59 0.9500000 lbox
17 58 0.9500000 lbox
18 57 0.9500000 lbox
19 56 0.9500000 lbox
20 55 0.9500000 lbox
25 54 0.9500000 lbox
26 53 0.9500000 lbox
27 52 0.9500000 lbox
28 51 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
34 45 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
