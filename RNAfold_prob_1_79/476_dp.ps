%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (476)
} def

/sequence { (\
GGAAAACAUGACGCGAGUCAAAAGACCAGAAAACUGCGCAAAACUAGUGAAAACACUAGGUCAUGAAACAUAGAGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.041389830 ubox
1 27 0.028716602 ubox
1 62 0.005119526 ubox
1 69 0.175899074 ubox
1 71 0.067283059 ubox
1 77 0.003795138 ubox
1 78 0.136720760 ubox
2 7 0.011372939 ubox
2 26 0.028701607 ubox
2 61 0.003952659 ubox
2 62 0.006949694 ubox
2 69 0.117731584 ubox
2 71 0.027215822 ubox
2 76 0.005403768 ubox
2 77 0.133267164 ubox
2 78 0.203049692 ubox
3 61 0.006473308 ubox
3 71 0.018332290 ubox
3 76 0.129942980 ubox
3 77 0.201311489 ubox
4 71 0.014655189 ubox
4 76 0.193161950 ubox
4 77 0.008510950 ubox
5 71 0.011121185 ubox
5 76 0.009621980 ubox
5 77 0.019678350 ubox
6 61 0.005268256 ubox
6 64 0.003883370 ubox
6 71 0.021671353 ubox
6 76 0.023716684 ubox
6 77 0.004831874 ubox
7 24 0.004957428 ubox
7 60 0.005638838 ubox
7 65 0.987589749 ubox
7 73 0.017830748 ubox
7 75 0.020757094 ubox
7 79 0.003392864 ubox
8 64 0.995984838 ubox
8 71 0.009577255 ubox
9 20 0.049958799 ubox
9 40 0.016069591 ubox
9 63 0.997320220 ubox
9 70 0.009690326 ubox
10 19 0.054481222 ubox
10 39 0.017885904 ubox
10 62 0.998120957 ubox
10 69 0.009469114 ubox
10 77 0.003204361 ubox
10 78 0.003462669 ubox
11 18 0.054522254 ubox
11 61 0.997672293 ubox
11 76 0.003790596 ubox
12 17 0.054529761 ubox
12 38 0.036165255 ubox
12 60 0.996184012 ubox
12 65 0.003244588 ubox
12 75 0.004104866 ubox
13 19 0.008715362 ubox
13 26 0.006367764 ubox
13 27 0.012136379 ubox
13 34 0.007215188 ubox
13 37 0.113731243 ubox
13 39 0.927488371 ubox
13 61 0.004219234 ubox
14 24 0.013276449 ubox
14 29 0.110150437 ubox
14 36 0.113574073 ubox
14 38 0.928421697 ubox
14 59 0.014931901 ubox
14 60 0.005817175 ubox
15 19 0.007581194 ubox
15 26 0.005879839 ubox
15 27 0.121796258 ubox
15 34 0.012742173 ubox
15 35 0.074894275 ubox
15 37 0.918661627 ubox
15 39 0.008078782 ubox
16 35 0.555970870 ubox
17 26 0.800365284 ubox
17 27 0.014462649 ubox
17 34 0.553710911 ubox
17 35 0.027018006 ubox
17 37 0.008925408 ubox
17 39 0.007399553 ubox
18 22 0.003756154 ubox
18 23 0.006389525 ubox
18 24 0.005556537 ubox
18 25 0.806542822 ubox
18 28 0.003713708 ubox
18 29 0.004680266 ubox
18 30 0.145139349 ubox
18 31 0.013140646 ubox
18 32 0.027200829 ubox
18 33 0.509584036 ubox
18 36 0.006934511 ubox
18 38 0.007029400 ubox
19 24 0.808092782 ubox
19 29 0.180942218 ubox
19 36 0.027186744 ubox
20 35 0.025284150 ubox
22 64 0.003508452 ubox
23 35 0.009363075 ubox
24 34 0.010546928 ubox
24 37 0.009292617 ubox
24 39 0.068451445 ubox
24 62 0.022109996 ubox
25 61 0.022118738 ubox
26 36 0.009732442 ubox
26 38 0.062012376 ubox
26 60 0.022039370 ubox
26 75 0.003209630 ubox
27 36 0.767725923 ubox
27 38 0.008419556 ubox
27 59 0.012864327 ubox
28 35 0.774420759 ubox
28 57 0.007339392 ubox
29 34 0.768842515 ubox
29 35 0.009101182 ubox
29 37 0.022264389 ubox
29 39 0.015536340 ubox
29 56 0.007352268 ubox
29 78 0.026200345 ubox
30 35 0.018847177 ubox
30 77 0.026157547 ubox
31 35 0.009200440 ubox
31 76 0.025481667 ubox
32 77 0.007139035 ubox
33 76 0.008461616 ubox
34 38 0.011148810 ubox
34 73 0.025763946 ubox
34 75 0.008737231 ubox
35 40 0.007455353 ubox
35 41 0.018197874 ubox
35 42 0.023211792 ubox
35 43 0.011184672 ubox
35 70 0.004322637 ubox
35 72 0.025726916 ubox
35 74 0.008512560 ubox
36 69 0.004941245 ubox
36 71 0.024958559 ubox
37 49 0.009680474 ubox
37 65 0.006495214 ubox
37 73 0.003207957 ubox
38 44 0.005255237 ubox
38 48 0.009720022 ubox
38 61 0.003828995 ubox
38 64 0.005919561 ubox
38 69 0.018655587 ubox
39 47 0.009721556 ubox
39 60 0.004279861 ubox
39 65 0.027859227 ubox
40 64 0.027205251 ubox
41 61 0.004034893 ubox
41 64 0.003368169 ubox
42 61 0.006924638 ubox
43 61 0.013874660 ubox
44 59 0.996675987 ubox
44 60 0.011412567 ubox
45 58 0.999333577 ubox
45 59 0.007559861 ubox
46 57 0.999613985 ubox
47 54 0.004520299 ubox
47 56 0.999910529 ubox
48 53 0.005340715 ubox
48 55 0.999182963 ubox
49 54 0.993195120 ubox
60 69 0.011917020 ubox
61 68 0.011363557 ubox
61 74 0.015703843 ubox
62 73 0.016855526 ubox
63 71 0.018887124 ubox
64 70 0.019521909 ubox
64 79 0.033506277 ubox
65 69 0.019789773 ubox
65 78 0.102782388 ubox
66 71 0.019984928 ubox
66 76 0.008394038 ubox
66 77 0.101489334 ubox
67 71 0.011332295 ubox
67 76 0.089756171 ubox
67 77 0.397923212 ubox
68 76 0.445111597 ubox
68 77 0.015960307 ubox
69 73 0.028450199 ubox
69 75 0.453353742 ubox
69 79 0.025770077 ubox
70 76 0.026632532 ubox
70 77 0.032111954 ubox
71 75 0.026124349 ubox
71 79 0.008130924 ubox
72 76 0.007896739 ubox
72 77 0.013729576 ubox
73 77 0.008485870 ubox
73 78 0.094892622 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
