%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (458)
} def

/sequence { (\
GGAAAACGAUGCGUCACUCGAAAGAGCACGAAAGUGGACAAAACGUAUCGAAAGAUACGGCAUCGAAAGUACUCGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.080004475 ubox
1 70 0.046139798 ubox
1 72 0.163793281 ubox
1 73 0.098078649 ubox
1 74 0.112755802 ubox
1 76 0.006954130 ubox
1 77 0.004518421 ubox
1 78 0.153912276 ubox
2 7 0.025770272 ubox
2 70 0.099505160 ubox
2 72 0.129965648 ubox
2 73 0.083166498 ubox
2 74 0.123325517 ubox
2 76 0.006015740 ubox
2 77 0.152203587 ubox
2 78 0.217304323 ubox
3 70 0.113085973 ubox
3 73 0.120919075 ubox
3 76 0.148960622 ubox
3 77 0.216102976 ubox
4 70 0.085505312 ubox
4 73 0.007345734 ubox
4 76 0.205955554 ubox
4 77 0.011699958 ubox
5 70 0.024066523 ubox
5 73 0.010419258 ubox
5 76 0.012551459 ubox
5 77 0.084223089 ubox
6 14 0.005477071 ubox
6 35 0.003882067 ubox
6 70 0.076283361 ubox
6 73 0.053082417 ubox
6 76 0.102578591 ubox
6 77 0.005231339 ubox
7 13 0.005837418 ubox
7 34 0.003984448 ubox
7 50 0.012951847 ubox
7 65 0.949074346 ubox
7 69 0.061228760 ubox
7 75 0.106136925 ubox
7 79 0.016722180 ubox
8 12 0.005483381 ubox
8 49 0.013669795 ubox
8 64 0.993829855 ubox
8 72 0.003614819 ubox
8 74 0.101635847 ubox
8 77 0.007862870 ubox
8 78 0.016715387 ubox
9 48 0.013674100 ubox
9 63 0.994180015 ubox
9 73 0.100036826 ubox
9 76 0.011916055 ubox
9 77 0.013780647 ubox
10 47 0.013668660 ubox
10 62 0.994373287 ubox
10 71 0.093419207 ubox
10 75 0.014625447 ubox
11 27 0.003335275 ubox
11 46 0.013676553 ubox
11 61 0.994783205 ubox
11 70 0.095221641 ubox
11 72 0.009640580 ubox
11 74 0.014969790 ubox
11 76 0.008991435 ubox
12 20 0.005521501 ubox
12 26 0.003435626 ubox
12 30 0.011100370 ubox
12 45 0.013679971 ubox
12 59 0.005956217 ubox
12 60 0.993831234 ubox
12 69 0.095243239 ubox
12 75 0.009345871 ubox
13 17 0.009073940 ubox
13 19 0.020504063 ubox
13 27 0.009956471 ubox
13 29 0.036754543 ubox
13 39 0.723077229 ubox
13 44 0.014556096 ubox
13 61 0.004987859 ubox
13 70 0.003320657 ubox
13 72 0.018862993 ubox
13 74 0.008865898 ubox
14 21 0.052346198 ubox
14 25 0.035629758 ubox
14 26 0.005966893 ubox
14 28 0.035867300 ubox
14 31 0.026241723 ubox
14 37 0.172384698 ubox
14 38 0.714252916 ubox
14 43 0.013723289 ubox
14 59 0.006690099 ubox
14 60 0.005100935 ubox
14 66 0.065273807 ubox
14 67 0.011228080 ubox
14 68 0.009185965 ubox
14 71 0.018644362 ubox
15 20 0.055922413 ubox
15 24 0.038099115 ubox
15 26 0.008544468 ubox
15 30 0.028068711 ubox
15 34 0.004772557 ubox
15 36 0.275817027 ubox
15 37 0.687771787 ubox
15 59 0.009366988 ubox
15 65 0.066652130 ubox
15 69 0.014188861 ubox
16 35 0.335137979 ubox
16 63 0.004845523 ubox
16 70 0.013342684 ubox
17 24 0.026728974 ubox
17 26 0.922736945 ubox
17 34 0.337406263 ubox
17 36 0.042089256 ubox
17 69 0.013506589 ubox
18 23 0.025011440 ubox
18 25 0.928612930 ubox
18 31 0.258707573 ubox
18 32 0.042003220 ubox
18 33 0.209827585 ubox
18 38 0.003630145 ubox
18 66 0.040612873 ubox
18 68 0.008314828 ubox
19 24 0.929034477 ubox
19 26 0.027984728 ubox
19 30 0.335608310 ubox
19 34 0.023193796 ubox
19 37 0.003915566 ubox
19 65 0.042160197 ubox
19 79 0.006136649 ubox
20 27 0.010767966 ubox
20 29 0.336155887 ubox
20 64 0.042148695 ubox
20 78 0.006973415 ubox
21 63 0.039387946 ubox
21 77 0.006956975 ubox
22 76 0.005934678 ubox
24 29 0.033691353 ubox
24 39 0.084171749 ubox
24 61 0.004985751 ubox
24 74 0.006979242 ubox
25 73 0.006995877 ubox
26 35 0.007533891 ubox
26 39 0.014447486 ubox
26 72 0.006970903 ubox
27 34 0.015770641 ubox
27 36 0.930503135 ubox
27 37 0.031406753 ubox
28 35 0.933204059 ubox
28 70 0.005205859 ubox
29 34 0.933191093 ubox
29 36 0.031612785 ubox
29 37 0.013858662 ubox
29 69 0.005303059 ubox
30 35 0.022512151 ubox
30 39 0.011122055 ubox
31 35 0.006524822 ubox
34 39 0.011820824 ubox
34 44 0.008614130 ubox
34 72 0.003187720 ubox
35 41 0.005941373 ubox
35 42 0.007600438 ubox
35 43 0.009427514 ubox
35 66 0.005210722 ubox
35 71 0.003181203 ubox
36 44 0.004560952 ubox
37 44 0.020508479 ubox
37 64 0.037217527 ubox
38 63 0.036406513 ubox
39 59 0.003785759 ubox
39 60 0.004320078 ubox
39 65 0.005697233 ubox
40 63 0.006461480 ubox
41 63 0.005173997 ubox
44 59 0.990969293 ubox
44 60 0.003169171 ubox
45 58 0.999822869 ubox
46 57 0.999625404 ubox
47 56 0.999397991 ubox
48 55 0.999585155 ubox
49 54 0.999373985 ubox
50 78 0.003493904 ubox
51 77 0.003584700 ubox
54 74 0.004286233 ubox
54 78 0.008141130 ubox
55 73 0.004265903 ubox
55 77 0.007922635 ubox
56 71 0.004856776 ubox
57 70 0.004930675 ubox
57 76 0.008649028 ubox
58 69 0.004930021 ubox
58 75 0.009090939 ubox
58 79 0.005645900 ubox
59 74 0.009075306 ubox
59 78 0.005937009 ubox
60 64 0.007665771 ubox
60 70 0.010467826 ubox
60 73 0.007775692 ubox
60 77 0.005506124 ubox
61 65 0.004179455 ubox
61 69 0.010697768 ubox
64 69 0.009603576 ubox
64 75 0.020908899 ubox
64 79 0.025342207 ubox
65 70 0.003603737 ubox
65 72 0.019719306 ubox
65 74 0.094358279 ubox
65 77 0.006388769 ubox
65 78 0.201040772 ubox
66 70 0.013405278 ubox
66 73 0.092853893 ubox
66 76 0.013249120 ubox
66 77 0.206190327 ubox
67 73 0.017031817 ubox
67 76 0.187751194 ubox
67 77 0.047537625 ubox
68 73 0.019494759 ubox
68 76 0.051738535 ubox
68 77 0.030029877 ubox
69 73 0.010399594 ubox
69 74 0.195847256 ubox
69 76 0.028395800 ubox
69 77 0.017764702 ubox
69 78 0.114941074 ubox
70 75 0.019014969 ubox
70 79 0.010026367 ubox
71 76 0.015802224 ubox
71 77 0.014264229 ubox
72 79 0.051234583 ubox
73 79 0.006872249 ubox
74 79 0.035046388 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
