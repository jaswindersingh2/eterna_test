%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (957)
} def

/sequence { (\
GGAAACUAUCAGAUUGAAAAAUCAGAUAUAUUCGAAAAAAGAAUAUAUCAUUUGGAAACAAAAGAUAGCGAAUUUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.025351240 ubox
1 7 0.005807564 ubox
1 10 0.012960319 ubox
1 33 0.040058326 ubox
1 69 0.036488527 ubox
1 73 0.021205612 ubox
1 74 0.011546469 ubox
1 75 0.020594153 ubox
1 76 0.027894452 ubox
1 77 0.073749410 ubox
1 78 0.658967070 ubox
2 6 0.006596986 ubox
2 9 0.008810768 ubox
2 10 0.017633308 ubox
2 32 0.040042096 ubox
2 33 0.138569310 ubox
2 69 0.046377603 ubox
2 73 0.015136056 ubox
2 74 0.030218782 ubox
2 75 0.041457664 ubox
2 76 0.116326511 ubox
2 77 0.659228536 ubox
2 78 0.321288274 ubox
3 9 0.016941768 ubox
3 15 0.003177938 ubox
3 31 0.038447047 ubox
3 32 0.139330970 ubox
3 73 0.030267065 ubox
3 74 0.042939477 ubox
3 75 0.127042123 ubox
3 76 0.658249534 ubox
3 77 0.321051629 ubox
4 14 0.003289126 ubox
4 29 0.005462655 ubox
4 31 0.135210574 ubox
4 32 0.007205391 ubox
4 73 0.040342539 ubox
4 74 0.134869404 ubox
4 75 0.655404386 ubox
4 76 0.318791079 ubox
4 77 0.008617251 ubox
5 29 0.024546383 ubox
5 31 0.007841726 ubox
5 73 0.139480376 ubox
5 74 0.645623801 ubox
5 75 0.311830053 ubox
5 76 0.010769198 ubox
6 12 0.008134544 ubox
6 64 0.007995329 ubox
6 68 0.977517142 ubox
6 70 0.021674107 ubox
7 11 0.007520613 ubox
7 28 0.158436944 ubox
7 63 0.007743864 ubox
7 67 0.980551454 ubox
7 68 0.003865070 ubox
7 70 0.003543374 ubox
7 71 0.004869180 ubox
7 72 0.018945044 ubox
8 27 0.162843221 ubox
8 66 0.980678065 ubox
8 73 0.011458497 ubox
9 17 0.008998887 ubox
9 26 0.163395428 ubox
9 55 0.004389362 ubox
9 65 0.980769594 ubox
9 71 0.045192394 ubox
9 72 0.009755137 ubox
10 16 0.009805822 ubox
10 25 0.162903861 ubox
10 54 0.006720908 ubox
10 64 0.979798472 ubox
10 68 0.006574071 ubox
10 70 0.046518335 ubox
11 15 0.008461259 ubox
11 22 0.003516066 ubox
11 53 0.007095609 ubox
12 22 0.003301630 ubox
12 23 0.968491304 ubox
12 52 0.006683391 ubox
12 59 0.006956116 ubox
12 69 0.004574746 ubox
12 74 0.004124896 ubox
13 22 0.969407259 ubox
13 51 0.006688102 ubox
13 66 0.003303054 ubox
13 73 0.004253961 ubox
14 19 0.004739083 ubox
14 20 0.013557219 ubox
14 21 0.966515733 ubox
14 24 0.007476081 ubox
14 25 0.009556268 ubox
14 50 0.006353472 ubox
14 56 0.003385940 ubox
14 57 0.005544463 ubox
14 58 0.013535480 ubox
14 60 0.004718124 ubox
14 61 0.042088981 ubox
14 62 0.010823604 ubox
14 63 0.008240372 ubox
14 65 0.003315378 ubox
14 72 0.004135684 ubox
15 19 0.015536733 ubox
15 20 0.949108824 ubox
15 21 0.021795210 ubox
15 24 0.186303953 ubox
15 55 0.003526133 ubox
15 56 0.005733307 ubox
15 57 0.014342777 ubox
15 58 0.005894936 ubox
15 60 0.046028880 ubox
15 61 0.009934304 ubox
15 62 0.007344358 ubox
15 71 0.003847979 ubox
15 79 0.031107320 ubox
16 23 0.201421814 ubox
16 59 0.046192034 ubox
16 78 0.053322676 ubox
17 22 0.184046886 ubox
17 53 0.003679246 ubox
17 76 0.003462549 ubox
17 77 0.053327700 ubox
18 22 0.005619624 ubox
18 52 0.003560803 ubox
18 53 0.003682928 ubox
18 75 0.003758359 ubox
18 76 0.053251077 ubox
19 51 0.003224774 ubox
19 52 0.003641979 ubox
19 53 0.036864874 ubox
19 74 0.003989520 ubox
19 75 0.053172928 ubox
20 51 0.003267141 ubox
20 52 0.037536699 ubox
20 53 0.011643836 ubox
20 73 0.004034512 ubox
20 74 0.052939546 ubox
21 51 0.037659322 ubox
21 52 0.011171806 ubox
21 53 0.015882772 ubox
21 66 0.006125687 ubox
21 73 0.051823051 ubox
22 50 0.033575846 ubox
22 54 0.003338467 ubox
22 55 0.021329103 ubox
22 56 0.004066033 ubox
22 65 0.006905531 ubox
22 71 0.028916962 ubox
22 72 0.041879311 ubox
23 54 0.023605853 ubox
23 55 0.003878757 ubox
23 64 0.007058198 ubox
23 68 0.004389388 ubox
23 70 0.040283200 ubox
24 51 0.044420992 ubox
24 52 0.006872293 ubox
24 53 0.023549887 ubox
25 49 0.984929791 ubox
25 52 0.006631687 ubox
25 69 0.004921513 ubox
26 48 0.985972032 ubox
26 51 0.005598566 ubox
27 47 0.985922279 ubox
27 50 0.003672795 ubox
28 46 0.986008182 ubox
29 45 0.986316009 ubox
30 44 0.986346889 ubox
31 43 0.985938088 ubox
31 72 0.003196311 ubox
32 41 0.003496337 ubox
32 42 0.986490822 ubox
32 71 0.003307958 ubox
33 41 0.986680132 ubox
33 70 0.003320103 ubox
33 79 0.065665808 ubox
34 69 0.003238342 ubox
34 77 0.005165145 ubox
34 78 0.157598984 ubox
35 76 0.005802357 ubox
35 77 0.155681225 ubox
36 75 0.006082500 ubox
36 76 0.153302908 ubox
36 77 0.034738573 ubox
37 74 0.006228030 ubox
37 75 0.150759684 ubox
37 76 0.044291003 ubox
37 77 0.006681893 ubox
38 73 0.005965582 ubox
38 74 0.146593771 ubox
38 75 0.051361295 ubox
38 76 0.008049151 ubox
38 77 0.005741672 ubox
39 73 0.133879721 ubox
39 74 0.057271929 ubox
39 75 0.008878205 ubox
39 76 0.006654291 ubox
39 77 0.006256584 ubox
40 73 0.061767718 ubox
40 74 0.009401827 ubox
40 75 0.007063625 ubox
40 76 0.007108654 ubox
41 69 0.008087738 ubox
41 73 0.009242428 ubox
41 74 0.007509435 ubox
41 75 0.007637189 ubox
41 78 0.003482434 ubox
42 73 0.007453572 ubox
42 74 0.007805200 ubox
42 77 0.003474118 ubox
43 73 0.007751495 ubox
43 76 0.003350977 ubox
44 67 0.006145716 ubox
44 68 0.010525179 ubox
44 70 0.008675622 ubox
44 72 0.006075787 ubox
45 66 0.005303834 ubox
46 65 0.003855715 ubox
46 67 0.161438669 ubox
47 66 0.163404890 ubox
48 65 0.163799501 ubox
49 64 0.163708378 ubox
50 66 0.010579386 ubox
50 73 0.024693847 ubox
51 56 0.005312308 ubox
51 57 0.008831436 ubox
51 58 0.010782071 ubox
51 60 0.006721242 ubox
51 61 0.026881838 ubox
51 62 0.826816569 ubox
51 63 0.082412057 ubox
51 64 0.004513150 ubox
51 65 0.010841823 ubox
51 72 0.026790033 ubox
52 56 0.008459693 ubox
52 57 0.011281446 ubox
52 58 0.008230917 ubox
52 60 0.022562310 ubox
52 61 0.947623242 ubox
52 62 0.083395446 ubox
52 63 0.042653046 ubox
52 64 0.010473664 ubox
52 71 0.027988441 ubox
53 57 0.008050088 ubox
53 58 0.015086867 ubox
53 60 0.974849755 ubox
53 61 0.072383922 ubox
53 62 0.045628147 ubox
53 63 0.013373379 ubox
53 70 0.028116663 ubox
53 79 0.004311003 ubox
54 59 0.980261853 ubox
54 69 0.028233543 ubox
54 78 0.007402170 ubox
55 59 0.020115268 ubox
55 69 0.003537596 ubox
55 77 0.007395454 ubox
55 78 0.006495768 ubox
56 76 0.007362249 ubox
56 77 0.006474119 ubox
57 66 0.013104037 ubox
57 75 0.007190354 ubox
57 76 0.006220673 ubox
58 74 0.006466343 ubox
58 75 0.005543292 ubox
59 64 0.015722467 ubox
59 68 0.004006997 ubox
59 79 0.003178364 ubox
61 77 0.008262867 ubox
62 76 0.010595164 ubox
62 77 0.004535761 ubox
63 73 0.003243051 ubox
63 75 0.013732084 ubox
63 76 0.006298131 ubox
64 69 0.017868680 ubox
64 74 0.016667372 ubox
64 75 0.007713642 ubox
64 78 0.006551548 ubox
65 73 0.017224751 ubox
65 74 0.008151522 ubox
65 77 0.006460150 ubox
66 72 0.016869532 ubox
67 73 0.003204215 ubox
68 74 0.003217413 ubox
69 79 0.485864993 ubox
70 74 0.004724594 ubox
70 75 0.007217874 ubox
70 76 0.011655347 ubox
70 77 0.020121660 ubox
70 78 0.525715979 ubox
71 75 0.010917176 ubox
71 76 0.025976979 ubox
71 77 0.517791819 ubox
72 76 0.394633346 ubox
72 77 0.031875172 ubox
73 79 0.003331000 ubox
74 79 0.003340494 ubox
1 78 0.9500000 lbox
2 77 0.9500000 lbox
3 76 0.9500000 lbox
4 75 0.9500000 lbox
5 74 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
showpage
end
%%EOF
