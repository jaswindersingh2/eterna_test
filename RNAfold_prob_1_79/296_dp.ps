%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (296)
} def

/sequence { (\
GGAAAAAAGGCCAAGGUCGAAAGACCAGUGGAGACAAAGUCGGGAAACGGACGGUCGACAUAAGGCCACCUCAGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.050609320 ubox
1 26 0.004821630 ubox
1 67 0.004910238 ubox
1 69 0.007047436 ubox
1 70 0.164554081 ubox
1 71 0.023557019 ubox
1 72 0.076515605 ubox
1 75 0.153742446 ubox
1 76 0.130665279 ubox
1 77 0.009553622 ubox
1 78 0.165053158 ubox
2 11 0.050617507 ubox
2 25 0.004817030 ubox
2 66 0.004627635 ubox
2 69 0.164607166 ubox
2 70 0.031172266 ubox
2 71 0.067460893 ubox
2 72 0.199126250 ubox
2 75 0.150701999 ubox
2 76 0.009783967 ubox
2 77 0.162966165 ubox
2 78 0.160928973 ubox
3 71 0.194493015 ubox
3 76 0.155544638 ubox
3 77 0.160447879 ubox
4 71 0.033007242 ubox
4 76 0.148748768 ubox
4 77 0.007160523 ubox
5 71 0.060201699 ubox
5 76 0.008394619 ubox
5 77 0.005352176 ubox
6 71 0.037747556 ubox
6 76 0.005953612 ubox
6 77 0.005664476 ubox
7 71 0.056149960 ubox
7 76 0.005959985 ubox
7 77 0.013003359 ubox
8 71 0.077520019 ubox
8 76 0.014480982 ubox
8 77 0.038225823 ubox
9 18 0.005107884 ubox
9 56 0.004281271 ubox
9 67 0.993398903 ubox
9 69 0.007213601 ubox
9 70 0.067994678 ubox
9 71 0.003937958 ubox
9 72 0.004738315 ubox
9 75 0.009146159 ubox
9 76 0.045528394 ubox
9 78 0.003540279 ubox
10 17 0.005118773 ubox
10 29 0.003184719 ubox
10 55 0.004312616 ubox
10 66 0.994920496 ubox
10 67 0.004496025 ubox
10 69 0.063182329 ubox
10 70 0.003418116 ubox
10 75 0.046723319 ubox
11 16 0.005121066 ubox
11 28 0.003757919 ubox
11 31 0.056687868 ubox
11 54 0.004319227 ubox
11 65 0.995184719 ubox
11 74 0.046581014 ubox
12 30 0.057062704 ubox
12 53 0.004314602 ubox
12 64 0.994144222 ubox
12 65 0.004165778 ubox
13 29 0.055475270 ubox
13 61 0.007179168 ubox
14 29 0.004829332 ubox
14 61 0.010022753 ubox
14 71 0.029874432 ubox
15 26 0.997895171 ubox
15 61 0.010308121 ubox
15 70 0.029804818 ubox
16 25 0.998937460 ubox
16 26 0.003215873 ubox
16 59 0.033846560 ubox
16 69 0.029721070 ubox
17 24 0.998789382 ubox
17 58 0.033887910 ubox
17 68 0.029162679 ubox
18 23 0.998459434 ubox
18 57 0.033890610 ubox
19 56 0.032366879 ubox
19 66 0.014056457 ubox
19 67 0.014773965 ubox
20 55 0.031418106 ubox
23 52 0.026590807 ubox
23 56 0.010198688 ubox
23 66 0.016430529 ubox
23 67 0.015483956 ubox
24 55 0.012176385 ubox
25 31 0.003421264 ubox
25 50 0.029281602 ubox
25 54 0.014512446 ubox
25 64 0.007644267 ubox
25 65 0.027417522 ubox
26 30 0.003415236 ubox
26 49 0.029218106 ubox
26 53 0.014498578 ubox
26 64 0.027403093 ubox
27 61 0.031521586 ubox
27 76 0.034029886 ubox
28 35 0.023903926 ubox
28 48 0.026095854 ubox
28 59 0.045819166 ubox
28 61 0.960712096 ubox
28 69 0.004547500 ubox
28 75 0.036512452 ubox
29 34 0.023697133 ubox
29 36 0.018645678 ubox
29 43 0.003465519 ubox
29 45 0.003351206 ubox
29 46 0.006292578 ubox
29 47 0.025830896 ubox
29 58 0.045453100 ubox
29 60 0.986508313 ubox
29 62 0.007347497 ubox
29 68 0.004605834 ubox
29 74 0.034785935 ubox
29 79 0.007189233 ubox
30 35 0.020729519 ubox
30 59 0.994810287 ubox
30 61 0.007049270 ubox
30 67 0.004595022 ubox
30 70 0.003599038 ubox
30 78 0.012445584 ubox
31 41 0.003832161 ubox
31 56 0.042420730 ubox
31 59 0.012382344 ubox
31 66 0.004576428 ubox
31 69 0.003588441 ubox
31 72 0.037147728 ubox
31 77 0.012478416 ubox
32 40 0.003797317 ubox
32 55 0.041650849 ubox
32 71 0.037615173 ubox
32 76 0.012534193 ubox
33 41 0.029519078 ubox
33 56 0.995519226 ubox
33 70 0.037486323 ubox
33 75 0.012512539 ubox
34 40 0.029505548 ubox
34 55 0.995225925 ubox
35 39 0.029218956 ubox
35 42 0.003197586 ubox
35 53 0.024388241 ubox
35 54 0.990177040 ubox
35 74 0.008152750 ubox
36 55 0.007707463 ubox
39 48 0.013056636 ubox
39 52 0.967833916 ubox
39 59 0.013666827 ubox
40 47 0.012431493 ubox
40 49 0.003642816 ubox
40 50 0.234329132 ubox
40 51 0.969860517 ubox
40 58 0.013688091 ubox
41 49 0.254855553 ubox
41 50 0.965273125 ubox
41 53 0.006786254 ubox
41 57 0.013692360 ubox
42 48 0.268847413 ubox
42 52 0.006818345 ubox
42 56 0.013659228 ubox
43 48 0.916216960 ubox
43 55 0.012008401 ubox
44 48 0.018686998 ubox
47 55 0.004437352 ubox
48 54 0.005142966 ubox
49 70 0.003730778 ubox
50 69 0.003764961 ubox
53 59 0.005182069 ubox
53 67 0.073981373 ubox
54 66 0.074060485 ubox
55 65 0.073956059 ubox
56 64 0.073921975 ubox
56 65 0.003471932 ubox
62 77 0.004657803 ubox
63 71 0.031249051 ubox
63 76 0.005173839 ubox
63 77 0.031803753 ubox
64 69 0.005014495 ubox
64 70 0.033168324 ubox
64 71 0.003219750 ubox
64 72 0.004260471 ubox
64 75 0.004925903 ubox
64 76 0.037542657 ubox
65 69 0.032641799 ubox
65 70 0.003541706 ubox
65 71 0.003443007 ubox
65 75 0.038397520 ubox
66 74 0.038161859 ubox
67 74 0.005712136 ubox
68 76 0.012119436 ubox
68 77 0.013430029 ubox
69 74 0.059837524 ubox
69 79 0.018385347 ubox
70 74 0.022997145 ubox
70 79 0.041246432 ubox
71 79 0.005668264 ubox
72 79 0.042267844 ubox
73 77 0.008969891 ubox
74 78 0.036925609 ubox
75 79 0.013879657 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
