%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (838)
} def

/sequence { (\
GGAAAGGGAUGACAAAAAAGCAUCGAGGCCCGCGAAAGACGGUAGCCAGGCGUGAGACCAACCAAAAAACGUUCUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.062255068 ubox
1 31 0.101152648 ubox
1 59 0.003734292 ubox
1 63 0.022551638 ubox
1 70 0.003182196 ubox
1 74 0.006696111 ubox
1 75 0.018708136 ubox
1 78 0.094700249 ubox
2 29 0.062710345 ubox
2 30 0.100879195 ubox
2 31 0.003991608 ubox
2 58 0.003717889 ubox
2 62 0.022494608 ubox
2 73 0.005915145 ubox
2 74 0.021561667 ubox
2 76 0.003397387 ubox
2 77 0.080174824 ubox
2 78 0.983108675 ubox
3 72 0.005070084 ubox
3 73 0.020494159 ubox
3 75 0.003367174 ubox
3 76 0.071598342 ubox
3 77 0.984152451 ubox
4 72 0.015939445 ubox
4 73 0.007720077 ubox
4 75 0.055755133 ubox
4 76 0.983028308 ubox
4 77 0.056085700 ubox
5 72 0.010450882 ubox
5 73 0.004083613 ubox
5 75 0.983007783 ubox
5 76 0.071892944 ubox
5 77 0.003637989 ubox
6 13 0.003558602 ubox
6 30 0.010784566 ubox
6 31 0.028554923 ubox
6 59 0.018356751 ubox
6 63 0.021966908 ubox
6 70 0.012533153 ubox
6 72 0.003207146 ubox
6 73 0.007961882 ubox
6 74 0.981024657 ubox
6 75 0.085646307 ubox
6 76 0.004582032 ubox
6 78 0.008614756 ubox
7 13 0.015619637 ubox
7 21 0.006159649 ubox
7 24 0.039885417 ubox
7 29 0.010892551 ubox
7 30 0.028583140 ubox
7 58 0.018452544 ubox
7 59 0.004844630 ubox
7 62 0.022288148 ubox
7 63 0.013404640 ubox
7 70 0.022355580 ubox
7 72 0.015445892 ubox
7 73 0.668349397 ubox
7 74 0.100219926 ubox
7 75 0.005355136 ubox
7 77 0.007464094 ubox
7 78 0.005726487 ubox
8 13 0.007668785 ubox
8 21 0.005632385 ubox
8 23 0.021185414 ubox
8 24 0.990486880 ubox
8 29 0.026573950 ubox
8 58 0.004642929 ubox
8 62 0.012863277 ubox
8 70 0.004755330 ubox
8 72 0.042779264 ubox
8 73 0.084449404 ubox
8 74 0.004892965 ubox
8 76 0.003683428 ubox
9 23 0.992325751 ubox
9 72 0.092616511 ubox
9 73 0.003999396 ubox
9 75 0.003592299 ubox
10 15 0.005139084 ubox
10 16 0.004794515 ubox
10 17 0.006330098 ubox
10 18 0.005213923 ubox
10 19 0.007865501 ubox
10 22 0.992539231 ubox
10 25 0.019240835 ubox
10 26 0.005007577 ubox
10 27 0.003741426 ubox
10 28 0.005118663 ubox
10 55 0.015586972 ubox
10 60 0.011929418 ubox
10 64 0.005902461 ubox
10 68 0.004033132 ubox
10 71 0.092534224 ubox
11 21 0.992320345 ubox
11 24 0.026068490 ubox
11 59 0.012038019 ubox
11 62 0.003985025 ubox
11 63 0.006667888 ubox
11 70 0.091201235 ubox
11 73 0.007565886 ubox
12 23 0.024510755 ubox
12 53 0.015574771 ubox
12 72 0.009450649 ubox
13 20 0.880058212 ubox
13 25 0.009473650 ubox
13 52 0.015567379 ubox
13 71 0.009730131 ubox
14 23 0.004554473 ubox
15 23 0.003198933 ubox
16 23 0.003742193 ubox
18 53 0.004113033 ubox
20 24 0.007058424 ubox
20 29 0.008781728 ubox
20 51 0.031478272 ubox
20 53 0.036461613 ubox
20 58 0.010959801 ubox
20 59 0.007376597 ubox
20 62 0.005689617 ubox
21 25 0.006637481 ubox
21 28 0.008824660 ubox
21 50 0.031352830 ubox
21 52 0.037675614 ubox
21 54 0.033644075 ubox
21 56 0.006262615 ubox
22 53 0.033587328 ubox
23 48 0.006487091 ubox
23 49 0.007316138 ubox
23 50 0.038053878 ubox
23 52 0.030021139 ubox
23 55 0.019319962 ubox
23 57 0.015996910 ubox
24 49 0.046323450 ubox
24 50 0.033769898 ubox
24 52 0.017397533 ubox
24 54 0.019344779 ubox
24 56 0.016396385 ubox
24 71 0.003171074 ubox
25 46 0.015438024 ubox
25 47 0.012346362 ubox
25 51 0.026755489 ubox
25 53 0.013667011 ubox
25 62 0.005886069 ubox
25 63 0.010779274 ubox
25 70 0.008169365 ubox
25 74 0.005720347 ubox
25 78 0.007635281 ubox
26 53 0.027639645 ubox
26 73 0.005392445 ubox
26 77 0.007271021 ubox
27 46 0.009323807 ubox
27 47 0.988663189 ubox
27 51 0.006014755 ubox
27 53 0.005632427 ubox
27 59 0.038699574 ubox
27 63 0.003725645 ubox
28 43 0.026100685 ubox
28 46 0.989727093 ubox
28 47 0.003588899 ubox
28 51 0.037632312 ubox
28 58 0.038719116 ubox
28 62 0.003665594 ubox
29 42 0.025656556 ubox
29 45 0.985226641 ubox
29 49 0.005037809 ubox
29 50 0.037757968 ubox
29 56 0.030788368 ubox
30 41 0.024666097 ubox
30 42 0.971122605 ubox
30 45 0.019218164 ubox
30 49 0.037456514 ubox
30 54 0.010350014 ubox
30 56 0.022785640 ubox
31 38 0.005725599 ubox
31 41 0.976257673 ubox
31 42 0.027578481 ubox
31 45 0.003752831 ubox
31 52 0.011371955 ubox
31 54 0.037530886 ubox
32 40 0.974698722 ubox
32 43 0.096059947 ubox
32 46 0.035745486 ubox
32 47 0.008769894 ubox
32 51 0.011406928 ubox
32 53 0.037651077 ubox
33 38 0.912523066 ubox
33 41 0.133412451 ubox
33 42 0.097190121 ubox
33 45 0.036446625 ubox
33 50 0.011395006 ubox
33 52 0.037667382 ubox
33 79 0.115483608 ubox
34 40 0.132513045 ubox
34 46 0.004233384 ubox
34 51 0.037548739 ubox
34 78 0.124859422 ubox
35 43 0.004400714 ubox
35 77 0.124836506 ubox
36 43 0.004105283 ubox
36 76 0.124719125 ubox
37 43 0.003949636 ubox
37 75 0.124780339 ubox
38 46 0.013421871 ubox
38 47 0.024684269 ubox
38 73 0.009009070 ubox
38 74 0.124550903 ubox
39 53 0.003564736 ubox
39 72 0.069713812 ubox
39 73 0.102607169 ubox
40 45 0.029346833 ubox
40 49 0.006309036 ubox
40 52 0.004173730 ubox
40 71 0.098296655 ubox
41 46 0.007866267 ubox
41 47 0.019158146 ubox
41 51 0.004189079 ubox
41 59 0.017533697 ubox
41 63 0.010092502 ubox
41 70 0.096309478 ubox
42 46 0.018986911 ubox
42 47 0.005881852 ubox
42 51 0.009372271 ubox
42 58 0.018426412 ubox
42 62 0.010797489 ubox
42 70 0.072260177 ubox
43 49 0.003496236 ubox
43 50 0.009249238 ubox
43 57 0.018227863 ubox
43 61 0.010479401 ubox
43 65 0.003279929 ubox
43 66 0.004655457 ubox
43 67 0.007928941 ubox
43 68 0.012153313 ubox
43 69 0.070819783 ubox
45 51 0.016363619 ubox
45 53 0.006817341 ubox
45 58 0.004858150 ubox
45 59 0.003910575 ubox
45 62 0.006371784 ubox
45 63 0.017620057 ubox
46 50 0.016270115 ubox
46 52 0.006944590 ubox
46 54 0.015571525 ubox
46 56 0.009023731 ubox
47 52 0.013198756 ubox
47 54 0.013522451 ubox
48 53 0.014795882 ubox
48 72 0.009214919 ubox
48 73 0.035513931 ubox
48 75 0.029755963 ubox
48 76 0.003347974 ubox
49 58 0.036433029 ubox
49 59 0.425646419 ubox
49 62 0.022130332 ubox
49 63 0.185818082 ubox
49 70 0.018797161 ubox
49 72 0.038922645 ubox
49 73 0.543180328 ubox
49 74 0.035066452 ubox
49 75 0.003671852 ubox
50 58 0.425932079 ubox
50 59 0.023183689 ubox
50 62 0.185460382 ubox
50 63 0.064121106 ubox
50 70 0.010117756 ubox
50 72 0.845298759 ubox
50 73 0.029762775 ubox
50 74 0.003365254 ubox
51 56 0.400773977 ubox
51 71 0.865350238 ubox
51 79 0.021649234 ubox
52 58 0.074306756 ubox
52 59 0.041920229 ubox
52 62 0.089015209 ubox
52 63 0.012079463 ubox
52 70 0.865914725 ubox
52 78 0.023506249 ubox
53 57 0.067267395 ubox
53 60 0.151487180 ubox
53 61 0.085867376 ubox
53 64 0.082811710 ubox
53 65 0.011289049 ubox
53 66 0.016117515 ubox
53 67 0.013251116 ubox
53 68 0.040994659 ubox
53 69 0.856989376 ubox
53 71 0.004592480 ubox
53 79 0.006238077 ubox
54 58 0.025824696 ubox
54 59 0.162509568 ubox
54 62 0.025467358 ubox
54 63 0.113457612 ubox
54 70 0.006553336 ubox
54 76 0.022917259 ubox
54 78 0.010983967 ubox
55 75 0.024369434 ubox
55 77 0.010966368 ubox
56 62 0.063867170 ubox
56 63 0.156930906 ubox
56 70 0.004993867 ubox
56 73 0.017516704 ubox
56 74 0.024442874 ubox
56 76 0.010792945 ubox
57 72 0.022066353 ubox
57 73 0.022383473 ubox
57 75 0.010385781 ubox
58 71 0.023370961 ubox
59 71 0.015503172 ubox
60 72 0.008202598 ubox
60 73 0.159635593 ubox
61 72 0.218941656 ubox
61 73 0.006808755 ubox
62 71 0.224951392 ubox
63 71 0.046247336 ubox
64 72 0.008985243 ubox
64 73 0.019207028 ubox
65 72 0.023303733 ubox
65 73 0.015923498 ubox
66 72 0.019171471 ubox
66 73 0.018955719 ubox
66 77 0.003238944 ubox
67 72 0.020799924 ubox
67 73 0.012732735 ubox
67 76 0.003629544 ubox
68 72 0.012792253 ubox
68 73 0.008962889 ubox
68 75 0.003446076 ubox
69 73 0.004685529 ubox
70 79 0.014694191 ubox
71 78 0.015333233 ubox
2 78 0.9500000 lbox
3 77 0.9500000 lbox
4 76 0.9500000 lbox
5 75 0.9500000 lbox
6 74 0.9500000 lbox
7 73 0.9500000 lbox
8 24 0.9500000 lbox
9 23 0.9500000 lbox
10 22 0.9500000 lbox
11 21 0.9500000 lbox
13 20 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 42 0.9500000 lbox
31 41 0.9500000 lbox
32 40 0.9500000 lbox
33 38 0.9500000 lbox
50 72 0.9500000 lbox
51 71 0.9500000 lbox
52 70 0.9500000 lbox
53 69 0.9500000 lbox
showpage
end
%%EOF
