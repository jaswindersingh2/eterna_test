%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (289)
} def

/sequence { (\
GGAAAAAAGUACAAGAUCAAAAGAUCAGCUUGCUGAAACGUGCAAAAGGACGGCAGUGAGCAAGUACAGCAGAGUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.006050985 ubox
1 12 0.028394075 ubox
1 67 0.011936571 ubox
1 70 0.023986484 ubox
1 75 0.016808971 ubox
1 76 0.015114386 ubox
1 77 0.028264431 ubox
1 78 0.510658068 ubox
2 10 0.003184708 ubox
2 12 0.008852027 ubox
2 67 0.006472713 ubox
2 70 0.026708721 ubox
2 75 0.021457017 ubox
2 76 0.044312842 ubox
2 77 0.510807828 ubox
2 78 0.488911809 ubox
3 10 0.007287805 ubox
3 75 0.047782873 ubox
3 76 0.509168165 ubox
3 77 0.488981523 ubox
4 10 0.005607527 ubox
4 75 0.495172712 ubox
4 76 0.484624829 ubox
4 77 0.022966439 ubox
5 10 0.006970061 ubox
5 75 0.468344497 ubox
5 76 0.029095433 ubox
5 77 0.011677609 ubox
6 10 0.005256007 ubox
6 75 0.032459714 ubox
6 76 0.013802739 ubox
6 77 0.023298418 ubox
7 75 0.013755784 ubox
7 76 0.026993928 ubox
7 77 0.009936772 ubox
8 65 0.003163593 ubox
8 75 0.028176770 ubox
8 76 0.010864229 ubox
8 77 0.006288241 ubox
9 29 0.003164610 ubox
9 67 0.943281751 ubox
9 70 0.187854967 ubox
9 75 0.005924230 ubox
9 76 0.005712746 ubox
9 77 0.005506495 ubox
9 78 0.010662572 ubox
10 14 0.004536248 ubox
10 27 0.003506105 ubox
10 63 0.003431825 ubox
10 66 0.945762874 ubox
10 68 0.014309164 ubox
10 69 0.181528046 ubox
10 71 0.027224525 ubox
10 72 0.013568199 ubox
10 73 0.019274340 ubox
10 74 0.005586086 ubox
11 65 0.947296142 ubox
11 75 0.024218819 ubox
12 28 0.005353781 ubox
12 64 0.946162417 ubox
12 69 0.033201481 ubox
12 72 0.015510440 ubox
12 74 0.026198209 ubox
12 79 0.005846942 ubox
13 65 0.005311920 ubox
13 76 0.003202104 ubox
13 77 0.004325944 ubox
14 65 0.008186166 ubox
14 76 0.004414440 ubox
15 26 0.998374422 ubox
15 78 0.004981907 ubox
16 25 0.999349412 ubox
16 77 0.004897500 ubox
17 24 0.999320723 ubox
17 73 0.003504423 ubox
18 23 0.997903653 ubox
18 72 0.003675644 ubox
23 70 0.004124234 ubox
24 65 0.004727680 ubox
25 64 0.004719351 ubox
27 65 0.007663002 ubox
27 76 0.017241378 ubox
28 61 0.975295687 ubox
28 65 0.208221451 ubox
28 67 0.006204174 ubox
28 70 0.007659723 ubox
28 75 0.021336166 ubox
29 60 0.976311949 ubox
29 64 0.213446539 ubox
29 69 0.007443886 ubox
29 74 0.021788337 ubox
30 59 0.975908045 ubox
30 63 0.214447540 ubox
30 68 0.006515238 ubox
30 72 0.012590674 ubox
30 73 0.018477819 ubox
31 55 0.004794004 ubox
31 58 0.971643679 ubox
31 62 0.214789167 ubox
31 71 0.019661027 ubox
31 72 0.011344726 ubox
32 54 0.005877940 ubox
32 57 0.974207488 ubox
32 61 0.214952173 ubox
32 70 0.022960959 ubox
33 53 0.005880872 ubox
33 56 0.976304745 ubox
33 60 0.214943412 ubox
33 69 0.022986430 ubox
34 52 0.005550501 ubox
34 55 0.975718568 ubox
34 58 0.006730996 ubox
34 59 0.213979326 ubox
34 68 0.022971841 ubox
35 51 0.005429490 ubox
35 54 0.970011198 ubox
35 57 0.018217115 ubox
35 67 0.022855505 ubox
35 78 0.003282345 ubox
36 57 0.194686219 ubox
36 65 0.003444283 ubox
36 77 0.003284631 ubox
37 65 0.004247795 ubox
37 76 0.003281356 ubox
38 57 0.015494867 ubox
38 65 0.015453881 ubox
38 75 0.003279180 ubox
39 48 0.024356298 ubox
39 49 0.029749454 ubox
39 52 0.990231095 ubox
39 53 0.022488098 ubox
39 56 0.017242799 ubox
39 58 0.003380426 ubox
39 64 0.016101095 ubox
39 74 0.003268318 ubox
40 51 0.998526949 ubox
41 46 0.006496506 ubox
41 47 0.028930167 ubox
41 48 0.010869230 ubox
41 49 0.010580386 ubox
41 50 0.995934956 ubox
41 52 0.006820126 ubox
41 55 0.020063111 ubox
41 62 0.017122911 ubox
42 51 0.007418974 ubox
42 54 0.020879846 ubox
42 61 0.017766573 ubox
42 70 0.003167324 ubox
43 48 0.939955516 ubox
43 49 0.082740699 ubox
43 52 0.003283645 ubox
43 53 0.020759113 ubox
43 60 0.017746424 ubox
43 69 0.003162676 ubox
45 57 0.003404882 ubox
46 57 0.008434625 ubox
48 54 0.005581002 ubox
49 54 0.009939828 ubox
50 57 0.009300252 ubox
51 56 0.009482260 ubox
53 61 0.014138066 ubox
54 60 0.014146828 ubox
62 76 0.009553197 ubox
62 77 0.006720863 ubox
63 75 0.011400532 ubox
63 76 0.007366529 ubox
63 77 0.008949270 ubox
64 70 0.062910783 ubox
64 75 0.006028560 ubox
64 76 0.009970303 ubox
64 77 0.009997683 ubox
64 78 0.018025549 ubox
65 69 0.058909191 ubox
65 71 0.004469025 ubox
65 72 0.006722146 ubox
65 73 0.011980311 ubox
65 74 0.007224500 ubox
66 75 0.064193024 ubox
66 76 0.003316209 ubox
66 77 0.003758711 ubox
67 72 0.034440155 ubox
67 74 0.074817653 ubox
67 79 0.006047120 ubox
68 75 0.025595311 ubox
68 76 0.116258784 ubox
68 77 0.022780542 ubox
69 75 0.144563981 ubox
69 76 0.022047635 ubox
69 77 0.007518430 ubox
69 78 0.040451951 ubox
70 74 0.146947713 ubox
70 79 0.035374764 ubox
71 75 0.007461121 ubox
71 76 0.017376853 ubox
71 77 0.020139426 ubox
72 76 0.015319866 ubox
72 77 0.013517222 ubox
72 78 0.140698963 ubox
73 77 0.122589560 ubox
74 78 0.026034569 ubox
75 79 0.004371145 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
31 58 0.9500000 lbox
32 57 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
