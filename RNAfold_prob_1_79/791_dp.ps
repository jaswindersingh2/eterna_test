%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (791)
} def

/sequence { (\
GGAAAAACGACUCAGAUAUAGCUAGUAGUGACAGCAACCAGUCUGCACAUACUACUAUACUAGAGCGAGUGCUCUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.205779620 ubox
1 11 0.054776018 ubox
1 12 0.054616637 ubox
1 13 0.073331397 ubox
1 60 0.006812460 ubox
1 61 0.012794988 ubox
1 66 0.003521469 ubox
1 70 0.004155615 ubox
1 72 0.091562072 ubox
1 73 0.090445509 ubox
1 74 0.122116435 ubox
1 75 0.264824728 ubox
1 76 0.015376173 ubox
1 77 0.017332592 ubox
1 78 0.349442458 ubox
2 8 0.048310256 ubox
2 11 0.072620962 ubox
2 12 0.054736411 ubox
2 13 0.187735410 ubox
2 60 0.013476656 ubox
2 66 0.003475261 ubox
2 70 0.007732781 ubox
2 72 0.111351810 ubox
2 73 0.106893305 ubox
2 74 0.305239373 ubox
2 75 0.011667271 ubox
2 76 0.026010810 ubox
2 77 0.346282861 ubox
2 78 0.444283736 ubox
3 12 0.186348728 ubox
3 70 0.086705676 ubox
3 73 0.298843633 ubox
3 75 0.026681630 ubox
3 76 0.341287266 ubox
3 77 0.443466678 ubox
4 12 0.010093428 ubox
4 70 0.029055299 ubox
4 73 0.038409591 ubox
4 75 0.293406465 ubox
4 76 0.429891365 ubox
4 77 0.025703730 ubox
5 12 0.016720235 ubox
5 70 0.180078258 ubox
5 73 0.054863540 ubox
5 75 0.355461686 ubox
5 76 0.031839481 ubox
5 77 0.017575130 ubox
6 12 0.014048990 ubox
6 17 0.007835080 ubox
6 70 0.113914639 ubox
6 73 0.082737395 ubox
6 75 0.030976994 ubox
6 76 0.020637911 ubox
6 77 0.010151819 ubox
7 12 0.011924506 ubox
7 17 0.005759733 ubox
7 70 0.298159518 ubox
7 73 0.212567627 ubox
7 75 0.018900463 ubox
7 76 0.010544307 ubox
7 77 0.003994476 ubox
8 15 0.081596120 ubox
8 65 0.006224847 ubox
8 67 0.502212220 ubox
8 69 0.296351159 ubox
8 71 0.096150646 ubox
8 79 0.218119060 ubox
9 13 0.035302207 ubox
9 22 0.003616501 ubox
9 60 0.012951807 ubox
9 66 0.522337626 ubox
9 70 0.061544305 ubox
9 72 0.064212795 ubox
9 73 0.005051000 ubox
9 74 0.023732522 ubox
9 76 0.005948527 ubox
9 77 0.010152396 ubox
9 78 0.230328922 ubox
10 17 0.004005053 ubox
10 61 0.004738707 ubox
10 70 0.322210527 ubox
10 73 0.022564538 ubox
10 75 0.004493534 ubox
10 76 0.013911695 ubox
10 77 0.213120931 ubox
11 15 0.014846012 ubox
11 21 0.005432071 ubox
11 63 0.033869305 ubox
11 65 0.639762344 ubox
11 67 0.006078378 ubox
11 69 0.327279136 ubox
11 79 0.011642677 ubox
12 16 0.005115763 ubox
12 20 0.005263567 ubox
12 62 0.050777901 ubox
12 63 0.009881695 ubox
12 64 0.641251909 ubox
12 68 0.326649778 ubox
13 63 0.641324173 ubox
13 65 0.007324808 ubox
13 67 0.325954022 ubox
13 79 0.010294101 ubox
14 23 0.003548476 ubox
14 61 0.871125567 ubox
14 75 0.005396183 ubox
14 76 0.006652604 ubox
14 77 0.005970136 ubox
15 22 0.004712323 ubox
15 60 0.891856229 ubox
15 61 0.113014878 ubox
15 66 0.100226111 ubox
15 74 0.004452555 ubox
15 75 0.003388720 ubox
15 76 0.007643377 ubox
15 77 0.006652187 ubox
15 78 0.040000468 ubox
16 58 0.012680450 ubox
16 61 0.077380625 ubox
16 73 0.003476085 ubox
16 75 0.005265376 ubox
16 76 0.006996324 ubox
16 77 0.037384044 ubox
17 57 0.009793588 ubox
17 59 0.973488601 ubox
17 62 0.021641577 ubox
17 63 0.009126290 ubox
17 64 0.030332924 ubox
17 65 0.011469430 ubox
18 56 0.006734219 ubox
18 58 0.989055978 ubox
18 61 0.017720058 ubox
19 57 0.990974135 ubox
19 59 0.007275885 ubox
19 62 0.119707907 ubox
20 56 0.991387172 ubox
20 58 0.007222561 ubox
20 61 0.121438984 ubox
21 55 0.991150231 ubox
21 56 0.006379177 ubox
21 58 0.006535675 ubox
21 60 0.121186017 ubox
21 66 0.005021300 ubox
22 65 0.005019536 ubox
23 54 0.985387796 ubox
23 57 0.120765638 ubox
23 59 0.007799126 ubox
23 64 0.003945426 ubox
24 53 0.991307567 ubox
24 56 0.125530228 ubox
24 58 0.004707700 ubox
25 50 0.003165482 ubox
25 52 0.991955527 ubox
25 55 0.126083632 ubox
26 49 0.005132283 ubox
26 51 0.991340967 ubox
26 54 0.126079333 ubox
27 50 0.984077227 ubox
27 53 0.126060443 ubox
28 46 0.017316206 ubox
28 48 0.987195380 ubox
28 50 0.024346201 ubox
28 52 0.125653229 ubox
29 45 0.016736162 ubox
29 47 0.990230733 ubox
29 49 0.034850097 ubox
29 51 0.124651415 ubox
30 43 0.034033533 ubox
30 46 0.990130297 ubox
30 48 0.036373998 ubox
30 50 0.116523319 ubox
31 42 0.038576195 ubox
31 44 0.007519254 ubox
31 50 0.004678975 ubox
32 41 0.038686015 ubox
32 45 0.987490945 ubox
33 42 0.004884113 ubox
33 44 0.987068427 ubox
34 39 0.009847066 ubox
34 42 0.140709587 ubox
34 43 0.979665146 ubox
34 46 0.124979103 ubox
35 41 0.799237396 ubox
35 45 0.125238214 ubox
36 42 0.132060362 ubox
36 44 0.119918849 ubox
37 42 0.028703602 ubox
37 44 0.007068815 ubox
58 79 0.003799008 ubox
59 76 0.005791806 ubox
59 77 0.009724360 ubox
60 65 0.008332265 ubox
60 79 0.035368063 ubox
61 79 0.007213150 ubox
62 75 0.615747486 ubox
62 76 0.026738891 ubox
62 77 0.008246350 ubox
63 74 0.692136799 ubox
63 75 0.004105173 ubox
63 76 0.005564451 ubox
63 78 0.009736040 ubox
64 73 0.693065420 ubox
64 75 0.005708572 ubox
64 77 0.009599264 ubox
65 72 0.693439404 ubox
65 74 0.005716423 ubox
65 76 0.008587289 ubox
65 78 0.007498685 ubox
66 71 0.692498675 ubox
66 79 0.183609972 ubox
67 72 0.014033406 ubox
67 74 0.050492025 ubox
67 76 0.065453436 ubox
67 77 0.007890563 ubox
67 78 0.211880677 ubox
68 73 0.048052921 ubox
68 75 0.111620156 ubox
68 76 0.013108361 ubox
68 77 0.212008916 ubox
69 73 0.004818655 ubox
69 74 0.119311168 ubox
69 75 0.012440275 ubox
69 76 0.198363535 ubox
69 77 0.006710865 ubox
69 78 0.042062036 ubox
70 79 0.014908122 ubox
71 75 0.006240240 ubox
71 76 0.008559137 ubox
71 77 0.004238441 ubox
71 78 0.025511136 ubox
72 79 0.015210138 ubox
74 79 0.013016891 ubox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 41 0.9500000 lbox
62 75 0.9500000 lbox
63 74 0.9500000 lbox
64 73 0.9500000 lbox
65 72 0.9500000 lbox
66 71 0.9500000 lbox
showpage
end
%%EOF
