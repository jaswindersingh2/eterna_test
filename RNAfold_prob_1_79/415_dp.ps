%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (415)
} def

/sequence { (\
GGAAAGGUUAGGUCGUAUAUGAAACAUAUACGCGCGAAACGCGCCUAUGCAAAGCAUAGGAUUUGGCAAUUAUAGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 67 0.004853118 ubox
1 70 0.018126296 ubox
1 71 0.039806057 ubox
1 73 0.113844900 ubox
1 76 0.012502275 ubox
1 77 0.011829877 ubox
1 78 0.265940255 ubox
2 67 0.009548860 ubox
2 70 0.041707299 ubox
2 71 0.129494733 ubox
2 73 0.074231602 ubox
2 76 0.017699636 ubox
2 77 0.265192198 ubox
2 78 0.335952004 ubox
3 70 0.121800548 ubox
3 71 0.385779135 ubox
3 73 0.035565746 ubox
3 76 0.256729568 ubox
3 77 0.335653895 ubox
4 70 0.406580222 ubox
4 71 0.207459062 ubox
4 73 0.031616110 ubox
4 76 0.322676068 ubox
4 77 0.008878246 ubox
5 64 0.010218259 ubox
5 70 0.218076299 ubox
5 71 0.073731277 ubox
5 73 0.016223935 ubox
5 76 0.009326317 ubox
5 77 0.007705621 ubox
6 42 0.008906618 ubox
6 63 0.010348032 ubox
6 67 0.045843439 ubox
6 70 0.064643931 ubox
6 71 0.036187861 ubox
6 73 0.058728689 ubox
6 76 0.009903491 ubox
6 77 0.004156912 ubox
6 78 0.015623501 ubox
7 40 0.020449212 ubox
7 62 0.010315386 ubox
7 67 0.993789101 ubox
7 70 0.021735818 ubox
7 71 0.010753060 ubox
7 73 0.031532600 ubox
7 77 0.004105864 ubox
8 39 0.020437834 ubox
8 61 0.010183638 ubox
8 65 0.013034136 ubox
8 66 0.994928404 ubox
8 69 0.021295392 ubox
8 72 0.032021515 ubox
8 75 0.003221944 ubox
9 38 0.019968159 ubox
9 60 0.008264667 ubox
9 65 0.994127614 ubox
9 68 0.017018901 ubox
9 69 0.006849063 ubox
9 72 0.017731259 ubox
9 74 0.003513833 ubox
10 63 0.003394487 ubox
10 64 0.994474044 ubox
10 70 0.012824544 ubox
10 71 0.017887554 ubox
10 73 0.003335995 ubox
11 35 0.008827595 ubox
11 62 0.003188735 ubox
11 63 0.992179660 ubox
11 67 0.006555543 ubox
11 70 0.014129939 ubox
12 33 0.018431515 ubox
12 35 0.019131469 ubox
12 62 0.994480068 ubox
12 67 0.071877219 ubox
13 32 0.003948919 ubox
13 34 0.018968922 ubox
13 61 0.994848872 ubox
13 65 0.004140438 ubox
13 66 0.071800352 ubox
14 32 0.128613515 ubox
14 59 0.003318075 ubox
14 60 0.986894622 ubox
14 65 0.070171254 ubox
15 25 0.003500936 ubox
15 29 0.004268267 ubox
15 31 0.998146754 ubox
15 64 0.006172049 ubox
16 24 0.003430867 ubox
16 28 0.004406659 ubox
16 30 0.999356689 ubox
16 58 0.008934139 ubox
17 27 0.004400688 ubox
17 29 0.999366172 ubox
17 57 0.008554145 ubox
18 26 0.004251042 ubox
18 28 0.999366589 ubox
18 56 0.007734202 ubox
18 58 0.004063525 ubox
19 27 0.999274259 ubox
19 57 0.004870170 ubox
20 26 0.998204407 ubox
20 54 0.004121448 ubox
20 56 0.005640619 ubox
21 25 0.982465921 ubox
21 55 0.005975358 ubox
25 49 0.007862092 ubox
26 48 0.007875959 ubox
27 47 0.007842741 ubox
27 49 0.005538148 ubox
28 46 0.007723934 ubox
28 48 0.005950450 ubox
29 47 0.006029959 ubox
30 46 0.005995198 ubox
31 43 0.010516283 ubox
32 42 0.032219677 ubox
32 44 0.987168722 ubox
32 45 0.005087793 ubox
33 41 0.032312157 ubox
33 43 0.998420571 ubox
34 40 0.031937283 ubox
34 42 0.998972991 ubox
34 44 0.019389978 ubox
34 67 0.010592385 ubox
35 41 0.998895930 ubox
35 43 0.019657449 ubox
35 66 0.010595723 ubox
36 40 0.934464563 ubox
36 42 0.019510620 ubox
37 64 0.010190971 ubox
38 63 0.009978922 ubox
39 62 0.007558434 ubox
41 67 0.009284141 ubox
42 65 0.003298961 ubox
42 66 0.009052257 ubox
43 62 0.006358065 ubox
43 64 0.003687663 ubox
44 60 0.142634368 ubox
45 59 0.996396277 ubox
45 60 0.004377016 ubox
46 58 0.999303128 ubox
46 59 0.003997333 ubox
47 57 0.999403239 ubox
48 56 0.999524540 ubox
49 55 0.999889278 ubox
50 54 0.992620899 ubox
60 71 0.004294857 ubox
60 78 0.004193959 ubox
61 70 0.005489721 ubox
61 77 0.004224623 ubox
62 69 0.005558302 ubox
63 68 0.004801232 ubox
63 75 0.004472692 ubox
64 74 0.005336434 ubox
65 73 0.005356284 ubox
65 77 0.008297755 ubox
65 78 0.005388745 ubox
66 76 0.013963406 ubox
66 77 0.003992290 ubox
66 78 0.004485299 ubox
67 75 0.014986707 ubox
68 73 0.014601038 ubox
68 76 0.008597578 ubox
68 77 0.072454203 ubox
69 73 0.010619569 ubox
69 76 0.080422235 ubox
69 77 0.018556847 ubox
70 74 0.009262738 ubox
70 75 0.076803129 ubox
70 79 0.008972878 ubox
71 75 0.008547730 ubox
71 79 0.006204073 ubox
72 76 0.007590819 ubox
72 77 0.025448857 ubox
73 79 0.009433574 ubox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
45 59 0.9500000 lbox
46 58 0.9500000 lbox
47 57 0.9500000 lbox
48 56 0.9500000 lbox
49 55 0.9500000 lbox
50 54 0.9500000 lbox
showpage
end
%%EOF
