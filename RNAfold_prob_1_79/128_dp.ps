%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (128)
} def

/sequence { (\
GGAAAAAACCAGUACAGGGGACGCCAAAGCAGGAAACUAGCAGGAGUACCACAAGUACGAGGAAAAAAUGUGUCGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.033075938 ubox
1 10 0.489455969 ubox
1 15 0.010321183 ubox
1 25 0.013784629 ubox
1 50 0.008185066 ubox
1 52 0.005191252 ubox
1 69 0.032789897 ubox
1 71 0.036712589 ubox
1 73 0.011321300 ubox
1 74 0.064134656 ubox
1 76 0.004873545 ubox
1 77 0.003674726 ubox
1 78 0.134985047 ubox
2 9 0.488012026 ubox
2 10 0.022454800 ubox
2 15 0.003244801 ubox
2 24 0.013789192 ubox
2 49 0.008140707 ubox
2 69 0.024343275 ubox
2 71 0.015491260 ubox
2 73 0.060912069 ubox
2 74 0.084251707 ubox
2 76 0.004962391 ubox
2 77 0.132894631 ubox
2 78 0.172776793 ubox
3 69 0.034795736 ubox
3 71 0.023001175 ubox
3 73 0.083300691 ubox
3 76 0.129875886 ubox
3 77 0.171354861 ubox
4 69 0.017659504 ubox
4 71 0.024893954 ubox
4 73 0.009110581 ubox
4 76 0.162195872 ubox
4 77 0.016415739 ubox
5 69 0.015251316 ubox
5 71 0.023870303 ubox
5 73 0.012002323 ubox
5 76 0.020500694 ubox
5 77 0.008245305 ubox
6 69 0.018821017 ubox
6 71 0.022532772 ubox
6 73 0.035771259 ubox
6 76 0.009518907 ubox
6 77 0.005749376 ubox
7 69 0.021579729 ubox
7 71 0.020185332 ubox
7 73 0.029522147 ubox
7 76 0.005813844 ubox
7 77 0.024896330 ubox
8 56 0.011732305 ubox
8 69 0.033196589 ubox
8 71 0.098392335 ubox
8 73 0.049761283 ubox
8 76 0.028254730 ubox
8 77 0.003556845 ubox
9 17 0.004475551 ubox
9 18 0.087973275 ubox
9 19 0.015420320 ubox
9 20 0.007212810 ubox
9 33 0.005415535 ubox
9 44 0.003162828 ubox
9 55 0.012147263 ubox
9 59 0.015255094 ubox
9 61 0.190508528 ubox
9 62 0.779903969 ubox
9 70 0.083256145 ubox
9 72 0.052350050 ubox
9 75 0.027531637 ubox
9 79 0.004291038 ubox
10 17 0.088485559 ubox
10 18 0.015684913 ubox
10 19 0.007347405 ubox
10 32 0.005456875 ubox
10 43 0.003169581 ubox
10 59 0.083174524 ubox
10 61 0.783711409 ubox
10 62 0.031143835 ubox
10 70 0.057678015 ubox
10 72 0.014325336 ubox
10 75 0.005412853 ubox
10 79 0.004765180 ubox
11 56 0.009792820 ubox
11 69 0.058188225 ubox
11 71 0.014517423 ubox
11 73 0.003557355 ubox
12 30 0.006455886 ubox
12 49 0.016129387 ubox
12 52 0.032197262 ubox
12 56 0.005907939 ubox
12 58 0.973043127 ubox
12 74 0.004728510 ubox
12 78 0.005731637 ubox
13 29 0.006354002 ubox
13 48 0.016221371 ubox
13 51 0.031949674 ubox
13 53 0.004296485 ubox
13 54 0.009991164 ubox
13 55 0.005108717 ubox
13 57 0.976702352 ubox
13 72 0.006500955 ubox
14 47 0.016215533 ubox
14 56 0.979231034 ubox
14 71 0.006988052 ubox
14 73 0.003475695 ubox
14 76 0.003476647 ubox
15 46 0.016184477 ubox
15 55 0.978333965 ubox
15 70 0.007027168 ubox
15 72 0.003608473 ubox
15 75 0.003712159 ubox
15 79 0.014060856 ubox
16 69 0.006613930 ubox
16 71 0.003460583 ubox
16 76 0.003382577 ubox
16 77 0.003206028 ubox
17 25 0.017500699 ubox
17 50 0.070946501 ubox
17 52 0.292965507 ubox
17 77 0.030160673 ubox
17 78 0.025032262 ubox
18 24 0.017490648 ubox
18 25 0.017826487 ubox
18 49 0.070661388 ubox
18 50 0.419475744 ubox
18 52 0.824470698 ubox
18 74 0.004988904 ubox
18 76 0.036096608 ubox
18 77 0.023341490 ubox
18 78 0.006208054 ubox
19 24 0.017868920 ubox
19 25 0.004785059 ubox
19 49 0.418972006 ubox
19 50 0.898442874 ubox
19 52 0.004471383 ubox
19 73 0.004969598 ubox
19 76 0.020315367 ubox
19 77 0.004721887 ubox
19 78 0.044404253 ubox
20 24 0.004718263 ubox
20 47 0.010380475 ubox
20 49 0.898764178 ubox
20 50 0.016139327 ubox
20 74 0.053821469 ubox
20 77 0.044579560 ubox
21 47 0.949430842 ubox
21 71 0.005091035 ubox
21 73 0.053907324 ubox
21 76 0.044678719 ubox
22 46 0.983737800 ubox
22 70 0.005103327 ubox
22 72 0.053929042 ubox
22 75 0.044725380 ubox
23 30 0.006055760 ubox
23 47 0.027421476 ubox
23 69 0.003683528 ubox
23 71 0.053249278 ubox
23 73 0.004708325 ubox
23 74 0.043130975 ubox
24 29 0.006046822 ubox
24 33 0.007494337 ubox
24 43 0.007331446 ubox
24 44 0.993596946 ubox
24 46 0.027728439 ubox
24 62 0.006420293 ubox
24 70 0.051810935 ubox
24 72 0.022300459 ubox
25 32 0.007679899 ubox
25 43 0.994734132 ubox
25 44 0.036724290 ubox
25 61 0.006694042 ubox
25 70 0.023392515 ubox
25 72 0.029196507 ubox
26 69 0.022590477 ubox
26 71 0.026176416 ubox
27 69 0.003938507 ubox
28 38 0.015765089 ubox
28 69 0.006124896 ubox
29 37 0.016197603 ubox
29 38 0.003313595 ubox
29 41 0.995067142 ubox
29 71 0.007682441 ubox
29 73 0.008395938 ubox
30 40 0.995209934 ubox
30 70 0.008171351 ubox
30 72 0.008451762 ubox
31 38 0.972484160 ubox
31 69 0.007994154 ubox
31 71 0.008381060 ubox
32 37 0.977866287 ubox
32 38 0.103019140 ubox
32 41 0.005246314 ubox
32 50 0.005506900 ubox
33 37 0.110316102 ubox
33 38 0.029642548 ubox
33 49 0.005506056 ubox
33 69 0.005696149 ubox
33 78 0.004893224 ubox
34 38 0.006370537 ubox
34 77 0.004788729 ubox
35 76 0.004551701 ubox
36 47 0.007056811 ubox
36 56 0.004564175 ubox
37 43 0.003196209 ubox
37 44 0.003907196 ubox
37 46 0.007354636 ubox
37 55 0.004741662 ubox
38 43 0.003744717 ubox
38 45 0.007144393 ubox
38 54 0.004625110 ubox
40 52 0.003436729 ubox
40 71 0.005753228 ubox
41 61 0.004868609 ubox
41 62 0.008390648 ubox
41 70 0.005863796 ubox
42 69 0.005887839 ubox
43 49 0.003555689 ubox
43 50 0.021608674 ubox
43 52 0.004934215 ubox
43 78 0.004671283 ubox
44 49 0.021502667 ubox
44 77 0.004684664 ubox
44 78 0.003754469 ubox
45 76 0.004652726 ubox
45 77 0.003731584 ubox
46 52 0.003295841 ubox
46 58 0.068673556 ubox
46 76 0.003191123 ubox
47 57 0.068800954 ubox
48 56 0.068850473 ubox
48 73 0.004097094 ubox
49 55 0.068546954 ubox
49 62 0.010555686 ubox
50 55 0.005459232 ubox
50 61 0.010589155 ubox
50 72 0.009143277 ubox
51 71 0.010112585 ubox
51 73 0.003371389 ubox
52 59 0.008758407 ubox
52 61 0.004601350 ubox
52 70 0.010201660 ubox
52 72 0.003593041 ubox
52 79 0.011256214 ubox
53 69 0.009434366 ubox
53 71 0.003320732 ubox
53 77 0.005634345 ubox
54 76 0.004394017 ubox
54 77 0.007030259 ubox
55 74 0.005719781 ubox
55 77 0.017016009 ubox
55 78 0.134205123 ubox
56 72 0.007614422 ubox
56 79 0.004129112 ubox
57 71 0.008408767 ubox
57 73 0.005454538 ubox
57 76 0.180712565 ubox
57 77 0.007604344 ubox
58 70 0.008575265 ubox
58 72 0.005804395 ubox
58 75 0.205286102 ubox
58 79 0.058861593 ubox
59 69 0.005893239 ubox
59 71 0.005841146 ubox
59 73 0.003224062 ubox
59 74 0.298903101 ubox
59 76 0.013167632 ubox
59 77 0.173397903 ubox
59 78 0.256289637 ubox
60 69 0.020505073 ubox
60 71 0.013409511 ubox
60 73 0.297976408 ubox
60 76 0.195557946 ubox
60 77 0.248152740 ubox
61 69 0.009354065 ubox
61 71 0.023307461 ubox
61 73 0.010935145 ubox
61 74 0.038613854 ubox
61 76 0.225808533 ubox
61 77 0.004789698 ubox
61 78 0.070646770 ubox
62 69 0.013838444 ubox
62 71 0.272411656 ubox
62 73 0.032666976 ubox
62 74 0.290950371 ubox
62 76 0.005902924 ubox
62 77 0.069599514 ubox
62 78 0.145118769 ubox
63 69 0.043859683 ubox
63 71 0.023188102 ubox
63 73 0.276560618 ubox
63 76 0.066962163 ubox
63 77 0.144212171 ubox
64 69 0.073696846 ubox
64 71 0.067734622 ubox
64 73 0.070169661 ubox
64 76 0.129875068 ubox
64 77 0.017229852 ubox
65 69 0.032045005 ubox
65 71 0.104856298 ubox
65 73 0.017694555 ubox
65 76 0.017922289 ubox
65 77 0.016832820 ubox
66 71 0.077375133 ubox
66 73 0.043430245 ubox
66 76 0.016301968 ubox
66 77 0.033173846 ubox
67 71 0.032335977 ubox
67 73 0.057000407 ubox
67 76 0.034205517 ubox
67 77 0.243963566 ubox
68 73 0.017323709 ubox
68 76 0.273399582 ubox
68 77 0.028640542 ubox
69 75 0.276496762 ubox
69 79 0.059498460 ubox
70 74 0.265957414 ubox
70 76 0.008978295 ubox
70 77 0.022060457 ubox
70 78 0.096250090 ubox
71 75 0.008710825 ubox
71 79 0.068638111 ubox
72 76 0.017190288 ubox
72 77 0.022529540 ubox
72 78 0.116949603 ubox
73 79 0.006523312 ubox
74 79 0.030509876 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
18 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
showpage
end
%%EOF
