%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (171)
} def

/sequence { (\
GGAAAAAAGCAGCUGAGGGCCCGACAAAGGACGAAAGUACCGGUGGGAGCGCGGCAGCGGGCAAAAAACUCCAGAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.035695024 ubox
1 62 0.004425590 ubox
1 69 0.038987839 ubox
1 70 0.041803656 ubox
1 71 0.027670345 ubox
1 72 0.930023005 ubox
1 78 0.041217452 ubox
2 10 0.009073922 ubox
2 62 0.004472270 ubox
2 69 0.049894441 ubox
2 70 0.022225555 ubox
2 71 0.930625314 ubox
2 72 0.007599733 ubox
2 77 0.040028956 ubox
2 78 0.059326050 ubox
3 70 0.909059806 ubox
3 76 0.037266076 ubox
3 77 0.058697198 ubox
4 70 0.027947768 ubox
4 76 0.051442576 ubox
4 77 0.003903671 ubox
5 70 0.004300647 ubox
5 76 0.004395717 ubox
7 77 0.004159149 ubox
8 70 0.006721444 ubox
8 76 0.004176853 ubox
9 20 0.004487149 ubox
9 58 0.097653737 ubox
9 62 0.965722985 ubox
9 69 0.007258650 ubox
9 78 0.008144309 ubox
10 19 0.004530383 ubox
10 57 0.097626238 ubox
10 59 0.036258410 ubox
10 60 0.136030844 ubox
10 61 0.963384753 ubox
10 74 0.006753105 ubox
11 76 0.003681070 ubox
11 77 0.004973304 ubox
12 20 0.006359803 ubox
12 55 0.098870157 ubox
12 58 0.994346522 ubox
12 62 0.005347747 ubox
12 76 0.005326311 ubox
13 19 0.006422546 ubox
13 54 0.099006963 ubox
13 57 0.994814931 ubox
13 61 0.005277753 ubox
13 74 0.018910795 ubox
14 18 0.005787233 ubox
14 53 0.097902545 ubox
14 56 0.994407363 ubox
14 60 0.004999470 ubox
14 73 0.018975167 ubox
15 52 0.090844392 ubox
15 55 0.992178639 ubox
15 71 0.004298627 ubox
15 72 0.018567584 ubox
16 70 0.005806441 ubox
17 50 0.071843607 ubox
17 52 0.924198068 ubox
17 69 0.005789268 ubox
17 70 0.004916147 ubox
17 71 0.017292699 ubox
18 50 0.036363490 ubox
18 52 0.321217932 ubox
18 69 0.005130380 ubox
18 70 0.017209303 ubox
19 50 0.995593794 ubox
19 52 0.012117478 ubox
19 55 0.003620396 ubox
19 62 0.004202548 ubox
19 69 0.017066215 ubox
20 47 0.086146012 ubox
20 49 0.995467135 ubox
20 51 0.012514805 ubox
20 54 0.003726450 ubox
20 61 0.004269792 ubox
21 30 0.004636482 ubox
21 46 0.089408708 ubox
21 47 0.994400200 ubox
21 49 0.005672239 ubox
21 53 0.003712219 ubox
21 60 0.004265815 ubox
22 29 0.004649056 ubox
22 45 0.089596216 ubox
22 46 0.994296318 ubox
22 47 0.041712923 ubox
22 49 0.006984965 ubox
22 51 0.003505640 ubox
22 59 0.004251472 ubox
23 44 0.072616249 ubox
23 50 0.003420062 ubox
23 58 0.004013792 ubox
24 44 0.981270785 ubox
25 42 0.036655243 ubox
25 43 0.979467238 ubox
25 45 0.135064085 ubox
25 46 0.005436944 ubox
26 44 0.135598532 ubox
27 44 0.003489924 ubox
28 38 0.003578121 ubox
29 38 0.010957488 ubox
29 40 0.119048705 ubox
29 41 0.961203965 ubox
30 38 0.026300934 ubox
30 40 0.962026770 ubox
30 41 0.005292855 ubox
31 38 0.987377643 ubox
32 37 0.993524807 ubox
32 42 0.016355062 ubox
33 38 0.008775871 ubox
33 41 0.016285493 ubox
34 38 0.005403883 ubox
40 47 0.004254615 ubox
41 46 0.004272116 ubox
49 62 0.020405361 ubox
50 59 0.004065165 ubox
50 61 0.020422084 ubox
51 58 0.004797049 ubox
52 57 0.004804399 ubox
52 59 0.020410041 ubox
53 58 0.020330486 ubox
57 72 0.004552610 ubox
58 74 0.004136616 ubox
59 69 0.022112946 ubox
59 70 0.039875505 ubox
59 71 0.051191436 ubox
59 72 0.145942985 ubox
59 78 0.007703099 ubox
60 69 0.053345717 ubox
60 70 0.051410144 ubox
60 71 0.146022673 ubox
60 72 0.028775646 ubox
60 77 0.007348947 ubox
60 78 0.003877300 ubox
61 69 0.063283741 ubox
61 70 0.132297189 ubox
61 71 0.028687430 ubox
61 76 0.006565305 ubox
61 77 0.003167273 ubox
62 74 0.006426068 ubox
63 70 0.019508685 ubox
63 77 0.004949586 ubox
64 70 0.008659943 ubox
64 76 0.005024494 ubox
64 77 0.005916615 ubox
65 70 0.009013188 ubox
65 76 0.005971557 ubox
65 77 0.006399983 ubox
66 70 0.004616778 ubox
66 76 0.006422123 ubox
66 77 0.013834269 ubox
67 76 0.014961128 ubox
67 77 0.009004145 ubox
68 76 0.009376356 ubox
68 77 0.005205665 ubox
69 74 0.022775746 ubox
69 79 0.008235969 ubox
70 74 0.004706994 ubox
70 75 0.005884871 ubox
71 79 0.006706577 ubox
72 79 0.017922595 ubox
73 77 0.009132146 ubox
74 78 0.038838142 ubox
1 72 0.9500000 lbox
2 71 0.9500000 lbox
3 70 0.9500000 lbox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
showpage
end
%%EOF
