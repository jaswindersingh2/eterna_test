%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (198)
} def

/sequence { (\
GGAAAACACAAGAACAGAUAGUCAAAAGACAUAUCAAAACUUCACUCAAAAGAGGAAGAGUUCAAGUGCUCUAGGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.132020277 ubox
1 9 0.107063576 ubox
1 15 0.007518855 ubox
1 63 0.003676002 ubox
1 69 0.017620588 ubox
1 70 0.036455077 ubox
1 71 0.049775456 ubox
1 72 0.683403163 ubox
1 76 0.008046545 ubox
1 77 0.007143719 ubox
1 78 0.156919499 ubox
2 7 0.047180886 ubox
2 9 0.042088972 ubox
2 62 0.003494391 ubox
2 63 0.004705486 ubox
2 69 0.044870012 ubox
2 70 0.040206243 ubox
2 71 0.723724895 ubox
2 72 0.019683975 ubox
2 76 0.010300330 ubox
2 77 0.155842112 ubox
2 78 0.161145296 ubox
3 61 0.003170949 ubox
3 62 0.004600617 ubox
3 70 0.717230434 ubox
3 72 0.039233945 ubox
3 76 0.153103335 ubox
3 77 0.160444616 ubox
4 61 0.003782152 ubox
4 70 0.039329410 ubox
4 72 0.034325703 ubox
4 76 0.152759974 ubox
4 77 0.009534662 ubox
5 62 0.003434228 ubox
5 67 0.004132541 ubox
5 70 0.107257631 ubox
5 72 0.047473109 ubox
5 76 0.009856002 ubox
5 77 0.048560292 ubox
6 61 0.004065592 ubox
6 67 0.083000208 ubox
6 70 0.081631977 ubox
6 72 0.029632944 ubox
6 76 0.059099857 ubox
6 77 0.004735263 ubox
7 12 0.011036465 ubox
7 60 0.004201142 ubox
7 66 0.082910545 ubox
7 68 0.866992344 ubox
7 74 0.028910097 ubox
7 75 0.060951125 ubox
7 79 0.011803412 ubox
8 61 0.003272285 ubox
8 67 0.868942444 ubox
8 70 0.006257075 ubox
8 72 0.004217355 ubox
8 76 0.019576885 ubox
9 60 0.003374589 ubox
9 66 0.868237556 ubox
9 68 0.025783248 ubox
9 74 0.049205701 ubox
9 75 0.021262418 ubox
9 79 0.022903708 ubox
10 42 0.021821007 ubox
10 67 0.025581366 ubox
10 72 0.005942971 ubox
11 41 0.030191590 ubox
11 67 0.003375075 ubox
11 70 0.011670650 ubox
11 72 0.050395234 ubox
12 40 0.031164100 ubox
12 43 0.012436290 ubox
12 62 0.003270942 ubox
12 63 0.874950408 ubox
12 69 0.011952074 ubox
12 71 0.051713398 ubox
12 77 0.004492505 ubox
12 78 0.466213245 ubox
13 42 0.012411577 ubox
13 61 0.003214101 ubox
13 62 0.875362083 ubox
13 70 0.048196788 ubox
13 76 0.004131607 ubox
13 77 0.466693723 ubox
14 41 0.011624127 ubox
14 61 0.874770952 ubox
14 67 0.017391544 ubox
14 76 0.466358713 ubox
15 60 0.873926560 ubox
15 66 0.018482912 ubox
15 68 0.039349908 ubox
15 74 0.025953176 ubox
15 75 0.465233952 ubox
16 34 0.005541071 ubox
16 41 0.004071190 ubox
16 67 0.035445903 ubox
16 72 0.011627446 ubox
17 23 0.004545593 ubox
17 32 0.003367842 ubox
17 34 0.004830495 ubox
17 35 0.994883471 ubox
17 71 0.008945065 ubox
18 22 0.003959816 ubox
18 32 0.024451001 ubox
18 34 0.995821628 ubox
18 70 0.006714145 ubox
18 72 0.008161769 ubox
19 31 0.026071953 ubox
19 33 0.995024193 ubox
19 73 0.004911227 ubox
20 32 0.988277993 ubox
20 70 0.003975401 ubox
20 72 0.004945601 ubox
21 30 0.996021732 ubox
21 32 0.004110717 ubox
21 69 0.004072787 ubox
21 71 0.004291781 ubox
22 29 0.998948558 ubox
22 31 0.005422542 ubox
23 28 0.997500515 ubox
27 70 0.004137190 ubox
27 72 0.003654236 ubox
28 35 0.005671018 ubox
28 69 0.004255376 ubox
28 71 0.003857015 ubox
29 34 0.005032913 ubox
29 70 0.003846985 ubox
30 68 0.005878327 ubox
31 67 0.005940763 ubox
32 37 0.003428111 ubox
32 39 0.003435567 ubox
32 66 0.005740855 ubox
36 41 0.013380183 ubox
36 42 0.009984094 ubox
36 62 0.020892985 ubox
37 41 0.010740530 ubox
37 42 0.007605518 ubox
37 61 0.023459635 ubox
37 62 0.007865795 ubox
38 42 0.003974423 ubox
38 61 0.008166229 ubox
38 62 0.032202343 ubox
38 77 0.025650785 ubox
39 61 0.036095013 ubox
39 67 0.007226333 ubox
39 76 0.028643699 ubox
40 52 0.008845848 ubox
40 54 0.017667115 ubox
40 55 0.194679666 ubox
40 58 0.880998182 ubox
40 60 0.036191657 ubox
40 66 0.007514328 ubox
40 74 0.019143682 ubox
40 75 0.029065399 ubox
41 51 0.008827465 ubox
41 53 0.015585915 ubox
41 54 0.195626598 ubox
41 55 0.003690011 ubox
41 56 0.029470243 ubox
41 57 0.902515511 ubox
41 58 0.022440568 ubox
41 59 0.035193640 ubox
41 65 0.007442105 ubox
41 73 0.017505512 ubox
41 74 0.027785293 ubox
42 50 0.008336377 ubox
42 52 0.012426890 ubox
42 53 0.196281917 ubox
42 55 0.026422868 ubox
42 56 0.957344533 ubox
42 57 0.035522200 ubox
42 58 0.030935016 ubox
42 59 0.011582072 ubox
42 64 0.006877897 ubox
42 73 0.016438610 ubox
43 52 0.196533516 ubox
43 54 0.022744404 ubox
43 55 0.962398318 ubox
43 58 0.012418179 ubox
43 74 0.004688777 ubox
44 61 0.007341667 ubox
45 52 0.037635926 ubox
45 54 0.977336028 ubox
45 55 0.007822386 ubox
45 60 0.007705820 ubox
46 50 0.004039307 ubox
46 51 0.035163721 ubox
46 52 0.004732279 ubox
46 53 0.978772432 ubox
46 54 0.005061016 ubox
46 55 0.007332590 ubox
46 56 0.008516356 ubox
46 59 0.007755242 ubox
47 52 0.977291080 ubox
47 54 0.009669186 ubox
47 55 0.008920070 ubox
47 58 0.007753824 ubox
52 78 0.008611437 ubox
53 77 0.008592624 ubox
54 76 0.008213782 ubox
54 78 0.003765536 ubox
55 77 0.004204580 ubox
55 78 0.011667498 ubox
56 72 0.013312044 ubox
56 76 0.004337450 ubox
56 77 0.011634127 ubox
57 72 0.406526691 ubox
57 76 0.005725043 ubox
58 71 0.455956328 ubox
59 67 0.004451463 ubox
59 70 0.470601431 ubox
59 72 0.027273825 ubox
60 69 0.472708754 ubox
60 71 0.028027772 ubox
61 65 0.003292273 ubox
61 68 0.467821282 ubox
62 66 0.010912077 ubox
62 68 0.008301177 ubox
62 75 0.005579351 ubox
63 68 0.025641603 ubox
63 74 0.029588039 ubox
64 77 0.005657109 ubox
65 72 0.047482338 ubox
65 76 0.006318932 ubox
66 71 0.048775387 ubox
66 78 0.035914418 ubox
67 73 0.003473580 ubox
67 74 0.007214916 ubox
68 72 0.003203357 ubox
68 76 0.044336341 ubox
68 78 0.003713620 ubox
69 74 0.035210219 ubox
69 75 0.072664404 ubox
69 79 0.008591018 ubox
70 74 0.065737374 ubox
70 75 0.007376690 ubox
70 79 0.003803774 ubox
71 75 0.010867270 ubox
71 79 0.011329473 ubox
72 79 0.005769899 ubox
73 77 0.007253421 ubox
74 78 0.033054452 ubox
1 72 0.9500000 lbox
2 71 0.9500000 lbox
3 70 0.9500000 lbox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
