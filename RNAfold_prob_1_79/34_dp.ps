%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (34)
} def

/sequence { (\
GGAAAAAACGGCGGCCGGGCCGGGCAAAGCCACGGCAAAACGGCACCGAAACGGGCCGGCGGCGGCCGGCGGGCCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.032000617 ubox
1 12 0.004777057 ubox
1 52 0.004819930 ubox
1 74 0.022561114 ubox
1 75 0.680968404 ubox
1 76 0.055378979 ubox
1 77 0.007344345 ubox
1 78 0.257300750 ubox
2 9 0.015481763 ubox
2 52 0.003489970 ubox
2 70 0.003321383 ubox
2 74 0.681840206 ubox
2 75 0.063604131 ubox
2 76 0.009226051 ubox
2 77 0.254150391 ubox
2 78 0.577881917 ubox
3 76 0.243457020 ubox
3 77 0.576728655 ubox
4 76 0.534134495 ubox
4 77 0.027515084 ubox
5 76 0.033068577 ubox
5 77 0.013934686 ubox
6 76 0.015919400 ubox
6 77 0.008574524 ubox
7 76 0.008114919 ubox
7 77 0.021817413 ubox
8 76 0.024520019 ubox
8 77 0.014915503 ubox
9 17 0.016181064 ubox
9 22 0.005188681 ubox
9 48 0.081270823 ubox
9 58 0.011510908 ubox
9 61 0.013044442 ubox
9 68 0.717352628 ubox
9 69 0.012840565 ubox
9 71 0.659381841 ubox
9 72 0.040032389 ubox
9 73 0.003891913 ubox
9 79 0.117318025 ubox
10 16 0.016345689 ubox
10 21 0.005365948 ubox
10 47 0.084798537 ubox
10 57 0.011623470 ubox
10 60 0.013413543 ubox
10 63 0.004593066 ubox
10 67 0.720000423 ubox
10 70 0.660917712 ubox
10 74 0.011755314 ubox
10 75 0.122357135 ubox
10 77 0.003217582 ubox
10 78 0.123489537 ubox
11 15 0.016082279 ubox
11 20 0.005367611 ubox
11 46 0.084790011 ubox
11 47 0.007502981 ubox
11 56 0.011623801 ubox
11 63 0.053952118 ubox
11 66 0.720030059 ubox
11 70 0.034595548 ubox
11 74 0.122495373 ubox
11 76 0.004937204 ubox
11 77 0.118778091 ubox
11 78 0.004323096 ubox
12 19 0.005363201 ubox
12 55 0.011608766 ubox
12 58 0.013454903 ubox
12 61 0.003954571 ubox
12 62 0.054031926 ubox
12 64 0.004895592 ubox
12 65 0.719731945 ubox
12 68 0.661437490 ubox
12 69 0.024758032 ubox
12 72 0.026818140 ubox
12 73 0.120011508 ubox
12 79 0.004516336 ubox
13 44 0.014204581 ubox
13 46 0.008545712 ubox
13 47 0.003212969 ubox
13 57 0.013466317 ubox
13 60 0.003256406 ubox
13 63 0.005120114 ubox
13 67 0.662040369 ubox
13 75 0.125421603 ubox
13 78 0.004789489 ubox
14 36 0.008036545 ubox
14 44 0.130889861 ubox
14 56 0.013450986 ubox
14 60 0.054110799 ubox
14 63 0.720655404 ubox
14 66 0.662045906 ubox
14 70 0.072574660 ubox
14 74 0.125455763 ubox
15 35 0.008054648 ubox
15 43 0.131748736 ubox
15 55 0.013398608 ubox
15 59 0.054165778 ubox
15 62 0.720962643 ubox
15 65 0.662037758 ubox
15 69 0.072617592 ubox
15 72 0.005633245 ubox
15 73 0.125352734 ubox
16 34 0.008065049 ubox
16 42 0.131744070 ubox
16 54 0.013268899 ubox
16 58 0.052783806 ubox
16 61 0.720934906 ubox
16 64 0.661989544 ubox
16 68 0.072605256 ubox
16 71 0.007511370 ubox
16 72 0.125133287 ubox
17 33 0.008127529 ubox
17 41 0.127754404 ubox
17 47 0.006498407 ubox
17 57 0.039721018 ubox
17 60 0.711772428 ubox
17 63 0.653161456 ubox
17 67 0.070626894 ubox
17 70 0.005364159 ubox
18 31 0.008954473 ubox
18 36 0.045458112 ubox
18 41 0.012256279 ubox
18 46 0.006504008 ubox
18 52 0.010931145 ubox
18 56 0.038049061 ubox
18 60 0.075810010 ubox
18 63 0.029932687 ubox
18 66 0.065131007 ubox
18 67 0.013581644 ubox
18 70 0.037680737 ubox
19 30 0.008964237 ubox
19 36 0.992776140 ubox
19 44 0.007859270 ubox
19 60 0.034925830 ubox
19 63 0.018414353 ubox
19 66 0.018973019 ubox
19 70 0.075737165 ubox
20 29 0.008926480 ubox
20 35 0.995272159 ubox
20 43 0.007868514 ubox
20 54 0.023685365 ubox
20 59 0.033358186 ubox
20 62 0.019873469 ubox
20 64 0.010825974 ubox
20 65 0.023156747 ubox
20 69 0.080237762 ubox
21 34 0.995440549 ubox
21 42 0.007863270 ubox
21 53 0.023682110 ubox
21 58 0.029862591 ubox
21 61 0.019867644 ubox
21 64 0.023076385 ubox
21 68 0.080229198 ubox
22 31 0.010309938 ubox
22 33 0.991678062 ubox
22 41 0.007795357 ubox
22 52 0.023496981 ubox
22 57 0.025769851 ubox
22 60 0.019211088 ubox
22 63 0.020345698 ubox
22 67 0.078732820 ubox
23 30 0.011030496 ubox
23 31 0.995013949 ubox
23 47 0.003663622 ubox
23 56 0.020380199 ubox
23 57 0.007403444 ubox
23 66 0.076077060 ubox
23 67 0.015287172 ubox
23 75 0.003608005 ubox
24 30 0.995862957 ubox
24 31 0.008288332 ubox
24 46 0.003657643 ubox
24 56 0.010411393 ubox
24 60 0.013094495 ubox
24 66 0.021515213 ubox
24 74 0.003616071 ubox
25 29 0.988625960 ubox
25 48 0.006444640 ubox
25 54 0.014564592 ubox
25 55 0.012703556 ubox
25 59 0.013100431 ubox
25 64 0.067603562 ubox
25 65 0.026217795 ubox
25 73 0.003613349 ubox
29 36 0.018372590 ubox
29 44 0.023922931 ubox
29 60 0.020907938 ubox
29 63 0.074260835 ubox
29 66 0.012468145 ubox
29 70 0.003504327 ubox
30 35 0.018377442 ubox
30 43 0.023895237 ubox
30 59 0.020902611 ubox
30 62 0.074307279 ubox
30 65 0.016838248 ubox
30 69 0.003492162 ubox
31 42 0.023210277 ubox
31 48 0.003284179 ubox
31 58 0.019750563 ubox
31 61 0.074169899 ubox
31 64 0.016900242 ubox
31 68 0.003339212 ubox
33 42 0.018574733 ubox
33 48 0.013775610 ubox
33 58 0.017935944 ubox
33 59 0.031777070 ubox
33 61 0.004900133 ubox
33 62 0.020805390 ubox
33 64 0.003727051 ubox
33 65 0.006742047 ubox
34 41 0.026661201 ubox
34 46 0.004658339 ubox
34 47 0.013915159 ubox
34 57 0.018422622 ubox
34 60 0.006777163 ubox
34 63 0.004165924 ubox
34 67 0.003423028 ubox
35 41 0.004760263 ubox
35 44 0.014378132 ubox
35 46 0.013188398 ubox
35 56 0.018414123 ubox
35 60 0.064223908 ubox
35 63 0.019414717 ubox
35 66 0.003476452 ubox
36 42 0.004183650 ubox
36 43 0.014939166 ubox
36 55 0.018339762 ubox
36 58 0.004550586 ubox
36 59 0.064438175 ubox
36 61 0.006162450 ubox
36 62 0.022208267 ubox
36 65 0.003495742 ubox
41 48 0.019514411 ubox
41 53 0.021756689 ubox
41 54 0.006642404 ubox
41 58 0.975136074 ubox
41 59 0.029891825 ubox
41 61 0.011171824 ubox
41 62 0.004599851 ubox
41 64 0.009674093 ubox
42 47 0.019546245 ubox
42 52 0.021961849 ubox
42 57 0.985177062 ubox
42 60 0.008803380 ubox
42 63 0.010007155 ubox
42 75 0.015466926 ubox
43 52 0.006656190 ubox
43 56 0.985412656 ubox
43 60 0.003529235 ubox
43 74 0.015519070 ubox
44 55 0.984687180 ubox
44 58 0.007880174 ubox
44 59 0.003521639 ubox
44 61 0.010219324 ubox
44 73 0.015506929 ubox
46 53 0.022899057 ubox
46 54 0.993345261 ubox
46 55 0.021114736 ubox
46 59 0.010861466 ubox
46 72 0.022233524 ubox
47 53 0.994168954 ubox
47 54 0.024803588 ubox
47 58 0.010874774 ubox
47 71 0.022290485 ubox
47 79 0.008903585 ubox
48 52 0.930055818 ubox
48 57 0.010851306 ubox
48 70 0.021757498 ubox
48 78 0.020806609 ubox
49 77 0.021047560 ubox
50 76 0.017595538 ubox
50 77 0.011942481 ubox
51 76 0.013145726 ubox
51 77 0.008614610 ubox
52 68 0.006351871 ubox
52 69 0.017417620 ubox
52 71 0.003982005 ubox
52 72 0.012873986 ubox
52 73 0.009992219 ubox
52 79 0.008599167 ubox
53 67 0.005237985 ubox
53 75 0.068174033 ubox
53 76 0.035709966 ubox
53 78 0.007961586 ubox
54 66 0.003714714 ubox
54 67 0.022582835 ubox
54 70 0.004663115 ubox
54 74 0.068250583 ubox
54 75 0.039324317 ubox
54 77 0.004308493 ubox
55 63 0.004001270 ubox
55 66 0.023029399 ubox
55 70 0.140088010 ubox
55 74 0.039306715 ubox
56 62 0.004072264 ubox
56 65 0.023433173 ubox
56 69 0.140963947 ubox
56 72 0.065394125 ubox
56 73 0.036991217 ubox
57 61 0.004058187 ubox
57 64 0.023459285 ubox
57 68 0.141137289 ubox
57 71 0.066721895 ubox
57 72 0.034478790 ubox
58 63 0.024306056 ubox
58 67 0.142974095 ubox
58 70 0.068067322 ubox
59 63 0.011014982 ubox
59 66 0.145083545 ubox
59 70 0.032230989 ubox
60 64 0.004760174 ubox
60 65 0.146618248 ubox
60 68 0.070490763 ubox
60 69 0.028732507 ubox
60 71 0.005208218 ubox
60 79 0.013136817 ubox
61 67 0.072012451 ubox
61 70 0.005167327 ubox
61 78 0.014601954 ubox
62 66 0.070861659 ubox
62 67 0.014429825 ubox
62 70 0.003924015 ubox
62 77 0.014225493 ubox
63 68 0.004950576 ubox
63 69 0.004083539 ubox
64 75 0.068468885 ubox
65 74 0.068581751 ubox
66 73 0.068583431 ubox
67 72 0.068560027 ubox
68 74 0.004239678 ubox
68 75 0.035064043 ubox
68 78 0.003704133 ubox
69 74 0.037174820 ubox
69 75 0.009047923 ubox
69 76 0.003618198 ubox
69 77 0.004076429 ubox
69 78 0.013429928 ubox
70 79 0.111080937 ubox
71 75 0.009183279 ubox
71 76 0.005607066 ubox
71 77 0.004744158 ubox
71 78 0.119833429 ubox
72 76 0.004707861 ubox
72 77 0.094422551 ubox
72 78 0.042850490 ubox
73 77 0.027975828 ubox
73 78 0.015725755 ubox
74 79 0.008218742 ubox
75 79 0.004365255 ubox
1 75 0.9500000 lbox
2 74 0.9500000 lbox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
showpage
end
%%EOF
