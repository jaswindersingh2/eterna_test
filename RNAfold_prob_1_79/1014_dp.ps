%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1014)
} def

/sequence { (\
GGAAAAGCGAAACGCAAGAUCAAAGAUCAAGUAACAAAGUUACAAGCUCAAAGAGCAAGGCAAAGCCAGAUGCAUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.106913434 ubox
1 13 0.004460635 ubox
1 67 0.009207622 ubox
1 73 0.015449995 ubox
1 77 0.004090641 ubox
1 78 0.111510896 ubox
2 8 0.037242413 ubox
2 66 0.009169133 ubox
2 73 0.007111386 ubox
2 76 0.006253788 ubox
2 77 0.110257961 ubox
2 78 0.272695406 ubox
3 71 0.012284641 ubox
3 75 0.006375256 ubox
3 76 0.108443393 ubox
3 77 0.272775926 ubox
4 75 0.095050572 ubox
4 76 0.270088725 ubox
4 77 0.013603269 ubox
5 71 0.003495023 ubox
5 75 0.253154346 ubox
5 76 0.017205181 ubox
5 77 0.003889857 ubox
6 71 0.006117889 ubox
6 75 0.018850616 ubox
6 76 0.004257997 ubox
7 13 0.004179600 ubox
7 15 0.178785684 ubox
7 47 0.003321104 ubox
7 61 0.004858067 ubox
7 73 0.237082554 ubox
7 78 0.005675325 ubox
8 14 0.178998903 ubox
8 46 0.003317224 ubox
8 60 0.004856040 ubox
8 72 0.237050804 ubox
8 79 0.876349566 ubox
9 13 0.168185781 ubox
9 15 0.034942779 ubox
9 21 0.008187513 ubox
9 28 0.004538834 ubox
9 71 0.150309702 ubox
9 76 0.004042299 ubox
9 77 0.006672716 ubox
9 78 0.953675314 ubox
10 20 0.007827747 ubox
10 27 0.004307035 ubox
10 71 0.017397778 ubox
10 75 0.004281270 ubox
10 76 0.008691493 ubox
10 77 0.953401932 ubox
11 41 0.004644291 ubox
11 71 0.006439332 ubox
11 75 0.009425741 ubox
11 76 0.950451557 ubox
11 77 0.005693539 ubox
12 32 0.006150504 ubox
12 40 0.004941025 ubox
12 71 0.003713243 ubox
12 75 0.930479466 ubox
12 76 0.007200269 ubox
13 18 0.010399009 ubox
13 25 0.004121138 ubox
13 31 0.006540023 ubox
13 39 0.004972904 ubox
13 69 0.046592472 ubox
13 72 0.009975535 ubox
14 32 0.015594307 ubox
14 61 0.003778814 ubox
14 66 0.041886012 ubox
14 71 0.008652118 ubox
14 73 0.953057490 ubox
15 31 0.016400734 ubox
15 60 0.003776429 ubox
15 65 0.041930013 ubox
15 69 0.013861810 ubox
15 72 0.953852079 ubox
16 71 0.858148011 ubox
17 27 0.003815322 ubox
17 71 0.039623489 ubox
18 27 0.003715804 ubox
18 28 0.991968446 ubox
18 73 0.003284731 ubox
18 78 0.004431095 ubox
19 27 0.992876640 ubox
19 71 0.033874044 ubox
19 77 0.004361896 ubox
20 25 0.008525175 ubox
20 26 0.992286407 ubox
20 29 0.003194566 ubox
20 68 0.007204231 ubox
20 69 0.003771689 ubox
20 70 0.060581405 ubox
21 25 0.984089855 ubox
21 69 0.060794824 ubox
22 27 0.003540554 ubox
25 49 0.004923850 ubox
25 73 0.003824033 ubox
26 48 0.004851634 ubox
26 71 0.011992459 ubox
27 45 0.003795822 ubox
27 70 0.017610872 ubox
28 46 0.004383953 ubox
28 69 0.017705820 ubox
29 41 0.008718862 ubox
30 40 0.009408038 ubox
30 41 0.004138166 ubox
31 35 0.004695452 ubox
31 40 0.004270039 ubox
31 43 0.996573389 ubox
32 38 0.008631950 ubox
32 39 0.003192783 ubox
32 42 0.997737112 ubox
33 40 0.005225145 ubox
33 41 0.997439862 ubox
34 40 0.995011673 ubox
34 41 0.005142305 ubox
35 39 0.985518170 ubox
38 48 0.003382453 ubox
39 47 0.003591706 ubox
40 46 0.003555086 ubox
43 59 0.003728461 ubox
46 56 0.998287463 ubox
46 61 0.005262260 ubox
47 53 0.009151847 ubox
47 55 0.999345655 ubox
47 60 0.005254755 ubox
48 52 0.008366760 ubox
48 53 0.006582556 ubox
48 54 0.998587833 ubox
48 59 0.004749394 ubox
49 53 0.990206806 ubox
51 77 0.005466908 ubox
52 76 0.006274664 ubox
53 67 0.003658591 ubox
53 75 0.006842295 ubox
53 76 0.003635912 ubox
54 75 0.003844094 ubox
55 66 0.004819891 ubox
55 73 0.027813007 ubox
56 65 0.004849124 ubox
56 69 0.006586851 ubox
56 72 0.027967853 ubox
57 71 0.031858934 ubox
57 76 0.005606125 ubox
57 77 0.003342114 ubox
58 71 0.011536973 ubox
58 75 0.007130856 ubox
58 76 0.004499107 ubox
59 66 0.017223916 ubox
59 67 0.994068825 ubox
59 73 0.003659777 ubox
59 75 0.005298913 ubox
60 66 0.995070826 ubox
60 67 0.007572861 ubox
60 73 0.068324642 ubox
61 65 0.987842779 ubox
61 69 0.007618453 ubox
61 72 0.068493463 ubox
62 71 0.066926705 ubox
64 71 0.003284488 ubox
65 73 0.017104659 ubox
66 72 0.017023759 ubox
68 75 0.006496174 ubox
69 73 0.014210924 ubox
69 76 0.004321799 ubox
69 77 0.003202145 ubox
69 78 0.015090687 ubox
70 75 0.004486787 ubox
70 76 0.004032574 ubox
70 77 0.014939183 ubox
8 79 0.9500000 lbox
9 78 0.9500000 lbox
10 77 0.9500000 lbox
11 76 0.9500000 lbox
12 75 0.9500000 lbox
14 73 0.9500000 lbox
15 72 0.9500000 lbox
16 71 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
showpage
end
%%EOF
