%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (941)
} def

/sequence { (\
GGAAAUUAACAGUCGAAAACGACACUUGCAUUCAAAAAAAGAAUGCAAGACUUCAAAAGAAGAGUUAAUACAGACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.005223485 ubox
1 7 0.005959970 ubox
1 10 0.089273483 ubox
1 51 0.006417606 ubox
1 52 0.005622608 ubox
1 54 0.034876457 ubox
1 69 0.006816273 ubox
1 71 0.196013290 ubox
1 75 0.106395662 ubox
1 76 0.051830863 ubox
1 77 0.007518950 ubox
1 78 0.181498728 ubox
2 6 0.005042230 ubox
2 7 0.007651487 ubox
2 10 0.016724559 ubox
2 51 0.006683038 ubox
2 53 0.034065868 ubox
2 54 0.042912324 ubox
2 66 0.005522328 ubox
2 69 0.012329495 ubox
2 71 0.148943228 ubox
2 75 0.059616866 ubox
2 76 0.007906102 ubox
2 77 0.170479463 ubox
2 78 0.409466863 ubox
3 7 0.005200901 ubox
3 52 0.032188463 ubox
3 53 0.042592039 ubox
3 65 0.005217253 ubox
3 66 0.004662190 ubox
3 69 0.026215751 ubox
3 76 0.146593359 ubox
3 77 0.406361565 ubox
4 52 0.038465578 ubox
4 65 0.004175692 ubox
4 66 0.025309450 ubox
4 69 0.051184561 ubox
4 76 0.370308839 ubox
4 77 0.017703132 ubox
5 65 0.027117664 ubox
5 69 0.869229944 ubox
5 76 0.014459091 ubox
5 77 0.006804001 ubox
6 11 0.008899217 ubox
6 50 0.007704315 ubox
6 64 0.027083174 ubox
6 67 0.007581134 ubox
6 68 0.905770438 ubox
6 70 0.007309333 ubox
6 72 0.014031187 ubox
6 73 0.013993089 ubox
6 74 0.066890006 ubox
6 79 0.004454157 ubox
7 11 0.007701050 ubox
7 24 0.004581314 ubox
7 49 0.003271544 ubox
7 50 0.003873183 ubox
7 63 0.024936153 ubox
7 67 0.919464354 ubox
7 68 0.007526755 ubox
7 70 0.007033841 ubox
7 72 0.012374302 ubox
7 73 0.063713691 ubox
7 74 0.007342000 ubox
7 79 0.004730920 ubox
8 66 0.920768882 ubox
8 69 0.006893534 ubox
8 77 0.007829876 ubox
9 65 0.920674237 ubox
9 76 0.005185846 ubox
9 77 0.006929104 ubox
10 59 0.003390118 ubox
10 62 0.003280300 ubox
10 64 0.919800283 ubox
10 73 0.011476529 ubox
10 79 0.022954490 ubox
11 69 0.003853122 ubox
11 76 0.042003257 ubox
11 77 0.007583838 ubox
12 20 0.008527275 ubox
12 23 0.996865187 ubox
12 75 0.045127788 ubox
13 19 0.008231231 ubox
13 22 0.998187748 ubox
13 60 0.004362941 ubox
13 61 0.003307023 ubox
13 74 0.045123980 ubox
14 21 0.998522352 ubox
14 59 0.005030386 ubox
14 62 0.003178630 ubox
14 73 0.045081601 ubox
14 79 0.008856836 ubox
15 20 0.972693508 ubox
15 23 0.003570795 ubox
15 71 0.006620857 ubox
15 78 0.009721451 ubox
16 77 0.009413149 ubox
17 76 0.006413780 ubox
18 66 0.008014831 ubox
18 69 0.007058986 ubox
19 65 0.008683356 ubox
20 64 0.008718841 ubox
20 79 0.007622315 ubox
21 53 0.003320080 ubox
21 54 0.005046471 ubox
21 66 0.037551525 ubox
21 78 0.008014642 ubox
22 52 0.003538956 ubox
22 53 0.004881448 ubox
22 65 0.039119377 ubox
22 77 0.007339706 ubox
23 64 0.039194796 ubox
24 52 0.004985415 ubox
25 49 0.991971360 ubox
26 48 0.997710139 ubox
26 49 0.005701926 ubox
27 47 0.999174135 ubox
27 48 0.004805494 ubox
28 46 0.999988288 ubox
29 45 0.999989599 ubox
30 44 0.999581369 ubox
31 42 0.004929362 ubox
31 43 0.999032655 ubox
32 41 0.006746624 ubox
32 42 0.999483959 ubox
33 41 0.999206735 ubox
48 65 0.003734312 ubox
49 66 0.015378865 ubox
49 78 0.003572999 ubox
50 65 0.037709567 ubox
50 66 0.005450203 ubox
50 77 0.003592089 ubox
51 59 0.046468184 ubox
51 62 0.974808361 ubox
51 64 0.039487050 ubox
52 57 0.003724072 ubox
52 58 0.046260949 ubox
52 59 0.006233898 ubox
52 60 0.009465444 ubox
52 61 0.982784652 ubox
52 62 0.006625892 ubox
52 63 0.039042138 ubox
52 64 0.008405660 ubox
53 57 0.038589155 ubox
53 58 0.006391199 ubox
53 59 0.009556687 ubox
53 60 0.984691781 ubox
53 61 0.006475141 ubox
53 62 0.036366131 ubox
53 63 0.038286084 ubox
54 59 0.983605372 ubox
54 62 0.040875865 ubox
57 77 0.003458069 ubox
58 76 0.003840209 ubox
59 75 0.003895280 ubox
59 78 0.095074354 ubox
60 77 0.093641462 ubox
61 76 0.089801416 ubox
61 77 0.005047118 ubox
62 71 0.003790046 ubox
62 75 0.088576160 ubox
62 76 0.004207035 ubox
62 77 0.115231239 ubox
62 78 0.046994838 ubox
63 69 0.010247216 ubox
63 76 0.286067031 ubox
63 77 0.034898005 ubox
64 69 0.004137580 ubox
64 71 0.128198937 ubox
64 75 0.327512226 ubox
64 76 0.007061098 ubox
64 78 0.004376638 ubox
65 70 0.125031907 ubox
65 72 0.033892816 ubox
65 73 0.011872845 ubox
65 74 0.327658628 ubox
66 70 0.004513466 ubox
66 72 0.014056291 ubox
66 73 0.317848603 ubox
66 74 0.005064872 ubox
68 76 0.003410746 ubox
68 77 0.006737827 ubox
69 73 0.003179613 ubox
69 74 0.006681152 ubox
70 76 0.009538563 ubox
70 77 0.011886433 ubox
71 79 0.034733355 ubox
72 76 0.007894351 ubox
72 77 0.015389568 ubox
73 77 0.008987802 ubox
73 78 0.094968860 ubox
75 79 0.015768086 ubox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
showpage
end
%%EOF
