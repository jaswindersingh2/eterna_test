%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (465)
} def

/sequence { (\
GGAAAAGUGUACGUCAGGCGAAAGCCGUCGAAAGACGACAAAAGAUAACGAAAGUUAUCGUACACAAAGCGAGUAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 65 0.003616935 ubox
1 70 0.164032008 ubox
1 74 0.007694144 ubox
1 78 0.045379613 ubox
2 65 0.003873663 ubox
2 70 0.227006321 ubox
2 74 0.005511314 ubox
2 77 0.044443873 ubox
2 78 0.072803244 ubox
3 74 0.004216310 ubox
3 76 0.042349096 ubox
3 77 0.072515459 ubox
4 74 0.010277864 ubox
4 76 0.067316845 ubox
4 77 0.004630317 ubox
5 74 0.013920818 ubox
5 76 0.005459224 ubox
5 77 0.006288734 ubox
6 74 0.034485165 ubox
6 76 0.007470837 ubox
6 77 0.004035326 ubox
7 65 0.997656371 ubox
7 70 0.008364767 ubox
7 76 0.003751802 ubox
7 78 0.013873479 ubox
8 40 0.005942029 ubox
8 64 0.999087663 ubox
8 69 0.006806520 ubox
8 71 0.004282070 ubox
8 75 0.003850059 ubox
9 39 0.006621529 ubox
9 63 0.999756962 ubox
9 70 0.004639466 ubox
9 74 0.003608905 ubox
9 76 0.015767776 ubox
10 38 0.006601536 ubox
10 62 0.999501521 ubox
10 69 0.004519740 ubox
10 75 0.016616297 ubox
11 61 0.999245419 ubox
11 74 0.016651391 ubox
12 17 0.004027580 ubox
12 20 0.004244811 ubox
12 30 0.003782572 ubox
12 37 0.009714081 ubox
12 60 0.998031616 ubox
12 71 0.005422615 ubox
12 73 0.016548153 ubox
13 19 0.014660240 ubox
13 25 0.007697414 ubox
13 26 0.004056607 ubox
13 29 0.012859645 ubox
13 36 0.025414749 ubox
13 39 0.367076289 ubox
13 59 0.195185277 ubox
13 70 0.005791849 ubox
14 18 0.013727202 ubox
14 21 0.020036651 ubox
14 24 0.006477823 ubox
14 31 0.010522015 ubox
14 35 0.025406573 ubox
14 38 0.367523040 ubox
14 41 0.003179804 ubox
14 42 0.003198741 ubox
14 43 0.003175639 ubox
14 45 0.005215404 ubox
14 57 0.005439260 ubox
14 69 0.005398762 ubox
14 72 0.013540711 ubox
15 20 0.021464803 ubox
15 24 0.004955894 ubox
15 27 0.014779165 ubox
15 30 0.011244256 ubox
15 34 0.025194728 ubox
15 37 0.367163373 ubox
15 44 0.007367355 ubox
15 60 0.007855277 ubox
15 71 0.013880270 ubox
16 28 0.007487835 ubox
16 56 0.006432364 ubox
16 58 0.003815606 ubox
17 25 0.008104562 ubox
17 26 0.990264260 ubox
17 29 0.017963426 ubox
17 39 0.003465844 ubox
18 25 0.998767690 ubox
18 26 0.004104577 ubox
18 28 0.018159916 ubox
19 24 0.998440600 ubox
19 27 0.018248408 ubox
19 30 0.016594580 ubox
20 25 0.004695078 ubox
20 26 0.018286028 ubox
20 29 0.016619968 ubox
21 28 0.015684815 ubox
24 39 0.020975011 ubox
26 37 0.126949926 ubox
27 36 0.519517597 ubox
27 39 0.851549026 ubox
28 35 0.520156914 ubox
28 38 0.852714075 ubox
29 34 0.520130443 ubox
29 37 0.853037790 ubox
30 36 0.843042854 ubox
30 39 0.004398031 ubox
34 39 0.004574102 ubox
37 56 0.003373594 ubox
38 55 0.003584001 ubox
39 44 0.014675511 ubox
39 54 0.003605081 ubox
42 61 0.005179081 ubox
43 58 0.003831948 ubox
43 61 0.003446047 ubox
44 49 0.003240143 ubox
44 56 0.004362783 ubox
44 58 0.010980350 ubox
44 59 0.979061013 ubox
45 55 0.004494251 ubox
45 58 0.996495603 ubox
46 54 0.004421966 ubox
46 57 0.998771449 ubox
47 56 0.999014309 ubox
48 55 0.999159251 ubox
49 54 0.999108692 ubox
50 59 0.003690132 ubox
51 58 0.003519825 ubox
60 70 0.008832994 ubox
60 76 0.006170902 ubox
61 69 0.008714218 ubox
61 75 0.006768744 ubox
62 74 0.006869432 ubox
63 73 0.006868883 ubox
64 74 0.004519139 ubox
65 71 0.005864739 ubox
65 73 0.005339133 ubox
66 74 0.008940429 ubox
66 76 0.006425132 ubox
66 77 0.022918987 ubox
67 74 0.017151553 ubox
67 76 0.025114225 ubox
67 77 0.033094813 ubox
68 74 0.026235134 ubox
68 76 0.036183430 ubox
68 77 0.021523213 ubox
69 74 0.013202361 ubox
69 76 0.020010312 ubox
69 77 0.006959464 ubox
69 78 0.036861115 ubox
70 79 0.641123461 ubox
71 76 0.009872082 ubox
71 77 0.023318518 ubox
71 78 0.699850255 ubox
72 76 0.026307629 ubox
72 77 0.654646094 ubox
73 77 0.010265899 ubox
73 78 0.084840558 ubox
74 79 0.007435959 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 39 0.9500000 lbox
28 38 0.9500000 lbox
29 37 0.9500000 lbox
30 36 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
