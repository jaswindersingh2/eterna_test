%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (98)
} def

/sequence { (\
GGAAAAAGCUACGGAUCGAAAGAUCCGCUGCCGUACGAAAGUACAGAUCGAAAGAUCGGUGGCGUAGCGAGCCACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.006043925 ubox
1 10 0.011149024 ubox
1 32 0.054594636 ubox
1 36 0.004987023 ubox
1 57 0.004874886 ubox
1 72 0.011541118 ubox
1 73 0.522383868 ubox
1 75 0.055463927 ubox
1 76 0.024668827 ubox
1 77 0.013575812 ubox
1 78 0.348454951 ubox
2 9 0.012034424 ubox
2 31 0.047757604 ubox
2 32 0.035322556 ubox
2 36 0.003796411 ubox
2 49 0.005252321 ubox
2 57 0.006693643 ubox
2 72 0.522544925 ubox
2 73 0.025413288 ubox
2 75 0.027967234 ubox
2 76 0.010450549 ubox
2 77 0.316614059 ubox
2 78 0.537297802 ubox
3 29 0.003601437 ubox
3 48 0.004923001 ubox
3 56 0.005249098 ubox
3 76 0.229397604 ubox
3 77 0.520917291 ubox
4 29 0.004983608 ubox
4 76 0.312606352 ubox
4 77 0.034043388 ubox
5 10 0.003188444 ubox
5 29 0.003762089 ubox
5 34 0.007988022 ubox
5 76 0.026128285 ubox
5 77 0.024584553 ubox
6 29 0.005278762 ubox
6 76 0.017858706 ubox
6 77 0.024246451 ubox
7 29 0.056853634 ubox
7 76 0.016984633 ubox
7 77 0.019225513 ubox
8 28 0.060800069 ubox
8 31 0.824531351 ubox
8 32 0.057568339 ubox
8 68 0.549536414 ubox
8 72 0.013219588 ubox
8 78 0.005809377 ubox
9 27 0.055537848 ubox
9 30 0.828252279 ubox
9 67 0.549800053 ubox
9 71 0.013216552 ubox
9 79 0.003706309 ubox
10 30 0.035445932 ubox
10 66 0.549630851 ubox
10 70 0.012886130 ubox
11 29 0.081284255 ubox
11 65 0.549502166 ubox
12 27 0.831864819 ubox
12 64 0.548703027 ubox
12 69 0.008795987 ubox
13 26 0.999574481 ubox
13 63 0.007785649 ubox
13 68 0.007005212 ubox
14 25 0.999985516 ubox
15 24 0.999743846 ubox
16 23 0.999687772 ubox
17 22 0.999473284 ubox
26 64 0.009983261 ubox
27 63 0.548843628 ubox
27 68 0.003489567 ubox
28 62 0.549516863 ubox
28 67 0.003561091 ubox
29 45 0.003276313 ubox
29 61 0.547387129 ubox
29 64 0.007107863 ubox
29 66 0.003258640 ubox
30 60 0.548400685 ubox
30 63 0.021357453 ubox
30 78 0.003341706 ubox
31 46 0.005884858 ubox
31 59 0.549537336 ubox
31 62 0.021381056 ubox
32 37 0.004510294 ubox
32 41 0.006063314 ubox
32 46 0.024667415 ubox
32 58 0.549161464 ubox
32 61 0.021358947 ubox
32 79 0.022974663 ubox
33 44 0.997493613 ubox
33 57 0.013706608 ubox
33 78 0.005516323 ubox
34 43 0.998783832 ubox
35 42 0.998972663 ubox
36 41 0.998705145 ubox
36 50 0.006233558 ubox
36 54 0.005306027 ubox
36 79 0.016184699 ubox
37 44 0.004554461 ubox
37 49 0.006295093 ubox
37 78 0.017041204 ubox
38 48 0.005962173 ubox
38 77 0.016461685 ubox
39 76 0.010195103 ubox
41 49 0.005550050 ubox
43 60 0.003280122 ubox
44 58 0.012088673 ubox
44 59 0.003799823 ubox
45 77 0.004185046 ubox
46 56 0.003219741 ubox
46 57 0.995985586 ubox
46 78 0.004836114 ubox
47 56 0.997344515 ubox
47 60 0.015651562 ubox
47 77 0.004464912 ubox
48 55 0.997529584 ubox
48 59 0.016469440 ubox
49 54 0.997362234 ubox
49 58 0.049631838 ubox
49 79 0.014626734 ubox
50 57 0.051569879 ubox
50 78 0.016044861 ubox
51 56 0.047118135 ubox
51 77 0.015947321 ubox
52 76 0.007853160 ubox
54 78 0.021012033 ubox
55 77 0.020365005 ubox
57 79 0.005793185 ubox
58 73 0.010878496 ubox
58 75 0.030236595 ubox
58 76 0.691815315 ubox
58 77 0.024673182 ubox
58 78 0.030963787 ubox
59 72 0.010886668 ubox
59 75 0.833223733 ubox
59 76 0.004937965 ubox
59 77 0.007943810 ubox
60 70 0.005245924 ubox
60 71 0.009824789 ubox
60 74 0.834503941 ubox
61 73 0.835081893 ubox
62 68 0.010219360 ubox
62 72 0.835086782 ubox
63 67 0.010180489 ubox
63 69 0.010965351 ubox
63 71 0.834896687 ubox
64 68 0.023656910 ubox
65 69 0.161141465 ubox
65 70 0.066106484 ubox
68 79 0.009766915 ubox
69 73 0.005355467 ubox
69 75 0.009408765 ubox
69 77 0.024635022 ubox
69 78 0.076394748 ubox
70 76 0.027722119 ubox
70 77 0.074506000 ubox
71 75 0.028625837 ubox
71 76 0.054479508 ubox
71 78 0.006541209 ubox
72 79 0.004020331 ubox
73 79 0.004834237 ubox
75 79 0.010054104 ubox
1 73 0.9500000 lbox
2 72 0.9500000 lbox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
29 61 0.9500000 lbox
30 60 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
