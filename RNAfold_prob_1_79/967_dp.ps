%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (967)
} def

/sequence { (\
GGAAAACGUAGAACUCAAAAGCAAAAAAGAACGAUACAAAAGUAACGUUCAGCGAGUACUACGAAAAACACUACGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.054206036 ubox
1 69 0.367966090 ubox
1 71 0.092047132 ubox
1 72 0.056950639 ubox
1 74 0.024658568 ubox
1 77 0.003391089 ubox
1 78 0.121403483 ubox
2 7 0.017535176 ubox
2 69 0.098317852 ubox
2 71 0.060146144 ubox
2 72 0.004911854 ubox
2 74 0.010480167 ubox
2 76 0.004652577 ubox
2 77 0.116457165 ubox
2 78 0.177437471 ubox
3 72 0.004760026 ubox
3 76 0.111723741 ubox
3 77 0.173342288 ubox
4 72 0.005386877 ubox
4 76 0.155769151 ubox
4 77 0.012444287 ubox
5 72 0.006845612 ubox
5 76 0.012083347 ubox
5 77 0.114921136 ubox
6 72 0.016062667 ubox
6 76 0.140004218 ubox
6 77 0.004617240 ubox
7 63 0.968949574 ubox
7 75 0.145760950 ubox
8 62 0.989136548 ubox
8 74 0.145170846 ubox
9 61 0.989104791 ubox
9 73 0.144727123 ubox
10 60 0.989141941 ubox
10 72 0.143852263 ubox
11 16 0.004027738 ubox
11 59 0.987827966 ubox
11 71 0.142531590 ubox
11 78 0.004064711 ubox
12 57 0.038770017 ubox
12 60 0.009451185 ubox
12 77 0.004038982 ubox
13 57 0.978278339 ubox
13 76 0.003930089 ubox
14 21 0.045754982 ubox
14 52 0.003677761 ubox
14 56 0.992836057 ubox
14 75 0.003907028 ubox
15 19 0.003598513 ubox
15 20 0.042618545 ubox
15 21 0.003514727 ubox
15 23 0.005523858 ubox
15 24 0.005351111 ubox
15 51 0.003697436 ubox
15 54 0.003305496 ubox
15 55 0.992473921 ubox
15 64 0.041162107 ubox
15 65 0.005344720 ubox
15 66 0.005388871 ubox
15 67 0.006806210 ubox
15 68 0.003530144 ubox
16 21 0.017272332 ubox
16 52 0.006059187 ubox
16 54 0.991269085 ubox
16 56 0.004420383 ubox
16 63 0.042164351 ubox
17 57 0.003266750 ubox
18 60 0.005507358 ubox
19 60 0.005351723 ubox
20 49 0.004233745 ubox
20 60 0.031129782 ubox
21 48 0.003949879 ubox
21 49 0.003434221 ubox
21 50 0.015210673 ubox
21 53 0.845305069 ubox
21 57 0.022067583 ubox
21 59 0.032159979 ubox
21 62 0.007856974 ubox
22 29 0.022810914 ubox
22 47 0.003828165 ubox
22 52 0.844726704 ubox
22 54 0.006162537 ubox
22 56 0.022890496 ubox
23 49 0.003879198 ubox
23 57 0.015594451 ubox
24 49 0.004751489 ubox
24 57 0.005505431 ubox
25 49 0.021760570 ubox
25 57 0.005480266 ubox
26 48 0.011179608 ubox
26 49 0.006931225 ubox
27 48 0.003694692 ubox
27 49 0.005906602 ubox
28 49 0.004681059 ubox
29 49 0.009320058 ubox
29 50 0.996713543 ubox
29 53 0.007379947 ubox
30 48 0.007104186 ubox
30 49 0.998790069 ubox
31 43 0.006681457 ubox
31 48 0.999340674 ubox
32 42 0.006913634 ubox
32 47 0.999900813 ubox
33 46 0.998398482 ubox
34 43 0.017684865 ubox
35 42 0.018623073 ubox
35 44 0.983887022 ubox
35 45 0.034164824 ubox
36 43 0.997718025 ubox
37 42 0.996417154 ubox
51 57 0.005784516 ubox
51 60 0.039770648 ubox
51 77 0.008232331 ubox
52 57 0.003280789 ubox
52 59 0.041570270 ubox
52 62 0.008937920 ubox
52 69 0.006937986 ubox
52 76 0.010003112 ubox
53 63 0.071265573 ubox
53 75 0.010160123 ubox
54 59 0.015694745 ubox
54 60 0.004798399 ubox
54 62 0.071605782 ubox
54 69 0.006590033 ubox
54 74 0.010177653 ubox
55 60 0.019539696 ubox
55 72 0.010515977 ubox
56 60 0.008702741 ubox
56 62 0.032604426 ubox
56 69 0.030346908 ubox
56 71 0.010720543 ubox
57 61 0.029507944 ubox
57 63 0.003259187 ubox
57 64 0.005318057 ubox
57 65 0.003339701 ubox
57 66 0.005406453 ubox
57 68 0.029579138 ubox
57 70 0.010458081 ubox
59 63 0.010560194 ubox
60 64 0.004460037 ubox
60 65 0.010917155 ubox
60 66 0.008072874 ubox
60 67 0.010879676 ubox
60 68 0.004744244 ubox
62 75 0.004129652 ubox
62 79 0.012231611 ubox
63 69 0.032420746 ubox
63 71 0.010776188 ubox
63 72 0.003949802 ubox
63 74 0.009815736 ubox
63 77 0.003367847 ubox
63 78 0.065524083 ubox
64 72 0.016161597 ubox
64 76 0.006729675 ubox
64 77 0.065891335 ubox
65 72 0.024487731 ubox
65 76 0.055153619 ubox
65 77 0.018229657 ubox
66 72 0.019256774 ubox
66 76 0.016208444 ubox
66 77 0.037647323 ubox
67 72 0.021484546 ubox
67 76 0.036519664 ubox
67 77 0.372883666 ubox
68 72 0.011140921 ubox
68 76 0.416441417 ubox
68 77 0.016216637 ubox
69 75 0.422590074 ubox
69 79 0.023032141 ubox
70 76 0.072191487 ubox
70 77 0.014744709 ubox
71 75 0.077062922 ubox
71 79 0.031029793 ubox
72 79 0.009955149 ubox
73 77 0.008346879 ubox
74 79 0.046582724 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
