%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1040)
} def

/sequence { (\
GGAAACGCGAAACGCACGAUCAAAGAUCACGUCUCAAAGAGACACGCAGAAACUGCACGCCAAAGGCAGAACGACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.121349975 ubox
1 8 0.034575929 ubox
1 13 0.008439364 ubox
1 15 0.005777465 ubox
1 17 0.011696356 ubox
1 21 0.024691818 ubox
1 30 0.016579264 ubox
1 45 0.033942783 ubox
1 47 0.008872050 ubox
1 53 0.003342879 ubox
1 56 0.003838986 ubox
1 58 0.066324285 ubox
1 60 0.003957335 ubox
1 61 0.096049863 ubox
1 67 0.012097180 ubox
1 72 0.111279937 ubox
1 75 0.074264155 ubox
1 76 0.075298932 ubox
1 77 0.015633846 ubox
1 78 0.529360440 ubox
2 6 0.025028706 ubox
2 8 0.012631789 ubox
2 13 0.003669876 ubox
2 15 0.004395478 ubox
2 17 0.016178673 ubox
2 20 0.022664590 ubox
2 21 0.028835746 ubox
2 28 0.003370683 ubox
2 30 0.010689443 ubox
2 45 0.021412305 ubox
2 47 0.005707269 ubox
2 58 0.040626879 ubox
2 60 0.095779525 ubox
2 61 0.006660267 ubox
2 67 0.007393175 ubox
2 72 0.068292490 ubox
2 75 0.086434625 ubox
2 76 0.019695938 ubox
2 77 0.518306033 ubox
2 78 0.700990680 ubox
3 20 0.028316990 ubox
3 76 0.491785900 ubox
3 77 0.694476836 ubox
4 20 0.003518154 ubox
4 76 0.621370530 ubox
4 77 0.043262192 ubox
5 32 0.003176580 ubox
5 76 0.048691494 ubox
5 77 0.012288709 ubox
6 14 0.074763716 ubox
6 18 0.021728864 ubox
6 31 0.003588674 ubox
6 46 0.006730009 ubox
6 49 0.015020660 ubox
6 59 0.011304326 ubox
6 65 0.006206951 ubox
6 66 0.005425492 ubox
6 69 0.065220345 ubox
6 73 0.278121020 ubox
6 79 0.072585179 ubox
7 13 0.075492202 ubox
7 15 0.934450881 ubox
7 17 0.032847488 ubox
7 30 0.004604684 ubox
7 45 0.004390471 ubox
7 47 0.066993525 ubox
7 56 0.006206665 ubox
7 58 0.007276482 ubox
7 60 0.041680079 ubox
7 67 0.042896579 ubox
7 72 0.137958735 ubox
7 75 0.057185958 ubox
7 78 0.027927867 ubox
8 14 0.937093360 ubox
8 18 0.014031472 ubox
8 46 0.067095118 ubox
8 55 0.006208260 ubox
8 59 0.041918933 ubox
8 66 0.042932766 ubox
8 69 0.019245884 ubox
8 73 0.105980080 ubox
8 79 0.231664763 ubox
9 13 0.876756778 ubox
9 15 0.042747381 ubox
9 17 0.024446096 ubox
9 21 0.006574684 ubox
9 28 0.005870480 ubox
9 35 0.014006378 ubox
9 45 0.065834374 ubox
9 54 0.005171735 ubox
9 58 0.041355573 ubox
9 72 0.104427986 ubox
9 75 0.012705090 ubox
9 76 0.006473384 ubox
9 77 0.018274497 ubox
9 78 0.251905023 ubox
10 20 0.006261936 ubox
10 27 0.005567120 ubox
10 34 0.013733597 ubox
10 76 0.020515777 ubox
10 77 0.249767337 ubox
11 76 0.227916527 ubox
11 77 0.013600848 ubox
12 32 0.020509186 ubox
12 76 0.016778784 ubox
13 18 0.006072716 ubox
13 25 0.004922962 ubox
13 31 0.024118417 ubox
13 46 0.004835819 ubox
13 49 0.005227931 ubox
13 59 0.006180592 ubox
13 69 0.019030826 ubox
13 73 0.183290444 ubox
13 79 0.016612228 ubox
14 21 0.003523316 ubox
14 28 0.003612999 ubox
14 30 0.047570300 ubox
14 32 0.003404654 ubox
14 45 0.006999056 ubox
14 47 0.020600645 ubox
14 56 0.007391338 ubox
14 58 0.008540773 ubox
14 60 0.041899962 ubox
14 67 0.025479908 ubox
14 72 0.181502248 ubox
14 75 0.030923390 ubox
14 78 0.015732570 ubox
15 25 0.003583031 ubox
15 31 0.004428889 ubox
15 46 0.020613848 ubox
15 55 0.007395242 ubox
15 59 0.041941640 ubox
15 66 0.025462208 ubox
15 69 0.030184060 ubox
15 73 0.039142539 ubox
15 79 0.006151572 ubox
16 27 0.003235654 ubox
16 32 0.006917646 ubox
16 54 0.006551645 ubox
16 76 0.007056531 ubox
16 77 0.006610381 ubox
17 25 0.023792885 ubox
17 31 0.009139973 ubox
17 46 0.004224751 ubox
17 49 0.003479004 ubox
17 59 0.004096053 ubox
17 65 0.012914306 ubox
17 69 0.084296086 ubox
17 73 0.075562294 ubox
17 79 0.084170858 ubox
18 27 0.003409501 ubox
18 28 0.984649680 ubox
18 30 0.014775119 ubox
18 58 0.003478235 ubox
18 72 0.067285090 ubox
18 75 0.009529845 ubox
18 77 0.003840138 ubox
18 78 0.080504891 ubox
19 27 0.985724962 ubox
19 76 0.005718370 ubox
19 77 0.076977662 ubox
20 25 0.008521547 ubox
20 26 0.985200324 ubox
20 29 0.003923248 ubox
20 70 0.065297359 ubox
20 71 0.003419769 ubox
20 74 0.036117600 ubox
21 25 0.977070943 ubox
21 69 0.066060167 ubox
21 73 0.037435829 ubox
21 79 0.012771399 ubox
22 27 0.004124776 ubox
22 76 0.003272394 ubox
22 77 0.003636643 ubox
23 76 0.004157311 ubox
23 77 0.042749218 ubox
24 76 0.053649646 ubox
24 77 0.004877790 ubox
25 30 0.021661541 ubox
25 33 0.003190690 ubox
25 45 0.004095270 ubox
25 72 0.048532305 ubox
25 75 0.054246216 ubox
25 76 0.005772212 ubox
25 77 0.004425368 ubox
25 78 0.018282163 ubox
26 32 0.003171783 ubox
26 76 0.004858535 ubox
26 77 0.017429300 ubox
27 70 0.053439179 ubox
27 74 0.053527112 ubox
28 49 0.003364940 ubox
28 69 0.054351053 ubox
28 73 0.053982044 ubox
30 41 0.003536079 ubox
30 46 0.022473270 ubox
30 49 0.004459489 ubox
30 69 0.022789941 ubox
30 73 0.026622852 ubox
30 79 0.017303366 ubox
31 43 0.997257316 ubox
31 45 0.028499314 ubox
31 72 0.013712592 ubox
31 75 0.010506122 ubox
32 40 0.007754129 ubox
32 42 0.998801646 ubox
32 44 0.023372370 ubox
32 70 0.004709845 ubox
32 71 0.010797550 ubox
32 74 0.010451540 ubox
33 39 0.008530000 ubox
33 41 0.999473731 ubox
33 69 0.006522529 ubox
33 73 0.010338218 ubox
34 38 0.007782336 ubox
34 39 0.006496347 ubox
34 40 0.998694730 ubox
34 42 0.020679326 ubox
34 68 0.006003468 ubox
34 70 0.006106130 ubox
35 39 0.990310305 ubox
35 41 0.021126935 ubox
35 69 0.006299711 ubox
45 49 0.009295420 ubox
45 55 0.004193668 ubox
45 59 0.010564887 ubox
45 69 0.017001771 ubox
45 73 0.028504068 ubox
45 79 0.035434011 ubox
46 53 0.006272819 ubox
46 54 0.003373417 ubox
46 56 0.981170039 ubox
46 58 0.008018642 ubox
46 72 0.022886635 ubox
46 75 0.034472945 ubox
46 78 0.036168545 ubox
47 55 0.982272340 ubox
47 73 0.015100865 ubox
48 54 0.979836705 ubox
48 76 0.036781481 ubox
48 77 0.003735030 ubox
49 53 0.958363070 ubox
49 54 0.005891296 ubox
49 56 0.006273460 ubox
49 58 0.004476607 ubox
49 72 0.040386814 ubox
49 75 0.038194829 ubox
49 76 0.003204093 ubox
49 78 0.019202679 ubox
50 77 0.019118260 ubox
51 76 0.017887480 ubox
53 69 0.182410444 ubox
53 73 0.004213574 ubox
54 68 0.183652757 ubox
54 73 0.010227386 ubox
55 67 0.183868679 ubox
55 72 0.011546130 ubox
56 65 0.005848123 ubox
56 66 0.183624042 ubox
56 69 0.007143733 ubox
58 65 0.177939119 ubox
58 66 0.013677735 ubox
58 69 0.212449027 ubox
58 73 0.031001501 ubox
58 79 0.009398152 ubox
59 67 0.971433031 ubox
59 72 0.020480464 ubox
59 75 0.005258506 ubox
59 78 0.009110554 ubox
60 65 0.012419377 ubox
60 66 0.972604099 ubox
60 69 0.008191084 ubox
60 73 0.003768099 ubox
61 65 0.965544041 ubox
61 66 0.011182521 ubox
61 69 0.010578520 ubox
61 73 0.006181928 ubox
61 79 0.009010785 ubox
62 77 0.003550907 ubox
63 77 0.045760714 ubox
64 76 0.051659581 ubox
64 77 0.027139291 ubox
65 72 0.033925691 ubox
65 75 0.052811403 ubox
65 76 0.032786045 ubox
65 78 0.013913431 ubox
66 72 0.011399436 ubox
66 75 0.034343490 ubox
66 77 0.013358002 ubox
66 78 0.013207299 ubox
67 73 0.036119141 ubox
67 79 0.006314293 ubox
68 76 0.110489873 ubox
68 77 0.014336793 ubox
69 75 0.142802480 ubox
69 76 0.020838687 ubox
69 77 0.018760769 ubox
69 78 0.163209765 ubox
70 76 0.023021602 ubox
70 77 0.161386654 ubox
71 76 0.131364261 ubox
71 77 0.005919623 ubox
72 79 0.092436465 ubox
73 77 0.003765811 ubox
73 78 0.097740423 ubox
75 79 0.005604389 ubox
2 78 0.9500000 lbox
3 77 0.9500000 lbox
4 76 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
showpage
end
%%EOF
