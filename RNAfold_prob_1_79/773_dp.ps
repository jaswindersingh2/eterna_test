%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (773)
} def

/sequence { (\
GGAAAAACGACAUACACGUUCAGCUGAGUCAGGUGAAAAACAACCGACAUCAGCGAACGGUAAUGCGAAGCCGUUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.088076596 ubox
1 11 0.021248290 ubox
1 15 0.004496635 ubox
1 21 0.007096641 ubox
1 66 0.003663500 ubox
1 71 0.014971381 ubox
1 72 0.640191164 ubox
1 74 0.010243830 ubox
1 75 0.009200459 ubox
1 76 0.017192666 ubox
1 77 0.024610011 ubox
1 78 0.433024660 ubox
2 8 0.020522350 ubox
2 11 0.011131089 ubox
2 20 0.005928083 ubox
2 21 0.011989476 ubox
2 71 0.640438262 ubox
2 72 0.031809366 ubox
2 74 0.013054361 ubox
2 75 0.025549658 ubox
2 76 0.038638303 ubox
2 77 0.430719195 ubox
2 78 0.474450889 ubox
3 19 0.004211234 ubox
3 20 0.011228158 ubox
3 74 0.026354195 ubox
3 75 0.042033596 ubox
3 76 0.427538439 ubox
3 77 0.441207537 ubox
4 19 0.006209196 ubox
4 74 0.043628351 ubox
4 75 0.419621649 ubox
4 76 0.401602943 ubox
4 77 0.249678778 ubox
5 74 0.404172242 ubox
5 75 0.356405052 ubox
5 76 0.320417457 ubox
5 77 0.011231940 ubox
6 20 0.037722717 ubox
6 74 0.294680882 ubox
6 75 0.375285398 ubox
6 76 0.012645300 ubox
6 77 0.004095374 ubox
7 19 0.043738452 ubox
7 74 0.422749884 ubox
7 75 0.012760064 ubox
7 76 0.004460045 ubox
8 18 0.044759220 ubox
8 65 0.057615032 ubox
8 67 0.821904445 ubox
8 70 0.084834775 ubox
8 73 0.457320489 ubox
8 79 0.036015066 ubox
9 15 0.006453942 ubox
9 17 0.044397274 ubox
9 20 0.016115301 ubox
9 21 0.008703422 ubox
9 64 0.056170021 ubox
9 66 0.835642647 ubox
9 71 0.040788409 ubox
9 72 0.447847396 ubox
9 75 0.008264309 ubox
9 78 0.037944832 ubox
10 19 0.018384810 ubox
10 20 0.006645634 ubox
10 61 0.008747844 ubox
10 64 0.033421646 ubox
10 74 0.009659432 ubox
10 77 0.035556474 ubox
11 18 0.019409840 ubox
11 60 0.008871295 ubox
11 65 0.897900263 ubox
11 67 0.044443549 ubox
11 70 0.152179948 ubox
11 73 0.009797831 ubox
12 61 0.005538009 ubox
12 64 0.897182019 ubox
12 75 0.006430902 ubox
12 76 0.003199372 ubox
13 60 0.005439843 ubox
13 62 0.715107437 ubox
13 63 0.661180075 ubox
13 65 0.025311464 ubox
13 67 0.018537495 ubox
13 68 0.039291169 ubox
13 69 0.023180712 ubox
13 70 0.007292637 ubox
14 61 0.941877667 ubox
14 64 0.021922695 ubox
14 74 0.003235381 ubox
15 60 0.943906890 ubox
15 65 0.051803117 ubox
15 67 0.008150773 ubox
15 73 0.003350734 ubox
16 61 0.026932398 ubox
16 64 0.051200198 ubox
17 59 0.994541140 ubox
17 60 0.019981851 ubox
18 58 0.998506026 ubox
19 57 0.998025076 ubox
20 56 0.997573053 ubox
20 57 0.006290086 ubox
21 55 0.993486620 ubox
23 54 0.999530116 ubox
24 53 0.999986768 ubox
25 52 0.999752014 ubox
26 50 0.006518070 ubox
26 51 0.999934999 ubox
27 50 0.996113616 ubox
28 48 0.988244610 ubox
28 50 0.003566087 ubox
29 47 0.991101760 ubox
29 49 0.006470821 ubox
30 46 0.986910053 ubox
32 41 0.003637001 ubox
32 44 0.042872967 ubox
32 45 0.997825284 ubox
33 41 0.028250325 ubox
33 44 0.998332720 ubox
34 39 0.005764012 ubox
34 40 0.028996439 ubox
34 42 0.156018575 ubox
34 43 0.985306345 ubox
35 41 0.217930510 ubox
55 76 0.042794216 ubox
55 77 0.003185165 ubox
55 78 0.008582456 ubox
56 75 0.048005843 ubox
56 77 0.007814123 ubox
57 74 0.052085791 ubox
57 76 0.003517761 ubox
58 73 0.053422807 ubox
59 66 0.005183009 ubox
59 72 0.057056401 ubox
60 66 0.036076357 ubox
60 71 0.067114545 ubox
60 78 0.013572050 ubox
61 65 0.033781455 ubox
61 68 0.003787218 ubox
61 70 0.066818619 ubox
62 75 0.008713778 ubox
62 76 0.005975808 ubox
62 77 0.017053987 ubox
63 74 0.016263946 ubox
63 75 0.008499365 ubox
63 76 0.026928410 ubox
63 77 0.006141573 ubox
64 68 0.006737131 ubox
64 69 0.028894692 ubox
64 70 0.011350723 ubox
64 73 0.017249721 ubox
64 79 0.005624303 ubox
65 71 0.197813039 ubox
65 72 0.018102546 ubox
65 74 0.091710984 ubox
65 75 0.003324209 ubox
65 78 0.008885999 ubox
66 70 0.198779904 ubox
66 73 0.120378555 ubox
66 79 0.197077208 ubox
67 71 0.031201902 ubox
67 72 0.122487971 ubox
67 75 0.003633604 ubox
67 76 0.016553766 ubox
67 77 0.010696249 ubox
67 78 0.224619509 ubox
68 74 0.006449997 ubox
68 75 0.025178946 ubox
68 76 0.018342021 ubox
68 77 0.224883004 ubox
69 74 0.026751802 ubox
69 75 0.020148762 ubox
69 76 0.215175641 ubox
69 77 0.007480626 ubox
70 74 0.015040334 ubox
70 75 0.158529628 ubox
70 76 0.007947622 ubox
70 77 0.004344770 ubox
70 78 0.008916942 ubox
71 79 0.006610300 ubox
72 79 0.088085517 ubox
73 77 0.006240677 ubox
73 78 0.125158813 ubox
74 79 0.006186809 ubox
75 79 0.004492667 ubox
1 72 0.9500000 lbox
2 71 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
showpage
end
%%EOF
