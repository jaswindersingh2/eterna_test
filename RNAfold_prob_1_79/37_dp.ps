%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (37)
} def

/sequence { (\
GGAAAAGCUAGGGAUCUAUAGCAUAAUAGUAUCGCUCUUGGGAGGGAUACGGCGAUCGCUAGCAACAAGGUGUACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 66 0.100185244 ubox
1 71 0.011039285 ubox
1 73 0.008163015 ubox
1 75 0.017283633 ubox
1 76 0.016594016 ubox
1 77 0.003691712 ubox
1 78 0.116607666 ubox
2 66 0.061653365 ubox
2 71 0.006840631 ubox
2 73 0.003294968 ubox
2 75 0.019049478 ubox
2 76 0.004296891 ubox
2 77 0.107190346 ubox
2 78 0.163539820 ubox
3 71 0.009750375 ubox
3 73 0.004967047 ubox
3 76 0.097847541 ubox
3 77 0.158092195 ubox
4 71 0.005515009 ubox
4 73 0.006933272 ubox
4 76 0.133901465 ubox
4 77 0.010433280 ubox
5 71 0.003827469 ubox
5 73 0.005265124 ubox
5 76 0.011353584 ubox
5 77 0.009309465 ubox
6 71 0.009444331 ubox
6 73 0.014104298 ubox
6 76 0.010251436 ubox
6 77 0.004318383 ubox
7 22 0.012846505 ubox
7 63 0.998718752 ubox
7 66 0.004302222 ubox
7 71 0.008623023 ubox
7 73 0.005098819 ubox
7 75 0.004704768 ubox
8 21 0.012860601 ubox
8 62 0.999826744 ubox
8 70 0.008648142 ubox
8 72 0.004967679 ubox
9 20 0.012806704 ubox
9 61 0.999563122 ubox
9 69 0.008481749 ubox
10 19 0.012689608 ubox
10 60 0.999554744 ubox
11 59 0.999552686 ubox
11 60 0.004084993 ubox
12 57 0.006287908 ubox
12 59 0.006584369 ubox
12 66 0.008102633 ubox
13 56 0.003482154 ubox
13 57 0.999552865 ubox
14 56 0.999559961 ubox
15 52 0.004746209 ubox
15 54 0.005066167 ubox
15 55 0.999062725 ubox
16 21 0.003475792 ubox
16 29 0.008080931 ubox
16 51 0.007029271 ubox
16 52 0.026055255 ubox
16 54 0.997127640 ubox
16 62 0.003410083 ubox
17 21 0.015956209 ubox
17 23 0.025938741 ubox
17 25 0.162560525 ubox
17 26 0.036819017 ubox
17 28 0.330999240 ubox
17 51 0.038491076 ubox
17 52 0.061865200 ubox
17 54 0.012762099 ubox
17 55 0.003472824 ubox
18 24 0.167882803 ubox
18 27 0.344874385 ubox
18 56 0.003518889 ubox
19 23 0.149609257 ubox
19 25 0.060901885 ubox
19 26 0.333865630 ubox
19 28 0.199329103 ubox
19 51 0.081011784 ubox
19 52 0.022420076 ubox
19 54 0.008298515 ubox
19 55 0.006586743 ubox
19 61 0.009523480 ubox
20 24 0.060090622 ubox
20 27 0.208687223 ubox
20 60 0.009910011 ubox
21 27 0.026124797 ubox
21 30 0.020238152 ubox
21 50 0.022626973 ubox
21 53 0.576640155 ubox
21 59 0.010100264 ubox
22 29 0.023022155 ubox
22 51 0.102234711 ubox
22 52 0.572690318 ubox
22 54 0.007536443 ubox
22 58 0.010098310 ubox
23 27 0.022773285 ubox
23 30 0.003647132 ubox
23 56 0.009492208 ubox
24 28 0.022770555 ubox
24 29 0.004250497 ubox
24 49 0.007665789 ubox
24 51 0.270937362 ubox
24 52 0.008318973 ubox
24 54 0.007244175 ubox
24 55 0.011838359 ubox
25 48 0.005956339 ubox
26 48 0.005029322 ubox
27 47 0.004439014 ubox
27 49 0.007760471 ubox
27 51 0.166162992 ubox
27 52 0.085724800 ubox
27 54 0.003435483 ubox
28 48 0.006269248 ubox
28 76 0.003917177 ubox
29 50 0.995796039 ubox
29 53 0.012384051 ubox
29 75 0.004297575 ubox
30 49 0.998982448 ubox
30 52 0.010777619 ubox
30 74 0.004296783 ubox
31 48 0.999335635 ubox
31 73 0.004206099 ubox
32 43 0.007860523 ubox
32 46 0.003429129 ubox
32 47 0.999675579 ubox
33 42 0.007917206 ubox
33 45 0.006250289 ubox
33 46 0.999638999 ubox
33 72 0.004205138 ubox
34 71 0.004245196 ubox
35 40 0.007697631 ubox
35 44 0.999579908 ubox
35 45 0.010449062 ubox
35 46 0.003294470 ubox
35 70 0.004249234 ubox
36 42 0.011947391 ubox
36 43 0.999263701 ubox
36 44 0.006665669 ubox
36 45 0.004556970 ubox
37 41 0.026570230 ubox
37 42 0.995292401 ubox
37 44 0.007813540 ubox
37 69 0.004004805 ubox
38 42 0.006671667 ubox
38 43 0.007315093 ubox
38 68 0.004024343 ubox
39 67 0.004014668 ubox
40 66 0.004008295 ubox
43 60 0.004199915 ubox
44 59 0.004256193 ubox
46 57 0.004300205 ubox
47 56 0.004294991 ubox
48 55 0.004146792 ubox
51 60 0.008296688 ubox
51 78 0.003562135 ubox
52 59 0.008745244 ubox
52 63 0.004878882 ubox
52 77 0.003377011 ubox
53 58 0.008740123 ubox
53 62 0.004891263 ubox
54 75 0.003699361 ubox
57 72 0.006314537 ubox
58 71 0.006409732 ubox
59 70 0.006414488 ubox
60 69 0.006361468 ubox
62 73 0.007669239 ubox
63 69 0.003555560 ubox
63 70 0.003885562 ubox
63 72 0.010831398 ubox
64 71 0.016894429 ubox
64 73 0.018912955 ubox
64 76 0.011719501 ubox
64 77 0.016471278 ubox
65 71 0.081458036 ubox
65 73 0.332916829 ubox
65 76 0.012424414 ubox
65 77 0.014774218 ubox
66 70 0.083246094 ubox
66 72 0.345290040 ubox
66 79 0.206833574 ubox
67 71 0.279927416 ubox
67 73 0.010676517 ubox
67 76 0.016896434 ubox
67 77 0.575550740 ubox
68 73 0.026293033 ubox
68 76 0.645115674 ubox
68 77 0.181045573 ubox
69 73 0.008350243 ubox
69 75 0.654894291 ubox
69 76 0.207604137 ubox
69 77 0.016038245 ubox
69 78 0.188376781 ubox
70 75 0.209983399 ubox
70 76 0.016243329 ubox
70 77 0.175297793 ubox
70 78 0.061979513 ubox
71 79 0.051737806 ubox
72 76 0.012196091 ubox
72 77 0.016606093 ubox
72 78 0.088442416 ubox
73 79 0.005865216 ubox
75 79 0.012527164 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
