%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (452)
} def

/sequence { (\
GGAAAACUGCUGGUGGAAAGAAGUUUUCGGAAGCGACACAAAACACAUGAAAACAUGUGCAGCAGAAAUUUGUCGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.006376280 ubox
1 8 0.003998539 ubox
1 28 0.083565663 ubox
1 70 0.003425934 ubox
1 71 0.025927302 ubox
1 73 0.021677643 ubox
1 74 0.053542834 ubox
1 78 0.043256557 ubox
2 7 0.004410452 ubox
2 27 0.067717505 ubox
2 28 0.983510531 ubox
2 69 0.004458936 ubox
2 70 0.030933869 ubox
2 71 0.025806550 ubox
2 73 0.046805706 ubox
2 74 0.042596424 ubox
2 77 0.025540852 ubox
2 78 0.030252116 ubox
3 26 0.059054193 ubox
3 27 0.985566009 ubox
3 69 0.030512271 ubox
3 70 0.027325576 ubox
3 71 0.049815139 ubox
3 73 0.041047970 ubox
3 76 0.024616228 ubox
3 77 0.030034356 ubox
4 25 0.048480664 ubox
4 26 0.985359366 ubox
4 69 0.025499076 ubox
4 70 0.052168300 ubox
4 71 0.046296200 ubox
4 76 0.028043217 ubox
5 24 0.035211318 ubox
5 25 0.985992072 ubox
5 69 0.051452748 ubox
5 70 0.048089075 ubox
5 71 0.021518718 ubox
5 77 0.006726338 ubox
6 14 0.005054492 ubox
6 24 0.987473169 ubox
6 69 0.046982149 ubox
6 70 0.023149197 ubox
6 71 0.006304256 ubox
6 73 0.011710283 ubox
6 76 0.008179362 ubox
7 13 0.005355662 ubox
7 20 0.004964479 ubox
7 23 0.988404459 ubox
7 35 0.003449396 ubox
7 65 0.144206061 ubox
7 72 0.009820604 ubox
7 75 0.008341185 ubox
8 12 0.004837485 ubox
8 17 0.013818132 ubox
8 19 0.005812122 ubox
8 20 0.003330787 ubox
8 21 0.037013389 ubox
8 22 0.882984482 ubox
8 35 0.021861658 ubox
8 64 0.145364300 ubox
9 24 0.008399980 ubox
9 34 0.030660495 ubox
9 63 0.145561176 ubox
10 15 0.016645144 ubox
10 16 0.014618795 ubox
10 20 0.954036183 ubox
10 23 0.009063092 ubox
10 30 0.003732006 ubox
10 33 0.030752641 ubox
10 62 0.145561138 ubox
10 65 0.008469908 ubox
11 15 0.013486704 ubox
11 16 0.015204513 ubox
11 17 0.031944555 ubox
11 18 0.095498704 ubox
11 19 0.953982452 ubox
11 20 0.045626096 ubox
11 21 0.014639112 ubox
11 22 0.009494598 ubox
11 29 0.003712908 ubox
11 32 0.030120350 ubox
11 61 0.145464225 ubox
11 64 0.008488260 ubox
12 28 0.003514898 ubox
12 60 0.144995646 ubox
12 63 0.008488591 ubox
13 28 0.003365858 ubox
13 34 0.021664569 ubox
13 37 0.031202742 ubox
13 39 0.069844966 ubox
13 60 0.005073465 ubox
14 18 0.018454003 ubox
14 19 0.041641161 ubox
14 20 0.005004323 ubox
14 21 0.013720334 ubox
14 22 0.004869177 ubox
14 29 0.064531658 ubox
14 30 0.032123281 ubox
14 33 0.020214689 ubox
14 35 0.004912649 ubox
14 36 0.030865535 ubox
14 38 0.069899918 ubox
14 40 0.007038075 ubox
14 43 0.003225690 ubox
14 61 0.008469519 ubox
15 26 0.007787894 ubox
15 27 0.005239224 ubox
15 28 0.089526570 ubox
15 34 0.007331208 ubox
15 37 0.069660916 ubox
15 39 0.007793314 ubox
15 60 0.008476526 ubox
16 25 0.010868775 ubox
16 26 0.013718010 ubox
16 27 0.091994777 ubox
16 28 0.052669773 ubox
16 34 0.030385358 ubox
16 37 0.004196254 ubox
16 39 0.003258648 ubox
17 24 0.010477897 ubox
17 25 0.014309518 ubox
17 26 0.093815021 ubox
17 27 0.052861249 ubox
18 24 0.013223627 ubox
18 25 0.093253525 ubox
18 26 0.052886716 ubox
18 27 0.004818293 ubox
19 24 0.088328223 ubox
19 25 0.050990129 ubox
19 26 0.007012872 ubox
19 27 0.003220396 ubox
20 24 0.034681351 ubox
20 25 0.006410182 ubox
20 26 0.005407413 ubox
20 27 0.003681192 ubox
20 28 0.036736649 ubox
20 34 0.007909382 ubox
20 37 0.018900068 ubox
20 39 0.003567463 ubox
21 25 0.004825637 ubox
21 26 0.004397527 ubox
21 27 0.036256453 ubox
22 26 0.027663362 ubox
23 28 0.016861128 ubox
23 34 0.038244242 ubox
23 37 0.011070154 ubox
23 39 0.040764218 ubox
23 44 0.009747851 ubox
24 30 0.003734280 ubox
24 31 0.003195490 ubox
24 32 0.004275131 ubox
24 33 0.038190164 ubox
24 36 0.008971436 ubox
24 38 0.039083201 ubox
24 41 0.005226248 ubox
24 42 0.007162999 ubox
24 43 0.010991383 ubox
25 31 0.004658143 ubox
25 32 0.036706339 ubox
25 35 0.006803291 ubox
25 38 0.012310238 ubox
25 40 0.005835302 ubox
25 41 0.008194844 ubox
25 42 0.011451669 ubox
26 30 0.004438432 ubox
26 31 0.031971655 ubox
26 36 0.008586343 ubox
26 38 0.004760120 ubox
26 40 0.008247641 ubox
26 41 0.011401935 ubox
27 36 0.080386310 ubox
27 40 0.006067571 ubox
28 33 0.006354854 ubox
28 35 0.087109443 ubox
28 79 0.022890104 ubox
29 34 0.091118850 ubox
29 37 0.022970167 ubox
29 39 0.018664939 ubox
29 77 0.009059001 ubox
29 78 0.191104261 ubox
30 34 0.007988943 ubox
30 37 0.017551141 ubox
30 39 0.014221250 ubox
30 74 0.003811046 ubox
30 76 0.003337739 ubox
30 77 0.150138694 ubox
30 78 0.801303005 ubox
31 73 0.003612615 ubox
31 76 0.073344956 ubox
31 77 0.654253785 ubox
32 76 0.461805012 ubox
32 77 0.654244606 ubox
33 37 0.007438859 ubox
33 39 0.014051103 ubox
33 63 0.007659348 ubox
33 73 0.009571480 ubox
33 74 0.006184654 ubox
33 76 0.862627084 ubox
33 77 0.013345555 ubox
33 78 0.012818482 ubox
34 62 0.007667388 ubox
34 72 0.011127831 ubox
34 75 0.986230494 ubox
34 79 0.024470060 ubox
35 39 0.008118672 ubox
35 71 0.010955833 ubox
35 74 0.987775500 ubox
35 77 0.020863365 ubox
35 78 0.026920165 ubox
36 70 0.010444956 ubox
36 73 0.985023406 ubox
36 76 0.027711012 ubox
36 77 0.021703616 ubox
37 59 0.005587642 ubox
37 65 0.006598224 ubox
37 72 0.982502989 ubox
37 75 0.032014512 ubox
38 58 0.005568933 ubox
38 69 0.018540601 ubox
38 70 0.045006556 ubox
38 71 0.935145537 ubox
38 73 0.062208404 ubox
38 76 0.008609249 ubox
39 57 0.005546715 ubox
39 59 0.012419793 ubox
39 62 0.180266443 ubox
39 65 0.372624283 ubox
39 72 0.089037684 ubox
39 75 0.008730417 ubox
40 56 0.005073365 ubox
40 58 0.008414701 ubox
40 69 0.202261842 ubox
40 70 0.220044758 ubox
40 71 0.110226831 ubox
41 69 0.208663837 ubox
41 70 0.161344181 ubox
41 71 0.089051616 ubox
42 69 0.158337495 ubox
42 70 0.180477954 ubox
42 71 0.028472801 ubox
43 58 0.007965294 ubox
43 69 0.180196911 ubox
43 70 0.056529302 ubox
43 71 0.008931685 ubox
44 57 0.007632495 ubox
44 59 0.993706689 ubox
44 62 0.022756679 ubox
44 65 0.046948584 ubox
45 56 0.006712633 ubox
45 58 0.999110482 ubox
46 57 0.999703483 ubox
46 59 0.006470327 ubox
47 56 0.999294688 ubox
47 58 0.006465374 ubox
48 53 0.006146944 ubox
48 55 0.998667336 ubox
48 57 0.006371310 ubox
48 61 0.015938340 ubox
48 64 0.005207458 ubox
49 54 0.992875049 ubox
49 60 0.016006853 ubox
49 63 0.005234703 ubox
50 58 0.003220634 ubox
51 58 0.006156811 ubox
54 59 0.003422416 ubox
56 64 0.006168599 ubox
57 63 0.006545358 ubox
58 62 0.006169351 ubox
58 64 0.007533626 ubox
58 67 0.004281524 ubox
59 63 0.013610473 ubox
59 76 0.004592210 ubox
60 65 0.272696827 ubox
60 72 0.017454153 ubox
60 75 0.017106723 ubox
61 69 0.055533220 ubox
61 70 0.075803047 ubox
61 71 0.031674688 ubox
61 77 0.006909516 ubox
62 69 0.071869567 ubox
62 70 0.039959442 ubox
62 71 0.017434256 ubox
62 73 0.054709541 ubox
62 74 0.006954173 ubox
62 76 0.008356908 ubox
63 72 0.063295234 ubox
63 75 0.008465287 ubox
64 69 0.078925797 ubox
64 70 0.054313914 ubox
64 71 0.077774232 ubox
65 69 0.044426970 ubox
65 70 0.078545429 ubox
65 71 0.032565979 ubox
65 74 0.011484313 ubox
65 78 0.012776170 ubox
66 70 0.037500158 ubox
66 71 0.033667106 ubox
66 73 0.011080960 ubox
66 77 0.013295916 ubox
67 71 0.016213581 ubox
67 76 0.012968679 ubox
67 77 0.009097691 ubox
68 76 0.010136910 ubox
68 77 0.003892188 ubox
69 75 0.010008654 ubox
71 79 0.009618756 ubox
72 78 0.017432439 ubox
74 79 0.004819496 ubox
2 28 0.9500000 lbox
3 27 0.9500000 lbox
4 26 0.9500000 lbox
5 25 0.9500000 lbox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
32 77 0.9500000 lbox
33 76 0.9500000 lbox
34 75 0.9500000 lbox
35 74 0.9500000 lbox
36 73 0.9500000 lbox
37 72 0.9500000 lbox
38 71 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
