%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (77)
} def

/sequence { (\
GGAAAAAGACACCUAACGAAAGUUAGGCUGGCCAUCGAAAGAUGAGUUCGAAAGAACGCUGGCGUGUCGUCAAUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.007860069 ubox
1 33 0.009827279 ubox
1 71 0.052724577 ubox
1 74 0.027442558 ubox
1 75 0.288445187 ubox
1 76 0.564821407 ubox
1 77 0.028885422 ubox
1 78 0.288595505 ubox
2 32 0.009857605 ubox
2 68 0.003629182 ubox
2 70 0.037539625 ubox
2 71 0.113870490 ubox
2 74 0.265431067 ubox
2 75 0.652219566 ubox
2 76 0.017728466 ubox
2 77 0.280483632 ubox
2 78 0.267223067 ubox
3 70 0.099819149 ubox
3 74 0.638350543 ubox
3 76 0.269689583 ubox
3 77 0.266356625 ubox
4 70 0.031917927 ubox
4 74 0.059372964 ubox
4 76 0.246117409 ubox
4 77 0.012864251 ubox
5 70 0.084963404 ubox
5 74 0.101030732 ubox
5 76 0.015161524 ubox
5 77 0.007137545 ubox
6 70 0.134542945 ubox
6 74 0.041627241 ubox
6 76 0.006735506 ubox
6 77 0.060324690 ubox
7 29 0.012344536 ubox
7 67 0.003731645 ubox
7 70 0.119583499 ubox
7 74 0.017533397 ubox
7 76 0.070348671 ubox
7 77 0.003863122 ubox
8 28 0.012581970 ubox
8 32 0.026427395 ubox
8 33 0.005058245 ubox
8 59 0.003474957 ubox
8 68 0.990250807 ubox
8 71 0.071866522 ubox
8 75 0.071933039 ubox
8 78 0.015159206 ubox
9 65 0.005617028 ubox
9 67 0.991188357 ubox
9 70 0.071494401 ubox
9 74 0.065475455 ubox
9 77 0.014039118 ubox
10 30 0.095633764 ubox
10 31 0.007416011 ubox
10 64 0.005712165 ubox
10 66 0.991461902 ubox
10 69 0.070764361 ubox
11 29 0.095479543 ubox
11 65 0.990253456 ubox
11 67 0.041910148 ubox
11 70 0.004659762 ubox
12 26 0.004992039 ubox
12 27 0.117390266 ubox
12 64 0.987090105 ubox
12 66 0.041897708 ubox
12 69 0.004726151 ubox
13 22 0.005280074 ubox
13 26 0.996301936 ubox
13 64 0.006281067 ubox
14 21 0.005156446 ubox
14 25 0.999219172 ubox
15 24 0.999126768 ubox
16 23 0.999195819 ubox
16 70 0.007527485 ubox
17 22 0.999139952 ubox
17 26 0.006012769 ubox
17 69 0.007871584 ubox
18 68 0.007899466 ubox
19 67 0.007840883 ubox
24 66 0.008074570 ubox
25 65 0.008648280 ubox
26 63 0.003485735 ubox
27 63 0.992053796 ubox
28 50 0.007778768 ubox
28 61 0.003380655 ubox
28 62 0.993911267 ubox
28 66 0.003515204 ubox
29 50 0.004835090 ubox
29 61 0.990023167 ubox
29 72 0.003632473 ubox
30 48 0.012516981 ubox
30 49 0.006314018 ubox
30 59 0.003421381 ubox
30 60 0.990075755 ubox
30 71 0.003947397 ubox
31 47 0.021679464 ubox
31 48 0.004642156 ubox
31 59 0.994178606 ubox
31 63 0.015836865 ubox
31 70 0.003951118 ubox
32 44 0.004589075 ubox
32 46 0.022935144 ubox
32 58 0.992186689 ubox
32 62 0.015870266 ubox
32 69 0.003944454 ubox
33 41 0.004075077 ubox
33 44 0.995669016 ubox
33 54 0.011130563 ubox
33 58 0.004953273 ubox
33 61 0.015400977 ubox
34 43 0.997688662 ubox
34 60 0.012709815 ubox
35 42 0.998090023 ubox
35 45 0.015361980 ubox
35 51 0.023972497 ubox
35 55 0.036301430 ubox
36 41 0.997934085 ubox
36 44 0.016412071 ubox
36 50 0.024762596 ubox
36 54 0.036774964 ubox
36 58 0.004763844 ubox
36 79 0.014506821 ubox
37 43 0.011565821 ubox
37 49 0.024862416 ubox
37 57 0.003477204 ubox
37 78 0.016086007 ubox
38 48 0.024486081 ubox
38 77 0.013227755 ubox
39 47 0.022459421 ubox
39 48 0.003449262 ubox
39 76 0.009441803 ubox
39 77 0.010033441 ubox
40 47 0.004651336 ubox
40 76 0.013730960 ubox
41 49 0.037128240 ubox
41 71 0.004070069 ubox
41 75 0.016547043 ubox
42 48 0.036765850 ubox
42 70 0.004079354 ubox
42 74 0.016433377 ubox
43 69 0.004083890 ubox
43 73 0.015762356 ubox
44 59 0.016460092 ubox
44 68 0.004097361 ubox
45 60 0.004585090 ubox
45 67 0.004024717 ubox
46 57 0.995881451 ubox
46 59 0.004931996 ubox
47 55 0.003369517 ubox
47 56 0.997110274 ubox
47 58 0.004466170 ubox
48 54 0.003270576 ubox
48 55 0.997947225 ubox
49 54 0.997920437 ubox
49 58 0.004189743 ubox
49 64 0.005891265 ubox
49 79 0.011744146 ubox
50 57 0.007013533 ubox
50 63 0.006118738 ubox
50 71 0.004541848 ubox
50 78 0.012999141 ubox
51 70 0.004465158 ubox
51 77 0.010717503 ubox
52 76 0.007704411 ubox
52 77 0.008312210 ubox
53 60 0.006385052 ubox
53 76 0.011290124 ubox
54 59 0.006443249 ubox
54 68 0.008717143 ubox
54 71 0.003172678 ubox
54 75 0.013529398 ubox
54 78 0.009441454 ubox
55 67 0.006465003 ubox
55 74 0.013071298 ubox
55 77 0.009433727 ubox
56 65 0.005043112 ubox
56 67 0.011039192 ubox
56 70 0.004679049 ubox
56 76 0.008946654 ubox
57 64 0.005277207 ubox
57 66 0.012929554 ubox
57 69 0.004886781 ubox
58 63 0.005634529 ubox
58 65 0.013695715 ubox
58 67 0.006319090 ubox
58 68 0.005126733 ubox
58 74 0.011705001 ubox
58 75 0.012041843 ubox
59 64 0.013775761 ubox
59 66 0.008285886 ubox
60 72 0.097383552 ubox
60 73 0.004455902 ubox
61 68 0.003162727 ubox
61 71 0.105728373 ubox
62 70 0.105792516 ubox
63 69 0.105861212 ubox
64 68 0.099154570 ubox
64 71 0.004101770 ubox
65 72 0.007390739 ubox
66 71 0.008221613 ubox
68 79 0.010861812 ubox
69 74 0.007640719 ubox
69 75 0.068101184 ubox
69 76 0.009575858 ubox
69 77 0.010172577 ubox
69 78 0.077831620 ubox
70 79 0.005493838 ubox
71 79 0.015781570 ubox
72 76 0.005853931 ubox
72 77 0.010407518 ubox
73 77 0.005934894 ubox
74 79 0.005549973 ubox
75 79 0.007713416 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
29 61 0.9500000 lbox
30 60 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
