%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1072)
} def

/sequence { (\
GGAAAAAAGUUCACUUGAGAAUUUCAAAGAAAAUUCAAAACUUGACACAAAGUGCAAGACAAGAGAACGCAGUCAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.010491524 ubox
1 14 0.004212311 ubox
1 70 0.008122131 ubox
1 73 0.008425874 ubox
1 74 0.244327832 ubox
1 76 0.049833878 ubox
1 77 0.019284330 ubox
1 78 0.382330611 ubox
2 11 0.010457829 ubox
2 12 0.010816776 ubox
2 25 0.004346817 ubox
2 70 0.007364505 ubox
2 73 0.235208959 ubox
2 74 0.683367752 ubox
2 76 0.021538685 ubox
2 77 0.374731544 ubox
2 78 0.332865520 ubox
3 10 0.009800428 ubox
3 11 0.010779812 ubox
3 24 0.004262395 ubox
3 73 0.679164422 ubox
3 76 0.361083572 ubox
3 77 0.331961995 ubox
4 10 0.009859761 ubox
4 23 0.003769437 ubox
4 73 0.142549022 ubox
4 76 0.303317278 ubox
4 77 0.014404280 ubox
5 73 0.142853817 ubox
5 76 0.016883140 ubox
5 77 0.006475977 ubox
6 73 0.178704986 ubox
6 76 0.007197571 ubox
6 77 0.003907514 ubox
7 16 0.006538639 ubox
7 24 0.010630247 ubox
7 73 0.033142698 ubox
7 76 0.003400637 ubox
7 77 0.005854715 ubox
8 15 0.006981423 ubox
8 23 0.011992331 ubox
8 42 0.003634493 ubox
8 73 0.014843812 ubox
8 76 0.006522407 ubox
9 14 0.007012216 ubox
9 22 0.012808175 ubox
9 34 0.003182703 ubox
9 41 0.003781712 ubox
9 68 0.997956005 ubox
9 70 0.028419320 ubox
10 21 0.013026532 ubox
10 31 0.004530873 ubox
10 33 0.003237198 ubox
10 40 0.003772908 ubox
10 65 0.003821685 ubox
10 66 0.004182450 ubox
10 67 0.998414869 ubox
10 69 0.025915023 ubox
11 18 0.005899118 ubox
11 20 0.013061958 ubox
11 30 0.005003448 ubox
11 39 0.003621571 ubox
11 64 0.004607402 ubox
11 65 0.003923719 ubox
11 66 0.998986386 ubox
12 17 0.006161388 ubox
12 19 0.013056069 ubox
12 29 0.005043901 ubox
12 63 0.004526595 ubox
12 65 0.996638011 ubox
14 29 0.011782751 ubox
14 58 0.004839501 ubox
14 63 0.993722764 ubox
14 65 0.003991074 ubox
15 27 0.020318819 ubox
15 28 0.009976930 ubox
15 38 0.027312669 ubox
15 39 0.010043251 ubox
15 40 0.017107348 ubox
15 57 0.004918940 ubox
15 62 0.996774030 ubox
15 63 0.003873545 ubox
15 64 0.004960721 ubox
16 26 0.024240066 ubox
16 27 0.007607111 ubox
16 37 0.032203646 ubox
16 38 0.011670074 ubox
16 39 0.021893325 ubox
16 40 0.003781171 ubox
16 56 0.005033916 ubox
16 59 0.003196182 ubox
16 61 0.995944981 ubox
16 62 0.004701735 ubox
16 63 0.004624855 ubox
17 25 0.026337955 ubox
17 36 0.034340672 ubox
17 55 0.005056913 ubox
17 60 0.991963489 ubox
17 78 0.003438071 ubox
18 24 0.026084618 ubox
18 34 0.003615193 ubox
18 35 0.034060828 ubox
18 77 0.003266843 ubox
19 23 0.017748664 ubox
19 25 0.031862222 ubox
19 34 0.029118301 ubox
19 35 0.031317719 ubox
19 36 0.993005971 ubox
20 24 0.027755112 ubox
20 34 0.034740126 ubox
20 35 0.993760192 ubox
21 34 0.992011738 ubox
21 35 0.004391303 ubox
22 28 0.004247903 ubox
22 29 0.004017654 ubox
22 30 0.012046674 ubox
22 31 0.026247614 ubox
22 32 0.236787373 ubox
22 33 0.964975973 ubox
22 39 0.006828942 ubox
22 40 0.006812041 ubox
23 27 0.004356954 ubox
23 28 0.005700422 ubox
23 29 0.014433708 ubox
23 30 0.036612861 ubox
23 31 0.329608369 ubox
23 32 0.933957464 ubox
23 33 0.013103297 ubox
23 38 0.007790959 ubox
23 39 0.008144616 ubox
24 28 0.013457635 ubox
24 29 0.037982551 ubox
24 30 0.401492190 ubox
24 31 0.834503905 ubox
24 32 0.016570386 ubox
24 33 0.004136754 ubox
24 37 0.007571528 ubox
24 38 0.008199804 ubox
25 29 0.455925214 ubox
25 54 0.003648688 ubox
26 35 0.007702950 ubox
26 53 0.003517818 ubox
27 34 0.007418292 ubox
27 35 0.010900056 ubox
28 34 0.011435149 ubox
28 35 0.003632457 ubox
29 35 0.004113520 ubox
29 36 0.049665615 ubox
30 34 0.003895802 ubox
30 35 0.046497667 ubox
34 40 0.004073339 ubox
34 65 0.005173695 ubox
35 39 0.004137859 ubox
35 45 0.006073745 ubox
35 59 0.007324468 ubox
35 64 0.013372468 ubox
36 44 0.006619331 ubox
36 58 0.007820668 ubox
36 63 0.013945222 ubox
36 65 0.003195947 ubox
37 43 0.006775547 ubox
38 42 0.005322898 ubox
39 53 0.004712461 ubox
40 53 0.100708951 ubox
41 52 0.103979032 ubox
41 58 0.986280051 ubox
41 63 0.003843055 ubox
42 50 0.009109217 ubox
42 51 0.103631751 ubox
42 56 0.003869609 ubox
42 57 0.991881196 ubox
42 58 0.012597495 ubox
42 59 0.005686322 ubox
42 62 0.003855833 ubox
43 49 0.012214315 ubox
43 50 0.102192283 ubox
43 56 0.993269563 ubox
43 57 0.014224181 ubox
43 58 0.005737256 ubox
43 61 0.003825725 ubox
44 48 0.014313115 ubox
44 55 0.993742198 ubox
44 60 0.003807977 ubox
45 53 0.206124949 ubox
46 52 0.206620952 ubox
46 54 0.971254403 ubox
47 53 0.969390534 ubox
48 52 0.959881520 ubox
48 54 0.014090446 ubox
49 53 0.011522266 ubox
53 71 0.003352889 ubox
54 70 0.003687420 ubox
55 69 0.003684664 ubox
58 74 0.007683067 ubox
59 73 0.007972235 ubox
60 72 0.007998900 ubox
63 68 0.003666873 ubox
63 70 0.003255048 ubox
63 74 0.011099518 ubox
63 78 0.003901817 ubox
64 73 0.011073723 ubox
64 77 0.003779548 ubox
65 74 0.009467281 ubox
65 78 0.011040839 ubox
66 73 0.008806216 ubox
66 77 0.011026805 ubox
67 73 0.004071541 ubox
67 76 0.010583724 ubox
68 72 0.004676471 ubox
68 79 0.008256633 ubox
69 73 0.004505578 ubox
69 74 0.027078249 ubox
69 76 0.006785664 ubox
69 77 0.004787632 ubox
69 78 0.033482232 ubox
70 79 0.022119600 ubox
71 76 0.021915521 ubox
71 77 0.014303073 ubox
72 76 0.010769273 ubox
72 77 0.013707712 ubox
72 78 0.050698415 ubox
73 79 0.003753002 ubox
74 79 0.017919839 ubox
2 74 0.9500000 lbox
3 73 0.9500000 lbox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 32 0.9500000 lbox
24 31 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
showpage
end
%%EOF
