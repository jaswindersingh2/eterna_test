%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (189)
} def

/sequence { (\
GGAAAUGCCGAGACCUGUCCAGCAAAUGCUCGGACUGUCGCGUGCAGUCGGCUGACGCUGGUCGAGGCUAGCAUGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.008081705 ubox
1 9 0.083389270 ubox
1 49 0.009902087 ubox
1 52 0.006810358 ubox
1 53 0.008715350 ubox
1 56 0.003625307 ubox
1 72 0.018670323 ubox
1 74 0.007419779 ubox
1 76 0.004772087 ubox
1 77 0.013430109 ubox
1 78 0.814205946 ubox
2 8 0.083300590 ubox
2 9 0.007982096 ubox
2 39 0.005443524 ubox
2 48 0.008545672 ubox
2 49 0.039219299 ubox
2 52 0.009231515 ubox
2 72 0.025035480 ubox
2 76 0.018601573 ubox
2 77 0.811413883 ubox
2 78 0.536559000 ubox
3 38 0.005378711 ubox
3 48 0.038450875 ubox
3 74 0.005186343 ubox
3 76 0.777807778 ubox
3 77 0.534230594 ubox
4 48 0.005106365 ubox
4 69 0.004547840 ubox
4 74 0.019204669 ubox
4 76 0.457606597 ubox
4 77 0.012458219 ubox
5 43 0.005033234 ubox
5 69 0.013260189 ubox
5 74 0.939490209 ubox
5 76 0.012725322 ubox
6 42 0.005245179 ubox
6 46 0.081126586 ubox
6 70 0.015111259 ubox
6 71 0.003447582 ubox
6 73 0.984996630 ubox
6 75 0.011156638 ubox
7 41 0.006656719 ubox
7 45 0.088457452 ubox
7 52 0.011798371 ubox
7 68 0.080319863 ubox
7 72 0.987225025 ubox
8 33 0.006313397 ubox
8 40 0.006425101 ubox
8 44 0.088469506 ubox
8 51 0.011818953 ubox
8 67 0.081213606 ubox
8 71 0.982953180 ubox
9 32 0.006535136 ubox
9 40 0.005578990 ubox
9 42 0.093006999 ubox
9 50 0.011818874 ubox
9 66 0.082069221 ubox
9 67 0.004914895 ubox
9 71 0.086352182 ubox
9 79 0.023607171 ubox
10 31 0.006540917 ubox
10 39 0.009779135 ubox
10 41 0.093176788 ubox
10 49 0.011796454 ubox
10 68 0.013405366 ubox
10 69 0.087232369 ubox
10 78 0.029053924 ubox
11 30 0.006538712 ubox
11 38 0.009654573 ubox
11 48 0.011350735 ubox
11 69 0.973913124 ubox
11 77 0.027671210 ubox
12 29 0.006531058 ubox
12 39 0.138288236 ubox
12 63 0.082377922 ubox
12 68 0.982413897 ubox
12 69 0.038012613 ubox
13 36 0.006490993 ubox
13 38 0.138699106 ubox
13 62 0.082385906 ubox
13 69 0.008342967 ubox
14 37 0.137703638 ubox
14 61 0.082322243 ubox
14 66 0.049274259 ubox
14 67 0.984481775 ubox
15 37 0.016610171 ubox
15 60 0.082070438 ubox
15 64 0.009659468 ubox
15 66 0.984508021 ubox
15 67 0.004260993 ubox
16 24 0.006087060 ubox
16 37 0.004486384 ubox
16 57 0.033601395 ubox
16 64 0.462868702 ubox
16 65 0.863808656 ubox
16 66 0.004130462 ubox
17 23 0.006261105 ubox
17 35 0.154419766 ubox
17 56 0.041415745 ubox
17 58 0.028548077 ubox
17 62 0.033417663 ubox
17 63 0.934284832 ubox
18 22 0.005857854 ubox
18 34 0.154586604 ubox
18 55 0.041407406 ubox
18 57 0.027919724 ubox
18 61 0.003413640 ubox
18 64 0.018017303 ubox
19 33 0.154630632 ubox
19 54 0.029428031 ubox
19 57 0.003298390 ubox
19 61 0.985842867 ubox
20 32 0.154590737 ubox
20 54 0.041586897 ubox
20 60 0.986601174 ubox
21 30 0.153675355 ubox
21 53 0.050847808 ubox
21 59 0.986382844 ubox
22 29 0.154637895 ubox
22 52 0.050962025 ubox
22 58 0.986602926 ubox
23 28 0.154420375 ubox
23 51 0.050875771 ubox
23 54 0.005205057 ubox
23 57 0.985166111 ubox
24 53 0.010798475 ubox
25 48 0.008137590 ubox
25 53 0.023364974 ubox
26 48 0.014857712 ubox
26 53 0.162466002 ubox
27 46 0.054862137 ubox
27 47 0.008770932 ubox
27 54 0.040770658 ubox
27 55 0.044376824 ubox
28 45 0.056980115 ubox
28 52 0.980515437 ubox
28 53 0.019862247 ubox
28 56 0.023796755 ubox
29 44 0.056920139 ubox
29 50 0.009749451 ubox
29 51 0.977654815 ubox
29 54 0.044034818 ubox
30 50 0.706771508 ubox
30 51 0.078262887 ubox
30 55 0.015719510 ubox
31 40 0.006766809 ubox
31 42 0.056413002 ubox
31 50 0.616750345 ubox
31 51 0.088832120 ubox
31 54 0.015794203 ubox
32 39 0.006838329 ubox
32 41 0.056441502 ubox
32 45 0.003543388 ubox
32 48 0.003701073 ubox
32 49 0.476490828 ubox
32 53 0.015461972 ubox
33 38 0.005067624 ubox
33 39 0.031013317 ubox
33 48 0.249047409 ubox
33 49 0.860121316 ubox
33 52 0.012753956 ubox
34 38 0.027011312 ubox
34 43 0.004162592 ubox
34 48 0.953528835 ubox
35 42 0.004173834 ubox
35 47 0.986180572 ubox
35 51 0.010694036 ubox
36 46 0.985977080 ubox
36 50 0.010688198 ubox
36 57 0.005511730 ubox
36 64 0.005467527 ubox
37 45 0.986054184 ubox
37 49 0.010636193 ubox
37 52 0.012917671 ubox
37 56 0.007582792 ubox
37 63 0.006735760 ubox
37 78 0.004315169 ubox
38 42 0.007039123 ubox
38 44 0.905914771 ubox
38 51 0.012936371 ubox
38 55 0.007586898 ubox
38 61 0.006291216 ubox
39 44 0.315623221 ubox
39 47 0.009636630 ubox
39 50 0.012957466 ubox
39 54 0.007582919 ubox
39 60 0.007158421 ubox
39 61 0.003301042 ubox
40 45 0.003645388 ubox
40 48 0.005789903 ubox
40 49 0.012690947 ubox
40 52 0.006197893 ubox
40 53 0.004277997 ubox
40 58 0.065057121 ubox
40 72 0.012161925 ubox
40 76 0.096540712 ubox
40 77 0.004234608 ubox
40 78 0.004135556 ubox
41 47 0.013476405 ubox
41 51 0.006007997 ubox
41 57 0.065157277 ubox
41 64 0.003762091 ubox
41 71 0.012183793 ubox
41 75 0.101121260 ubox
41 79 0.003331487 ubox
42 49 0.003693046 ubox
42 56 0.065168100 ubox
42 58 0.005898861 ubox
42 63 0.003806827 ubox
42 74 0.101390739 ubox
42 78 0.004043239 ubox
43 55 0.064875932 ubox
43 57 0.005905968 ubox
43 70 0.003784443 ubox
43 73 0.101552197 ubox
44 52 0.009437478 ubox
44 56 0.006189003 ubox
44 58 0.003902616 ubox
44 68 0.030896627 ubox
44 72 0.101647671 ubox
44 76 0.005263531 ubox
45 51 0.009447699 ubox
45 54 0.064600999 ubox
45 57 0.003896438 ubox
45 60 0.004089535 ubox
45 67 0.030927119 ubox
45 71 0.101617908 ubox
45 75 0.005483574 ubox
46 53 0.064675363 ubox
46 59 0.004128460 ubox
46 69 0.099244257 ubox
46 74 0.005527681 ubox
47 52 0.064152101 ubox
47 56 0.074782075 ubox
47 58 0.004133381 ubox
47 63 0.003412360 ubox
47 68 0.099816840 ubox
47 72 0.024427027 ubox
48 55 0.074888840 ubox
48 61 0.006431492 ubox
48 65 0.047665578 ubox
48 66 0.003499145 ubox
48 67 0.094393050 ubox
48 71 0.024172753 ubox
49 54 0.074799574 ubox
49 57 0.003975091 ubox
49 60 0.008703512 ubox
49 64 0.059131655 ubox
49 66 0.087835408 ubox
49 67 0.004456535 ubox
49 79 0.008238002 ubox
50 56 0.010931696 ubox
50 59 0.010086082 ubox
50 63 0.064030283 ubox
50 68 0.010207118 ubox
50 69 0.028421728 ubox
50 77 0.012667565 ubox
50 78 0.012172434 ubox
51 56 0.004020859 ubox
51 58 0.010199653 ubox
51 62 0.064291118 ubox
51 68 0.029181403 ubox
51 72 0.009547959 ubox
51 76 0.016549084 ubox
51 77 0.009730457 ubox
51 78 0.006302119 ubox
52 57 0.010186295 ubox
52 61 0.064373849 ubox
52 64 0.032129934 ubox
52 66 0.012750174 ubox
52 67 0.028821074 ubox
52 71 0.009570539 ubox
52 75 0.017623505 ubox
52 79 0.006784039 ubox
53 60 0.062581430 ubox
53 64 0.068904099 ubox
53 65 0.012105592 ubox
53 66 0.023582745 ubox
53 70 0.009499384 ubox
53 79 0.006622301 ubox
54 58 0.005875492 ubox
54 59 0.038576090 ubox
54 63 0.090954778 ubox
54 69 0.008123895 ubox
54 77 0.018004694 ubox
54 78 0.012211537 ubox
55 62 0.091024400 ubox
55 74 0.008664970 ubox
55 76 0.020791636 ubox
55 77 0.009695008 ubox
56 61 0.090998557 ubox
56 64 0.004338938 ubox
56 75 0.021945253 ubox
57 63 0.004216935 ubox
57 68 0.009407299 ubox
57 72 0.083031079 ubox
58 67 0.009414973 ubox
58 71 0.083198024 ubox
59 66 0.009249248 ubox
59 70 0.083541805 ubox
60 69 0.083590599 ubox
61 68 0.083596952 ubox
62 67 0.079236149 ubox
63 67 0.007539735 ubox
63 79 0.004925527 ubox
64 78 0.005885669 ubox
65 77 0.005625203 ubox
66 76 0.004205243 ubox
66 77 0.006170300 ubox
67 76 0.008553116 ubox
68 75 0.009596519 ubox
71 78 0.003549262 ubox
1 78 0.9500000 lbox
2 77 0.9500000 lbox
3 76 0.9500000 lbox
5 74 0.9500000 lbox
6 73 0.9500000 lbox
7 72 0.9500000 lbox
8 71 0.9500000 lbox
11 69 0.9500000 lbox
12 68 0.9500000 lbox
14 67 0.9500000 lbox
15 66 0.9500000 lbox
16 65 0.9500000 lbox
17 63 0.9500000 lbox
19 61 0.9500000 lbox
20 60 0.9500000 lbox
21 59 0.9500000 lbox
22 58 0.9500000 lbox
23 57 0.9500000 lbox
28 52 0.9500000 lbox
29 51 0.9500000 lbox
30 50 0.9500000 lbox
33 49 0.9500000 lbox
34 48 0.9500000 lbox
35 47 0.9500000 lbox
36 46 0.9500000 lbox
37 45 0.9500000 lbox
38 44 0.9500000 lbox
showpage
end
%%EOF
