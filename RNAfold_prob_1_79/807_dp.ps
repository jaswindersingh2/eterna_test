%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (807)
} def

/sequence { (\
GGAAAAGGCACCGGCUGCGAGCAGAUAACCACAGCGAAAAGUCUGGGUAUAUCUCUCGUGCGCGGGCAGCCCGGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.011995371 ubox
1 12 0.043615049 ubox
1 70 0.008101849 ubox
1 71 0.191612745 ubox
1 72 0.278315132 ubox
1 75 0.074379083 ubox
1 76 0.167171689 ubox
1 77 0.022725341 ubox
1 78 0.518628447 ubox
2 9 0.007533750 ubox
2 11 0.043611752 ubox
2 70 0.192944216 ubox
2 71 0.275914850 ubox
2 72 0.046498042 ubox
2 75 0.192899716 ubox
2 76 0.029301386 ubox
2 77 0.515079181 ubox
2 78 0.501113962 ubox
3 76 0.496373271 ubox
3 77 0.499213151 ubox
4 76 0.460029597 ubox
4 77 0.022368979 ubox
5 76 0.024530854 ubox
5 77 0.047074383 ubox
6 16 0.021685932 ubox
6 76 0.056205683 ubox
6 77 0.176538537 ubox
7 12 0.004564761 ubox
7 15 0.021724251 ubox
7 16 0.070537294 ubox
7 67 0.020283917 ubox
7 70 0.024027609 ubox
7 71 0.845491202 ubox
7 72 0.210673821 ubox
7 75 0.052737057 ubox
7 76 0.222201997 ubox
7 77 0.006192624 ubox
7 78 0.034788848 ubox
8 15 0.076574496 ubox
8 18 0.004908812 ubox
8 61 0.003781695 ubox
8 67 0.408382687 ubox
8 70 0.857066956 ubox
8 71 0.164119801 ubox
8 72 0.004976364 ubox
8 75 0.231525158 ubox
8 76 0.003885463 ubox
8 77 0.031548638 ubox
8 78 0.010276634 ubox
9 13 0.018416486 ubox
9 14 0.076652991 ubox
9 17 0.005019256 ubox
9 60 0.003785498 ubox
9 65 0.005012626 ubox
9 66 0.410058400 ubox
9 69 0.864893034 ubox
9 73 0.039345351 ubox
9 74 0.230360191 ubox
10 16 0.004663908 ubox
10 76 0.010838331 ubox
11 64 0.008210518 ubox
11 65 0.763223424 ubox
11 66 0.588771224 ubox
11 73 0.207477395 ubox
11 74 0.066071455 ubox
12 62 0.012043315 ubox
12 64 0.764263578 ubox
12 65 0.588639198 ubox
12 66 0.014180366 ubox
12 73 0.071613452 ubox
12 79 0.004837643 ubox
13 61 0.010388003 ubox
13 63 0.758770485 ubox
13 67 0.016640975 ubox
13 71 0.230871003 ubox
13 72 0.059401664 ubox
13 76 0.005503965 ubox
13 78 0.005888653 ubox
14 61 0.726538053 ubox
14 63 0.592601267 ubox
14 67 0.003508410 ubox
14 70 0.234705692 ubox
14 71 0.042358416 ubox
14 75 0.005903623 ubox
14 77 0.003578935 ubox
15 60 0.721665234 ubox
15 62 0.596939854 ubox
15 65 0.017269708 ubox
15 66 0.003513423 ubox
15 69 0.238254655 ubox
15 74 0.005893435 ubox
16 60 0.581814309 ubox
16 62 0.008478836 ubox
16 64 0.017469115 ubox
16 65 0.003326870 ubox
16 68 0.234927535 ubox
16 73 0.003220521 ubox
17 59 0.956070024 ubox
17 61 0.032720268 ubox
17 63 0.017764037 ubox
17 67 0.206828198 ubox
18 58 0.979111481 ubox
18 60 0.030184069 ubox
18 62 0.017602333 ubox
18 64 0.013206353 ubox
18 65 0.009988152 ubox
18 66 0.198472580 ubox
19 55 0.004349799 ubox
19 57 0.987724389 ubox
19 59 0.010636654 ubox
19 61 0.016433625 ubox
19 63 0.032286529 ubox
20 54 0.004093882 ubox
20 56 0.987694427 ubox
21 53 0.003628657 ubox
21 55 0.987457807 ubox
21 56 0.003386838 ubox
21 57 0.007940282 ubox
21 59 0.018239826 ubox
21 61 0.103038313 ubox
21 63 0.113122665 ubox
22 58 0.018895137 ubox
22 60 0.103077411 ubox
22 62 0.113099096 ubox
23 54 0.993239558 ubox
23 56 0.008865937 ubox
23 59 0.073101736 ubox
24 53 0.999778067 ubox
24 55 0.009560128 ubox
24 57 0.010727848 ubox
25 50 0.010251528 ubox
25 52 0.999452173 ubox
25 54 0.008875223 ubox
25 56 0.009874644 ubox
26 49 0.017039721 ubox
26 51 0.997471982 ubox
27 48 0.014685648 ubox
27 50 0.981254324 ubox
27 52 0.003590795 ubox
27 54 0.004131743 ubox
28 48 0.986255092 ubox
28 50 0.005654745 ubox
29 46 0.025743820 ubox
29 47 0.998620602 ubox
30 45 0.026609098 ubox
30 46 0.997759305 ubox
30 47 0.025876137 ubox
31 42 0.011814941 ubox
31 44 0.026265262 ubox
32 41 0.012280896 ubox
32 45 0.992257304 ubox
33 42 0.007982049 ubox
33 44 0.993200521 ubox
34 42 0.170604546 ubox
34 43 0.983822501 ubox
34 44 0.003576552 ubox
35 41 0.935559171 ubox
36 42 0.038934827 ubox
36 43 0.029976732 ubox
37 42 0.033272310 ubox
38 42 0.008375394 ubox
55 60 0.011365524 ubox
55 65 0.004151444 ubox
56 65 0.010635284 ubox
57 64 0.016693550 ubox
57 65 0.003598454 ubox
58 63 0.032551546 ubox
59 64 0.005694858 ubox
59 65 0.010030377 ubox
59 68 0.018207033 ubox
60 67 0.113245301 ubox
60 75 0.084952403 ubox
61 65 0.012871956 ubox
61 66 0.114036582 ubox
61 73 0.003392908 ubox
61 74 0.085052679 ubox
62 70 0.006749641 ubox
62 72 0.004200216 ubox
62 75 0.032841443 ubox
63 69 0.006767168 ubox
63 73 0.099703202 ubox
63 74 0.026873500 ubox
64 71 0.010878487 ubox
64 72 0.103125381 ubox
64 77 0.004505595 ubox
64 78 0.003376419 ubox
65 70 0.011023788 ubox
65 71 0.103144331 ubox
65 72 0.019408710 ubox
65 76 0.007171503 ubox
66 70 0.101495886 ubox
66 71 0.019342626 ubox
66 72 0.003661739 ubox
66 75 0.024518596 ubox
66 77 0.003405596 ubox
66 78 0.023076481 ubox
67 73 0.006443923 ubox
67 74 0.024566644 ubox
68 76 0.161935932 ubox
68 77 0.008487598 ubox
69 75 0.175296879 ubox
69 76 0.004367014 ubox
69 78 0.007121165 ubox
70 74 0.174090092 ubox
70 79 0.004410545 ubox
71 79 0.003866782 ubox
72 79 0.159258378 ubox
73 77 0.005196484 ubox
73 78 0.171371400 ubox
74 78 0.026051787 ubox
75 79 0.008352422 ubox
1 78 0.9500000 lbox
2 77 0.9500000 lbox
3 76 0.9500000 lbox
7 71 0.9500000 lbox
8 70 0.9500000 lbox
9 69 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 41 0.9500000 lbox
showpage
end
%%EOF
