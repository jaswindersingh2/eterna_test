%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (608)
} def

/sequence { (\
GGAAAAAUUUAAUUUAAAUUUAAAUUUAAAAAAAAAAAAAAAAUUUAAAUUUAAAUUUAAAUUAAAAAUUUAAAUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.006081260 ubox
1 10 0.003430703 ubox
1 69 0.004600418 ubox
1 70 0.006674360 ubox
1 71 0.050598230 ubox
1 75 0.023347112 ubox
1 76 0.013926486 ubox
1 77 0.032244683 ubox
1 78 0.539499548 ubox
2 8 0.003182717 ubox
2 9 0.007660666 ubox
2 10 0.004689178 ubox
2 69 0.008493753 ubox
2 70 0.059316216 ubox
2 71 0.168331846 ubox
2 75 0.018522429 ubox
2 76 0.050523493 ubox
2 77 0.539933676 ubox
2 78 0.399589519 ubox
3 8 0.008415207 ubox
3 9 0.005885828 ubox
3 69 0.058009060 ubox
3 70 0.171524818 ubox
3 71 0.291294246 ubox
3 75 0.053739778 ubox
3 76 0.536813079 ubox
3 77 0.399223898 ubox
4 8 0.005464275 ubox
4 9 0.003591827 ubox
4 69 0.157951296 ubox
4 70 0.312852137 ubox
4 71 0.176178547 ubox
4 75 0.511932212 ubox
4 76 0.390941091 ubox
4 77 0.017534396 ubox
5 69 0.309572057 ubox
5 70 0.206746553 ubox
5 71 0.588636464 ubox
5 75 0.305623597 ubox
5 76 0.020850164 ubox
5 77 0.051066544 ubox
6 63 0.024600877 ubox
6 69 0.199523188 ubox
6 70 0.646275351 ubox
6 71 0.157005528 ubox
6 75 0.021076587 ubox
6 76 0.062117192 ubox
6 77 0.008733415 ubox
7 62 0.026107659 ubox
7 69 0.635939935 ubox
7 70 0.156090488 ubox
7 71 0.060937412 ubox
7 75 0.069688128 ubox
7 76 0.009883530 ubox
7 77 0.003703754 ubox
8 61 0.026358102 ubox
8 65 0.020985140 ubox
8 66 0.726128315 ubox
8 67 0.097730580 ubox
8 68 0.557536291 ubox
8 72 0.027972880 ubox
8 73 0.020862239 ubox
8 74 0.068991919 ubox
9 59 0.003250846 ubox
9 60 0.026409124 ubox
9 64 0.017557331 ubox
9 65 0.864964635 ubox
9 66 0.094278673 ubox
9 67 0.426636615 ubox
9 68 0.022262011 ubox
9 72 0.015711821 ubox
9 73 0.061477688 ubox
9 74 0.004510800 ubox
10 59 0.026027659 ubox
10 64 0.950559352 ubox
10 65 0.074205457 ubox
10 66 0.258626549 ubox
10 67 0.014345995 ubox
10 68 0.004745236 ubox
10 72 0.052093367 ubox
11 57 0.017036947 ubox
11 58 0.021498594 ubox
11 62 0.004286019 ubox
11 63 0.989365266 ubox
11 70 0.006983378 ubox
11 71 0.045958568 ubox
12 56 0.023192199 ubox
12 57 0.015586559 ubox
12 62 0.997542610 ubox
12 63 0.007445756 ubox
12 69 0.008596993 ubox
12 70 0.031291615 ubox
13 55 0.027706660 ubox
13 61 0.998265341 ubox
13 66 0.005385860 ubox
13 67 0.007991508 ubox
13 68 0.009567184 ubox
14 54 0.028519820 ubox
14 60 0.998007817 ubox
14 65 0.005592197 ubox
14 66 0.008852786 ubox
14 67 0.008932267 ubox
14 68 0.007071166 ubox
15 53 0.028830272 ubox
15 59 0.998567598 ubox
15 64 0.005650166 ubox
15 65 0.008594362 ubox
15 66 0.007694070 ubox
15 67 0.006742856 ubox
16 52 0.028934199 ubox
16 58 0.998576224 ubox
16 63 0.004706653 ubox
17 51 0.028939218 ubox
17 57 0.998046099 ubox
17 62 0.003336297 ubox
17 63 0.013875265 ubox
18 50 0.028958144 ubox
18 56 0.998387378 ubox
18 62 0.014948897 ubox
19 49 0.028962533 ubox
19 55 0.998387378 ubox
19 61 0.015352010 ubox
20 48 0.028958045 ubox
20 54 0.998046636 ubox
20 60 0.015375305 ubox
21 47 0.028978729 ubox
21 53 0.998577775 ubox
21 59 0.015390639 ubox
22 46 0.028981039 ubox
22 52 0.998577656 ubox
22 58 0.015393117 ubox
23 45 0.028967538 ubox
23 51 0.998045710 ubox
23 57 0.015385061 ubox
24 44 0.028965654 ubox
24 50 0.998382990 ubox
24 56 0.015390261 ubox
25 43 0.028867466 ubox
25 49 0.998368452 ubox
25 55 0.015390019 ubox
26 42 0.028532241 ubox
26 47 0.003513930 ubox
26 48 0.997965531 ubox
26 54 0.015383811 ubox
27 41 0.026924225 ubox
27 47 0.998159264 ubox
27 48 0.003870242 ubox
27 53 0.015386832 ubox
28 44 0.003382963 ubox
28 45 0.020944151 ubox
28 46 0.994785632 ubox
28 52 0.015336052 ubox
29 44 0.025753237 ubox
29 45 0.974680529 ubox
29 46 0.049658519 ubox
29 51 0.015087512 ubox
30 44 0.863259156 ubox
30 45 0.068684188 ubox
30 46 0.020901898 ubox
30 50 0.013850366 ubox
31 44 0.076028613 ubox
31 45 0.033732357 ubox
31 46 0.014967644 ubox
32 44 0.039654863 ubox
32 45 0.024708611 ubox
32 46 0.012090854 ubox
33 44 0.028680934 ubox
33 45 0.019556471 ubox
33 46 0.016699609 ubox
34 44 0.022530479 ubox
34 45 0.027274479 ubox
34 46 0.010293214 ubox
35 44 0.033837855 ubox
35 45 0.015081501 ubox
35 46 0.013061980 ubox
36 44 0.017297630 ubox
36 45 0.020541607 ubox
36 46 0.008514621 ubox
37 44 0.023075556 ubox
37 45 0.013912868 ubox
37 46 0.009257953 ubox
38 44 0.016306824 ubox
38 45 0.015091428 ubox
38 46 0.005667003 ubox
39 44 0.016186004 ubox
39 45 0.009297355 ubox
39 46 0.004079843 ubox
40 44 0.009147018 ubox
40 45 0.006014559 ubox
54 76 0.003910509 ubox
55 75 0.005437153 ubox
56 74 0.006178805 ubox
57 73 0.007684405 ubox
58 72 0.008764299 ubox
59 71 0.008871869 ubox
60 70 0.008912042 ubox
61 69 0.008960418 ubox
62 68 0.008862812 ubox
62 73 0.003961214 ubox
63 67 0.007407849 ubox
63 72 0.006278915 ubox
64 71 0.007114926 ubox
65 70 0.007188436 ubox
65 71 0.006569310 ubox
65 76 0.005989127 ubox
65 77 0.007658638 ubox
66 70 0.006452715 ubox
66 71 0.009891384 ubox
66 75 0.008146042 ubox
66 76 0.010974183 ubox
66 77 0.051449379 ubox
67 71 0.009560442 ubox
67 75 0.012435251 ubox
67 76 0.069554026 ubox
67 77 0.028163566 ubox
68 75 0.071731001 ubox
68 76 0.030696777 ubox
68 77 0.019672487 ubox
69 73 0.008715631 ubox
69 74 0.066429769 ubox
70 74 0.009828776 ubox
70 79 0.005608440 ubox
71 79 0.004543380 ubox
72 76 0.006282023 ubox
72 77 0.011810125 ubox
73 77 0.007233605 ubox
75 79 0.005175554 ubox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 59 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
18 56 0.9500000 lbox
19 55 0.9500000 lbox
20 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
23 51 0.9500000 lbox
24 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
showpage
end
%%EOF
