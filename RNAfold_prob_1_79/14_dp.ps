%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (14)
} def

/sequence { (\
GGAAAAAAGCAGAGAUCAGAUCCACAAAGUGAGAUCAAAAGUACAGUCAAAGACGUACAGAUCGCUGCGAUCUGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.007984388 ubox
1 71 0.003728843 ubox
1 72 0.040775486 ubox
1 73 0.358685765 ubox
1 75 0.191013624 ubox
1 76 0.285616021 ubox
1 77 0.021417679 ubox
1 78 0.382846597 ubox
2 71 0.036434603 ubox
2 72 0.380180242 ubox
2 73 0.013729697 ubox
2 75 0.329482212 ubox
2 76 0.022919233 ubox
2 77 0.378441516 ubox
2 78 0.348167504 ubox
3 71 0.371156948 ubox
3 73 0.147719844 ubox
3 76 0.364003417 ubox
3 77 0.345786704 ubox
4 71 0.039391061 ubox
4 73 0.102141190 ubox
4 76 0.313340012 ubox
4 77 0.017328027 ubox
5 71 0.066699349 ubox
5 73 0.133011283 ubox
5 76 0.019413486 ubox
5 77 0.010329158 ubox
6 71 0.146577017 ubox
6 73 0.182168726 ubox
6 76 0.008951055 ubox
6 77 0.018611463 ubox
7 71 0.092778216 ubox
7 73 0.060165014 ubox
7 76 0.015306561 ubox
7 77 0.276017038 ubox
8 66 0.013580609 ubox
8 71 0.044026865 ubox
8 73 0.036489910 ubox
8 76 0.314880696 ubox
8 77 0.006652129 ubox
9 65 0.013836249 ubox
9 68 0.944249588 ubox
9 72 0.017184449 ubox
9 75 0.321908568 ubox
9 78 0.005363971 ubox
10 64 0.013826112 ubox
10 67 0.945987334 ubox
10 74 0.321848432 ubox
10 79 0.004047085 ubox
11 16 0.006417115 ubox
11 66 0.945730070 ubox
11 73 0.302966724 ubox
11 76 0.006654554 ubox
12 17 0.031179685 ubox
12 36 0.010509191 ubox
12 65 0.942940218 ubox
12 72 0.291350256 ubox
12 73 0.003506739 ubox
12 75 0.006959816 ubox
12 77 0.010891373 ubox
12 78 0.015838915 ubox
13 35 0.010510588 ubox
13 66 0.005445538 ubox
13 71 0.278122895 ubox
13 73 0.031304638 ubox
13 76 0.011919997 ubox
13 77 0.015329054 ubox
14 22 0.004832160 ubox
14 36 0.019889652 ubox
14 63 0.969681138 ubox
14 65 0.006402126 ubox
14 68 0.012007893 ubox
14 71 0.003557497 ubox
14 72 0.045547388 ubox
14 75 0.012292721 ubox
14 76 0.013051156 ubox
14 77 0.004694584 ubox
14 78 0.012954164 ubox
15 21 0.004790432 ubox
15 35 0.019897823 ubox
15 62 0.974288184 ubox
15 71 0.051503162 ubox
15 76 0.005690456 ubox
15 77 0.012758485 ubox
16 20 0.004249229 ubox
16 32 0.010677213 ubox
16 34 0.019841939 ubox
16 37 0.004545125 ubox
16 38 0.005777346 ubox
16 39 0.019483340 ubox
16 40 0.004537945 ubox
16 61 0.974206631 ubox
16 67 0.004638271 ubox
16 69 0.009934723 ubox
16 70 0.070013297 ubox
17 31 0.010720373 ubox
17 33 0.019812432 ubox
17 60 0.973257714 ubox
17 64 0.005871991 ubox
17 67 0.109582704 ubox
17 69 0.070991965 ubox
17 74 0.020059679 ubox
18 30 0.010527371 ubox
18 66 0.104393311 ubox
18 73 0.020131054 ubox
19 36 0.995164894 ubox
19 63 0.021579299 ubox
19 65 0.070394690 ubox
19 72 0.020187954 ubox
20 30 0.013636319 ubox
20 35 0.996918012 ubox
20 62 0.023621064 ubox
20 71 0.020260918 ubox
21 27 0.004232381 ubox
21 29 0.012847698 ubox
21 32 0.017013918 ubox
21 33 0.005008300 ubox
21 34 0.997176057 ubox
21 61 0.024113248 ubox
21 64 0.007697613 ubox
21 70 0.020541129 ubox
22 29 0.005298090 ubox
22 31 0.015919600 ubox
22 33 0.997288186 ubox
22 60 0.024048678 ubox
22 64 0.004958009 ubox
22 69 0.020361320 ubox
23 29 0.013661841 ubox
23 31 0.997571709 ubox
23 33 0.006028718 ubox
23 67 0.011064693 ubox
24 30 0.995739264 ubox
24 66 0.008463611 ubox
25 29 0.985974662 ubox
25 31 0.032499417 ubox
25 67 0.005682001 ubox
26 30 0.026462020 ubox
26 66 0.004204331 ubox
28 66 0.019970201 ubox
29 65 0.021781736 ubox
29 68 0.006564109 ubox
30 37 0.005214300 ubox
30 64 0.021597510 ubox
30 67 0.006448713 ubox
31 36 0.005797734 ubox
31 63 0.018712357 ubox
31 65 0.006376978 ubox
31 66 0.003822886 ubox
32 62 0.017876271 ubox
33 63 0.056399376 ubox
34 62 0.056717258 ubox
35 59 0.012576311 ubox
35 61 0.057528160 ubox
36 60 0.057474793 ubox
37 62 0.004580930 ubox
39 62 0.003862500 ubox
41 48 0.003407136 ubox
41 54 0.004259572 ubox
41 58 0.997370451 ubox
42 53 0.004202454 ubox
42 57 0.998821757 ubox
43 56 0.998656891 ubox
44 52 0.003621708 ubox
44 55 0.992804598 ubox
44 67 0.005689233 ubox
45 56 0.003850703 ubox
45 66 0.005734666 ubox
46 54 0.993640707 ubox
46 58 0.005185870 ubox
46 62 0.003455669 ubox
46 65 0.005742429 ubox
47 51 0.006035882 ubox
47 52 0.014040021 ubox
47 53 0.993887909 ubox
47 57 0.005097233 ubox
47 61 0.003667490 ubox
47 64 0.005456604 ubox
48 52 0.985560445 ubox
48 55 0.005180578 ubox
48 60 0.003726851 ubox
51 66 0.003703639 ubox
52 63 0.004723851 ubox
52 65 0.003790845 ubox
53 62 0.004684479 ubox
54 60 0.004020564 ubox
54 64 0.003959475 ubox
54 69 0.004944747 ubox
55 63 0.004025804 ubox
55 68 0.007018724 ubox
56 67 0.006661216 ubox
57 66 0.006393206 ubox
58 64 0.003800183 ubox
58 67 0.024446674 ubox
58 74 0.015616128 ubox
59 66 0.044981210 ubox
59 73 0.101667185 ubox
60 65 0.047532348 ubox
60 68 0.011553675 ubox
60 71 0.004037104 ubox
60 72 0.131422525 ubox
61 66 0.004742942 ubox
61 71 0.148276769 ubox
62 70 0.165453188 ubox
63 67 0.003169929 ubox
63 69 0.168735672 ubox
64 68 0.158484221 ubox
64 75 0.003344054 ubox
65 69 0.011132223 ubox
65 74 0.003347897 ubox
66 70 0.003301266 ubox
67 75 0.007958099 ubox
68 74 0.008383855 ubox
68 79 0.043658965 ubox
69 73 0.007457087 ubox
69 75 0.044134427 ubox
69 76 0.009312111 ubox
69 77 0.018330461 ubox
69 78 0.357439531 ubox
70 76 0.019675616 ubox
70 77 0.352889840 ubox
71 79 0.003181546 ubox
72 79 0.019343215 ubox
73 79 0.014019662 ubox
74 78 0.028688413 ubox
75 79 0.008818722 ubox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
showpage
end
%%EOF
