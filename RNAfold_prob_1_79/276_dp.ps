%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (276)
} def

/sequence { (\
GGAAAAAACGAGAAGUACGAGAGUACAGACUGGACAAAAUGGCGAAAGGCAUAGUCUGGUCAACUCGAGUCAUCGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.033609230 ubox
1 71 0.009460740 ubox
1 74 0.018572109 ubox
1 76 0.003538526 ubox
1 77 0.003645810 ubox
1 78 0.124971040 ubox
2 9 0.016233826 ubox
2 70 0.008914562 ubox
2 71 0.028042881 ubox
2 73 0.016422880 ubox
2 74 0.062006616 ubox
2 77 0.101749674 ubox
2 78 0.250838453 ubox
3 70 0.027852514 ubox
3 73 0.060992600 ubox
3 76 0.065911671 ubox
3 77 0.233254736 ubox
4 70 0.005001409 ubox
4 73 0.004013915 ubox
4 76 0.112032640 ubox
4 77 0.021014750 ubox
5 70 0.004652599 ubox
5 73 0.004865824 ubox
5 76 0.012644661 ubox
5 77 0.021741364 ubox
6 70 0.032809345 ubox
6 73 0.007134700 ubox
6 76 0.012037315 ubox
6 77 0.053316368 ubox
7 70 0.006400051 ubox
7 73 0.006937611 ubox
7 76 0.043778135 ubox
7 77 0.809284339 ubox
8 16 0.019399911 ubox
8 70 0.019186231 ubox
8 76 0.923312699 ubox
8 77 0.018458598 ubox
9 15 0.020141906 ubox
9 19 0.004134738 ubox
9 67 0.106432266 ubox
9 69 0.018751350 ubox
9 75 0.942600205 ubox
9 79 0.275225299 ubox
10 18 0.004196134 ubox
10 66 0.109035181 ubox
10 71 0.006572809 ubox
10 73 0.003251253 ubox
10 74 0.942179414 ubox
10 76 0.030068008 ubox
10 77 0.023726866 ubox
10 78 0.289823998 ubox
11 65 0.108989056 ubox
11 70 0.005740714 ubox
11 73 0.935361776 ubox
11 76 0.035198438 ubox
11 77 0.285596964 ubox
12 18 0.003209053 ubox
12 64 0.108341112 ubox
12 66 0.018432380 ubox
12 70 0.005391779 ubox
12 71 0.348644310 ubox
12 73 0.016767929 ubox
12 74 0.150740989 ubox
12 76 0.247269426 ubox
12 77 0.008789745 ubox
12 78 0.058350328 ubox
13 65 0.017528332 ubox
13 70 0.295029867 ubox
13 73 0.151506827 ubox
13 76 0.013604804 ubox
13 77 0.058281621 ubox
14 65 0.003450421 ubox
14 70 0.208788486 ubox
14 73 0.058861239 ubox
14 76 0.054390965 ubox
15 26 0.161306155 ubox
15 70 0.029221646 ubox
15 71 0.586310789 ubox
15 73 0.152995135 ubox
15 74 0.075512400 ubox
15 78 0.016901233 ubox
16 25 0.161507956 ubox
16 67 0.023631677 ubox
16 68 0.195054294 ubox
16 69 0.037253103 ubox
16 72 0.173750062 ubox
16 75 0.004705281 ubox
17 24 0.161551827 ubox
17 70 0.887812238 ubox
17 73 0.010769647 ubox
17 76 0.030104178 ubox
18 23 0.161509940 ubox
18 67 0.233752067 ubox
18 69 0.930991949 ubox
18 75 0.032705208 ubox
18 79 0.004283453 ubox
19 66 0.226788704 ubox
19 71 0.015038135 ubox
19 74 0.032695361 ubox
19 78 0.004496340 ubox
20 65 0.222346442 ubox
20 70 0.014982782 ubox
20 73 0.032517845 ubox
20 77 0.004358150 ubox
21 26 0.003260739 ubox
21 64 0.215261132 ubox
21 65 0.004385178 ubox
21 66 0.960080393 ubox
21 71 0.011152197 ubox
22 65 0.961061516 ubox
22 70 0.011034662 ubox
23 60 0.004443887 ubox
23 61 0.102105778 ubox
23 64 0.962704035 ubox
23 66 0.003776324 ubox
24 62 0.042546448 ubox
24 63 0.953921376 ubox
24 68 0.009726933 ubox
25 60 0.012524060 ubox
26 58 0.112419406 ubox
26 59 0.009323053 ubox
27 57 0.112761910 ubox
27 65 0.003695585 ubox
28 56 0.112818327 ubox
28 60 0.003929012 ubox
28 61 0.992694035 ubox
28 71 0.004119735 ubox
29 55 0.112804610 ubox
29 60 0.993417143 ubox
29 70 0.004125079 ubox
30 54 0.112811318 ubox
30 59 0.993567461 ubox
30 69 0.004126577 ubox
31 53 0.112212782 ubox
31 58 0.989672981 ubox
31 68 0.004108961 ubox
32 52 0.079846877 ubox
32 57 0.989673674 ubox
33 50 0.012474913 ubox
33 52 0.004219538 ubox
33 56 0.993574930 ubox
33 66 0.004067165 ubox
34 55 0.993426233 ubox
34 65 0.003977739 ubox
35 41 0.011816590 ubox
35 48 0.018963619 ubox
35 49 0.013698457 ubox
35 54 0.992402301 ubox
36 40 0.009670264 ubox
36 52 0.038706268 ubox
36 55 0.003256121 ubox
37 52 0.084470997 ubox
38 52 0.047140161 ubox
39 52 0.962498986 ubox
40 45 0.006657592 ubox
40 46 0.004175368 ubox
40 47 0.007887935 ubox
40 48 0.003799924 ubox
40 49 0.004860089 ubox
40 51 0.987259046 ubox
40 53 0.042513967 ubox
40 62 0.003896949 ubox
41 50 0.983127742 ubox
41 52 0.040609205 ubox
41 61 0.004021490 ubox
42 50 0.177302044 ubox
42 60 0.004021024 ubox
43 48 0.965980879 ubox
43 49 0.207515977 ubox
43 59 0.004011566 ubox
47 57 0.003423029 ubox
48 56 0.003940372 ubox
49 55 0.003943090 ubox
50 54 0.003920950 ubox
62 77 0.004276560 ubox
63 70 0.019819301 ubox
63 76 0.005184856 ubox
64 69 0.023067906 ubox
64 75 0.004619244 ubox
66 75 0.055194366 ubox
66 79 0.014498761 ubox
67 71 0.004858482 ubox
67 74 0.059075730 ubox
67 78 0.019627439 ubox
68 73 0.057843362 ubox
68 77 0.019684613 ubox
69 74 0.009918064 ubox
69 76 0.015885186 ubox
69 78 0.009119879 ubox
70 75 0.004725957 ubox
71 75 0.005346929 ubox
74 79 0.003405238 ubox
7 77 0.9500000 lbox
8 76 0.9500000 lbox
9 75 0.9500000 lbox
10 74 0.9500000 lbox
11 73 0.9500000 lbox
17 70 0.9500000 lbox
18 69 0.9500000 lbox
21 66 0.9500000 lbox
22 65 0.9500000 lbox
23 64 0.9500000 lbox
24 63 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
31 58 0.9500000 lbox
32 57 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
