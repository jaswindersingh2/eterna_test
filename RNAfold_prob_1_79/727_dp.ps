%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (727)
} def

/sequence { (\
GGAAAGCAGUGGCAAGGGCAGUGCAACAGGCUGGAAAAACGAGGCUGAGAGGCAGGGAAACGUGGCUCUGAAUGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.015942854 ubox
1 13 0.005169758 ubox
1 24 0.006164220 ubox
1 27 0.161893776 ubox
1 31 0.072041577 ubox
1 32 0.099174358 ubox
1 40 0.020361379 ubox
1 75 0.019041552 ubox
1 76 0.016761934 ubox
1 78 0.092633126 ubox
2 7 0.006539385 ubox
2 13 0.004867221 ubox
2 27 0.091970584 ubox
2 31 0.104927391 ubox
2 32 0.004335939 ubox
2 40 0.006567302 ubox
2 75 0.019270707 ubox
2 76 0.003788460 ubox
2 77 0.089990558 ubox
2 78 0.143401999 ubox
3 22 0.005468604 ubox
3 32 0.006227581 ubox
3 73 0.015548283 ubox
3 76 0.084587196 ubox
3 77 0.137920642 ubox
4 32 0.018764946 ubox
4 73 0.005895985 ubox
4 76 0.120980075 ubox
4 77 0.050882884 ubox
5 10 0.005217002 ubox
5 32 0.393685142 ubox
5 73 0.010822037 ubox
5 76 0.065188119 ubox
6 13 0.075919556 ubox
6 19 0.010773972 ubox
6 22 0.004750349 ubox
6 24 0.900457847 ubox
6 27 0.005566845 ubox
6 31 0.406444980 ubox
6 75 0.074297988 ubox
7 12 0.075860512 ubox
7 16 0.005200618 ubox
7 18 0.011117199 ubox
7 21 0.004881038 ubox
7 23 0.901558307 ubox
7 29 0.023952929 ubox
7 30 0.405851425 ubox
7 33 0.071690104 ubox
7 34 0.008796291 ubox
7 74 0.074149730 ubox
8 22 0.899646410 ubox
8 32 0.071822691 ubox
8 73 0.066651690 ubox
9 19 0.014089512 ubox
9 22 0.006455098 ubox
9 24 0.026975446 ubox
9 27 0.383616829 ubox
9 31 0.071596229 ubox
9 40 0.010634946 ubox
9 73 0.005877398 ubox
9 78 0.005583347 ubox
10 15 0.009280520 ubox
10 18 0.014043329 ubox
10 20 0.894978274 ubox
10 21 0.027141989 ubox
10 23 0.026394811 ubox
10 25 0.035647438 ubox
10 26 0.355181672 ubox
10 28 0.052803211 ubox
10 29 0.003563078 ubox
10 30 0.069240098 ubox
10 33 0.026998745 ubox
10 39 0.010740634 ubox
10 70 0.006718195 ubox
10 71 0.016307692 ubox
10 72 0.009815527 ubox
11 19 0.869851942 ubox
11 22 0.014596628 ubox
11 24 0.035035559 ubox
11 27 0.055119004 ubox
11 31 0.003961417 ubox
11 32 0.044099537 ubox
11 40 0.004782586 ubox
11 76 0.006298800 ubox
12 19 0.241211084 ubox
12 22 0.021878844 ubox
12 24 0.408845988 ubox
12 27 0.011012141 ubox
12 31 0.045750718 ubox
12 40 0.003887113 ubox
12 75 0.006598223 ubox
13 17 0.733002455 ubox
13 18 0.324249691 ubox
13 21 0.023125621 ubox
13 23 0.410648432 ubox
13 29 0.010470898 ubox
13 30 0.045781578 ubox
13 34 0.004248441 ubox
13 70 0.009641951 ubox
13 74 0.006598342 ubox
14 22 0.384073516 ubox
14 69 0.005650466 ubox
14 73 0.005972126 ubox
15 22 0.055635545 ubox
15 69 0.006851561 ubox
16 22 0.013897632 ubox
16 24 0.019885152 ubox
16 27 0.035841710 ubox
16 32 0.008163230 ubox
16 40 0.003348277 ubox
16 68 0.008105355 ubox
16 77 0.007052869 ubox
17 22 0.011840318 ubox
17 24 0.031446808 ubox
17 27 0.007962181 ubox
17 31 0.008709859 ubox
17 32 0.022749744 ubox
17 67 0.008097305 ubox
17 76 0.008755056 ubox
18 22 0.010414076 ubox
18 24 0.064361203 ubox
18 27 0.003945225 ubox
18 31 0.023813061 ubox
18 66 0.008102729 ubox
18 75 0.009169360 ubox
19 23 0.064049675 ubox
19 29 0.008754345 ubox
19 30 0.023798678 ubox
19 33 0.084271450 ubox
19 34 0.004274614 ubox
19 65 0.008062685 ubox
19 74 0.009182434 ubox
20 32 0.084854188 ubox
20 73 0.008419067 ubox
21 27 0.019220902 ubox
21 31 0.084865009 ubox
22 26 0.017354832 ubox
22 28 0.011936129 ubox
22 29 0.005384847 ubox
22 30 0.083889372 ubox
22 35 0.004276541 ubox
22 54 0.007508135 ubox
23 27 0.012556301 ubox
23 31 0.013992855 ubox
23 53 0.007763551 ubox
23 75 0.003392049 ubox
24 29 0.025821824 ubox
24 30 0.014387804 ubox
24 33 0.013920962 ubox
24 52 0.007772145 ubox
24 70 0.004258600 ubox
24 74 0.003469439 ubox
25 32 0.023475159 ubox
25 73 0.003370814 ubox
26 32 0.015321301 ubox
27 33 0.168050812 ubox
27 34 0.077266714 ubox
27 47 0.244459478 ubox
28 32 0.136546401 ubox
28 46 0.245842162 ubox
29 40 0.042531031 ubox
29 45 0.246224459 ubox
29 46 0.010110832 ubox
30 40 0.020554194 ubox
30 45 0.013189299 ubox
31 43 0.246240519 ubox
31 44 0.013732554 ubox
32 36 0.010628766 ubox
32 37 0.053688999 ubox
32 38 0.043820328 ubox
32 39 0.043296683 ubox
32 41 0.041747935 ubox
32 42 0.242034010 ubox
32 43 0.012473800 ubox
33 40 0.124509680 ubox
34 40 0.226345591 ubox
40 79 0.916555120 ubox
41 77 0.003417980 ubox
41 78 0.968818355 ubox
42 76 0.005066078 ubox
42 77 0.968428958 ubox
43 75 0.005792507 ubox
43 76 0.968151615 ubox
44 75 0.969053159 ubox
45 74 0.967613230 ubox
46 70 0.026544193 ubox
46 71 0.589948759 ubox
46 72 0.152340608 ubox
46 74 0.003252844 ubox
47 69 0.010857842 ubox
47 73 0.023272884 ubox
48 69 0.992336773 ubox
48 76 0.003702793 ubox
49 68 0.999176103 ubox
49 69 0.005131151 ubox
49 75 0.004053987 ubox
49 78 0.036797491 ubox
50 67 0.999074895 ubox
50 69 0.005122571 ubox
50 73 0.005042642 ubox
50 77 0.036830445 ubox
51 66 0.998953868 ubox
51 67 0.004448614 ubox
51 68 0.005111088 ubox
51 76 0.036839099 ubox
52 66 0.010259238 ubox
52 75 0.036875509 ubox
53 64 0.998992442 ubox
53 65 0.009829122 ubox
53 70 0.011048517 ubox
53 74 0.035941758 ubox
54 63 0.997452232 ubox
54 69 0.019230306 ubox
54 73 0.031089095 ubox
55 61 0.077061281 ubox
55 63 0.005662274 ubox
55 68 0.024944751 ubox
55 69 0.005265994 ubox
56 61 0.989973165 ubox
56 67 0.024936881 ubox
56 68 0.005259402 ubox
56 69 0.025213957 ubox
57 61 0.011752126 ubox
57 66 0.025109590 ubox
57 67 0.003764135 ubox
57 68 0.026566883 ubox
58 67 0.026301512 ubox
69 79 0.011956324 ubox
70 75 0.028709928 ubox
70 77 0.007651486 ubox
70 78 0.079961174 ubox
71 76 0.008413738 ubox
71 77 0.078848325 ubox
72 76 0.060123862 ubox
72 77 0.006802262 ubox
73 79 0.005045504 ubox
74 78 0.007790978 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
40 79 0.9500000 lbox
41 78 0.9500000 lbox
42 77 0.9500000 lbox
43 76 0.9500000 lbox
44 75 0.9500000 lbox
45 74 0.9500000 lbox
48 69 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
showpage
end
%%EOF
