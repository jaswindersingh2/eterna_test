%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (989)
} def

/sequence { (\
GGAAAGGUCCAGUAUGAGAGUACAGUAUUAUAUGAAAAAAAUAUAAUAUAAAUUGAGAGAUUAGGACCGAUGUAUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.038853930 ubox
1 68 0.005883868 ubox
1 71 0.051202012 ubox
1 73 0.213963030 ubox
1 75 0.023423849 ubox
1 76 0.013418015 ubox
1 77 0.020442156 ubox
1 78 0.216746024 ubox
2 9 0.038871270 ubox
2 67 0.005196446 ubox
2 68 0.003552800 ubox
2 71 0.043708143 ubox
2 73 0.093385140 ubox
2 75 0.017277089 ubox
2 76 0.031688104 ubox
2 77 0.214983037 ubox
2 78 0.436404952 ubox
3 8 0.035511821 ubox
3 71 0.246832050 ubox
3 73 0.063782100 ubox
3 75 0.032970188 ubox
3 76 0.209358433 ubox
3 77 0.436706880 ubox
4 71 0.086543878 ubox
4 73 0.014419433 ubox
4 75 0.161787259 ubox
4 76 0.429237650 ubox
4 77 0.011639254 ubox
5 71 0.049080430 ubox
5 73 0.062619319 ubox
5 75 0.421141092 ubox
5 76 0.014582538 ubox
5 77 0.003664726 ubox
6 67 0.003867783 ubox
6 68 0.995948751 ubox
6 71 0.004251184 ubox
6 73 0.007371447 ubox
7 67 0.999125277 ubox
7 68 0.003755245 ubox
7 71 0.007034469 ubox
8 66 0.999052553 ubox
8 70 0.007047608 ubox
9 64 0.003376270 ubox
9 65 0.999163665 ubox
9 69 0.006983740 ubox
10 25 0.003584855 ubox
10 64 0.998042695 ubox
11 15 0.003207147 ubox
11 21 0.008195761 ubox
11 54 0.004593500 ubox
11 61 0.023138581 ubox
11 62 0.413191437 ubox
12 21 0.004709017 ubox
12 23 0.872731265 ubox
12 28 0.003465167 ubox
12 61 0.415398852 ubox
12 62 0.039500997 ubox
13 18 0.004611158 ubox
13 19 0.008365899 ubox
13 20 0.005111197 ubox
13 22 0.873784447 ubox
13 27 0.003758909 ubox
13 58 0.012037059 ubox
13 59 0.016788101 ubox
13 60 0.410170509 ubox
13 63 0.023729356 ubox
14 21 0.871668570 ubox
14 26 0.003978978 ubox
14 61 0.055144092 ubox
14 62 0.024565730 ubox
15 19 0.012707945 ubox
15 20 0.855358901 ubox
15 22 0.009236897 ubox
15 24 0.049975898 ubox
15 25 0.003698739 ubox
15 55 0.004904981 ubox
15 56 0.022563481 ubox
15 57 0.114775301 ubox
15 58 0.145804263 ubox
15 59 0.081191178 ubox
15 60 0.056894619 ubox
15 63 0.047826780 ubox
15 79 0.011089811 ubox
16 21 0.009601617 ubox
16 23 0.055365998 ubox
16 54 0.010407344 ubox
16 61 0.003223519 ubox
16 62 0.048680602 ubox
16 78 0.017961956 ubox
17 21 0.005962382 ubox
17 53 0.010552372 ubox
17 54 0.023751931 ubox
17 61 0.048399395 ubox
17 77 0.016728568 ubox
18 23 0.020628924 ubox
18 53 0.020015851 ubox
18 54 0.165106957 ubox
18 76 0.013319435 ubox
18 77 0.013065123 ubox
18 78 0.005947512 ubox
19 53 0.164212300 ubox
19 54 0.318050152 ubox
19 75 0.011247069 ubox
19 76 0.017061819 ubox
19 77 0.004878634 ubox
20 53 0.323478877 ubox
20 54 0.086380405 ubox
20 75 0.019148222 ubox
20 76 0.003455194 ubox
21 50 0.027651003 ubox
21 51 0.052111410 ubox
21 52 0.311404095 ubox
21 55 0.023472793 ubox
21 56 0.023336845 ubox
21 57 0.019627360 ubox
21 58 0.009495663 ubox
21 74 0.022164331 ubox
22 49 0.019729299 ubox
22 53 0.017677354 ubox
22 54 0.022569836 ubox
22 73 0.022529477 ubox
23 55 0.055312228 ubox
23 72 0.022545726 ubox
24 49 0.045340284 ubox
24 53 0.016215846 ubox
24 54 0.057288353 ubox
24 62 0.004154463 ubox
24 71 0.019766563 ubox
25 44 0.007060633 ubox
25 47 0.004236716 ubox
25 49 0.963795637 ubox
25 53 0.040399784 ubox
26 43 0.007251460 ubox
26 46 0.003598577 ubox
26 48 0.993942241 ubox
26 50 0.009604735 ubox
26 52 0.033685314 ubox
27 42 0.007276786 ubox
27 47 0.998154069 ubox
27 49 0.009030481 ubox
28 41 0.007228928 ubox
28 46 0.998226650 ubox
28 48 0.006897531 ubox
28 51 0.028075763 ubox
29 40 0.006858507 ubox
29 45 0.998659099 ubox
29 50 0.030887506 ubox
30 44 0.998879878 ubox
30 49 0.031188994 ubox
31 38 0.003321309 ubox
31 43 0.998862484 ubox
31 45 0.003288381 ubox
31 48 0.031213870 ubox
32 42 0.998227725 ubox
32 44 0.003822551 ubox
32 47 0.031183785 ubox
33 37 0.003176123 ubox
33 38 0.018937265 ubox
33 39 0.025511351 ubox
33 40 0.074854957 ubox
33 41 0.991062397 ubox
33 43 0.004223752 ubox
33 46 0.030780926 ubox
34 42 0.004200251 ubox
35 42 0.003545121 ubox
35 44 0.007324410 ubox
37 42 0.004393487 ubox
48 54 0.004537482 ubox
49 55 0.005376440 ubox
49 56 0.006689734 ubox
49 58 0.006205648 ubox
49 60 0.003181460 ubox
49 63 0.033070659 ubox
50 54 0.013148711 ubox
50 61 0.009318459 ubox
50 62 0.050374174 ubox
51 61 0.043027665 ubox
51 62 0.554803944 ubox
52 61 0.593403238 ubox
52 62 0.034795386 ubox
52 71 0.007445019 ubox
53 57 0.008254666 ubox
53 58 0.019654173 ubox
53 59 0.024629211 ubox
53 60 0.597640268 ubox
53 63 0.021107425 ubox
53 64 0.019538053 ubox
53 70 0.008586090 ubox
54 58 0.024978484 ubox
54 59 0.583615470 ubox
54 60 0.054378150 ubox
54 63 0.314663834 ubox
54 69 0.008819277 ubox
54 79 0.006563874 ubox
55 61 0.009863589 ubox
55 62 0.335307629 ubox
55 68 0.008916561 ubox
55 78 0.011201654 ubox
56 61 0.328915484 ubox
56 62 0.036727785 ubox
56 77 0.011179678 ubox
57 61 0.027355161 ubox
57 62 0.026834744 ubox
57 67 0.004752537 ubox
57 76 0.010957306 ubox
57 78 0.025946975 ubox
58 62 0.015195523 ubox
58 73 0.003438300 ubox
58 75 0.010427398 ubox
58 77 0.025969627 ubox
59 68 0.003595602 ubox
59 76 0.025975096 ubox
60 71 0.006062294 ubox
60 73 0.005411204 ubox
60 75 0.025953310 ubox
61 70 0.006485805 ubox
61 72 0.005534718 ubox
61 74 0.025496348 ubox
62 69 0.006295640 ubox
62 72 0.008625222 ubox
62 74 0.003737498 ubox
63 71 0.008940431 ubox
63 73 0.004935574 ubox
64 68 0.003281056 ubox
64 71 0.021161802 ubox
65 71 0.003743947 ubox
66 73 0.004042847 ubox
67 72 0.004093401 ubox
68 79 0.067292073 ubox
69 73 0.009361883 ubox
69 75 0.006413877 ubox
69 76 0.026618963 ubox
69 77 0.051672526 ubox
69 78 0.504902823 ubox
70 75 0.025156960 ubox
70 76 0.057564671 ubox
70 77 0.498213138 ubox
71 79 0.060054131 ubox
72 76 0.011312274 ubox
72 77 0.016168403 ubox
72 78 0.099577207 ubox
73 79 0.006437555 ubox
75 79 0.004958676 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
showpage
end
%%EOF
