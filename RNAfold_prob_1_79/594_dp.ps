%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (594)
} def

/sequence { (\
GGAAAAGGAUAUGUAUAUAUGUAUAUGUAUAAAAAAAAAAAAGAUAUAUGUAUAUGUAUAUAUAUUGGGUAUCUUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 73 0.032483989 ubox
1 74 0.058960380 ubox
1 77 0.004203118 ubox
1 78 0.141380137 ubox
2 70 0.003946709 ubox
2 72 0.030198596 ubox
2 73 0.067893765 ubox
2 75 0.003558566 ubox
2 76 0.006120687 ubox
2 77 0.128214592 ubox
2 78 0.972958468 ubox
3 70 0.009760151 ubox
3 72 0.066579530 ubox
3 74 0.003521539 ubox
3 75 0.006386223 ubox
3 76 0.118332664 ubox
3 77 0.965756930 ubox
4 70 0.032613910 ubox
4 72 0.003226080 ubox
4 74 0.005493989 ubox
4 75 0.099136553 ubox
4 76 0.955885688 ubox
4 77 0.187525320 ubox
5 70 0.016027968 ubox
5 72 0.004659450 ubox
5 74 0.067894564 ubox
5 75 0.946440253 ubox
5 76 0.240659918 ubox
5 77 0.005515202 ubox
6 70 0.010625000 ubox
6 72 0.005956081 ubox
6 74 0.937843864 ubox
6 75 0.281655615 ubox
6 76 0.005500809 ubox
7 66 0.005716854 ubox
7 70 0.011893666 ubox
7 72 0.021232064 ubox
7 73 0.923177930 ubox
7 74 0.321436619 ubox
7 75 0.004823086 ubox
8 65 0.012641643 ubox
8 66 0.706178689 ubox
8 70 0.022709068 ubox
8 72 0.569636532 ubox
8 73 0.365990840 ubox
9 63 0.007203043 ubox
9 65 0.898708833 ubox
9 66 0.036955811 ubox
9 70 0.084687079 ubox
9 72 0.401797730 ubox
10 62 0.007228146 ubox
10 64 0.905553418 ubox
10 67 0.013048498 ubox
10 68 0.013595715 ubox
10 69 0.071274027 ubox
10 71 0.412513625 ubox
11 61 0.007144854 ubox
11 63 0.908182845 ubox
11 65 0.070485614 ubox
11 66 0.010694593 ubox
11 70 0.409676898 ubox
12 60 0.007057192 ubox
12 62 0.909133435 ubox
12 64 0.080878612 ubox
12 67 0.007438919 ubox
12 68 0.018665360 ubox
12 69 0.403905412 ubox
13 59 0.007022713 ubox
13 61 0.911596052 ubox
13 63 0.095800764 ubox
13 65 0.011162392 ubox
13 66 0.010821499 ubox
14 58 0.006951619 ubox
14 60 0.911828727 ubox
14 62 0.095945368 ubox
14 64 0.011052636 ubox
14 67 0.372866622 ubox
14 68 0.005846123 ubox
15 57 0.006866368 ubox
15 59 0.911769665 ubox
15 61 0.096451490 ubox
15 63 0.010942895 ubox
15 65 0.285102839 ubox
15 66 0.267570468 ubox
16 56 0.006781715 ubox
16 58 0.911854351 ubox
16 60 0.096847937 ubox
16 62 0.010610906 ubox
16 64 0.388430554 ubox
17 55 0.006618758 ubox
17 57 0.912027686 ubox
17 59 0.096823705 ubox
17 61 0.010232559 ubox
17 63 0.394969055 ubox
17 65 0.037992243 ubox
18 54 0.006479169 ubox
18 56 0.911842814 ubox
18 58 0.096811070 ubox
18 60 0.009774979 ubox
18 62 0.395347205 ubox
18 64 0.040126945 ubox
19 53 0.006325366 ubox
19 55 0.911558128 ubox
19 57 0.096786613 ubox
19 59 0.009325811 ubox
19 61 0.395406131 ubox
19 63 0.040185663 ubox
20 52 0.006176408 ubox
20 54 0.911565941 ubox
20 56 0.096366172 ubox
20 58 0.008576924 ubox
20 60 0.395301030 ubox
20 62 0.040150996 ubox
21 51 0.005860322 ubox
21 53 0.911868503 ubox
21 55 0.096468299 ubox
21 57 0.006277574 ubox
21 59 0.395420960 ubox
21 61 0.040120092 ubox
22 50 0.006009675 ubox
22 52 0.912068564 ubox
22 54 0.096952967 ubox
22 56 0.004725245 ubox
22 58 0.395507586 ubox
22 60 0.040105522 ubox
23 49 0.006558843 ubox
23 51 0.912064839 ubox
23 53 0.096991835 ubox
23 55 0.004915066 ubox
23 57 0.395506645 ubox
23 59 0.040070245 ubox
24 48 0.007035980 ubox
24 50 0.911856737 ubox
24 52 0.097032688 ubox
24 54 0.004977203 ubox
24 56 0.395416456 ubox
24 58 0.040043287 ubox
25 47 0.007539465 ubox
25 49 0.911523995 ubox
25 51 0.097084872 ubox
25 53 0.005046142 ubox
25 55 0.395284029 ubox
25 57 0.040016172 ubox
26 46 0.007975722 ubox
26 48 0.911493359 ubox
26 50 0.096746836 ubox
26 52 0.005079876 ubox
26 54 0.395279939 ubox
26 56 0.039824001 ubox
27 45 0.008422238 ubox
27 47 0.911705075 ubox
27 49 0.097245660 ubox
27 51 0.004863899 ubox
27 53 0.395366182 ubox
27 55 0.039761761 ubox
28 44 0.008485982 ubox
28 46 0.911634824 ubox
28 48 0.097896681 ubox
28 50 0.007403222 ubox
28 52 0.395380767 ubox
28 54 0.039917689 ubox
29 45 0.907614503 ubox
29 47 0.098066294 ubox
29 49 0.010582986 ubox
29 51 0.395046672 ubox
29 53 0.039894537 ubox
30 34 0.004211138 ubox
30 35 0.008727346 ubox
30 36 0.008726796 ubox
30 37 0.012072262 ubox
30 38 0.008705125 ubox
30 39 0.017974875 ubox
30 40 0.012019132 ubox
30 41 0.015406343 ubox
30 42 0.020937555 ubox
30 43 0.055817093 ubox
30 44 0.873581554 ubox
30 46 0.097902621 ubox
30 48 0.013722403 ubox
30 50 0.393136060 ubox
30 52 0.039724765 ubox
31 45 0.093353945 ubox
31 47 0.015975690 ubox
31 49 0.365159889 ubox
31 51 0.037913739 ubox
32 45 0.017090698 ubox
32 47 0.041565231 ubox
32 49 0.020308290 ubox
33 45 0.026906321 ubox
33 47 0.100978765 ubox
33 49 0.014008135 ubox
34 45 0.028699641 ubox
34 47 0.029724508 ubox
34 49 0.008877518 ubox
35 45 0.049458471 ubox
35 47 0.029581376 ubox
35 49 0.005794007 ubox
36 45 0.052907243 ubox
36 47 0.011579840 ubox
36 49 0.004499472 ubox
37 45 0.022713640 ubox
37 47 0.007131530 ubox
37 49 0.003258407 ubox
38 45 0.019303489 ubox
38 47 0.007973912 ubox
39 45 0.009116282 ubox
39 47 0.004323454 ubox
40 45 0.005884855 ubox
40 47 0.006153659 ubox
40 49 0.005514470 ubox
41 47 0.004431116 ubox
41 49 0.003290069 ubox
42 47 0.009197280 ubox
42 49 0.009740999 ubox
64 70 0.003194135 ubox
65 69 0.003225614 ubox
65 71 0.003627463 ubox
66 71 0.006041355 ubox
66 79 0.004948689 ubox
67 72 0.019324912 ubox
67 73 0.011460183 ubox
67 74 0.011702984 ubox
67 75 0.004756776 ubox
67 78 0.021395966 ubox
68 72 0.010852951 ubox
68 73 0.014168812 ubox
68 74 0.006800956 ubox
68 77 0.021290140 ubox
68 78 0.009203511 ubox
69 73 0.007234728 ubox
69 76 0.019788354 ubox
69 77 0.008767992 ubox
69 78 0.006421758 ubox
2 78 0.9500000 lbox
3 77 0.9500000 lbox
4 76 0.9500000 lbox
5 75 0.9500000 lbox
6 74 0.9500000 lbox
7 73 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 59 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
18 56 0.9500000 lbox
19 55 0.9500000 lbox
20 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
23 51 0.9500000 lbox
24 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
showpage
end
%%EOF
