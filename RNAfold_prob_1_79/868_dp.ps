%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (868)
} def

/sequence { (\
GGAAAACUACGGAUGCAAAAGCAAAAAACGUAGACACGAAAGUGACUACGAGCGCAUGCGUAGAAAAAGUAUACGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.037672336 ubox
1 8 0.025908060 ubox
1 10 0.050451430 ubox
1 16 0.005583222 ubox
1 29 0.004920834 ubox
1 35 0.004000473 ubox
1 37 0.016434749 ubox
1 46 0.018973085 ubox
1 47 0.030864172 ubox
1 49 0.008909810 ubox
1 70 0.038644324 ubox
1 72 0.012951334 ubox
1 74 0.029054569 ubox
1 77 0.003537004 ubox
1 78 0.126568836 ubox
2 7 0.028067501 ubox
2 8 0.003907897 ubox
2 10 0.010476934 ubox
2 35 0.006255620 ubox
2 37 0.012543380 ubox
2 46 0.032485285 ubox
2 47 0.004786397 ubox
2 49 0.005610686 ubox
2 70 0.030578235 ubox
2 72 0.006989542 ubox
2 74 0.014163210 ubox
2 76 0.005227849 ubox
2 77 0.125887854 ubox
2 78 0.175886991 ubox
3 8 0.005958356 ubox
3 14 0.004660980 ubox
3 47 0.005048577 ubox
3 70 0.021324109 ubox
3 72 0.006174676 ubox
3 76 0.124051170 ubox
3 77 0.175618335 ubox
4 47 0.004615070 ubox
4 70 0.015822801 ubox
4 72 0.009876935 ubox
4 76 0.170074148 ubox
4 77 0.007369723 ubox
5 14 0.004817633 ubox
5 47 0.004400869 ubox
5 70 0.006951121 ubox
5 72 0.008624676 ubox
5 76 0.008542489 ubox
5 77 0.014392035 ubox
6 14 0.003351275 ubox
6 31 0.004953188 ubox
6 47 0.003466553 ubox
6 70 0.028944306 ubox
6 72 0.017881586 ubox
6 76 0.017329709 ubox
6 77 0.004136162 ubox
7 11 0.006992637 ubox
7 12 0.037374148 ubox
7 15 0.003455598 ubox
7 21 0.003913924 ubox
7 30 0.005747082 ubox
7 33 0.417359755 ubox
7 63 0.883804169 ubox
7 69 0.026408243 ubox
7 75 0.013660983 ubox
7 79 0.006846700 ubox
8 20 0.003810967 ubox
8 28 0.003528568 ubox
8 32 0.420546630 ubox
8 62 0.890062020 ubox
8 63 0.003762212 ubox
8 68 0.021190869 ubox
8 71 0.012296847 ubox
9 31 0.421383253 ubox
9 61 0.890897475 ubox
9 70 0.012737469 ubox
9 76 0.009253172 ubox
10 30 0.421871609 ubox
10 60 0.891148129 ubox
10 69 0.012734515 ubox
10 75 0.010081153 ubox
10 79 0.024013800 ubox
11 16 0.007766588 ubox
11 22 0.004660889 ubox
11 29 0.421799300 ubox
11 59 0.890877805 ubox
11 74 0.010045614 ubox
11 78 0.024181712 ubox
12 29 0.008702473 ubox
12 59 0.004299292 ubox
12 77 0.018513142 ubox
12 78 0.009837399 ubox
13 57 0.885466612 ubox
13 61 0.014788566 ubox
13 72 0.006029247 ubox
13 76 0.012939937 ubox
13 77 0.008257367 ubox
14 19 0.003531264 ubox
14 20 0.003544614 ubox
14 23 0.423624280 ubox
14 24 0.033201433 ubox
14 25 0.018569706 ubox
14 26 0.070753187 ubox
14 27 0.012898359 ubox
14 28 0.003520297 ubox
14 54 0.006568667 ubox
14 56 0.890492279 ubox
14 60 0.015040541 ubox
14 71 0.009196327 ubox
14 75 0.010019706 ubox
15 22 0.447241370 ubox
15 53 0.009841825 ubox
15 55 0.890632429 ubox
15 59 0.016085231 ubox
15 70 0.009204091 ubox
15 74 0.007705515 ubox
16 21 0.446741405 ubox
16 52 0.010379743 ubox
16 54 0.889874661 ubox
16 58 0.016217986 ubox
16 69 0.009201780 ubox
17 57 0.015808554 ubox
21 29 0.025069523 ubox
21 31 0.003666194 ubox
21 49 0.006439811 ubox
21 53 0.757833697 ubox
21 55 0.011850565 ubox
21 59 0.008942963 ubox
22 30 0.004064416 ubox
22 50 0.021258612 ubox
22 52 0.757311587 ubox
22 54 0.012294227 ubox
22 58 0.008956666 ubox
23 57 0.008637536 ubox
29 38 0.003483161 ubox
29 50 0.886640335 ubox
29 52 0.007574040 ubox
29 79 0.003618105 ubox
30 37 0.003530493 ubox
30 46 0.003520490 ubox
30 49 0.905990498 ubox
31 36 0.003303101 ubox
31 45 0.003486919 ubox
31 48 0.906404318 ubox
32 47 0.906635203 ubox
33 46 0.905079579 ubox
34 43 0.035743815 ubox
34 47 0.018906664 ubox
35 42 0.036856592 ubox
35 44 0.993565781 ubox
36 43 0.995634055 ubox
37 42 0.995427526 ubox
37 44 0.013101874 ubox
37 79 0.004798446 ubox
38 43 0.009375372 ubox
38 46 0.004529202 ubox
38 78 0.005051578 ubox
39 77 0.005031192 ubox
40 76 0.004275417 ubox
41 47 0.008146167 ubox
42 46 0.008267068 ubox
42 49 0.006401757 ubox
42 74 0.004875871 ubox
43 48 0.006099165 ubox
43 73 0.004866848 ubox
44 72 0.004509364 ubox
45 70 0.003609644 ubox
46 63 0.009267680 ubox
46 69 0.003452466 ubox
46 79 0.004239064 ubox
47 62 0.009403226 ubox
48 61 0.009539259 ubox
49 60 0.009537853 ubox
49 79 0.402371378 ubox
50 59 0.009246418 ubox
50 78 0.449415595 ubox
51 77 0.451140316 ubox
52 59 0.012319211 ubox
52 61 0.009070807 ubox
52 76 0.452241563 ubox
53 58 0.012630805 ubox
53 60 0.009284767 ubox
53 75 0.452610497 ubox
53 79 0.006866611 ubox
54 59 0.009065869 ubox
54 74 0.451961075 ubox
54 78 0.007389451 ubox
56 72 0.433408612 ubox
57 71 0.451671142 ubox
58 70 0.452466898 ubox
58 76 0.015077066 ubox
59 69 0.452501839 ubox
59 75 0.016204238 ubox
60 72 0.003761556 ubox
60 74 0.017372425 ubox
61 65 0.009032770 ubox
61 66 0.042020565 ubox
61 67 0.068415581 ubox
61 68 0.058228393 ubox
61 71 0.003979163 ubox
61 73 0.017382202 ubox
62 70 0.004088733 ubox
62 72 0.017184237 ubox
63 74 0.005128320 ubox
63 78 0.035828615 ubox
64 70 0.019288014 ubox
64 72 0.015301236 ubox
64 76 0.006721511 ubox
64 77 0.038983460 ubox
65 70 0.019217927 ubox
65 72 0.022490311 ubox
65 76 0.035679232 ubox
65 77 0.020663797 ubox
66 70 0.012080393 ubox
66 72 0.017661710 ubox
66 76 0.021031555 ubox
66 77 0.039492127 ubox
67 72 0.019360644 ubox
67 76 0.040888353 ubox
67 77 0.042523414 ubox
68 72 0.011921500 ubox
68 76 0.046115108 ubox
68 77 0.029194706 ubox
69 74 0.083249366 ubox
69 76 0.027553060 ubox
69 77 0.017317643 ubox
69 78 0.113803404 ubox
70 75 0.017615138 ubox
70 79 0.009909632 ubox
71 76 0.015312931 ubox
71 77 0.031154956 ubox
72 79 0.011505122 ubox
73 77 0.007210421 ubox
74 79 0.045677511 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
