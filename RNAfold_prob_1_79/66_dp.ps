%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (66)
} def

/sequence { (\
GGAAAAAGCUAGGACUCAAAAGAGUCGGUGCCCAUCAAAAGAUGAGUGCAAAAGCACGGUGCCCUAGCACCGGGAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.029436418 ubox
1 10 0.056440984 ubox
1 32 0.013764000 ubox
1 33 0.026219514 ubox
1 36 0.004723717 ubox
1 55 0.006513989 ubox
1 70 0.006797219 ubox
1 71 0.335430372 ubox
1 76 0.012193129 ubox
1 77 0.008255207 ubox
1 78 0.252655101 ubox
2 9 0.059683253 ubox
2 10 0.004639349 ubox
2 31 0.013145466 ubox
2 32 0.027219234 ubox
2 35 0.004285528 ubox
2 36 0.011138981 ubox
2 55 0.004759984 ubox
2 70 0.335229794 ubox
2 71 0.031920650 ubox
2 76 0.010056627 ubox
2 77 0.246247092 ubox
2 78 0.336238028 ubox
3 10 0.007921895 ubox
3 35 0.010927550 ubox
3 76 0.230168656 ubox
3 77 0.332576495 ubox
4 10 0.007070149 ubox
4 76 0.291488660 ubox
4 77 0.021280758 ubox
5 10 0.009040012 ubox
5 76 0.023860930 ubox
5 77 0.016968080 ubox
6 10 0.004729378 ubox
6 76 0.018494901 ubox
6 77 0.021013315 ubox
7 29 0.012086403 ubox
7 76 0.021067189 ubox
7 77 0.011236085 ubox
8 29 0.081420061 ubox
8 31 0.377524679 ubox
8 32 0.018969012 ubox
8 49 0.007468480 ubox
8 55 0.242231942 ubox
8 68 0.836928342 ubox
8 70 0.004988607 ubox
8 71 0.011416071 ubox
8 76 0.009697547 ubox
8 78 0.008716415 ubox
9 27 0.017663887 ubox
9 28 0.088645780 ubox
9 30 0.379702842 ubox
9 46 0.003424891 ubox
9 48 0.007456232 ubox
9 54 0.242589985 ubox
9 67 0.837947888 ubox
9 72 0.013743419 ubox
9 73 0.029406560 ubox
9 74 0.041284667 ubox
9 79 0.006861466 ubox
10 27 0.082360688 ubox
10 28 0.029972359 ubox
10 30 0.015623865 ubox
10 45 0.003343940 ubox
10 51 0.003370031 ubox
10 52 0.010828174 ubox
10 53 0.233762688 ubox
10 66 0.837693482 ubox
10 72 0.023066532 ubox
10 73 0.039881235 ubox
10 74 0.003694499 ubox
10 75 0.004016625 ubox
11 29 0.033134386 ubox
11 65 0.837451242 ubox
11 77 0.003863520 ubox
12 26 0.023267276 ubox
12 29 0.003313925 ubox
12 49 0.003948260 ubox
12 55 0.005864849 ubox
12 64 0.834946303 ubox
12 76 0.003493978 ubox
12 78 0.018584063 ubox
13 25 0.012447198 ubox
13 26 0.997738785 ubox
13 63 0.038394594 ubox
14 25 0.999529579 ubox
15 24 0.999919113 ubox
16 23 0.999616579 ubox
17 22 0.998063418 ubox
22 78 0.009511168 ubox
23 77 0.009518361 ubox
24 76 0.009498974 ubox
25 75 0.009457454 ubox
26 72 0.006741863 ubox
26 74 0.009363130 ubox
26 79 0.011979225 ubox
27 31 0.003765339 ubox
27 32 0.010577785 ubox
27 33 0.008146579 ubox
27 49 0.017629514 ubox
27 55 0.009039689 ubox
27 62 0.004106032 ubox
27 63 0.835413225 ubox
27 64 0.006569965 ubox
27 71 0.019223283 ubox
27 76 0.004945306 ubox
27 77 0.122383825 ubox
27 78 0.109232912 ubox
28 32 0.008708927 ubox
28 49 0.277736064 ubox
28 55 0.009677908 ubox
28 57 0.006717721 ubox
28 62 0.837934373 ubox
28 63 0.005826668 ubox
28 70 0.019243754 ubox
28 76 0.156959372 ubox
28 77 0.099034680 ubox
28 78 0.019114322 ubox
29 48 0.277815458 ubox
29 50 0.132228775 ubox
29 51 0.006109898 ubox
29 53 0.004900512 ubox
29 54 0.007929599 ubox
29 56 0.007132019 ubox
29 61 0.836256661 ubox
29 69 0.019239600 ubox
29 74 0.003232993 ubox
29 75 0.164687493 ubox
29 79 0.003670830 ubox
30 47 0.281341525 ubox
30 49 0.150867190 ubox
30 55 0.007309010 ubox
30 60 0.836266141 ubox
30 62 0.003590795 ubox
30 68 0.019240065 ubox
30 76 0.016403872 ubox
30 78 0.007394439 ubox
31 46 0.282347802 ubox
31 48 0.150871085 ubox
31 54 0.007278394 ubox
31 58 0.003360691 ubox
31 59 0.837944154 ubox
31 61 0.003593764 ubox
31 67 0.019172777 ubox
31 72 0.003835493 ubox
31 73 0.165226536 ubox
31 74 0.128686703 ubox
32 44 0.020751849 ubox
32 46 0.161988972 ubox
32 58 0.836252848 ubox
32 59 0.006906466 ubox
32 72 0.165364729 ubox
32 73 0.132304187 ubox
32 74 0.032062133 ubox
32 79 0.005536338 ubox
33 41 0.007292128 ubox
33 44 0.986778564 ubox
33 46 0.009617487 ubox
33 58 0.008195812 ubox
33 72 0.118564035 ubox
33 73 0.028992625 ubox
34 43 0.992137577 ubox
34 76 0.005940800 ubox
35 42 0.992747442 ubox
35 45 0.087622389 ubox
35 75 0.006450794 ubox
36 41 0.991432804 ubox
36 44 0.093553859 ubox
36 74 0.006528695 ubox
37 43 0.087448318 ubox
38 43 0.005285500 ubox
41 78 0.003437233 ubox
42 77 0.003191696 ubox
43 79 0.008355381 ubox
44 78 0.015363236 ubox
45 77 0.015678163 ubox
46 55 0.031688749 ubox
46 57 0.924703977 ubox
46 76 0.014606967 ubox
47 52 0.003270216 ubox
47 54 0.031381463 ubox
47 56 0.940510240 ubox
47 75 0.014237084 ubox
48 55 0.946526497 ubox
48 78 0.004660148 ubox
49 54 0.945183296 ubox
49 73 0.010547033 ubox
49 79 0.003836474 ubox
50 77 0.009219309 ubox
51 76 0.009477642 ubox
51 77 0.036127359 ubox
52 76 0.039775106 ubox
52 77 0.050393922 ubox
53 76 0.053635067 ubox
53 77 0.018619149 ubox
54 62 0.010182865 ubox
54 76 0.021198705 ubox
54 77 0.003999158 ubox
54 78 0.010766962 ubox
55 61 0.010212227 ubox
55 73 0.094762240 ubox
55 74 0.085190220 ubox
56 60 0.008276542 ubox
56 76 0.004262892 ubox
57 72 0.372272727 ubox
57 73 0.016435327 ubox
57 74 0.003380335 ubox
57 79 0.004719756 ubox
58 64 0.014193557 ubox
58 65 0.004173388 ubox
58 71 0.544663235 ubox
58 78 0.008335905 ubox
59 63 0.013987558 ubox
59 64 0.004338719 ubox
59 70 0.544983891 ubox
59 76 0.004028137 ubox
59 77 0.008043039 ubox
60 69 0.544882906 ubox
60 75 0.004337223 ubox
61 68 0.544978778 ubox
62 67 0.543056124 ubox
62 74 0.012168929 ubox
63 67 0.013009057 ubox
63 73 0.012229588 ubox
63 74 0.004628342 ubox
64 72 0.012270779 ubox
64 73 0.006164725 ubox
64 74 0.003328360 ubox
65 72 0.005918002 ubox
65 73 0.003251902 ubox
68 73 0.003823808 ubox
68 74 0.003255657 ubox
69 76 0.010594042 ubox
69 77 0.006743286 ubox
70 74 0.023038340 ubox
70 79 0.032632289 ubox
71 79 0.265944737 ubox
72 76 0.007682546 ubox
72 77 0.014313013 ubox
72 78 0.288419369 ubox
73 77 0.187022216 ubox
73 78 0.107760576 ubox
74 78 0.037549958 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
29 61 0.9500000 lbox
30 60 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
