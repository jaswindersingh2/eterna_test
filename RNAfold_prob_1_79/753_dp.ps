%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (753)
} def

/sequence { (\
GGAAAGAGGCGGCAAAGGCGGCUCAAGCGGGUGCAAAAAGGACGCGCACUGGACGCAAAAGGGUGCAGUCAGCUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 24 0.005701539 ubox
1 28 0.006767782 ubox
1 70 0.040342207 ubox
1 73 0.023151795 ubox
1 74 0.031752882 ubox
1 75 0.047198740 ubox
1 76 0.122001052 ubox
1 77 0.009114637 ubox
1 78 0.277147869 ubox
2 24 0.008730382 ubox
2 28 0.009421430 ubox
2 69 0.016716368 ubox
2 70 0.039759595 ubox
2 73 0.038988892 ubox
2 74 0.037673905 ubox
2 75 0.140855038 ubox
2 76 0.007901882 ubox
2 77 0.248320264 ubox
2 78 0.769287148 ubox
3 23 0.006883859 ubox
3 69 0.027344355 ubox
3 74 0.134098926 ubox
3 76 0.213489827 ubox
3 77 0.645609884 ubox
4 74 0.018494168 ubox
4 76 0.477163811 ubox
4 77 0.594864803 ubox
5 23 0.005183250 ubox
5 74 0.133233385 ubox
5 76 0.764020991 ubox
5 77 0.011271243 ubox
6 22 0.005434854 ubox
6 24 0.433277083 ubox
6 70 0.016827427 ubox
6 73 0.129023607 ubox
6 74 0.014725151 ubox
6 75 0.880388121 ubox
6 76 0.004273201 ubox
6 77 0.019053665 ubox
6 78 0.043092406 ubox
7 23 0.431346690 ubox
7 69 0.011833913 ubox
7 74 0.876886854 ubox
7 76 0.021435520 ubox
7 77 0.041904826 ubox
8 19 0.004277074 ubox
8 22 0.418374426 ubox
8 23 0.280535293 ubox
8 24 0.096615047 ubox
8 70 0.015927355 ubox
8 73 0.843926835 ubox
8 74 0.022144392 ubox
8 75 0.021928603 ubox
8 76 0.032183982 ubox
9 19 0.047098259 ubox
9 22 0.898739905 ubox
9 23 0.014738259 ubox
9 24 0.021450386 ubox
9 45 0.012195881 ubox
9 47 0.004131377 ubox
9 66 0.017521344 ubox
9 69 0.014472526 ubox
9 70 0.006165435 ubox
9 73 0.044442611 ubox
9 75 0.029249915 ubox
10 17 0.006675683 ubox
10 18 0.047030776 ubox
10 20 0.405821538 ubox
10 21 0.906511203 ubox
10 44 0.012209857 ubox
10 46 0.004135509 ubox
10 65 0.017533238 ubox
10 68 0.014749010 ubox
10 72 0.057480498 ubox
11 19 0.394018180 ubox
11 22 0.022984428 ubox
11 23 0.051502683 ubox
11 24 0.019012094 ubox
11 43 0.012134419 ubox
11 45 0.004061905 ubox
11 64 0.017413382 ubox
11 70 0.051268262 ubox
11 73 0.006028650 ubox
11 74 0.026923573 ubox
12 19 0.913498240 ubox
12 22 0.060537999 ubox
12 34 0.004977932 ubox
12 43 0.003223414 ubox
12 66 0.016396385 ubox
12 69 0.023027155 ubox
12 70 0.004173402 ubox
12 73 0.027416489 ubox
13 17 0.332415123 ubox
13 18 0.917452143 ubox
13 20 0.023432931 ubox
13 21 0.060384261 ubox
13 33 0.004988219 ubox
13 40 0.003951470 ubox
13 41 0.007703118 ubox
13 62 0.017230845 ubox
13 65 0.016461659 ubox
13 68 0.022256110 ubox
13 72 0.027432656 ubox
14 32 0.004915729 ubox
14 64 0.016303720 ubox
16 23 0.022523783 ubox
17 22 0.023842989 ubox
17 23 0.004546225 ubox
17 24 0.011121476 ubox
17 70 0.005437704 ubox
18 22 0.004964491 ubox
18 23 0.007831540 ubox
18 28 0.006698478 ubox
18 34 0.012982943 ubox
18 56 0.025250888 ubox
18 66 0.012424408 ubox
18 69 0.004589735 ubox
19 27 0.006714424 ubox
19 30 0.003704877 ubox
19 33 0.012971512 ubox
19 55 0.025267201 ubox
19 65 0.012564359 ubox
19 68 0.004448861 ubox
20 24 0.006888597 ubox
20 32 0.010320132 ubox
20 54 0.025053503 ubox
20 64 0.011448870 ubox
20 74 0.008425012 ubox
21 28 0.006992723 ubox
21 32 0.008642228 ubox
21 56 0.003905362 ubox
21 64 0.005286199 ubox
21 73 0.009912545 ubox
22 27 0.007024953 ubox
22 30 0.006815358 ubox
22 31 0.011695877 ubox
22 52 0.017888354 ubox
22 55 0.003906477 ubox
22 62 0.010225432 ubox
22 63 0.007275989 ubox
22 72 0.010366875 ubox
23 29 0.006100866 ubox
23 30 0.012818108 ubox
23 48 0.005692533 ubox
23 51 0.015950396 ubox
23 52 0.014542810 ubox
23 53 0.005047056 ubox
23 61 0.009654468 ubox
23 62 0.007266644 ubox
23 71 0.010193010 ubox
24 29 0.013597106 ubox
24 30 0.003483475 ubox
24 51 0.036313645 ubox
24 52 0.005270613 ubox
24 61 0.007373072 ubox
24 72 0.010296837 ubox
25 50 0.035278604 ubox
25 77 0.005466191 ubox
26 50 0.004946621 ubox
26 74 0.014273318 ubox
26 76 0.005635714 ubox
27 34 0.039708905 ubox
27 45 0.020739117 ubox
27 47 0.996699758 ubox
27 49 0.004420055 ubox
27 54 0.004403854 ubox
27 56 0.013283734 ubox
27 73 0.014991397 ubox
28 33 0.039693531 ubox
28 44 0.020761767 ubox
28 46 0.997756468 ubox
28 51 0.012997135 ubox
28 52 0.006732029 ubox
28 55 0.013285399 ubox
28 72 0.014929487 ubox
28 79 0.003420548 ubox
29 34 0.004913159 ubox
29 43 0.020145930 ubox
29 45 0.997730272 ubox
29 47 0.013192792 ubox
29 50 0.013144246 ubox
29 54 0.013222739 ubox
29 70 0.006584857 ubox
29 78 0.003743700 ubox
30 43 0.008932736 ubox
30 45 0.005861666 ubox
30 49 0.013205458 ubox
30 50 0.015167456 ubox
30 69 0.005965659 ubox
30 70 0.005986414 ubox
31 43 0.997697474 ubox
31 45 0.014394624 ubox
31 47 0.024805418 ubox
31 49 0.015523388 ubox
32 38 0.003780546 ubox
32 39 0.007898526 ubox
32 40 0.006259144 ubox
32 41 0.016222068 ubox
32 42 0.995020928 ubox
32 44 0.014511159 ubox
32 46 0.024841107 ubox
32 48 0.015576285 ubox
32 67 0.006049431 ubox
33 43 0.014547276 ubox
33 45 0.024972106 ubox
33 47 0.015629756 ubox
33 66 0.006056642 ubox
34 40 0.974791546 ubox
34 41 0.119148754 ubox
34 44 0.024954364 ubox
34 46 0.015617509 ubox
34 65 0.006056288 ubox
35 64 0.005971521 ubox
38 77 0.007871043 ubox
39 76 0.008677894 ubox
39 77 0.034628429 ubox
40 75 0.008556125 ubox
40 76 0.041525057 ubox
40 78 0.006341700 ubox
41 70 0.005283724 ubox
41 74 0.006881778 ubox
41 75 0.042879884 ubox
41 77 0.006247775 ubox
41 78 0.006192840 ubox
42 69 0.005300814 ubox
42 74 0.042786327 ubox
42 76 0.006092071 ubox
42 77 0.006136635 ubox
43 68 0.005300730 ubox
44 56 0.005922502 ubox
44 66 0.003411391 ubox
44 73 0.046524924 ubox
44 75 0.006348958 ubox
45 55 0.005931116 ubox
45 65 0.003420877 ubox
45 72 0.046552232 ubox
46 54 0.005906826 ubox
46 64 0.003417990 ubox
46 66 0.005963365 ubox
46 70 0.022775957 ubox
46 73 0.023416245 ubox
47 52 0.004650910 ubox
47 63 0.003391553 ubox
47 65 0.005977895 ubox
47 72 0.024488146 ubox
48 64 0.006069435 ubox
48 69 0.921063794 ubox
48 74 0.007866233 ubox
49 61 0.003214198 ubox
49 63 0.006073205 ubox
49 68 0.985089119 ubox
49 72 0.139987886 ubox
50 57 0.008544313 ubox
50 60 0.003178807 ubox
50 62 0.005943464 ubox
50 67 0.985758188 ubox
50 71 0.138994801 ubox
50 72 0.010151257 ubox
51 56 0.009283959 ubox
51 66 0.985873490 ubox
51 70 0.116268580 ubox
51 73 0.003206640 ubox
52 66 0.010654231 ubox
52 69 0.083617309 ubox
52 70 0.111940265 ubox
53 64 0.983101369 ubox
53 69 0.135621896 ubox
54 61 0.008472001 ubox
54 62 0.013944843 ubox
54 63 0.985492798 ubox
54 65 0.033495767 ubox
54 68 0.143506373 ubox
54 79 0.005041267 ubox
55 64 0.034511023 ubox
55 66 0.158934592 ubox
55 78 0.005291612 ubox
56 61 0.918583992 ubox
56 62 0.087574113 ubox
56 63 0.034571207 ubox
56 65 0.159456013 ubox
57 64 0.145638868 ubox
58 64 0.005671594 ubox
59 77 0.015037729 ubox
60 76 0.017043090 ubox
61 66 0.004399653 ubox
61 75 0.017528809 ubox
62 74 0.017466786 ubox
62 76 0.003336642 ubox
63 73 0.017461932 ubox
63 75 0.003590381 ubox
64 71 0.004048738 ubox
64 72 0.017017866 ubox
65 70 0.004687509 ubox
65 73 0.006495105 ubox
66 72 0.006569268 ubox
68 75 0.003705255 ubox
70 79 0.012028351 ubox
71 76 0.006865015 ubox
71 77 0.006781853 ubox
72 76 0.006024072 ubox
72 77 0.004664588 ubox
72 78 0.013148201 ubox
73 79 0.010346252 ubox
75 79 0.003972643 ubox
4 77 0.9500000 lbox
5 76 0.9500000 lbox
6 75 0.9500000 lbox
7 74 0.9500000 lbox
8 73 0.9500000 lbox
9 22 0.9500000 lbox
10 21 0.9500000 lbox
12 19 0.9500000 lbox
13 18 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
48 69 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
showpage
end
%%EOF
