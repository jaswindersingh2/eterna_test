%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (62)
} def

/sequence { (\
GGAAAAAGAAGCGAGUAGAAAUACUCCCGGGCGUUCGAAAGAACAGAAGGAAACUUCGCAAGGGCUUCAGUCUAUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.022048074 ubox
1 68 0.003646938 ubox
1 72 0.065760736 ubox
1 73 0.567751609 ubox
1 75 0.017529912 ubox
1 76 0.009998938 ubox
1 77 0.017894394 ubox
1 78 0.315561840 ubox
2 12 0.010640709 ubox
2 67 0.003289411 ubox
2 68 0.004948403 ubox
2 71 0.063647221 ubox
2 72 0.601349706 ubox
2 73 0.013969687 ubox
2 75 0.012421109 ubox
2 76 0.027683672 ubox
2 77 0.314928844 ubox
2 78 0.405226960 ubox
3 67 0.004745285 ubox
3 71 0.597540850 ubox
3 73 0.029600534 ubox
3 75 0.029248250 ubox
3 76 0.313017179 ubox
3 77 0.405559981 ubox
4 66 0.003407049 ubox
4 71 0.029314713 ubox
4 73 0.029726214 ubox
4 75 0.293672492 ubox
4 76 0.402482888 ubox
4 77 0.014737924 ubox
5 71 0.164515155 ubox
5 73 0.060277515 ubox
5 75 0.378358504 ubox
5 76 0.018582269 ubox
5 77 0.015731652 ubox
6 67 0.003714063 ubox
6 71 0.078612073 ubox
6 73 0.087495693 ubox
6 75 0.020519769 ubox
6 76 0.019049568 ubox
6 77 0.006503089 ubox
7 66 0.004246285 ubox
7 67 0.003461771 ubox
7 71 0.077738518 ubox
7 73 0.311594784 ubox
7 75 0.020903452 ubox
7 76 0.007356251 ubox
8 12 0.007243262 ubox
8 65 0.004230014 ubox
8 67 0.007298596 ubox
8 68 0.909524526 ubox
8 71 0.006665384 ubox
8 72 0.283809893 ubox
8 78 0.046764656 ubox
9 66 0.005740114 ubox
9 67 0.917567973 ubox
9 71 0.259007948 ubox
9 77 0.044234219 ubox
10 66 0.951186570 ubox
10 67 0.016455804 ubox
10 71 0.004821369 ubox
10 76 0.036268684 ubox
10 77 0.003460121 ubox
11 27 0.012708005 ubox
11 28 0.017237707 ubox
11 32 0.019327066 ubox
11 59 0.004835221 ubox
11 65 0.952342134 ubox
11 66 0.003527256 ubox
11 68 0.006108021 ubox
11 71 0.010252837 ubox
11 75 0.017501338 ubox
11 78 0.065682276 ubox
12 29 0.003245588 ubox
12 31 0.019301123 ubox
12 58 0.004838787 ubox
12 63 0.005434717 ubox
12 64 0.951290993 ubox
12 70 0.014010076 ubox
12 79 0.217404913 ubox
13 26 0.951525143 ubox
13 27 0.005693662 ubox
13 65 0.003249063 ubox
13 67 0.025820926 ubox
13 68 0.008599524 ubox
13 72 0.004721812 ubox
13 76 0.006670207 ubox
13 77 0.161342658 ubox
13 78 0.233957180 ubox
14 25 0.954100844 ubox
14 66 0.026664894 ubox
14 67 0.007131356 ubox
14 71 0.004705071 ubox
14 75 0.006173296 ubox
14 76 0.217750445 ubox
14 77 0.191530508 ubox
15 24 0.954565336 ubox
15 65 0.026628682 ubox
15 66 0.004008869 ubox
15 75 0.260384804 ubox
15 76 0.135443228 ubox
16 23 0.952798662 ubox
16 64 0.009986540 ubox
16 69 0.004509281 ubox
16 74 0.294472143 ubox
17 22 0.934939448 ubox
17 25 0.005392564 ubox
17 66 0.004616425 ubox
17 73 0.295973111 ubox
18 22 0.010058375 ubox
18 24 0.005766688 ubox
18 26 0.006596995 ubox
18 65 0.004895277 ubox
18 68 0.005436107 ubox
18 72 0.296095628 ubox
18 78 0.011690646 ubox
19 25 0.006425277 ubox
19 67 0.005424406 ubox
19 71 0.293776365 ubox
19 77 0.011703971 ubox
20 66 0.005129112 ubox
20 67 0.004647851 ubox
20 71 0.008983490 ubox
20 76 0.011693572 ubox
21 66 0.004359519 ubox
21 67 0.008127600 ubox
21 75 0.011663351 ubox
22 69 0.020720558 ubox
22 70 0.004708993 ubox
22 74 0.011066716 ubox
23 66 0.023144116 ubox
23 67 0.072144875 ubox
23 71 0.017004185 ubox
23 73 0.006818158 ubox
24 70 0.024838522 ubox
25 64 0.003749424 ubox
25 69 0.024616142 ubox
26 63 0.009320854 ubox
26 64 0.298639861 ubox
27 31 0.004232458 ubox
27 50 0.022666492 ubox
27 62 0.011279032 ubox
27 63 0.992013150 ubox
27 64 0.006666461 ubox
28 37 0.007799847 ubox
28 49 0.022729237 ubox
28 62 0.994055244 ubox
28 63 0.013754905 ubox
29 36 0.007874112 ubox
29 44 0.005915608 ubox
29 59 0.004208450 ubox
29 67 0.007881563 ubox
29 68 0.004058789 ubox
29 73 0.006773571 ubox
30 35 0.006196401 ubox
30 59 0.017690054 ubox
30 66 0.010034022 ubox
30 72 0.007131676 ubox
31 59 0.994079048 ubox
31 65 0.010576506 ubox
31 71 0.007151212 ubox
32 41 0.006007824 ubox
32 46 0.006815835 ubox
32 58 0.993224976 ubox
32 63 0.003455538 ubox
32 64 0.010564985 ubox
32 70 0.007163347 ubox
33 44 0.997160337 ubox
33 57 0.031191166 ubox
34 42 0.003261597 ubox
34 43 0.998255370 ubox
34 48 0.008810373 ubox
34 51 0.007634953 ubox
34 52 0.015875520 ubox
35 41 0.003177407 ubox
35 42 0.998969620 ubox
35 47 0.009277972 ubox
35 50 0.007701074 ubox
35 51 0.016304109 ubox
36 41 0.998928181 ubox
36 46 0.009424029 ubox
36 49 0.007771494 ubox
36 50 0.016412738 ubox
37 44 0.005942303 ubox
39 56 0.004118583 ubox
40 55 0.004223460 ubox
41 54 0.004271913 ubox
44 49 0.004062195 ubox
45 55 0.005775528 ubox
46 54 0.006157760 ubox
46 56 0.005481680 ubox
46 57 0.996859148 ubox
46 68 0.005728697 ubox
47 55 0.004491775 ubox
47 56 0.998072794 ubox
47 67 0.005730956 ubox
48 55 0.998039320 ubox
48 56 0.009170369 ubox
48 66 0.005725969 ubox
49 54 0.997740129 ubox
49 55 0.011489041 ubox
49 57 0.015210886 ubox
49 65 0.005714527 ubox
50 54 0.013420355 ubox
50 56 0.014741430 ubox
50 57 0.021757504 ubox
51 55 0.012596318 ubox
51 56 0.020389989 ubox
54 62 0.011309538 ubox
54 63 0.012638169 ubox
55 61 0.011207161 ubox
55 62 0.012420862 ubox
56 60 0.009341293 ubox
56 61 0.010088327 ubox
56 63 0.008815068 ubox
57 62 0.010881790 ubox
57 63 0.006309927 ubox
58 65 0.028051860 ubox
59 63 0.007468244 ubox
59 64 0.028044434 ubox
62 73 0.016059163 ubox
63 72 0.016821290 ubox
64 68 0.003850184 ubox
64 71 0.018678147 ubox
65 70 0.019721947 ubox
69 73 0.007748324 ubox
69 75 0.016503847 ubox
69 76 0.015332536 ubox
69 77 0.021349541 ubox
70 75 0.013454322 ubox
70 76 0.024580796 ubox
70 77 0.017278899 ubox
70 78 0.045564791 ubox
71 79 0.003397582 ubox
72 79 0.022126463 ubox
73 79 0.005098447 ubox
75 79 0.005682311 ubox
1 73 0.9500000 lbox
2 72 0.9500000 lbox
3 71 0.9500000 lbox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
