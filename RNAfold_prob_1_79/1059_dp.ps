%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1059)
} def

/sequence { (\
GGAAAGUCCUGUUCAGCAGGGCCUCCACGAGCGCCCGCACGACGCGUCAAUGACCGUCAGCUGCACAGCAUAUCGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.018185496 ubox
1 9 0.073770976 ubox
1 10 0.003545741 ubox
1 14 0.003180838 ubox
1 23 0.005495963 ubox
1 24 0.006934171 ubox
1 25 0.013937998 ubox
1 26 0.860325825 ubox
1 28 0.006487400 ubox
1 69 0.008186240 ubox
1 74 0.083762369 ubox
1 76 0.016081862 ubox
1 77 0.011348950 ubox
1 78 0.297670879 ubox
2 7 0.013580672 ubox
2 8 0.077298700 ubox
2 9 0.004465763 ubox
2 13 0.003170464 ubox
2 22 0.004374948 ubox
2 23 0.008292760 ubox
2 24 0.013493936 ubox
2 25 0.860904027 ubox
2 26 0.018330537 ubox
2 69 0.007495399 ubox
2 73 0.079458831 ubox
2 74 0.197617265 ubox
2 76 0.016635339 ubox
2 77 0.297129133 ubox
2 78 0.247179799 ubox
3 7 0.067272739 ubox
3 24 0.828597780 ubox
3 71 0.006412544 ubox
3 73 0.192403647 ubox
3 76 0.293776885 ubox
3 77 0.246794490 ubox
4 24 0.164010289 ubox
4 71 0.024373676 ubox
4 73 0.062593015 ubox
4 76 0.225596902 ubox
4 77 0.013714336 ubox
5 24 0.034832517 ubox
5 71 0.090083042 ubox
5 73 0.053790240 ubox
5 76 0.016913915 ubox
5 77 0.003541801 ubox
6 22 0.860431195 ubox
6 23 0.040446910 ubox
6 69 0.052939161 ubox
6 71 0.298752295 ubox
6 73 0.169799454 ubox
6 74 0.164559531 ubox
6 76 0.003263816 ubox
6 78 0.005477847 ubox
7 21 0.862530481 ubox
7 68 0.027921789 ubox
7 70 0.310744193 ubox
7 72 0.179879024 ubox
8 20 0.863146396 ubox
8 21 0.003512156 ubox
8 68 0.024537653 ubox
8 75 0.009140052 ubox
9 19 0.863166767 ubox
9 68 0.494216988 ubox
10 18 0.862961067 ubox
10 65 0.005232086 ubox
10 67 0.501056063 ubox
10 70 0.045187914 ubox
11 17 0.862864433 ubox
11 40 0.003886293 ubox
11 64 0.005542998 ubox
11 66 0.502211449 ubox
11 69 0.047481875 ubox
12 16 0.807203489 ubox
12 39 0.003837720 ubox
12 63 0.003217401 ubox
12 65 0.492353729 ubox
12 68 0.047305765 ubox
13 63 0.003360071 ubox
13 65 0.020258063 ubox
13 67 0.044419095 ubox
14 63 0.502564944 ubox
15 62 0.503037110 ubox
16 38 0.022314495 ubox
16 61 0.502928325 ubox
16 64 0.034272504 ubox
16 69 0.004976586 ubox
17 37 0.023056451 ubox
17 60 0.502335191 ubox
17 63 0.034290914 ubox
17 68 0.004977055 ubox
18 62 0.031852811 ubox
19 35 0.004405671 ubox
19 36 0.504159228 ubox
19 38 0.004228111 ubox
19 61 0.007376072 ubox
20 34 0.004268739 ubox
20 35 0.504852943 ubox
20 36 0.003288701 ubox
21 34 0.504865222 ubox
22 33 0.504812771 ubox
23 29 0.003859405 ubox
23 31 0.504172587 ubox
24 29 0.003412974 ubox
24 30 0.503917901 ubox
24 31 0.008727961 ubox
25 29 0.499693553 ubox
25 31 0.005552351 ubox
25 79 0.003278983 ubox
26 31 0.008673933 ubox
26 79 0.003768904 ubox
27 73 0.003476019 ubox
27 76 0.554256406 ubox
27 77 0.025443042 ubox
28 37 0.004945692 ubox
28 68 0.004305424 ubox
28 75 0.593024438 ubox
28 79 0.591179201 ubox
29 36 0.005677744 ubox
29 40 0.006409890 ubox
29 66 0.005082176 ubox
29 71 0.014869480 ubox
29 73 0.003353764 ubox
29 74 0.594386187 ubox
29 78 0.620930584 ubox
30 71 0.018551378 ubox
30 73 0.590202803 ubox
30 77 0.620636154 ubox
31 36 0.003190859 ubox
31 38 0.057365790 ubox
31 40 0.004225151 ubox
31 64 0.017489935 ubox
31 66 0.025980995 ubox
31 69 0.314005041 ubox
31 71 0.143094155 ubox
31 73 0.005932618 ubox
31 76 0.620040096 ubox
32 37 0.057349310 ubox
32 63 0.017497860 ubox
32 68 0.314118616 ubox
32 75 0.620218200 ubox
33 38 0.017712231 ubox
33 40 0.020435829 ubox
33 61 0.008499305 ubox
33 62 0.016448729 ubox
33 64 0.073803679 ubox
33 66 0.064428982 ubox
33 69 0.587221189 ubox
33 71 0.007961689 ubox
33 73 0.007766044 ubox
33 74 0.519299563 ubox
34 41 0.003637567 ubox
34 60 0.008592540 ubox
34 63 0.074882715 ubox
34 68 0.601735103 ubox
34 75 0.003333245 ubox
35 41 0.003169008 ubox
35 63 0.070554519 ubox
35 68 0.138986573 ubox
36 41 0.004298210 ubox
36 46 0.011449262 ubox
36 60 0.003194111 ubox
36 63 0.041759007 ubox
36 68 0.093028070 ubox
37 45 0.014828205 ubox
37 58 0.004105707 ubox
37 61 0.269314236 ubox
37 62 0.018939076 ubox
37 64 0.753522429 ubox
37 66 0.008820927 ubox
37 69 0.063447964 ubox
37 71 0.014704619 ubox
37 73 0.010812389 ubox
38 44 0.014826658 ubox
38 60 0.269420269 ubox
38 63 0.754740239 ubox
38 68 0.062873655 ubox
39 57 0.004237958 ubox
39 62 0.748469938 ubox
39 71 0.005541462 ubox
39 73 0.005531545 ubox
39 76 0.003655490 ubox
40 56 0.004406535 ubox
40 60 0.534252434 ubox
40 63 0.012761455 ubox
40 68 0.004471827 ubox
40 75 0.003816354 ubox
41 55 0.004357231 ubox
41 57 0.003520321 ubox
41 58 0.997429733 ubox
41 61 0.011835476 ubox
42 57 0.999481931 ubox
43 56 0.999719402 ubox
44 54 0.005616002 ubox
44 55 0.999173299 ubox
44 57 0.010905024 ubox
44 58 0.003382089 ubox
44 61 0.003828815 ubox
44 64 0.004695954 ubox
45 52 0.017458277 ubox
45 56 0.011736730 ubox
45 60 0.003845378 ubox
45 63 0.004701108 ubox
46 51 0.011671459 ubox
46 54 0.999069049 ubox
46 55 0.009837192 ubox
46 62 0.003886838 ubox
47 52 0.008297256 ubox
47 53 0.998556585 ubox
48 52 0.990159583 ubox
51 59 0.009423110 ubox
52 58 0.010220762 ubox
52 78 0.003360179 ubox
53 57 0.008893915 ubox
53 77 0.003286040 ubox
55 75 0.003419391 ubox
56 74 0.003481588 ubox
59 71 0.028201179 ubox
59 73 0.018161313 ubox
60 64 0.011226700 ubox
60 66 0.021459945 ubox
60 69 0.293115325 ubox
60 71 0.016191360 ubox
60 73 0.004483687 ubox
60 74 0.006700208 ubox
60 76 0.003216945 ubox
61 68 0.293373870 ubox
61 75 0.003270334 ubox
62 67 0.274522794 ubox
62 68 0.004348987 ubox
62 70 0.234179184 ubox
62 72 0.005244320 ubox
63 69 0.259725152 ubox
63 71 0.004436614 ubox
64 68 0.257898533 ubox
65 71 0.010345516 ubox
65 73 0.007053164 ubox
65 76 0.006733609 ubox
66 75 0.007266883 ubox
66 79 0.003532370 ubox
67 71 0.008259124 ubox
67 73 0.021498115 ubox
67 77 0.016734112 ubox
68 73 0.010406461 ubox
68 74 0.012640377 ubox
68 76 0.027867996 ubox
68 78 0.004056241 ubox
69 75 0.031583596 ubox
69 79 0.004155414 ubox
70 76 0.006480860 ubox
70 77 0.007378469 ubox
71 75 0.006314173 ubox
72 77 0.006989495 ubox
74 79 0.009719963 ubox
1 26 0.9500000 lbox
2 25 0.9500000 lbox
3 24 0.9500000 lbox
6 22 0.9500000 lbox
7 21 0.9500000 lbox
8 20 0.9500000 lbox
9 19 0.9500000 lbox
10 18 0.9500000 lbox
11 17 0.9500000 lbox
12 16 0.9500000 lbox
27 76 0.9500000 lbox
28 75 0.9500000 lbox
29 74 0.9500000 lbox
30 73 0.9500000 lbox
33 69 0.9500000 lbox
34 68 0.9500000 lbox
37 64 0.9500000 lbox
38 63 0.9500000 lbox
39 62 0.9500000 lbox
40 60 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
showpage
end
%%EOF
