%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (156)
} def

/sequence { (\
GGAAAAAAGCGGCCUGCGCGCGGCUAAAUGGCGAAAGCACAGAGGCGACGGGAGAGGCAAGCAAAAAAGAUCGUAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.039051722 ubox
1 62 0.007154407 ubox
1 71 0.012819005 ubox
1 72 0.069375940 ubox
1 74 0.007697330 ubox
1 78 0.048547942 ubox
2 10 0.011617275 ubox
2 62 0.005219006 ubox
2 71 0.062633186 ubox
2 72 0.081992768 ubox
2 77 0.047487965 ubox
2 78 0.072841131 ubox
3 71 0.080010097 ubox
3 74 0.003552469 ubox
3 76 0.045495389 ubox
3 77 0.072205080 ubox
4 71 0.004238336 ubox
4 74 0.008987816 ubox
4 76 0.065784538 ubox
4 77 0.007003316 ubox
5 74 0.022359990 ubox
5 76 0.008505226 ubox
5 77 0.005503658 ubox
6 74 0.027597353 ubox
6 76 0.006180567 ubox
6 77 0.017401204 ubox
7 71 0.004318416 ubox
7 74 0.005497230 ubox
7 76 0.019163513 ubox
7 77 0.008484986 ubox
8 71 0.013388944 ubox
8 74 0.009414385 ubox
8 76 0.009323884 ubox
9 49 0.003472066 ubox
9 58 0.008722408 ubox
9 62 0.985588144 ubox
9 72 0.006214219 ubox
9 74 0.057667098 ubox
10 47 0.006442466 ubox
10 57 0.008690498 ubox
10 61 0.986261891 ubox
10 69 0.003411432 ubox
10 73 0.059057581 ubox
10 79 0.005474985 ubox
11 46 0.006505294 ubox
11 58 0.018402788 ubox
11 62 0.012159227 ubox
11 72 0.058829685 ubox
11 78 0.005671880 ubox
12 58 0.998650266 ubox
12 71 0.007984402 ubox
13 44 0.006524570 ubox
13 52 0.006229632 ubox
13 56 0.014578471 ubox
13 57 0.999806892 ubox
14 42 0.006729712 ubox
14 51 0.006243829 ubox
14 54 0.021636604 ubox
14 56 0.999608529 ubox
15 41 0.006822076 ubox
15 50 0.006231286 ubox
15 52 0.013216457 ubox
15 53 0.034528495 ubox
15 54 0.092917271 ubox
15 55 0.989372254 ubox
16 40 0.006929172 ubox
16 49 0.006288252 ubox
17 47 0.005807700 ubox
17 50 0.019779411 ubox
17 51 0.054021589 ubox
17 52 0.962793713 ubox
17 54 0.092577149 ubox
18 38 0.007026015 ubox
18 46 0.005802557 ubox
18 49 0.020296921 ubox
19 37 0.007021746 ubox
19 45 0.005788955 ubox
19 47 0.020077869 ubox
19 50 0.994535596 ubox
19 51 0.033136286 ubox
19 52 0.088416955 ubox
20 46 0.020113270 ubox
20 49 0.994349609 ubox
21 33 0.004491312 ubox
21 45 0.020101365 ubox
21 47 0.731347112 ubox
21 50 0.090995599 ubox
22 32 0.004513139 ubox
22 46 0.722717736 ubox
22 49 0.089074198 ubox
23 32 0.007774543 ubox
23 38 0.003512114 ubox
23 46 0.690211541 ubox
24 30 0.004517100 ubox
24 31 0.007808055 ubox
24 37 0.003516083 ubox
24 42 0.017674375 ubox
24 44 0.712854881 ubox
24 45 0.699061051 ubox
24 47 0.008296378 ubox
25 30 0.007315732 ubox
25 36 0.003421740 ubox
25 41 0.016059769 ubox
25 42 0.016765574 ubox
25 43 0.690507919 ubox
25 44 0.674121406 ubox
25 45 0.010893210 ubox
29 36 0.004841200 ubox
29 39 0.136662165 ubox
29 41 0.813505248 ubox
29 42 0.016281418 ubox
29 43 0.003452700 ubox
30 38 0.113518450 ubox
30 40 0.827855984 ubox
31 38 0.991366610 ubox
31 40 0.012578960 ubox
32 37 0.995121650 ubox
33 38 0.017883869 ubox
37 46 0.004822691 ubox
38 45 0.004840443 ubox
48 74 0.003707617 ubox
49 73 0.003828190 ubox
50 72 0.003826004 ubox
51 71 0.003547435 ubox
58 73 0.003233588 ubox
59 76 0.003902482 ubox
59 77 0.004038857 ubox
60 71 0.005657068 ubox
60 76 0.004410578 ubox
61 71 0.004210911 ubox
61 72 0.003875519 ubox
61 74 0.026801267 ubox
62 69 0.028597921 ubox
62 73 0.027479346 ubox
63 71 0.010401377 ubox
63 74 0.007895305 ubox
63 76 0.005634566 ubox
63 77 0.012894220 ubox
64 71 0.019205465 ubox
64 74 0.009386140 ubox
64 76 0.013261286 ubox
64 77 0.015617828 ubox
65 71 0.013463304 ubox
65 74 0.019056832 ubox
65 76 0.015876176 ubox
65 77 0.018229003 ubox
66 71 0.015001864 ubox
66 74 0.013292117 ubox
66 76 0.018679862 ubox
66 77 0.029538018 ubox
67 71 0.009271994 ubox
67 74 0.021811914 ubox
67 76 0.031849446 ubox
67 77 0.039224708 ubox
68 74 0.032802062 ubox
68 76 0.042854689 ubox
68 77 0.022379680 ubox
69 74 0.018561496 ubox
69 76 0.018715648 ubox
69 77 0.060561546 ubox
69 78 0.561727550 ubox
70 74 0.012635510 ubox
70 76 0.065736085 ubox
70 77 0.554519897 ubox
71 75 0.060891365 ubox
71 79 0.006630161 ubox
72 79 0.229655634 ubox
73 77 0.007258329 ubox
73 78 0.248763895 ubox
74 79 0.008233258 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
23 46 0.9500000 lbox
24 45 0.9500000 lbox
25 44 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
showpage
end
%%EOF
