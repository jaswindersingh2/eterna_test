%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (241)
} def

/sequence { (\
GGAAAAGCGGAGAUGACUAGGACUAAUGUCACUAGAAAACAUGAGACUAAUGUCCAUGACAUCGACGCGUGUUACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 70 0.003909601 ubox
1 72 0.034071559 ubox
1 73 0.106929243 ubox
1 75 0.301722367 ubox
1 76 0.165514403 ubox
1 77 0.016336765 ubox
1 78 0.256116636 ubox
2 70 0.006931714 ubox
2 72 0.122405211 ubox
2 73 0.489638997 ubox
2 75 0.190299072 ubox
2 76 0.017442994 ubox
2 77 0.250509131 ubox
2 78 0.230045002 ubox
3 70 0.040073862 ubox
3 72 0.503768725 ubox
3 73 0.205622595 ubox
3 76 0.235467344 ubox
3 77 0.229037707 ubox
4 70 0.089242426 ubox
4 72 0.236175425 ubox
4 73 0.139686759 ubox
4 76 0.208187107 ubox
4 77 0.009160263 ubox
5 70 0.197315729 ubox
5 72 0.136550070 ubox
5 73 0.082829449 ubox
5 76 0.009141315 ubox
5 77 0.009878705 ubox
6 70 0.161859509 ubox
6 72 0.086998759 ubox
6 73 0.044084843 ubox
6 76 0.011738847 ubox
6 77 0.003750859 ubox
7 68 0.997891797 ubox
7 70 0.041782472 ubox
7 72 0.012194991 ubox
7 75 0.005796684 ubox
8 67 0.998823696 ubox
8 69 0.042233377 ubox
8 71 0.011249208 ubox
8 79 0.016461845 ubox
9 66 0.998779267 ubox
9 68 0.041850477 ubox
9 70 0.007769988 ubox
9 78 0.017911828 ubox
10 66 0.023808053 ubox
10 77 0.017908378 ubox
11 76 0.017907977 ubox
12 63 0.999770317 ubox
12 75 0.017806826 ubox
13 62 0.999448386 ubox
14 37 0.004392314 ubox
14 38 0.008224684 ubox
14 61 0.998723527 ubox
14 74 0.008806936 ubox
15 60 0.994640772 ubox
15 73 0.008635585 ubox
16 72 0.007459309 ubox
17 35 0.991512730 ubox
17 58 0.043993271 ubox
17 71 0.006340905 ubox
18 34 0.997432841 ubox
18 35 0.004134617 ubox
18 56 0.006860864 ubox
18 58 0.009242709 ubox
19 33 0.997937519 ubox
19 57 0.011429892 ubox
20 32 0.996591900 ubox
20 55 0.052871182 ubox
21 30 0.997235739 ubox
21 54 0.052943332 ubox
22 29 0.998027913 ubox
22 53 0.052934222 ubox
23 28 0.997459134 ubox
23 52 0.052866571 ubox
24 28 0.003654716 ubox
24 49 0.003746802 ubox
24 50 0.003523102 ubox
25 48 0.003967156 ubox
25 51 0.003457930 ubox
26 48 0.003433600 ubox
27 46 0.005060524 ubox
27 49 0.003442342 ubox
28 47 0.052410524 ubox
29 44 0.006362121 ubox
29 46 0.052455354 ubox
30 43 0.006459177 ubox
30 45 0.052330673 ubox
31 42 0.006021610 ubox
32 43 0.038336448 ubox
33 41 0.004400526 ubox
33 43 0.010937670 ubox
34 42 0.013250020 ubox
35 40 0.018516113 ubox
35 63 0.003719407 ubox
36 62 0.003757890 ubox
38 73 0.008013346 ubox
39 53 0.008526633 ubox
39 72 0.008681030 ubox
40 52 0.009056842 ubox
40 58 0.993095943 ubox
40 71 0.008809249 ubox
41 51 0.009049105 ubox
41 57 0.997204957 ubox
41 70 0.008808903 ubox
42 50 0.008984091 ubox
42 56 0.997725523 ubox
42 69 0.008801534 ubox
43 54 0.007201375 ubox
43 55 0.997989392 ubox
43 68 0.008755204 ubox
44 53 0.009921240 ubox
45 53 0.005251621 ubox
45 54 0.998214678 ubox
45 66 0.006082265 ubox
46 51 0.005863327 ubox
46 53 0.998140394 ubox
47 52 0.997526268 ubox
47 64 0.004184013 ubox
48 52 0.003430766 ubox
50 62 0.008297885 ubox
51 61 0.008791533 ubox
52 60 0.008853680 ubox
53 59 0.008873421 ubox
54 58 0.008835452 ubox
58 73 0.004414780 ubox
59 70 0.004040032 ubox
59 72 0.012041089 ubox
60 69 0.004147856 ubox
60 71 0.012964190 ubox
61 70 0.012892214 ubox
62 69 0.010748446 ubox
63 69 0.006722993 ubox
64 68 0.006469609 ubox
64 73 0.004463950 ubox
65 72 0.004718243 ubox
66 71 0.004754538 ubox
68 79 0.011504161 ubox
69 73 0.007652687 ubox
69 75 0.123274619 ubox
69 76 0.011345316 ubox
69 77 0.012062932 ubox
69 78 0.093361187 ubox
70 74 0.111252537 ubox
70 79 0.071592310 ubox
71 75 0.007761103 ubox
71 76 0.019028268 ubox
71 77 0.016380178 ubox
71 78 0.124387084 ubox
72 79 0.007012160 ubox
73 79 0.006628100 ubox
75 79 0.015882983 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
