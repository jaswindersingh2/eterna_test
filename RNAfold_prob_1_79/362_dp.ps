%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (362)
} def

/sequence { (\
GGAAAGAUCGUCUGAAAAAAGACCCGAAACGGAGAUCAGCGAGUGGAAAACACGGAGGAAACUCCCGCCACUCUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.009237455 ubox
1 9 0.068506828 ubox
1 13 0.009513699 ubox
1 24 0.015779020 ubox
1 25 0.229307823 ubox
1 30 0.033076217 ubox
1 37 0.012860604 ubox
1 40 0.064154740 ubox
1 69 0.006512623 ubox
1 74 0.004471103 ubox
1 75 0.026739156 ubox
1 76 0.071475654 ubox
1 77 0.006328687 ubox
1 78 0.153870791 ubox
2 8 0.050235815 ubox
2 9 0.171611595 ubox
2 12 0.010087437 ubox
2 23 0.013281736 ubox
2 24 0.229114481 ubox
2 25 0.009002065 ubox
2 30 0.015908488 ubox
2 36 0.007477332 ubox
2 37 0.019158085 ubox
2 40 0.043261930 ubox
2 68 0.006420091 ubox
2 73 0.005028628 ubox
2 74 0.021994610 ubox
2 75 0.082507697 ubox
2 76 0.005309264 ubox
2 77 0.143401356 ubox
2 78 0.252346250 ubox
3 8 0.157254720 ubox
3 11 0.009710918 ubox
3 36 0.017829023 ubox
3 72 0.004587007 ubox
3 74 0.078539725 ubox
3 76 0.120759483 ubox
3 77 0.238247119 ubox
4 8 0.007526339 ubox
4 74 0.010720449 ubox
4 76 0.176800559 ubox
4 77 0.100621004 ubox
5 13 0.014063637 ubox
5 74 0.030060133 ubox
5 76 0.128680074 ubox
5 77 0.007262559 ubox
6 12 0.014477570 ubox
6 23 0.007330756 ubox
6 24 0.029314050 ubox
6 25 0.084405360 ubox
6 30 0.016422556 ubox
6 37 0.789089051 ubox
6 40 0.003846703 ubox
6 73 0.017825579 ubox
6 74 0.009913909 ubox
6 75 0.147495316 ubox
6 77 0.003746520 ubox
6 78 0.037411772 ubox
7 11 0.012599698 ubox
7 36 0.789917473 ubox
7 72 0.015684402 ubox
7 74 0.137652411 ubox
7 76 0.003357611 ubox
7 77 0.034971141 ubox
8 15 0.009059108 ubox
8 22 0.009303069 ubox
8 26 0.012532693 ubox
8 27 0.201031163 ubox
8 28 0.011211323 ubox
8 29 0.003442815 ubox
8 33 0.006069999 ubox
8 35 0.789965764 ubox
8 42 0.006161704 ubox
9 14 0.009589577 ubox
9 21 0.009618253 ubox
9 26 0.214151203 ubox
9 31 0.004404749 ubox
9 32 0.006070405 ubox
9 34 0.789031604 ubox
9 41 0.007081142 ubox
9 79 0.006578514 ubox
10 23 0.976330814 ubox
10 24 0.031803929 ubox
10 25 0.135237924 ubox
10 30 0.004281413 ubox
10 36 0.004128589 ubox
10 40 0.009402039 ubox
11 22 0.988059068 ubox
11 27 0.003307805 ubox
11 29 0.003500812 ubox
11 32 0.021050185 ubox
11 33 0.132991089 ubox
11 35 0.004527136 ubox
12 21 0.989536709 ubox
12 26 0.003597764 ubox
12 31 0.021387443 ubox
12 32 0.136473436 ubox
12 34 0.004582544 ubox
12 39 0.009986730 ubox
13 18 0.011003503 ubox
13 19 0.035427718 ubox
13 20 0.982742106 ubox
13 22 0.011398199 ubox
13 26 0.004534869 ubox
13 29 0.006261256 ubox
13 31 0.136258748 ubox
13 33 0.004560237 ubox
13 38 0.010103156 ubox
14 23 0.006068180 ubox
14 24 0.003520793 ubox
14 25 0.005458910 ubox
14 30 0.135053521 ubox
14 37 0.010106000 ubox
14 78 0.003862137 ubox
15 36 0.009738293 ubox
15 77 0.003772863 ubox
21 25 0.021003240 ubox
21 30 0.004418685 ubox
21 37 0.012747590 ubox
22 36 0.012729488 ubox
23 32 0.016683373 ubox
23 34 0.016048599 ubox
24 31 0.024908690 ubox
24 32 0.808898463 ubox
24 34 0.009946759 ubox
24 39 0.004516097 ubox
24 79 0.005142326 ubox
25 31 0.810818840 ubox
25 32 0.053020990 ubox
25 34 0.012195495 ubox
25 79 0.105952759 ubox
26 30 0.758602517 ubox
26 37 0.018342308 ubox
26 78 0.115473084 ubox
27 36 0.018102526 ubox
27 77 0.114476773 ubox
28 76 0.061744088 ubox
28 77 0.010380769 ubox
29 76 0.010251373 ubox
29 77 0.005142163 ubox
30 39 0.008592412 ubox
30 41 0.004456025 ubox
30 79 0.511810091 ubox
31 37 0.008996530 ubox
31 40 0.011208971 ubox
31 74 0.032449382 ubox
31 75 0.008268791 ubox
31 76 0.111185480 ubox
31 78 0.538696441 ubox
32 36 0.005868329 ubox
32 37 0.007945694 ubox
32 40 0.004081116 ubox
32 73 0.034212488 ubox
32 74 0.003395972 ubox
32 75 0.127061526 ubox
32 77 0.538517801 ubox
32 78 0.022060975 ubox
33 72 0.034283621 ubox
33 74 0.127560914 ubox
33 76 0.539129032 ubox
33 77 0.021510463 ubox
34 40 0.029316483 ubox
34 71 0.034204127 ubox
34 73 0.127504793 ubox
34 75 0.539257208 ubox
34 76 0.008834883 ubox
34 77 0.005794936 ubox
34 78 0.117841473 ubox
35 72 0.124968573 ubox
35 74 0.536313858 ubox
35 76 0.004337015 ubox
35 77 0.114324220 ubox
36 70 0.015582585 ubox
36 79 0.004952416 ubox
37 41 0.003603794 ubox
37 79 0.009294669 ubox
38 72 0.009830472 ubox
38 74 0.020280865 ubox
38 76 0.657999613 ubox
38 77 0.050248967 ubox
39 68 0.139890308 ubox
39 69 0.005550241 ubox
39 71 0.009645957 ubox
39 73 0.017434701 ubox
39 74 0.045223190 ubox
39 75 0.712891043 ubox
39 76 0.048729465 ubox
39 77 0.011042684 ubox
39 78 0.015206199 ubox
40 67 0.140185936 ubox
40 79 0.013962001 ubox
41 66 0.138771337 ubox
41 69 0.009136768 ubox
41 73 0.988655773 ubox
41 74 0.003636815 ubox
41 75 0.008573762 ubox
41 78 0.014201172 ubox
42 72 0.989543757 ubox
42 74 0.007493078 ubox
42 77 0.013640275 ubox
43 51 0.012421710 ubox
43 53 0.140040547 ubox
43 68 0.008019923 ubox
43 71 0.989822633 ubox
43 73 0.005547422 ubox
43 76 0.011946782 ubox
44 50 0.012369889 ubox
44 52 0.140253025 ubox
44 67 0.008022347 ubox
44 70 0.989649944 ubox
45 51 0.140314660 ubox
45 53 0.004060142 ubox
45 66 0.008018328 ubox
45 68 0.003584616 ubox
45 69 0.989829197 ubox
45 74 0.012564382 ubox
46 51 0.008840817 ubox
46 53 0.010234309 ubox
46 65 0.005661256 ubox
46 66 0.005908333 ubox
46 68 0.989239104 ubox
46 73 0.012853845 ubox
47 72 0.012561413 ubox
51 67 0.275015325 ubox
53 67 0.529769096 ubox
54 62 0.003602161 ubox
54 63 0.003780260 ubox
54 64 0.004638150 ubox
54 65 0.896624652 ubox
54 66 0.439422555 ubox
54 69 0.004492224 ubox
55 62 0.003956315 ubox
55 64 0.946289377 ubox
55 65 0.322260816 ubox
55 66 0.007664019 ubox
55 68 0.004547021 ubox
56 63 0.992006210 ubox
57 62 0.991580116 ubox
57 63 0.055618460 ubox
57 64 0.096136421 ubox
57 65 0.021624553 ubox
57 66 0.006728237 ubox
58 62 0.057249283 ubox
58 63 0.075104231 ubox
58 64 0.026076699 ubox
58 65 0.006743030 ubox
59 63 0.023046600 ubox
75 79 0.004625205 ubox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
38 76 0.9500000 lbox
39 75 0.9500000 lbox
41 73 0.9500000 lbox
42 72 0.9500000 lbox
43 71 0.9500000 lbox
44 70 0.9500000 lbox
45 69 0.9500000 lbox
46 68 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
showpage
end
%%EOF
