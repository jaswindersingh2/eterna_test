%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (139)
} def

/sequence { (\
GGAAAAAAGCACUACACACGCCAGUAAAUCCGAAAACGAGAAACAGGACGAGAAGUAGAAGCAAAAAAGUACCACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.185945905 ubox
1 12 0.070246772 ubox
1 13 0.055527268 ubox
1 15 0.077522010 ubox
1 17 0.074625282 ubox
1 19 0.019858202 ubox
1 22 0.045444427 ubox
1 31 0.094104534 ubox
1 37 0.003945156 ubox
1 44 0.003416407 ubox
1 49 0.007898567 ubox
1 62 0.007501735 ubox
1 70 0.020501829 ubox
1 72 0.021498363 ubox
1 73 0.246647681 ubox
1 75 0.008747133 ubox
1 76 0.006100207 ubox
1 78 0.052834764 ubox
2 10 0.053181878 ubox
2 12 0.058729416 ubox
2 13 0.008485838 ubox
2 15 0.033213240 ubox
2 17 0.019276136 ubox
2 19 0.006306968 ubox
2 21 0.045313851 ubox
2 22 0.003287385 ubox
2 30 0.094203745 ubox
2 49 0.004889154 ubox
2 62 0.005655925 ubox
2 70 0.016543071 ubox
2 72 0.246432457 ubox
2 73 0.008727387 ubox
2 75 0.006995522 ubox
2 77 0.044923282 ubox
2 78 0.072544574 ubox
3 13 0.013680035 ubox
3 29 0.091769295 ubox
3 70 0.122325440 ubox
3 76 0.039359809 ubox
3 77 0.067916426 ubox
4 13 0.026662689 ubox
4 25 0.012359457 ubox
4 29 0.003854941 ubox
4 70 0.095774600 ubox
4 76 0.053585383 ubox
4 77 0.004581055 ubox
5 13 0.013757541 ubox
5 25 0.031498077 ubox
5 70 0.015900783 ubox
5 76 0.004679998 ubox
5 77 0.003397743 ubox
6 13 0.020148404 ubox
6 25 0.008755081 ubox
6 70 0.010715277 ubox
6 76 0.003327542 ubox
6 77 0.003451708 ubox
7 13 0.014700801 ubox
7 25 0.016938432 ubox
7 76 0.003195029 ubox
7 77 0.015961646 ubox
8 13 0.015743866 ubox
8 25 0.006747684 ubox
8 70 0.005642998 ubox
8 76 0.018069762 ubox
9 13 0.008386323 ubox
9 15 0.053444270 ubox
9 17 0.040276905 ubox
9 19 0.008974959 ubox
9 21 0.096826038 ubox
9 22 0.008388062 ubox
9 25 0.024256047 ubox
9 30 0.005388734 ubox
9 31 0.003746597 ubox
9 49 0.008499482 ubox
9 56 0.006213632 ubox
9 62 0.669087282 ubox
9 70 0.016238595 ubox
9 72 0.006904271 ubox
9 73 0.004091367 ubox
9 75 0.017890954 ubox
9 78 0.004207696 ubox
10 20 0.097405641 ubox
10 24 0.024770715 ubox
10 47 0.003945420 ubox
10 50 0.005484136 ubox
10 55 0.006296465 ubox
10 58 0.017152501 ubox
10 61 0.668698431 ubox
10 69 0.016555971 ubox
10 79 0.012795976 ubox
11 25 0.030775011 ubox
11 56 0.073003692 ubox
11 70 0.007228167 ubox
12 20 0.017264780 ubox
12 24 0.032207467 ubox
12 46 0.009013799 ubox
12 47 0.003215068 ubox
12 50 0.004898948 ubox
12 52 0.009666709 ubox
12 55 0.075587535 ubox
12 58 0.712788446 ubox
12 61 0.006941130 ubox
12 69 0.007127404 ubox
12 79 0.015058902 ubox
13 18 0.012647445 ubox
13 20 0.004743009 ubox
13 23 0.031121546 ubox
13 26 0.082837899 ubox
13 27 0.004327100 ubox
13 28 0.004148535 ubox
13 45 0.008333022 ubox
13 51 0.014329995 ubox
13 53 0.003989750 ubox
13 54 0.074225993 ubox
13 57 0.717616390 ubox
13 58 0.005688116 ubox
13 59 0.003382782 ubox
13 60 0.006292585 ubox
13 68 0.006498371 ubox
13 71 0.005101682 ubox
14 25 0.086528725 ubox
14 56 0.717953365 ubox
14 70 0.005315747 ubox
15 20 0.021509767 ubox
15 24 0.086874516 ubox
15 50 0.011769487 ubox
15 52 0.056501398 ubox
15 55 0.715950448 ubox
15 58 0.005408870 ubox
15 69 0.005323806 ubox
15 79 0.015942968 ubox
16 25 0.028677994 ubox
16 56 0.011339691 ubox
17 24 0.030065542 ubox
17 50 0.020161599 ubox
17 52 0.355136632 ubox
17 55 0.012004002 ubox
17 79 0.016039379 ubox
18 25 0.046320529 ubox
19 24 0.048628976 ubox
19 32 0.004794400 ubox
19 38 0.005899794 ubox
19 47 0.004190676 ubox
19 50 0.955277841 ubox
19 52 0.013490648 ubox
19 79 0.005198265 ubox
20 31 0.004762455 ubox
20 37 0.005888625 ubox
20 49 0.966167422 ubox
20 62 0.004023877 ubox
21 40 0.003623863 ubox
21 46 0.005948594 ubox
21 47 0.980372420 ubox
21 50 0.006063074 ubox
21 52 0.006119070 ubox
21 61 0.004017284 ubox
22 32 0.003458503 ubox
22 46 0.978923994 ubox
22 47 0.062616906 ubox
22 50 0.006475001 ubox
23 29 0.003488117 ubox
24 30 0.007624345 ubox
24 31 0.004426704 ubox
24 37 0.007896799 ubox
24 44 0.949954811 ubox
24 49 0.018717396 ubox
25 36 0.007705149 ubox
25 41 0.007995337 ubox
25 42 0.032747468 ubox
25 43 0.939446146 ubox
25 45 0.026994386 ubox
25 46 0.003167235 ubox
25 48 0.015660645 ubox
25 50 0.004951690 ubox
25 51 0.006054751 ubox
25 57 0.003574374 ubox
26 56 0.003578801 ubox
29 36 0.003409442 ubox
29 38 0.009203066 ubox
29 39 0.448911130 ubox
29 40 0.057016311 ubox
29 41 0.837667760 ubox
29 42 0.033123336 ubox
29 48 0.118137952 ubox
29 51 0.004907690 ubox
29 53 0.005637022 ubox
30 38 0.415601999 ubox
30 40 0.844601978 ubox
30 47 0.129151458 ubox
30 50 0.004707748 ubox
30 52 0.005921132 ubox
31 38 0.881229771 ubox
31 40 0.047853445 ubox
31 46 0.129158647 ubox
31 47 0.004064093 ubox
31 50 0.016949865 ubox
32 37 0.875625081 ubox
32 44 0.020209228 ubox
32 49 0.017637728 ubox
37 46 0.030610548 ubox
37 47 0.010271824 ubox
37 50 0.020918478 ubox
37 79 0.006500263 ubox
38 44 0.009423346 ubox
38 49 0.021022462 ubox
38 78 0.006776224 ubox
39 77 0.006599010 ubox
40 44 0.007107471 ubox
40 49 0.009053661 ubox
40 76 0.005624554 ubox
40 78 0.006681031 ubox
41 77 0.006605977 ubox
42 76 0.005999092 ubox
44 50 0.009341481 ubox
46 73 0.012162329 ubox
47 72 0.012167020 ubox
48 56 0.010025450 ubox
48 70 0.012321079 ubox
49 55 0.010492248 ubox
49 69 0.012406360 ubox
49 79 0.028093138 ubox
50 77 0.007005592 ubox
50 78 0.027309639 ubox
51 76 0.012059391 ubox
51 77 0.024598119 ubox
52 75 0.014117708 ubox
52 76 0.012478909 ubox
52 77 0.003881891 ubox
52 78 0.686685426 ubox
53 76 0.003630925 ubox
53 77 0.687734824 ubox
54 76 0.688140722 ubox
55 62 0.016444877 ubox
55 72 0.020496953 ubox
55 75 0.688562439 ubox
56 61 0.015977610 ubox
56 71 0.021457525 ubox
56 74 0.680640134 ubox
57 70 0.022175722 ubox
57 76 0.003541363 ubox
58 70 0.007377121 ubox
58 72 0.274395287 ubox
58 73 0.559015688 ubox
58 75 0.003939691 ubox
58 78 0.085502662 ubox
59 70 0.023004095 ubox
59 77 0.088683363 ubox
60 70 0.065934772 ubox
60 76 0.089306041 ubox
61 70 0.672600421 ubox
61 72 0.014278402 ubox
61 73 0.010147149 ubox
61 75 0.088541740 ubox
61 78 0.010126848 ubox
62 69 0.679183005 ubox
62 79 0.004931543 ubox
63 70 0.016666119 ubox
63 76 0.004006548 ubox
63 77 0.010438840 ubox
64 70 0.013996046 ubox
64 76 0.009935852 ubox
64 77 0.012595712 ubox
65 70 0.015698820 ubox
65 76 0.011417918 ubox
65 77 0.015451397 ubox
66 70 0.010586384 ubox
66 76 0.013271353 ubox
66 77 0.032858095 ubox
67 76 0.030645659 ubox
67 77 0.374880513 ubox
68 76 0.418002065 ubox
68 77 0.020369013 ubox
69 73 0.024806520 ubox
69 75 0.424378262 ubox
69 76 0.018318484 ubox
69 77 0.010349362 ubox
69 78 0.066975489 ubox
70 74 0.382360854 ubox
70 79 0.005842225 ubox
71 76 0.009982409 ubox
71 77 0.008324576 ubox
72 79 0.023484356 ubox
73 79 0.021681538 ubox
75 79 0.010700296 ubox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
52 78 0.9500000 lbox
53 77 0.9500000 lbox
54 76 0.9500000 lbox
55 75 0.9500000 lbox
56 74 0.9500000 lbox
58 73 0.9500000 lbox
61 70 0.9500000 lbox
62 69 0.9500000 lbox
showpage
end
%%EOF
