%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (692)
} def

/sequence { (\
GGAAAGGCGUCGCAAAGGGAGGCCACGGGCGAACUAAAUGAUCACCCAGCCUGGCGGAAACACCUGGCACAAAGAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 24 0.003439375 ubox
1 26 0.038916177 ubox
1 47 0.005154475 ubox
1 51 0.014618218 ubox
1 68 0.005110462 ubox
1 70 0.103468506 ubox
1 76 0.005571558 ubox
1 77 0.010091478 ubox
1 78 0.385064256 ubox
2 24 0.003267546 ubox
2 26 0.122055770 ubox
2 46 0.004635116 ubox
2 50 0.014595681 ubox
2 68 0.013115947 ubox
2 70 0.053151409 ubox
2 76 0.010193907 ubox
2 77 0.373134283 ubox
2 78 0.554529893 ubox
3 76 0.345456040 ubox
3 77 0.548111743 ubox
4 76 0.476889607 ubox
4 77 0.035890625 ubox
5 65 0.013806122 ubox
5 76 0.040117504 ubox
5 77 0.012827341 ubox
6 23 0.004349914 ubox
6 24 0.998739014 ubox
6 26 0.007022991 ubox
6 64 0.013870209 ubox
6 70 0.004329935 ubox
6 78 0.003578320 ubox
7 23 0.999835299 ubox
7 24 0.004029845 ubox
7 63 0.013867651 ubox
8 21 0.009713492 ubox
8 22 0.999639893 ubox
9 23 0.003423794 ubox
9 26 0.003291298 ubox
9 61 0.013553271 ubox
10 18 0.009179731 ubox
10 19 0.031908363 ubox
10 20 0.996743503 ubox
10 21 0.003427023 ubox
10 22 0.003451102 ubox
10 25 0.003256910 ubox
10 57 0.004362666 ubox
10 60 0.012931221 ubox
11 17 0.012452094 ubox
11 18 0.053915626 ubox
11 19 0.997880776 ubox
11 21 0.004259248 ubox
11 31 0.003510424 ubox
11 56 0.007831813 ubox
12 23 0.003583591 ubox
12 30 0.003514163 ubox
12 55 0.007884269 ubox
12 68 0.003384072 ubox
13 17 0.786630944 ubox
13 18 0.233320558 ubox
13 19 0.006365633 ubox
13 22 0.003586698 ubox
13 29 0.003504401 ubox
13 54 0.007800356 ubox
13 57 0.010734597 ubox
13 67 0.003380032 ubox
16 65 0.003315555 ubox
17 24 0.005142081 ubox
17 55 0.004417089 ubox
17 64 0.003391907 ubox
18 23 0.005143431 ubox
18 63 0.003387895 ubox
20 52 0.013203917 ubox
21 51 0.013905264 ubox
22 50 0.013926315 ubox
23 49 0.013918765 ubox
25 76 0.005156984 ubox
25 77 0.004390818 ubox
26 49 0.014505559 ubox
26 53 0.011082692 ubox
26 74 0.028293353 ubox
26 79 0.018222694 ubox
27 34 0.004521183 ubox
27 35 0.007956607 ubox
27 46 0.016394784 ubox
27 47 0.998491013 ubox
27 52 0.011927022 ubox
27 78 0.006363108 ubox
28 34 0.008361629 ubox
28 35 0.003612319 ubox
28 45 0.016311337 ubox
28 46 0.999557636 ubox
28 47 0.008414593 ubox
28 51 0.012297395 ubox
29 34 0.003701586 ubox
29 45 0.999441020 ubox
29 46 0.007895049 ubox
29 50 0.012300971 ubox
30 40 0.007322178 ubox
30 49 0.012299078 ubox
30 79 0.004069671 ubox
31 39 0.005351834 ubox
31 43 0.997444763 ubox
31 78 0.004417833 ubox
32 39 0.006716384 ubox
32 42 0.982792475 ubox
32 77 0.004233924 ubox
33 39 0.023335529 ubox
33 42 0.041384816 ubox
33 76 0.003608413 ubox
34 40 0.937683215 ubox
35 40 0.032059872 ubox
35 41 0.032110342 ubox
39 48 0.004310344 ubox
39 79 0.005215889 ubox
40 47 0.004694737 ubox
40 77 0.011728298 ubox
40 78 0.008436961 ubox
41 76 0.014059680 ubox
41 77 0.006345080 ubox
42 75 0.015371266 ubox
43 74 0.015414466 ubox
48 76 0.004152081 ubox
48 77 0.003625230 ubox
49 68 0.997714351 ubox
49 70 0.009533852 ubox
50 67 0.998857292 ubox
51 66 0.996110654 ubox
51 67 0.007117532 ubox
51 74 0.005427528 ubox
52 62 0.013078479 ubox
52 66 0.008820244 ubox
52 69 0.036355414 ubox
52 71 0.008245965 ubox
52 73 0.003923701 ubox
53 61 0.013268195 ubox
53 63 0.013903218 ubox
53 64 0.994372717 ubox
53 65 0.044814809 ubox
53 68 0.041348882 ubox
53 70 0.008996210 ubox
54 61 0.007852114 ubox
54 63 0.996932540 ubox
54 64 0.047573290 ubox
54 65 0.005404697 ubox
54 68 0.013282662 ubox
55 66 0.042206444 ubox
55 67 0.012040445 ubox
56 61 0.966143516 ubox
56 63 0.045516193 ubox
56 64 0.017135218 ubox
56 65 0.042615435 ubox
57 61 0.046729904 ubox
57 63 0.017309158 ubox
57 64 0.042625827 ubox
57 65 0.006014318 ubox
68 74 0.007255119 ubox
69 76 0.015132939 ubox
69 77 0.007678053 ubox
70 74 0.048343967 ubox
70 79 0.043232589 ubox
71 76 0.014856684 ubox
71 77 0.020194519 ubox
72 76 0.018290287 ubox
72 77 0.016035140 ubox
73 77 0.007692279 ubox
74 78 0.028573574 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
showpage
end
%%EOF
