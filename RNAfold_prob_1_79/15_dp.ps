%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (15)
} def

/sequence { (\
GGAAAAGAUAUGUUACAAAAGCAAAAAACUAUUGUACGAAAGUAGAAUAGAGCGUAAGAUAUCAAAAAGAUUUACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.003626639 ubox
1 63 0.005460128 ubox
1 71 0.008767686 ubox
1 72 0.004487077 ubox
1 73 0.012872622 ubox
1 75 0.022450845 ubox
1 76 0.028967550 ubox
1 78 0.074839434 ubox
2 62 0.004169713 ubox
2 63 0.011243703 ubox
2 71 0.005780206 ubox
2 72 0.015297541 ubox
2 73 0.017561257 ubox
2 75 0.033403133 ubox
2 77 0.071788563 ubox
2 78 0.094207151 ubox
3 62 0.010576772 ubox
3 71 0.014977430 ubox
3 72 0.018098404 ubox
3 73 0.020313856 ubox
3 76 0.067466263 ubox
3 77 0.092234906 ubox
4 71 0.016926352 ubox
4 72 0.025053058 ubox
4 73 0.050113097 ubox
4 76 0.080427712 ubox
4 77 0.006040390 ubox
5 71 0.023364810 ubox
5 72 0.055425289 ubox
5 73 0.026857927 ubox
5 76 0.006793860 ubox
5 77 0.009068956 ubox
6 71 0.054710769 ubox
6 72 0.028602854 ubox
6 73 0.019450126 ubox
6 76 0.010770643 ubox
6 77 0.003164734 ubox
7 63 0.997003985 ubox
7 71 0.004574252 ubox
7 72 0.008465780 ubox
7 73 0.004705512 ubox
7 75 0.007658380 ubox
7 78 0.007564276 ubox
8 62 0.998047442 ubox
8 71 0.007899369 ubox
8 72 0.003969508 ubox
8 77 0.006965022 ubox
9 24 0.003599915 ubox
9 25 0.008033754 ubox
9 56 0.016578904 ubox
9 61 0.998003098 ubox
9 70 0.006744008 ubox
10 55 0.017905624 ubox
10 60 0.997987212 ubox
11 23 0.039494071 ubox
11 54 0.018157356 ubox
11 58 0.003263749 ubox
11 59 0.991249181 ubox
11 61 0.003303402 ubox
12 22 0.046037989 ubox
12 53 0.018673137 ubox
12 60 0.003576455 ubox
13 21 0.045827959 ubox
13 52 0.018616944 ubox
13 57 0.992096243 ubox
13 58 0.004787972 ubox
13 59 0.003679903 ubox
14 19 0.003622308 ubox
14 20 0.042853517 ubox
14 51 0.017807412 ubox
14 56 0.997458985 ubox
14 57 0.004245043 ubox
14 58 0.003518006 ubox
15 55 0.997334175 ubox
16 21 0.013644871 ubox
16 52 0.007187229 ubox
16 54 0.995729776 ubox
16 58 0.003574475 ubox
17 55 0.004688760 ubox
18 55 0.006950590 ubox
19 55 0.008689116 ubox
20 30 0.013876395 ubox
20 55 0.004360291 ubox
21 29 0.018350453 ubox
21 35 0.006193706 ubox
21 53 0.850272260 ubox
21 55 0.011902375 ubox
22 34 0.006908079 ubox
22 50 0.021139702 ubox
22 52 0.849685876 ubox
22 54 0.013609115 ubox
23 33 0.006833653 ubox
23 55 0.003644493 ubox
24 32 0.006329260 ubox
24 48 0.003405203 ubox
24 55 0.006344266 ubox
25 48 0.003544822 ubox
25 55 0.004301760 ubox
26 48 0.013997245 ubox
27 48 0.004326577 ubox
28 43 0.004699173 ubox
29 34 0.003318763 ubox
29 42 0.004879175 ubox
29 45 0.076624574 ubox
29 50 0.992665814 ubox
29 52 0.012990127 ubox
30 41 0.004765535 ubox
30 44 0.076882277 ubox
30 49 0.996098387 ubox
30 50 0.003448233 ubox
30 51 0.010710896 ubox
31 43 0.076854632 ubox
31 48 0.996349257 ubox
32 39 0.003249040 ubox
32 41 0.006339917 ubox
32 42 0.076471415 ubox
32 46 0.003589507 ubox
32 47 0.995910209 ubox
33 38 0.003171136 ubox
33 39 0.004226159 ubox
33 40 0.008524561 ubox
33 41 0.075334173 ubox
33 45 0.004475122 ubox
33 46 0.983152902 ubox
35 39 0.005762492 ubox
35 40 0.004643368 ubox
35 44 0.994217426 ubox
36 43 0.996621056 ubox
37 42 0.996352817 ubox
42 53 0.003906793 ubox
43 52 0.003892547 ubox
50 78 0.008858510 ubox
51 77 0.009721661 ubox
52 76 0.009868358 ubox
52 77 0.004287763 ubox
52 78 0.004175770 ubox
53 58 0.009195155 ubox
53 79 0.023013248 ubox
54 75 0.037577127 ubox
54 78 0.024911262 ubox
55 74 0.037629408 ubox
56 73 0.037143798 ubox
56 77 0.024270168 ubox
57 72 0.036152227 ubox
57 73 0.005392584 ubox
57 76 0.025826652 ubox
58 71 0.022379176 ubox
58 72 0.006920771 ubox
58 73 0.004955051 ubox
58 75 0.025908166 ubox
58 78 0.003460768 ubox
59 71 0.007444193 ubox
59 72 0.005441190 ubox
59 73 0.020071621 ubox
59 77 0.003387737 ubox
60 68 0.003823867 ubox
60 69 0.008860464 ubox
60 70 0.007178835 ubox
60 74 0.005130925 ubox
61 71 0.039291506 ubox
61 73 0.004436504 ubox
62 68 0.003710192 ubox
62 70 0.045212598 ubox
63 69 0.045688563 ubox
64 71 0.014928866 ubox
64 72 0.026504306 ubox
64 73 0.079263618 ubox
64 76 0.007105028 ubox
64 77 0.016003484 ubox
65 71 0.027353537 ubox
65 72 0.084120784 ubox
65 73 0.062577989 ubox
65 76 0.016276697 ubox
65 77 0.018510559 ubox
66 71 0.071420464 ubox
66 72 0.064951620 ubox
66 73 0.049173490 ubox
66 76 0.018096172 ubox
66 77 0.036654548 ubox
67 71 0.050308734 ubox
67 72 0.045792467 ubox
67 73 0.029510534 ubox
67 76 0.038061250 ubox
67 77 0.245775767 ubox
68 72 0.024074598 ubox
68 73 0.021038257 ubox
68 76 0.273935423 ubox
68 77 0.031928971 ubox
69 73 0.011162852 ubox
69 75 0.277252814 ubox
69 76 0.032342889 ubox
69 77 0.033800338 ubox
69 78 0.556206169 ubox
70 76 0.035474210 ubox
70 77 0.549256507 ubox
71 79 0.005381302 ubox
72 79 0.008078144 ubox
73 79 0.007463907 ubox
75 79 0.014434663 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
