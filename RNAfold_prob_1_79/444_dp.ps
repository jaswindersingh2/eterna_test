%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (444)
} def

/sequence { (\
GGAAAACAGAUCGGCAGUCAAAAGACGACAAAAGUCGCCAAAACCAAACAAAAGUUUGGGAUCUGAAAGAAGUUGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.032334838 ubox
1 73 0.009569629 ubox
1 74 0.013836675 ubox
1 76 0.009352363 ubox
1 77 0.003719589 ubox
1 78 0.156653146 ubox
2 7 0.008836921 ubox
2 73 0.015952947 ubox
2 74 0.018828759 ubox
2 76 0.005253738 ubox
2 77 0.155958870 ubox
2 78 0.171621819 ubox
3 73 0.019678485 ubox
3 74 0.016385065 ubox
3 76 0.151184606 ubox
3 77 0.171299236 ubox
4 73 0.017918274 ubox
4 74 0.019931548 ubox
4 76 0.161227291 ubox
4 77 0.006504662 ubox
5 73 0.019618680 ubox
5 74 0.132342939 ubox
5 76 0.007450541 ubox
5 77 0.019712951 ubox
6 73 0.142496295 ubox
6 74 0.052109388 ubox
6 76 0.023919650 ubox
6 77 0.003452248 ubox
7 65 0.987220044 ubox
7 69 0.005933233 ubox
7 72 0.106690522 ubox
7 75 0.022906848 ubox
8 64 0.998327973 ubox
8 74 0.019653351 ubox
9 19 0.004888679 ubox
9 63 0.999385436 ubox
9 73 0.014373353 ubox
9 78 0.012603554 ubox
10 18 0.004874250 ubox
10 62 0.999122891 ubox
10 77 0.012292431 ubox
11 17 0.004231127 ubox
11 41 0.003672897 ubox
11 60 0.003234454 ubox
11 61 0.998965264 ubox
11 66 0.009688208 ubox
11 70 0.017674718 ubox
11 71 0.003391236 ubox
12 59 0.003439088 ubox
12 60 0.998157562 ubox
12 65 0.010049656 ubox
12 69 0.018048951 ubox
12 75 0.012622264 ubox
13 18 0.007697126 ubox
13 19 0.039583409 ubox
13 26 0.005068998 ubox
13 29 0.013708108 ubox
13 36 0.015868499 ubox
13 38 0.004019071 ubox
13 39 0.973622528 ubox
13 64 0.009693161 ubox
13 74 0.012634993 ubox
14 18 0.025779959 ubox
14 19 0.013402830 ubox
14 26 0.004189096 ubox
14 29 0.021837386 ubox
14 35 0.015922502 ubox
14 38 0.974628211 ubox
14 39 0.004100788 ubox
14 63 0.009610694 ubox
14 73 0.012673683 ubox
15 24 0.021128522 ubox
15 27 0.007540425 ubox
15 34 0.015899999 ubox
15 37 0.973060034 ubox
15 65 0.020423713 ubox
15 72 0.012655677 ubox
16 35 0.023967098 ubox
16 64 0.020469039 ubox
17 26 0.975409903 ubox
17 29 0.045532533 ubox
17 35 0.006112719 ubox
17 36 0.020996410 ubox
17 38 0.003870273 ubox
17 39 0.003268357 ubox
17 62 0.008566836 ubox
17 63 0.020201028 ubox
18 22 0.004628662 ubox
18 23 0.006938467 ubox
18 24 0.004842269 ubox
18 25 0.978039868 ubox
18 28 0.045757875 ubox
18 33 0.005302704 ubox
18 37 0.003365821 ubox
18 61 0.021093276 ubox
18 66 0.004661043 ubox
18 70 0.004402376 ubox
19 24 0.977073322 ubox
19 27 0.045758999 ubox
19 34 0.018600566 ubox
19 60 0.021273616 ubox
19 65 0.004697739 ubox
19 69 0.004488654 ubox
20 64 0.004303699 ubox
23 64 0.005357967 ubox
24 29 0.008077719 ubox
24 36 0.118192157 ubox
24 38 0.059909502 ubox
24 39 0.082808913 ubox
24 63 0.005447344 ubox
25 35 0.118356450 ubox
25 62 0.004953408 ubox
26 34 0.118366407 ubox
26 37 0.150688434 ubox
27 35 0.003323829 ubox
27 36 0.988571275 ubox
28 35 0.989312068 ubox
29 34 0.987605048 ubox
29 37 0.003285410 ubox
30 35 0.003773695 ubox
34 39 0.005410181 ubox
38 59 0.007985762 ubox
39 58 0.008002879 ubox
39 65 0.006605587 ubox
40 57 0.007473058 ubox
40 64 0.006522393 ubox
41 56 0.006770038 ubox
41 57 0.003395761 ubox
41 62 0.007521073 ubox
42 55 0.005580668 ubox
42 56 0.004442141 ubox
43 55 0.005264875 ubox
44 54 0.005874903 ubox
44 58 0.003206898 ubox
44 59 0.997922050 ubox
45 58 0.999924001 ubox
45 59 0.003677154 ubox
46 57 0.999359552 ubox
47 56 0.998598458 ubox
48 55 0.998653101 ubox
49 54 0.997166942 ubox
62 70 0.012372407 ubox
63 69 0.013332215 ubox
63 72 0.006284065 ubox
64 68 0.012037826 ubox
64 71 0.007227037 ubox
64 79 0.010451364 ubox
65 74 0.004608793 ubox
65 78 0.050963693 ubox
66 73 0.013197375 ubox
66 74 0.033246855 ubox
66 76 0.007710297 ubox
66 77 0.055968026 ubox
67 73 0.031817424 ubox
67 74 0.061635776 ubox
67 76 0.054274616 ubox
67 77 0.035933680 ubox
68 73 0.061899162 ubox
68 74 0.023153536 ubox
68 76 0.039487473 ubox
68 77 0.022208977 ubox
69 73 0.017133701 ubox
69 74 0.018788684 ubox
69 76 0.021833850 ubox
69 77 0.026853728 ubox
69 78 0.751467144 ubox
70 74 0.026640014 ubox
70 76 0.028071172 ubox
70 77 0.748657217 ubox
71 76 0.707447836 ubox
71 77 0.018592675 ubox
72 76 0.016244473 ubox
72 77 0.017246606 ubox
72 78 0.067146034 ubox
73 79 0.005006947 ubox
74 79 0.006394150 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
69 78 0.9500000 lbox
70 77 0.9500000 lbox
71 76 0.9500000 lbox
showpage
end
%%EOF
