%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (219)
} def

/sequence { (\
GGAAAACAGGUCAUCAGUAGCUGGAAACAGACUACAAAAGAUGACAGGAAACUGCAUCAGAUGGUCUGGCACAUGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.020817967 ubox
1 53 0.003446206 ubox
1 70 0.023430038 ubox
1 72 0.241621702 ubox
1 74 0.092027400 ubox
1 76 0.026575724 ubox
1 77 0.016557876 ubox
1 78 0.373826117 ubox
2 7 0.005717734 ubox
2 52 0.003909723 ubox
2 66 0.003335332 ubox
2 70 0.039155070 ubox
2 72 0.161074946 ubox
2 74 0.029565491 ubox
2 76 0.024706611 ubox
2 77 0.372975447 ubox
2 78 0.355038183 ubox
3 65 0.003286971 ubox
3 74 0.035231736 ubox
3 76 0.367605479 ubox
3 77 0.354683732 ubox
4 74 0.050486731 ubox
4 76 0.341798684 ubox
4 77 0.009228488 ubox
5 74 0.035462468 ubox
5 76 0.008505410 ubox
5 77 0.035977270 ubox
6 74 0.076948262 ubox
6 76 0.043705849 ubox
6 77 0.004054375 ubox
7 23 0.008887648 ubox
7 47 0.015353125 ubox
7 48 0.020961629 ubox
7 68 0.994272280 ubox
7 69 0.034455086 ubox
7 75 0.044378160 ubox
8 22 0.008901600 ubox
8 67 0.996503947 ubox
8 74 0.042120232 ubox
9 21 0.008865199 ubox
9 66 0.996815887 ubox
9 67 0.030532183 ubox
9 72 0.033462613 ubox
10 45 0.045790146 ubox
10 65 0.947539709 ubox
10 66 0.034088090 ubox
10 70 0.047390419 ubox
10 72 0.009882142 ubox
11 19 0.007259761 ubox
11 44 0.045992020 ubox
11 61 0.003653278 ubox
11 64 0.948097037 ubox
11 69 0.047262670 ubox
11 71 0.008999632 ubox
12 17 0.006256402 ubox
12 43 0.046057562 ubox
12 60 0.003666538 ubox
12 63 0.997449991 ubox
12 64 0.013875528 ubox
12 68 0.046286804 ubox
12 69 0.004155556 ubox
13 42 0.046039438 ubox
13 62 0.997222112 ubox
13 65 0.019671225 ubox
13 67 0.037733073 ubox
14 24 0.003812633 ubox
14 38 0.004282868 ubox
14 41 0.046028367 ubox
14 61 0.997242822 ubox
14 64 0.030701710 ubox
15 23 0.006055370 ubox
15 40 0.045913106 ubox
15 60 0.996262390 ubox
15 63 0.033217571 ubox
15 64 0.009850260 ubox
16 22 0.006082808 ubox
16 33 0.013475459 ubox
16 62 0.029934205 ubox
17 21 0.005954316 ubox
17 32 0.014146495 ubox
17 35 0.997988346 ubox
17 78 0.005449674 ubox
18 31 0.013253118 ubox
18 34 0.999184156 ubox
19 33 0.999366739 ubox
19 77 0.007380967 ubox
20 32 0.999443883 ubox
20 76 0.008490249 ubox
21 30 0.999576181 ubox
21 75 0.008565606 ubox
22 29 0.999521200 ubox
22 30 0.004334101 ubox
22 31 0.006098516 ubox
22 73 0.006419899 ubox
23 28 0.999114270 ubox
23 72 0.006620843 ubox
24 28 0.007938073 ubox
24 72 0.005942096 ubox
28 68 0.014349511 ubox
29 67 0.014489268 ubox
30 66 0.014551759 ubox
31 65 0.014555718 ubox
32 64 0.014555103 ubox
33 63 0.014346470 ubox
34 62 0.013483179 ubox
35 60 0.004820823 ubox
40 58 0.997259348 ubox
41 57 0.998242801 ubox
42 56 0.998245697 ubox
42 59 0.015565508 ubox
43 55 0.998458867 ubox
43 58 0.017279738 ubox
44 57 0.016468614 ubox
45 54 0.998640985 ubox
46 53 0.998533604 ubox
47 52 0.997884241 ubox
47 53 0.005503611 ubox
47 78 0.014559118 ubox
48 52 0.009003037 ubox
48 77 0.014431077 ubox
48 78 0.031801021 ubox
49 76 0.014107310 ubox
49 77 0.030019075 ubox
50 74 0.003512298 ubox
50 76 0.027371451 ubox
50 77 0.019696512 ubox
51 74 0.003993291 ubox
51 76 0.023920405 ubox
52 75 0.026422763 ubox
53 71 0.028823285 ubox
53 73 0.027657624 ubox
54 70 0.030852738 ubox
54 72 0.028619016 ubox
54 76 0.007139363 ubox
55 69 0.030432646 ubox
55 75 0.007638991 ubox
56 74 0.007611277 ubox
57 69 0.031118376 ubox
57 73 0.005579002 ubox
58 68 0.045438816 ubox
59 67 0.047118753 ubox
59 76 0.003824571 ubox
60 66 0.047855204 ubox
61 65 0.041638361 ubox
61 74 0.006225547 ubox
62 73 0.006470075 ubox
63 72 0.006542906 ubox
64 70 0.003845922 ubox
65 69 0.003603627 ubox
68 72 0.003421738 ubox
68 77 0.022366088 ubox
68 78 0.013158053 ubox
69 74 0.012133274 ubox
69 76 0.248049886 ubox
69 77 0.016881268 ubox
69 78 0.051067187 ubox
70 75 0.258647362 ubox
70 79 0.034469986 ubox
71 76 0.015460392 ubox
71 77 0.014104869 ubox
72 79 0.047663365 ubox
73 77 0.007790253 ubox
74 79 0.009288460 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
10 65 0.9500000 lbox
11 64 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
