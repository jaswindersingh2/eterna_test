%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (654)
} def

/sequence { (\
GGAAAGAGGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAAAAACCUCCCGGGCUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 69 0.012289948 ubox
1 70 0.136471347 ubox
1 74 0.016428532 ubox
1 75 0.016113661 ubox
1 78 0.034673729 ubox
2 68 0.011767445 ubox
2 69 0.136484702 ubox
2 70 0.017979851 ubox
2 74 0.018556901 ubox
2 77 0.033374212 ubox
2 78 0.187177172 ubox
3 67 0.010090410 ubox
3 76 0.032570853 ubox
3 77 0.187510262 ubox
4 75 0.029596984 ubox
4 76 0.187343333 ubox
5 67 0.004449075 ubox
5 75 0.187038131 ubox
5 77 0.005466255 ubox
6 66 0.005147064 ubox
6 68 0.176027692 ubox
6 69 0.006283198 ubox
6 70 0.018015085 ubox
6 74 0.175037543 ubox
6 76 0.007260051 ubox
6 77 0.005446148 ubox
6 78 0.004924125 ubox
7 67 0.183337245 ubox
7 75 0.007914989 ubox
7 76 0.006137154 ubox
7 77 0.004562513 ubox
8 65 0.005113887 ubox
8 66 0.183626771 ubox
8 69 0.104509063 ubox
8 70 0.122916175 ubox
8 74 0.008061549 ubox
8 75 0.006733168 ubox
8 76 0.003457558 ubox
8 78 0.007639280 ubox
9 65 0.182853536 ubox
9 68 0.106411237 ubox
9 69 0.121880483 ubox
9 70 0.021594252 ubox
9 74 0.007034878 ubox
9 77 0.006142637 ubox
9 78 0.115460497 ubox
10 67 0.101725287 ubox
10 76 0.005281047 ubox
10 77 0.115622062 ubox
11 67 0.024375753 ubox
11 75 0.004045887 ubox
11 76 0.115572337 ubox
12 67 0.061689246 ubox
12 75 0.115671058 ubox
13 65 0.025533407 ubox
13 66 0.066391238 ubox
13 67 0.005094363 ubox
13 68 0.036712991 ubox
13 69 0.005781693 ubox
13 70 0.017016841 ubox
13 74 0.115629988 ubox
13 78 0.106395172 ubox
14 67 0.034779525 ubox
14 77 0.106506802 ubox
15 76 0.106434791 ubox
16 67 0.019766321 ubox
16 75 0.106496291 ubox
17 65 0.007780203 ubox
17 66 0.021509564 ubox
17 68 0.022443053 ubox
17 69 0.013122246 ubox
17 70 0.097334604 ubox
17 74 0.106426307 ubox
17 78 0.116337223 ubox
18 67 0.021370970 ubox
18 77 0.116456897 ubox
19 67 0.004533866 ubox
19 76 0.116368920 ubox
20 67 0.092247466 ubox
20 75 0.116426928 ubox
21 65 0.008485766 ubox
21 66 0.093153141 ubox
21 68 0.035198861 ubox
21 69 0.013204224 ubox
21 70 0.090238038 ubox
21 74 0.116349402 ubox
21 78 0.129246897 ubox
22 67 0.033389097 ubox
22 77 0.129379380 ubox
23 67 0.004734472 ubox
23 76 0.129280105 ubox
24 67 0.085935563 ubox
24 75 0.129343728 ubox
25 65 0.010708722 ubox
25 66 0.086904898 ubox
25 68 0.034399944 ubox
25 69 0.014148077 ubox
25 70 0.098687969 ubox
25 74 0.129261114 ubox
25 78 0.146595182 ubox
26 67 0.032609448 ubox
26 77 0.146745487 ubox
27 67 0.005030075 ubox
27 76 0.146633486 ubox
28 67 0.094119016 ubox
28 75 0.146706641 ubox
29 65 0.011102954 ubox
29 66 0.095129831 ubox
29 68 0.037650788 ubox
29 69 0.015756998 ubox
29 70 0.109369146 ubox
29 74 0.146615415 ubox
29 78 0.170383654 ubox
30 67 0.035690688 ubox
30 77 0.170556888 ubox
31 67 0.005553505 ubox
31 76 0.170419835 ubox
32 67 0.104374713 ubox
32 75 0.170499390 ubox
33 65 0.012360452 ubox
33 66 0.105482895 ubox
33 68 0.041751525 ubox
33 69 0.017637782 ubox
33 70 0.124541933 ubox
33 74 0.170398635 ubox
33 78 0.208369304 ubox
34 67 0.039581081 ubox
34 77 0.208581313 ubox
35 67 0.006354679 ubox
35 76 0.208415889 ubox
36 67 0.119743452 ubox
36 75 0.208519802 ubox
37 65 0.014963845 ubox
37 66 0.121021568 ubox
37 67 0.003322895 ubox
37 68 0.047778992 ubox
37 69 0.019992779 ubox
37 70 0.145135461 ubox
37 74 0.208340267 ubox
37 78 0.244072806 ubox
38 67 0.045359116 ubox
38 77 0.244320269 ubox
39 67 0.007422588 ubox
39 76 0.244119010 ubox
40 67 0.140757737 ubox
40 75 0.244218364 ubox
41 65 0.016212238 ubox
41 66 0.142264760 ubox
41 67 0.003606521 ubox
41 68 0.055804667 ubox
41 69 0.023817712 ubox
41 70 0.170227313 ubox
41 74 0.244010013 ubox
41 78 0.310347223 ubox
42 67 0.053003663 ubox
42 77 0.310651881 ubox
43 67 0.008352137 ubox
43 76 0.310351532 ubox
44 67 0.165615975 ubox
44 75 0.310441161 ubox
45 65 0.019051897 ubox
45 66 0.167363529 ubox
45 67 0.004256904 ubox
45 68 0.065867458 ubox
45 69 0.026933955 ubox
45 70 0.200432576 ubox
45 74 0.310200012 ubox
45 77 0.004593870 ubox
45 78 0.701920643 ubox
46 67 0.062545350 ubox
46 76 0.004342641 ubox
46 77 0.702669038 ubox
47 67 0.010055017 ubox
47 75 0.003475889 ubox
47 76 0.702272874 ubox
48 67 0.194838741 ubox
48 75 0.702780788 ubox
49 65 0.024336092 ubox
49 66 0.196873530 ubox
49 67 0.005033565 ubox
49 68 0.078196680 ubox
49 69 0.033019219 ubox
49 70 0.255445203 ubox
49 74 0.702506217 ubox
49 78 0.263175072 ubox
50 67 0.074075762 ubox
50 77 0.263444181 ubox
51 67 0.012861460 ubox
51 76 0.263236470 ubox
52 67 0.248686012 ubox
52 75 0.263328583 ubox
53 65 0.031039178 ubox
53 66 0.251368888 ubox
53 67 0.006679448 ubox
53 68 0.107636039 ubox
53 69 0.060457240 ubox
53 70 0.626889900 ubox
53 74 0.262918725 ubox
53 78 0.216628155 ubox
54 67 0.099976937 ubox
54 77 0.216833155 ubox
55 67 0.022401771 ubox
55 76 0.216583921 ubox
56 67 0.653903763 ubox
56 75 0.216534903 ubox
57 65 0.050523199 ubox
57 66 0.662446445 ubox
57 67 0.008514700 ubox
57 68 0.240068378 ubox
57 69 0.041269461 ubox
57 70 0.138077058 ubox
57 74 0.215845435 ubox
57 77 0.004605956 ubox
57 78 0.106719849 ubox
58 67 0.238521072 ubox
58 76 0.005022712 ubox
58 77 0.105677134 ubox
59 67 0.018424529 ubox
59 75 0.004807925 ubox
59 76 0.101223122 ubox
59 77 0.015684161 ubox
60 67 0.057298756 ubox
60 75 0.091834375 ubox
60 76 0.019173951 ubox
60 77 0.049308925 ubox
61 67 0.015025122 ubox
61 75 0.020469387 ubox
61 76 0.058738080 ubox
61 77 0.031405474 ubox
62 67 0.012536423 ubox
62 75 0.063959183 ubox
62 76 0.036133777 ubox
62 77 0.020898134 ubox
63 67 0.007410509 ubox
63 75 0.036407543 ubox
63 76 0.023684772 ubox
64 75 0.024394305 ubox
65 71 0.021203823 ubox
65 72 0.156530456 ubox
65 73 0.276053827 ubox
66 71 0.156971962 ubox
66 72 0.276107653 ubox
66 73 0.026167939 ubox
67 71 0.248749167 ubox
67 72 0.024147683 ubox
67 73 0.009810504 ubox
68 72 0.012301007 ubox
68 73 0.009270366 ubox
69 73 0.006521921 ubox
70 79 0.045026323 ubox
71 77 0.003217364 ubox
71 78 0.056950458 ubox
72 77 0.044897182 ubox
72 78 0.024155557 ubox
73 77 0.015757904 ubox
73 78 0.009080897 ubox
74 79 0.006204851 ubox
45 78 0.9500000 lbox
46 77 0.9500000 lbox
47 76 0.9500000 lbox
48 75 0.9500000 lbox
49 74 0.9500000 lbox
53 70 0.9500000 lbox
56 67 0.9500000 lbox
57 66 0.9500000 lbox
showpage
end
%%EOF
