%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (929)
} def

/sequence { (\
GGAAAGCCUCGGAGCUUCAGCUCAGGUGUGGACUCCACUUGUCCACACCACUCGUGUACGAGAGAGGCAACUGUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.003926129 ubox
1 8 0.029606276 ubox
1 9 0.003281932 ubox
1 10 0.007026454 ubox
1 71 0.112412194 ubox
1 72 0.198580777 ubox
1 74 0.029955994 ubox
1 75 0.157335516 ubox
1 76 0.338161327 ubox
1 77 0.016182206 ubox
1 78 0.107596052 ubox
2 7 0.029582664 ubox
2 8 0.004331346 ubox
2 9 0.005753641 ubox
2 10 0.009723758 ubox
2 18 0.004836983 ubox
2 71 0.209546154 ubox
2 72 0.036473862 ubox
2 74 0.151177293 ubox
2 75 0.390528839 ubox
2 76 0.006369497 ubox
2 77 0.100709964 ubox
2 78 0.121949235 ubox
3 9 0.009441607 ubox
3 17 0.003964162 ubox
3 72 0.044640927 ubox
3 74 0.387039129 ubox
3 76 0.096932673 ubox
3 77 0.121067010 ubox
4 17 0.005016274 ubox
4 72 0.099883339 ubox
4 74 0.018544588 ubox
4 76 0.111458305 ubox
4 77 0.016421944 ubox
5 16 0.006121125 ubox
5 72 0.113050658 ubox
5 74 0.065035035 ubox
5 76 0.020716872 ubox
5 77 0.004525568 ubox
6 15 0.006806050 ubox
6 57 0.004193853 ubox
6 68 0.996034179 ubox
6 71 0.053971297 ubox
6 72 0.003717034 ubox
6 74 0.008678630 ubox
6 75 0.011955737 ubox
7 14 0.006770231 ubox
7 56 0.004237673 ubox
7 64 0.004467879 ubox
7 67 0.998679481 ubox
7 73 0.008140064 ubox
8 62 0.024654349 ubox
8 64 0.003593753 ubox
8 66 0.998686166 ubox
9 61 0.025118918 ubox
9 63 0.004136865 ubox
9 65 0.998337019 ubox
10 54 0.005785691 ubox
10 60 0.025268451 ubox
10 62 0.004024127 ubox
10 64 0.996793793 ubox
10 73 0.004448955 ubox
10 79 0.015067015 ubox
11 18 0.005137292 ubox
11 22 0.004399714 ubox
11 23 0.055206689 ubox
11 51 0.003485366 ubox
11 53 0.005835147 ubox
11 59 0.025176919 ubox
11 71 0.007273333 ubox
11 72 0.004550028 ubox
11 78 0.016432870 ubox
12 17 0.004060897 ubox
12 18 0.004632024 ubox
12 21 0.004933219 ubox
12 22 0.024079503 ubox
12 23 0.996663667 ubox
12 71 0.004531454 ubox
12 77 0.004205397 ubox
13 17 0.004041792 ubox
13 22 0.999187974 ubox
13 76 0.004169048 ubox
14 21 0.999765488 ubox
14 68 0.009037250 ubox
14 75 0.004081941 ubox
15 20 0.996493899 ubox
15 67 0.009050666 ubox
16 20 0.007671927 ubox
16 66 0.009039129 ubox
17 65 0.009035986 ubox
18 56 0.004591890 ubox
18 64 0.009022806 ubox
19 55 0.004531081 ubox
21 66 0.003326858 ubox
22 65 0.003606480 ubox
23 64 0.003667115 ubox
25 49 0.998927674 ubox
26 48 0.999973744 ubox
27 47 0.999788560 ubox
28 46 0.999977261 ubox
29 45 0.999791958 ubox
30 44 0.999988288 ubox
31 43 0.999992579 ubox
32 42 0.999829158 ubox
33 41 0.999606860 ubox
34 41 0.007116069 ubox
35 41 0.005382916 ubox
36 41 0.007150130 ubox
50 57 0.031206660 ubox
51 56 0.032755648 ubox
51 60 0.004993308 ubox
51 62 0.990431877 ubox
51 64 0.023926225 ubox
52 61 0.996482025 ubox
52 63 0.051433899 ubox
53 60 0.997192614 ubox
53 62 0.053454853 ubox
54 59 0.971400941 ubox
55 60 0.011173600 ubox
55 61 0.006303217 ubox
59 79 0.015281805 ubox
60 77 0.010857476 ubox
60 78 0.015939781 ubox
61 76 0.016351137 ubox
61 77 0.011365111 ubox
62 75 0.020352015 ubox
62 78 0.003997717 ubox
63 74 0.020575126 ubox
63 76 0.004396132 ubox
63 77 0.003860499 ubox
64 75 0.004843161 ubox
64 77 0.037094645 ubox
64 78 0.017830121 ubox
65 72 0.020998175 ubox
65 74 0.004771787 ubox
65 76 0.041570050 ubox
65 77 0.014845554 ubox
66 71 0.021094608 ubox
66 75 0.043415592 ubox
66 76 0.011048590 ubox
67 74 0.043429446 ubox
67 75 0.010969930 ubox
68 73 0.044688224 ubox
69 74 0.014133547 ubox
69 76 0.017617196 ubox
69 77 0.024414766 ubox
70 74 0.009393958 ubox
70 76 0.024926008 ubox
70 77 0.014659946 ubox
71 79 0.034428018 ubox
72 79 0.075503575 ubox
73 77 0.008365295 ubox
73 78 0.138589532 ubox
74 79 0.007945152 ubox
75 79 0.011933609 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
showpage
end
%%EOF
