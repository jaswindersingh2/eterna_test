%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (667)
} def

/sequence { (\
GGAAAGCACAAGUUGGAAAAAAAAAACAACAAGAACGAAAAAAAAAAGUUCAAGUGCAAAAAAAAAAAGUGGUACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.094003855 ubox
1 9 0.099295083 ubox
1 27 0.004121951 ubox
1 30 0.004162157 ubox
1 51 0.005166462 ubox
1 57 0.003981520 ubox
1 75 0.015726596 ubox
1 76 0.019903586 ubox
1 77 0.005757234 ubox
1 78 0.149699947 ubox
2 7 0.051555569 ubox
2 9 0.039795102 ubox
2 50 0.004892815 ubox
2 51 0.005260417 ubox
2 57 0.003241258 ubox
2 75 0.022894441 ubox
2 76 0.007144502 ubox
2 77 0.134497597 ubox
2 78 0.183772051 ubox
3 49 0.004707936 ubox
3 50 0.005112970 ubox
3 70 0.003195636 ubox
3 73 0.005638836 ubox
3 76 0.123244974 ubox
3 77 0.173399821 ubox
4 14 0.004162001 ubox
4 49 0.004602293 ubox
4 73 0.008784498 ubox
4 76 0.137732873 ubox
4 77 0.028368897 ubox
5 13 0.003982293 ubox
5 14 0.037942644 ubox
5 70 0.004571534 ubox
5 73 0.143908221 ubox
5 76 0.035533517 ubox
5 77 0.004766412 ubox
6 13 0.042181128 ubox
6 36 0.009333137 ubox
6 55 0.004059244 ubox
6 57 0.869879796 ubox
6 70 0.007273483 ubox
6 73 0.056222267 ubox
6 75 0.039692880 ubox
6 78 0.018509086 ubox
7 12 0.042622914 ubox
7 15 0.011000114 ubox
7 16 0.007655709 ubox
7 33 0.003886838 ubox
7 37 0.003337180 ubox
7 54 0.004285958 ubox
7 56 0.870812717 ubox
7 69 0.007367097 ubox
7 71 0.183095449 ubox
7 72 0.048365081 ubox
7 79 0.015569452 ubox
8 14 0.010209795 ubox
8 55 0.870237982 ubox
8 70 0.185451604 ubox
8 73 0.026778496 ubox
8 77 0.003429816 ubox
9 15 0.012436465 ubox
9 16 0.005081072 ubox
9 33 0.017782194 ubox
9 54 0.869153963 ubox
9 69 0.185397469 ubox
9 71 0.034437162 ubox
9 72 0.027130379 ubox
9 79 0.020555801 ubox
10 14 0.010180507 ubox
10 70 0.030866569 ubox
10 77 0.004837340 ubox
11 70 0.007090966 ubox
11 76 0.003726825 ubox
11 77 0.003967647 ubox
12 27 0.090263707 ubox
12 30 0.988674432 ubox
12 36 0.003794634 ubox
13 19 0.003345569 ubox
13 20 0.012223638 ubox
13 21 0.011106376 ubox
13 22 0.014219548 ubox
13 23 0.008796971 ubox
13 24 0.013154005 ubox
13 25 0.007739983 ubox
13 26 0.090085596 ubox
13 29 0.989647114 ubox
13 32 0.049282449 ubox
13 35 0.003752243 ubox
13 38 0.003544937 ubox
13 53 0.013666419 ubox
13 65 0.004809046 ubox
13 67 0.005239766 ubox
13 68 0.007911284 ubox
14 18 0.003215456 ubox
14 19 0.013865259 ubox
14 20 0.012772099 ubox
14 21 0.016400075 ubox
14 22 0.010260843 ubox
14 23 0.015831601 ubox
14 24 0.009580305 ubox
14 25 0.089002135 ubox
14 26 0.003517069 ubox
14 28 0.990170449 ubox
14 31 0.056769853 ubox
14 34 0.003572581 ubox
14 37 0.003656683 ubox
14 52 0.014072691 ubox
14 64 0.004699226 ubox
14 66 0.005224859 ubox
14 67 0.007834108 ubox
15 27 0.990394805 ubox
15 30 0.058096763 ubox
15 36 0.003758220 ubox
15 51 0.013988259 ubox
15 78 0.005749526 ubox
16 27 0.018097446 ubox
16 30 0.004173114 ubox
16 50 0.013587218 ubox
16 77 0.004084408 ubox
16 78 0.008044796 ubox
17 49 0.012817184 ubox
17 77 0.007080806 ubox
18 76 0.004066327 ubox
26 55 0.004990703 ubox
27 54 0.005011753 ubox
27 56 0.008812651 ubox
28 55 0.007459407 ubox
29 55 0.024275559 ubox
30 37 0.008121473 ubox
30 54 0.025641086 ubox
30 56 0.007985100 ubox
31 55 0.010096520 ubox
32 55 0.004597169 ubox
33 50 0.004862630 ubox
33 51 0.995514526 ubox
33 57 0.004746232 ubox
33 78 0.003584125 ubox
34 49 0.004014859 ubox
34 50 0.996417483 ubox
35 49 0.996482384 ubox
35 55 0.006750967 ubox
36 48 0.996721137 ubox
36 54 0.007168968 ubox
36 79 0.011076063 ubox
37 51 0.044390180 ubox
37 78 0.011634027 ubox
38 50 0.043938744 ubox
38 77 0.010809617 ubox
39 49 0.039420309 ubox
39 50 0.005938199 ubox
39 76 0.005488228 ubox
40 49 0.007225680 ubox
40 50 0.003420319 ubox
41 49 0.003705721 ubox
41 50 0.005341479 ubox
42 49 0.005447763 ubox
42 50 0.003942561 ubox
43 49 0.004090271 ubox
43 50 0.004626787 ubox
44 49 0.004337214 ubox
46 77 0.005427624 ubox
47 76 0.006259825 ubox
48 57 0.014311147 ubox
48 75 0.006421068 ubox
48 78 0.006512223 ubox
49 56 0.014176055 ubox
49 74 0.006277179 ubox
50 72 0.004888284 ubox
50 79 0.007376953 ubox
51 71 0.005270526 ubox
51 79 0.012566319 ubox
52 70 0.004983239 ubox
52 76 0.009113880 ubox
52 77 0.383189191 ubox
53 70 0.004157277 ubox
53 73 0.010303369 ubox
53 76 0.439309822 ubox
53 77 0.009297316 ubox
54 75 0.450383228 ubox
55 59 0.004113578 ubox
55 60 0.017726646 ubox
55 61 0.016340477 ubox
55 62 0.020841805 ubox
55 63 0.012812711 ubox
55 64 0.019258934 ubox
55 65 0.009336752 ubox
55 66 0.008555876 ubox
55 67 0.008447683 ubox
55 68 0.008416260 ubox
55 71 0.013260735 ubox
55 74 0.450277226 ubox
56 70 0.020276696 ubox
56 73 0.449890066 ubox
57 69 0.021102400 ubox
57 71 0.063541401 ubox
57 72 0.445441779 ubox
58 70 0.081373701 ubox
58 73 0.006986689 ubox
58 76 0.003689211 ubox
58 77 0.008937298 ubox
59 70 0.091795054 ubox
59 73 0.007415876 ubox
59 76 0.009067661 ubox
59 77 0.010141966 ubox
60 70 0.056812216 ubox
60 73 0.009149619 ubox
60 76 0.010215280 ubox
60 77 0.010415731 ubox
61 70 0.051363101 ubox
61 73 0.008700273 ubox
61 76 0.010379477 ubox
61 77 0.011090098 ubox
62 70 0.015878357 ubox
62 73 0.009318281 ubox
62 76 0.010956304 ubox
62 77 0.012387223 ubox
63 70 0.022838892 ubox
63 73 0.008738024 ubox
63 76 0.012175610 ubox
63 77 0.013823279 ubox
64 70 0.016926482 ubox
64 73 0.016235710 ubox
64 76 0.013166662 ubox
64 77 0.016391986 ubox
65 70 0.018360844 ubox
65 73 0.010798059 ubox
65 76 0.015175401 ubox
65 77 0.018986770 ubox
66 70 0.011288719 ubox
66 73 0.017556648 ubox
66 76 0.016142696 ubox
66 77 0.041029735 ubox
67 73 0.013764099 ubox
67 76 0.038277602 ubox
67 77 0.468063249 ubox
68 73 0.028565720 ubox
68 76 0.521967917 ubox
68 77 0.025766715 ubox
69 73 0.009277654 ubox
69 75 0.529951894 ubox
69 76 0.023317222 ubox
69 77 0.013446352 ubox
69 78 0.085309598 ubox
70 74 0.477479521 ubox
70 79 0.140427776 ubox
71 75 0.025524129 ubox
71 76 0.020546256 ubox
71 77 0.013560516 ubox
71 78 0.239541940 ubox
72 76 0.011693375 ubox
72 77 0.213070478 ubox
72 78 0.083133062 ubox
73 79 0.006196189 ubox
75 79 0.011934945 ubox
6 57 0.9500000 lbox
7 56 0.9500000 lbox
8 55 0.9500000 lbox
9 54 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
showpage
end
%%EOF
