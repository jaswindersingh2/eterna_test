%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (740)
} def

/sequence { (\
GGAAACUGAGCGCAAAGGGCACAGAACUGAGCACAAAAAGAGCACAGACGGCGCGCGAAAGGGCACUGGUAUAUGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.080775559 ubox
1 7 0.027339991 ubox
1 11 0.023171206 ubox
1 13 0.008204705 ubox
1 20 0.005733792 ubox
1 22 0.011488826 ubox
1 27 0.149151665 ubox
1 28 0.257585035 ubox
1 32 0.096695162 ubox
1 34 0.048560441 ubox
1 76 0.003377947 ubox
1 77 0.003186255 ubox
1 78 0.097632949 ubox
2 6 0.028780193 ubox
2 7 0.006766326 ubox
2 11 0.021995334 ubox
2 20 0.004795503 ubox
2 22 0.003374111 ubox
2 27 0.272526449 ubox
2 28 0.047302669 ubox
2 32 0.050777901 ubox
2 34 0.013753434 ubox
2 70 0.003531535 ubox
2 76 0.003963205 ubox
2 77 0.094600973 ubox
2 78 0.140229968 ubox
3 7 0.004915319 ubox
3 28 0.040771372 ubox
3 70 0.003649376 ubox
3 72 0.005217226 ubox
3 74 0.005320508 ubox
3 76 0.087467846 ubox
3 77 0.138079196 ubox
4 28 0.059780662 ubox
4 70 0.003929891 ubox
4 72 0.005094555 ubox
4 74 0.010219704 ubox
4 76 0.119574429 ubox
4 77 0.019177880 ubox
5 28 0.047475907 ubox
5 70 0.018520026 ubox
5 72 0.005887793 ubox
5 74 0.020125344 ubox
5 76 0.023966636 ubox
6 10 0.005513648 ubox
6 12 0.004404870 ubox
6 17 0.039437296 ubox
6 18 0.010177194 ubox
6 19 0.003191984 ubox
6 24 0.916255928 ubox
6 29 0.005659552 ubox
6 31 0.056178218 ubox
6 40 0.007333617 ubox
6 47 0.034477686 ubox
6 61 0.004592896 ubox
6 62 0.003549502 ubox
6 68 0.003593290 ubox
6 69 0.018743640 ubox
6 75 0.025825798 ubox
6 79 0.012235153 ubox
7 14 0.015351246 ubox
7 16 0.039475225 ubox
7 17 0.009864205 ubox
7 18 0.003237971 ubox
7 21 0.010594778 ubox
7 23 0.921888287 ubox
7 24 0.008101175 ubox
7 25 0.013533376 ubox
7 26 0.003845049 ubox
7 30 0.056304870 ubox
7 33 0.011112053 ubox
7 35 0.137186219 ubox
7 36 0.026452696 ubox
7 37 0.052037563 ubox
7 38 0.019493246 ubox
7 39 0.013215033 ubox
7 46 0.034723456 ubox
7 57 0.003941959 ubox
7 59 0.003346509 ubox
7 60 0.004746587 ubox
7 61 0.003534774 ubox
7 68 0.016603309 ubox
7 69 0.004472068 ubox
7 73 0.009577247 ubox
7 79 0.042269125 ubox
8 13 0.016711069 ubox
8 20 0.011588489 ubox
8 22 0.920465264 ubox
8 27 0.003798483 ubox
8 32 0.011968354 ubox
8 34 0.147919850 ubox
8 45 0.034678607 ubox
8 56 0.004892398 ubox
8 66 0.009252932 ubox
8 67 0.008546777 ubox
8 72 0.009464978 ubox
8 78 0.076857534 ubox
9 28 0.056079564 ubox
9 67 0.010743547 ubox
9 72 0.007566776 ubox
9 77 0.076815260 ubox
10 20 0.920825167 ubox
10 22 0.043071126 ubox
10 27 0.055047792 ubox
10 32 0.167088470 ubox
10 34 0.240073235 ubox
10 43 0.035011854 ubox
10 54 0.005889954 ubox
10 56 0.009186454 ubox
10 64 0.016636026 ubox
10 66 0.011196920 ubox
10 70 0.013157176 ubox
10 76 0.076278419 ubox
11 17 0.020198451 ubox
11 18 0.047956728 ubox
11 19 0.920984193 ubox
11 24 0.010675116 ubox
11 29 0.011007442 ubox
11 31 0.167149548 ubox
11 40 0.003451883 ubox
11 42 0.035024188 ubox
11 53 0.005900368 ubox
11 55 0.009194568 ubox
11 57 0.005612084 ubox
11 63 0.016662607 ubox
11 69 0.013356925 ubox
11 75 0.076247044 ubox
11 79 0.003488876 ubox
12 20 0.128286962 ubox
12 28 0.007244894 ubox
12 32 0.303972763 ubox
12 34 0.003685113 ubox
12 43 0.003662701 ubox
12 52 0.005907539 ubox
12 54 0.009182606 ubox
12 56 0.005686879 ubox
12 64 0.011312551 ubox
12 70 0.006115046 ubox
12 74 0.027852914 ubox
12 76 0.004300478 ubox
13 17 0.725898480 ubox
13 18 0.215595940 ubox
13 19 0.128164549 ubox
13 24 0.047836603 ubox
13 29 0.092533871 ubox
13 31 0.303924510 ubox
13 40 0.018296379 ubox
13 42 0.003662206 ubox
13 51 0.005898078 ubox
13 53 0.009177720 ubox
13 55 0.005683013 ubox
13 61 0.016063432 ubox
13 63 0.011274322 ubox
13 69 0.006579920 ubox
13 75 0.004513943 ubox
14 28 0.072314252 ubox
14 72 0.006410714 ubox
14 74 0.004424100 ubox
15 28 0.014565795 ubox
16 28 0.302358690 ubox
16 72 0.004115058 ubox
17 22 0.038024406 ubox
17 27 0.305983294 ubox
17 28 0.145030635 ubox
17 32 0.006077948 ubox
17 34 0.031145890 ubox
17 54 0.006138426 ubox
17 56 0.019823874 ubox
17 78 0.014518276 ubox
18 22 0.008396820 ubox
18 27 0.151105624 ubox
18 28 0.017831201 ubox
18 32 0.004606804 ubox
18 34 0.042112030 ubox
18 56 0.003166688 ubox
18 77 0.014616918 ubox
19 27 0.018780529 ubox
19 32 0.076024506 ubox
19 43 0.003197670 ubox
19 52 0.010876460 ubox
19 54 0.020432788 ubox
19 70 0.013850303 ubox
19 76 0.014724700 ubox
20 24 0.248275861 ubox
20 29 0.009351424 ubox
20 31 0.076247758 ubox
20 42 0.003204238 ubox
20 51 0.010884499 ubox
20 53 0.020430286 ubox
20 69 0.013983179 ubox
20 75 0.014750914 ubox
21 28 0.008760027 ubox
21 70 0.004664889 ubox
21 74 0.012945884 ubox
21 76 0.005246872 ubox
22 29 0.074902326 ubox
22 31 0.008467233 ubox
22 50 0.007586809 ubox
22 51 0.019437767 ubox
22 68 0.010161519 ubox
22 69 0.005015065 ubox
22 75 0.005603451 ubox
23 28 0.067681676 ubox
23 67 0.010124001 ubox
23 72 0.003284132 ubox
23 74 0.005099786 ubox
24 32 0.010056132 ubox
24 34 0.006505277 ubox
24 49 0.011014342 ubox
24 66 0.010016629 ubox
24 78 0.019900054 ubox
25 77 0.020841490 ubox
26 70 0.004122863 ubox
26 76 0.020492123 ubox
27 31 0.024686688 ubox
27 40 0.014924533 ubox
27 42 0.005769096 ubox
27 47 0.254939822 ubox
27 69 0.003919986 ubox
27 75 0.019199730 ubox
27 79 0.011806693 ubox
28 33 0.013095756 ubox
28 35 0.176110124 ubox
28 36 0.032850105 ubox
28 37 0.047842146 ubox
28 38 0.023093232 ubox
28 39 0.025906517 ubox
28 41 0.005824761 ubox
28 44 0.011183344 ubox
28 46 0.256801951 ubox
28 73 0.003884941 ubox
28 79 0.043239643 ubox
29 34 0.190787952 ubox
29 43 0.013517981 ubox
29 45 0.256510902 ubox
29 72 0.003630069 ubox
29 78 0.081216547 ubox
30 72 0.005542251 ubox
30 77 0.081192442 ubox
31 43 0.259520121 ubox
31 70 0.004041701 ubox
31 76 0.080717402 ubox
31 78 0.003489332 ubox
32 40 0.015272033 ubox
32 42 0.259578982 ubox
32 69 0.004103941 ubox
32 75 0.080706241 ubox
32 79 0.007798497 ubox
33 70 0.004781620 ubox
33 74 0.076444675 ubox
33 76 0.005284529 ubox
34 40 0.169271529 ubox
34 42 0.011280894 ubox
34 47 0.005638083 ubox
34 68 0.003296362 ubox
34 69 0.006210438 ubox
34 75 0.005691297 ubox
34 79 0.016755818 ubox
35 72 0.019682068 ubox
35 74 0.005748321 ubox
36 70 0.005213347 ubox
36 72 0.005849107 ubox
37 70 0.005224599 ubox
37 72 0.007949620 ubox
38 72 0.006826966 ubox
38 74 0.003556276 ubox
39 67 0.016794130 ubox
39 72 0.010618110 ubox
39 74 0.004235759 ubox
40 45 0.014743061 ubox
40 66 0.016852898 ubox
40 72 0.010237639 ubox
40 77 0.005602411 ubox
40 78 0.958229996 ubox
41 70 0.005663938 ubox
41 72 0.006704680 ubox
41 74 0.004288016 ubox
41 76 0.005620034 ubox
41 77 0.959165692 ubox
42 52 0.013999838 ubox
42 54 0.004471184 ubox
42 64 0.015601374 ubox
42 70 0.038509638 ubox
42 72 0.003711602 ubox
42 76 0.959668353 ubox
42 77 0.003275691 ubox
42 78 0.020242963 ubox
43 47 0.006065970 ubox
43 51 0.013987931 ubox
43 53 0.004476311 ubox
43 63 0.015563311 ubox
43 68 0.004060283 ubox
43 69 0.039550550 ubox
43 75 0.960067262 ubox
44 67 0.003396370 ubox
44 70 0.022201986 ubox
44 72 0.012187728 ubox
44 74 0.936442255 ubox
44 76 0.040530203 ubox
45 50 0.010268963 ubox
45 51 0.003983796 ubox
45 61 0.006567405 ubox
45 62 0.007075523 ubox
45 68 0.056633784 ubox
45 69 0.027823468 ubox
45 75 0.043979838 ubox
46 67 0.056736532 ubox
46 70 0.064323280 ubox
46 72 0.580247694 ubox
46 74 0.044632996 ubox
47 66 0.056398255 ubox
47 70 0.098656651 ubox
47 72 0.031878652 ubox
48 67 0.004036853 ubox
48 70 0.340171941 ubox
48 72 0.016897063 ubox
48 74 0.003334233 ubox
48 76 0.003267399 ubox
49 57 0.015549459 ubox
49 68 0.958554857 ubox
49 69 0.266793598 ubox
49 75 0.003310671 ubox
50 56 0.015629689 ubox
50 64 0.004355442 ubox
50 66 0.024709346 ubox
50 67 0.985273799 ubox
50 70 0.003351804 ubox
51 64 0.064860491 ubox
51 66 0.992776861 ubox
51 67 0.073214332 ubox
51 70 0.004506669 ubox
52 62 0.003540601 ubox
52 63 0.065229576 ubox
52 68 0.005162730 ubox
52 69 0.004541709 ubox
53 64 0.995648962 ubox
53 66 0.048565614 ubox
54 61 0.064826940 ubox
54 62 0.010148016 ubox
54 63 0.995718463 ubox
55 64 0.055841608 ubox
56 61 0.971169956 ubox
56 62 0.108766211 ubox
56 63 0.055829234 ubox
61 78 0.011251092 ubox
62 77 0.011475498 ubox
63 76 0.011723013 ubox
64 75 0.011776732 ubox
65 74 0.011437191 ubox
65 76 0.007051424 ubox
66 75 0.007973797 ubox
68 78 0.005687804 ubox
69 74 0.006259150 ubox
69 76 0.004147322 ubox
69 77 0.006620300 ubox
69 78 0.027814114 ubox
70 75 0.005833992 ubox
71 76 0.004048893 ubox
71 77 0.007319104 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
40 78 0.9500000 lbox
41 77 0.9500000 lbox
42 76 0.9500000 lbox
43 75 0.9500000 lbox
44 74 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
showpage
end
%%EOF
