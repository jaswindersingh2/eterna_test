%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1083)
} def

/sequence { (\
GGAAAAAAGAUGCCAUCAGUAGACGAAACGUACUACACAAGUACAUGCAAAGCAGUACAGAUGACAUCCUGCUUGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.010894493 ubox
1 69 0.039209655 ubox
1 70 0.034758431 ubox
1 72 0.033529233 ubox
1 73 0.051871061 ubox
1 74 0.016455062 ubox
1 76 0.077871032 ubox
1 77 0.029319160 ubox
1 78 0.631528281 ubox
2 13 0.010886909 ubox
2 68 0.037360132 ubox
2 69 0.036797115 ubox
2 72 0.059669738 ubox
2 73 0.016720517 ubox
2 74 0.051189924 ubox
2 76 0.042516515 ubox
2 77 0.629494268 ubox
2 78 0.581065125 ubox
3 67 0.033073794 ubox
3 70 0.026091752 ubox
3 73 0.051899924 ubox
3 74 0.134855006 ubox
3 76 0.613273766 ubox
3 77 0.580304163 ubox
4 11 0.004089010 ubox
4 70 0.012818066 ubox
4 73 0.143171344 ubox
4 74 0.236835967 ubox
4 76 0.550182477 ubox
4 77 0.027820125 ubox
5 70 0.038377091 ubox
5 73 0.242272777 ubox
5 74 0.287341990 ubox
5 76 0.033085492 ubox
5 77 0.010072897 ubox
6 70 0.054458101 ubox
6 73 0.291057328 ubox
6 74 0.198199347 ubox
6 76 0.011278837 ubox
6 77 0.005657552 ubox
7 70 0.386488624 ubox
7 73 0.192029726 ubox
7 74 0.140285718 ubox
7 76 0.005945069 ubox
7 77 0.008411194 ubox
8 70 0.551852112 ubox
8 73 0.140991687 ubox
8 74 0.018213382 ubox
8 76 0.009312076 ubox
8 77 0.003404175 ubox
9 17 0.008619865 ubox
9 68 0.910736030 ubox
9 69 0.395368066 ubox
9 70 0.018776671 ubox
9 72 0.089476259 ubox
9 73 0.003226795 ubox
9 78 0.003589065 ubox
10 16 0.008522317 ubox
10 46 0.003511296 ubox
10 67 0.997247574 ubox
10 70 0.012793956 ubox
10 74 0.003520517 ubox
10 77 0.003252360 ubox
11 15 0.007557011 ubox
11 43 0.004674474 ubox
11 45 0.003606199 ubox
11 66 0.998893394 ubox
12 42 0.005023375 ubox
12 44 0.003613878 ubox
12 65 0.997431078 ubox
12 72 0.006369223 ubox
13 41 0.005036736 ubox
13 63 0.050389953 ubox
13 71 0.006378050 ubox
14 63 0.996554070 ubox
15 62 0.999021677 ubox
16 61 0.999092614 ubox
16 64 0.013439451 ubox
17 60 0.998093994 ubox
17 63 0.013580649 ubox
18 34 0.041289695 ubox
18 62 0.012233033 ubox
19 29 0.006526864 ubox
19 33 0.043371536 ubox
19 36 0.996010721 ubox
19 38 0.021847612 ubox
19 58 0.040417161 ubox
20 28 0.006397080 ubox
20 32 0.042879848 ubox
20 35 0.997261769 ubox
20 37 0.017828188 ubox
20 57 0.040328086 ubox
21 31 0.036969069 ubox
21 34 0.997533140 ubox
21 56 0.038180651 ubox
22 29 0.018682594 ubox
22 31 0.003479968 ubox
22 33 0.995502012 ubox
22 53 0.009849158 ubox
23 31 0.992566014 ubox
23 56 0.007372339 ubox
24 30 0.995798733 ubox
24 52 0.013283046 ubox
24 55 0.008946738 ubox
24 79 0.004556646 ubox
25 29 0.931633651 ubox
25 31 0.006089578 ubox
25 48 0.005348721 ubox
25 53 0.004648890 ubox
25 78 0.004793056 ubox
26 31 0.006641774 ubox
26 77 0.004429009 ubox
28 46 0.014122325 ubox
29 47 0.008481165 ubox
30 36 0.003698829 ubox
30 38 0.005132460 ubox
30 44 0.042104214 ubox
30 46 0.003915685 ubox
30 48 0.005042008 ubox
31 35 0.003338168 ubox
31 37 0.004985554 ubox
31 43 0.042248666 ubox
31 45 0.003373017 ubox
31 47 0.005019792 ubox
32 42 0.042345140 ubox
32 46 0.004679762 ubox
33 41 0.042364290 ubox
34 40 0.041406149 ubox
34 43 0.006334203 ubox
35 42 0.006697809 ubox
36 41 0.006767833 ubox
37 76 0.006949632 ubox
38 60 0.006540028 ubox
38 63 0.004976003 ubox
38 75 0.007510255 ubox
39 62 0.004963960 ubox
39 74 0.007503405 ubox
40 73 0.007476993 ubox
41 48 0.004511108 ubox
41 58 0.997059672 ubox
41 72 0.007379729 ubox
42 47 0.004329945 ubox
42 57 0.998244175 ubox
42 71 0.006712305 ubox
43 56 0.998246503 ubox
43 70 0.006186015 ubox
44 55 0.995289437 ubox
45 56 0.003383067 ubox
45 67 0.005503817 ubox
46 51 0.011436373 ubox
46 52 0.006447618 ubox
46 54 0.991050279 ubox
46 57 0.009613298 ubox
46 66 0.005787627 ubox
47 53 0.997287110 ubox
47 56 0.011240810 ubox
47 65 0.005806324 ubox
47 76 0.011310774 ubox
48 52 0.990052065 ubox
48 55 0.011514952 ubox
48 63 0.005378846 ubox
48 75 0.012087156 ubox
49 62 0.005028222 ubox
49 74 0.009848361 ubox
50 73 0.006921226 ubox
50 74 0.010547836 ubox
51 73 0.013009005 ubox
52 72 0.014828783 ubox
53 60 0.003346534 ubox
53 71 0.014829921 ubox
54 70 0.014818342 ubox
55 69 0.014720858 ubox
58 71 0.003442216 ubox
59 70 0.004210306 ubox
60 65 0.003642654 ubox
60 68 0.010321633 ubox
60 69 0.004222778 ubox
61 67 0.010230150 ubox
62 66 0.009071687 ubox
63 77 0.006550344 ubox
63 78 0.004256280 ubox
64 76 0.011693535 ubox
65 75 0.012570145 ubox
66 74 0.012395323 ubox
69 75 0.057263452 ubox
69 79 0.010371718 ubox
70 75 0.008218792 ubox
70 79 0.018799168 ubox
71 76 0.005583182 ubox
71 77 0.005874807 ubox
71 78 0.034732037 ubox
72 79 0.021237721 ubox
73 79 0.003580966 ubox
74 79 0.005012178 ubox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
showpage
end
%%EOF
