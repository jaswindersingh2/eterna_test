%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (682)
} def

/sequence { (\
GGAAAGCUCAACGAGGAAAAAAAAAACUCGAAGCUCGAAAAAAAAAAGAGCAAGAGCAAAAAAAAAAAAGAUACUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.005828605 ubox
1 8 0.004489582 ubox
1 9 0.008716545 ubox
1 36 0.004056817 ubox
1 57 0.003630088 ubox
1 74 0.008430408 ubox
1 75 0.006612976 ubox
1 77 0.003283131 ubox
1 78 0.096926552 ubox
2 7 0.005970605 ubox
2 8 0.007263598 ubox
2 9 0.013914129 ubox
2 36 0.007359796 ubox
2 57 0.003309285 ubox
2 74 0.007588052 ubox
2 76 0.004883025 ubox
2 77 0.092617737 ubox
2 78 0.348441106 ubox
3 8 0.013054811 ubox
3 35 0.005591432 ubox
3 75 0.004989330 ubox
3 76 0.089907582 ubox
3 77 0.348373701 ubox
4 75 0.080404318 ubox
4 76 0.346275890 ubox
4 77 0.006953511 ubox
5 35 0.024920553 ubox
5 72 0.009804486 ubox
5 75 0.342301329 ubox
5 76 0.008333591 ubox
6 34 0.027787972 ubox
6 51 0.003685174 ubox
6 57 0.955926686 ubox
6 72 0.004217106 ubox
6 74 0.282990251 ubox
7 13 0.005095065 ubox
7 15 0.030295954 ubox
7 16 0.014609333 ubox
7 33 0.028316750 ubox
7 50 0.003700643 ubox
7 54 0.005687789 ubox
7 56 0.962088105 ubox
7 70 0.041242043 ubox
8 14 0.030269915 ubox
8 15 0.013473124 ubox
8 16 0.009746055 ubox
8 17 0.023759469 ubox
8 31 0.010987011 ubox
8 32 0.029912798 ubox
8 49 0.003702766 ubox
8 53 0.005411893 ubox
8 55 0.961837812 ubox
8 69 0.038930150 ubox
8 70 0.008174279 ubox
8 71 0.165505309 ubox
8 73 0.022954957 ubox
9 13 0.028032415 ubox
9 15 0.012375268 ubox
9 16 0.024994840 ubox
9 30 0.009726137 ubox
9 48 0.003688896 ubox
9 54 0.960797835 ubox
9 70 0.168575151 ubox
10 72 0.011028240 ubox
11 72 0.003197455 ubox
12 30 0.979777514 ubox
12 37 0.004482593 ubox
12 70 0.011022201 ubox
13 29 0.998700102 ubox
13 36 0.004553131 ubox
14 28 0.998554078 ubox
14 35 0.004552112 ubox
15 27 0.998117672 ubox
15 28 0.008440050 ubox
15 29 0.003741393 ubox
15 34 0.004547236 ubox
16 27 0.018141487 ubox
16 29 0.008739134 ubox
17 28 0.008437208 ubox
27 56 0.046971599 ubox
28 55 0.047249576 ubox
29 54 0.047269088 ubox
30 57 0.003509575 ubox
33 51 0.987512674 ubox
33 57 0.147523261 ubox
34 50 0.988551438 ubox
34 56 0.147701150 ubox
35 49 0.988421796 ubox
35 55 0.147678884 ubox
36 48 0.988338152 ubox
36 54 0.147653252 ubox
36 79 0.006767286 ubox
37 51 0.008723296 ubox
37 78 0.007493607 ubox
38 77 0.007406050 ubox
39 76 0.007094237 ubox
40 75 0.006334551 ubox
50 57 0.026495508 ubox
51 56 0.026559990 ubox
52 76 0.003258919 ubox
53 72 0.004318144 ubox
53 75 0.003911317 ubox
53 77 0.006732538 ubox
54 74 0.004060350 ubox
54 76 0.008054224 ubox
54 78 0.004398355 ubox
55 72 0.006130526 ubox
55 75 0.008304532 ubox
55 77 0.004315137 ubox
56 72 0.003459292 ubox
56 74 0.008351215 ubox
56 76 0.003465312 ubox
57 70 0.018947212 ubox
58 72 0.008188825 ubox
58 75 0.004809181 ubox
58 76 0.010585249 ubox
58 77 0.022904421 ubox
59 72 0.010135754 ubox
59 75 0.011285397 ubox
59 76 0.025455151 ubox
59 77 0.026362371 ubox
60 72 0.011018943 ubox
60 75 0.024059444 ubox
60 76 0.028874816 ubox
60 77 0.028744745 ubox
61 72 0.012031155 ubox
61 75 0.027130054 ubox
61 76 0.031496739 ubox
61 77 0.030653002 ubox
62 72 0.013221868 ubox
62 75 0.029999015 ubox
62 76 0.033561536 ubox
62 77 0.033184930 ubox
63 72 0.028269016 ubox
63 75 0.031901665 ubox
63 76 0.036357811 ubox
63 77 0.035684558 ubox
64 72 0.018996610 ubox
64 75 0.034523224 ubox
64 76 0.038951228 ubox
64 77 0.067867529 ubox
65 72 0.030963738 ubox
65 75 0.036803007 ubox
65 76 0.075129127 ubox
65 77 0.048060833 ubox
66 72 0.024289450 ubox
66 75 0.075420967 ubox
66 76 0.052388101 ubox
66 77 0.081045469 ubox
67 72 0.026346986 ubox
67 75 0.050361022 ubox
67 76 0.088891985 ubox
67 77 0.267609727 ubox
68 72 0.016194293 ubox
68 75 0.082811505 ubox
68 76 0.298109399 ubox
68 77 0.061097611 ubox
69 75 0.305859086 ubox
69 76 0.065564824 ubox
69 77 0.041572615 ubox
70 74 0.301332019 ubox
70 75 0.055363551 ubox
70 76 0.047522667 ubox
70 77 0.072968621 ubox
70 78 0.426678561 ubox
71 75 0.041430438 ubox
71 76 0.078347676 ubox
71 77 0.422502316 ubox
72 79 0.010118720 ubox
73 77 0.006405054 ubox
74 79 0.037050579 ubox
75 79 0.004497250 ubox
6 57 0.9500000 lbox
7 56 0.9500000 lbox
8 55 0.9500000 lbox
9 54 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
showpage
end
%%EOF
