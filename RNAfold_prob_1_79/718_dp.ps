%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (718)
} def

/sequence { (\
GGAAAGCGGUGGCAAAGGCAGCGCAAGACGUCGGGAAAACGGAGGUCAGUCGUAGGGAAACAUAGGACGUUCAUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.004497739 ubox
1 29 0.062403703 ubox
1 32 0.022234501 ubox
1 51 0.004350512 ubox
1 68 0.005300037 ubox
1 70 0.004927760 ubox
1 71 0.009429291 ubox
1 72 0.293581132 ubox
1 74 0.021709096 ubox
1 75 0.072095345 ubox
1 76 0.205629643 ubox
1 77 0.014799968 ubox
1 78 0.353647155 ubox
2 29 0.018617234 ubox
2 31 0.021601451 ubox
2 32 0.027743730 ubox
2 50 0.003451892 ubox
2 51 0.007011985 ubox
2 68 0.003272813 ubox
2 70 0.011702432 ubox
2 71 0.284727624 ubox
2 72 0.362319946 ubox
2 74 0.043126105 ubox
2 75 0.237339276 ubox
2 76 0.014500523 ubox
2 77 0.344758429 ubox
2 78 0.496203478 ubox
3 31 0.027621915 ubox
3 50 0.006581398 ubox
3 70 0.263484210 ubox
3 71 0.358551325 ubox
3 74 0.222232683 ubox
3 76 0.326162133 ubox
3 77 0.491794763 ubox
4 70 0.311982406 ubox
4 71 0.040308026 ubox
4 74 0.030121623 ubox
4 76 0.443147768 ubox
4 77 0.033092472 ubox
5 70 0.041200950 ubox
5 71 0.023885706 ubox
5 74 0.068586982 ubox
5 76 0.038547099 ubox
5 77 0.010442975 ubox
6 13 0.011994199 ubox
6 19 0.003708489 ubox
6 22 0.008907845 ubox
6 24 0.998195600 ubox
6 31 0.003727200 ubox
6 70 0.012574402 ubox
6 74 0.004078200 ubox
6 75 0.011808777 ubox
6 76 0.003554687 ubox
7 12 0.012003841 ubox
7 18 0.003708548 ubox
7 21 0.008889971 ubox
7 23 0.999294181 ubox
7 30 0.004007103 ubox
7 69 0.012666597 ubox
8 22 0.998013102 ubox
8 24 0.007272761 ubox
8 29 0.003991087 ubox
8 68 0.004953135 ubox
8 72 0.003283227 ubox
8 75 0.023620901 ubox
9 19 0.011665258 ubox
9 22 0.045329291 ubox
9 24 0.011136117 ubox
9 74 0.023899383 ubox
10 18 0.011637730 ubox
10 20 0.991201737 ubox
10 21 0.059253652 ubox
10 23 0.011084674 ubox
10 25 0.004958070 ubox
10 73 0.023993615 ubox
11 19 0.962812007 ubox
11 22 0.010423529 ubox
11 24 0.005435747 ubox
11 72 0.023913984 ubox
12 19 0.267236659 ubox
12 22 0.013756655 ubox
12 24 0.008016298 ubox
12 70 0.007864961 ubox
12 71 0.011104679 ubox
13 17 0.811334471 ubox
13 18 0.359101876 ubox
13 21 0.014121542 ubox
13 23 0.008035210 ubox
13 69 0.010983041 ubox
17 22 0.004624492 ubox
17 24 0.005350745 ubox
17 32 0.004738599 ubox
18 24 0.013114159 ubox
18 31 0.004761754 ubox
19 23 0.013050671 ubox
19 30 0.004762996 ubox
21 70 0.003632487 ubox
22 27 0.004565608 ubox
22 69 0.003657806 ubox
25 70 0.004154934 ubox
25 71 0.009794780 ubox
25 74 0.004071424 ubox
25 76 0.004444782 ubox
25 77 0.013496700 ubox
26 31 0.004694036 ubox
26 70 0.009632961 ubox
26 71 0.005276976 ubox
26 74 0.004410754 ubox
26 76 0.014477946 ubox
26 77 0.004732331 ubox
27 32 0.016903398 ubox
27 46 0.003446128 ubox
27 47 0.982396757 ubox
27 71 0.004396505 ubox
27 72 0.003382781 ubox
27 75 0.010456164 ubox
28 46 0.983532833 ubox
28 70 0.004898201 ubox
28 74 0.007626199 ubox
29 33 0.006865946 ubox
29 34 0.040746443 ubox
29 35 0.025007010 ubox
29 41 0.013775274 ubox
29 44 0.029635025 ubox
29 45 0.983159905 ubox
29 69 0.005172400 ubox
30 40 0.016792365 ubox
30 68 0.004969935 ubox
31 38 0.003279560 ubox
31 39 0.016316991 ubox
31 42 0.094986755 ubox
31 43 0.976716846 ubox
31 67 0.004940267 ubox
32 41 0.160884429 ubox
32 42 0.970023395 ubox
32 66 0.004902255 ubox
33 40 0.204071316 ubox
33 78 0.003348510 ubox
34 40 0.948918644 ubox
35 40 0.043840868 ubox
35 78 0.008096209 ubox
36 77 0.008077883 ubox
37 76 0.006863169 ubox
39 74 0.004075402 ubox
40 79 0.164870876 ubox
41 72 0.008659682 ubox
41 76 0.008174372 ubox
41 78 0.174796893 ubox
42 71 0.008795491 ubox
42 75 0.012156454 ubox
42 77 0.175299759 ubox
42 78 0.022491116 ubox
43 70 0.008821611 ubox
43 74 0.011962622 ubox
43 76 0.175638713 ubox
43 77 0.021970002 ubox
44 72 0.008092540 ubox
44 75 0.175778320 ubox
44 76 0.021371411 ubox
45 68 0.009132614 ubox
45 71 0.007692218 ubox
45 72 0.017285705 ubox
45 74 0.174230859 ubox
45 75 0.021369317 ubox
46 67 0.009120394 ubox
46 73 0.169294449 ubox
47 66 0.009098582 ubox
47 69 0.030211113 ubox
48 70 0.079697530 ubox
48 71 0.034034425 ubox
48 74 0.007397757 ubox
48 76 0.006391665 ubox
49 61 0.005677804 ubox
49 63 0.005389783 ubox
49 68 0.994499936 ubox
49 70 0.009950546 ubox
49 72 0.008685884 ubox
49 75 0.006080280 ubox
50 57 0.009007809 ubox
50 58 0.017378099 ubox
50 60 0.004581113 ubox
50 62 0.005402471 ubox
50 66 0.006961762 ubox
50 67 0.996209710 ubox
51 56 0.012488645 ubox
51 57 0.018700220 ubox
51 65 0.011075198 ubox
51 66 0.996266100 ubox
51 69 0.017374151 ubox
51 79 0.056811779 ubox
52 61 0.019243381 ubox
52 63 0.012439958 ubox
52 68 0.017762477 ubox
52 72 0.005160286 ubox
52 78 0.062040587 ubox
53 60 0.018677994 ubox
53 62 0.013272517 ubox
53 64 0.983742435 ubox
53 65 0.008793439 ubox
53 67 0.017296803 ubox
54 63 0.951165045 ubox
54 70 0.004537563 ubox
54 76 0.058888174 ubox
54 77 0.017195316 ubox
55 61 0.383850908 ubox
55 63 0.021370113 ubox
55 72 0.003345895 ubox
55 75 0.063406245 ubox
55 76 0.018332062 ubox
55 77 0.013610531 ubox
55 78 0.005030995 ubox
56 61 0.676593469 ubox
56 63 0.015516228 ubox
56 68 0.005695639 ubox
56 72 0.004543646 ubox
56 74 0.060759442 ubox
56 75 0.018406283 ubox
56 76 0.017285964 ubox
56 77 0.003738706 ubox
56 78 0.003823057 ubox
57 61 0.056029968 ubox
57 63 0.004270737 ubox
57 71 0.004328869 ubox
57 72 0.040485495 ubox
57 74 0.015846798 ubox
57 75 0.018276185 ubox
57 77 0.003733616 ubox
57 78 0.005305625 ubox
58 63 0.004179712 ubox
58 70 0.003928386 ubox
58 71 0.035340113 ubox
58 74 0.017785218 ubox
58 76 0.003581808 ubox
58 77 0.005240612 ubox
59 70 0.027815584 ubox
59 71 0.057373534 ubox
59 76 0.004320997 ubox
60 70 0.063332883 ubox
61 66 0.009095795 ubox
61 69 0.066500250 ubox
62 70 0.003890587 ubox
63 67 0.008111750 ubox
63 69 0.004096984 ubox
64 77 0.013120066 ubox
65 72 0.007294117 ubox
65 75 0.003603272 ubox
65 76 0.017444675 ubox
65 78 0.006954112 ubox
66 71 0.005768449 ubox
66 72 0.006637747 ubox
66 75 0.018662437 ubox
66 77 0.006946960 ubox
66 78 0.005484152 ubox
67 71 0.005806741 ubox
67 74 0.017292811 ubox
67 76 0.006869611 ubox
67 77 0.005382154 ubox
68 79 0.016677482 ubox
69 74 0.016911795 ubox
69 75 0.149325581 ubox
69 76 0.013083851 ubox
69 77 0.010892165 ubox
69 78 0.079360309 ubox
70 79 0.005338604 ubox
71 79 0.003653137 ubox
72 79 0.025143062 ubox
73 77 0.006959206 ubox
74 79 0.007047930 ubox
75 79 0.009757380 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
showpage
end
%%EOF
