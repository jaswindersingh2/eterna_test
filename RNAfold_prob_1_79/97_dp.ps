%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (97)
} def

/sequence { (\
GGAAAAAGCACCCUAUCGAAAGAUAGGCGACCCGAUGAAAAUCGAGUACGAAAGUACGGGAGCGGUGCACAUGUAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.009707202 ubox
1 11 0.003843977 ubox
1 12 0.011330156 ubox
1 32 0.009362812 ubox
1 33 0.024948531 ubox
1 70 0.017738574 ubox
1 72 0.013766651 ubox
1 74 0.046980345 ubox
1 76 0.018152747 ubox
1 77 0.011610412 ubox
1 78 0.255465080 ubox
2 9 0.006326599 ubox
2 11 0.011627953 ubox
2 31 0.009410151 ubox
2 32 0.024907799 ubox
2 70 0.024222779 ubox
2 72 0.011605551 ubox
2 74 0.064497831 ubox
2 76 0.016072936 ubox
2 77 0.253874219 ubox
2 78 0.220281739 ubox
3 72 0.047450808 ubox
3 74 0.047678354 ubox
3 76 0.245336252 ubox
3 77 0.219645142 ubox
4 72 0.067832692 ubox
4 74 0.076596200 ubox
4 76 0.202480734 ubox
4 77 0.010132059 ubox
5 72 0.061112370 ubox
5 74 0.129284636 ubox
5 76 0.012117684 ubox
5 77 0.006534684 ubox
6 72 0.126877131 ubox
6 74 0.054937574 ubox
6 76 0.007351591 ubox
6 77 0.011041918 ubox
7 72 0.114588816 ubox
7 74 0.027441989 ubox
7 76 0.012582171 ubox
7 77 0.004788685 ubox
8 28 0.018608155 ubox
8 31 0.016066777 ubox
8 32 0.012509486 ubox
8 33 0.006117052 ubox
8 63 0.011181611 ubox
8 68 0.996449007 ubox
8 70 0.009993271 ubox
8 72 0.005800766 ubox
8 74 0.012420851 ubox
9 27 0.013733464 ubox
9 29 0.015856406 ubox
9 37 0.004084146 ubox
9 62 0.011188886 ubox
9 67 0.997594175 ubox
9 73 0.012532137 ubox
10 36 0.004030083 ubox
10 66 0.997400272 ubox
10 72 0.010841772 ubox
11 27 0.009024666 ubox
11 29 0.039020414 ubox
11 59 0.003692788 ubox
11 60 0.007341205 ubox
11 64 0.003882344 ubox
11 65 0.997550946 ubox
12 26 0.007134486 ubox
12 27 0.082784051 ubox
12 58 0.003331504 ubox
12 59 0.007202621 ubox
12 64 0.994140985 ubox
12 65 0.005768509 ubox
13 22 0.005711630 ubox
13 26 0.996246835 ubox
13 58 0.006637777 ubox
13 62 0.010886372 ubox
13 64 0.007013756 ubox
14 21 0.005553552 ubox
14 25 0.999262955 ubox
14 26 0.003371410 ubox
14 61 0.009788590 ubox
15 24 0.999374999 ubox
16 23 0.999597379 ubox
16 59 0.006471814 ubox
17 22 0.999393249 ubox
17 26 0.004164674 ubox
17 58 0.007659298 ubox
18 57 0.007176906 ubox
26 32 0.007100172 ubox
26 63 0.003425838 ubox
27 31 0.007727834 ubox
27 32 0.005508298 ubox
27 63 0.992789559 ubox
28 34 0.008088763 ubox
28 37 0.004326557 ubox
28 44 0.003387879 ubox
28 50 0.029220169 ubox
28 62 0.993859932 ubox
28 64 0.029728331 ubox
29 33 0.007784503 ubox
29 43 0.003721545 ubox
29 49 0.029503321 ubox
29 63 0.031341025 ubox
29 78 0.003185356 ubox
30 42 0.003492234 ubox
30 47 0.031900707 ubox
30 66 0.003551281 ubox
31 46 0.032318414 ubox
31 58 0.012750613 ubox
31 59 0.935614884 ubox
31 60 0.338120046 ubox
31 62 0.005996648 ubox
31 65 0.003918113 ubox
32 44 0.004347818 ubox
32 46 0.006757592 ubox
32 58 0.933708758 ubox
32 59 0.338553016 ubox
32 60 0.016505913 ubox
32 64 0.003941326 ubox
33 37 0.003222904 ubox
33 44 0.932417795 ubox
33 58 0.328404864 ubox
33 59 0.015895519 ubox
34 43 0.976739822 ubox
34 57 0.198274102 ubox
35 42 0.974751189 ubox
35 55 0.102130735 ubox
36 40 0.010456077 ubox
36 41 0.963487483 ubox
36 44 0.025579321 ubox
36 45 0.007761433 ubox
36 53 0.004150184 ubox
36 54 0.101841059 ubox
36 56 0.141011726 ubox
37 43 0.041650060 ubox
37 55 0.139368183 ubox
38 42 0.036273316 ubox
38 55 0.037802320 ubox
39 55 0.004094192 ubox
42 51 0.190841835 ubox
42 52 0.005165081 ubox
42 61 0.007092476 ubox
43 50 0.194720047 ubox
43 60 0.007557266 ubox
43 79 0.041485538 ubox
44 49 0.189742958 ubox
44 57 0.004152601 ubox
44 78 0.059113161 ubox
45 77 0.060319248 ubox
46 57 0.975318055 ubox
46 76 0.060854832 ubox
47 56 0.977308431 ubox
47 75 0.061001648 ubox
48 55 0.977558422 ubox
48 74 0.061073867 ubox
49 54 0.977303674 ubox
49 58 0.007063675 ubox
49 73 0.061058702 ubox
49 79 0.005686273 ubox
50 57 0.008408213 ubox
50 72 0.055683494 ubox
50 78 0.006020414 ubox
51 77 0.005683840 ubox
52 76 0.003274629 ubox
53 77 0.006693876 ubox
54 63 0.011162897 ubox
54 68 0.062672678 ubox
54 76 0.009159522 ubox
55 62 0.010945767 ubox
55 67 0.062753873 ubox
55 75 0.009879313 ubox
56 66 0.062465379 ubox
56 74 0.009969820 ubox
57 62 0.004631149 ubox
57 64 0.027029261 ubox
57 65 0.059923388 ubox
57 73 0.009973759 ubox
58 63 0.041202394 ubox
58 72 0.009303581 ubox
59 63 0.034059801 ubox
59 70 0.004471911 ubox
60 70 0.005676259 ubox
62 68 0.010293491 ubox
62 74 0.003476610 ubox
63 67 0.010230664 ubox
63 73 0.003558396 ubox
63 79 0.007257543 ubox
64 72 0.003297164 ubox
64 77 0.016445819 ubox
64 78 0.010380593 ubox
65 76 0.022321657 ubox
65 77 0.007449922 ubox
66 75 0.024004634 ubox
67 74 0.024289252 ubox
68 73 0.024616377 ubox
69 74 0.014800834 ubox
69 76 0.013788555 ubox
69 77 0.009067971 ubox
70 79 0.054478281 ubox
71 76 0.011829953 ubox
71 77 0.027366377 ubox
72 79 0.095145856 ubox
73 77 0.007755547 ubox
73 78 0.153365001 ubox
74 79 0.009768793 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
