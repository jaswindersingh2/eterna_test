%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (909)
} def

/sequence { (\
GGAAAGGAAGCACGGGAACAAGCGAAAGCACCGAAAGGAACGUAUCCAAAGUGCAAGUGAAAACAACCCGAUAUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.013074392 ubox
1 13 0.003940392 ubox
1 64 0.006232487 ubox
1 68 0.010987304 ubox
1 69 0.020073733 ubox
1 75 0.006886318 ubox
1 76 0.014263853 ubox
1 78 0.081384631 ubox
2 11 0.010484154 ubox
2 67 0.010986187 ubox
2 68 0.020051420 ubox
2 74 0.006275918 ubox
2 75 0.016464032 ubox
2 77 0.069138232 ubox
2 78 0.214987031 ubox
3 72 0.003857392 ubox
3 74 0.016023300 ubox
3 76 0.044621628 ubox
3 77 0.192255191 ubox
4 72 0.004048994 ubox
4 76 0.112648206 ubox
4 77 0.112520243 ubox
5 58 0.003176998 ubox
5 72 0.003618051 ubox
5 74 0.010164050 ubox
5 76 0.143435968 ubox
5 77 0.211619484 ubox
6 11 0.024483553 ubox
6 13 0.007837047 ubox
6 47 0.003450714 ubox
6 58 0.004588296 ubox
6 64 0.005653579 ubox
6 68 0.012533176 ubox
6 69 0.021458932 ubox
6 74 0.021241289 ubox
6 75 0.163267480 ubox
6 76 0.282745557 ubox
6 77 0.009530255 ubox
6 78 0.091110765 ubox
7 11 0.004842887 ubox
7 46 0.003454555 ubox
7 67 0.012531432 ubox
7 68 0.021439092 ubox
7 72 0.004577710 ubox
7 74 0.147671700 ubox
7 75 0.301575294 ubox
7 76 0.008815861 ubox
7 77 0.083324761 ubox
7 78 0.924221318 ubox
8 45 0.003390453 ubox
8 72 0.016829215 ubox
8 74 0.293052572 ubox
8 76 0.077450730 ubox
8 77 0.925538913 ubox
9 72 0.084542607 ubox
9 74 0.064444812 ubox
9 76 0.925341570 ubox
9 77 0.003721191 ubox
10 23 0.006335682 ubox
10 54 0.065437526 ubox
10 72 0.085152995 ubox
10 74 0.028783031 ubox
10 75 0.923155074 ubox
10 76 0.004192200 ubox
11 22 0.006342912 ubox
11 53 0.065538103 ubox
11 59 0.008966895 ubox
11 70 0.019559963 ubox
12 52 0.065506595 ubox
12 58 0.008970085 ubox
12 72 0.284981674 ubox
12 74 0.183949997 ubox
13 24 0.007624160 ubox
13 33 0.003759341 ubox
13 51 0.065287385 ubox
13 57 0.008948408 ubox
13 70 0.991173263 ubox
14 19 0.008355245 ubox
14 23 0.007999360 ubox
14 32 0.005675378 ubox
14 47 0.026334862 ubox
14 68 0.022419960 ubox
14 69 0.997238489 ubox
15 31 0.005669798 ubox
15 32 0.004468613 ubox
15 46 0.026322164 ubox
15 47 0.058230630 ubox
15 67 0.024562852 ubox
15 68 0.997214162 ubox
15 69 0.019210597 ubox
16 23 0.009339058 ubox
16 31 0.004478965 ubox
16 45 0.024493087 ubox
16 46 0.058399391 ubox
16 54 0.006171063 ubox
16 64 0.010899208 ubox
16 67 0.994662345 ubox
16 68 0.019290760 ubox
17 45 0.056809343 ubox
18 43 0.052570297 ubox
18 52 0.009276085 ubox
18 58 0.009726745 ubox
19 24 0.059455750 ubox
19 28 0.007406122 ubox
19 33 0.008547160 ubox
19 42 0.053063805 ubox
19 51 0.009767159 ubox
19 53 0.004413996 ubox
19 57 0.010108562 ubox
19 59 0.019160109 ubox
20 52 0.004051372 ubox
20 58 0.015643859 ubox
21 58 0.011973153 ubox
22 29 0.240946026 ubox
22 31 0.003333357 ubox
22 43 0.013273486 ubox
22 47 0.004568675 ubox
22 54 0.009248380 ubox
22 58 0.360279851 ubox
22 64 0.016108485 ubox
23 28 0.241172247 ubox
23 33 0.014503808 ubox
23 38 0.004059160 ubox
23 42 0.013643413 ubox
23 53 0.009232137 ubox
23 57 0.362093573 ubox
23 59 0.766581541 ubox
24 29 0.007536949 ubox
24 32 0.014625133 ubox
24 41 0.013487119 ubox
24 46 0.007881139 ubox
24 52 0.007901943 ubox
24 58 0.749299557 ubox
25 45 0.007720168 ubox
25 58 0.074003639 ubox
26 58 0.051933918 ubox
27 58 0.018286086 ubox
28 41 0.015332682 ubox
28 43 0.007977227 ubox
28 52 0.005706271 ubox
28 54 0.968092665 ubox
28 58 0.005221273 ubox
29 37 0.003689447 ubox
29 38 0.003378315 ubox
29 42 0.008194849 ubox
29 51 0.005720951 ubox
29 53 0.969381619 ubox
29 57 0.005247853 ubox
29 59 0.005807806 ubox
30 43 0.003461495 ubox
30 52 0.968824107 ubox
30 58 0.006924179 ubox
31 37 0.007526955 ubox
31 38 0.220532385 ubox
31 42 0.003189817 ubox
31 51 0.947684661 ubox
31 53 0.012926779 ubox
31 57 0.006990560 ubox
32 37 0.221930543 ubox
32 38 0.024872089 ubox
32 42 0.036327878 ubox
32 51 0.187947068 ubox
32 53 0.017710327 ubox
32 59 0.003936777 ubox
33 41 0.036512180 ubox
33 46 0.038996781 ubox
33 47 0.031010633 ubox
33 52 0.017921305 ubox
33 54 0.005992310 ubox
33 58 0.003800273 ubox
34 45 0.038333057 ubox
34 52 0.004786454 ubox
35 43 0.004766402 ubox
35 45 0.007861064 ubox
36 43 0.027466625 ubox
36 45 0.019258252 ubox
37 41 0.011387769 ubox
37 43 0.010814445 ubox
37 45 0.016022645 ubox
37 46 0.058025764 ubox
37 47 0.964050430 ubox
37 54 0.004217464 ubox
38 43 0.012375368 ubox
38 45 0.039718177 ubox
38 46 0.965644720 ubox
38 47 0.031112393 ubox
38 54 0.006369351 ubox
39 43 0.013204337 ubox
39 45 0.925149887 ubox
39 52 0.003218344 ubox
39 58 0.004420946 ubox
40 45 0.039344805 ubox
40 52 0.034594757 ubox
40 58 0.035848496 ubox
41 51 0.035933284 ubox
41 53 0.007008529 ubox
41 57 0.036856980 ubox
41 59 0.005550532 ubox
42 46 0.004043586 ubox
42 47 0.009915798 ubox
42 52 0.005837761 ubox
42 54 0.205559021 ubox
42 58 0.003192751 ubox
42 64 0.009824301 ubox
43 48 0.004018466 ubox
43 49 0.006039720 ubox
43 50 0.006470593 ubox
43 51 0.003381742 ubox
43 53 0.205687834 ubox
43 59 0.003590090 ubox
43 63 0.009520429 ubox
44 52 0.204707719 ubox
44 58 0.003972346 ubox
45 50 0.008989692 ubox
45 51 0.196240566 ubox
45 55 0.003298858 ubox
45 57 0.003869134 ubox
45 60 0.009206038 ubox
45 61 0.004003403 ubox
46 51 0.037509786 ubox
46 53 0.005292357 ubox
46 59 0.009635354 ubox
47 51 0.006734345 ubox
47 53 0.011612516 ubox
47 57 0.008238890 ubox
47 59 0.009696236 ubox
48 52 0.009678572 ubox
48 58 0.009069290 ubox
50 58 0.004356853 ubox
51 64 0.037313251 ubox
52 56 0.003480234 ubox
52 60 0.003892217 ubox
52 61 0.005683920 ubox
52 62 0.003383364 ubox
52 63 0.037064982 ubox
52 65 0.009659624 ubox
52 66 0.003187275 ubox
53 64 0.010766836 ubox
54 59 0.014411067 ubox
55 77 0.003404331 ubox
56 76 0.003866047 ubox
57 64 0.328629809 ubox
57 67 0.027257858 ubox
57 69 0.003321164 ubox
57 75 0.003923603 ubox
58 62 0.005947567 ubox
58 63 0.325796963 ubox
58 65 0.083167422 ubox
58 66 0.029478059 ubox
58 79 0.004608167 ubox
59 64 0.093072399 ubox
59 67 0.003267120 ubox
59 68 0.004518887 ubox
59 69 0.003391449 ubox
59 75 0.003538826 ubox
59 78 0.007903921 ubox
60 74 0.003414586 ubox
60 77 0.007847620 ubox
61 76 0.007204981 ubox
64 70 0.003933799 ubox
69 79 0.045050189 ubox
70 75 0.005915707 ubox
70 78 0.051578968 ubox
71 77 0.051154316 ubox
7 78 0.9500000 lbox
8 77 0.9500000 lbox
9 76 0.9500000 lbox
10 75 0.9500000 lbox
13 70 0.9500000 lbox
14 69 0.9500000 lbox
15 68 0.9500000 lbox
16 67 0.9500000 lbox
23 59 0.9500000 lbox
24 58 0.9500000 lbox
28 54 0.9500000 lbox
29 53 0.9500000 lbox
30 52 0.9500000 lbox
31 51 0.9500000 lbox
37 47 0.9500000 lbox
38 46 0.9500000 lbox
39 45 0.9500000 lbox
showpage
end
%%EOF
