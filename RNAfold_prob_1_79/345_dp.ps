%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (345)
} def

/sequence { (\
GGAAACGGCCCGGAAAAAACCGGCCCAAAGGGAGCCGAGGCGCACAAAAAGUGGUACAAAAGUACGCCGAUUAAAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.064761587 ubox
1 9 0.003229768 ubox
1 10 0.035452062 ubox
1 11 0.039719305 ubox
1 26 0.004984454 ubox
1 36 0.038292642 ubox
1 41 0.024625340 ubox
1 43 0.013492232 ubox
1 45 0.004968226 ubox
1 67 0.005081414 ubox
1 68 0.068590767 ubox
1 71 0.005462860 ubox
1 72 0.045245685 ubox
1 76 0.019558939 ubox
1 77 0.014327617 ubox
1 78 0.291474997 ubox
2 6 0.009280538 ubox
2 9 0.035570522 ubox
2 10 0.039645414 ubox
2 11 0.003791928 ubox
2 25 0.003622061 ubox
2 26 0.003723259 ubox
2 35 0.038300451 ubox
2 41 0.035847657 ubox
2 43 0.004891283 ubox
2 67 0.068504704 ubox
2 68 0.005351250 ubox
2 71 0.051034831 ubox
2 72 0.119585629 ubox
2 76 0.020931009 ubox
2 77 0.289933876 ubox
2 78 0.236219421 ubox
3 71 0.116921273 ubox
3 72 0.368406423 ubox
3 76 0.274648844 ubox
3 77 0.234050439 ubox
4 71 0.392811606 ubox
4 72 0.326882690 ubox
4 76 0.193356658 ubox
4 77 0.019554934 ubox
5 71 0.351756064 ubox
5 72 0.058692156 ubox
5 76 0.024103302 ubox
5 77 0.005692192 ubox
6 12 0.011072005 ubox
6 13 0.006709950 ubox
6 30 0.021733440 ubox
6 31 0.026938707 ubox
6 32 0.003164009 ubox
6 37 0.387124398 ubox
6 42 0.013090532 ubox
6 66 0.005815474 ubox
6 69 0.891336558 ubox
6 79 0.010347252 ubox
7 11 0.010473192 ubox
7 25 0.072813838 ubox
7 26 0.052798058 ubox
7 36 0.395400195 ubox
7 41 0.010430400 ubox
7 43 0.008617205 ubox
7 45 0.003866093 ubox
7 68 0.909681204 ubox
7 72 0.003732308 ubox
7 78 0.009554441 ubox
8 24 0.073600974 ubox
8 25 0.052593726 ubox
8 35 0.395415495 ubox
8 41 0.042025322 ubox
8 43 0.006636892 ubox
8 67 0.909776011 ubox
8 71 0.003705583 ubox
8 72 0.008535796 ubox
8 77 0.006526613 ubox
9 23 0.060897900 ubox
9 34 0.394466206 ubox
9 39 0.006259638 ubox
9 40 0.043061454 ubox
9 42 0.006886393 ubox
9 66 0.907804209 ubox
10 22 0.044438375 ubox
10 23 0.937858354 ubox
10 31 0.003939686 ubox
10 32 0.016329646 ubox
10 39 0.043441553 ubox
10 40 0.029483408 ubox
10 42 0.003317976 ubox
10 66 0.014866974 ubox
11 22 0.950197445 ubox
11 23 0.003473115 ubox
11 30 0.003979372 ubox
11 31 0.015139410 ubox
11 37 0.038938404 ubox
11 39 0.029668560 ubox
11 40 0.004190484 ubox
11 42 0.018151504 ubox
11 62 0.005835080 ubox
11 66 0.003615453 ubox
11 69 0.039169619 ubox
11 79 0.016935519 ubox
12 20 0.067132422 ubox
12 21 0.956541037 ubox
12 25 0.004916409 ubox
12 26 0.007370919 ubox
12 36 0.037059909 ubox
12 41 0.018636936 ubox
12 45 0.005576906 ubox
12 65 0.005841732 ubox
12 68 0.040026381 ubox
12 78 0.019190216 ubox
13 20 0.953437285 ubox
13 21 0.007171602 ubox
13 24 0.004917318 ubox
13 25 0.007356544 ubox
13 35 0.037016684 ubox
13 41 0.007828149 ubox
13 43 0.004427531 ubox
13 45 0.003594134 ubox
13 67 0.039890060 ubox
13 77 0.018596317 ubox
13 78 0.015330153 ubox
14 76 0.017292096 ubox
14 77 0.015195381 ubox
15 76 0.013297278 ubox
18 72 0.004558200 ubox
19 71 0.004488922 ubox
20 31 0.030810623 ubox
20 32 0.004877989 ubox
20 37 0.007657462 ubox
20 39 0.156035210 ubox
20 40 0.037236581 ubox
20 42 0.007338341 ubox
21 30 0.030836596 ubox
21 31 0.004861895 ubox
21 34 0.005621845 ubox
21 37 0.283932398 ubox
21 39 0.033609572 ubox
21 69 0.006217895 ubox
22 36 0.304804437 ubox
22 68 0.006275910 ubox
23 35 0.306586741 ubox
23 36 0.003235958 ubox
23 41 0.072762034 ubox
23 43 0.011929084 ubox
23 67 0.006282092 ubox
24 30 0.008455031 ubox
24 31 0.131111607 ubox
24 32 0.906980155 ubox
24 34 0.306633311 ubox
24 40 0.077280866 ubox
24 42 0.027626679 ubox
24 66 0.006065118 ubox
25 30 0.131149731 ubox
25 31 0.910154678 ubox
25 32 0.361098263 ubox
25 39 0.077007833 ubox
25 40 0.040775250 ubox
25 42 0.003568171 ubox
26 30 0.903584540 ubox
26 31 0.360881426 ubox
26 32 0.026801468 ubox
26 34 0.003697395 ubox
26 37 0.033844161 ubox
26 39 0.041343460 ubox
26 40 0.008791185 ubox
26 53 0.005986819 ubox
27 52 0.005934506 ubox
27 72 0.005609383 ubox
28 71 0.005995892 ubox
30 35 0.023185316 ubox
30 36 0.083429151 ubox
30 43 0.003855806 ubox
30 45 0.015565858 ubox
30 68 0.012929558 ubox
30 76 0.003449750 ubox
30 77 0.004416894 ubox
30 78 0.014250588 ubox
31 35 0.082117878 ubox
31 36 0.011007743 ubox
31 43 0.005967989 ubox
31 45 0.013714886 ubox
31 67 0.012931273 ubox
31 68 0.014639693 ubox
31 76 0.005283528 ubox
31 77 0.013794259 ubox
31 78 0.040783760 ubox
32 36 0.003796172 ubox
32 41 0.007081923 ubox
32 43 0.032192979 ubox
32 45 0.007063404 ubox
32 67 0.014632409 ubox
32 72 0.006149412 ubox
32 76 0.011732212 ubox
32 77 0.040874256 ubox
32 78 0.016442562 ubox
33 71 0.006304514 ubox
33 72 0.003761832 ubox
33 76 0.040619332 ubox
33 77 0.016304962 ubox
34 41 0.832998045 ubox
34 43 0.089295185 ubox
34 52 0.003295989 ubox
34 55 0.007181301 ubox
34 63 0.007096768 ubox
34 67 0.003496586 ubox
34 71 0.003800666 ubox
34 76 0.014276663 ubox
35 39 0.015481035 ubox
35 40 0.833823445 ubox
35 42 0.091205416 ubox
35 51 0.003442471 ubox
35 54 0.007576280 ubox
35 62 0.007235276 ubox
35 66 0.003502367 ubox
36 40 0.026290196 ubox
36 42 0.050384101 ubox
36 51 0.003283536 ubox
36 53 0.008328457 ubox
36 69 0.005042369 ubox
36 79 0.009021978 ubox
37 41 0.050705197 ubox
37 43 0.006050668 ubox
37 45 0.003316617 ubox
37 52 0.005448233 ubox
37 57 0.008149238 ubox
37 71 0.015034197 ubox
37 72 0.012652128 ubox
37 78 0.012396218 ubox
38 71 0.014441504 ubox
38 72 0.009269156 ubox
38 77 0.012397862 ubox
39 43 0.004426262 ubox
39 45 0.020751579 ubox
39 55 0.010709107 ubox
39 57 0.015117353 ubox
39 68 0.392195482 ubox
40 45 0.007679112 ubox
40 52 0.030973054 ubox
40 55 0.037435269 ubox
40 57 0.004340917 ubox
40 67 0.393834093 ubox
40 68 0.003553661 ubox
41 51 0.032042816 ubox
41 53 0.172484995 ubox
41 54 0.039044300 ubox
41 66 0.393397278 ubox
41 69 0.005881237 ubox
41 79 0.003516245 ubox
42 52 0.186205008 ubox
42 55 0.011008261 ubox
42 57 0.004042749 ubox
42 63 0.003361215 ubox
42 65 0.159287562 ubox
42 67 0.007989025 ubox
42 68 0.005753841 ubox
42 78 0.003857778 ubox
43 51 0.187034058 ubox
43 53 0.955132387 ubox
43 54 0.011897651 ubox
43 62 0.005484662 ubox
43 66 0.007727069 ubox
44 52 0.958285106 ubox
44 55 0.007662437 ubox
44 63 0.099528593 ubox
45 51 0.957988743 ubox
45 53 0.087139555 ubox
45 54 0.008392211 ubox
45 62 0.101272881 ubox
46 52 0.081613359 ubox
46 63 0.003168853 ubox
47 52 0.008432167 ubox
47 72 0.005458909 ubox
48 52 0.004615765 ubox
48 71 0.005579745 ubox
48 72 0.003453390 ubox
49 71 0.003478110 ubox
49 72 0.004552267 ubox
50 55 0.006099852 ubox
50 71 0.004713472 ubox
50 72 0.003399742 ubox
51 57 0.039870274 ubox
51 65 0.014519254 ubox
51 67 0.028255745 ubox
51 68 0.014149905 ubox
51 71 0.003715978 ubox
52 56 0.036035271 ubox
52 58 0.020829765 ubox
52 59 0.008406244 ubox
52 61 0.006421695 ubox
52 64 0.014825423 ubox
52 66 0.027446211 ubox
52 69 0.007145753 ubox
52 70 0.003655594 ubox
53 57 0.020724571 ubox
53 63 0.014637286 ubox
53 65 0.021746935 ubox
53 67 0.012664138 ubox
53 68 0.010489424 ubox
54 63 0.003652789 ubox
54 65 0.983731196 ubox
54 67 0.010309234 ubox
55 60 0.003434118 ubox
55 61 0.013434453 ubox
55 62 0.003620155 ubox
55 64 0.989317430 ubox
55 66 0.009180142 ubox
56 63 0.990148176 ubox
57 62 0.988528315 ubox
58 63 0.003326937 ubox
67 79 0.003309668 ubox
68 79 0.086457761 ubox
69 76 0.004125864 ubox
69 77 0.023972326 ubox
69 78 0.272422172 ubox
70 76 0.032619198 ubox
70 77 0.270108462 ubox
71 75 0.030896198 ubox
71 79 0.005384699 ubox
72 79 0.009507460 ubox
73 77 0.007515052 ubox
6 69 0.9500000 lbox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
34 41 0.9500000 lbox
35 40 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
showpage
end
%%EOF
