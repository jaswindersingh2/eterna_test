%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1001)
} def

/sequence { (\
GGAAAAGAUACGGUAUAAAAGCAAAAAAGUAUGGCAUGAAAAUGGCAUACAGCAUACGGUAUCAAAAAUAGGCCGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.020336000 ubox
1 22 0.009102167 ubox
1 53 0.003334832 ubox
1 63 0.004032440 ubox
1 69 0.053663128 ubox
1 73 0.016020365 ubox
1 74 0.284012434 ubox
1 78 0.098085903 ubox
2 11 0.012897622 ubox
2 22 0.006754200 ubox
2 63 0.006880856 ubox
2 69 0.022115287 ubox
2 73 0.284068384 ubox
2 74 0.008542289 ubox
2 76 0.003876558 ubox
2 77 0.097036685 ubox
2 78 0.138677174 ubox
3 9 0.004071460 ubox
3 62 0.006098978 ubox
3 69 0.029357633 ubox
3 76 0.094522808 ubox
3 77 0.138187368 ubox
4 9 0.004118661 ubox
4 69 0.033965813 ubox
4 76 0.130834890 ubox
4 77 0.006034058 ubox
5 69 0.018488534 ubox
5 76 0.006535001 ubox
5 77 0.007681350 ubox
6 14 0.003534602 ubox
6 69 0.086221869 ubox
6 76 0.008843673 ubox
6 77 0.004106329 ubox
7 11 0.005924641 ubox
7 22 0.004770331 ubox
7 63 0.980949071 ubox
7 69 0.003555684 ubox
7 73 0.008783306 ubox
7 74 0.006093647 ubox
7 77 0.004010232 ubox
7 78 0.112636569 ubox
8 14 0.006100039 ubox
8 16 0.015316695 ubox
8 62 0.982150789 ubox
8 77 0.109464868 ubox
9 13 0.005778226 ubox
9 15 0.015709927 ubox
9 17 0.005168121 ubox
9 26 0.004919163 ubox
9 61 0.982138682 ubox
10 14 0.013999089 ubox
10 16 0.005217959 ubox
10 60 0.982386776 ubox
10 76 0.119043627 ubox
11 21 0.011111485 ubox
11 58 0.010223095 ubox
11 59 0.981573417 ubox
11 75 0.125090536 ubox
11 79 0.029288786 ubox
12 22 0.025287223 ubox
12 53 0.004307545 ubox
12 57 0.012394261 ubox
12 63 0.018003314 ubox
12 74 0.125157004 ubox
12 78 0.030597609 ubox
13 22 0.062593442 ubox
13 53 0.003929225 ubox
13 57 0.981235250 ubox
13 62 0.018171206 ubox
13 73 0.125079681 ubox
13 77 0.019127756 ubox
13 78 0.003264014 ubox
14 19 0.004201344 ubox
14 20 0.020680812 ubox
14 21 0.061552977 ubox
14 23 0.003434134 ubox
14 52 0.003866877 ubox
14 56 0.981789721 ubox
14 61 0.018450562 ubox
14 70 0.006535582 ubox
14 71 0.004533309 ubox
14 72 0.121281993 ubox
15 55 0.978512518 ubox
15 60 0.019180412 ubox
15 62 0.016587930 ubox
15 69 0.013474014 ubox
16 20 0.008961747 ubox
16 21 0.013726169 ubox
16 23 0.016116791 ubox
16 24 0.011649122 ubox
16 25 0.017472833 ubox
16 26 0.008418002 ubox
16 27 0.007752911 ubox
16 28 0.007146924 ubox
16 51 0.013725157 ubox
16 52 0.009649967 ubox
16 54 0.953893664 ubox
16 56 0.011352375 ubox
16 59 0.018954671 ubox
16 61 0.016747540 ubox
16 68 0.013730026 ubox
16 70 0.053782684 ubox
16 71 0.006824453 ubox
17 55 0.018361103 ubox
17 60 0.016196742 ubox
17 69 0.051268103 ubox
18 55 0.010251241 ubox
18 60 0.004693202 ubox
18 62 0.005005455 ubox
18 69 0.005342593 ubox
19 55 0.031437594 ubox
19 60 0.004494820 ubox
19 62 0.006502415 ubox
19 69 0.003721054 ubox
20 55 0.016955972 ubox
20 60 0.010119858 ubox
20 62 0.003901401 ubox
21 30 0.023974828 ubox
21 50 0.015654799 ubox
21 53 0.861488172 ubox
21 57 0.011347967 ubox
21 60 0.023457459 ubox
21 63 0.005277768 ubox
22 29 0.027110798 ubox
22 52 0.860793348 ubox
22 58 0.013265128 ubox
22 59 0.024094587 ubox
22 71 0.003258474 ubox
23 55 0.008058284 ubox
24 55 0.012684196 ubox
24 62 0.004709830 ubox
25 55 0.008831270 ubox
26 55 0.006081055 ubox
26 60 0.005872414 ubox
27 55 0.003445446 ubox
28 55 0.004619177 ubox
29 50 0.995974575 ubox
29 53 0.017607529 ubox
29 57 0.019921175 ubox
30 49 0.998784101 ubox
30 51 0.003209129 ubox
30 52 0.015309751 ubox
30 56 0.019691447 ubox
31 48 0.999207749 ubox
31 55 0.019218658 ubox
32 47 0.999383170 ubox
32 54 0.018385534 ubox
33 46 0.999599764 ubox
33 53 0.016550451 ubox
34 46 0.010907020 ubox
34 50 0.004462972 ubox
34 53 0.007635574 ubox
35 44 0.999576121 ubox
35 45 0.011038325 ubox
35 52 0.010455715 ubox
36 43 0.996224488 ubox
36 48 0.012327182 ubox
37 41 0.010591580 ubox
37 42 0.984849422 ubox
37 47 0.012861283 ubox
37 51 0.007349613 ubox
38 46 0.012881895 ubox
38 50 0.007410660 ubox
45 53 0.003834496 ubox
46 52 0.003900281 ubox
48 61 0.003773783 ubox
49 60 0.004515567 ubox
50 59 0.004762386 ubox
51 55 0.004483984 ubox
51 60 0.035180454 ubox
51 62 0.006037235 ubox
51 77 0.003551517 ubox
52 57 0.021316321 ubox
52 60 0.083342824 ubox
52 63 0.018294217 ubox
52 77 0.004142450 ubox
52 78 0.029979979 ubox
53 58 0.044635633 ubox
53 59 0.085212907 ubox
53 71 0.008038413 ubox
53 72 0.003306708 ubox
53 79 0.035897700 ubox
54 60 0.009213866 ubox
54 62 0.024405848 ubox
54 69 0.005575875 ubox
54 77 0.015705846 ubox
55 59 0.008842891 ubox
55 61 0.025321842 ubox
55 64 0.004629268 ubox
55 68 0.005695686 ubox
55 70 0.005290077 ubox
55 79 0.004310899 ubox
56 60 0.022610184 ubox
56 69 0.005239479 ubox
56 76 0.124204713 ubox
56 77 0.005063318 ubox
57 71 0.024172087 ubox
57 72 0.003381439 ubox
57 75 0.134913536 ubox
58 63 0.029942995 ubox
58 69 0.003769525 ubox
58 74 0.135437796 ubox
59 63 0.010005411 ubox
59 69 0.017368775 ubox
59 73 0.135421429 ubox
60 65 0.005889004 ubox
60 66 0.005387553 ubox
60 67 0.006995092 ubox
60 68 0.018048542 ubox
60 70 0.027441558 ubox
60 71 0.006526534 ubox
60 72 0.131513165 ubox
61 69 0.036795973 ubox
62 66 0.004785189 ubox
62 67 0.006641166 ubox
62 68 0.036643565 ubox
62 70 0.028750402 ubox
62 71 0.016855892 ubox
62 72 0.014125683 ubox
63 71 0.041979285 ubox
63 72 0.007324354 ubox
64 69 0.026914702 ubox
64 76 0.006019731 ubox
64 77 0.014832009 ubox
65 69 0.017743894 ubox
65 76 0.015051503 ubox
65 77 0.017551345 ubox
66 76 0.017442344 ubox
66 77 0.033850285 ubox
67 76 0.036351587 ubox
67 77 0.088076075 ubox
68 76 0.097706853 ubox
68 77 0.032518363 ubox
69 75 0.096655255 ubox
69 79 0.009883371 ubox
70 76 0.022273078 ubox
70 77 0.041897967 ubox
71 76 0.047563268 ubox
71 77 0.020750781 ubox
71 78 0.167489449 ubox
72 76 0.016625492 ubox
72 77 0.119149231 ubox
72 78 0.048477735 ubox
73 79 0.025329540 ubox
74 79 0.041221790 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
