%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (206)
} def

/sequence { (\
GGAAAAGACGGGUUCAGAUCCAGAAAACUGAGAUCAAAAGAUGAGACAAAAGUCCAUCAGAACGGGUCUGAAGCCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.078940835 ubox
1 74 0.018873411 ubox
1 75 0.233171329 ubox
1 76 0.006816588 ubox
1 78 0.080741634 ubox
2 9 0.038114493 ubox
2 74 0.233486023 ubox
2 75 0.007628925 ubox
2 77 0.079797494 ubox
2 78 0.152224806 ubox
3 76 0.077571938 ubox
3 77 0.151629504 ubox
4 76 0.145568201 ubox
4 77 0.013873199 ubox
5 69 0.007406642 ubox
5 76 0.016983345 ubox
5 77 0.015947232 ubox
6 69 0.237058653 ubox
6 76 0.018653724 ubox
6 77 0.018433705 ubox
7 68 0.238859429 ubox
7 75 0.009950566 ubox
7 76 0.017771073 ubox
7 77 0.090292711 ubox
7 78 0.881796362 ubox
8 67 0.238805569 ubox
8 76 0.099829211 ubox
8 77 0.872268740 ubox
9 65 0.009374319 ubox
9 66 0.237889116 ubox
9 79 0.024473932 ubox
10 75 0.952048303 ubox
10 76 0.176869194 ubox
10 77 0.005045647 ubox
10 78 0.020209879 ubox
11 63 0.010096271 ubox
11 74 0.952887115 ubox
11 75 0.185304584 ubox
11 76 0.003178743 ubox
11 77 0.005946013 ubox
12 63 0.237800629 ubox
12 74 0.185396153 ubox
12 75 0.003605648 ubox
12 76 0.004397581 ubox
13 62 0.238618745 ubox
13 72 0.952077102 ubox
13 73 0.151199340 ubox
14 61 0.238712639 ubox
14 71 0.964641812 ubox
14 72 0.106265669 ubox
15 60 0.238509350 ubox
15 70 0.970978113 ubox
16 69 0.970499244 ubox
17 35 0.242228220 ubox
17 68 0.970101460 ubox
18 34 0.243264526 ubox
18 67 0.969683382 ubox
19 33 0.244011143 ubox
19 65 0.012792672 ubox
19 66 0.968363777 ubox
20 32 0.245499378 ubox
20 60 0.003409109 ubox
20 64 0.017781146 ubox
20 65 0.967755453 ubox
20 66 0.031518193 ubox
21 30 0.349979184 ubox
21 32 0.007416551 ubox
21 60 0.003323600 ubox
21 64 0.934873717 ubox
21 65 0.030990760 ubox
22 29 0.514845287 ubox
22 34 0.026827667 ubox
23 28 0.529589611 ubox
23 29 0.030637498 ubox
23 34 0.010155351 ubox
23 35 0.351660609 ubox
23 58 0.007126983 ubox
23 63 0.231436138 ubox
24 29 0.059723296 ubox
24 34 0.334170764 ubox
24 57 0.006716116 ubox
25 29 0.030251104 ubox
25 34 0.047083829 ubox
26 34 0.026346040 ubox
27 34 0.033623035 ubox
27 53 0.006678943 ubox
28 32 0.082041822 ubox
28 40 0.030395315 ubox
28 52 0.007000366 ubox
28 60 0.264415681 ubox
28 65 0.005931631 ubox
29 33 0.023877620 ubox
29 36 0.603441252 ubox
29 37 0.083812077 ubox
29 38 0.119003584 ubox
29 39 0.064813858 ubox
29 48 0.003490771 ubox
29 51 0.006888333 ubox
29 56 0.012524269 ubox
29 59 0.264309472 ubox
29 60 0.003204529 ubox
29 61 0.004470542 ubox
29 62 0.006123131 ubox
29 64 0.007073083 ubox
30 34 0.018457337 ubox
30 35 0.657495429 ubox
30 47 0.003814715 ubox
30 55 0.013023819 ubox
30 58 0.242599529 ubox
30 63 0.028258228 ubox
31 57 0.222281584 ubox
31 69 0.003462127 ubox
32 42 0.004166213 ubox
32 47 0.006354271 ubox
32 54 0.027651070 ubox
32 55 0.066627170 ubox
32 57 0.004230896 ubox
32 58 0.005344047 ubox
32 63 0.101651831 ubox
32 68 0.004050432 ubox
33 42 0.131791559 ubox
33 53 0.027831308 ubox
33 57 0.005495860 ubox
33 67 0.004575776 ubox
34 38 0.023947740 ubox
34 39 0.035943369 ubox
34 41 0.141419544 ubox
34 44 0.065549193 ubox
34 46 0.005486398 ubox
34 52 0.024182661 ubox
34 56 0.004641173 ubox
34 59 0.012707082 ubox
34 60 0.003801954 ubox
34 61 0.130499594 ubox
34 62 0.013019076 ubox
34 64 0.006241286 ubox
34 65 0.005091899 ubox
34 66 0.005190213 ubox
35 40 0.144420801 ubox
35 43 0.069655087 ubox
35 45 0.005958604 ubox
35 52 0.014847997 ubox
35 60 0.133478703 ubox
35 64 0.022542240 ubox
35 65 0.007368288 ubox
36 42 0.065120915 ubox
37 42 0.004426634 ubox
40 47 0.012749120 ubox
40 54 0.014046911 ubox
40 57 0.006019959 ubox
40 58 0.966202586 ubox
40 63 0.005050042 ubox
41 53 0.014049418 ubox
41 57 0.971179254 ubox
42 48 0.006351977 ubox
42 51 0.003648689 ubox
42 52 0.013779664 ubox
42 56 0.984432976 ubox
42 59 0.024873456 ubox
43 47 0.006639431 ubox
43 54 0.016953203 ubox
43 55 0.988596025 ubox
43 58 0.033720577 ubox
44 53 0.019107337 ubox
44 57 0.032216509 ubox
45 53 0.005981842 ubox
45 54 0.998089963 ubox
45 55 0.009343574 ubox
46 53 0.997898307 ubox
47 52 0.996054854 ubox
52 63 0.005324315 ubox
53 61 0.003327170 ubox
53 62 0.004968877 ubox
54 60 0.004020670 ubox
55 60 0.009858686 ubox
58 64 0.004204169 ubox
58 70 0.003195406 ubox
59 69 0.017768413 ubox
60 68 0.023034495 ubox
61 67 0.022103237 ubox
64 75 0.003909127 ubox
64 76 0.006308804 ubox
65 74 0.003906988 ubox
65 75 0.006899364 ubox
66 74 0.006905589 ubox
67 73 0.006628470 ubox
69 79 0.003303875 ubox
70 75 0.003967546 ubox
70 78 0.020454627 ubox
71 77 0.020188028 ubox
72 76 0.015390081 ubox
7 78 0.9500000 lbox
8 77 0.9500000 lbox
10 75 0.9500000 lbox
11 74 0.9500000 lbox
13 72 0.9500000 lbox
14 71 0.9500000 lbox
15 70 0.9500000 lbox
16 69 0.9500000 lbox
17 68 0.9500000 lbox
18 67 0.9500000 lbox
19 66 0.9500000 lbox
20 65 0.9500000 lbox
21 64 0.9500000 lbox
29 36 0.9500000 lbox
30 35 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
