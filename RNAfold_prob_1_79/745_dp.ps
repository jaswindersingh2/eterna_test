%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (745)
} def

/sequence { (\
GGAAAGCCGUGGCACUAAAAGCAAAAAAGCCACACGGAUCGCCGAGUGGCCGCAGUGACACGGGUCUUAGCUGAGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.006438981 ubox
1 8 0.028584320 ubox
1 43 0.004155705 ubox
1 66 0.061553898 ubox
1 67 0.303479919 ubox
1 68 0.055169033 ubox
1 71 0.287418407 ubox
1 72 0.175400045 ubox
1 76 0.006461635 ubox
1 77 0.005792190 ubox
1 78 0.158331701 ubox
2 7 0.028732688 ubox
2 42 0.004159605 ubox
2 65 0.026809020 ubox
2 66 0.349657002 ubox
2 67 0.052142752 ubox
2 68 0.385954419 ubox
2 71 0.185212577 ubox
2 72 0.011383463 ubox
2 76 0.007677415 ubox
2 77 0.155419365 ubox
2 78 0.244860762 ubox
3 65 0.318291990 ubox
3 67 0.391040333 ubox
3 68 0.152107171 ubox
3 72 0.010121616 ubox
3 76 0.148716977 ubox
3 77 0.243986638 ubox
4 65 0.051348421 ubox
4 67 0.155330959 ubox
4 68 0.360400602 ubox
4 72 0.011010609 ubox
4 76 0.228940072 ubox
4 77 0.009317951 ubox
5 65 0.656409835 ubox
5 67 0.373521712 ubox
5 68 0.043897558 ubox
5 72 0.073597156 ubox
5 76 0.008512648 ubox
5 77 0.006932715 ubox
6 13 0.007337027 ubox
6 22 0.003698154 ubox
6 50 0.003426951 ubox
6 56 0.004572718 ubox
6 65 0.122234573 ubox
6 66 0.371482866 ubox
6 67 0.039331792 ubox
6 68 0.006684460 ubox
6 71 0.075544808 ubox
6 72 0.008405260 ubox
6 76 0.008562850 ubox
6 78 0.007941695 ubox
7 12 0.007317878 ubox
7 21 0.003672542 ubox
7 37 0.005964469 ubox
7 49 0.003446834 ubox
7 55 0.004748187 ubox
7 63 0.977416192 ubox
7 64 0.185821220 ubox
7 70 0.058399335 ubox
7 73 0.012615131 ubox
7 75 0.007259271 ubox
8 36 0.005975910 ubox
8 48 0.003443134 ubox
8 62 0.990097187 ubox
8 63 0.132269141 ubox
8 64 0.006031358 ubox
9 33 0.015830321 ubox
9 35 0.004986699 ubox
9 53 0.007735520 ubox
9 61 0.998982418 ubox
9 68 0.010783908 ubox
9 71 0.007145014 ubox
10 32 0.016063947 ubox
10 34 0.004149764 ubox
10 52 0.007775739 ubox
10 60 0.998710218 ubox
10 62 0.009001530 ubox
10 69 0.003862250 ubox
10 70 0.006898262 ubox
10 73 0.003611878 ubox
11 31 0.016348493 ubox
11 51 0.007820138 ubox
11 59 0.986757785 ubox
11 61 0.009717297 ubox
11 66 0.024104746 ubox
11 67 0.010610706 ubox
11 68 0.004152075 ubox
11 72 0.004817333 ubox
11 78 0.004246775 ubox
12 22 0.041256157 ubox
12 30 0.016429476 ubox
12 50 0.006747877 ubox
12 53 0.004216554 ubox
12 56 0.003762657 ubox
12 59 0.051333091 ubox
12 65 0.024119066 ubox
12 66 0.011021384 ubox
12 67 0.004145875 ubox
12 71 0.004921827 ubox
12 77 0.003902129 ubox
13 21 0.041345261 ubox
13 29 0.016420853 ubox
13 49 0.006518609 ubox
13 52 0.004212080 ubox
13 55 0.003893871 ubox
13 57 0.968688225 ubox
13 64 0.024110763 ubox
13 70 0.004913579 ubox
14 56 0.997913837 ubox
14 65 0.013096185 ubox
14 76 0.005468817 ubox
15 21 0.007998507 ubox
15 55 0.998150695 ubox
15 57 0.003670597 ubox
15 62 0.004697232 ubox
15 63 0.021589853 ubox
15 64 0.013226984 ubox
15 75 0.005613646 ubox
16 20 0.009133689 ubox
16 21 0.007766105 ubox
16 23 0.009887256 ubox
16 24 0.007165902 ubox
16 25 0.010818434 ubox
16 26 0.005729483 ubox
16 27 0.004837748 ubox
16 28 0.004689232 ubox
16 52 0.006169191 ubox
16 54 0.981611794 ubox
16 55 0.003654640 ubox
16 62 0.020850765 ubox
16 63 0.013134141 ubox
16 74 0.005391640 ubox
18 56 0.004268187 ubox
20 72 0.003755006 ubox
21 30 0.016551080 ubox
21 50 0.012698991 ubox
21 51 0.219302918 ubox
21 53 0.857358022 ubox
21 56 0.012877217 ubox
21 59 0.007749793 ubox
21 71 0.003916656 ubox
22 29 0.019174013 ubox
22 49 0.009357878 ubox
22 52 0.856658735 ubox
22 55 0.013115679 ubox
22 57 0.026125966 ubox
22 70 0.003912940 ubox
23 56 0.026104711 ubox
24 56 0.003518036 ubox
29 50 0.994788867 ubox
29 51 0.083838669 ubox
29 53 0.007117813 ubox
30 49 0.999649940 ubox
30 52 0.005297123 ubox
31 48 0.999810648 ubox
32 47 0.999538524 ubox
33 46 0.996980938 ubox
35 44 0.996503708 ubox
35 52 0.010136234 ubox
35 79 0.011246918 ubox
36 42 0.007605805 ubox
36 43 0.999633185 ubox
36 51 0.010369860 ubox
36 67 0.003330190 ubox
36 78 0.011816756 ubox
37 42 0.995171034 ubox
37 43 0.005810275 ubox
37 50 0.010330923 ubox
37 66 0.003571183 ubox
37 77 0.011756374 ubox
38 65 0.003548127 ubox
38 76 0.011441238 ubox
39 49 0.010201755 ubox
39 74 0.007634836 ubox
39 75 0.008857380 ubox
40 48 0.010295408 ubox
40 73 0.008790106 ubox
41 47 0.010256972 ubox
41 50 0.006698800 ubox
41 71 0.011010658 ubox
42 46 0.010197824 ubox
42 49 0.006835926 ubox
42 63 0.004025108 ubox
42 70 0.011138024 ubox
43 48 0.006826491 ubox
43 62 0.004138749 ubox
44 61 0.004150927 ubox
44 68 0.010465208 ubox
45 67 0.010836289 ubox
46 59 0.004389814 ubox
46 66 0.010720053 ubox
47 58 0.004394130 ubox
48 65 0.009171640 ubox
48 66 0.004812892 ubox
49 56 0.004402932 ubox
49 65 0.005377623 ubox
50 55 0.004414116 ubox
50 63 0.010775273 ubox
50 64 0.005348698 ubox
51 57 0.011838147 ubox
51 62 0.011055085 ubox
51 63 0.005259974 ubox
51 75 0.010427555 ubox
52 56 0.007361326 ubox
52 61 0.011068310 ubox
52 71 0.007860106 ubox
53 62 0.003409022 ubox
53 70 0.007879840 ubox
53 73 0.018319633 ubox
54 72 0.018448116 ubox
55 71 0.018461930 ubox
56 70 0.018281991 ubox
57 66 0.020875889 ubox
57 77 0.004675390 ubox
57 78 0.003271780 ubox
58 65 0.020891640 ubox
58 76 0.005489883 ubox
59 64 0.020849475 ubox
59 75 0.005848633 ubox
61 73 0.006223223 ubox
61 79 0.005811558 ubox
62 72 0.006909587 ubox
62 77 0.010449018 ubox
62 78 0.016402500 ubox
63 71 0.007858718 ubox
63 72 0.022395105 ubox
63 76 0.029426568 ubox
63 77 0.016777751 ubox
63 78 0.031048386 ubox
64 68 0.005451788 ubox
64 71 0.088410614 ubox
64 72 0.005247487 ubox
64 76 0.046278096 ubox
64 77 0.037897742 ubox
64 78 0.093334015 ubox
65 69 0.006079562 ubox
65 70 0.083979315 ubox
65 73 0.003728989 ubox
65 74 0.236935961 ubox
65 75 0.006045805 ubox
65 79 0.004014376 ubox
66 70 0.013973166 ubox
66 73 0.273139355 ubox
66 75 0.258353908 ubox
66 79 0.013690908 ubox
67 73 0.019798593 ubox
67 74 0.259437325 ubox
67 75 0.022536553 ubox
67 79 0.014374470 ubox
68 73 0.243186099 ubox
68 74 0.026593585 ubox
68 75 0.014407093 ubox
68 79 0.009405910 ubox
69 76 0.025629949 ubox
69 77 0.125442868 ubox
70 76 0.154413264 ubox
70 77 0.014458357 ubox
70 78 0.028665672 ubox
71 75 0.155714518 ubox
71 79 0.024920478 ubox
72 79 0.069171115 ubox
73 77 0.007941955 ubox
73 78 0.125841919 ubox
5 65 0.9500000 lbox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
