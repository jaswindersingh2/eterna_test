%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (340)
} def

/sequence { (\
GGAAAGCACGUCUGAAAAAAGACGCGAAACGCAGUGCAGGCACUCAAAAAGAGGUACGAAAGUACGCCCAAUUUGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.114698055 ubox
1 9 0.026043315 ubox
1 25 0.009655410 ubox
1 30 0.100063169 ubox
1 32 0.058812696 ubox
1 37 0.013729849 ubox
1 41 0.028822008 ubox
1 43 0.013104566 ubox
1 44 0.003635393 ubox
1 45 0.003414664 ubox
1 67 0.005329174 ubox
1 68 0.067732488 ubox
1 69 0.181641466 ubox
1 73 0.004796045 ubox
1 74 0.023895960 ubox
1 76 0.027672479 ubox
1 77 0.008112486 ubox
1 78 0.206071618 ubox
2 7 0.047884336 ubox
2 9 0.012012677 ubox
2 25 0.010372397 ubox
2 30 0.071318016 ubox
2 32 0.025449347 ubox
2 37 0.003837345 ubox
2 41 0.035955263 ubox
2 43 0.004392819 ubox
2 45 0.003807887 ubox
2 67 0.067978089 ubox
2 68 0.176248776 ubox
2 69 0.034695836 ubox
2 72 0.004607428 ubox
2 73 0.027803617 ubox
2 74 0.037752139 ubox
2 76 0.010151424 ubox
2 77 0.199010394 ubox
2 78 0.283853586 ubox
3 35 0.012770707 ubox
3 44 0.003653816 ubox
3 72 0.026263780 ubox
3 73 0.039306396 ubox
3 74 0.049410876 ubox
3 76 0.182044616 ubox
3 77 0.279753705 ubox
4 72 0.035105304 ubox
4 73 0.053774958 ubox
4 74 0.053165403 ubox
4 76 0.237206325 ubox
4 77 0.018642434 ubox
5 72 0.048500377 ubox
5 73 0.051487848 ubox
5 74 0.054674534 ubox
5 76 0.020254119 ubox
5 77 0.053086812 ubox
6 25 0.096866831 ubox
6 30 0.022737128 ubox
6 32 0.021761677 ubox
6 35 0.004528753 ubox
6 37 0.778795468 ubox
6 41 0.011183385 ubox
6 67 0.052545306 ubox
6 69 0.004461593 ubox
6 72 0.011730017 ubox
6 73 0.014437927 ubox
6 74 0.012191118 ubox
6 76 0.070385580 ubox
6 78 0.012308708 ubox
7 24 0.088646673 ubox
7 26 0.324481123 ubox
7 31 0.021295658 ubox
7 34 0.004777181 ubox
7 36 0.779645493 ubox
7 40 0.011137309 ubox
7 66 0.052519149 ubox
7 75 0.072935084 ubox
7 79 0.005266470 ubox
8 35 0.778995810 ubox
8 72 0.004163298 ubox
8 73 0.003660820 ubox
8 74 0.064448942 ubox
8 76 0.013628774 ubox
9 24 0.604307032 ubox
9 26 0.005214262 ubox
9 34 0.776354328 ubox
9 39 0.005128957 ubox
9 75 0.014386155 ubox
10 23 0.998651967 ubox
10 25 0.004466323 ubox
10 32 0.005205376 ubox
10 41 0.012037069 ubox
11 22 0.999543563 ubox
11 24 0.003430832 ubox
11 31 0.004341296 ubox
11 40 0.012043761 ubox
12 21 0.999841201 ubox
12 39 0.012060338 ubox
13 18 0.010714394 ubox
13 19 0.035714866 ubox
13 20 0.992970285 ubox
13 38 0.012054168 ubox
14 37 0.011964694 ubox
22 35 0.005320786 ubox
23 31 0.005219903 ubox
23 34 0.005970448 ubox
23 36 0.008836296 ubox
24 30 0.014061523 ubox
24 32 0.780676822 ubox
24 35 0.013467122 ubox
24 37 0.032472691 ubox
24 41 0.011303212 ubox
24 67 0.005860131 ubox
24 76 0.008409618 ubox
25 31 0.781928759 ubox
25 34 0.020876884 ubox
25 36 0.033331240 ubox
25 39 0.004446518 ubox
25 40 0.011589833 ubox
25 51 0.004863375 ubox
25 53 0.003267723 ubox
25 66 0.006170229 ubox
25 75 0.015728810 ubox
25 79 0.437328935 ubox
26 30 0.731593811 ubox
26 32 0.018457991 ubox
26 35 0.031044804 ubox
26 37 0.005077949 ubox
26 41 0.004271923 ubox
26 65 0.005517045 ubox
26 74 0.015804286 ubox
26 77 0.005142432 ubox
26 78 0.475901067 ubox
27 73 0.015648816 ubox
27 74 0.003958451 ubox
27 76 0.004555678 ubox
27 77 0.428852588 ubox
28 35 0.003369095 ubox
28 72 0.013976710 ubox
28 73 0.004180179 ubox
28 74 0.003322881 ubox
28 76 0.258098646 ubox
28 77 0.254998806 ubox
29 35 0.015828082 ubox
29 63 0.004773440 ubox
29 72 0.003727428 ubox
29 73 0.003646680 ubox
29 74 0.007534606 ubox
29 76 0.334020077 ubox
29 77 0.022979397 ubox
30 34 0.016201064 ubox
30 36 0.010636897 ubox
30 39 0.014402220 ubox
30 40 0.004829676 ubox
30 62 0.004978168 ubox
30 75 0.392234481 ubox
30 79 0.046752785 ubox
31 35 0.006683837 ubox
31 37 0.071733432 ubox
31 41 0.049536314 ubox
31 45 0.028665051 ubox
31 67 0.027670886 ubox
31 69 0.004546426 ubox
31 72 0.003494712 ubox
31 73 0.009205016 ubox
31 74 0.374112111 ubox
31 76 0.403598809 ubox
31 77 0.013701329 ubox
31 78 0.040767974 ubox
32 36 0.071302857 ubox
32 39 0.007487767 ubox
32 40 0.049402832 ubox
32 66 0.027693518 ubox
32 75 0.432032998 ubox
32 79 0.006816764 ubox
33 44 0.065726660 ubox
33 72 0.088071409 ubox
33 73 0.323165043 ubox
33 74 0.425164555 ubox
33 76 0.006118951 ubox
33 77 0.006265952 ubox
34 41 0.046246409 ubox
34 43 0.070284623 ubox
34 57 0.006688916 ubox
34 65 0.026183643 ubox
34 68 0.007058291 ubox
34 69 0.016507579 ubox
34 72 0.340487233 ubox
34 73 0.398957287 ubox
34 74 0.007315994 ubox
34 76 0.003864940 ubox
34 77 0.003600073 ubox
34 78 0.065904135 ubox
35 40 0.045740528 ubox
35 42 0.071070614 ubox
35 56 0.006693128 ubox
35 64 0.026203754 ubox
35 70 0.249440954 ubox
35 71 0.341936388 ubox
36 41 0.070923374 ubox
36 55 0.006591752 ubox
36 63 0.026199803 ubox
36 67 0.019084996 ubox
36 69 0.256636597 ubox
36 72 0.017485686 ubox
36 73 0.005173727 ubox
36 76 0.076005978 ubox
36 78 0.003184825 ubox
37 54 0.006569732 ubox
37 62 0.026113695 ubox
37 66 0.019159089 ubox
37 75 0.078551896 ubox
38 44 0.006685004 ubox
38 72 0.018471677 ubox
38 73 0.013901389 ubox
38 74 0.078657351 ubox
38 76 0.005465601 ubox
38 77 0.005762051 ubox
39 43 0.007021974 ubox
39 45 0.008758967 ubox
39 57 0.011569792 ubox
39 67 0.006100417 ubox
39 68 0.959994373 ubox
39 69 0.085197052 ubox
39 73 0.016332020 ubox
39 77 0.040096685 ubox
39 78 0.022306721 ubox
40 44 0.005734463 ubox
40 55 0.030551683 ubox
40 57 0.010707199 ubox
40 67 0.964694734 ubox
40 68 0.066252235 ubox
40 72 0.010274098 ubox
40 76 0.049704437 ubox
40 77 0.018090413 ubox
40 78 0.016797576 ubox
41 53 0.005714882 ubox
41 54 0.031474618 ubox
41 58 0.003778521 ubox
41 66 0.965187660 ubox
41 75 0.051571560 ubox
41 79 0.009359777 ubox
42 55 0.009138068 ubox
42 63 0.005692770 ubox
42 74 0.046155761 ubox
42 76 0.019180575 ubox
42 77 0.007099808 ubox
43 51 0.034470636 ubox
43 53 0.988983960 ubox
43 54 0.008537647 ubox
43 62 0.006040878 ubox
43 75 0.019335216 ubox
43 79 0.006395376 ubox
44 49 0.004456166 ubox
44 50 0.033436828 ubox
44 51 0.005550203 ubox
44 52 0.991629616 ubox
44 53 0.008173500 ubox
44 61 0.005495975 ubox
45 51 0.991359064 ubox
45 53 0.019898526 ubox
45 75 0.066769856 ubox
46 72 0.004918653 ubox
46 73 0.011179721 ubox
46 74 0.067504666 ubox
47 72 0.011026929 ubox
47 73 0.067110503 ubox
47 74 0.011177047 ubox
48 72 0.062913629 ubox
48 73 0.012404136 ubox
48 74 0.011350380 ubox
49 72 0.012304422 ubox
49 73 0.012359235 ubox
49 74 0.003420764 ubox
50 72 0.012343711 ubox
50 73 0.003646269 ubox
51 67 0.018326360 ubox
51 68 0.053682632 ubox
51 69 0.045037491 ubox
51 78 0.003598495 ubox
52 77 0.003567858 ubox
53 65 0.005693210 ubox
53 67 0.050343625 ubox
53 68 0.023538432 ubox
53 69 0.008777800 ubox
54 65 0.997421845 ubox
54 67 0.023009088 ubox
54 68 0.007801010 ubox
54 78 0.004602378 ubox
55 64 0.998502146 ubox
55 66 0.019923959 ubox
56 63 0.998858486 ubox
56 76 0.008913670 ubox
57 62 0.998607232 ubox
57 66 0.012101964 ubox
57 75 0.009885829 ubox
57 79 0.010905647 ubox
58 65 0.012959766 ubox
58 74 0.009785758 ubox
58 78 0.011578170 ubox
59 73 0.009642470 ubox
59 77 0.011454112 ubox
60 72 0.008707891 ubox
60 74 0.004568834 ubox
60 76 0.009259471 ubox
61 73 0.006190796 ubox
62 69 0.003644121 ubox
62 72 0.006734750 ubox
62 74 0.003926043 ubox
63 71 0.006735365 ubox
64 76 0.004421920 ubox
65 75 0.005031358 ubox
66 73 0.003774350 ubox
66 74 0.004796747 ubox
66 76 0.015319050 ubox
66 78 0.008842406 ubox
67 75 0.016788428 ubox
68 75 0.011471301 ubox
69 75 0.119949965 ubox
69 79 0.019357804 ubox
70 74 0.097764651 ubox
70 76 0.010521571 ubox
70 77 0.024475454 ubox
71 76 0.021954593 ubox
71 77 0.023354180 ubox
72 79 0.008098532 ubox
73 79 0.005859163 ubox
74 79 0.007486923 ubox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
showpage
end
%%EOF
