%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (920)
} def

/sequence { (\
GGAAACCAAGUACGCAGCCAAGCGAAAGCAGGGAAACCAAAGGACUGAAAGUACAAGCGAAAGCAAGGGAUUGACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.119955291 ubox
1 7 0.558978608 ubox
1 13 0.006813251 ubox
1 19 0.004388524 ubox
1 37 0.007048286 ubox
1 38 0.134236888 ubox
1 46 0.004764399 ubox
1 54 0.007092802 ubox
1 58 0.010423668 ubox
1 64 0.009393315 ubox
1 71 0.003237335 ubox
1 72 0.008663947 ubox
1 75 0.067184311 ubox
1 76 0.015221475 ubox
1 78 0.051839860 ubox
2 6 0.550377772 ubox
2 7 0.085254043 ubox
2 18 0.004386274 ubox
2 37 0.134152441 ubox
2 38 0.004079740 ubox
2 45 0.005069828 ubox
2 58 0.013750973 ubox
2 64 0.004414410 ubox
2 71 0.008760452 ubox
2 72 0.070934626 ubox
2 75 0.017442097 ubox
2 77 0.047135669 ubox
2 78 0.114367042 ubox
3 71 0.074525272 ubox
3 72 0.034972154 ubox
3 76 0.042483287 ubox
3 77 0.113036269 ubox
4 71 0.036371898 ubox
4 72 0.068633416 ubox
4 76 0.105710944 ubox
4 77 0.004204940 ubox
5 11 0.006592669 ubox
5 52 0.005864502 ubox
5 71 0.067797157 ubox
5 72 0.006742341 ubox
5 76 0.004494766 ubox
6 10 0.006900319 ubox
6 32 0.041234720 ubox
6 33 0.132065919 ubox
6 43 0.013850975 ubox
6 51 0.006066218 ubox
6 57 0.064979829 ubox
6 59 0.022336212 ubox
6 67 0.005135409 ubox
6 68 0.130070529 ubox
6 69 0.088776091 ubox
6 73 0.008752912 ubox
6 79 0.011636513 ubox
7 14 0.004410174 ubox
7 31 0.041216937 ubox
7 32 0.132256339 ubox
7 42 0.013893163 ubox
7 47 0.007539839 ubox
7 57 0.148900652 ubox
7 59 0.008262548 ubox
7 67 0.130206544 ubox
7 68 0.088786723 ubox
7 69 0.008145659 ubox
7 73 0.103699907 ubox
7 79 0.010512701 ubox
8 46 0.005565832 ubox
8 71 0.003211556 ubox
8 72 0.101699778 ubox
8 77 0.021792114 ubox
9 46 0.015821392 ubox
9 52 0.006777521 ubox
9 71 0.088773232 ubox
9 72 0.005846194 ubox
9 76 0.024332950 ubox
10 29 0.135392019 ubox
10 45 0.016982476 ubox
10 52 0.005038167 ubox
10 54 0.985341914 ubox
10 58 0.005075765 ubox
10 64 0.015942956 ubox
10 71 0.004894042 ubox
10 75 0.024548987 ubox
11 25 0.009417903 ubox
11 26 0.018498784 ubox
11 27 0.009882943 ubox
11 28 0.134397377 ubox
11 44 0.015208973 ubox
11 50 0.003765348 ubox
11 51 0.004873313 ubox
11 53 0.986533508 ubox
11 57 0.004608047 ubox
11 63 0.015815325 ubox
11 70 0.005273842 ubox
11 74 0.024270797 ubox
12 52 0.986505987 ubox
13 24 0.141947560 ubox
13 42 0.011047243 ubox
13 43 0.004926812 ubox
13 51 0.983050257 ubox
13 59 0.018338652 ubox
13 67 0.008171326 ubox
13 68 0.008517980 ubox
13 69 0.006068356 ubox
13 73 0.017985346 ubox
13 79 0.003778904 ubox
14 23 0.143128990 ubox
14 29 0.005654645 ubox
14 37 0.011170691 ubox
14 38 0.006602040 ubox
14 58 0.018954997 ubox
14 72 0.016031444 ubox
14 75 0.003735773 ubox
14 78 0.003792167 ubox
15 22 0.143006732 ubox
15 24 0.005680681 ubox
15 28 0.005646815 ubox
15 47 0.980452518 ubox
15 57 0.018854478 ubox
15 67 0.006193157 ubox
15 73 0.009687837 ubox
16 46 0.986253037 ubox
16 72 0.009668775 ubox
17 23 0.010777768 ubox
17 29 0.004672802 ubox
17 37 0.003998227 ubox
17 38 0.004477777 ubox
17 45 0.986541997 ubox
17 46 0.008245045 ubox
17 71 0.009379897 ubox
18 22 0.010726015 ubox
18 28 0.004662976 ubox
18 32 0.025114446 ubox
18 33 0.133708672 ubox
18 42 0.006619477 ubox
18 43 0.975347664 ubox
18 47 0.005938154 ubox
18 68 0.020391191 ubox
18 69 0.011263607 ubox
19 24 0.003705970 ubox
19 31 0.025242863 ubox
19 32 0.134049670 ubox
19 42 0.974410868 ubox
19 43 0.057445746 ubox
19 47 0.007751281 ubox
19 67 0.020396188 ubox
19 68 0.011235776 ubox
20 46 0.007309296 ubox
21 46 0.003292549 ubox
22 29 0.986218739 ubox
22 37 0.003331611 ubox
22 38 0.005581723 ubox
22 45 0.003432587 ubox
22 64 0.016848036 ubox
23 28 0.986852767 ubox
23 31 0.007820424 ubox
23 32 0.008008763 ubox
23 33 0.003606145 ubox
23 43 0.004306606 ubox
23 63 0.016856770 ubox
24 29 0.027700378 ubox
24 37 0.007939979 ubox
24 38 0.006829768 ubox
28 58 0.017143887 ubox
29 33 0.005744240 ubox
29 42 0.004404782 ubox
29 47 0.013309565 ubox
29 57 0.017132304 ubox
30 46 0.013444127 ubox
31 37 0.040912665 ubox
31 38 0.966647327 ubox
31 45 0.013360064 ubox
32 37 0.967019813 ubox
32 38 0.140708660 ubox
32 54 0.007138078 ubox
33 37 0.138780155 ubox
33 38 0.027783253 ubox
34 46 0.003826380 ubox
36 52 0.003504195 ubox
37 42 0.017065569 ubox
37 43 0.085686069 ubox
37 51 0.003635956 ubox
37 68 0.003952126 ubox
37 69 0.004629756 ubox
38 42 0.085457711 ubox
38 43 0.021529169 ubox
38 47 0.022645864 ubox
38 67 0.003956732 ubox
38 68 0.004638744 ubox
39 46 0.021434473 ubox
40 46 0.003531509 ubox
40 77 0.003788933 ubox
41 46 0.003670529 ubox
41 76 0.004197337 ubox
42 54 0.051377267 ubox
42 58 0.003978505 ubox
42 75 0.004239368 ubox
42 78 0.010808495 ubox
43 52 0.003913146 ubox
43 54 0.030271058 ubox
43 58 0.018140235 ubox
43 64 0.005398401 ubox
43 77 0.010606925 ubox
43 78 0.011451562 ubox
44 52 0.069683510 ubox
44 76 0.010146773 ubox
44 77 0.010963436 ubox
45 51 0.077930058 ubox
45 57 0.028953653 ubox
45 63 0.007132575 ubox
45 79 0.007118280 ubox
46 50 0.070230473 ubox
46 51 0.003408273 ubox
46 53 0.004299995 ubox
46 55 0.030938977 ubox
46 56 0.027096250 ubox
46 62 0.007110315 ubox
46 74 0.007187918 ubox
46 79 0.029556842 ubox
47 52 0.004274275 ubox
47 54 0.034245616 ubox
47 75 0.006515695 ubox
47 78 0.054003096 ubox
48 52 0.003499435 ubox
48 72 0.007265428 ubox
48 77 0.044322367 ubox
49 71 0.006729960 ubox
49 72 0.008968093 ubox
49 76 0.031478567 ubox
49 77 0.044227789 ubox
50 71 0.009201952 ubox
50 72 0.011225920 ubox
50 76 0.056314975 ubox
51 58 0.018403755 ubox
51 71 0.011749563 ubox
51 75 0.064597103 ubox
52 57 0.017939807 ubox
52 68 0.003472119 ubox
52 70 0.011257219 ubox
52 74 0.064316992 ubox
53 72 0.003443402 ubox
54 67 0.017461332 ubox
54 68 0.009063091 ubox
54 69 0.005182247 ubox
54 73 0.063080299 ubox
55 72 0.063059164 ubox
55 77 0.021580133 ubox
56 71 0.057873994 ubox
56 76 0.024379262 ubox
57 64 0.307134243 ubox
57 75 0.024718918 ubox
57 78 0.014521318 ubox
58 63 0.307423509 ubox
58 67 0.021969704 ubox
58 68 0.020200826 ubox
58 69 0.035718805 ubox
58 73 0.023155973 ubox
58 79 0.868154382 ubox
59 64 0.009146954 ubox
59 72 0.022589914 ubox
59 77 0.004354986 ubox
59 78 0.938574303 ubox
60 71 0.021258683 ubox
60 72 0.008790326 ubox
60 76 0.004209309 ubox
60 77 0.905036574 ubox
61 71 0.008427810 ubox
61 72 0.007790274 ubox
61 76 0.859489052 ubox
61 77 0.265640469 ubox
62 71 0.008537390 ubox
62 72 0.003958590 ubox
62 76 0.365775274 ubox
62 77 0.003371208 ubox
63 71 0.003907725 ubox
63 72 0.003180333 ubox
63 75 0.442333598 ubox
63 78 0.022278974 ubox
64 68 0.008497497 ubox
64 69 0.012344329 ubox
64 73 0.945449094 ubox
64 79 0.013824980 ubox
65 71 0.009560739 ubox
65 72 0.938869525 ubox
65 77 0.086888111 ubox
66 71 0.894390778 ubox
66 72 0.024988628 ubox
66 76 0.098796015 ubox
66 77 0.116592554 ubox
67 71 0.019721934 ubox
67 72 0.006894587 ubox
67 75 0.100693289 ubox
67 76 0.139174163 ubox
67 77 0.027219285 ubox
67 78 0.041896481 ubox
68 75 0.143278889 ubox
68 76 0.033924020 ubox
68 77 0.040741755 ubox
68 78 0.054472588 ubox
69 75 0.035931275 ubox
69 76 0.034371917 ubox
69 77 0.054039201 ubox
69 78 0.118355096 ubox
70 76 0.051617946 ubox
70 77 0.116932803 ubox
72 79 0.013043364 ubox
73 78 0.024117110 ubox
75 79 0.003238824 ubox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
17 45 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
58 79 0.9500000 lbox
59 78 0.9500000 lbox
60 77 0.9500000 lbox
61 76 0.9500000 lbox
64 73 0.9500000 lbox
65 72 0.9500000 lbox
66 71 0.9500000 lbox
showpage
end
%%EOF
