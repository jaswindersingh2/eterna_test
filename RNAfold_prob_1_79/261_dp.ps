%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (261)
} def

/sequence { (\
GGAAAAAAGAAGAAGUUCAAAAGAACACUCAAGUCAAACACAGAAAACAGUGAGACAAGAGAACUUCAGCUAACUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 67 0.009358805 ubox
1 70 0.003371753 ubox
1 71 0.009899544 ubox
1 74 0.015608615 ubox
1 75 0.018086907 ubox
1 76 0.003547324 ubox
1 77 0.015827044 ubox
1 78 0.718063690 ubox
2 66 0.009126962 ubox
2 67 0.011452119 ubox
2 70 0.010462574 ubox
2 74 0.020776522 ubox
2 75 0.004412014 ubox
2 76 0.024523248 ubox
2 77 0.718556917 ubox
2 78 0.639385606 ubox
3 65 0.008605002 ubox
3 66 0.011348972 ubox
3 75 0.025763650 ubox
3 76 0.714881896 ubox
3 77 0.638971964 ubox
4 65 0.010168989 ubox
4 71 0.006205946 ubox
4 75 0.668148061 ubox
4 76 0.630286201 ubox
4 77 0.047409446 ubox
5 71 0.012057538 ubox
5 75 0.577316157 ubox
5 76 0.060560763 ubox
5 77 0.022886028 ubox
6 71 0.015733677 ubox
6 75 0.068996971 ubox
6 76 0.027676679 ubox
6 77 0.026602721 ubox
7 66 0.006549644 ubox
7 71 0.044605426 ubox
7 75 0.030339551 ubox
7 76 0.030963902 ubox
7 77 0.003829024 ubox
8 65 0.007251728 ubox
8 71 0.926348581 ubox
8 75 0.031933809 ubox
9 18 0.011587793 ubox
9 30 0.003531003 ubox
9 64 0.007319818 ubox
9 67 0.116456382 ubox
9 70 0.959843393 ubox
9 71 0.018144055 ubox
9 74 0.031854898 ubox
9 76 0.003459906 ubox
9 77 0.021704791 ubox
9 78 0.044181666 ubox
10 17 0.011545557 ubox
10 66 0.116908468 ubox
10 71 0.025976831 ubox
10 75 0.003262944 ubox
10 76 0.023948243 ubox
10 77 0.042620135 ubox
11 16 0.010910779 ubox
11 65 0.116757059 ubox
11 71 0.013484076 ubox
11 75 0.025150816 ubox
11 76 0.038323028 ubox
11 77 0.004332300 ubox
12 28 0.003623948 ubox
12 30 0.005741848 ubox
12 64 0.116102208 ubox
12 67 0.987558244 ubox
12 70 0.012056346 ubox
12 74 0.025604432 ubox
12 75 0.024676491 ubox
12 76 0.004797221 ubox
12 77 0.046971874 ubox
12 78 0.027668098 ubox
13 29 0.005632755 ubox
13 65 0.003862277 ubox
13 66 0.988077708 ubox
13 75 0.004240546 ubox
13 76 0.053532817 ubox
13 77 0.023962069 ubox
14 65 0.986857478 ubox
14 71 0.027209698 ubox
14 75 0.058112028 ubox
14 76 0.018738870 ubox
15 26 0.173290391 ubox
15 64 0.982385623 ubox
15 70 0.027893339 ubox
15 74 0.060428076 ubox
15 75 0.006302655 ubox
16 24 0.004004804 ubox
16 25 0.179927396 ubox
16 61 0.005702328 ubox
16 62 0.011537941 ubox
16 63 0.979764587 ubox
16 69 0.027806298 ubox
16 73 0.060122859 ubox
17 21 0.003755944 ubox
17 22 0.005335745 ubox
17 23 0.005780426 ubox
17 24 0.204427104 ubox
17 25 0.004434923 ubox
17 60 0.015452730 ubox
17 61 0.006808322 ubox
17 62 0.969996327 ubox
17 63 0.005185518 ubox
17 68 0.026639276 ubox
17 72 0.055324310 ubox
18 23 0.215311945 ubox
18 59 0.017019357 ubox
18 61 0.852800467 ubox
18 69 0.016017070 ubox
19 29 0.009337447 ubox
19 66 0.003718106 ubox
19 71 0.012569076 ubox
20 29 0.020879069 ubox
21 29 0.015911837 ubox
21 66 0.030130751 ubox
22 29 0.172658931 ubox
22 65 0.031338029 ubox
22 71 0.003548548 ubox
23 28 0.192862450 ubox
23 29 0.017658470 ubox
23 30 0.385727740 ubox
23 35 0.044598765 ubox
23 56 0.125736103 ubox
23 64 0.031401183 ubox
23 66 0.011466359 ubox
23 67 0.049144187 ubox
23 70 0.003442050 ubox
24 29 0.361258381 ubox
24 34 0.033659260 ubox
24 65 0.011661884 ubox
24 66 0.049054475 ubox
25 29 0.013233701 ubox
25 34 0.042860401 ubox
25 51 0.004367870 ubox
25 65 0.044868772 ubox
26 33 0.053003663 ubox
26 50 0.004373074 ubox
26 52 0.402194356 ubox
26 54 0.007259377 ubox
26 59 0.005941047 ubox
26 61 0.012256716 ubox
27 34 0.017011290 ubox
27 51 0.403713377 ubox
28 33 0.018602047 ubox
28 50 0.403813852 ubox
28 52 0.003340304 ubox
28 54 0.070982647 ubox
28 59 0.099910174 ubox
28 61 0.518299219 ubox
29 44 0.014033208 ubox
29 49 0.389142561 ubox
29 53 0.071296558 ubox
29 57 0.005446011 ubox
29 58 0.099110626 ubox
29 59 0.007578603 ubox
29 60 0.783067801 ubox
29 62 0.006612917 ubox
30 43 0.017802729 ubox
30 50 0.003327539 ubox
30 52 0.071171088 ubox
30 59 0.787919756 ubox
30 61 0.007124727 ubox
31 51 0.068046624 ubox
32 51 0.004965445 ubox
33 39 0.011599589 ubox
33 41 0.019740891 ubox
33 48 0.048474610 ubox
33 56 0.907195420 ubox
34 38 0.010569303 ubox
34 40 0.018995258 ubox
34 42 0.006934276 ubox
34 43 0.016670795 ubox
34 44 0.394450529 ubox
34 45 0.016757074 ubox
34 46 0.008194627 ubox
34 47 0.044951320 ubox
34 49 0.005950223 ubox
34 53 0.007932045 ubox
34 55 0.908276003 ubox
34 57 0.003768304 ubox
34 60 0.008257383 ubox
35 43 0.397049018 ubox
35 50 0.006193579 ubox
35 52 0.008170147 ubox
35 54 0.907818030 ubox
35 59 0.008752729 ubox
36 51 0.007205801 ubox
37 51 0.006793132 ubox
38 51 0.216726034 ubox
39 43 0.014701130 ubox
39 50 0.217007655 ubox
39 52 0.882960147 ubox
39 54 0.004978932 ubox
40 51 0.883858862 ubox
41 50 0.883597236 ubox
41 52 0.021460011 ubox
42 51 0.021444222 ubox
43 48 0.275815582 ubox
50 56 0.005604906 ubox
51 55 0.005057659 ubox
52 56 0.003399750 ubox
57 66 0.004357374 ubox
58 65 0.005206778 ubox
59 64 0.005392622 ubox
59 67 0.006243694 ubox
60 66 0.006143391 ubox
60 71 0.003895888 ubox
61 65 0.004174074 ubox
61 67 0.004426398 ubox
61 70 0.004114596 ubox
62 66 0.004018845 ubox
62 71 0.003262905 ubox
64 69 0.006715425 ubox
65 72 0.004185231 ubox
68 75 0.027409581 ubox
68 76 0.003805856 ubox
68 77 0.004749164 ubox
69 74 0.030500963 ubox
69 75 0.003918653 ubox
69 76 0.004661384 ubox
69 78 0.007954161 ubox
70 79 0.006292504 ubox
72 77 0.004069564 ubox
74 79 0.012084007 ubox
1 78 0.9500000 lbox
2 77 0.9500000 lbox
3 76 0.9500000 lbox
4 75 0.9500000 lbox
8 71 0.9500000 lbox
9 70 0.9500000 lbox
12 67 0.9500000 lbox
13 66 0.9500000 lbox
14 65 0.9500000 lbox
15 64 0.9500000 lbox
16 63 0.9500000 lbox
17 62 0.9500000 lbox
18 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
showpage
end
%%EOF
