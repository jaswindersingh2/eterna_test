%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (116)
} def

/sequence { (\
GGAAAAGGUAUGCAUCAAAAGCGAAAAGGAUACGGUCGAAAGAUGGUAUCAGCGAUGGGUACCAAAAAGUAUCGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.009374383 ubox
1 16 0.005216251 ubox
1 22 0.008519126 ubox
1 63 0.004375271 ubox
1 70 0.022697372 ubox
1 72 0.004671841 ubox
1 73 0.034012874 ubox
1 75 0.020422728 ubox
1 76 0.014028777 ubox
1 78 0.078041873 ubox
2 15 0.004218889 ubox
2 16 0.010225398 ubox
2 22 0.004850007 ubox
2 62 0.003758214 ubox
2 70 0.018091898 ubox
2 72 0.031175457 ubox
2 73 0.040206817 ubox
2 75 0.016158962 ubox
2 77 0.062962527 ubox
2 78 0.109625177 ubox
3 11 0.007123473 ubox
3 15 0.009924019 ubox
3 70 0.018772624 ubox
3 72 0.039351130 ubox
3 76 0.051439594 ubox
3 77 0.101139890 ubox
4 70 0.021391001 ubox
4 72 0.005505850 ubox
4 76 0.072930419 ubox
4 77 0.006726534 ubox
5 70 0.011950042 ubox
5 72 0.006887615 ubox
5 76 0.006247629 ubox
5 77 0.008489701 ubox
6 11 0.006729843 ubox
6 70 0.009844335 ubox
6 72 0.010126344 ubox
6 76 0.009509127 ubox
6 77 0.007086211 ubox
7 13 0.014168761 ubox
7 16 0.031757804 ubox
7 22 0.007171147 ubox
7 50 0.004584815 ubox
7 63 0.992044664 ubox
7 73 0.019448516 ubox
7 75 0.006544639 ubox
7 76 0.007468900 ubox
7 78 0.011902159 ubox
8 13 0.005441380 ubox
8 15 0.030895656 ubox
8 16 0.005860792 ubox
8 22 0.014056045 ubox
8 49 0.004597816 ubox
8 62 0.993133995 ubox
8 72 0.018010145 ubox
8 75 0.007703059 ubox
8 77 0.008675184 ubox
8 78 0.005156077 ubox
9 14 0.029463194 ubox
9 20 0.005970030 ubox
9 21 0.013821610 ubox
9 24 0.011665282 ubox
9 25 0.017209319 ubox
9 26 0.004508467 ubox
9 27 0.004114390 ubox
9 48 0.004599381 ubox
9 61 0.992915990 ubox
9 71 0.017909296 ubox
9 74 0.007471066 ubox
10 47 0.004582120 ubox
10 60 0.992835937 ubox
10 70 0.017671441 ubox
10 72 0.005101448 ubox
11 17 0.007507902 ubox
11 18 0.006275087 ubox
11 19 0.007837423 ubox
11 20 0.005003891 ubox
11 23 0.056459414 ubox
11 24 0.006663943 ubox
11 46 0.004194332 ubox
11 59 0.989323485 ubox
11 69 0.016924202 ubox
11 71 0.005187453 ubox
12 16 0.007883565 ubox
12 22 0.089622011 ubox
12 53 0.003720907 ubox
12 60 0.003513008 ubox
12 70 0.005233857 ubox
12 75 0.003377718 ubox
13 21 0.089643385 ubox
13 28 0.004537743 ubox
13 45 0.004573809 ubox
13 52 0.003726651 ubox
13 57 0.992993365 ubox
13 59 0.003665970 ubox
13 69 0.005243389 ubox
13 74 0.003374554 ubox
14 44 0.004624258 ubox
14 56 0.992598651 ubox
14 60 0.004031079 ubox
15 19 0.010770815 ubox
15 20 0.010845685 ubox
15 24 0.026329653 ubox
15 43 0.004630591 ubox
15 54 0.004142903 ubox
15 55 0.992073233 ubox
15 58 0.006115387 ubox
15 59 0.004256380 ubox
16 21 0.009572295 ubox
16 23 0.031696913 ubox
16 28 0.006618435 ubox
16 42 0.004621850 ubox
16 52 0.006170581 ubox
16 54 0.983276723 ubox
16 57 0.006569608 ubox
16 58 0.004540600 ubox
17 56 0.006187690 ubox
19 77 0.024341906 ubox
20 56 0.003915973 ubox
20 60 0.007991042 ubox
20 76 0.027084139 ubox
21 50 0.010095669 ubox
21 53 0.575812198 ubox
21 60 0.005011317 ubox
21 75 0.027468975 ubox
22 28 0.405862073 ubox
22 29 0.030184008 ubox
22 38 0.004603772 ubox
22 52 0.573428434 ubox
22 54 0.122757666 ubox
22 57 0.006340980 ubox
22 58 0.011238569 ubox
22 59 0.005100187 ubox
22 74 0.027460318 ubox
22 79 0.024579883 ubox
23 37 0.004620531 ubox
23 50 0.066468445 ubox
23 53 0.217785266 ubox
23 56 0.005874318 ubox
23 73 0.025447209 ubox
23 78 0.029243524 ubox
24 36 0.004442113 ubox
24 49 0.058919016 ubox
24 56 0.008400737 ubox
24 72 0.022818640 ubox
24 77 0.028291288 ubox
25 49 0.022253968 ubox
25 76 0.016938602 ubox
26 49 0.008401332 ubox
26 70 0.003988069 ubox
27 49 0.006706992 ubox
28 33 0.004307073 ubox
28 49 0.005636287 ubox
28 50 0.058169276 ubox
28 53 0.074477798 ubox
28 78 0.004396188 ubox
29 49 0.031760186 ubox
29 50 0.990816476 ubox
29 53 0.005958374 ubox
30 49 0.996528710 ubox
31 48 0.999374373 ubox
31 71 0.003260237 ubox
32 47 0.999698444 ubox
32 70 0.003261596 ubox
33 45 0.003283586 ubox
33 46 0.999761821 ubox
33 69 0.003257131 ubox
34 44 0.003201001 ubox
35 44 0.996113407 ubox
36 43 0.999758006 ubox
37 42 0.999462222 ubox
45 63 0.004302701 ubox
46 62 0.004306749 ubox
47 61 0.004305080 ubox
48 60 0.004290232 ubox
49 59 0.004123032 ubox
50 58 0.003945853 ubox
51 60 0.003962559 ubox
51 76 0.093621270 ubox
51 77 0.003930278 ubox
52 60 0.010393406 ubox
52 70 0.012602622 ubox
52 75 0.105323948 ubox
53 58 0.006870483 ubox
53 59 0.010806431 ubox
53 69 0.012914627 ubox
53 74 0.105385951 ubox
53 79 0.031384071 ubox
54 73 0.105029166 ubox
54 77 0.003986397 ubox
54 78 0.034189131 ubox
55 72 0.104258378 ubox
55 76 0.005313652 ubox
55 77 0.033175248 ubox
56 64 0.026154049 ubox
56 71 0.100883659 ubox
57 62 0.005096664 ubox
57 63 0.029768263 ubox
57 70 0.096374816 ubox
57 75 0.031519564 ubox
58 62 0.029342198 ubox
58 63 0.006327494 ubox
58 70 0.010236364 ubox
58 73 0.038695411 ubox
59 72 0.041342408 ubox
59 73 0.007422230 ubox
60 64 0.004216464 ubox
60 65 0.014218271 ubox
60 66 0.009521862 ubox
60 67 0.022925184 ubox
60 68 0.015210444 ubox
60 69 0.007618522 ubox
60 71 0.046168676 ubox
61 70 0.048941098 ubox
62 69 0.049566229 ubox
63 69 0.008643717 ubox
64 70 0.012554977 ubox
64 72 0.008450781 ubox
64 76 0.005803065 ubox
64 77 0.017051611 ubox
65 70 0.016059731 ubox
65 72 0.014579243 ubox
65 76 0.015151878 ubox
65 77 0.024688874 ubox
66 70 0.009990017 ubox
66 72 0.011441214 ubox
66 76 0.021045204 ubox
66 77 0.050348626 ubox
67 72 0.012465452 ubox
67 76 0.045470764 ubox
67 77 0.621116302 ubox
68 72 0.007696840 ubox
68 76 0.692565915 ubox
68 77 0.028573250 ubox
69 73 0.032819140 ubox
69 75 0.703298166 ubox
69 76 0.024650881 ubox
69 77 0.013977112 ubox
69 78 0.091861737 ubox
70 74 0.657968745 ubox
70 79 0.007991049 ubox
71 76 0.014501766 ubox
71 77 0.025088195 ubox
72 79 0.007928233 ubox
73 79 0.069297400 ubox
74 78 0.070985642 ubox
75 79 0.010067497 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
