%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1025)
} def

/sequence { (\
GGAAAAGCCAAAGGCAAGCAGAAACUGCAAGCAUCAAAGAUGCAACACGAAACGUGAAGCGAAACGCACAUAUACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.006106381 ubox
1 9 0.067969525 ubox
1 46 0.020917889 ubox
1 48 0.010392512 ubox
1 53 0.006601762 ubox
1 60 0.010935028 ubox
1 65 0.012379676 ubox
1 67 0.014151571 ubox
1 69 0.123633331 ubox
1 71 0.012474652 ubox
1 73 0.011579616 ubox
1 75 0.084300804 ubox
1 76 0.086353690 ubox
1 77 0.017253217 ubox
1 78 0.539565529 ubox
2 8 0.067899818 ubox
2 9 0.006091363 ubox
2 19 0.003262084 ubox
2 46 0.011725355 ubox
2 48 0.005856287 ubox
2 53 0.004074060 ubox
2 60 0.009316709 ubox
2 65 0.009464159 ubox
2 67 0.012253016 ubox
2 69 0.064839250 ubox
2 71 0.011853082 ubox
2 73 0.013109816 ubox
2 75 0.099149089 ubox
2 76 0.022017280 ubox
2 77 0.527177686 ubox
2 78 0.766412991 ubox
3 71 0.018625051 ubox
3 73 0.027474207 ubox
3 76 0.498273850 ubox
3 77 0.759539495 ubox
4 71 0.021491631 ubox
4 73 0.035140706 ubox
4 76 0.684129233 ubox
4 77 0.049752858 ubox
5 71 0.024868909 ubox
5 73 0.041054516 ubox
5 76 0.057522401 ubox
5 77 0.041484851 ubox
6 71 0.024145259 ubox
6 73 0.062815663 ubox
6 76 0.046857875 ubox
6 77 0.015400393 ubox
7 15 0.993349521 ubox
7 60 0.006752007 ubox
7 67 0.035101169 ubox
7 69 0.005519579 ubox
7 73 0.005821404 ubox
7 75 0.026614135 ubox
7 78 0.004200535 ubox
8 13 0.010272915 ubox
8 14 0.994476801 ubox
8 59 0.006716724 ubox
8 66 0.035067996 ubox
9 13 0.987253461 ubox
9 14 0.010480396 ubox
9 79 0.009457932 ubox
10 77 0.004180011 ubox
11 71 0.003787225 ubox
11 76 0.003864201 ubox
11 77 0.042065217 ubox
12 76 0.046572086 ubox
12 77 0.021442784 ubox
13 69 0.015556142 ubox
13 75 0.047025650 ubox
13 76 0.025119079 ubox
13 78 0.013434490 ubox
14 28 0.016064487 ubox
14 32 0.010842234 ubox
14 60 0.038290273 ubox
14 67 0.019609558 ubox
14 69 0.007198409 ubox
14 75 0.025462348 ubox
14 77 0.010229491 ubox
14 78 0.005987715 ubox
15 27 0.016096247 ubox
15 31 0.010943927 ubox
15 59 0.038290939 ubox
15 66 0.019611568 ubox
15 79 0.003520245 ubox
16 26 0.013003788 ubox
16 71 0.008269752 ubox
16 73 0.009760382 ubox
16 76 0.007369958 ubox
16 77 0.017543630 ubox
17 26 0.016021621 ubox
17 71 0.009908764 ubox
17 73 0.009182750 ubox
17 76 0.018161404 ubox
17 77 0.007452749 ubox
18 25 0.018549146 ubox
18 28 0.998243637 ubox
18 67 0.004325408 ubox
18 75 0.008027714 ubox
19 27 0.999305126 ubox
19 66 0.004316158 ubox
20 26 0.996824139 ubox
21 25 0.974977321 ubox
21 26 0.005958444 ubox
21 28 0.006042856 ubox
21 78 0.007960365 ubox
22 77 0.007886415 ubox
23 76 0.007112280 ubox
26 61 0.004334858 ubox
26 68 0.004558233 ubox
27 60 0.005275984 ubox
27 67 0.005080964 ubox
28 59 0.005274997 ubox
28 66 0.005075415 ubox
29 71 0.004813788 ubox
29 73 0.004830977 ubox
29 76 0.003617228 ubox
29 77 0.008259586 ubox
30 71 0.005681595 ubox
30 73 0.005661707 ubox
30 76 0.008673758 ubox
30 77 0.003622961 ubox
31 43 0.998744176 ubox
31 67 0.004754720 ubox
31 75 0.003554674 ubox
32 39 0.003193571 ubox
32 42 0.999794939 ubox
32 66 0.004750926 ubox
33 41 0.999300295 ubox
34 39 0.008313549 ubox
34 40 0.998681421 ubox
35 39 0.990394955 ubox
41 61 0.009103700 ubox
42 60 0.015021356 ubox
43 59 0.015160435 ubox
44 71 0.003915890 ubox
44 73 0.003893748 ubox
44 77 0.003290541 ubox
45 55 0.033438473 ubox
45 71 0.003982139 ubox
45 73 0.004088521 ubox
45 76 0.003402092 ubox
46 54 0.034517996 ubox
46 56 0.976468715 ubox
47 55 0.980804659 ubox
48 54 0.981361408 ubox
48 56 0.014951085 ubox
48 61 0.003798445 ubox
48 66 0.022044741 ubox
48 79 0.132216582 ubox
49 53 0.918124084 ubox
49 55 0.012584611 ubox
49 60 0.003839553 ubox
49 65 0.022359815 ubox
49 67 0.006080262 ubox
49 69 0.009199067 ubox
49 75 0.010793166 ubox
49 78 0.139068473 ubox
50 55 0.003374007 ubox
50 73 0.005088060 ubox
50 76 0.004452142 ubox
50 77 0.138524380 ubox
51 73 0.005374836 ubox
51 76 0.129626918 ubox
51 77 0.007592001 ubox
52 71 0.008740732 ubox
52 73 0.036971758 ubox
52 76 0.010278812 ubox
53 61 0.027851932 ubox
53 66 0.055834670 ubox
54 60 0.028128482 ubox
54 65 0.056939927 ubox
54 67 0.030824436 ubox
54 69 0.034994924 ubox
54 71 0.101825429 ubox
54 73 0.086777888 ubox
54 75 0.051107421 ubox
55 59 0.026315359 ubox
55 64 0.056831132 ubox
55 66 0.030844172 ubox
55 68 0.034899371 ubox
55 70 0.105544421 ubox
55 72 0.087514922 ubox
55 74 0.051051282 ubox
55 79 0.012040188 ubox
56 65 0.030872393 ubox
56 67 0.027647954 ubox
56 69 0.106622492 ubox
56 71 0.080942711 ubox
56 73 0.048096003 ubox
56 78 0.023793652 ubox
57 71 0.046961275 ubox
57 73 0.008258363 ubox
57 77 0.024899647 ubox
58 71 0.028782816 ubox
58 73 0.011578775 ubox
58 76 0.025559963 ubox
59 65 0.018534717 ubox
59 67 0.987235922 ubox
59 69 0.028976777 ubox
59 71 0.004306517 ubox
59 75 0.024017816 ubox
60 66 0.988309566 ubox
60 79 0.038008518 ubox
61 65 0.924604352 ubox
61 67 0.032745560 ubox
61 69 0.013246315 ubox
61 73 0.004746527 ubox
61 75 0.006387711 ubox
61 78 0.041916909 ubox
62 71 0.006346913 ubox
62 73 0.004648972 ubox
62 77 0.041609650 ubox
63 71 0.004528671 ubox
63 73 0.003169645 ubox
63 76 0.038277114 ubox
64 71 0.005326973 ubox
64 73 0.005307383 ubox
64 76 0.003600501 ubox
65 79 0.004718143 ubox
66 71 0.003638463 ubox
66 73 0.009860385 ubox
66 75 0.021859895 ubox
66 78 0.004870473 ubox
68 73 0.029236120 ubox
68 76 0.008652370 ubox
68 77 0.006177691 ubox
69 79 0.006766184 ubox
70 76 0.011897060 ubox
70 77 0.015104906 ubox
72 76 0.007378848 ubox
72 77 0.011776425 ubox
75 79 0.004990871 ubox
2 78 0.9500000 lbox
3 77 0.9500000 lbox
4 76 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
showpage
end
%%EOF
