%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (50)
} def

/sequence { (\
GGAAAAAGGACCCAAGCAAAAGCUUGGCAGCUGUUGAAAACAACAGUCGAAAACGACAGAAGCGGUCCGCAUGGAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.025553693 ubox
1 12 0.038535355 ubox
1 13 0.004609185 ubox
1 28 0.011696152 ubox
1 31 0.004267158 ubox
1 32 0.004035003 ubox
1 41 0.006080798 ubox
1 48 0.012595032 ubox
1 54 0.015676285 ubox
1 57 0.023002145 ubox
1 63 0.022415593 ubox
1 68 0.056239189 ubox
1 70 0.015393774 ubox
1 72 0.026257126 ubox
1 76 0.033460404 ubox
1 77 0.017515842 ubox
1 78 0.384234822 ubox
2 11 0.044063261 ubox
2 12 0.005089594 ubox
2 28 0.010088096 ubox
2 31 0.005467909 ubox
2 47 0.004080425 ubox
2 48 0.013420162 ubox
2 54 0.009825876 ubox
2 57 0.011737760 ubox
2 63 0.019232202 ubox
2 67 0.056207249 ubox
2 68 0.003569876 ubox
2 70 0.020911330 ubox
2 72 0.022338663 ubox
2 76 0.023627504 ubox
2 77 0.377607756 ubox
2 78 0.372654034 ubox
3 35 0.006345457 ubox
3 47 0.007808597 ubox
3 66 0.052452122 ubox
3 72 0.060033407 ubox
3 76 0.358614075 ubox
3 77 0.368563307 ubox
4 34 0.006268008 ubox
4 35 0.012103748 ubox
4 72 0.128515279 ubox
4 76 0.325719097 ubox
4 77 0.017066212 ubox
5 34 0.011149134 ubox
5 35 0.007023553 ubox
5 72 0.125645580 ubox
5 76 0.018470191 ubox
5 77 0.009057174 ubox
6 32 0.006674385 ubox
6 34 0.006259304 ubox
6 35 0.003371961 ubox
6 72 0.105501863 ubox
6 76 0.007380544 ubox
6 77 0.011421003 ubox
7 32 0.131895688 ubox
7 72 0.094307671 ubox
7 76 0.011664339 ubox
7 77 0.007544576 ubox
8 28 0.044834781 ubox
8 31 0.157407053 ubox
8 32 0.026613570 ubox
8 48 0.011325386 ubox
8 54 0.011974815 ubox
8 57 0.019753557 ubox
8 63 0.020508496 ubox
8 68 0.904381042 ubox
8 70 0.009902127 ubox
8 72 0.008237487 ubox
8 76 0.005069036 ubox
8 77 0.005032072 ubox
8 78 0.070904455 ubox
9 28 0.063652814 ubox
9 31 0.038640557 ubox
9 32 0.003332583 ubox
9 35 0.005348090 ubox
9 47 0.003626898 ubox
9 48 0.016975211 ubox
9 54 0.009304465 ubox
9 57 0.012742159 ubox
9 63 0.019570631 ubox
9 67 0.905362879 ubox
9 68 0.005785457 ubox
9 70 0.006264206 ubox
9 77 0.060557586 ubox
9 78 0.087985356 ubox
10 34 0.005586922 ubox
10 47 0.012436757 ubox
10 66 0.905119289 ubox
10 76 0.045182929 ubox
10 77 0.076895744 ubox
11 27 0.043395182 ubox
11 30 0.034488001 ubox
11 33 0.005618042 ubox
11 46 0.010294146 ubox
11 49 0.005498919 ubox
11 55 0.008082852 ubox
11 59 0.011768117 ubox
11 62 0.014300434 ubox
11 64 0.018452628 ubox
11 65 0.904350889 ubox
11 69 0.003887623 ubox
11 73 0.007368287 ubox
11 74 0.025244742 ubox
11 79 0.014277797 ubox
12 26 0.031164820 ubox
12 27 0.602584887 ubox
12 62 0.004491156 ubox
12 64 0.790615141 ubox
12 65 0.005400146 ubox
12 73 0.021167677 ubox
12 74 0.018745403 ubox
13 26 0.995351687 ubox
13 27 0.017395687 ubox
13 59 0.003874868 ubox
13 62 0.048924237 ubox
13 64 0.006368900 ubox
13 73 0.018610774 ubox
14 25 0.997815846 ubox
14 72 0.017900501 ubox
15 24 0.998361079 ubox
15 32 0.004320003 ubox
16 23 0.998976601 ubox
16 28 0.009294851 ubox
16 31 0.005179201 ubox
16 63 0.027559676 ubox
16 70 0.017325866 ubox
17 22 0.997539354 ubox
17 26 0.006631161 ubox
17 27 0.008541846 ubox
17 30 0.005173971 ubox
17 36 0.007620857 ubox
17 59 0.008405332 ubox
17 62 0.027545657 ubox
17 69 0.017311560 ubox
18 25 0.007486615 ubox
18 35 0.007652329 ubox
19 24 0.006646485 ubox
19 25 0.003289531 ubox
19 34 0.006594573 ubox
19 66 0.004472271 ubox
20 24 0.003169133 ubox
20 66 0.003525422 ubox
21 32 0.028278055 ubox
22 28 0.008101316 ubox
22 31 0.033609034 ubox
22 54 0.009804147 ubox
22 57 0.006301606 ubox
22 63 0.018568660 ubox
23 27 0.008052720 ubox
23 30 0.033627380 ubox
23 55 0.008082566 ubox
23 62 0.018574525 ubox
24 29 0.030719457 ubox
24 50 0.003794300 ubox
24 51 0.003865259 ubox
24 52 0.003612019 ubox
24 53 0.013236380 ubox
24 56 0.005117423 ubox
24 61 0.018289856 ubox
25 49 0.004816262 ubox
25 50 0.005281062 ubox
25 51 0.004106301 ubox
25 52 0.015163229 ubox
25 55 0.005854546 ubox
25 58 0.003728524 ubox
25 60 0.017115830 ubox
26 31 0.014877750 ubox
26 48 0.006835186 ubox
26 54 0.007066693 ubox
26 57 0.004434480 ubox
27 31 0.023732253 ubox
27 32 0.005087328 ubox
27 34 0.010298501 ubox
27 47 0.006254957 ubox
27 48 0.059084620 ubox
27 54 0.017899748 ubox
27 57 0.010572094 ubox
27 63 0.416133935 ubox
27 66 0.004177201 ubox
27 70 0.003507553 ubox
28 33 0.010951856 ubox
28 36 0.010467701 ubox
28 46 0.005820677 ubox
28 49 0.340849681 ubox
28 55 0.007403310 ubox
28 59 0.016364502 ubox
28 62 0.416422667 ubox
28 64 0.035596953 ubox
28 65 0.014553237 ubox
28 69 0.003602552 ubox
28 73 0.009274300 ubox
28 74 0.003213862 ubox
28 79 0.007029013 ubox
29 35 0.010205154 ubox
29 47 0.023297897 ubox
29 72 0.008619120 ubox
30 34 0.006935011 ubox
30 44 0.028699031 ubox
30 47 0.670034015 ubox
30 48 0.107547405 ubox
30 54 0.004065495 ubox
30 57 0.006727329 ubox
30 63 0.229211823 ubox
30 66 0.006316941 ubox
30 70 0.006361363 ubox
30 78 0.004953259 ubox
31 36 0.005917524 ubox
31 46 0.737525028 ubox
31 59 0.335779552 ubox
31 62 0.229306190 ubox
31 64 0.005337397 ubox
31 65 0.007538618 ubox
31 69 0.006350566 ubox
31 79 0.003963833 ubox
32 42 0.046927547 ubox
32 45 0.890642300 ubox
32 58 0.324582241 ubox
32 60 0.010164157 ubox
32 61 0.191170109 ubox
32 64 0.007612805 ubox
33 41 0.053015309 ubox
33 44 0.948507129 ubox
33 54 0.003225320 ubox
33 57 0.308072350 ubox
33 63 0.008208320 ubox
34 40 0.052243279 ubox
34 43 0.948232884 ubox
34 50 0.005497413 ubox
34 53 0.003631839 ubox
34 56 0.307760369 ubox
34 59 0.008138290 ubox
34 62 0.008130004 ubox
35 39 0.043508600 ubox
35 40 0.007459370 ubox
35 42 0.947271854 ubox
35 43 0.004440111 ubox
35 45 0.010155693 ubox
35 49 0.009339810 ubox
35 52 0.004791656 ubox
35 55 0.306970334 ubox
35 58 0.009935132 ubox
35 61 0.007558312 ubox
35 79 0.004333074 ubox
36 41 0.941949616 ubox
36 44 0.011258942 ubox
36 48 0.014088923 ubox
36 54 0.303295882 ubox
36 57 0.007166332 ubox
36 78 0.008352014 ubox
37 47 0.013819332 ubox
37 77 0.008267565 ubox
38 47 0.004471163 ubox
38 76 0.007868567 ubox
39 47 0.005497926 ubox
40 47 0.127266482 ubox
41 46 0.131088725 ubox
41 49 0.128837777 ubox
41 62 0.005465049 ubox
41 73 0.007723044 ubox
42 47 0.024620583 ubox
42 72 0.006921748 ubox
43 47 0.022701273 ubox
44 49 0.031978929 ubox
44 59 0.021139468 ubox
46 54 0.010770860 ubox
46 57 0.599342510 ubox
46 63 0.003368851 ubox
46 76 0.003533773 ubox
47 51 0.003659795 ubox
47 52 0.004337609 ubox
47 53 0.011650875 ubox
47 56 0.643572308 ubox
47 60 0.048250571 ubox
47 65 0.007672845 ubox
47 75 0.006827078 ubox
48 55 0.753283545 ubox
48 59 0.083807304 ubox
48 62 0.022446551 ubox
48 64 0.115344508 ubox
48 65 0.003475765 ubox
48 69 0.006489355 ubox
48 73 0.004979711 ubox
48 74 0.011804028 ubox
48 79 0.057043509 ubox
49 54 0.736099855 ubox
49 57 0.042809179 ubox
49 63 0.120415302 ubox
49 67 0.003736972 ubox
49 68 0.006790172 ubox
49 70 0.003787343 ubox
49 72 0.004456113 ubox
49 78 0.062813917 ubox
50 66 0.003759745 ubox
50 72 0.008809155 ubox
50 77 0.061779551 ubox
51 76 0.051993672 ubox
51 77 0.003489969 ubox
52 66 0.003664594 ubox
52 76 0.003897772 ubox
53 66 0.014943681 ubox
53 76 0.003282782 ubox
54 59 0.161589017 ubox
54 62 0.091852318 ubox
54 64 0.297589258 ubox
54 65 0.018991248 ubox
54 69 0.013154244 ubox
54 73 0.041976312 ubox
54 74 0.007976491 ubox
54 79 0.069978477 ubox
55 63 0.308605411 ubox
55 67 0.038748222 ubox
55 68 0.009872850 ubox
55 70 0.003380332 ubox
55 72 0.031187708 ubox
55 77 0.003782246 ubox
55 78 0.073513226 ubox
56 66 0.040851519 ubox
56 72 0.005974288 ubox
56 76 0.005606545 ubox
56 77 0.070529540 ubox
57 62 0.255346308 ubox
57 64 0.079875763 ubox
57 65 0.041313643 ubox
57 69 0.010952646 ubox
57 73 0.044067434 ubox
57 74 0.016087764 ubox
57 79 0.009351001 ubox
58 72 0.043749269 ubox
58 76 0.007017720 ubox
59 63 0.059327253 ubox
59 67 0.015829236 ubox
59 68 0.018793560 ubox
59 70 0.003545301 ubox
59 72 0.005524920 ubox
59 77 0.003788704 ubox
59 78 0.074521495 ubox
60 66 0.015290417 ubox
60 72 0.030073490 ubox
60 76 0.003441853 ubox
60 77 0.072264149 ubox
61 66 0.005702185 ubox
61 72 0.023747722 ubox
61 76 0.044844036 ubox
61 77 0.006423414 ubox
62 68 0.003918940 ubox
62 70 0.119474720 ubox
62 76 0.004250475 ubox
62 77 0.006443693 ubox
62 78 0.080627918 ubox
63 69 0.119625590 ubox
63 73 0.007084662 ubox
63 74 0.025639290 ubox
63 79 0.192892542 ubox
64 68 0.111915728 ubox
64 70 0.004954623 ubox
64 72 0.006662038 ubox
64 76 0.010657093 ubox
64 77 0.215206092 ubox
64 78 0.209415357 ubox
65 70 0.003862309 ubox
65 72 0.025016111 ubox
65 76 0.350255093 ubox
65 77 0.148105734 ubox
65 78 0.011415156 ubox
66 71 0.023504687 ubox
66 75 0.395006158 ubox
67 74 0.398546690 ubox
68 73 0.398046189 ubox
68 74 0.015097403 ubox
68 79 0.007374805 ubox
69 76 0.011495320 ubox
69 77 0.007274372 ubox
69 78 0.048870979 ubox
70 74 0.029020013 ubox
70 79 0.033873878 ubox
71 76 0.014377771 ubox
71 77 0.029693858 ubox
72 79 0.069874842 ubox
73 77 0.006323851 ubox
73 78 0.113403567 ubox
74 78 0.033969577 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
