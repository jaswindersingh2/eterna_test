%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (923)
} def

/sequence { (\
GGAAAAGAUAGGCAUGAAAAGCGAAAAGCUAUGGCUGGAAACAGGCAUAGAGCCAUGGCUAUCAAAAAGUACUGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 63 0.004503656 ubox
1 70 0.022490245 ubox
1 72 0.030018978 ubox
1 73 0.028341250 ubox
1 75 0.014199789 ubox
1 76 0.013538528 ubox
1 78 0.087519304 ubox
2 63 0.007669557 ubox
2 70 0.018231529 ubox
2 72 0.029951859 ubox
2 75 0.015601235 ubox
2 77 0.074970314 ubox
2 78 0.107662326 ubox
3 62 0.006840172 ubox
3 70 0.021122846 ubox
3 73 0.010630034 ubox
3 76 0.066472809 ubox
3 77 0.099204916 ubox
4 70 0.015254761 ubox
4 73 0.004023927 ubox
4 76 0.073335461 ubox
4 77 0.006783158 ubox
5 70 0.003736162 ubox
5 73 0.008056952 ubox
5 76 0.006378901 ubox
5 77 0.023071464 ubox
6 70 0.008383812 ubox
6 73 0.054320473 ubox
6 76 0.027820499 ubox
6 77 0.004613103 ubox
7 63 0.983886083 ubox
7 72 0.041530181 ubox
7 73 0.006745837 ubox
7 75 0.028228390 ubox
7 77 0.004060259 ubox
7 78 0.077084234 ubox
8 62 0.985308401 ubox
8 70 0.012584321 ubox
8 76 0.003400544 ubox
8 77 0.071231368 ubox
9 25 0.004578408 ubox
9 61 0.985291796 ubox
9 69 0.011959562 ubox
9 71 0.018841505 ubox
9 74 0.027644789 ubox
9 79 0.009902128 ubox
10 60 0.985477043 ubox
10 70 0.018710752 ubox
10 73 0.028010258 ubox
10 76 0.011502230 ubox
10 77 0.111052846 ubox
11 54 0.003851673 ubox
11 59 0.985499875 ubox
11 60 0.006304200 ubox
11 72 0.027938682 ubox
11 75 0.009424688 ubox
11 76 0.153391160 ubox
11 77 0.003689372 ubox
11 78 0.004413684 ubox
12 22 0.035070108 ubox
12 53 0.003962794 ubox
12 59 0.009941321 ubox
12 70 0.015188995 ubox
12 72 0.003246843 ubox
12 75 0.158354851 ubox
13 21 0.035096518 ubox
13 52 0.003956030 ubox
13 57 0.985545326 ubox
13 58 0.009372765 ubox
13 69 0.015892586 ubox
13 74 0.158544701 ubox
14 56 0.985276430 ubox
14 70 0.007651675 ubox
14 73 0.153494942 ubox
15 19 0.004135978 ubox
15 20 0.012236835 ubox
15 23 0.005507659 ubox
15 24 0.003707261 ubox
15 55 0.984898776 ubox
15 64 0.056390196 ubox
15 65 0.006086543 ubox
15 67 0.004901070 ubox
15 68 0.005369353 ubox
15 69 0.008672699 ubox
15 71 0.068127170 ubox
15 79 0.006095181 ubox
16 22 0.014870934 ubox
16 53 0.054415379 ubox
16 54 0.980969822 ubox
16 63 0.057646728 ubox
16 70 0.067923090 ubox
16 72 0.047550872 ubox
16 78 0.009878833 ubox
17 30 0.003965572 ubox
17 32 0.004901365 ubox
17 62 0.055587498 ubox
17 70 0.055641837 ubox
17 77 0.009053753 ubox
18 30 0.005056396 ubox
18 32 0.018836593 ubox
18 62 0.011495051 ubox
18 70 0.019578825 ubox
18 76 0.004629100 ubox
19 30 0.018393446 ubox
19 32 0.008409151 ubox
19 60 0.010802535 ubox
19 70 0.004235943 ubox
19 77 0.013273266 ubox
20 30 0.401007164 ubox
20 60 0.056443405 ubox
20 76 0.016518962 ubox
21 29 0.538685072 ubox
21 53 0.482942524 ubox
21 54 0.018347026 ubox
21 59 0.059187419 ubox
21 63 0.003675562 ubox
21 70 0.010007606 ubox
21 75 0.017398550 ubox
22 28 0.593186261 ubox
22 50 0.011715572 ubox
22 52 0.481018001 ubox
22 57 0.005147320 ubox
22 58 0.059096620 ubox
22 69 0.010367230 ubox
22 74 0.017394031 ubox
23 29 0.017846899 ubox
23 53 0.152674688 ubox
23 54 0.011876630 ubox
23 56 0.005552835 ubox
23 62 0.004242895 ubox
23 63 0.089043678 ubox
23 73 0.012878861 ubox
23 78 0.003639893 ubox
24 56 0.043354424 ubox
24 62 0.086063098 ubox
24 77 0.003422538 ubox
25 62 0.034243755 ubox
26 48 0.004763138 ubox
26 60 0.017018707 ubox
26 62 0.010309511 ubox
27 60 0.149661993 ubox
28 46 0.011101671 ubox
28 53 0.222643149 ubox
28 54 0.006305707 ubox
28 59 0.156676473 ubox
29 45 0.011112094 ubox
29 50 0.793290810 ubox
29 52 0.213713970 ubox
29 58 0.156743278 ubox
30 44 0.009217568 ubox
30 49 0.876992478 ubox
30 50 0.020444897 ubox
30 51 0.168257947 ubox
30 52 0.003213354 ubox
30 57 0.156670392 ubox
31 48 0.971461102 ubox
31 56 0.156736320 ubox
32 43 0.010666685 ubox
32 47 0.983087849 ubox
32 49 0.009223577 ubox
32 55 0.156851677 ubox
33 42 0.011034073 ubox
33 46 0.986602050 ubox
33 48 0.008201443 ubox
33 54 0.157045331 ubox
34 46 0.021955951 ubox
34 53 0.157090122 ubox
35 44 0.987082738 ubox
35 45 0.019363412 ubox
35 52 0.156905011 ubox
36 43 0.987223938 ubox
36 44 0.013555363 ubox
36 47 0.027897446 ubox
36 49 0.004879906 ubox
36 50 0.004943386 ubox
36 51 0.152585571 ubox
37 42 0.986934634 ubox
37 46 0.039674273 ubox
37 48 0.008426340 ubox
38 42 0.008178031 ubox
38 46 0.008394372 ubox
38 48 0.006567531 ubox
39 48 0.045801946 ubox
40 48 0.007719509 ubox
41 48 0.008303872 ubox
42 50 0.007948326 ubox
43 48 0.005604396 ubox
44 54 0.007251463 ubox
45 53 0.028620326 ubox
46 52 0.028681423 ubox
50 54 0.003527167 ubox
51 60 0.009357598 ubox
52 59 0.009740283 ubox
53 58 0.009726733 ubox
58 70 0.004075237 ubox
59 69 0.004189762 ubox
60 68 0.004125520 ubox
60 71 0.004262370 ubox
61 70 0.007197585 ubox
62 69 0.006995254 ubox
63 69 0.006783662 ubox
63 74 0.006940380 ubox
64 70 0.012477383 ubox
64 73 0.018260678 ubox
64 76 0.006738169 ubox
64 77 0.018243425 ubox
65 70 0.015951313 ubox
65 73 0.014409546 ubox
65 76 0.016793095 ubox
65 77 0.023078399 ubox
66 70 0.009819746 ubox
66 73 0.023541231 ubox
66 76 0.018851518 ubox
66 77 0.049869038 ubox
67 73 0.018941763 ubox
67 76 0.044981414 ubox
67 77 0.617367272 ubox
68 73 0.021774020 ubox
68 76 0.688394831 ubox
68 77 0.028396707 ubox
69 73 0.008798357 ubox
69 75 0.699068128 ubox
69 76 0.024502594 ubox
69 77 0.013881822 ubox
69 78 0.089844139 ubox
70 74 0.654011382 ubox
70 79 0.007839167 ubox
71 76 0.013291401 ubox
71 77 0.011079290 ubox
72 79 0.039790076 ubox
73 79 0.020052614 ubox
74 78 0.034724373 ubox
75 79 0.010002575 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
