%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (209)
} def

/sequence { (\
GGAAAACUGAACUCGACAUACUGAACACAGAUAUGAACACUAUAGACAACAGUCAUAGACGAGAACAGCUUCAUGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.075029283 ubox
1 8 0.062722477 ubox
1 12 0.035179438 ubox
1 13 0.014333607 ubox
1 14 0.031722716 ubox
1 17 0.004819867 ubox
1 38 0.013330370 ubox
1 50 0.003610361 ubox
1 60 0.021245641 ubox
1 69 0.014180635 ubox
1 70 0.029470972 ubox
1 71 0.005100148 ubox
1 72 0.475549606 ubox
1 74 0.072253442 ubox
1 76 0.015703649 ubox
1 77 0.009031331 ubox
1 78 0.182098836 ubox
2 7 0.066110925 ubox
2 8 0.007049113 ubox
2 12 0.019928866 ubox
2 13 0.026391063 ubox
2 14 0.057427178 ubox
2 38 0.004051644 ubox
2 60 0.011911803 ubox
2 69 0.033999232 ubox
2 70 0.006142168 ubox
2 71 0.473020114 ubox
2 72 0.611595047 ubox
2 74 0.015170613 ubox
2 76 0.011031904 ubox
2 77 0.178340100 ubox
2 78 0.194501231 ubox
3 8 0.010782833 ubox
3 13 0.055287305 ubox
3 32 0.003230636 ubox
3 34 0.005438655 ubox
3 70 0.465351148 ubox
3 71 0.600143965 ubox
3 74 0.019902235 ubox
3 76 0.174651692 ubox
3 77 0.192744404 ubox
4 8 0.006360718 ubox
4 13 0.007694644 ubox
4 34 0.004966379 ubox
4 70 0.551806503 ubox
4 71 0.215559927 ubox
4 74 0.025540668 ubox
4 76 0.172394569 ubox
4 77 0.015040332 ubox
5 13 0.003804167 ubox
5 32 0.013311945 ubox
5 34 0.005428315 ubox
5 70 0.249040222 ubox
5 71 0.149489483 ubox
5 74 0.030232137 ubox
5 76 0.016877017 ubox
5 77 0.093553606 ubox
6 13 0.004757114 ubox
6 32 0.010024647 ubox
6 53 0.014218945 ubox
6 70 0.166589743 ubox
6 71 0.023003572 ubox
6 74 0.064491077 ubox
6 76 0.113975854 ubox
6 77 0.003518568 ubox
7 15 0.016610829 ubox
7 30 0.058310232 ubox
7 45 0.011246859 ubox
7 52 0.015271885 ubox
7 58 0.005587259 ubox
7 61 0.010160780 ubox
7 68 0.898367240 ubox
7 75 0.118707052 ubox
7 79 0.017108516 ubox
8 15 0.044267401 ubox
8 16 0.008448086 ubox
8 18 0.004514183 ubox
8 27 0.004427713 ubox
8 29 0.058655476 ubox
8 39 0.012958922 ubox
8 44 0.011650538 ubox
8 51 0.015297408 ubox
8 57 0.005449629 ubox
8 61 0.014051207 ubox
8 62 0.004273881 ubox
8 65 0.004421289 ubox
8 67 0.900991409 ubox
8 68 0.006969827 ubox
8 73 0.145071361 ubox
8 79 0.047479244 ubox
9 14 0.055321432 ubox
9 17 0.005298251 ubox
9 26 0.005024693 ubox
9 28 0.058537120 ubox
9 38 0.014620110 ubox
9 43 0.010894840 ubox
9 50 0.015251259 ubox
9 56 0.004455242 ubox
9 60 0.017370066 ubox
9 66 0.899479834 ubox
9 69 0.009973716 ubox
9 72 0.151347196 ubox
9 78 0.086881760 ubox
10 70 0.003545216 ubox
10 71 0.151094881 ubox
10 77 0.086481416 ubox
11 41 0.003885623 ubox
11 70 0.148004201 ubox
11 76 0.085261100 ubox
12 61 0.009973715 ubox
12 63 0.921456549 ubox
12 68 0.027609464 ubox
12 75 0.084283858 ubox
12 79 0.013084768 ubox
13 24 0.058410045 ubox
13 31 0.003330775 ubox
13 36 0.028157939 ubox
13 37 0.011905399 ubox
13 39 0.015258442 ubox
13 46 0.013860067 ubox
13 59 0.007239671 ubox
13 62 0.949298714 ubox
13 64 0.010453554 ubox
13 67 0.024249100 ubox
13 68 0.003896900 ubox
13 73 0.009026213 ubox
14 23 0.059629696 ubox
14 30 0.003528255 ubox
14 35 0.027953011 ubox
14 45 0.014124668 ubox
14 58 0.007400656 ubox
14 61 0.952102363 ubox
14 63 0.010924064 ubox
14 68 0.003698871 ubox
14 79 0.016837107 ubox
15 21 0.007050984 ubox
15 22 0.049305971 ubox
15 34 0.022652732 ubox
15 38 0.071110587 ubox
15 40 0.004287101 ubox
15 60 0.933342521 ubox
15 66 0.011715961 ubox
15 71 0.003480761 ubox
15 72 0.047542227 ubox
15 78 0.015344438 ubox
16 34 0.014238257 ubox
16 41 0.003283937 ubox
16 43 0.003885539 ubox
16 70 0.003813580 ubox
16 71 0.041785750 ubox
16 76 0.003768626 ubox
16 77 0.013406647 ubox
17 23 0.009304920 ubox
17 35 0.986206561 ubox
17 58 0.024574436 ubox
17 75 0.004388940 ubox
18 22 0.007585342 ubox
18 32 0.044390949 ubox
18 34 0.990358123 ubox
18 43 0.003243010 ubox
18 56 0.012048007 ubox
18 74 0.004246686 ubox
19 31 0.047339588 ubox
19 33 0.990233924 ubox
19 35 0.003830566 ubox
19 42 0.003464920 ubox
19 55 0.012123017 ubox
19 57 0.008603067 ubox
19 59 0.003184153 ubox
19 73 0.003912132 ubox
20 32 0.984585724 ubox
20 34 0.004483364 ubox
20 41 0.003427854 ubox
20 53 0.014692651 ubox
20 56 0.008215772 ubox
21 30 0.996090130 ubox
21 52 0.014962777 ubox
21 68 0.005015394 ubox
22 29 0.995954347 ubox
22 30 0.016204085 ubox
22 31 0.020326177 ubox
22 39 0.009775352 ubox
22 51 0.014956471 ubox
22 55 0.007741375 ubox
22 67 0.005029586 ubox
22 79 0.005640011 ubox
23 28 0.990075845 ubox
23 38 0.010879275 ubox
23 50 0.014895620 ubox
23 54 0.007870479 ubox
23 66 0.005011031 ubox
23 78 0.010267871 ubox
24 53 0.007650145 ubox
24 77 0.010269623 ubox
25 76 0.010255531 ubox
26 35 0.014280432 ubox
26 75 0.010253126 ubox
27 34 0.012698873 ubox
27 74 0.009694274 ubox
28 35 0.021454064 ubox
28 45 0.004874152 ubox
29 34 0.020794401 ubox
29 70 0.005851309 ubox
30 38 0.003853474 ubox
30 69 0.005927872 ubox
30 71 0.003446945 ubox
30 72 0.003557017 ubox
30 77 0.005912433 ubox
31 43 0.009480739 ubox
31 70 0.003410391 ubox
31 71 0.003485953 ubox
31 76 0.008800555 ubox
32 37 0.003685441 ubox
32 39 0.003651279 ubox
32 42 0.009688464 ubox
32 44 0.016777071 ubox
32 57 0.010660752 ubox
32 75 0.009178043 ubox
33 41 0.009443193 ubox
33 43 0.017390517 ubox
33 56 0.011268979 ubox
33 74 0.009530725 ubox
34 39 0.003695643 ubox
34 42 0.017403697 ubox
34 55 0.011349730 ubox
34 61 0.003235138 ubox
34 67 0.005709211 ubox
34 73 0.009713352 ubox
34 79 0.013206035 ubox
35 40 0.008001189 ubox
35 41 0.016414683 ubox
35 54 0.011370208 ubox
35 60 0.005675552 ubox
35 66 0.005753203 ubox
35 72 0.009734174 ubox
35 78 0.022574800 ubox
36 41 0.007995574 ubox
36 43 0.007432155 ubox
36 53 0.009320227 ubox
36 71 0.009533114 ubox
36 77 0.022864840 ubox
37 41 0.003840586 ubox
37 43 0.004562783 ubox
37 53 0.006079880 ubox
37 70 0.008643777 ubox
37 76 0.022917617 ubox
38 45 0.004770240 ubox
38 52 0.008214218 ubox
38 58 0.014163966 ubox
38 61 0.043583400 ubox
38 63 0.003857645 ubox
38 68 0.004139862 ubox
38 75 0.022927529 ubox
38 79 0.006572443 ubox
39 53 0.008587920 ubox
39 74 0.020386028 ubox
40 52 0.009691633 ubox
40 58 0.981445859 ubox
40 61 0.005022386 ubox
41 51 0.009387682 ubox
41 57 0.987357632 ubox
41 58 0.008696802 ubox
41 59 0.010210910 ubox
42 56 0.986996264 ubox
43 49 0.003941809 ubox
43 55 0.977596620 ubox
43 57 0.040128806 ubox
43 58 0.003275764 ubox
44 53 0.009774189 ubox
44 56 0.042687914 ubox
44 70 0.003197298 ubox
45 50 0.004259948 ubox
45 53 0.009080616 ubox
45 54 0.998635643 ubox
45 69 0.003255122 ubox
46 53 0.998627734 ubox
47 52 0.996807157 ubox
50 61 0.004029465 ubox
52 60 0.019555638 ubox
53 59 0.019762894 ubox
53 62 0.004502036 ubox
54 58 0.019670462 ubox
54 61 0.005137226 ubox
57 70 0.003510275 ubox
58 69 0.004009541 ubox
58 72 0.003294258 ubox
58 77 0.010343516 ubox
58 78 0.004210103 ubox
59 71 0.003174425 ubox
59 74 0.008761623 ubox
59 76 0.025662391 ubox
60 68 0.013376339 ubox
60 75 0.027762937 ubox
60 79 0.030456424 ubox
61 66 0.010454606 ubox
61 69 0.007473848 ubox
61 71 0.029100262 ubox
61 72 0.045151847 ubox
61 74 0.028729127 ubox
61 78 0.028416417 ubox
62 70 0.035457453 ubox
62 71 0.044226844 ubox
62 74 0.005310692 ubox
62 77 0.025878621 ubox
63 69 0.037096242 ubox
63 70 0.037770817 ubox
63 71 0.003569253 ubox
63 72 0.052116760 ubox
63 76 0.010198764 ubox
63 78 0.367629009 ubox
64 70 0.004606389 ubox
64 71 0.051421850 ubox
64 76 0.003823560 ubox
64 77 0.382972839 ubox
65 70 0.041739279 ubox
65 76 0.387374515 ubox
66 75 0.388301385 ubox
66 79 0.010169238 ubox
67 74 0.379762096 ubox
67 77 0.032392734 ubox
68 72 0.036386204 ubox
68 74 0.003322042 ubox
68 76 0.043354029 ubox
69 75 0.065521517 ubox
69 79 0.006925081 ubox
70 75 0.010548535 ubox
71 75 0.003500976 ubox
72 79 0.017848556 ubox
73 77 0.007905918 ubox
74 79 0.009982334 ubox
2 72 0.9500000 lbox
3 71 0.9500000 lbox
4 70 0.9500000 lbox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
