%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (118)
} def

/sequence { (\
GGAAAAGAUAUGAUGCAAAAGCAAAAAACUAUAGUAUGAGAGUGGUGUGGAGCGCAUGAUAUCAAAAAGUUGUUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 63 0.004221008 ubox
1 70 0.016900840 ubox
1 71 0.024333444 ubox
1 73 0.016273632 ubox
1 74 0.004282534 ubox
1 75 0.096565531 ubox
1 76 0.191143712 ubox
1 77 0.009192581 ubox
1 78 0.099493328 ubox
2 63 0.007279278 ubox
2 70 0.028070478 ubox
2 71 0.032902415 ubox
2 73 0.005750734 ubox
2 74 0.096527331 ubox
2 75 0.220752002 ubox
2 76 0.003567296 ubox
2 77 0.092590478 ubox
2 78 0.113763289 ubox
3 62 0.006477971 ubox
3 70 0.034336426 ubox
3 71 0.028247511 ubox
3 73 0.094010151 ubox
3 74 0.220250467 ubox
3 76 0.087699808 ubox
3 77 0.110158042 ubox
4 70 0.030468197 ubox
4 71 0.019658499 ubox
4 73 0.209272097 ubox
4 74 0.017843895 ubox
4 76 0.095506578 ubox
4 77 0.007344870 ubox
5 70 0.020838506 ubox
5 71 0.095619798 ubox
5 73 0.018146935 ubox
5 74 0.071414325 ubox
5 76 0.008054461 ubox
5 77 0.023174330 ubox
6 30 0.005175891 ubox
6 70 0.099527709 ubox
6 71 0.069668212 ubox
6 73 0.073912730 ubox
6 74 0.039032983 ubox
6 76 0.028077691 ubox
6 77 0.003573444 ubox
7 29 0.005366718 ubox
7 62 0.003256807 ubox
7 63 0.996135815 ubox
7 70 0.017481552 ubox
7 71 0.019774137 ubox
7 73 0.007410363 ubox
7 74 0.012717403 ubox
7 75 0.028097960 ubox
7 78 0.005615732 ubox
8 62 0.997448467 ubox
8 70 0.019685430 ubox
8 71 0.009080539 ubox
8 73 0.014773330 ubox
8 74 0.024999032 ubox
8 77 0.005064973 ubox
9 58 0.003810188 ubox
9 61 0.997531706 ubox
9 66 0.009608954 ubox
9 67 0.006134683 ubox
9 68 0.009922902 ubox
9 69 0.018373888 ubox
9 72 0.016097936 ubox
10 57 0.004885475 ubox
10 60 0.997528479 ubox
10 70 0.003539972 ubox
10 71 0.015245119 ubox
10 73 0.009823337 ubox
11 25 0.004443932 ubox
11 26 0.008723862 ubox
11 56 0.005505124 ubox
11 58 0.003844711 ubox
11 59 0.992795683 ubox
11 64 0.041639530 ubox
11 65 0.003694140 ubox
11 68 0.003645973 ubox
11 72 0.010035099 ubox
11 79 0.003602139 ubox
12 55 0.005748823 ubox
12 57 0.003865690 ubox
12 63 0.043766631 ubox
12 71 0.009324624 ubox
12 75 0.003568519 ubox
12 78 0.005836831 ubox
13 37 0.004652299 ubox
13 57 0.992739276 ubox
13 62 0.043727075 ubox
13 70 0.008966986 ubox
13 74 0.003275606 ubox
13 77 0.005424047 ubox
14 23 0.039793357 ubox
14 36 0.004913219 ubox
14 54 0.008895121 ubox
14 56 0.997484620 ubox
14 61 0.043528255 ubox
14 69 0.007108955 ubox
15 22 0.046974528 ubox
15 35 0.005020553 ubox
15 53 0.012279473 ubox
15 55 0.997762053 ubox
15 60 0.042949903 ubox
16 21 0.047395658 ubox
16 34 0.005023900 ubox
16 52 0.012853442 ubox
16 54 0.996941210 ubox
16 58 0.042021452 ubox
17 57 0.040873997 ubox
18 57 0.003585574 ubox
19 48 0.004311816 ubox
19 57 0.004364661 ubox
20 30 0.013228568 ubox
20 46 0.007723438 ubox
20 48 0.008747380 ubox
20 74 0.003690570 ubox
21 29 0.015729268 ubox
21 35 0.005927766 ubox
21 46 0.010984921 ubox
21 48 0.332422553 ubox
21 53 0.848467636 ubox
21 55 0.020633887 ubox
21 73 0.004323062 ubox
22 34 0.006075179 ubox
22 42 0.003230939 ubox
22 44 0.008974746 ubox
22 45 0.010976471 ubox
22 47 0.333770561 ubox
22 49 0.166074922 ubox
22 50 0.070869672 ubox
22 52 0.847780772 ubox
22 54 0.020773896 ubox
22 72 0.004369212 ubox
23 43 0.008784615 ubox
23 46 0.317783619 ubox
23 48 0.157594783 ubox
23 71 0.004140246 ubox
24 43 0.006576843 ubox
24 46 0.017099332 ubox
24 48 0.025925829 ubox
24 70 0.003296553 ubox
24 74 0.005130911 ubox
24 77 0.006421447 ubox
25 43 0.013153337 ubox
25 46 0.056122388 ubox
25 48 0.074471614 ubox
25 73 0.005210555 ubox
25 76 0.006759234 ubox
26 37 0.005204767 ubox
26 43 0.088758360 ubox
26 46 0.014382846 ubox
26 48 0.194331624 ubox
27 43 0.016271821 ubox
27 46 0.024279322 ubox
27 48 0.048065532 ubox
27 71 0.017701055 ubox
27 74 0.016988947 ubox
28 35 0.014261498 ubox
28 43 0.304165417 ubox
28 46 0.634455561 ubox
28 48 0.032450164 ubox
28 70 0.019122350 ubox
28 73 0.019376297 ubox
29 34 0.014749216 ubox
29 38 0.032193725 ubox
29 40 0.144986467 ubox
29 42 0.306226171 ubox
29 44 0.012489643 ubox
29 45 0.646948265 ubox
29 47 0.032600579 ubox
29 49 0.040475718 ubox
29 50 0.673664040 ubox
29 52 0.010369641 ubox
29 69 0.019336188 ubox
29 72 0.019619039 ubox
30 36 0.007253845 ubox
30 38 0.032500216 ubox
30 39 0.143336130 ubox
30 40 0.014952152 ubox
30 41 0.293503350 ubox
30 44 0.646444083 ubox
30 47 0.004220552 ubox
30 49 0.675863140 ubox
30 51 0.009039162 ubox
30 68 0.018585006 ubox
31 35 0.008370679 ubox
31 37 0.047850796 ubox
31 43 0.644121375 ubox
31 46 0.008068997 ubox
31 48 0.677603805 ubox
31 70 0.012306958 ubox
32 36 0.043527693 ubox
32 38 0.091585291 ubox
32 39 0.142338506 ubox
32 40 0.049904247 ubox
32 41 0.045307731 ubox
32 42 0.633541982 ubox
32 44 0.027519476 ubox
32 45 0.007715073 ubox
32 47 0.677788966 ubox
32 66 0.005410316 ubox
32 67 0.003493021 ubox
32 69 0.012367377 ubox
33 37 0.079778915 ubox
33 43 0.030527811 ubox
33 46 0.677041021 ubox
34 43 0.005946730 ubox
34 53 0.004427502 ubox
34 62 0.007569266 ubox
35 39 0.299306449 ubox
35 40 0.184406258 ubox
35 41 0.053207562 ubox
35 42 0.013754535 ubox
35 44 0.673687906 ubox
35 45 0.004288798 ubox
35 47 0.004591252 ubox
35 52 0.004400387 ubox
35 61 0.008037717 ubox
35 65 0.006693248 ubox
35 66 0.012809860 ubox
36 43 0.674752925 ubox
36 46 0.005818589 ubox
36 60 0.008068646 ubox
37 41 0.016685380 ubox
37 42 0.662318621 ubox
37 45 0.006271670 ubox
37 50 0.004158011 ubox
37 59 0.008008185 ubox
37 64 0.033059662 ubox
38 43 0.003940116 ubox
38 63 0.035177014 ubox
39 43 0.004447324 ubox
39 48 0.004668769 ubox
39 57 0.007399658 ubox
39 62 0.035028711 ubox
40 63 0.008105396 ubox
41 46 0.004189009 ubox
41 62 0.008035985 ubox
42 53 0.008216019 ubox
42 55 0.009971307 ubox
42 57 0.003561644 ubox
42 60 0.034536989 ubox
43 52 0.008198130 ubox
43 54 0.009989671 ubox
43 56 0.003588200 ubox
43 59 0.035799898 ubox
44 53 0.013634817 ubox
45 53 0.013251204 ubox
45 55 0.005151684 ubox
45 57 0.036685350 ubox
46 51 0.011833887 ubox
46 52 0.013172462 ubox
46 54 0.005455470 ubox
46 56 0.036839794 ubox
47 53 0.026283339 ubox
47 55 0.037004523 ubox
47 78 0.006858274 ubox
48 52 0.024609923 ubox
48 54 0.036925601 ubox
48 79 0.004673550 ubox
49 53 0.035725466 ubox
49 76 0.008311612 ubox
49 78 0.009220212 ubox
50 75 0.009521375 ubox
50 77 0.009313718 ubox
51 71 0.005977579 ubox
51 74 0.009815331 ubox
51 76 0.010109340 ubox
52 70 0.006593521 ubox
52 73 0.010018175 ubox
52 75 0.010254297 ubox
53 69 0.006647693 ubox
53 72 0.010038433 ubox
54 70 0.005242287 ubox
54 71 0.007829592 ubox
54 73 0.010626589 ubox
55 69 0.007319931 ubox
55 72 0.010791000 ubox
56 70 0.004284971 ubox
56 71 0.010290690 ubox
56 73 0.003972300 ubox
57 64 0.006577631 ubox
57 67 0.003181330 ubox
57 68 0.003217561 ubox
57 69 0.004506648 ubox
57 72 0.004104134 ubox
58 63 0.006929408 ubox
58 71 0.005065280 ubox
58 74 0.003271213 ubox
58 78 0.003638464 ubox
59 70 0.005793176 ubox
59 73 0.003768833 ubox
59 77 0.003606937 ubox
60 69 0.005819401 ubox
60 72 0.003891338 ubox
61 71 0.003759893 ubox
63 69 0.004795983 ubox
63 72 0.020420513 ubox
64 70 0.014088936 ubox
64 71 0.048687408 ubox
64 73 0.015811957 ubox
64 74 0.022967097 ubox
64 76 0.009897203 ubox
64 77 0.031305742 ubox
65 70 0.043772719 ubox
65 71 0.038120476 ubox
65 73 0.023903373 ubox
65 74 0.041014192 ubox
65 76 0.032624321 ubox
65 77 0.025999989 ubox
66 70 0.030820542 ubox
66 71 0.027282019 ubox
66 73 0.040549367 ubox
66 74 0.032158800 ubox
66 76 0.025343844 ubox
66 77 0.045599078 ubox
67 71 0.015002972 ubox
67 73 0.032606376 ubox
67 74 0.069079668 ubox
67 76 0.045531805 ubox
67 77 0.397408259 ubox
68 73 0.072229844 ubox
68 74 0.024592405 ubox
68 76 0.443057710 ubox
68 77 0.031466394 ubox
69 73 0.019339253 ubox
69 74 0.029231934 ubox
69 75 0.449360667 ubox
69 76 0.029707696 ubox
69 77 0.016755863 ubox
69 78 0.107986613 ubox
70 79 0.009305907 ubox
71 79 0.072222220 ubox
72 76 0.007932883 ubox
72 77 0.020513022 ubox
72 78 0.123167732 ubox
73 79 0.006871202 ubox
74 79 0.007461456 ubox
75 79 0.011251313 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
