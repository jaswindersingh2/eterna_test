%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1028)
} def

/sequence { (\
GGAAAACGGAAACCGAAGUUCAAAGAGCAAGACUCAAAGAGUCAAGGACAAAGUCCAAGACAAAGUCAGAUGGCAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.102416701 ubox
1 13 0.013960631 ubox
1 14 0.066049050 ubox
1 20 0.004029435 ubox
1 21 0.241228628 ubox
1 28 0.005289713 ubox
1 35 0.003871854 ubox
1 49 0.003792448 ubox
1 56 0.036166626 ubox
1 61 0.040935671 ubox
1 67 0.022123493 ubox
1 71 0.004031012 ubox
1 74 0.040401172 ubox
1 76 0.005293456 ubox
1 77 0.008848572 ubox
1 78 0.335210190 ubox
2 7 0.033312841 ubox
2 13 0.066082083 ubox
2 14 0.005743567 ubox
2 19 0.006253334 ubox
2 20 0.241455973 ubox
2 21 0.104849361 ubox
2 28 0.004755388 ubox
2 35 0.005310372 ubox
2 55 0.036120277 ubox
2 61 0.021040416 ubox
2 66 0.017121526 ubox
2 67 0.029852165 ubox
2 71 0.003394648 ubox
2 74 0.032231332 ubox
2 76 0.008843205 ubox
2 77 0.323641930 ubox
2 78 0.482112847 ubox
3 19 0.239387205 ubox
3 20 0.104464737 ubox
3 34 0.005055875 ubox
3 54 0.033702052 ubox
3 66 0.027926286 ubox
3 71 0.007723445 ubox
3 76 0.299341521 ubox
3 77 0.476012381 ubox
4 19 0.095888027 ubox
4 20 0.010471873 ubox
4 71 0.011756763 ubox
4 76 0.413624352 ubox
4 77 0.031057895 ubox
5 19 0.012786452 ubox
5 20 0.020142117 ubox
5 71 0.018736603 ubox
5 76 0.034618963 ubox
5 77 0.020140825 ubox
6 19 0.023270405 ubox
6 66 0.006099255 ubox
6 71 0.010444386 ubox
6 76 0.020439804 ubox
6 77 0.008683299 ubox
7 15 0.656070230 ubox
7 18 0.022871576 ubox
7 25 0.004583194 ubox
7 53 0.004065663 ubox
7 59 0.005929845 ubox
7 65 0.006368567 ubox
7 69 0.009091063 ubox
7 72 0.046606090 ubox
7 73 0.038918987 ubox
7 79 0.635679743 ubox
8 13 0.058940780 ubox
8 14 0.670438762 ubox
8 21 0.019110937 ubox
8 56 0.006835010 ubox
8 61 0.006409626 ubox
8 67 0.003348041 ubox
8 71 0.025390399 ubox
8 74 0.014044466 ubox
8 76 0.003913495 ubox
8 77 0.004604354 ubox
8 78 0.670099152 ubox
9 13 0.659672645 ubox
9 14 0.035189153 ubox
9 20 0.018836125 ubox
9 21 0.028657224 ubox
9 35 0.003228910 ubox
9 49 0.005294187 ubox
9 55 0.006833971 ubox
9 61 0.003927002 ubox
9 67 0.007104424 ubox
9 71 0.015783343 ubox
9 74 0.010938218 ubox
9 76 0.005795056 ubox
9 77 0.666868452 ubox
9 78 0.168984905 ubox
10 19 0.018334433 ubox
10 20 0.025939679 ubox
10 54 0.006542839 ubox
10 66 0.006663691 ubox
10 71 0.003273306 ubox
10 76 0.654936065 ubox
10 77 0.169362633 ubox
11 19 0.021698770 ubox
11 20 0.024549233 ubox
11 71 0.004173340 ubox
11 76 0.157045657 ubox
11 77 0.010153886 ubox
12 19 0.029854646 ubox
12 66 0.007294788 ubox
12 71 0.005129829 ubox
12 76 0.011517395 ubox
13 18 0.032457600 ubox
13 47 0.010462922 ubox
13 59 0.003201645 ubox
13 65 0.007532141 ubox
13 69 0.007922427 ubox
13 72 0.018773658 ubox
13 73 0.675547477 ubox
13 79 0.011318213 ubox
14 25 0.006881761 ubox
14 31 0.007496890 ubox
14 46 0.010495540 ubox
14 59 0.006010702 ubox
14 65 0.003841223 ubox
14 69 0.008998215 ubox
14 72 0.675591988 ubox
14 73 0.036354066 ubox
14 79 0.193810370 ubox
15 21 0.037360763 ubox
15 28 0.008633067 ubox
15 35 0.009200392 ubox
15 43 0.003628318 ubox
15 61 0.006694868 ubox
15 67 0.023453341 ubox
15 71 0.415485205 ubox
15 74 0.013867583 ubox
15 77 0.006324771 ubox
15 78 0.218071456 ubox
16 20 0.032621819 ubox
16 34 0.007035647 ubox
16 42 0.003413278 ubox
16 66 0.022268956 ubox
16 71 0.057439398 ubox
16 76 0.009006727 ubox
16 77 0.215515500 ubox
17 34 0.016420462 ubox
17 66 0.003647606 ubox
17 71 0.014881291 ubox
17 76 0.189789081 ubox
17 77 0.010719500 ubox
18 28 0.942969010 ubox
18 33 0.018354430 ubox
18 43 0.004926445 ubox
18 49 0.007525513 ubox
18 61 0.019749521 ubox
18 67 0.004015393 ubox
18 71 0.016283450 ubox
18 74 0.056208098 ubox
18 76 0.010160704 ubox
18 78 0.003527202 ubox
19 23 0.003241172 ubox
19 24 0.005599456 ubox
19 25 0.006056599 ubox
19 26 0.016001073 ubox
19 27 0.943241120 ubox
19 29 0.004770634 ubox
19 30 0.011371423 ubox
19 32 0.017478101 ubox
19 40 0.004708003 ubox
19 41 0.007698858 ubox
19 48 0.007516888 ubox
19 60 0.018869207 ubox
19 68 0.006931590 ubox
19 69 0.008002663 ubox
19 70 0.017722886 ubox
19 73 0.050325920 ubox
19 75 0.011226456 ubox
20 24 0.006468370 ubox
20 25 0.016579262 ubox
20 26 0.941966733 ubox
20 27 0.006429354 ubox
20 29 0.012871231 ubox
20 31 0.015913478 ubox
20 32 0.006658165 ubox
20 39 0.004644350 ubox
20 40 0.038827490 ubox
20 47 0.007484100 ubox
20 59 0.016995634 ubox
20 60 0.009243823 ubox
20 68 0.006935305 ubox
20 69 0.016028726 ubox
20 70 0.045503037 ubox
20 72 0.030781459 ubox
20 73 0.044723440 ubox
21 25 0.934521745 ubox
21 27 0.017472818 ubox
21 31 0.008711571 ubox
21 39 0.040802140 ubox
21 46 0.007314877 ubox
21 59 0.011140647 ubox
21 65 0.009491569 ubox
21 69 0.046808210 ubox
21 72 0.054351650 ubox
21 73 0.006210343 ubox
21 79 0.004099153 ubox
22 71 0.049385693 ubox
22 77 0.010541222 ubox
23 71 0.004083355 ubox
23 76 0.011072518 ubox
23 77 0.023531306 ubox
24 34 0.004863119 ubox
24 76 0.025516125 ubox
24 77 0.046427917 ubox
25 33 0.005140279 ubox
25 35 0.127698289 ubox
25 49 0.013122836 ubox
25 61 0.006185231 ubox
25 67 0.017145238 ubox
25 74 0.013557108 ubox
25 76 0.053042044 ubox
25 77 0.033572334 ubox
25 78 0.096850370 ubox
26 34 0.127823035 ubox
26 66 0.015509116 ubox
26 71 0.003636311 ubox
26 76 0.036572276 ubox
26 77 0.093348528 ubox
27 33 0.127375231 ubox
27 49 0.004316342 ubox
27 61 0.008218381 ubox
27 66 0.016799108 ubox
27 74 0.159611456 ubox
27 76 0.056376346 ubox
27 78 0.008599680 ubox
28 46 0.020572666 ubox
28 47 0.006054517 ubox
28 59 0.009583375 ubox
28 65 0.019544076 ubox
28 69 0.009870700 ubox
28 72 0.035707105 ubox
28 73 0.158421742 ubox
28 79 0.007716273 ubox
29 71 0.038435872 ubox
29 76 0.004150916 ubox
29 77 0.008306927 ubox
30 71 0.026137878 ubox
30 76 0.008089230 ubox
30 77 0.003857420 ubox
31 35 0.006062772 ubox
31 43 0.981450748 ubox
31 67 0.094599590 ubox
31 71 0.004083329 ubox
31 78 0.006493222 ubox
32 42 0.982617368 ubox
32 66 0.094716863 ubox
32 77 0.005926991 ubox
33 39 0.017883619 ubox
33 41 0.982924013 ubox
33 65 0.094710506 ubox
33 69 0.019276808 ubox
33 72 0.003278483 ubox
34 38 0.016265548 ubox
34 39 0.006979253 ubox
34 40 0.982362992 ubox
34 64 0.091091239 ubox
34 68 0.018755929 ubox
34 70 0.007012227 ubox
35 39 0.974153921 ubox
35 69 0.007296816 ubox
35 72 0.003541814 ubox
36 66 0.010004275 ubox
36 71 0.003402517 ubox
37 66 0.003168719 ubox
37 77 0.003778500 ubox
38 66 0.003792964 ubox
38 76 0.004047295 ubox
38 77 0.007534689 ubox
39 61 0.004556374 ubox
39 67 0.014571383 ubox
39 76 0.008621194 ubox
39 77 0.005725718 ubox
39 78 0.019946107 ubox
40 66 0.014500286 ubox
40 76 0.006206854 ubox
40 77 0.018997438 ubox
41 49 0.004066593 ubox
41 61 0.180356129 ubox
41 74 0.027447474 ubox
41 76 0.006251096 ubox
42 48 0.004078701 ubox
42 60 0.180980827 ubox
42 70 0.003255179 ubox
42 73 0.027514689 ubox
42 75 0.005801390 ubox
43 47 0.004060010 ubox
43 59 0.181324335 ubox
43 69 0.003581214 ubox
43 72 0.027681794 ubox
43 73 0.003261805 ubox
44 71 0.026022158 ubox
44 77 0.003463071 ubox
45 71 0.005424674 ubox
45 76 0.003560935 ubox
46 55 0.006276265 ubox
46 56 0.988513693 ubox
46 67 0.008185735 ubox
46 78 0.015793494 ubox
47 54 0.005005947 ubox
47 55 0.989590739 ubox
47 56 0.005402229 ubox
47 66 0.005875367 ubox
47 67 0.114382374 ubox
47 74 0.003246692 ubox
47 77 0.015647562 ubox
47 78 0.013560218 ubox
48 54 0.988299524 ubox
48 66 0.114659488 ubox
48 76 0.014896187 ubox
48 77 0.013047102 ubox
49 53 0.978518701 ubox
49 65 0.114432902 ubox
49 79 0.005656923 ubox
50 77 0.007682113 ubox
51 76 0.009092536 ubox
51 77 0.010415517 ubox
52 76 0.011951372 ubox
52 77 0.018092540 ubox
53 61 0.121575225 ubox
53 71 0.020149534 ubox
53 74 0.045339406 ubox
53 76 0.022790397 ubox
54 60 0.121796950 ubox
54 70 0.021000036 ubox
54 73 0.023118477 ubox
54 75 0.023413727 ubox
55 59 0.120789499 ubox
55 69 0.021101376 ubox
55 72 0.022523999 ubox
55 73 0.052543234 ubox
56 69 0.006793966 ubox
56 72 0.053497815 ubox
57 66 0.006777543 ubox
57 71 0.056855264 ubox
57 76 0.003502232 ubox
57 77 0.006546630 ubox
58 66 0.009489626 ubox
58 71 0.016590999 ubox
58 76 0.008290468 ubox
59 66 0.008264872 ubox
59 67 0.749726643 ubox
59 74 0.035857486 ubox
59 77 0.005924478 ubox
59 78 0.056585958 ubox
60 66 0.749673415 ubox
60 71 0.005533814 ubox
60 76 0.006483951 ubox
60 77 0.054595246 ubox
61 65 0.742372791 ubox
61 69 0.027023535 ubox
61 72 0.069920620 ubox
61 73 0.011157168 ubox
61 79 0.024863411 ubox
62 66 0.004117190 ubox
62 71 0.068860347 ubox
62 76 0.013675353 ubox
62 77 0.063938915 ubox
63 71 0.006599878 ubox
63 76 0.078729056 ubox
63 77 0.046162714 ubox
64 71 0.020222071 ubox
64 76 0.055581540 ubox
64 77 0.009271804 ubox
65 71 0.010597365 ubox
65 74 0.595102802 ubox
65 76 0.009967258 ubox
65 78 0.004147770 ubox
66 70 0.010646651 ubox
66 72 0.003502938 ubox
66 73 0.595012101 ubox
66 75 0.010359985 ubox
67 72 0.591438941 ubox
67 73 0.018013555 ubox
67 79 0.005905720 ubox
68 76 0.008427214 ubox
68 77 0.005010355 ubox
69 74 0.070230552 ubox
69 76 0.005701804 ubox
69 77 0.014701974 ubox
69 78 0.098950836 ubox
70 76 0.017662368 ubox
70 77 0.097805100 ubox
71 75 0.017064868 ubox
71 79 0.015580337 ubox
72 76 0.003548519 ubox
72 78 0.025372319 ubox
73 77 0.016543523 ubox
73 78 0.008211547 ubox
74 79 0.006693349 ubox
7 79 0.9500000 lbox
8 78 0.9500000 lbox
9 77 0.9500000 lbox
10 76 0.9500000 lbox
13 73 0.9500000 lbox
14 72 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
showpage
end
%%EOF
