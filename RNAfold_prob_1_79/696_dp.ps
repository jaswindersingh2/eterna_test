%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (696)
} def

/sequence { (\
GGAAAGGCACCACAAAGCGGCGCCAAGCCCGGCGGAAAACACCAGGCAGCCACGAGGAAACACGCGGCAGUGAAAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.004616531 ubox
1 24 0.036503589 ubox
1 29 0.034335663 ubox
1 30 0.020582408 ubox
1 51 0.081052108 ubox
1 53 0.003857791 ubox
1 68 0.004163417 ubox
1 71 0.010541907 ubox
1 76 0.005567148 ubox
1 77 0.009880334 ubox
1 78 0.378650618 ubox
2 10 0.004623521 ubox
2 23 0.036434822 ubox
2 28 0.034773920 ubox
2 29 0.020328083 ubox
2 50 0.080850424 ubox
2 51 0.005506683 ubox
2 71 0.011452281 ubox
2 76 0.010058365 ubox
2 77 0.367024467 ubox
2 78 0.545799642 ubox
3 71 0.015964158 ubox
3 76 0.339599697 ubox
3 77 0.539366015 ubox
4 71 0.017212906 ubox
4 76 0.468852858 ubox
4 77 0.035312324 ubox
5 71 0.019613003 ubox
5 76 0.039433972 ubox
5 77 0.012678653 ubox
6 21 0.004431847 ubox
6 23 0.003744424 ubox
6 24 0.997983807 ubox
6 51 0.005675009 ubox
6 78 0.004024890 ubox
7 18 0.036858264 ubox
7 21 0.009266351 ubox
7 23 0.999051001 ubox
7 50 0.005674228 ubox
8 17 0.036882991 ubox
8 19 0.004363044 ubox
8 20 0.009317640 ubox
8 22 0.998860365 ubox
8 49 0.005664551 ubox
8 72 0.013594277 ubox
9 71 0.013555765 ubox
10 17 0.004816817 ubox
10 19 0.023640811 ubox
10 20 0.998336899 ubox
10 46 0.004187667 ubox
10 70 0.013410902 ubox
11 17 0.018744627 ubox
11 19 0.997955258 ubox
11 20 0.010529861 ubox
11 45 0.004196987 ubox
11 72 0.009958890 ubox
12 71 0.010016234 ubox
13 17 0.553648499 ubox
13 19 0.012986282 ubox
13 20 0.003531167 ubox
13 70 0.010015451 ubox
17 23 0.007160134 ubox
17 30 0.004645440 ubox
17 33 0.003493439 ubox
17 68 0.009696015 ubox
18 22 0.007141881 ubox
18 31 0.003785320 ubox
18 32 0.003210628 ubox
18 67 0.009697839 ubox
19 29 0.008912481 ubox
19 30 0.004087200 ubox
19 51 0.004465850 ubox
20 28 0.009047863 ubox
20 29 0.003890430 ubox
20 50 0.004468421 ubox
20 65 0.009677742 ubox
21 27 0.009135097 ubox
21 34 0.006591922 ubox
21 49 0.004459615 ubox
21 64 0.009681181 ubox
21 72 0.003520246 ubox
22 28 0.003735555 ubox
22 33 0.007096570 ubox
22 63 0.009420020 ubox
22 71 0.003602651 ubox
23 27 0.003709559 ubox
23 32 0.007098463 ubox
23 70 0.003594829 ubox
24 31 0.007092468 ubox
24 72 0.004510418 ubox
25 71 0.007276534 ubox
25 76 0.004701718 ubox
25 77 0.010999196 ubox
26 71 0.007706226 ubox
26 76 0.010831747 ubox
26 77 0.005917784 ubox
27 33 0.003929339 ubox
27 47 0.997487100 ubox
27 50 0.003805718 ubox
28 32 0.003906166 ubox
28 46 0.998521129 ubox
28 49 0.003798047 ubox
28 57 0.003290754 ubox
29 45 0.997836694 ubox
29 46 0.029295067 ubox
29 56 0.003297536 ubox
30 45 0.038107716 ubox
31 40 0.004504253 ubox
31 42 0.007859608 ubox
31 43 0.998024629 ubox
31 47 0.012459884 ubox
31 51 0.012880039 ubox
32 40 0.003526546 ubox
32 42 0.998725974 ubox
32 43 0.024597198 ubox
32 47 0.011277171 ubox
32 50 0.012911629 ubox
33 45 0.012849175 ubox
33 46 0.011193550 ubox
33 49 0.012904420 ubox
33 79 0.005793681 ubox
34 40 0.985270048 ubox
34 42 0.017742624 ubox
34 43 0.029177810 ubox
34 47 0.003333998 ubox
34 78 0.006260452 ubox
35 40 0.103326580 ubox
35 42 0.029209117 ubox
35 47 0.003640744 ubox
35 77 0.006197837 ubox
35 78 0.003995524 ubox
36 76 0.005959560 ubox
36 77 0.003993166 ubox
37 76 0.003666328 ubox
40 45 0.003920847 ubox
40 72 0.006364548 ubox
41 71 0.006287444 ubox
42 70 0.006200544 ubox
43 72 0.003331281 ubox
46 71 0.029785792 ubox
47 70 0.034989458 ubox
47 72 0.017902613 ubox
48 71 0.030374016 ubox
48 76 0.003998291 ubox
48 77 0.003429383 ubox
49 68 0.988599010 ubox
49 71 0.005215593 ubox
50 57 0.049862921 ubox
50 67 0.989645548 ubox
50 70 0.005393410 ubox
51 56 0.050103095 ubox
51 57 0.003447026 ubox
51 66 0.989349572 ubox
51 67 0.004423951 ubox
51 72 0.012722749 ubox
52 71 0.012768576 ubox
53 64 0.987789740 ubox
53 66 0.015782748 ubox
53 70 0.012694449 ubox
53 79 0.117118465 ubox
54 61 0.010549881 ubox
54 63 0.984135250 ubox
54 65 0.028020256 ubox
54 68 0.004084124 ubox
54 78 0.123040767 ubox
55 77 0.122824244 ubox
56 61 0.796121578 ubox
56 63 0.052107362 ubox
56 65 0.011559646 ubox
56 68 0.003432881 ubox
56 76 0.120042142 ubox
56 78 0.016684267 ubox
57 61 0.104757071 ubox
57 63 0.008361653 ubox
57 65 0.004911506 ubox
57 76 0.005034653 ubox
57 77 0.016615462 ubox
57 78 0.041011393 ubox
58 76 0.016020950 ubox
58 77 0.041056567 ubox
59 76 0.039447190 ubox
60 71 0.013722500 ubox
61 70 0.013807717 ubox
61 72 0.133006403 ubox
62 71 0.133411383 ubox
63 70 0.133418984 ubox
63 72 0.045332720 ubox
64 68 0.006692275 ubox
64 71 0.045908995 ubox
65 70 0.045966734 ubox
69 76 0.034902296 ubox
69 77 0.038144852 ubox
70 76 0.048916394 ubox
70 77 0.024746203 ubox
70 78 0.062461012 ubox
71 75 0.047430836 ubox
71 79 0.114877248 ubox
72 76 0.013121860 ubox
72 77 0.013094971 ubox
72 78 0.196136605 ubox
73 77 0.170804554 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
showpage
end
%%EOF
