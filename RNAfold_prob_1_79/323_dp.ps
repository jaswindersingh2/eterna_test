%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (323)
} def

/sequence { (\
GGAAACGCUUGACAAAAAAGUCAGUCAAAGACAAGCGAGUCAGGCAAAAAGCCCUUCAAAAGAAGGACUAUACCAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.236324767 ubox
1 8 0.007313943 ubox
1 9 0.003512878 ubox
1 26 0.003692563 ubox
1 32 0.008225788 ubox
1 41 0.017605433 ubox
1 45 0.005780531 ubox
1 52 0.034746432 ubox
1 53 0.023466331 ubox
1 54 0.005218005 ubox
1 57 0.004283893 ubox
1 68 0.017750457 ubox
1 69 0.028047408 ubox
1 71 0.004553272 ubox
1 73 0.025286883 ubox
1 74 0.512607066 ubox
1 76 0.003581493 ubox
1 77 0.005129215 ubox
1 78 0.193519410 ubox
2 6 0.034442526 ubox
2 8 0.004302637 ubox
2 26 0.007684269 ubox
2 40 0.015165746 ubox
2 41 0.096596533 ubox
2 52 0.033069776 ubox
2 53 0.005096955 ubox
2 56 0.004024085 ubox
2 57 0.005657869 ubox
2 68 0.029481865 ubox
2 69 0.004737656 ubox
2 71 0.005055198 ubox
2 73 0.510743500 ubox
2 74 0.037195132 ubox
2 76 0.005125677 ubox
2 77 0.187427924 ubox
2 78 0.278485674 ubox
3 25 0.007289666 ubox
3 40 0.096452543 ubox
3 55 0.003792601 ubox
3 56 0.005625944 ubox
3 69 0.009618357 ubox
3 71 0.082360764 ubox
3 76 0.173528751 ubox
3 77 0.275320491 ubox
4 55 0.005146211 ubox
4 69 0.016241951 ubox
4 71 0.096116099 ubox
4 76 0.239607069 ubox
4 77 0.016044093 ubox
5 25 0.005401404 ubox
5 69 0.014196394 ubox
5 71 0.020599101 ubox
5 76 0.017158153 ubox
5 77 0.005043500 ubox
6 24 0.005663597 ubox
6 30 0.003769444 ubox
6 37 0.145472068 ubox
6 51 0.013544811 ubox
6 79 0.018760880 ubox
7 21 0.011364097 ubox
7 25 0.042200298 ubox
7 26 0.033890026 ubox
7 32 0.006369077 ubox
7 36 0.148338919 ubox
7 45 0.983402044 ubox
7 52 0.027158407 ubox
7 68 0.006072714 ubox
7 73 0.008559924 ubox
7 74 0.004446461 ubox
7 78 0.006356900 ubox
8 20 0.012210053 ubox
8 24 0.045824649 ubox
8 30 0.009811629 ubox
8 35 0.148335221 ubox
8 43 0.003992924 ubox
8 44 0.984444873 ubox
8 51 0.027204489 ubox
8 66 0.003290736 ubox
9 19 0.012166736 ubox
9 23 0.032422388 ubox
9 24 0.047408257 ubox
9 28 0.025670421 ubox
9 29 0.008341417 ubox
9 33 0.004554139 ubox
9 34 0.142933833 ubox
9 42 0.003201612 ubox
9 43 0.983558013 ubox
9 50 0.026331593 ubox
10 18 0.012058204 ubox
10 23 0.122980543 ubox
10 27 0.039706394 ubox
10 28 0.006011515 ubox
10 33 0.103057405 ubox
10 42 0.983508319 ubox
10 49 0.019382158 ubox
11 22 0.155747530 ubox
11 26 0.043607198 ubox
11 32 0.065306041 ubox
11 41 0.984360982 ubox
12 21 0.157029016 ubox
12 25 0.045302145 ubox
12 40 0.984073290 ubox
13 20 0.156902020 ubox
13 24 0.045281579 ubox
13 30 0.037984638 ubox
13 37 0.005495260 ubox
13 39 0.980984647 ubox
14 21 0.004941497 ubox
15 21 0.004345557 ubox
16 21 0.010820807 ubox
16 25 0.003313418 ubox
17 25 0.003276487 ubox
18 25 0.007734210 ubox
19 25 0.006622041 ubox
20 26 0.007095067 ubox
20 32 0.928744246 ubox
20 36 0.305055714 ubox
21 30 0.007748816 ubox
21 31 0.931725360 ubox
21 33 0.012988133 ubox
21 34 0.013722145 ubox
21 35 0.301646623 ubox
21 38 0.029774482 ubox
22 30 0.931406564 ubox
22 35 0.023865500 ubox
22 37 0.029870311 ubox
23 69 0.015049916 ubox
24 32 0.331511551 ubox
24 36 0.019103043 ubox
24 45 0.047242152 ubox
24 68 0.019004203 ubox
25 29 0.020868179 ubox
25 30 0.004869935 ubox
25 31 0.331838675 ubox
25 34 0.007514714 ubox
25 35 0.016253048 ubox
25 38 0.010872640 ubox
25 44 0.047297663 ubox
25 67 0.019062030 ubox
26 30 0.329091386 ubox
26 35 0.010970935 ubox
26 37 0.010979401 ubox
26 43 0.047528715 ubox
26 66 0.019029407 ubox
30 36 0.004503852 ubox
30 41 0.083307424 ubox
30 78 0.005283976 ubox
31 40 0.083389242 ubox
31 77 0.005132557 ubox
32 37 0.004354730 ubox
32 39 0.083305182 ubox
35 45 0.025328520 ubox
35 52 0.003681647 ubox
36 43 0.003704894 ubox
36 44 0.025292393 ubox
36 51 0.003689511 ubox
36 79 0.027393951 ubox
37 57 0.003203250 ubox
37 78 0.033061819 ubox
38 56 0.003230617 ubox
38 69 0.092667896 ubox
38 77 0.033213381 ubox
39 45 0.010105707 ubox
39 57 0.003843865 ubox
39 68 0.095573771 ubox
39 76 0.033006187 ubox
39 78 0.008064904 ubox
40 44 0.009462329 ubox
40 67 0.095548451 ubox
40 75 0.030651245 ubox
41 66 0.095253369 ubox
42 55 0.005483718 ubox
42 69 0.005179399 ubox
42 76 0.006403216 ubox
42 77 0.005788584 ubox
43 52 0.007495818 ubox
43 53 0.113852683 ubox
43 54 0.005075964 ubox
43 68 0.005395602 ubox
43 73 0.005010099 ubox
43 74 0.082507116 ubox
43 76 0.006487309 ubox
43 78 0.006177410 ubox
44 52 0.126331967 ubox
44 53 0.004062379 ubox
44 73 0.082484534 ubox
44 74 0.006582486 ubox
44 77 0.005410067 ubox
45 51 0.126410653 ubox
46 69 0.005182356 ubox
46 71 0.049174148 ubox
46 76 0.005769788 ubox
46 77 0.009501038 ubox
47 69 0.009152879 ubox
47 71 0.043873621 ubox
47 76 0.010107862 ubox
47 77 0.006906823 ubox
48 69 0.014539184 ubox
48 71 0.177183314 ubox
48 76 0.006948034 ubox
48 77 0.013322061 ubox
49 69 0.042101558 ubox
49 71 0.078006508 ubox
49 76 0.014583985 ubox
49 77 0.007261913 ubox
50 69 0.827073491 ubox
50 71 0.022868275 ubox
50 76 0.005486512 ubox
51 68 0.855469133 ubox
51 69 0.019656467 ubox
51 71 0.005644461 ubox
51 73 0.004680527 ubox
51 74 0.006070932 ubox
51 78 0.003520489 ubox
52 66 0.067518919 ubox
53 65 0.048393937 ubox
53 66 0.989186652 ubox
54 62 0.007799804 ubox
54 65 0.998190584 ubox
54 66 0.005130785 ubox
55 61 0.007802394 ubox
55 63 0.005900193 ubox
55 64 0.998829425 ubox
55 65 0.004084562 ubox
56 60 0.006531671 ubox
56 62 0.006176982 ubox
56 63 0.998756559 ubox
56 64 0.003414166 ubox
57 62 0.997414435 ubox
62 78 0.028107213 ubox
63 76 0.003436828 ubox
63 77 0.028114626 ubox
64 76 0.027704673 ubox
65 74 0.031327910 ubox
66 73 0.031644976 ubox
66 74 0.006389410 ubox
66 77 0.003567258 ubox
66 78 0.009434505 ubox
67 71 0.010440782 ubox
67 76 0.007274607 ubox
67 77 0.009540017 ubox
68 79 0.012140885 ubox
69 75 0.009929143 ubox
70 76 0.019378201 ubox
70 77 0.026746405 ubox
71 75 0.019560867 ubox
71 79 0.006423823 ubox
72 76 0.007187223 ubox
72 77 0.009964315 ubox
73 79 0.027994359 ubox
74 79 0.035740698 ubox
7 45 0.9500000 lbox
8 44 0.9500000 lbox
9 43 0.9500000 lbox
10 42 0.9500000 lbox
11 41 0.9500000 lbox
12 40 0.9500000 lbox
13 39 0.9500000 lbox
20 32 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
50 69 0.9500000 lbox
51 68 0.9500000 lbox
53 66 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
showpage
end
%%EOF
