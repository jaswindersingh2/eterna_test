%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (711)
} def

/sequence { (\
GGAAAGUCGUGGCAAAGGCAGGACAAGUCGACGCGAAAAGGGUGGACAGACGCAGCGAAAGGUGGGUCAUCUCUAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 24 0.007510308 ubox
1 29 0.062835923 ubox
1 32 0.007201051 ubox
1 68 0.004527957 ubox
1 70 0.004573480 ubox
1 71 0.068757008 ubox
1 72 0.221338674 ubox
1 73 0.137490011 ubox
1 74 0.424835993 ubox
1 76 0.006180225 ubox
1 77 0.009196947 ubox
1 78 0.333898254 ubox
2 24 0.003856647 ubox
2 28 0.061686415 ubox
2 29 0.039555595 ubox
2 68 0.004426813 ubox
2 70 0.044642768 ubox
2 71 0.272737943 ubox
2 72 0.080817032 ubox
2 73 0.449944101 ubox
2 74 0.014868638 ubox
2 76 0.009442197 ubox
2 77 0.324206559 ubox
2 78 0.466768176 ubox
3 28 0.038588754 ubox
3 70 0.255208140 ubox
3 72 0.428622469 ubox
3 74 0.016335087 ubox
3 76 0.301686893 ubox
3 77 0.461430254 ubox
4 28 0.003675498 ubox
4 70 0.040734814 ubox
4 72 0.025620850 ubox
4 74 0.037358969 ubox
4 76 0.401888636 ubox
4 77 0.030017547 ubox
5 70 0.079004013 ubox
5 72 0.028292541 ubox
5 74 0.094058909 ubox
5 76 0.033531202 ubox
5 77 0.010794534 ubox
6 19 0.030237122 ubox
6 24 0.994679663 ubox
6 32 0.008654506 ubox
6 34 0.004493835 ubox
6 71 0.010657845 ubox
6 73 0.034924362 ubox
6 74 0.005523788 ubox
7 18 0.030238552 ubox
7 22 0.004653994 ubox
7 23 0.996567587 ubox
7 31 0.008667676 ubox
7 36 0.062562081 ubox
8 17 0.030259173 ubox
8 21 0.007141559 ubox
8 22 0.996670276 ubox
8 30 0.008659376 ubox
8 33 0.005308101 ubox
8 35 0.066943436 ubox
9 19 0.009313911 ubox
9 24 0.005198511 ubox
9 29 0.008362993 ubox
9 32 0.005493497 ubox
9 34 0.067033696 ubox
9 70 0.005841250 ubox
10 15 0.005447745 ubox
10 16 0.003679917 ubox
10 18 0.009302222 ubox
10 20 0.990236813 ubox
10 21 0.029527973 ubox
10 23 0.004984536 ubox
10 25 0.004278139 ubox
10 30 0.003331522 ubox
10 31 0.004667139 ubox
10 33 0.066980310 ubox
10 36 0.005659643 ubox
10 69 0.005789899 ubox
11 19 0.961869695 ubox
11 24 0.004437970 ubox
11 29 0.006488896 ubox
11 32 0.066619796 ubox
11 68 0.004202305 ubox
12 19 0.261520937 ubox
12 28 0.007668749 ubox
12 34 0.007737075 ubox
13 17 0.810538896 ubox
13 18 0.354678187 ubox
13 27 0.007860655 ubox
13 30 0.015997218 ubox
13 33 0.007750298 ubox
17 24 0.007658207 ubox
17 29 0.065772581 ubox
18 24 0.003809662 ubox
18 28 0.065863997 ubox
19 27 0.065869681 ubox
20 74 0.005223734 ubox
21 72 0.004980950 ubox
21 73 0.005463578 ubox
21 74 0.006830038 ubox
21 78 0.003234623 ubox
22 29 0.004812700 ubox
22 71 0.006445043 ubox
22 72 0.003378092 ubox
22 73 0.007087030 ubox
23 28 0.004274001 ubox
23 70 0.005901985 ubox
23 72 0.006585987 ubox
25 70 0.004770317 ubox
25 72 0.005102135 ubox
25 74 0.006014960 ubox
25 76 0.004035856 ubox
25 77 0.009343443 ubox
26 70 0.004943129 ubox
26 72 0.006017468 ubox
26 74 0.007504909 ubox
26 76 0.009205241 ubox
26 77 0.005047025 ubox
27 32 0.005836132 ubox
27 34 0.019747721 ubox
27 47 0.988402288 ubox
28 33 0.018582890 ubox
28 36 0.056409011 ubox
28 45 0.004250478 ubox
28 46 0.989713874 ubox
29 35 0.060382778 ubox
29 44 0.006874965 ubox
29 45 0.989830251 ubox
30 34 0.056638921 ubox
30 43 0.004919829 ubox
31 43 0.987163319 ubox
32 40 0.004038028 ubox
32 41 0.013316375 ubox
32 42 0.989548214 ubox
32 44 0.019655842 ubox
33 43 0.020300833 ubox
34 40 0.973191539 ubox
34 41 0.150957303 ubox
34 42 0.020355927 ubox
34 79 0.033634028 ubox
35 78 0.036448012 ubox
36 77 0.036325905 ubox
37 76 0.034372418 ubox
39 74 0.033943030 ubox
40 72 0.003821869 ubox
40 73 0.034469908 ubox
40 74 0.004381542 ubox
40 78 0.132993960 ubox
41 71 0.011536005 ubox
41 72 0.031853695 ubox
41 73 0.004560549 ubox
41 74 0.007110424 ubox
41 77 0.133505591 ubox
41 78 0.007070826 ubox
42 70 0.011583469 ubox
42 71 0.031375605 ubox
42 72 0.003447680 ubox
42 73 0.007231057 ubox
42 76 0.134454555 ubox
42 77 0.005079872 ubox
43 69 0.013926226 ubox
43 75 0.134787806 ubox
44 68 0.009784654 ubox
44 70 0.003220623 ubox
44 71 0.006069401 ubox
44 72 0.011110907 ubox
44 73 0.003433605 ubox
44 74 0.134870454 ubox
45 67 0.005283815 ubox
45 68 0.011105480 ubox
45 70 0.007467105 ubox
45 71 0.013092733 ubox
45 73 0.134937881 ubox
46 67 0.011268146 ubox
46 70 0.013360064 ubox
46 72 0.132154137 ubox
47 66 0.011100596 ubox
48 70 0.112715819 ubox
48 72 0.021429159 ubox
48 74 0.012746422 ubox
48 76 0.003355946 ubox
49 68 0.998021314 ubox
49 71 0.018220480 ubox
49 73 0.010409210 ubox
50 63 0.007152056 ubox
50 67 0.999293793 ubox
50 70 0.014086005 ubox
50 72 0.008002666 ubox
51 62 0.007202847 ubox
51 64 0.009185150 ubox
51 65 0.007197969 ubox
51 66 0.999415763 ubox
52 63 0.009712440 ubox
53 61 0.003205514 ubox
53 62 0.009746691 ubox
53 64 0.999059414 ubox
53 65 0.020295644 ubox
54 63 0.995772755 ubox
55 63 0.068727554 ubox
56 61 0.985018323 ubox
56 62 0.110788602 ubox
56 79 0.015679659 ubox
57 78 0.016971432 ubox
58 77 0.016900319 ubox
59 76 0.015968579 ubox
60 72 0.011757982 ubox
60 74 0.004252976 ubox
61 71 0.012074096 ubox
61 73 0.004281603 ubox
61 74 0.010671062 ubox
62 70 0.012089917 ubox
62 72 0.003651998 ubox
62 73 0.010788591 ubox
62 76 0.004391346 ubox
63 69 0.012124573 ubox
63 75 0.004896227 ubox
64 68 0.011934024 ubox
64 71 0.010428643 ubox
64 72 0.003839502 ubox
64 73 0.005740109 ubox
64 74 0.004784956 ubox
65 70 0.009297520 ubox
65 71 0.004159889 ubox
65 72 0.006189263 ubox
65 73 0.004850755 ubox
66 71 0.006656305 ubox
66 72 0.003663652 ubox
69 74 0.022690777 ubox
69 76 0.026186553 ubox
69 77 0.013998397 ubox
70 75 0.027713951 ubox
70 79 0.006311452 ubox
71 79 0.015463383 ubox
72 79 0.006007518 ubox
73 79 0.021588643 ubox
74 79 0.006693596 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
showpage
end
%%EOF
