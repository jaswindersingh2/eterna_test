%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (123)
} def

/sequence { (\
GGAAAAACGCACAGCAGAUCCGGGCAAAGCACUUCGGUAGCAGCGCGAGAACGAGCUGAGGCAAAGAGAUCCACCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.177697670 ubox
1 10 0.019351182 ubox
1 21 0.021787505 ubox
1 70 0.007457164 ubox
1 71 0.022001564 ubox
1 72 0.858486757 ubox
1 74 0.006573441 ubox
1 75 0.038744885 ubox
1 76 0.004325974 ubox
1 78 0.033221054 ubox
2 8 0.041738124 ubox
2 10 0.004884938 ubox
2 20 0.021803751 ubox
2 70 0.020189770 ubox
2 71 0.859065711 ubox
2 72 0.007742576 ubox
2 74 0.038567589 ubox
2 75 0.004944873 ubox
2 77 0.026335806 ubox
2 78 0.044424517 ubox
3 19 0.021117917 ubox
3 70 0.839539939 ubox
3 76 0.022644848 ubox
3 77 0.040533177 ubox
4 70 0.029488183 ubox
4 76 0.031176146 ubox
5 70 0.005294057 ubox
6 70 0.008068875 ubox
7 70 0.004204692 ubox
8 14 0.012035529 ubox
8 17 0.006348460 ubox
8 47 0.008991327 ubox
8 60 0.016126792 ubox
8 61 0.028129386 ubox
8 66 0.167046900 ubox
8 68 0.041476170 ubox
8 79 0.010605280 ubox
9 15 0.017823738 ubox
9 25 0.004367396 ubox
9 30 0.016483952 ubox
9 46 0.009195678 ubox
9 62 0.989488761 ubox
9 78 0.005826206 ubox
10 14 0.017719434 ubox
10 24 0.004345430 ubox
10 29 0.016483830 ubox
10 45 0.009193613 ubox
10 60 0.100327948 ubox
10 61 0.989209760 ubox
10 66 0.004162334 ubox
12 43 0.008720524 ubox
12 58 0.997711155 ubox
12 60 0.022856995 ubox
12 61 0.007152161 ubox
13 57 0.998862096 ubox
14 25 0.017423382 ubox
14 41 0.009960529 ubox
14 56 0.999285830 ubox
14 62 0.003307555 ubox
15 24 0.017430761 ubox
15 40 0.010039929 ubox
15 53 0.005720535 ubox
15 55 0.998203362 ubox
15 58 0.012577746 ubox
15 61 0.003301024 ubox
16 57 0.012587259 ubox
17 52 0.921393964 ubox
17 56 0.012466909 ubox
17 71 0.008371757 ubox
17 78 0.004526567 ubox
18 38 0.005382631 ubox
18 70 0.008421049 ubox
18 77 0.004485897 ubox
19 48 0.032095309 ubox
19 49 0.023242389 ubox
19 50 0.982777586 ubox
19 51 0.046150386 ubox
19 53 0.004106093 ubox
19 54 0.021193179 ubox
19 69 0.008428086 ubox
20 37 0.014667527 ubox
20 47 0.023126677 ubox
20 49 0.994776614 ubox
20 53 0.020613017 ubox
20 68 0.008399221 ubox
21 36 0.015425465 ubox
21 45 0.004497735 ubox
21 47 0.997701656 ubox
21 49 0.007436154 ubox
21 53 0.012840123 ubox
21 66 0.006453391 ubox
22 33 0.004907333 ubox
22 35 0.015360491 ubox
22 44 0.004410343 ubox
22 46 0.998288120 ubox
22 52 0.014483100 ubox
22 72 0.004455277 ubox
22 75 0.011961257 ubox
22 76 0.016622917 ubox
23 32 0.006068937 ubox
23 33 0.003167298 ubox
23 34 0.014444795 ubox
23 44 0.007415757 ubox
23 46 0.033952580 ubox
23 71 0.004453571 ubox
23 72 0.003765024 ubox
23 74 0.011960948 ubox
23 75 0.017805724 ubox
24 30 0.010271452 ubox
24 32 0.004242353 ubox
24 33 0.012094081 ubox
24 41 0.004864397 ubox
24 44 0.998976333 ubox
24 46 0.014667628 ubox
24 62 0.006349423 ubox
24 70 0.003494859 ubox
24 71 0.003775511 ubox
24 74 0.017783216 ubox
25 29 0.010240036 ubox
25 40 0.004939952 ubox
25 43 0.998613977 ubox
25 45 0.015016747 ubox
25 49 0.013989437 ubox
25 61 0.006330263 ubox
28 38 0.023188520 ubox
28 57 0.005843027 ubox
28 70 0.004855836 ubox
29 35 0.003939149 ubox
29 38 0.100723339 ubox
29 41 0.988080996 ubox
29 46 0.014587998 ubox
29 56 0.005907475 ubox
30 36 0.030317536 ubox
30 37 0.102264127 ubox
30 40 0.988208029 ubox
30 45 0.014592612 ubox
30 55 0.005892453 ubox
30 68 0.016480516 ubox
31 38 0.956351806 ubox
32 36 0.038304082 ubox
32 37 0.960520708 ubox
32 40 0.016292782 ubox
32 43 0.014602761 ubox
32 53 0.003856451 ubox
32 66 0.024791060 ubox
32 68 0.010275303 ubox
33 37 0.016971418 ubox
33 39 0.024124002 ubox
33 42 0.014516614 ubox
33 49 0.004150486 ubox
33 65 0.024781857 ubox
33 66 0.003994126 ubox
33 67 0.010075120 ubox
33 68 0.005852954 ubox
34 39 0.006853579 ubox
34 48 0.005006881 ubox
34 54 0.003257173 ubox
34 64 0.024126984 ubox
34 65 0.005161023 ubox
34 66 0.009100356 ubox
34 67 0.007285407 ubox
35 40 0.014034778 ubox
35 47 0.005114197 ubox
35 53 0.003314802 ubox
35 66 0.007551432 ubox
36 41 0.004708224 ubox
36 46 0.005096507 ubox
36 52 0.003308855 ubox
36 62 0.009598319 ubox
37 44 0.004839685 ubox
37 62 0.028423353 ubox
38 43 0.004698607 ubox
38 60 0.007276559 ubox
38 61 0.028353711 ubox
40 46 0.004147722 ubox
41 45 0.004121102 ubox
41 58 0.032395856 ubox
42 57 0.032635179 ubox
43 56 0.032669010 ubox
44 55 0.032605454 ubox
46 53 0.032226317 ubox
47 52 0.031511439 ubox
52 79 0.004893560 ubox
53 78 0.005146932 ubox
54 77 0.004469466 ubox
55 62 0.005275330 ubox
55 75 0.003821695 ubox
56 61 0.005262606 ubox
57 73 0.004330331 ubox
58 72 0.004416777 ubox
58 77 0.010606060 ubox
58 78 0.009599285 ubox
59 76 0.041742573 ubox
59 77 0.009492657 ubox
60 71 0.007031523 ubox
60 72 0.022024638 ubox
60 75 0.044637899 ubox
60 76 0.008586107 ubox
60 78 0.005335380 ubox
61 70 0.006833729 ubox
61 71 0.021921755 ubox
61 74 0.044525549 ubox
61 75 0.008562571 ubox
61 77 0.003951273 ubox
61 78 0.007421072 ubox
62 66 0.004936959 ubox
62 68 0.015500101 ubox
62 79 0.010725451 ubox
63 70 0.014332012 ubox
63 77 0.013785018 ubox
64 70 0.007678044 ubox
64 76 0.012295009 ubox
64 77 0.175420624 ubox
65 70 0.019534878 ubox
65 76 0.195346410 ubox
65 77 0.013641065 ubox
66 70 0.004978134 ubox
66 71 0.031738769 ubox
66 72 0.041621594 ubox
66 74 0.017019394 ubox
66 75 0.198158585 ubox
66 76 0.011392709 ubox
66 77 0.243207246 ubox
66 78 0.173001397 ubox
67 76 0.267952998 ubox
67 77 0.156503722 ubox
68 72 0.019083317 ubox
68 74 0.078804237 ubox
68 75 0.278727946 ubox
68 76 0.126528418 ubox
68 77 0.019261612 ubox
68 78 0.138332792 ubox
69 76 0.022145057 ubox
69 77 0.137270563 ubox
70 79 0.003285392 ubox
71 79 0.006379847 ubox
72 79 0.016875410 ubox
73 77 0.008387721 ubox
74 79 0.035610490 ubox
75 79 0.014593330 ubox
1 72 0.9500000 lbox
2 71 0.9500000 lbox
3 70 0.9500000 lbox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
showpage
end
%%EOF
