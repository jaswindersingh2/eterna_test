%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (4)
} def

/sequence { (\
GGAAAAGCGUCGGAUGAUAAGCGAAGAAGACAGGGUCGUGAGACGCUGUCAGCCAUCGGAUGCAAAAAGCAGGUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.014773382 ubox
1 11 0.004914827 ubox
1 54 0.009357255 ubox
1 70 0.185171169 ubox
1 75 0.023323678 ubox
1 76 0.075856203 ubox
1 77 0.003971547 ubox
1 78 0.061465707 ubox
2 8 0.005174401 ubox
2 10 0.004241858 ubox
2 11 0.013940717 ubox
2 53 0.009343000 ubox
2 70 0.082397913 ubox
2 74 0.022331643 ubox
2 75 0.087601477 ubox
2 77 0.058727079 ubox
2 78 0.093771177 ubox
3 10 0.013188645 ubox
3 74 0.086910341 ubox
3 76 0.055677224 ubox
3 77 0.092590342 ubox
4 74 0.012757199 ubox
4 76 0.083389063 ubox
4 77 0.006192045 ubox
5 74 0.016679940 ubox
5 76 0.007170804 ubox
5 77 0.009442851 ubox
6 47 0.008077866 ubox
6 74 0.044020808 ubox
6 76 0.011284953 ubox
6 77 0.003367810 ubox
7 22 0.038827690 ubox
7 46 0.008164766 ubox
7 63 0.996195141 ubox
7 70 0.013706798 ubox
7 74 0.009810132 ubox
7 75 0.007102305 ubox
8 13 0.007015693 ubox
8 16 0.008756706 ubox
8 21 0.039051817 ubox
8 23 0.003802844 ubox
8 26 0.005831949 ubox
8 45 0.008165206 ubox
8 62 0.997288066 ubox
8 69 0.013295669 ubox
8 72 0.012394948 ubox
8 73 0.010905980 ubox
9 15 0.008494077 ubox
9 18 0.046132034 ubox
9 22 0.004526803 ubox
9 44 0.008165042 ubox
9 61 0.996824199 ubox
9 70 0.004483107 ubox
9 78 0.003297481 ubox
10 14 0.007872131 ubox
10 17 0.048820063 ubox
10 21 0.003844984 ubox
10 24 0.010124219 ubox
10 43 0.008163950 ubox
10 60 0.997497407 ubox
10 69 0.004180856 ubox
10 71 0.004636677 ubox
11 16 0.049049802 ubox
11 23 0.010838977 ubox
11 42 0.008158831 ubox
11 58 0.007634527 ubox
11 59 0.996601230 ubox
11 69 0.005133986 ubox
11 79 0.009500157 ubox
12 22 0.011007458 ubox
12 54 0.003924187 ubox
12 57 0.008205660 ubox
12 76 0.003966787 ubox
12 78 0.010533366 ubox
13 53 0.003910138 ubox
13 56 0.004478487 ubox
13 57 0.996439227 ubox
13 75 0.004139914 ubox
13 77 0.010468262 ubox
13 78 0.007394987 ubox
14 39 0.008039399 ubox
14 56 0.997233020 ubox
14 74 0.004111316 ubox
14 76 0.010185640 ubox
14 77 0.007242523 ubox
15 20 0.004946117 ubox
15 23 0.005363404 ubox
15 24 0.003596246 ubox
15 38 0.008128838 ubox
15 51 0.005269078 ubox
15 55 0.996806499 ubox
15 58 0.010420993 ubox
15 64 0.008275572 ubox
15 73 0.003938820 ubox
16 22 0.019567162 ubox
16 37 0.008152889 ubox
16 50 0.006014728 ubox
16 53 0.034859656 ubox
16 54 0.994388812 ubox
16 57 0.010909256 ubox
16 63 0.008597855 ubox
16 75 0.012743298 ubox
17 36 0.008137188 ubox
17 49 0.006312314 ubox
17 56 0.010992641 ubox
17 74 0.012707696 ubox
18 23 0.030624492 ubox
18 24 0.049828101 ubox
18 25 0.063563870 ubox
18 26 0.023459971 ubox
18 27 0.052836040 ubox
18 28 0.025661465 ubox
18 35 0.007983466 ubox
18 48 0.006007182 ubox
18 51 0.119441536 ubox
18 52 0.102211251 ubox
18 55 0.010779333 ubox
18 62 0.007464299 ubox
18 73 0.012406169 ubox
19 47 0.004219960 ubox
19 61 0.007671142 ubox
20 47 0.007190133 ubox
21 31 0.003851111 ubox
21 46 0.008389765 ubox
21 50 0.011195956 ubox
21 53 0.613133091 ubox
21 54 0.015051870 ubox
21 70 0.004451347 ubox
22 26 0.087537905 ubox
22 29 0.030570833 ubox
22 45 0.008390170 ubox
22 52 0.612732052 ubox
22 58 0.022055364 ubox
22 69 0.004451344 ubox
22 79 0.046146057 ubox
23 44 0.008308902 ubox
23 50 0.050746973 ubox
23 53 0.102070396 ubox
23 54 0.012611835 ubox
23 57 0.022606146 ubox
23 78 0.062376084 ubox
24 49 0.038625485 ubox
24 56 0.022171842 ubox
24 77 0.062393080 ubox
25 49 0.014628005 ubox
25 76 0.062366964 ubox
26 49 0.005495822 ubox
26 50 0.065318604 ubox
26 53 0.652895414 ubox
26 54 0.016923694 ubox
26 75 0.062334206 ubox
26 78 0.003283515 ubox
27 49 0.049620386 ubox
27 74 0.054023197 ubox
27 77 0.003260140 ubox
28 49 0.004711811 ubox
29 37 0.008201344 ubox
29 49 0.010049089 ubox
29 50 0.991011335 ubox
29 53 0.005113415 ubox
30 36 0.008197881 ubox
30 49 0.997265594 ubox
31 35 0.008117164 ubox
31 48 0.999891871 ubox
32 47 0.999674506 ubox
33 46 0.999623019 ubox
34 44 0.005504658 ubox
34 46 0.005978482 ubox
35 44 0.999625583 ubox
36 43 0.999749063 ubox
37 42 0.999412334 ubox
52 57 0.003767682 ubox
52 63 0.011771889 ubox
52 70 0.005428594 ubox
52 74 0.023871689 ubox
53 58 0.006028978 ubox
53 59 0.038905948 ubox
53 62 0.011402936 ubox
53 69 0.005417084 ubox
53 73 0.029820610 ubox
54 58 0.038756569 ubox
54 59 0.008450709 ubox
54 62 0.004034916 ubox
54 72 0.029850661 ubox
55 61 0.004992397 ubox
55 74 0.005755104 ubox
56 60 0.004501058 ubox
56 73 0.007470363 ubox
57 69 0.006848655 ubox
57 72 0.008671641 ubox
57 73 0.004126636 ubox
57 79 0.006258268 ubox
58 63 0.003557164 ubox
58 70 0.003497912 ubox
58 75 0.006054659 ubox
58 76 0.009979559 ubox
58 78 0.006936471 ubox
59 74 0.005802468 ubox
59 75 0.011677163 ubox
59 77 0.006782647 ubox
60 74 0.011516192 ubox
60 76 0.006722195 ubox
61 71 0.060342891 ubox
61 73 0.007491683 ubox
62 70 0.068458553 ubox
63 69 0.068552908 ubox
63 72 0.006494305 ubox
63 73 0.003685288 ubox
64 74 0.007995988 ubox
64 76 0.007850574 ubox
64 77 0.019498135 ubox
65 74 0.018065130 ubox
65 76 0.020251333 ubox
65 77 0.024636842 ubox
66 74 0.012401332 ubox
66 76 0.025064879 ubox
66 77 0.042376106 ubox
67 74 0.021665551 ubox
67 76 0.045282579 ubox
67 77 0.184339722 ubox
68 74 0.032989652 ubox
68 76 0.205300873 ubox
68 77 0.032340000 ubox
69 74 0.015796247 ubox
69 75 0.206482168 ubox
69 76 0.030724454 ubox
69 77 0.010088333 ubox
69 78 0.055751782 ubox
70 79 0.045725166 ubox
71 76 0.024161358 ubox
71 77 0.028084663 ubox
72 76 0.021379927 ubox
72 77 0.018979851 ubox
72 78 0.128266822 ubox
73 77 0.083611567 ubox
73 78 0.134313828 ubox
74 79 0.008510960 ubox
75 79 0.012780392 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
26 53 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
