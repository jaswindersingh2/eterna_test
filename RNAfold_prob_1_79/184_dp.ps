%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (184)
} def

/sequence { (\
GGAAAAAGGCAGAGCAUGUCCGGUGGAGUCCCGAAAGGAGAACAGCGAGAGAGGGCUCGGGCAAAAAGGUCUGUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.004403725 ubox
1 72 0.007547391 ubox
1 76 0.003410875 ubox
1 77 0.004556571 ubox
1 78 0.172106852 ubox
2 20 0.003176211 ubox
2 71 0.007999426 ubox
2 75 0.003820858 ubox
2 77 0.138216588 ubox
2 78 0.355811614 ubox
3 70 0.007949874 ubox
3 74 0.003372177 ubox
3 76 0.085285146 ubox
3 77 0.330777224 ubox
4 76 0.162347464 ubox
4 77 0.031249455 ubox
5 74 0.003508299 ubox
5 76 0.019224108 ubox
5 77 0.055180309 ubox
6 76 0.047271408 ubox
6 77 0.830981313 ubox
7 72 0.013096920 ubox
7 76 0.969591298 ubox
7 77 0.025857111 ubox
8 20 0.013956451 ubox
8 62 0.006404031 ubox
8 71 0.013245810 ubox
8 75 0.998803466 ubox
8 76 0.022401607 ubox
8 78 0.003374093 ubox
9 15 0.003689406 ubox
9 19 0.014193541 ubox
9 62 0.011738290 ubox
9 70 0.013093771 ubox
9 74 0.998919469 ubox
9 75 0.022919511 ubox
10 14 0.003669911 ubox
10 18 0.014322993 ubox
10 60 0.006424006 ubox
10 61 0.011714671 ubox
10 69 0.013073068 ubox
10 73 0.999535035 ubox
11 17 0.014091687 ubox
11 72 0.998343168 ubox
12 58 0.061537819 ubox
12 71 0.997873847 ubox
13 57 0.061978874 ubox
13 70 0.994346163 ubox
14 56 0.062387600 ubox
14 62 0.004160540 ubox
14 70 0.044648708 ubox
15 54 0.005298772 ubox
15 55 0.062131612 ubox
15 61 0.004152464 ubox
15 68 0.955097440 ubox
15 69 0.085138730 ubox
16 24 0.003249075 ubox
17 23 0.003285173 ubox
17 41 0.030504747 ubox
17 44 0.006573300 ubox
17 52 0.051417064 ubox
17 53 0.006260636 ubox
17 54 0.007197217 ubox
17 63 0.903506863 ubox
17 64 0.136006619 ubox
17 65 0.043568601 ubox
17 66 0.169632495 ubox
17 67 0.132294789 ubox
17 68 0.010192182 ubox
17 69 0.003533976 ubox
18 43 0.007320259 ubox
18 56 0.004607643 ubox
18 62 0.961082137 ubox
19 27 0.016170662 ubox
19 39 0.036358110 ubox
19 42 0.004871363 ubox
19 50 0.063551719 ubox
19 52 0.007580746 ubox
19 55 0.004608590 ubox
19 61 0.960703596 ubox
19 63 0.022986140 ubox
19 64 0.047624025 ubox
19 65 0.051468753 ubox
19 66 0.016994204 ubox
19 67 0.006376707 ubox
20 26 0.017332927 ubox
20 38 0.037416181 ubox
20 49 0.063830548 ubox
20 51 0.007578180 ubox
20 54 0.004635777 ubox
20 59 0.003414071 ubox
20 60 0.960809187 ubox
20 61 0.026962889 ubox
20 69 0.008002626 ubox
21 25 0.017290045 ubox
21 26 0.003740622 ubox
21 33 0.008519148 ubox
21 37 0.037369637 ubox
21 47 0.074094898 ubox
21 53 0.004505129 ubox
21 59 0.959851652 ubox
21 60 0.026405645 ubox
21 61 0.011106850 ubox
21 68 0.008010744 ubox
22 31 0.013416025 ubox
22 32 0.013445899 ubox
22 46 0.173521903 ubox
22 57 0.025056266 ubox
22 58 0.639696868 ubox
22 62 0.244742057 ubox
23 29 0.003196132 ubox
23 30 0.019427009 ubox
23 31 0.013506065 ubox
23 32 0.010501456 ubox
23 43 0.107065859 ubox
23 46 0.057049303 ubox
23 56 0.150983169 ubox
23 57 0.322778825 ubox
23 58 0.032430945 ubox
23 62 0.052419240 ubox
24 28 0.003466892 ubox
24 33 0.059658915 ubox
24 34 0.013845445 ubox
24 42 0.106693211 ubox
24 44 0.206092171 ubox
24 45 0.054363010 ubox
24 47 0.043089715 ubox
24 48 0.014408880 ubox
24 54 0.006586220 ubox
24 55 0.148329269 ubox
24 59 0.013428423 ubox
24 60 0.256616506 ubox
24 61 0.043438898 ubox
25 30 0.015192038 ubox
25 31 0.015014688 ubox
25 32 0.076274439 ubox
25 43 0.228410860 ubox
25 46 0.056864800 ubox
25 56 0.060799878 ubox
25 57 0.030147907 ubox
25 58 0.050086363 ubox
26 30 0.015446243 ubox
26 31 0.076064526 ubox
26 32 0.009435167 ubox
26 43 0.037129055 ubox
26 46 0.016936244 ubox
26 56 0.034339995 ubox
26 57 0.036786638 ubox
26 58 0.739924867 ubox
27 57 0.873476030 ubox
28 43 0.143505938 ubox
28 46 0.007030122 ubox
28 56 0.921384810 ubox
28 57 0.008463171 ubox
28 62 0.006612319 ubox
29 38 0.007330181 ubox
29 39 0.245863224 ubox
29 40 0.017532134 ubox
29 41 0.190691216 ubox
29 42 0.105343006 ubox
29 45 0.005308066 ubox
29 48 0.013818774 ubox
29 50 0.129619604 ubox
29 51 0.004763175 ubox
29 52 0.057772764 ubox
29 54 0.007012851 ubox
29 55 0.888275561 ubox
30 37 0.007758752 ubox
30 38 0.245560098 ubox
30 40 0.220268607 ubox
30 47 0.013844231 ubox
30 49 0.129902917 ubox
30 51 0.057954183 ubox
30 53 0.008111314 ubox
30 54 0.888201579 ubox
30 55 0.252172892 ubox
30 61 0.007381356 ubox
31 37 0.242765828 ubox
31 38 0.244531098 ubox
31 40 0.010400956 ubox
31 45 0.004151298 ubox
31 47 0.020256702 ubox
31 49 0.047096361 ubox
31 51 0.006211177 ubox
31 53 0.887097954 ubox
31 54 0.253747201 ubox
31 55 0.003673588 ubox
31 60 0.007439340 ubox
32 37 0.248127414 ubox
32 38 0.031570412 ubox
32 40 0.019530154 ubox
32 45 0.024678420 ubox
32 47 0.166687045 ubox
32 49 0.068743194 ubox
32 51 0.824710717 ubox
32 53 0.255099617 ubox
32 54 0.003839371 ubox
32 59 0.007470974 ubox
33 43 0.009356096 ubox
33 46 0.166135083 ubox
33 58 0.007407087 ubox
34 57 0.005844652 ubox
37 43 0.121977145 ubox
37 46 0.808275575 ubox
38 43 0.108167587 ubox
38 46 0.195222691 ubox
38 58 0.020612560 ubox
39 57 0.022251099 ubox
40 46 0.110182024 ubox
40 56 0.022903347 ubox
40 58 0.003854603 ubox
40 62 0.008375425 ubox
41 57 0.003350330 ubox
43 47 0.006041917 ubox
43 49 0.013498278 ubox
43 51 0.009217578 ubox
43 53 0.020978480 ubox
43 54 0.025515524 ubox
43 55 0.003650759 ubox
43 59 0.008991888 ubox
43 61 0.005229856 ubox
44 57 0.229314086 ubox
45 56 0.283659048 ubox
45 62 0.035941099 ubox
46 51 0.042459358 ubox
46 53 0.025249744 ubox
46 54 0.016400002 ubox
46 55 0.283797489 ubox
46 59 0.021760708 ubox
46 61 0.035900450 ubox
47 56 0.009767584 ubox
47 58 0.134061341 ubox
48 57 0.135404957 ubox
49 56 0.135163556 ubox
49 58 0.115751541 ubox
50 57 0.116857529 ubox
51 56 0.116384409 ubox
51 58 0.011455477 ubox
51 78 0.015126030 ubox
52 57 0.010834290 ubox
52 77 0.015139604 ubox
53 58 0.003620950 ubox
53 76 0.015147869 ubox
54 62 0.003577360 ubox
54 75 0.015159885 ubox
55 62 0.014513454 ubox
55 74 0.014773913 ubox
56 61 0.014494950 ubox
56 73 0.013834054 ubox
58 73 0.006539175 ubox
59 71 0.017780463 ubox
59 72 0.044190130 ubox
59 76 0.013980265 ubox
60 70 0.017601270 ubox
60 71 0.056591817 ubox
60 75 0.015267565 ubox
61 70 0.056990648 ubox
61 74 0.015316086 ubox
62 68 0.017876569 ubox
62 69 0.057024191 ubox
62 73 0.015350698 ubox
63 72 0.015094841 ubox
66 77 0.005547966 ubox
67 76 0.006184799 ubox
68 75 0.006271520 ubox
68 76 0.003209613 ubox
69 74 0.004253192 ubox
69 75 0.003279383 ubox
6 77 0.9500000 lbox
7 76 0.9500000 lbox
8 75 0.9500000 lbox
9 74 0.9500000 lbox
10 73 0.9500000 lbox
11 72 0.9500000 lbox
12 71 0.9500000 lbox
13 70 0.9500000 lbox
15 68 0.9500000 lbox
17 63 0.9500000 lbox
18 62 0.9500000 lbox
19 61 0.9500000 lbox
20 60 0.9500000 lbox
21 59 0.9500000 lbox
26 58 0.9500000 lbox
27 57 0.9500000 lbox
28 56 0.9500000 lbox
29 55 0.9500000 lbox
30 54 0.9500000 lbox
31 53 0.9500000 lbox
32 51 0.9500000 lbox
37 46 0.9500000 lbox
showpage
end
%%EOF
