%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (291)
} def

/sequence { (\
GGAAAAAAGCACGAGUACGAAAGUACACUCAGCUGAAAGAUGCUACGGAGUCGCAGAGGAGAAGUGCACCUGGACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.198724817 ubox
1 12 0.120175410 ubox
1 28 0.004185716 ubox
1 29 0.005392550 ubox
1 30 0.017006406 ubox
1 34 0.003755621 ubox
1 41 0.067323842 ubox
1 43 0.127843129 ubox
1 44 0.127066166 ubox
1 46 0.018301209 ubox
1 70 0.009713197 ubox
1 75 0.009166461 ubox
1 76 0.004265269 ubox
1 78 0.012534357 ubox
2 10 0.065731998 ubox
2 12 0.036204118 ubox
2 28 0.007098372 ubox
2 29 0.015266918 ubox
2 30 0.027290844 ubox
2 33 0.003805517 ubox
2 41 0.022775228 ubox
2 43 0.134374611 ubox
2 44 0.006470936 ubox
2 46 0.010832076 ubox
2 69 0.009715497 ubox
2 75 0.004904404 ubox
2 77 0.011501665 ubox
2 78 0.013300866 ubox
3 29 0.026859392 ubox
3 41 0.099020860 ubox
3 44 0.005145295 ubox
3 76 0.010662623 ubox
3 77 0.012544138 ubox
4 34 0.003413248 ubox
4 41 0.024397969 ubox
4 44 0.005118839 ubox
4 76 0.010513975 ubox
5 34 0.004771458 ubox
5 41 0.011815742 ubox
5 44 0.005134737 ubox
5 71 0.004778463 ubox
6 34 0.006687203 ubox
6 41 0.003618397 ubox
6 44 0.004624843 ubox
6 71 0.003458644 ubox
7 34 0.024377580 ubox
7 41 0.007010819 ubox
7 44 0.013496114 ubox
7 71 0.006506480 ubox
8 29 0.026980717 ubox
8 34 0.548814957 ubox
8 44 0.274116572 ubox
8 71 0.005821571 ubox
8 76 0.003535415 ubox
9 16 0.011727958 ubox
9 24 0.008561162 ubox
9 26 0.005783207 ubox
9 28 0.028474094 ubox
9 29 0.005795558 ubox
9 30 0.051364452 ubox
9 33 0.565020293 ubox
9 34 0.003520047 ubox
9 43 0.284460945 ubox
9 46 0.007969537 ubox
9 54 0.023995204 ubox
9 67 0.056827920 ubox
9 75 0.003547824 ubox
10 15 0.012237686 ubox
10 23 0.008759804 ubox
10 32 0.564315489 ubox
10 35 0.052851829 ubox
10 42 0.284441313 ubox
10 53 0.023945852 ubox
10 66 0.056957127 ubox
10 79 0.009114000 ubox
11 24 0.008382418 ubox
11 29 0.043216071 ubox
11 34 0.052783228 ubox
11 41 0.264460916 ubox
11 51 0.005615868 ubox
11 65 0.056915281 ubox
12 19 0.015913566 ubox
12 23 0.008683644 ubox
12 32 0.083393206 ubox
12 35 0.025195709 ubox
12 39 0.151512710 ubox
12 47 0.007543962 ubox
12 50 0.005599839 ubox
12 53 0.011427865 ubox
12 64 0.056829891 ubox
12 72 0.003217537 ubox
12 79 0.029003047 ubox
13 18 0.015783857 ubox
13 26 0.007864854 ubox
13 28 0.312494326 ubox
13 29 0.055031264 ubox
13 30 0.702243401 ubox
13 33 0.004595597 ubox
13 34 0.011040483 ubox
13 46 0.010566391 ubox
13 52 0.012084768 ubox
13 77 0.012762305 ubox
13 78 0.027667752 ubox
14 29 0.694572162 ubox
14 34 0.023183555 ubox
14 44 0.022270796 ubox
14 51 0.008755253 ubox
14 76 0.019462986 ubox
14 77 0.021241719 ubox
15 26 0.793406023 ubox
15 28 0.602043802 ubox
15 30 0.003794808 ubox
15 33 0.023991234 ubox
15 41 0.004622895 ubox
15 43 0.022843535 ubox
15 75 0.024002745 ubox
15 76 0.005774451 ubox
16 25 0.856608429 ubox
16 27 0.489251356 ubox
16 32 0.023204649 ubox
16 35 0.014359587 ubox
16 36 0.004355537 ubox
16 37 0.003534411 ubox
16 40 0.006882926 ubox
16 42 0.022818801 ubox
16 74 0.020833016 ubox
17 24 0.972836673 ubox
17 34 0.014013791 ubox
17 41 0.022384979 ubox
18 23 0.982861309 ubox
18 32 0.011680536 ubox
18 35 0.006266698 ubox
18 39 0.021369861 ubox
18 72 0.019077535 ubox
18 73 0.009769014 ubox
19 24 0.033252231 ubox
19 26 0.052752957 ubox
19 28 0.004348521 ubox
19 30 0.025292177 ubox
19 33 0.004146611 ubox
19 34 0.004446972 ubox
19 71 0.017514725 ubox
20 24 0.012928623 ubox
20 29 0.024988591 ubox
20 71 0.007245604 ubox
22 29 0.013663899 ubox
22 34 0.027518553 ubox
22 44 0.011758648 ubox
23 28 0.014430904 ubox
23 30 0.006109101 ubox
23 33 0.027891379 ubox
23 43 0.012220085 ubox
23 46 0.003937987 ubox
23 67 0.024743591 ubox
23 69 0.003428486 ubox
24 32 0.027509968 ubox
24 42 0.012186320 ubox
24 45 0.004003630 ubox
24 66 0.024784806 ubox
24 68 0.003380726 ubox
25 41 0.011858789 ubox
25 44 0.003729385 ubox
25 65 0.024774747 ubox
26 35 0.005378552 ubox
26 39 0.009279839 ubox
26 42 0.004487444 ubox
26 64 0.024690734 ubox
26 66 0.003529354 ubox
27 34 0.008361542 ubox
27 41 0.008813564 ubox
27 44 0.004039258 ubox
27 51 0.036932480 ubox
27 65 0.003551487 ubox
28 32 0.011361214 ubox
28 35 0.059104312 ubox
28 39 0.056726321 ubox
28 42 0.012742983 ubox
28 47 0.011486228 ubox
28 48 0.006177034 ubox
28 50 0.041311958 ubox
28 58 0.024267022 ubox
28 61 0.066788300 ubox
28 64 0.003415990 ubox
28 79 0.003641652 ubox
29 35 0.005683136 ubox
29 36 0.146625343 ubox
29 37 0.008896611 ubox
29 38 0.055081599 ubox
29 39 0.003283554 ubox
29 40 0.112640484 ubox
29 45 0.065018357 ubox
29 47 0.006057726 ubox
29 48 0.003732930 ubox
29 49 0.041391305 ubox
29 57 0.024351238 ubox
29 60 0.080823045 ubox
29 62 0.003611362 ubox
30 35 0.154215055 ubox
30 39 0.120286497 ubox
30 42 0.016253861 ubox
30 47 0.006531424 ubox
30 48 0.041292003 ubox
30 56 0.024174142 ubox
30 59 0.082140659 ubox
30 61 0.004276383 ubox
31 41 0.017084922 ubox
31 44 0.722017119 ubox
32 41 0.005260315 ubox
32 43 0.758050547 ubox
32 44 0.003566930 ubox
32 46 0.003326194 ubox
32 54 0.023248410 ubox
33 39 0.065659887 ubox
33 42 0.758164983 ubox
33 53 0.023151534 ubox
33 56 0.082776387 ubox
33 58 0.007289916 ubox
34 38 0.059781536 ubox
34 39 0.023640197 ubox
34 40 0.100742801 ubox
34 42 0.003898879 ubox
34 45 0.007938687 ubox
34 55 0.082804982 ubox
34 57 0.007282146 ubox
35 41 0.015541778 ubox
35 43 0.032306029 ubox
35 44 0.014133987 ubox
35 46 0.009242133 ubox
35 52 0.011116573 ubox
35 54 0.082347889 ubox
36 41 0.018879222 ubox
36 44 0.010318589 ubox
36 51 0.010752209 ubox
37 41 0.010509604 ubox
37 44 0.015861497 ubox
38 44 0.056709685 ubox
38 51 0.008511721 ubox
39 43 0.057551526 ubox
39 44 0.012876738 ubox
39 46 0.016943102 ubox
39 52 0.084737517 ubox
40 44 0.007446651 ubox
40 51 0.084826377 ubox
41 45 0.005050383 ubox
41 47 0.007429197 ubox
41 48 0.003524518 ubox
41 49 0.006645141 ubox
41 50 0.077917655 ubox
41 55 0.011232097 ubox
42 46 0.010154242 ubox
42 51 0.008992878 ubox
42 54 0.012460032 ubox
43 47 0.006545473 ubox
43 48 0.077396826 ubox
43 50 0.010282371 ubox
43 53 0.012444893 ubox
43 56 0.004755423 ubox
43 79 0.004343793 ubox
44 49 0.009864099 ubox
44 55 0.004686648 ubox
45 51 0.010541042 ubox
46 50 0.010591720 ubox
46 53 0.007751250 ubox
46 72 0.004582680 ubox
46 79 0.946029517 ubox
47 52 0.007839285 ubox
47 71 0.004625968 ubox
47 78 0.994101803 ubox
48 70 0.004638975 ubox
48 77 0.994023194 ubox
48 78 0.016704985 ubox
49 76 0.994692127 ubox
49 77 0.011988055 ubox
50 69 0.004643912 ubox
50 75 0.995083046 ubox
51 59 0.003509667 ubox
51 60 0.010008157 ubox
51 68 0.004629090 ubox
51 74 0.994947664 ubox
52 58 0.007447687 ubox
52 59 0.013488015 ubox
52 61 0.003786482 ubox
52 72 0.004164411 ubox
52 73 0.994014859 ubox
53 65 0.003171828 ubox
53 67 0.035609422 ubox
54 59 0.003749066 ubox
54 64 0.003178909 ubox
54 66 0.035629325 ubox
54 72 0.991438335 ubox
55 65 0.034813824 ubox
55 71 0.991149359 ubox
56 67 0.003690572 ubox
56 69 0.041532131 ubox
56 70 0.988789816 ubox
56 71 0.007166092 ubox
57 65 0.010391052 ubox
57 71 0.061324695 ubox
58 65 0.013029592 ubox
58 67 0.253818908 ubox
58 69 0.452258828 ubox
58 70 0.086669272 ubox
58 71 0.003337049 ubox
59 65 0.019808787 ubox
59 67 0.829949798 ubox
59 69 0.091641269 ubox
59 70 0.004586079 ubox
60 65 0.353705592 ubox
60 71 0.003166850 ubox
61 65 0.136488305 ubox
61 67 0.165165368 ubox
61 69 0.015581591 ubox
61 70 0.004313013 ubox
61 78 0.071175740 ubox
62 77 0.074377173 ubox
63 76 0.075988019 ubox
64 69 0.009461221 ubox
64 75 0.076296060 ubox
65 74 0.076095833 ubox
67 72 0.071817559 ubox
67 73 0.006321940 ubox
71 79 0.005154958 ubox
72 78 0.009348449 ubox
73 77 0.006078629 ubox
73 78 0.006964448 ubox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
31 44 0.9500000 lbox
32 43 0.9500000 lbox
33 42 0.9500000 lbox
46 79 0.9500000 lbox
47 78 0.9500000 lbox
48 77 0.9500000 lbox
49 76 0.9500000 lbox
50 75 0.9500000 lbox
51 74 0.9500000 lbox
52 73 0.9500000 lbox
54 72 0.9500000 lbox
55 71 0.9500000 lbox
56 70 0.9500000 lbox
59 67 0.9500000 lbox
showpage
end
%%EOF
