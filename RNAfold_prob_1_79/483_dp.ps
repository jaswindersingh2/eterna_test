%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (483)
} def

/sequence { (\
GGAAAAGGUGUCGACAGUGGAAACGCGUCGAAAGGCGUCAAAAUGUGUGGAAACAUAUAGAUAUCAAACGGAGGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.020887675 ubox
1 11 0.006353848 ubox
1 12 0.012336128 ubox
1 36 0.003795993 ubox
1 39 0.018001305 ubox
1 65 0.009314728 ubox
1 69 0.015547271 ubox
1 75 0.006088898 ubox
1 76 0.009069130 ubox
1 77 0.003354514 ubox
1 78 0.103036717 ubox
2 9 0.019430742 ubox
2 11 0.013036186 ubox
2 12 0.015370081 ubox
2 29 0.003275127 ubox
2 36 0.005276717 ubox
2 38 0.015978810 ubox
2 39 0.050816565 ubox
2 64 0.005868212 ubox
2 65 0.014702955 ubox
2 69 0.011541498 ubox
2 75 0.010389607 ubox
2 77 0.081838316 ubox
2 78 0.150476078 ubox
3 9 0.022069038 ubox
3 11 0.015344745 ubox
3 28 0.003188917 ubox
3 38 0.049770807 ubox
3 64 0.013779573 ubox
3 76 0.060962905 ubox
3 77 0.138570157 ubox
4 9 0.022202508 ubox
4 11 0.006753834 ubox
4 38 0.007132228 ubox
4 76 0.085306031 ubox
4 77 0.009993476 ubox
5 9 0.013942476 ubox
5 11 0.005278657 ubox
5 38 0.007385699 ubox
5 76 0.007781570 ubox
5 77 0.029227838 ubox
6 11 0.010950195 ubox
6 28 0.005413023 ubox
6 38 0.043152117 ubox
6 76 0.034654835 ubox
6 77 0.102238829 ubox
7 11 0.003516133 ubox
7 12 0.006674495 ubox
7 36 0.069645998 ubox
7 38 0.003794639 ubox
7 39 0.023304275 ubox
7 65 0.121033015 ubox
7 69 0.006539068 ubox
7 75 0.035182658 ubox
7 76 0.128633673 ubox
7 77 0.006771957 ubox
7 78 0.067018214 ubox
8 15 0.007220579 ubox
8 24 0.009939171 ubox
8 26 0.007867049 ubox
8 36 0.082243919 ubox
8 38 0.021990603 ubox
8 39 0.006164285 ubox
8 54 0.008039270 ubox
8 56 0.005234783 ubox
8 64 0.121563201 ubox
8 65 0.003379519 ubox
8 69 0.017359564 ubox
8 75 0.134001077 ubox
8 76 0.005031859 ubox
8 77 0.043186015 ubox
8 78 0.030341917 ubox
9 14 0.007168078 ubox
9 23 0.009662514 ubox
9 25 0.007872033 ubox
9 31 0.008975538 ubox
9 32 0.089602624 ubox
9 33 0.115945280 ubox
9 34 0.061890559 ubox
9 35 0.080338850 ubox
9 37 0.022893056 ubox
9 53 0.007807797 ubox
9 55 0.005373482 ubox
9 63 0.121650841 ubox
9 66 0.003721451 ubox
9 68 0.016806644 ubox
9 70 0.016892806 ubox
9 72 0.003848902 ubox
9 73 0.023436278 ubox
9 74 0.133371921 ubox
9 79 0.019711689 ubox
10 24 0.007892021 ubox
10 36 0.026158402 ubox
10 39 0.003589233 ubox
10 54 0.005387095 ubox
10 62 0.121180219 ubox
10 65 0.004032023 ubox
10 69 0.018233676 ubox
10 75 0.045121271 ubox
10 78 0.032786007 ubox
11 20 0.003513203 ubox
11 21 0.010383260 ubox
11 23 0.006562002 ubox
11 31 0.917183268 ubox
11 32 0.042346686 ubox
11 33 0.026383481 ubox
11 35 0.020948707 ubox
11 51 0.009023546 ubox
11 53 0.003478527 ubox
11 61 0.120444406 ubox
11 68 0.013122626 ubox
11 71 0.018077971 ubox
11 72 0.125425843 ubox
11 74 0.044849265 ubox
12 19 0.004847559 ubox
12 20 0.011504982 ubox
12 30 0.981650108 ubox
12 34 0.012469202 ubox
12 50 0.010084828 ubox
12 60 0.119294325 ubox
12 70 0.026487580 ubox
12 71 0.122076115 ubox
12 73 0.044472805 ubox
12 79 0.003775010 ubox
13 18 0.004426015 ubox
13 24 0.005462592 ubox
13 29 0.988092789 ubox
13 39 0.041992897 ubox
13 65 0.006106861 ubox
13 69 0.030008834 ubox
13 78 0.004031247 ubox
14 18 0.005559691 ubox
14 28 0.987796981 ubox
14 38 0.041908397 ubox
14 46 0.006653728 ubox
14 48 0.010214282 ubox
14 58 0.003864308 ubox
14 64 0.005630401 ubox
14 77 0.003911390 ubox
15 19 0.007216961 ubox
15 20 0.012021517 ubox
15 25 0.006669810 ubox
15 27 0.981885426 ubox
15 37 0.041763676 ubox
15 45 0.007389269 ubox
15 47 0.010266871 ubox
15 70 0.041466933 ubox
15 71 0.006017693 ubox
16 44 0.007312238 ubox
16 46 0.010047672 ubox
16 76 0.003594773 ubox
17 24 0.163015893 ubox
17 26 0.979294244 ubox
17 39 0.003931787 ubox
17 44 0.005459440 ubox
17 54 0.004465283 ubox
17 56 0.006488925 ubox
17 64 0.006068335 ubox
17 65 0.004813014 ubox
17 69 0.028463421 ubox
17 75 0.003655075 ubox
18 23 0.161501786 ubox
18 25 0.979471893 ubox
18 40 0.016538625 ubox
18 41 0.003424917 ubox
18 42 0.004348468 ubox
18 43 0.006637628 ubox
18 53 0.004448071 ubox
18 55 0.006701692 ubox
18 63 0.006432934 ubox
18 66 0.054446445 ubox
18 67 0.007691764 ubox
18 68 0.027733985 ubox
18 70 0.003400206 ubox
18 74 0.003539969 ubox
19 24 0.978618929 ubox
19 26 0.009568323 ubox
19 39 0.018380330 ubox
19 44 0.003512924 ubox
19 54 0.006705314 ubox
19 62 0.005559787 ubox
19 65 0.054849417 ubox
19 69 0.003689975 ubox
20 24 0.010559076 ubox
20 38 0.008433109 ubox
20 39 0.016310722 ubox
20 64 0.037246976 ubox
20 65 0.030910610 ubox
20 78 0.004814422 ubox
21 38 0.011799625 ubox
21 62 0.007521257 ubox
21 64 0.029405520 ubox
21 77 0.004767560 ubox
22 62 0.013797389 ubox
22 76 0.004085795 ubox
23 38 0.053642379 ubox
23 48 0.007447436 ubox
23 62 0.005948492 ubox
24 37 0.058195213 ubox
24 47 0.007496918 ubox
24 60 0.015406128 ubox
25 36 0.058805880 ubox
25 38 0.113560251 ubox
25 39 0.033144670 ubox
25 46 0.006845640 ubox
25 75 0.009044088 ubox
26 35 0.058779585 ubox
26 37 0.123929548 ubox
26 45 0.006737132 ubox
26 74 0.009045473 ubox
27 36 0.140011389 ubox
27 39 0.007397431 ubox
27 44 0.006354085 ubox
28 33 0.025423566 ubox
28 35 0.139928277 ubox
28 43 0.006239850 ubox
28 72 0.008836031 ubox
29 34 0.139810841 ubox
29 35 0.004227068 ubox
29 37 0.008393238 ubox
29 70 0.008204372 ubox
29 71 0.008517733 ubox
29 79 0.009429039 ubox
30 36 0.013630522 ubox
30 39 0.037808424 ubox
30 65 0.005465281 ubox
30 69 0.014842811 ubox
30 78 0.033189276 ubox
31 38 0.035733141 ubox
31 64 0.005298346 ubox
31 77 0.032330299 ubox
32 76 0.016956443 ubox
32 77 0.098846026 ubox
33 38 0.003844919 ubox
33 48 0.005188036 ubox
33 76 0.102381140 ubox
33 77 0.791072175 ubox
34 39 0.014835214 ubox
34 64 0.006499055 ubox
34 65 0.110683642 ubox
34 69 0.014162614 ubox
34 75 0.090006913 ubox
34 76 0.940358255 ubox
34 77 0.023028477 ubox
34 78 0.031427929 ubox
35 39 0.004789667 ubox
35 46 0.009071498 ubox
35 64 0.105977030 ubox
35 65 0.012957621 ubox
35 69 0.005119817 ubox
35 75 0.963228426 ubox
35 76 0.004356096 ubox
35 77 0.018925960 ubox
36 45 0.009829350 ubox
36 70 0.047145893 ubox
36 73 0.073034921 ubox
36 74 0.964564511 ubox
37 44 0.009894412 ubox
37 62 0.156345559 ubox
37 64 0.010876489 ubox
37 65 0.022545901 ubox
37 69 0.050692285 ubox
37 75 0.032029367 ubox
38 43 0.009559086 ubox
38 61 0.160196811 ubox
38 63 0.011155338 ubox
38 66 0.003686724 ubox
38 67 0.004426655 ubox
38 68 0.048673942 ubox
38 71 0.053498883 ubox
38 72 0.960428398 ubox
38 73 0.003858956 ubox
38 74 0.031986602 ubox
39 45 0.003484173 ubox
39 60 0.161464396 ubox
39 70 0.060165065 ubox
39 71 0.961634406 ubox
39 73 0.031898189 ubox
40 44 0.005315010 ubox
40 58 0.009869234 ubox
40 62 0.062946535 ubox
40 64 0.070904183 ubox
41 58 0.028394503 ubox
41 62 0.099642799 ubox
41 64 0.024767035 ubox
42 56 0.003328572 ubox
42 58 0.020890910 ubox
42 62 0.069466763 ubox
42 64 0.025428454 ubox
43 56 0.071292854 ubox
43 58 0.420123083 ubox
43 62 0.060609581 ubox
43 64 0.139895601 ubox
44 55 0.075260035 ubox
44 57 0.441852192 ubox
44 59 0.848238697 ubox
44 60 0.010194128 ubox
44 61 0.057502234 ubox
44 63 0.143165118 ubox
44 66 0.116092545 ubox
44 67 0.023566635 ubox
44 68 0.014493657 ubox
44 70 0.047901116 ubox
45 54 0.075841705 ubox
45 56 0.446266174 ubox
45 58 0.865529305 ubox
45 62 0.138353755 ubox
45 64 0.053524069 ubox
45 65 0.114609763 ubox
45 69 0.049122953 ubox
46 53 0.075326427 ubox
46 55 0.447665756 ubox
46 57 0.871717153 ubox
46 59 0.057109850 ubox
46 60 0.003967240 ubox
46 61 0.135039521 ubox
46 63 0.076684383 ubox
46 66 0.016550056 ubox
46 68 0.047180985 ubox
46 70 0.010464320 ubox
47 54 0.447890183 ubox
47 56 0.873367490 ubox
47 58 0.058302751 ubox
47 62 0.077122074 ubox
47 64 0.022039893 ubox
47 65 0.016526062 ubox
47 69 0.010796867 ubox
48 52 0.004947857 ubox
48 53 0.443387287 ubox
48 55 0.873704701 ubox
48 57 0.058192927 ubox
48 59 0.127393991 ubox
48 60 0.003290390 ubox
48 61 0.076196715 ubox
48 63 0.024136246 ubox
48 66 0.040048992 ubox
48 67 0.003207341 ubox
48 68 0.010617270 ubox
49 54 0.873430275 ubox
49 56 0.056679305 ubox
49 58 0.126940367 ubox
49 62 0.023685136 ubox
49 65 0.041421052 ubox
50 54 0.009995138 ubox
50 56 0.004073674 ubox
50 58 0.004807518 ubox
50 64 0.033899473 ubox
50 65 0.019746976 ubox
51 56 0.017567867 ubox
51 58 0.022255224 ubox
51 62 0.006150777 ubox
51 64 0.019446477 ubox
52 56 0.006305765 ubox
52 58 0.005979942 ubox
52 62 0.018458024 ubox
53 58 0.005421939 ubox
53 62 0.010091796 ubox
54 60 0.029927518 ubox
55 62 0.007325346 ubox
55 64 0.006520175 ubox
56 61 0.007338245 ubox
56 63 0.008324145 ubox
57 62 0.008185390 ubox
57 64 0.007943747 ubox
58 63 0.009060837 ubox
58 66 0.005989477 ubox
58 67 0.009444649 ubox
58 68 0.003272889 ubox
59 64 0.028118507 ubox
59 76 0.012683174 ubox
60 64 0.012477703 ubox
60 65 0.149021556 ubox
60 69 0.110777686 ubox
60 75 0.015111231 ubox
60 76 0.003215743 ubox
60 77 0.004333419 ubox
60 78 0.032621758 ubox
61 76 0.004608184 ubox
61 77 0.032425354 ubox
62 66 0.013365872 ubox
62 67 0.033947557 ubox
62 68 0.024855809 ubox
62 70 0.013137257 ubox
62 72 0.003550311 ubox
62 73 0.005039265 ubox
62 74 0.007201657 ubox
64 68 0.011908208 ubox
64 70 0.014621947 ubox
64 71 0.022234814 ubox
64 72 0.055002819 ubox
64 73 0.003266343 ubox
64 74 0.022336102 ubox
65 70 0.155721851 ubox
65 71 0.058472146 ubox
65 73 0.026816036 ubox
65 74 0.007094003 ubox
66 77 0.009443284 ubox
67 76 0.010290895 ubox
67 77 0.008259311 ubox
68 76 0.009035195 ubox
68 77 0.003958108 ubox
69 73 0.009867276 ubox
69 74 0.031196983 ubox
69 79 0.120753907 ubox
70 75 0.031286263 ubox
70 76 0.009767922 ubox
70 77 0.004060369 ubox
70 78 0.126798352 ubox
71 75 0.010720823 ubox
71 76 0.005124627 ubox
71 77 0.122105757 ubox
71 78 0.053635881 ubox
72 76 0.104122435 ubox
72 77 0.050644909 ubox
73 78 0.013832118 ubox
74 78 0.005679742 ubox
11 31 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
33 77 0.9500000 lbox
34 76 0.9500000 lbox
35 75 0.9500000 lbox
36 74 0.9500000 lbox
38 72 0.9500000 lbox
39 71 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
