%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (671)
} def

/sequence { (\
GGAAAGAUCAAGGAAGAAAAAAAAAAUUCCAAGAAGGAAAAAAAAAACUUCAAGAUCAAAAAAAAAAAGAUCUUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.007725504 ubox
1 9 0.058052650 ubox
1 30 0.077000839 ubox
1 51 0.003769315 ubox
1 73 0.003516655 ubox
1 75 0.060279083 ubox
1 76 0.352926037 ubox
1 77 0.043695981 ubox
1 78 0.623454137 ubox
2 8 0.042568179 ubox
2 9 0.124658042 ubox
2 29 0.077054806 ubox
2 50 0.003459693 ubox
2 51 0.005258087 ubox
2 72 0.004006066 ubox
2 74 0.045024707 ubox
2 75 0.407537803 ubox
2 76 0.059875617 ubox
2 77 0.619777917 ubox
2 78 0.421995464 ubox
3 8 0.114252131 ubox
3 28 0.076014206 ubox
3 49 0.003166562 ubox
3 50 0.004905277 ubox
3 71 0.003858969 ubox
3 73 0.027629539 ubox
3 74 0.333522600 ubox
3 76 0.607848285 ubox
3 77 0.392687654 ubox
4 8 0.005930601 ubox
4 27 0.067314372 ubox
4 28 0.006798819 ubox
4 49 0.004077253 ubox
4 73 0.233427485 ubox
4 74 0.688016676 ubox
4 76 0.289653779 ubox
4 77 0.205273816 ubox
5 27 0.009361233 ubox
5 49 0.003463036 ubox
5 73 0.776513581 ubox
5 74 0.038508292 ubox
5 76 0.263531301 ubox
5 77 0.007576957 ubox
6 29 0.004261533 ubox
6 48 0.003889184 ubox
6 51 0.003646198 ubox
6 57 0.126940169 ubox
6 72 0.816812733 ubox
6 73 0.009293301 ubox
6 74 0.022015532 ubox
6 75 0.303364719 ubox
6 76 0.007734161 ubox
6 77 0.009221550 ubox
6 78 0.059390520 ubox
7 27 0.003792027 ubox
7 28 0.004241332 ubox
7 50 0.003460947 ubox
7 56 0.127079900 ubox
7 71 0.816638713 ubox
7 73 0.014825286 ubox
7 74 0.239302627 ubox
7 76 0.009625434 ubox
7 77 0.055666106 ubox
8 12 0.003341486 ubox
8 14 0.011218950 ubox
8 17 0.032706799 ubox
8 22 0.003553826 ubox
8 23 0.005692844 ubox
8 24 0.003911535 ubox
8 25 0.003988777 ubox
8 26 0.004218594 ubox
8 31 0.007994860 ubox
8 32 0.014090913 ubox
8 34 0.037838710 ubox
8 38 0.003237267 ubox
8 55 0.127111607 ubox
8 70 0.816497469 ubox
8 79 0.004791521 ubox
9 13 0.011849467 ubox
9 16 0.034520777 ubox
9 33 0.041228707 ubox
9 37 0.003450094 ubox
9 54 0.126740659 ubox
9 69 0.815670759 ubox
9 79 0.013145318 ubox
10 50 0.004046275 ubox
10 56 0.006138295 ubox
10 73 0.004494628 ubox
10 74 0.010070870 ubox
10 76 0.004658638 ubox
10 77 0.022233633 ubox
11 49 0.004319716 ubox
11 73 0.006827905 ubox
11 76 0.025479079 ubox
11 77 0.022071912 ubox
12 29 0.014080199 ubox
12 30 0.922982892 ubox
12 48 0.004336440 ubox
12 51 0.017847041 ubox
12 75 0.024356714 ubox
12 76 0.025884153 ubox
12 78 0.020595049 ubox
13 28 0.013839962 ubox
13 29 0.924038692 ubox
13 30 0.008645048 ubox
13 50 0.013941245 ubox
13 51 0.160377123 ubox
13 57 0.004536399 ubox
13 74 0.010713413 ubox
13 75 0.026345277 ubox
13 77 0.015622910 ubox
13 78 0.324327520 ubox
14 27 0.015737416 ubox
14 28 0.921429640 ubox
14 49 0.011463969 ubox
14 50 0.160887560 ubox
14 56 0.004371730 ubox
14 73 0.007364183 ubox
14 74 0.024623053 ubox
14 76 0.012697296 ubox
14 77 0.324790416 ubox
15 27 0.897464358 ubox
15 28 0.015474096 ubox
15 49 0.160941531 ubox
15 73 0.020156284 ubox
15 76 0.324824124 ubox
16 27 0.016062666 ubox
16 28 0.007951695 ubox
16 29 0.056438036 ubox
16 30 0.007082854 ubox
16 48 0.160573810 ubox
16 51 0.024981357 ubox
16 72 0.017682142 ubox
16 75 0.324710106 ubox
16 78 0.012163286 ubox
17 27 0.014108009 ubox
17 28 0.057654662 ubox
17 49 0.004085760 ubox
17 50 0.025126372 ubox
17 71 0.015155796 ubox
17 73 0.003667035 ubox
17 74 0.284480143 ubox
17 77 0.012046724 ubox
18 27 0.059002513 ubox
18 28 0.012045868 ubox
18 49 0.023147143 ubox
18 50 0.004475481 ubox
18 73 0.160667244 ubox
18 74 0.013028411 ubox
18 76 0.010854389 ubox
19 27 0.015306750 ubox
19 28 0.021532516 ubox
19 49 0.004716000 ubox
19 50 0.003300563 ubox
19 73 0.010437715 ubox
20 27 0.023745687 ubox
20 28 0.016187814 ubox
20 49 0.003391081 ubox
20 73 0.004024980 ubox
21 27 0.017716307 ubox
21 28 0.019167388 ubox
22 27 0.018884561 ubox
22 28 0.012842899 ubox
23 27 0.011528523 ubox
23 28 0.009010312 ubox
24 28 0.004703480 ubox
25 50 0.003673024 ubox
26 49 0.004005311 ubox
27 31 0.004968480 ubox
27 32 0.007454780 ubox
27 35 0.010579451 ubox
27 38 0.013798164 ubox
27 39 0.256325799 ubox
27 40 0.015027974 ubox
27 41 0.005450608 ubox
27 42 0.003738657 ubox
27 53 0.003615428 ubox
28 32 0.005882528 ubox
28 34 0.011700194 ubox
28 37 0.012815544 ubox
28 38 0.289260474 ubox
28 39 0.012105565 ubox
28 52 0.004744000 ubox
28 55 0.006478977 ubox
29 33 0.011769190 ubox
29 36 0.013118094 ubox
29 37 0.292618186 ubox
29 54 0.006845867 ubox
30 36 0.292457210 ubox
30 37 0.003771571 ubox
30 54 0.023391805 ubox
31 50 0.011033119 ubox
31 56 0.006919609 ubox
31 77 0.011513366 ubox
32 49 0.012410483 ubox
32 56 0.011414219 ubox
32 76 0.012904547 ubox
33 48 0.012512024 ubox
33 50 0.004677214 ubox
33 51 0.947967835 ubox
33 57 0.024455161 ubox
33 75 0.012478912 ubox
33 78 0.076990790 ubox
34 49 0.003896813 ubox
34 50 0.948758897 ubox
34 56 0.023850525 ubox
34 74 0.011655168 ubox
34 77 0.076966594 ubox
35 49 0.948748625 ubox
35 50 0.019146305 ubox
35 73 0.009717710 ubox
35 76 0.076850806 ubox
35 77 0.007976738 ubox
36 48 0.948770237 ubox
36 49 0.024275071 ubox
36 51 0.029676113 ubox
36 57 0.004726761 ubox
36 72 0.008918243 ubox
36 75 0.076592984 ubox
36 76 0.009991329 ubox
37 48 0.028937068 ubox
37 50 0.029417556 ubox
37 51 0.062824661 ubox
37 56 0.003401090 ubox
37 57 0.008584335 ubox
37 71 0.006017477 ubox
37 74 0.053439153 ubox
37 75 0.011485946 ubox
37 78 0.005085623 ubox
38 49 0.028243235 ubox
38 50 0.062362736 ubox
38 56 0.008177161 ubox
38 73 0.033201167 ubox
38 74 0.011752843 ubox
38 77 0.005064611 ubox
39 49 0.057533373 ubox
39 50 0.014659150 ubox
39 73 0.006058782 ubox
39 76 0.004632981 ubox
40 49 0.018806304 ubox
40 50 0.015974307 ubox
41 49 0.016801832 ubox
41 50 0.026663049 ubox
42 49 0.027137626 ubox
42 50 0.020409212 ubox
43 49 0.021227624 ubox
43 50 0.023836132 ubox
44 49 0.023058906 ubox
44 50 0.014255573 ubox
45 49 0.012073190 ubox
45 50 0.009954785 ubox
46 50 0.005192084 ubox
46 56 0.003309644 ubox
48 54 0.017840130 ubox
48 69 0.006936085 ubox
48 79 0.003311153 ubox
49 53 0.016538701 ubox
49 55 0.004776576 ubox
49 59 0.004140005 ubox
49 60 0.006133751 ubox
49 68 0.007127020 ubox
50 54 0.004689547 ubox
50 58 0.004340481 ubox
50 59 0.006724764 ubox
50 60 0.003213506 ubox
50 67 0.006568197 ubox
50 70 0.005514915 ubox
51 69 0.005870569 ubox
52 56 0.015574330 ubox
52 73 0.015839383 ubox
52 74 0.360536564 ubox
52 76 0.005347836 ubox
52 77 0.008334701 ubox
53 73 0.519156414 ubox
53 74 0.008708479 ubox
53 76 0.008745966 ubox
54 72 0.561426489 ubox
54 75 0.008667262 ubox
55 71 0.561602353 ubox
55 74 0.008379015 ubox
56 60 0.018294073 ubox
56 61 0.027455226 ubox
56 62 0.025308205 ubox
56 63 0.032279048 ubox
56 64 0.019841424 ubox
56 65 0.029764510 ubox
56 66 0.014343240 ubox
56 67 0.013227192 ubox
56 68 0.012206624 ubox
56 70 0.561663536 ubox
57 69 0.561344735 ubox
63 74 0.004458067 ubox
64 73 0.004842120 ubox
65 73 0.003234427 ubox
65 74 0.005089808 ubox
66 73 0.005174276 ubox
66 74 0.003896765 ubox
66 77 0.005819501 ubox
67 73 0.004052922 ubox
67 74 0.004539306 ubox
67 76 0.005275281 ubox
67 77 0.071188650 ubox
68 73 0.004395341 ubox
68 76 0.079402305 ubox
68 77 0.003623951 ubox
69 75 0.080641200 ubox
69 76 0.003358435 ubox
69 77 0.003502704 ubox
69 78 0.057626239 ubox
70 74 0.070165152 ubox
70 76 0.003676379 ubox
70 77 0.056906158 ubox
72 79 0.003328635 ubox
75 79 0.004391713 ubox
1 78 0.9500000 lbox
2 77 0.9500000 lbox
3 76 0.9500000 lbox
4 74 0.9500000 lbox
5 73 0.9500000 lbox
6 72 0.9500000 lbox
7 71 0.9500000 lbox
8 70 0.9500000 lbox
9 69 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
showpage
end
%%EOF
