%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (845)
} def

/sequence { (\
GGAAAAGAAUGACAUCAAAAGGAAAAAACUAUCAGACAAAAGUCAGAUAGACCGAUGACAUUCAAAAAAGUCAACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.013342490 ubox
1 16 0.005240471 ubox
1 53 0.020198234 ubox
1 63 0.006217029 ubox
1 71 0.010382056 ubox
1 72 0.112235521 ubox
1 75 0.016666255 ubox
1 76 0.009783242 ubox
1 78 0.065864032 ubox
2 13 0.003331799 ubox
2 15 0.003752496 ubox
2 16 0.010503499 ubox
2 52 0.020137958 ubox
2 62 0.005330145 ubox
2 63 0.010597354 ubox
2 71 0.109521767 ubox
2 72 0.120071115 ubox
2 75 0.011133373 ubox
2 77 0.060604718 ubox
2 78 0.094471731 ubox
3 15 0.010061262 ubox
3 61 0.004102305 ubox
3 62 0.010040978 ubox
3 71 0.119654657 ubox
3 76 0.055978362 ubox
3 77 0.091423182 ubox
4 10 0.008007587 ubox
4 61 0.006552427 ubox
4 71 0.007196842 ubox
4 76 0.078196999 ubox
4 77 0.006967374 ubox
5 10 0.003339997 ubox
5 71 0.004184427 ubox
5 76 0.007622911 ubox
5 77 0.029930864 ubox
6 15 0.003454114 ubox
6 71 0.007981221 ubox
6 76 0.036352850 ubox
6 77 0.005360999 ubox
7 13 0.008955445 ubox
7 16 0.036536955 ubox
7 62 0.004572851 ubox
7 63 0.990448547 ubox
7 72 0.009639372 ubox
7 75 0.036873114 ubox
7 76 0.004604384 ubox
7 77 0.004321094 ubox
7 78 0.057309617 ubox
8 15 0.034489155 ubox
8 61 0.003641300 ubox
8 62 0.991400850 ubox
8 71 0.008856424 ubox
8 76 0.004624130 ubox
8 77 0.057182421 ubox
9 15 0.003450904 ubox
9 61 0.991183847 ubox
9 76 0.051085182 ubox
10 14 0.003802825 ubox
10 17 0.024433107 ubox
10 18 0.003392807 ubox
10 19 0.004801313 ubox
10 24 0.006680320 ubox
10 60 0.991659520 ubox
10 64 0.013609207 ubox
10 73 0.069721299 ubox
10 74 0.005801010 ubox
10 79 0.006129232 ubox
11 16 0.027075901 ubox
11 59 0.990100739 ubox
11 63 0.014541489 ubox
11 72 0.073652940 ubox
11 75 0.005947483 ubox
11 78 0.009928703 ubox
12 62 0.014144925 ubox
12 71 0.073630957 ubox
12 77 0.009187861 ubox
13 21 0.011927862 ubox
13 22 0.009302992 ubox
13 57 0.984474086 ubox
13 70 0.073437234 ubox
14 56 0.985985513 ubox
15 20 0.003448873 ubox
15 22 0.017799146 ubox
15 23 0.046609369 ubox
15 24 0.003670887 ubox
15 54 0.004272331 ubox
15 55 0.985706730 ubox
15 58 0.105220932 ubox
15 68 0.009265127 ubox
15 69 0.006272261 ubox
16 21 0.031542152 ubox
16 22 0.051479027 ubox
16 54 0.984427950 ubox
16 57 0.106192705 ubox
17 56 0.101748031 ubox
18 56 0.013444326 ubox
18 62 0.004015015 ubox
19 61 0.004107464 ubox
19 62 0.004858314 ubox
19 77 0.008680463 ubox
20 30 0.046172339 ubox
20 61 0.005119810 ubox
20 76 0.009708556 ubox
20 77 0.004570291 ubox
21 29 0.060713656 ubox
21 30 0.024242110 ubox
21 52 0.041526264 ubox
21 53 0.823250803 ubox
21 59 0.007448946 ubox
21 63 0.006284287 ubox
21 75 0.009796489 ubox
21 76 0.005394214 ubox
21 78 0.011148307 ubox
22 29 0.031770080 ubox
22 33 0.011208364 ubox
22 52 0.822582845 ubox
22 53 0.056396586 ubox
22 59 0.004090062 ubox
22 62 0.006253164 ubox
22 63 0.009580298 ubox
22 75 0.005453714 ubox
22 77 0.010915065 ubox
22 78 0.020482531 ubox
23 30 0.003516952 ubox
23 32 0.011084112 ubox
23 61 0.005974508 ubox
23 62 0.009523579 ubox
23 76 0.010317838 ubox
23 77 0.020287422 ubox
24 56 0.005401983 ubox
24 61 0.008664221 ubox
24 76 0.018265558 ubox
25 30 0.003663852 ubox
28 56 0.004925429 ubox
29 46 0.006623113 ubox
29 50 0.993620941 ubox
30 45 0.006577501 ubox
30 49 0.997702164 ubox
30 50 0.003637892 ubox
31 48 0.998973827 ubox
32 47 0.999317920 ubox
33 46 0.995807951 ubox
35 44 0.995867954 ubox
36 43 0.999201068 ubox
37 42 0.997373768 ubox
42 52 0.011746072 ubox
43 51 0.011817792 ubox
44 50 0.011824263 ubox
46 53 0.006102292 ubox
50 78 0.003628337 ubox
51 77 0.003904190 ubox
52 57 0.004462284 ubox
52 79 0.004448304 ubox
53 57 0.003781619 ubox
53 79 0.057432933 ubox
54 59 0.006924891 ubox
54 62 0.005145205 ubox
54 63 0.056149018 ubox
54 72 0.005395678 ubox
54 75 0.047185488 ubox
54 77 0.005153373 ubox
54 78 0.062267652 ubox
55 61 0.005712131 ubox
55 62 0.055415181 ubox
55 71 0.005388993 ubox
55 76 0.006640151 ubox
55 77 0.061723858 ubox
56 60 0.005349932 ubox
56 64 0.033340597 ubox
56 65 0.003853634 ubox
56 70 0.005232651 ubox
56 73 0.093654450 ubox
56 74 0.004843109 ubox
57 63 0.037104500 ubox
57 72 0.097818374 ubox
58 62 0.032290094 ubox
58 71 0.097826414 ubox
59 70 0.097690381 ubox
61 66 0.005111194 ubox
61 67 0.008476811 ubox
61 68 0.050288628 ubox
61 69 0.028901198 ubox
62 66 0.007721752 ubox
62 67 0.045655852 ubox
62 68 0.027423340 ubox
62 69 0.005469381 ubox
63 70 0.005113427 ubox
64 71 0.017616350 ubox
64 76 0.007117708 ubox
64 77 0.017353675 ubox
65 71 0.014980961 ubox
65 76 0.017823907 ubox
65 77 0.020760347 ubox
66 71 0.016262378 ubox
66 76 0.020708701 ubox
66 77 0.039843867 ubox
67 71 0.010002357 ubox
67 76 0.042691689 ubox
67 77 0.033841215 ubox
68 76 0.032539496 ubox
68 77 0.317161459 ubox
69 76 0.353100707 ubox
69 77 0.025746064 ubox
70 75 0.355692007 ubox
70 76 0.025501623 ubox
70 77 0.029842650 ubox
70 78 0.078724448 ubox
71 79 0.006002107 ubox
72 79 0.041206335 ubox
73 77 0.008779342 ubox
75 79 0.017167268 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
