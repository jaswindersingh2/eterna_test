%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (104)
} def

/sequence { (\
GGAAAACUUAGAGAUGAAAACCAAAAAACUAUCAGUCGAAAGACAGAUAGAGGCAUCACUAAGAAAAACUCGAUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.026619779 ubox
1 8 0.007838545 ubox
1 22 0.012307398 ubox
1 69 0.288649612 ubox
1 70 0.128738077 ubox
1 71 0.156450435 ubox
1 74 0.003418081 ubox
1 75 0.018451167 ubox
1 76 0.048672373 ubox
1 78 0.067832840 ubox
2 7 0.011104817 ubox
2 9 0.004045756 ubox
2 21 0.012288617 ubox
2 69 0.166124880 ubox
2 70 0.125088802 ubox
2 71 0.162806534 ubox
2 74 0.014485766 ubox
2 75 0.056184962 ubox
2 77 0.066637429 ubox
2 78 0.105713142 ubox
3 8 0.004014795 ubox
3 70 0.159536634 ubox
3 74 0.054657762 ubox
3 76 0.063891190 ubox
3 77 0.105310131 ubox
4 70 0.009246784 ubox
4 74 0.008063332 ubox
4 76 0.096531895 ubox
4 77 0.006791584 ubox
5 70 0.006948576 ubox
5 74 0.020110863 ubox
5 76 0.007959832 ubox
5 77 0.009013935 ubox
6 70 0.012963438 ubox
6 74 0.050270756 ubox
6 76 0.010707921 ubox
6 77 0.003814577 ubox
7 16 0.008861991 ubox
7 63 0.989146220 ubox
7 72 0.008666707 ubox
7 79 0.004912481 ubox
8 17 0.007350982 ubox
8 62 0.995966286 ubox
8 63 0.005946269 ubox
8 64 0.005413929 ubox
8 73 0.004303470 ubox
9 16 0.007710415 ubox
9 61 0.997649321 ubox
9 62 0.005193628 ubox
9 63 0.004822853 ubox
9 72 0.003941566 ubox
9 79 0.004870334 ubox
10 15 0.007547304 ubox
10 60 0.998129735 ubox
10 76 0.006027350 ubox
11 59 0.994673041 ubox
11 71 0.015346173 ubox
11 75 0.006468121 ubox
11 77 0.033596969 ubox
11 78 0.014450470 ubox
12 60 0.007784506 ubox
12 70 0.015349018 ubox
12 74 0.006337932 ubox
12 76 0.036957783 ubox
12 77 0.010569460 ubox
13 22 0.005301458 ubox
13 33 0.004386179 ubox
13 57 0.995191757 ubox
13 59 0.008325202 ubox
13 69 0.015173781 ubox
13 75 0.038507626 ubox
13 78 0.004156059 ubox
14 32 0.004387829 ubox
14 56 0.997666527 ubox
14 74 0.038377945 ubox
14 77 0.004010130 ubox
15 20 0.003450043 ubox
15 23 0.016300346 ubox
15 24 0.003574433 ubox
15 31 0.004354532 ubox
15 55 0.997374545 ubox
15 58 0.037319065 ubox
15 67 0.003990463 ubox
15 72 0.018085247 ubox
15 73 0.033480888 ubox
16 21 0.007811998 ubox
16 22 0.023900538 ubox
16 30 0.004033672 ubox
16 54 0.996430553 ubox
16 57 0.037865934 ubox
16 71 0.030230735 ubox
16 75 0.004025759 ubox
16 78 0.004198791 ubox
17 56 0.036580609 ubox
17 70 0.028560862 ubox
17 74 0.003778816 ubox
17 77 0.004112296 ubox
18 56 0.005109012 ubox
18 70 0.006801699 ubox
18 76 0.003542234 ubox
21 50 0.028358935 ubox
21 52 0.032393513 ubox
21 53 0.614253543 ubox
22 50 0.016752937 ubox
22 52 0.613760087 ubox
22 53 0.080671926 ubox
29 42 0.003251156 ubox
29 46 0.005602164 ubox
29 50 0.995073102 ubox
29 52 0.010405565 ubox
29 53 0.011891227 ubox
30 41 0.003213208 ubox
30 45 0.005547814 ubox
30 49 0.999073374 ubox
30 50 0.003474269 ubox
30 51 0.008577090 ubox
30 52 0.009408410 ubox
31 48 0.999335277 ubox
32 39 0.003431761 ubox
32 47 0.999553402 ubox
32 51 0.006359041 ubox
33 38 0.003467523 ubox
33 46 0.996013414 ubox
33 50 0.006334263 ubox
35 44 0.996062484 ubox
35 48 0.005908567 ubox
36 43 0.999684970 ubox
36 47 0.006522606 ubox
37 42 0.999392832 ubox
37 46 0.006541843 ubox
45 76 0.007253341 ubox
46 75 0.007950054 ubox
47 74 0.007939356 ubox
48 73 0.006921725 ubox
50 57 0.004479610 ubox
50 71 0.013724441 ubox
50 78 0.011837987 ubox
51 56 0.004841181 ubox
51 60 0.035718609 ubox
51 70 0.014924771 ubox
51 77 0.013030496 ubox
52 57 0.006770340 ubox
52 59 0.036833046 ubox
52 60 0.008288113 ubox
52 69 0.015315164 ubox
52 76 0.013487616 ubox
53 57 0.003889961 ubox
53 59 0.008576928 ubox
53 75 0.013569974 ubox
54 63 0.004520732 ubox
55 74 0.013727628 ubox
56 64 0.016799122 ubox
56 73 0.013881095 ubox
57 63 0.017568760 ubox
57 72 0.013900143 ubox
59 79 0.005291181 ubox
61 77 0.013725755 ubox
62 70 0.012202717 ubox
62 76 0.021781796 ubox
63 69 0.014718018 ubox
63 71 0.041570419 ubox
63 75 0.025642868 ubox
63 78 0.042341215 ubox
64 70 0.043905313 ubox
64 74 0.025436091 ubox
64 76 0.007699256 ubox
64 77 0.045637992 ubox
65 70 0.019191214 ubox
65 74 0.015739173 ubox
65 76 0.042991225 ubox
65 77 0.018439251 ubox
66 70 0.010066373 ubox
66 74 0.011577105 ubox
66 76 0.019064028 ubox
66 77 0.034224392 ubox
67 74 0.025160977 ubox
67 76 0.037359243 ubox
67 77 0.019098003 ubox
68 74 0.012844374 ubox
68 76 0.019477306 ubox
68 77 0.012614076 ubox
69 79 0.022170720 ubox
70 79 0.009671294 ubox
71 79 0.428018989 ubox
72 76 0.008226521 ubox
72 77 0.015407354 ubox
72 78 0.470463070 ubox
73 77 0.409403282 ubox
74 79 0.008496128 ubox
75 79 0.011758457 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
