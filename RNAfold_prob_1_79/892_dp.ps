%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (892)
} def

/sequence { (\
GGAAAGCAAGUGCACGCCCAAGCGAAAGCACGGAAACGAAAGGAGCGAAAGCACAACCGAAAGGAAGCGCACGACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.199908409 ubox
1 13 0.004790485 ubox
1 15 0.003627533 ubox
1 17 0.005639889 ubox
1 18 0.046961719 ubox
1 19 0.035884722 ubox
1 31 0.003272225 ubox
1 37 0.162111323 ubox
1 57 0.004413380 ubox
1 58 0.061000545 ubox
1 68 0.004469596 ubox
1 70 0.006277552 ubox
1 72 0.039829843 ubox
1 75 0.020307671 ubox
1 76 0.010439176 ubox
1 78 0.056856355 ubox
2 7 0.082120997 ubox
2 15 0.006982445 ubox
2 17 0.048021421 ubox
2 18 0.035598044 ubox
2 31 0.005286644 ubox
2 37 0.121014750 ubox
2 57 0.060864186 ubox
2 58 0.006174369 ubox
2 68 0.004617775 ubox
2 70 0.012030326 ubox
2 72 0.029867876 ubox
2 75 0.012002179 ubox
2 77 0.051737529 ubox
2 78 0.170878311 ubox
3 11 0.003639305 ubox
3 76 0.045758244 ubox
3 77 0.155958548 ubox
4 76 0.134309210 ubox
4 77 0.098550247 ubox
5 76 0.126512592 ubox
5 77 0.008870666 ubox
6 13 0.080519099 ubox
6 15 0.004299072 ubox
6 17 0.033464462 ubox
6 29 0.045973873 ubox
6 31 0.006639505 ubox
6 37 0.103527604 ubox
6 46 0.010874463 ubox
6 52 0.009688831 ubox
6 54 0.005263106 ubox
6 57 0.022072160 ubox
6 58 0.045650533 ubox
6 68 0.077933569 ubox
6 70 0.069925192 ubox
6 72 0.012146155 ubox
6 75 0.145296834 ubox
6 76 0.010447983 ubox
6 78 0.013305074 ubox
7 12 0.080498331 ubox
7 16 0.033528938 ubox
7 28 0.045965448 ubox
7 32 0.098797693 ubox
7 33 0.321805730 ubox
7 38 0.036376788 ubox
7 45 0.010885135 ubox
7 51 0.009686985 ubox
7 59 0.015917900 ubox
7 63 0.003536113 ubox
7 67 0.077924133 ubox
7 69 0.069942867 ubox
7 73 0.102792993 ubox
7 79 0.018238583 ubox
8 77 0.016552792 ubox
9 76 0.017892093 ubox
10 17 0.005037014 ubox
10 29 0.037173285 ubox
10 31 0.916533919 ubox
10 37 0.007315765 ubox
10 52 0.008505264 ubox
10 54 0.320643208 ubox
10 70 0.075839946 ubox
10 72 0.170111600 ubox
10 75 0.017761185 ubox
11 16 0.004841885 ubox
11 24 0.044614340 ubox
11 28 0.037072494 ubox
11 30 0.920152834 ubox
11 36 0.006842684 ubox
11 47 0.003625374 ubox
11 51 0.008484028 ubox
11 53 0.321119258 ubox
11 69 0.075919565 ubox
11 71 0.170439835 ubox
11 73 0.006134252 ubox
11 74 0.016307799 ubox
12 23 0.046032691 ubox
12 29 0.921504092 ubox
12 46 0.003802899 ubox
12 52 0.321350509 ubox
12 68 0.075971330 ubox
12 70 0.170448321 ubox
12 72 0.010279923 ubox
13 22 0.046024413 ubox
13 28 0.921081136 ubox
13 45 0.003796967 ubox
13 51 0.321203447 ubox
13 67 0.075882797 ubox
13 69 0.168743697 ubox
13 73 0.005377816 ubox
15 22 0.006079616 ubox
15 24 0.922005143 ubox
15 32 0.005282675 ubox
15 38 0.045129413 ubox
15 47 0.338988708 ubox
15 67 0.097029045 ubox
15 69 0.027392492 ubox
16 23 0.924250597 ubox
16 29 0.009283326 ubox
16 31 0.005284139 ubox
16 37 0.046331707 ubox
16 46 0.340707711 ubox
16 52 0.011105595 ubox
16 68 0.058106523 ubox
17 22 0.921003317 ubox
17 24 0.026774942 ubox
17 28 0.009270495 ubox
17 33 0.031507508 ubox
17 38 0.003337760 ubox
17 43 0.008898979 ubox
17 45 0.340660331 ubox
17 51 0.011094070 ubox
17 63 0.003261311 ubox
17 64 0.025410586 ubox
17 67 0.058114959 ubox
18 22 0.023304170 ubox
18 24 0.006302558 ubox
18 32 0.031429537 ubox
18 33 0.109109859 ubox
18 42 0.009170552 ubox
18 43 0.337503101 ubox
18 63 0.025192785 ubox
18 64 0.073410169 ubox
19 24 0.006800530 ubox
19 32 0.109505214 ubox
19 33 0.007053216 ubox
19 42 0.337156270 ubox
19 43 0.026788040 ubox
19 63 0.073454435 ubox
19 64 0.003230567 ubox
22 29 0.354026952 ubox
22 31 0.006139097 ubox
22 37 0.009762352 ubox
22 46 0.011336122 ubox
22 52 0.010632425 ubox
23 28 0.354268784 ubox
23 32 0.022149513 ubox
23 33 0.004034007 ubox
23 38 0.112075202 ubox
23 45 0.011337360 ubox
23 51 0.010643875 ubox
23 59 0.022936931 ubox
24 29 0.011424114 ubox
24 31 0.022068637 ubox
24 37 0.110704747 ubox
24 58 0.022672746 ubox
28 37 0.006283789 ubox
28 46 0.014554252 ubox
28 52 0.016602728 ubox
28 68 0.017570220 ubox
29 33 0.027677474 ubox
29 38 0.006522099 ubox
29 42 0.011326353 ubox
29 43 0.003880881 ubox
29 45 0.014548967 ubox
29 51 0.016614362 ubox
29 67 0.017570481 ubox
31 38 0.342197815 ubox
31 42 0.012555480 ubox
31 43 0.009623058 ubox
31 47 0.017453900 ubox
31 59 0.024083008 ubox
32 37 0.410059327 ubox
32 46 0.018831973 ubox
32 58 0.025577048 ubox
32 78 0.009933107 ubox
33 37 0.038483983 ubox
33 46 0.011000922 ubox
33 57 0.025498462 ubox
33 77 0.009121097 ubox
33 78 0.013938436 ubox
34 76 0.008362026 ubox
34 77 0.013211785 ubox
35 76 0.010247496 ubox
37 42 0.061696566 ubox
37 43 0.032430384 ubox
37 45 0.007963835 ubox
37 47 0.019804811 ubox
37 59 0.028030427 ubox
37 63 0.017193692 ubox
37 73 0.008697802 ubox
37 79 0.149439697 ubox
38 46 0.020132884 ubox
38 57 0.003181886 ubox
38 58 0.028454679 ubox
38 68 0.003266595 ubox
38 72 0.008602110 ubox
38 78 0.156236851 ubox
39 77 0.136328276 ubox
40 76 0.099048832 ubox
40 77 0.071692754 ubox
41 76 0.099383224 ubox
41 77 0.015131721 ubox
42 46 0.003213099 ubox
42 52 0.003776802 ubox
42 54 0.063958579 ubox
42 57 0.008434542 ubox
42 58 0.041574586 ubox
42 68 0.003585075 ubox
42 72 0.024058296 ubox
42 75 0.120375066 ubox
42 76 0.028471616 ubox
42 77 0.008870918 ubox
42 78 0.900314891 ubox
43 52 0.004593086 ubox
43 54 0.059375991 ubox
43 57 0.041489614 ubox
43 70 0.006675541 ubox
43 72 0.030767748 ubox
43 75 0.032196573 ubox
43 76 0.012152794 ubox
43 77 0.906137131 ubox
43 78 0.063339992 ubox
44 76 0.909561454 ubox
44 77 0.051896813 ubox
45 52 0.163194249 ubox
45 54 0.008624888 ubox
45 68 0.010979960 ubox
45 70 0.056425591 ubox
45 72 0.081754994 ubox
45 75 0.910946319 ubox
45 76 0.031247234 ubox
46 51 0.163326001 ubox
46 59 0.006004950 ubox
46 67 0.010994109 ubox
46 69 0.056711968 ubox
46 73 0.912169134 ubox
46 79 0.013947878 ubox
47 52 0.009869540 ubox
47 54 0.006815328 ubox
47 58 0.006076254 ubox
47 68 0.054102827 ubox
47 70 0.056796013 ubox
47 72 0.909999850 ubox
47 75 0.008857569 ubox
47 78 0.015296014 ubox
48 77 0.015171753 ubox
49 76 0.014121399 ubox
51 58 0.003222351 ubox
51 68 0.379384967 ubox
51 70 0.845052244 ubox
52 59 0.006910258 ubox
52 63 0.021804807 ubox
52 64 0.022407547 ubox
52 67 0.378941269 ubox
52 69 0.845230217 ubox
54 59 0.014161162 ubox
54 63 0.040322561 ubox
54 64 0.012452888 ubox
54 67 0.805549789 ubox
57 63 0.039564478 ubox
57 64 0.945103267 ubox
57 69 0.005034113 ubox
57 79 0.005657422 ubox
58 63 0.947656169 ubox
58 64 0.032570558 ubox
58 67 0.010311251 ubox
58 69 0.016303361 ubox
58 73 0.025386758 ubox
58 79 0.078824778 ubox
59 68 0.017801575 ubox
59 72 0.025574088 ubox
59 78 0.084735225 ubox
60 77 0.074126845 ubox
61 76 0.056535100 ubox
61 77 0.042897005 ubox
62 76 0.059189128 ubox
62 77 0.011515576 ubox
63 68 0.026031663 ubox
63 70 0.014659075 ubox
63 72 0.035796057 ubox
63 75 0.071587900 ubox
63 76 0.020772631 ubox
63 78 0.025152732 ubox
64 68 0.004613688 ubox
64 70 0.010356628 ubox
64 72 0.010970740 ubox
64 75 0.023418579 ubox
64 77 0.022928482 ubox
64 78 0.276062761 ubox
65 76 0.021772479 ubox
65 77 0.277995673 ubox
66 76 0.278519088 ubox
67 72 0.043783236 ubox
67 75 0.278517376 ubox
68 73 0.227042085 ubox
68 79 0.011111387 ubox
69 75 0.010081661 ubox
69 78 0.012353648 ubox
70 79 0.004223896 ubox
71 76 0.003638072 ubox
72 79 0.044170130 ubox
73 78 0.046568577 ubox
10 31 0.9500000 lbox
11 30 0.9500000 lbox
12 29 0.9500000 lbox
13 28 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
42 78 0.9500000 lbox
43 77 0.9500000 lbox
44 76 0.9500000 lbox
45 75 0.9500000 lbox
46 73 0.9500000 lbox
47 72 0.9500000 lbox
51 70 0.9500000 lbox
52 69 0.9500000 lbox
54 67 0.9500000 lbox
57 64 0.9500000 lbox
58 63 0.9500000 lbox
showpage
end
%%EOF
