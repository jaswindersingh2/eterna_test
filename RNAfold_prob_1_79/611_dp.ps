%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (611)
} def

/sequence { (\
GGAAAAAAAGAUUUUAGGGAUUUUUUAGGUAAAAAAAAAAAAAAUUUAGAAGAUUUUUAAGAUUUUAAUUUUGAAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 66 0.003498510 ubox
1 69 0.004211903 ubox
1 70 0.005936123 ubox
1 71 0.027541612 ubox
1 72 0.161656759 ubox
1 76 0.034045003 ubox
1 77 0.018058990 ubox
1 78 0.314011518 ubox
2 65 0.003482129 ubox
2 66 0.008156035 ubox
2 69 0.007557897 ubox
2 70 0.039754313 ubox
2 71 0.191770256 ubox
2 72 0.556582264 ubox
2 76 0.022454707 ubox
2 77 0.308117027 ubox
2 78 0.236568384 ubox
3 65 0.007742657 ubox
3 66 0.008706316 ubox
3 69 0.039482474 ubox
3 70 0.193236177 ubox
3 71 0.585335486 ubox
3 72 0.294162733 ubox
3 76 0.293250610 ubox
3 77 0.235154176 ubox
4 64 0.005378964 ubox
4 65 0.008034717 ubox
4 66 0.011769876 ubox
4 69 0.177771082 ubox
4 70 0.590325796 ubox
4 71 0.317728025 ubox
4 72 0.348917036 ubox
4 76 0.199576459 ubox
4 77 0.008184521 ubox
5 63 0.003488480 ubox
5 64 0.005633753 ubox
5 65 0.011014817 ubox
5 66 0.018115304 ubox
5 69 0.567339398 ubox
5 70 0.319023423 ubox
5 71 0.376197393 ubox
5 72 0.209983603 ubox
5 76 0.008944533 ubox
5 77 0.004132271 ubox
6 63 0.003669257 ubox
6 64 0.007721842 ubox
6 65 0.016909818 ubox
6 66 0.030665279 ubox
6 69 0.298857893 ubox
6 70 0.378062971 ubox
6 71 0.216096684 ubox
6 72 0.153587346 ubox
6 76 0.004454417 ubox
6 77 0.007205042 ubox
7 58 0.003568237 ubox
7 63 0.005015886 ubox
7 64 0.011842903 ubox
7 65 0.028116829 ubox
7 66 0.069314822 ubox
7 69 0.343195555 ubox
7 70 0.214680558 ubox
7 71 0.156000743 ubox
7 72 0.088721780 ubox
7 76 0.008209490 ubox
7 77 0.004419696 ubox
8 57 0.003866541 ubox
8 63 0.007692336 ubox
8 64 0.019938060 ubox
8 65 0.063291276 ubox
8 66 0.896473438 ubox
8 69 0.153467994 ubox
8 70 0.133472932 ubox
8 71 0.078478941 ubox
8 72 0.038410534 ubox
8 76 0.003584671 ubox
9 56 0.004026383 ubox
9 63 0.013060838 ubox
9 64 0.050729863 ubox
9 65 0.969057896 ubox
9 66 0.040510818 ubox
9 69 0.104695532 ubox
9 70 0.064763352 ubox
9 71 0.034970272 ubox
9 72 0.006808435 ubox
10 55 0.004198751 ubox
10 63 0.035907113 ubox
10 64 0.993280575 ubox
10 65 0.038320382 ubox
10 66 0.011862270 ubox
10 69 0.032058420 ubox
10 70 0.027723237 ubox
10 71 0.004658332 ubox
11 54 0.004227117 ubox
11 63 0.997423608 ubox
11 64 0.027927546 ubox
11 65 0.009372986 ubox
11 66 0.004525786 ubox
11 69 0.024898718 ubox
11 70 0.003581743 ubox
12 53 0.004231516 ubox
12 62 0.999015651 ubox
12 68 0.020288623 ubox
13 52 0.004221265 ubox
13 61 0.998464687 ubox
13 62 0.004759384 ubox
13 67 0.015890812 ubox
14 51 0.004172656 ubox
14 60 0.997725821 ubox
14 61 0.004459637 ubox
15 50 0.003997881 ubox
15 59 0.999123577 ubox
15 60 0.003359733 ubox
16 58 0.998665068 ubox
17 56 0.003281194 ubox
17 57 0.995499527 ubox
18 47 0.003899887 ubox
18 56 0.994768945 ubox
18 57 0.003184087 ubox
19 46 0.004282897 ubox
19 55 0.998503668 ubox
19 56 0.003435546 ubox
20 45 0.004330347 ubox
20 54 0.999449280 ubox
21 44 0.004332409 ubox
21 53 0.999424053 ubox
22 43 0.004324604 ubox
22 51 0.003238169 ubox
22 52 0.998695894 ubox
23 42 0.004320280 ubox
23 50 0.003714239 ubox
23 51 0.997774539 ubox
23 52 0.003530664 ubox
24 41 0.004306759 ubox
24 49 0.003838234 ubox
24 50 0.999125247 ubox
24 51 0.003877153 ubox
25 40 0.004261872 ubox
25 48 0.003469983 ubox
25 49 0.998676646 ubox
25 50 0.003937639 ubox
26 39 0.004046741 ubox
26 48 0.998577328 ubox
26 49 0.003731619 ubox
27 45 0.003696886 ubox
27 46 0.014386644 ubox
27 47 0.998014565 ubox
28 45 0.018437955 ubox
28 46 0.990766604 ubox
28 47 0.010060414 ubox
29 45 0.980368803 ubox
29 46 0.015542492 ubox
30 34 0.003808328 ubox
30 35 0.007953472 ubox
30 36 0.007866527 ubox
30 37 0.010875643 ubox
30 38 0.007780132 ubox
30 39 0.015862688 ubox
30 40 0.010804752 ubox
30 41 0.014264057 ubox
30 42 0.021744990 ubox
30 43 0.049372011 ubox
30 44 0.958161539 ubox
30 48 0.009313878 ubox
31 45 0.009807952 ubox
31 46 0.009080734 ubox
31 47 0.010668821 ubox
32 45 0.010448241 ubox
32 46 0.012579383 ubox
32 47 0.004110677 ubox
33 45 0.012397646 ubox
33 46 0.006823530 ubox
33 47 0.003240738 ubox
34 45 0.007301599 ubox
34 46 0.005368573 ubox
34 47 0.005234932 ubox
35 45 0.005741461 ubox
35 46 0.008780422 ubox
35 47 0.003412600 ubox
36 45 0.010147868 ubox
36 46 0.005664604 ubox
36 47 0.005282849 ubox
37 45 0.006231277 ubox
37 46 0.008855218 ubox
37 47 0.003729864 ubox
38 45 0.009349146 ubox
38 46 0.006212872 ubox
38 47 0.004173758 ubox
39 45 0.006759516 ubox
39 46 0.006824470 ubox
40 45 0.006766082 ubox
40 46 0.004226808 ubox
41 45 0.003837634 ubox
61 77 0.004063381 ubox
61 78 0.010673277 ubox
62 76 0.004893616 ubox
62 77 0.010443839 ubox
63 75 0.005360922 ubox
64 74 0.006190134 ubox
64 75 0.016611951 ubox
65 73 0.006794214 ubox
65 74 0.027207683 ubox
65 75 0.004166936 ubox
66 73 0.030172400 ubox
66 74 0.005635294 ubox
66 75 0.005036123 ubox
67 71 0.004800275 ubox
67 72 0.029841587 ubox
67 76 0.007827811 ubox
67 77 0.054331500 ubox
68 72 0.007665424 ubox
68 76 0.062504805 ubox
68 77 0.018468455 ubox
69 73 0.003976627 ubox
69 74 0.009120520 ubox
69 75 0.062914232 ubox
70 74 0.052861627 ubox
70 75 0.009498788 ubox
70 79 0.005064758 ubox
71 75 0.006107016 ubox
71 79 0.004050633 ubox
72 79 0.050938898 ubox
73 77 0.007626641 ubox
73 78 0.121050177 ubox
2 72 0.9500000 lbox
3 71 0.9500000 lbox
4 70 0.9500000 lbox
5 69 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 59 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
18 56 0.9500000 lbox
19 55 0.9500000 lbox
20 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
23 51 0.9500000 lbox
24 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
showpage
end
%%EOF
