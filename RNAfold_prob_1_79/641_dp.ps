%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (641)
} def

/sequence { (\
GGAAAGCCGUCCUCACCUUCUAACACAUCCCUCCAACAACUCACCCAAUCACCUCAAUACUAAUCGGCAAUUGGGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.020254723 ubox
1 8 0.320910001 ubox
1 10 0.003697389 ubox
1 11 0.012852949 ubox
1 12 0.792669193 ubox
1 13 0.014458980 ubox
1 14 0.026043756 ubox
1 16 0.019927566 ubox
1 17 0.177363197 ubox
1 18 0.010283819 ubox
1 20 0.032236907 ubox
1 21 0.207078739 ubox
1 24 0.027484452 ubox
1 26 0.018675354 ubox
1 29 0.004458413 ubox
1 30 0.144815648 ubox
1 31 0.061277255 ubox
1 32 0.006398247 ubox
1 33 0.005540210 ubox
1 34 0.344386617 ubox
1 37 0.010242831 ubox
1 40 0.005660364 ubox
1 42 0.007472909 ubox
1 78 0.012408003 ubox
2 7 0.319715490 ubox
2 8 0.022158141 ubox
2 10 0.011220100 ubox
2 11 0.794044216 ubox
2 12 0.018540400 ubox
2 13 0.019948261 ubox
2 14 0.037569542 ubox
2 16 0.177460333 ubox
2 17 0.011777572 ubox
2 19 0.030973324 ubox
2 20 0.219611498 ubox
2 21 0.012398777 ubox
2 24 0.011981002 ubox
2 26 0.004187184 ubox
2 28 0.003193490 ubox
2 29 0.145557210 ubox
2 30 0.060552258 ubox
2 31 0.007630954 ubox
2 32 0.004376725 ubox
2 33 0.344601087 ubox
2 34 0.004350189 ubox
2 40 0.003836143 ubox
2 41 0.005929394 ubox
2 42 0.010756936 ubox
2 77 0.009553436 ubox
2 78 0.016210598 ubox
3 10 0.749375640 ubox
3 13 0.036252043 ubox
3 18 0.028917570 ubox
3 19 0.206454977 ubox
3 21 0.007458787 ubox
3 28 0.139858401 ubox
3 32 0.334513975 ubox
3 41 0.010287936 ubox
3 76 0.006244224 ubox
3 77 0.015610843 ubox
4 10 0.027977717 ubox
4 13 0.017104078 ubox
4 18 0.182774970 ubox
4 19 0.143837974 ubox
4 21 0.010757665 ubox
4 28 0.022225275 ubox
4 32 0.015707596 ubox
4 76 0.007413511 ubox
5 10 0.018087874 ubox
5 13 0.169274528 ubox
5 18 0.164401776 ubox
5 19 0.006745528 ubox
5 21 0.033130514 ubox
5 28 0.041206519 ubox
5 32 0.023572111 ubox
5 41 0.007912236 ubox
6 10 0.006029792 ubox
6 11 0.018588697 ubox
6 12 0.169914081 ubox
6 13 0.009193963 ubox
6 14 0.023436947 ubox
6 16 0.115826729 ubox
6 17 0.179403516 ubox
6 18 0.007414051 ubox
6 19 0.004789991 ubox
6 20 0.034206906 ubox
6 24 0.021372119 ubox
6 26 0.045170359 ubox
6 28 0.012750911 ubox
6 29 0.154431857 ubox
6 30 0.038147699 ubox
6 31 0.038001359 ubox
6 37 0.003795598 ubox
6 40 0.008562914 ubox
9 13 0.016298181 ubox
9 14 0.157082515 ubox
9 16 0.119938302 ubox
9 17 0.029621325 ubox
9 18 0.008130964 ubox
9 19 0.007084800 ubox
9 20 0.028198320 ubox
9 21 0.006955454 ubox
9 24 0.099568499 ubox
9 26 0.200510224 ubox
9 28 0.028695608 ubox
9 29 0.023997021 ubox
9 30 0.010561610 ubox
9 31 0.013177808 ubox
9 33 0.008197511 ubox
9 34 0.007041705 ubox
9 37 0.021927403 ubox
9 40 0.017427312 ubox
9 42 0.007919936 ubox
10 15 0.110538274 ubox
10 22 0.012127869 ubox
10 23 0.095673187 ubox
10 25 0.190823436 ubox
10 27 0.028729753 ubox
10 36 0.020739202 ubox
10 39 0.016646774 ubox
13 22 0.070725796 ubox
13 23 0.020263006 ubox
13 25 0.007325846 ubox
13 27 0.005482033 ubox
13 35 0.004081605 ubox
13 36 0.005003700 ubox
13 38 0.003679595 ubox
15 19 0.017271264 ubox
15 21 0.029450778 ubox
15 28 0.005369340 ubox
15 32 0.004110417 ubox
16 79 0.003206145 ubox
18 22 0.011810196 ubox
18 23 0.013906674 ubox
18 25 0.015097497 ubox
18 27 0.015159627 ubox
18 35 0.005038208 ubox
18 36 0.010014641 ubox
18 38 0.004452694 ubox
18 39 0.008936325 ubox
19 23 0.009289030 ubox
19 25 0.011775995 ubox
19 27 0.010830907 ubox
19 35 0.010790070 ubox
19 36 0.004419194 ubox
19 38 0.009483022 ubox
19 39 0.003674830 ubox
21 25 0.009647993 ubox
21 27 0.015201949 ubox
21 35 0.007166424 ubox
21 36 0.006884414 ubox
21 38 0.005965571 ubox
21 39 0.005010684 ubox
22 28 0.012230082 ubox
22 32 0.008321068 ubox
22 41 0.004281570 ubox
22 77 0.004296290 ubox
23 28 0.013129096 ubox
23 32 0.014985332 ubox
23 41 0.003969631 ubox
23 77 0.004359694 ubox
24 79 0.004517821 ubox
25 32 0.015021531 ubox
25 41 0.004324026 ubox
25 77 0.004569772 ubox
26 79 0.005153025 ubox
27 32 0.013742099 ubox
27 41 0.005082512 ubox
27 77 0.005005883 ubox
28 35 0.016062934 ubox
28 36 0.009107690 ubox
28 38 0.007177609 ubox
28 39 0.006108541 ubox
29 79 0.004103987 ubox
30 79 0.004864932 ubox
31 79 0.005456468 ubox
32 36 0.009250772 ubox
32 38 0.014997697 ubox
32 39 0.016249904 ubox
33 79 0.006778216 ubox
34 79 0.009226241 ubox
35 41 0.015525487 ubox
35 77 0.012485275 ubox
36 41 0.014318603 ubox
36 76 0.007234173 ubox
36 77 0.013254546 ubox
37 75 0.003846540 ubox
37 79 0.035703985 ubox
38 76 0.004005913 ubox
38 77 0.027541122 ubox
39 76 0.016643078 ubox
39 77 0.036356098 ubox
40 75 0.009952506 ubox
40 79 0.231293238 ubox
41 74 0.005317700 ubox
41 79 0.031300508 ubox
42 73 0.004880793 ubox
42 79 0.067256785 ubox
43 72 0.004541979 ubox
43 76 0.936693258 ubox
43 77 0.043452185 ubox
44 75 0.999344999 ubox
45 74 0.999926564 ubox
46 73 0.999925909 ubox
47 72 0.999249445 ubox
48 71 0.997418887 ubox
48 72 0.003310998 ubox
49 67 0.008915029 ubox
49 69 0.014017827 ubox
49 70 0.987837107 ubox
50 66 0.013109315 ubox
50 67 0.015847381 ubox
51 76 0.007236281 ubox
52 66 0.030232850 ubox
52 67 0.995905600 ubox
52 75 0.007715105 ubox
53 66 0.995230746 ubox
53 67 0.041803321 ubox
53 74 0.007691023 ubox
53 75 0.004731265 ubox
54 59 0.014058630 ubox
54 62 0.028031755 ubox
54 63 0.068197781 ubox
54 66 0.037279590 ubox
54 67 0.030280505 ubox
54 74 0.004806942 ubox
55 66 0.038817566 ubox
55 67 0.006874743 ubox
55 73 0.008848404 ubox
56 61 0.051113256 ubox
56 64 0.064343967 ubox
56 72 0.008920126 ubox
57 61 0.037542085 ubox
57 64 0.256241215 ubox
57 71 0.008858914 ubox
58 62 0.039590412 ubox
58 63 0.246892156 ubox
58 69 0.004843683 ubox
58 70 0.008430517 ubox
59 64 0.013154536 ubox
60 66 0.007377578 ubox
60 67 0.010462646 ubox
61 66 0.009871722 ubox
1 12 0.9500000 lbox
2 11 0.9500000 lbox
3 10 0.9500000 lbox
43 76 0.9500000 lbox
44 75 0.9500000 lbox
45 74 0.9500000 lbox
46 73 0.9500000 lbox
47 72 0.9500000 lbox
48 71 0.9500000 lbox
49 70 0.9500000 lbox
52 67 0.9500000 lbox
53 66 0.9500000 lbox
showpage
end
%%EOF
