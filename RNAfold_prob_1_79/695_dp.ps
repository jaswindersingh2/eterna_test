%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (695)
} def

/sequence { (\
GGAAAGGGUCGUCUAUGUCGUCCCAAGGCCGGUCUCAAUGUCCAGCCAGCGCGGUCCUAGGUCCACGCGACAGGUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.003355463 ubox
1 14 0.006433135 ubox
1 23 0.007143930 ubox
1 24 0.005615517 ubox
1 29 0.003530052 ubox
1 30 0.064349970 ubox
1 43 0.018196862 ubox
1 47 0.003886798 ubox
1 57 0.004715523 ubox
1 64 0.008063040 ubox
1 71 0.061349010 ubox
1 75 0.003916222 ubox
1 76 0.007464385 ubox
1 77 0.018867534 ubox
1 78 0.513723074 ubox
2 10 0.004271918 ubox
2 13 0.006827253 ubox
2 19 0.004855119 ubox
2 22 0.007203673 ubox
2 23 0.005153708 ubox
2 29 0.064375918 ubox
2 42 0.018208952 ubox
2 46 0.003640348 ubox
2 56 0.004726344 ubox
2 63 0.008067212 ubox
2 71 0.032081746 ubox
2 75 0.008764592 ubox
2 76 0.028797369 ubox
2 77 0.510674233 ubox
2 78 0.709346668 ubox
3 9 0.004103648 ubox
3 12 0.006730022 ubox
3 18 0.004825087 ubox
3 21 0.007041539 ubox
3 41 0.017969295 ubox
3 55 0.004400920 ubox
3 62 0.007645876 ubox
3 75 0.029119262 ubox
3 76 0.503342661 ubox
3 77 0.708346624 ubox
4 75 0.439208967 ubox
4 76 0.688891520 ubox
4 77 0.024794666 ubox
5 14 0.009827698 ubox
5 39 0.003724504 ubox
5 58 0.005842327 ubox
5 75 0.600567106 ubox
5 76 0.028686558 ubox
5 77 0.008110138 ubox
6 13 0.010314494 ubox
6 14 0.005217138 ubox
6 18 0.003180752 ubox
6 19 0.004208310 ubox
6 23 0.034250301 ubox
6 24 0.993943530 ubox
6 35 0.005394781 ubox
6 36 0.015876980 ubox
6 57 0.006091405 ubox
6 71 0.007214445 ubox
6 75 0.003340448 ubox
6 78 0.004914974 ubox
7 12 0.009305316 ubox
7 13 0.005422028 ubox
7 14 0.007007143 ubox
7 18 0.003845471 ubox
7 19 0.003820434 ubox
7 22 0.034388230 ubox
7 23 0.995014878 ubox
7 24 0.012321695 ubox
7 34 0.005897552 ubox
7 35 0.015886216 ubox
7 56 0.006089996 ubox
7 75 0.003793048 ubox
7 77 0.004330748 ubox
7 78 0.005530325 ubox
8 12 0.003519331 ubox
8 13 0.007159278 ubox
8 16 0.003912879 ubox
8 18 0.003651452 ubox
8 19 0.004047020 ubox
8 21 0.033376539 ubox
8 22 0.994387283 ubox
8 23 0.011978806 ubox
8 33 0.005612792 ubox
8 34 0.015983239 ubox
8 55 0.005787705 ubox
8 71 0.084513693 ubox
8 76 0.003763199 ubox
8 77 0.005335674 ubox
8 78 0.004509795 ubox
9 15 0.003835851 ubox
9 20 0.007960649 ubox
9 32 0.015903820 ubox
9 54 0.005894498 ubox
9 70 0.084616503 ubox
9 72 0.004385140 ubox
9 73 0.004233475 ubox
9 74 0.006046732 ubox
10 17 0.009360387 ubox
10 20 0.993647395 ubox
10 31 0.016438628 ubox
10 32 0.003841609 ubox
10 40 0.003736626 ubox
10 53 0.006191005 ubox
10 69 0.084573140 ubox
10 73 0.006442892 ubox
10 79 0.009241457 ubox
11 16 0.006732716 ubox
11 18 0.009598423 ubox
11 19 0.991560851 ubox
11 22 0.013299808 ubox
11 23 0.003220154 ubox
11 24 0.003265197 ubox
11 29 0.010791774 ubox
11 30 0.013923380 ubox
11 39 0.003719157 ubox
11 52 0.006185782 ubox
11 68 0.069560557 ubox
11 71 0.013299577 ubox
11 75 0.003293632 ubox
11 78 0.010228485 ubox
12 17 0.105275657 ubox
12 28 0.013897780 ubox
12 38 0.003619936 ubox
12 51 0.005880353 ubox
12 61 0.015666523 ubox
12 67 0.062471983 ubox
12 70 0.013343758 ubox
12 74 0.005546508 ubox
13 17 0.578487257 ubox
13 20 0.015298029 ubox
13 27 0.014014808 ubox
13 28 0.009955414 ubox
13 49 0.004847009 ubox
13 60 0.038324161 ubox
13 61 0.005959295 ubox
13 67 0.010288129 ubox
13 69 0.013328371 ubox
13 73 0.006185761 ubox
13 74 0.011009899 ubox
14 26 0.013968951 ubox
14 27 0.009798363 ubox
14 48 0.004775270 ubox
14 59 0.038385665 ubox
14 60 0.005372072 ubox
14 65 0.004372602 ubox
14 72 0.004312996 ubox
14 73 0.009842158 ubox
15 58 0.037769089 ubox
15 62 0.003999969 ubox
16 25 0.023766615 ubox
16 61 0.004096362 ubox
16 65 0.019028832 ubox
16 67 0.018542909 ubox
16 72 0.024855127 ubox
17 22 0.007322774 ubox
17 23 0.005179713 ubox
17 24 0.025321650 ubox
17 29 0.004714701 ubox
17 52 0.003886016 ubox
17 55 0.005093973 ubox
17 56 0.035929588 ubox
17 57 0.006660664 ubox
17 63 0.003475316 ubox
17 64 0.019114424 ubox
17 66 0.049592255 ubox
17 71 0.026373993 ubox
18 28 0.004717180 ubox
18 32 0.003488714 ubox
18 54 0.037123699 ubox
18 59 0.003288994 ubox
18 61 0.003787023 ubox
18 65 0.049022540 ubox
18 70 0.026376239 ubox
19 27 0.004776726 ubox
19 31 0.003730541 ubox
19 51 0.004672211 ubox
19 53 0.038743053 ubox
19 54 0.004857001 ubox
19 60 0.004108966 ubox
19 61 0.003238010 ubox
19 67 0.008668119 ubox
19 69 0.026351058 ubox
20 24 0.004513823 ubox
20 30 0.003657438 ubox
20 50 0.004988253 ubox
20 52 0.038935997 ubox
20 56 0.004909167 ubox
20 63 0.045298300 ubox
20 64 0.019733338 ubox
20 66 0.010706960 ubox
20 68 0.011556698 ubox
20 71 0.007406963 ubox
21 49 0.004678645 ubox
21 51 0.037221413 ubox
21 65 0.010604279 ubox
21 67 0.009488596 ubox
21 70 0.007420304 ubox
22 28 0.003583337 ubox
22 49 0.004095130 ubox
22 51 0.010150444 ubox
22 54 0.007078374 ubox
22 61 0.043744858 ubox
22 69 0.007398234 ubox
23 27 0.003569922 ubox
23 49 0.032480896 ubox
23 53 0.007076642 ubox
23 60 0.043370191 ubox
23 61 0.033827206 ubox
24 49 0.009656141 ubox
24 51 0.005767071 ubox
24 60 0.034273457 ubox
24 73 0.003340395 ubox
25 58 0.020346713 ubox
25 75 0.003176367 ubox
25 76 0.006930260 ubox
25 77 0.008609945 ubox
26 35 0.004693579 ubox
26 58 0.043110374 ubox
26 75 0.006922014 ubox
26 76 0.008744220 ubox
26 77 0.039590668 ubox
27 34 0.004968983 ubox
27 42 0.003627040 ubox
27 43 0.009931069 ubox
27 47 0.993325880 ubox
27 56 0.033974772 ubox
27 57 0.044211422 ubox
27 76 0.046386779 ubox
27 78 0.003730918 ubox
28 33 0.003373357 ubox
28 41 0.003710167 ubox
28 42 0.009923964 ubox
28 46 0.994494872 ubox
28 47 0.003247379 ubox
28 55 0.034594518 ubox
28 56 0.043935381 ubox
28 75 0.050043380 ubox
29 40 0.004218580 ubox
29 45 0.993875494 ubox
29 54 0.055898557 ubox
29 74 0.050563775 ubox
30 40 0.010225659 ubox
30 45 0.022192992 ubox
30 53 0.055897514 ubox
30 73 0.050408887 ubox
30 79 0.003314119 ubox
31 36 0.003649843 ubox
31 39 0.009694685 ubox
31 42 0.014646469 ubox
31 43 0.995676469 ubox
31 47 0.017466053 ubox
31 52 0.054478769 ubox
31 78 0.005655334 ubox
32 39 0.003757161 ubox
32 41 0.014365499 ubox
32 42 0.995881122 ubox
32 43 0.009336697 ubox
32 46 0.017617712 ubox
32 50 0.032122032 ubox
32 71 0.043710602 ubox
32 77 0.005399200 ubox
32 78 0.003588518 ubox
33 37 0.003519275 ubox
33 38 0.007839532 ubox
33 40 0.048240268 ubox
33 45 0.011724903 ubox
33 49 0.028387136 ubox
33 51 0.003851233 ubox
33 70 0.044070414 ubox
34 40 0.969364095 ubox
34 45 0.019596901 ubox
34 49 0.042554883 ubox
34 69 0.043994980 ubox
35 40 0.019817863 ubox
35 44 0.019543692 ubox
35 48 0.040009475 ubox
36 40 0.021744265 ubox
36 45 0.023047920 ubox
36 49 0.003528392 ubox
36 67 0.009879877 ubox
36 74 0.003430090 ubox
37 41 0.003697586 ubox
39 44 0.013907735 ubox
39 45 0.006228738 ubox
39 48 0.026217526 ubox
39 65 0.004332868 ubox
39 72 0.012909889 ubox
40 46 0.019077498 ubox
40 47 0.028693355 ubox
40 50 0.003293212 ubox
40 63 0.009087209 ubox
40 64 0.004328469 ubox
40 71 0.013539730 ubox
40 78 0.005054637 ubox
41 45 0.018131999 ubox
41 70 0.013539112 ubox
42 61 0.011781450 ubox
42 69 0.013488872 ubox
42 74 0.006645011 ubox
43 60 0.011775252 ubox
43 73 0.006692698 ubox
44 58 0.007220269 ubox
44 76 0.055326633 ubox
44 77 0.003603714 ubox
45 52 0.010788421 ubox
45 55 0.009020955 ubox
45 56 0.004856106 ubox
45 57 0.006000963 ubox
45 71 0.009629936 ubox
45 75 0.067195126 ubox
46 51 0.010775390 ubox
46 54 0.011927995 ubox
46 73 0.003414233 ubox
46 74 0.068321173 ubox
47 53 0.011937731 ubox
47 69 0.018050257 ubox
47 73 0.068075035 ubox
48 75 0.004456516 ubox
48 76 0.007631370 ubox
49 55 0.004108247 ubox
49 68 0.974021321 ubox
49 71 0.135637820 ubox
49 75 0.009552529 ubox
50 54 0.004253149 ubox
50 67 0.975807478 ubox
50 69 0.201280518 ubox
50 74 0.009779061 ubox
50 79 0.010187017 ubox
51 62 0.004249184 ubox
51 66 0.975748226 ubox
51 68 0.202931651 ubox
51 75 0.004297558 ubox
51 78 0.010969995 ubox
52 61 0.005093477 ubox
52 67 0.202753645 ubox
52 73 0.008557352 ubox
52 74 0.004685839 ubox
52 79 0.020568037 ubox
53 63 0.008573460 ubox
53 64 0.979951274 ubox
53 66 0.180721490 ubox
53 76 0.008087043 ubox
53 77 0.004041088 ubox
53 78 0.022213679 ubox
54 62 0.010310375 ubox
54 63 0.980627830 ubox
54 64 0.062382774 ubox
54 66 0.008769094 ubox
54 71 0.012558379 ubox
54 75 0.008586800 ubox
54 76 0.004138084 ubox
54 77 0.021355304 ubox
55 59 0.004511546 ubox
55 60 0.009473696 ubox
55 61 0.161979853 ubox
55 65 0.011778498 ubox
55 70 0.012643947 ubox
56 60 0.161326448 ubox
56 61 0.859820337 ubox
56 69 0.012602610 ubox
56 74 0.030094262 ubox
57 61 0.045148640 ubox
57 67 0.005633662 ubox
57 73 0.030210778 ubox
57 74 0.006486654 ubox
58 72 0.028083427 ubox
58 73 0.006468768 ubox
60 66 0.010148387 ubox
60 71 0.006163444 ubox
61 66 0.003998911 ubox
61 68 0.005414778 ubox
61 71 0.030969808 ubox
62 67 0.005101136 ubox
62 70 0.031470029 ubox
63 69 0.031373087 ubox
63 74 0.004245063 ubox
64 73 0.004276267 ubox
65 75 0.004292300 ubox
66 73 0.004412193 ubox
66 74 0.004976518 ubox
67 75 0.007917447 ubox
68 73 0.020298112 ubox
68 74 0.017584005 ubox
68 79 0.020232617 ubox
69 75 0.014040691 ubox
69 76 0.024220848 ubox
69 77 0.017148828 ubox
69 78 0.158729707 ubox
70 75 0.025452200 ubox
70 76 0.018838298 ubox
70 77 0.148626408 ubox
71 79 0.018506991 ubox
72 76 0.009743947 ubox
72 77 0.008593446 ubox
73 77 0.004962731 ubox
73 78 0.049393582 ubox
74 78 0.020027219 ubox
2 78 0.9500000 lbox
3 77 0.9500000 lbox
4 76 0.9500000 lbox
5 75 0.9500000 lbox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
showpage
end
%%EOF
