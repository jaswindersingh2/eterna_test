%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (100)
} def

/sequence { (\
GGAAAAAGCUGCGUAUCUAAUGAUACGGUGACGCACUAAUGUGCACGACUAAUGUCGGUUGCCGCAGCGCUGCGGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.019638522 ubox
1 10 0.036948179 ubox
1 12 0.006756630 ubox
1 32 0.013156104 ubox
1 60 0.004414817 ubox
1 70 0.006351370 ubox
1 71 0.027655683 ubox
1 73 0.230508445 ubox
1 76 0.022725778 ubox
1 77 0.021056924 ubox
1 78 0.458913254 ubox
2 9 0.039517048 ubox
2 32 0.009065979 ubox
2 59 0.004122124 ubox
2 60 0.007734708 ubox
2 70 0.028871530 ubox
2 71 0.011362017 ubox
2 73 0.215926951 ubox
2 76 0.031102031 ubox
2 77 0.455123326 ubox
2 78 0.453489059 ubox
3 10 0.009302955 ubox
3 59 0.007489600 ubox
3 60 0.008390139 ubox
3 71 0.176388048 ubox
3 76 0.442921527 ubox
3 77 0.450242162 ubox
4 10 0.007390006 ubox
4 29 0.003496325 ubox
4 59 0.007593242 ubox
4 60 0.007923144 ubox
4 71 0.062853010 ubox
4 76 0.412082834 ubox
4 77 0.036483259 ubox
5 10 0.008542685 ubox
5 59 0.007180885 ubox
5 60 0.008133427 ubox
5 71 0.169892966 ubox
5 76 0.044105335 ubox
5 77 0.012370394 ubox
6 10 0.004467862 ubox
6 59 0.007240599 ubox
6 60 0.013201475 ubox
6 71 0.143184008 ubox
6 76 0.010532430 ubox
6 77 0.013744574 ubox
7 29 0.005768683 ubox
7 37 0.004721393 ubox
7 59 0.012861390 ubox
7 60 0.071502637 ubox
7 71 0.154062721 ubox
7 76 0.011627377 ubox
7 77 0.135665234 ubox
8 29 0.060056202 ubox
8 32 0.096876435 ubox
8 34 0.005464436 ubox
8 36 0.004891340 ubox
8 59 0.078224825 ubox
8 62 0.004750806 ubox
8 68 0.920836300 ubox
8 70 0.128836259 ubox
8 71 0.006185341 ubox
8 73 0.164198881 ubox
8 76 0.165370687 ubox
8 77 0.005528170 ubox
8 78 0.013914026 ubox
9 27 0.004145797 ubox
9 28 0.062908606 ubox
9 30 0.124703917 ubox
9 33 0.005521288 ubox
9 57 0.010761429 ubox
9 58 0.078704133 ubox
9 61 0.005828266 ubox
9 67 0.922705163 ubox
9 69 0.119494928 ubox
9 72 0.163860878 ubox
9 74 0.003322623 ubox
9 75 0.168423730 ubox
9 79 0.011234112 ubox
10 27 0.032130014 ubox
10 28 0.016263017 ubox
10 30 0.052129354 ubox
10 31 0.009302177 ubox
10 35 0.005686982 ubox
10 57 0.047487921 ubox
10 66 0.926600838 ubox
10 67 0.008344171 ubox
10 69 0.020494264 ubox
10 74 0.168170564 ubox
10 79 0.008948436 ubox
11 26 0.016012867 ubox
11 29 0.067344005 ubox
11 32 0.011909171 ubox
11 34 0.005907363 ubox
11 56 0.015241120 ubox
11 59 0.007080812 ubox
11 65 0.927520759 ubox
11 68 0.074484928 ubox
11 70 0.163032517 ubox
11 73 0.167974976 ubox
11 77 0.003375022 ubox
11 78 0.015706874 ubox
12 27 0.271628801 ubox
12 28 0.048559389 ubox
12 33 0.005901051 ubox
12 54 0.005057147 ubox
12 58 0.007239099 ubox
12 64 0.926354275 ubox
12 67 0.074414413 ubox
12 69 0.163383903 ubox
12 72 0.167643359 ubox
13 26 0.984213074 ubox
13 32 0.005974636 ubox
13 63 0.014554016 ubox
13 65 0.005910310 ubox
13 68 0.155996618 ubox
13 70 0.014538994 ubox
13 71 0.037118578 ubox
14 25 0.988837285 ubox
14 31 0.005554745 ubox
14 66 0.004314251 ubox
14 67 0.139092051 ubox
14 69 0.012701682 ubox
15 21 0.003734903 ubox
15 24 0.997061465 ubox
15 29 0.003245539 ubox
16 20 0.003462237 ubox
16 23 0.998273820 ubox
16 28 0.003286765 ubox
16 66 0.003279593 ubox
17 22 0.998089127 ubox
17 27 0.003293336 ubox
17 28 0.005053417 ubox
17 64 0.004446501 ubox
17 67 0.005852818 ubox
17 69 0.004773122 ubox
18 25 0.005351492 ubox
18 27 0.005000389 ubox
18 66 0.005422300 ubox
19 24 0.005269821 ubox
21 66 0.029651591 ubox
21 69 0.004628633 ubox
22 56 0.003547784 ubox
22 65 0.029895229 ubox
22 68 0.006357234 ubox
23 55 0.003548477 ubox
24 54 0.003530674 ubox
24 66 0.021275888 ubox
25 53 0.003331983 ubox
26 64 0.163199009 ubox
27 32 0.023704956 ubox
27 37 0.005093389 ubox
27 50 0.006506383 ubox
27 63 0.957731746 ubox
27 71 0.005129308 ubox
27 78 0.003380228 ubox
28 32 0.015718472 ubox
28 36 0.006257509 ubox
28 46 0.061251256 ubox
28 49 0.009478387 ubox
28 62 0.959079870 ubox
28 63 0.003659865 ubox
28 70 0.005422790 ubox
28 78 0.008923034 ubox
29 35 0.006258766 ubox
29 45 0.063319253 ubox
29 48 0.009389057 ubox
29 61 0.957089979 ubox
29 69 0.005362669 ubox
29 79 0.025985963 ubox
30 34 0.006162823 ubox
30 44 0.062730977 ubox
30 46 0.006742497 ubox
30 56 0.003861000 ubox
30 60 0.955814476 ubox
30 68 0.004603348 ubox
30 77 0.004244995 ubox
30 78 0.046020900 ubox
31 42 0.006085402 ubox
31 55 0.003870080 ubox
31 59 0.959952773 ubox
31 60 0.003844481 ubox
31 76 0.004257197 ubox
31 77 0.042594800 ubox
32 41 0.006179511 ubox
32 43 0.063235231 ubox
32 54 0.003865824 ubox
32 57 0.005920378 ubox
32 58 0.959132787 ubox
32 74 0.008004465 ubox
32 75 0.003904905 ubox
32 79 0.008402614 ubox
33 40 0.004546908 ubox
33 42 0.063725585 ubox
33 44 0.996736865 ubox
33 73 0.008225090 ubox
34 41 0.063765813 ubox
34 43 0.997812740 ubox
34 72 0.008226225 ubox
35 40 0.053061892 ubox
35 42 0.997424983 ubox
35 71 0.008015572 ubox
36 41 0.996871615 ubox
37 41 0.003431313 ubox
37 69 0.003713300 ubox
40 66 0.008689498 ubox
41 63 0.003343880 ubox
41 65 0.008834475 ubox
42 64 0.008791251 ubox
43 59 0.007871761 ubox
43 62 0.007553480 ubox
43 63 0.006392133 ubox
44 58 0.010635377 ubox
44 61 0.009848431 ubox
45 55 0.004674273 ubox
45 59 0.027401740 ubox
45 60 0.010660301 ubox
46 54 0.004995836 ubox
46 57 0.988544263 ubox
46 58 0.020899645 ubox
46 61 0.020654498 ubox
47 53 0.003535845 ubox
47 56 0.999439977 ubox
47 60 0.023712510 ubox
48 55 0.999278643 ubox
48 59 0.024026475 ubox
49 54 0.998650594 ubox
49 58 0.024069827 ubox
50 54 0.003442709 ubox
50 57 0.023084620 ubox
56 79 0.006480897 ubox
57 63 0.008134530 ubox
57 71 0.005433237 ubox
57 78 0.020165039 ubox
58 62 0.008200190 ubox
58 63 0.005044417 ubox
58 65 0.003423832 ubox
58 68 0.025717611 ubox
58 70 0.009536494 ubox
58 77 0.019828929 ubox
58 78 0.093424266 ubox
59 64 0.003240309 ubox
59 67 0.025731525 ubox
59 69 0.006748517 ubox
59 79 0.010497823 ubox
60 66 0.025673784 ubox
60 69 0.010908350 ubox
60 74 0.004344882 ubox
60 79 0.007768047 ubox
61 65 0.025287153 ubox
61 68 0.016624117 ubox
61 70 0.008529059 ubox
61 73 0.005269995 ubox
61 76 0.253405165 ubox
61 77 0.008860459 ubox
61 78 0.009669438 ubox
62 67 0.016578638 ubox
62 69 0.008454627 ubox
62 72 0.005290130 ubox
62 75 0.278873055 ubox
63 74 0.279858711 ubox
64 68 0.009810276 ubox
64 70 0.125082071 ubox
64 71 0.003954826 ubox
64 73 0.280192639 ubox
65 69 0.124363362 ubox
65 72 0.280159306 ubox
66 71 0.252408334 ubox
66 77 0.003375910 ubox
67 71 0.003863274 ubox
67 73 0.003334876 ubox
67 76 0.004365930 ubox
68 72 0.003426552 ubox
68 74 0.007501055 ubox
68 75 0.007000839 ubox
68 79 0.004203906 ubox
69 73 0.022528319 ubox
69 76 0.400978383 ubox
69 77 0.018584913 ubox
69 78 0.031965014 ubox
70 74 0.019917474 ubox
70 75 0.421395100 ubox
70 79 0.019799644 ubox
71 75 0.005585071 ubox
71 79 0.015599085 ubox
72 76 0.004729825 ubox
72 77 0.006705993 ubox
72 78 0.028494854 ubox
73 79 0.053099264 ubox
74 78 0.055344791 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
29 61 0.9500000 lbox
30 60 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
