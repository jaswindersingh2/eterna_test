%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (311)
} def

/sequence { (\
GGAAAGAGGGCACAAAAACGUGCGGCAAUGCCACCUCAGCCACUCUAAUUGAGGCACUUCGGUGCGGCUCCCAAUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 32 0.010097771 ubox
1 35 0.006548089 ubox
1 41 0.054018333 ubox
1 70 0.016601710 ubox
1 71 0.319971543 ubox
1 72 0.441968931 ubox
1 76 0.003328376 ubox
1 77 0.010699979 ubox
1 78 0.289061250 ubox
2 31 0.010098883 ubox
2 34 0.006530598 ubox
2 37 0.004482096 ubox
2 40 0.053955199 ubox
2 41 0.004900790 ubox
2 69 0.008083166 ubox
2 70 0.322119188 ubox
2 71 0.440225321 ubox
2 72 0.023791553 ubox
2 75 0.003237193 ubox
2 76 0.016368334 ubox
2 77 0.286520061 ubox
2 78 0.620647030 ubox
3 36 0.003761041 ubox
3 69 0.242446346 ubox
3 75 0.016654019 ubox
3 76 0.282197113 ubox
3 77 0.621028609 ubox
4 69 0.029066263 ubox
4 75 0.247073343 ubox
4 76 0.614429104 ubox
4 77 0.015041287 ubox
5 36 0.004614881 ubox
5 46 0.005487325 ubox
5 69 0.007826697 ubox
5 75 0.585488211 ubox
5 76 0.017792898 ubox
5 77 0.005828041 ubox
6 35 0.004948846 ubox
6 37 0.860894888 ubox
6 45 0.005723616 ubox
6 68 0.003508402 ubox
6 70 0.027462498 ubox
6 71 0.007878996 ubox
6 72 0.059695768 ubox
6 75 0.010331819 ubox
6 76 0.005442039 ubox
6 78 0.015021950 ubox
7 36 0.861887087 ubox
7 44 0.005720882 ubox
7 69 0.027216795 ubox
7 75 0.005538068 ubox
7 77 0.014867677 ubox
8 34 0.003758627 ubox
8 35 0.862129582 ubox
8 36 0.003321818 ubox
8 43 0.005692617 ubox
8 68 0.026863706 ubox
8 70 0.011641151 ubox
8 71 0.164528248 ubox
8 72 0.474476266 ubox
8 76 0.011966685 ubox
9 23 0.004004039 ubox
9 32 0.005011178 ubox
9 34 0.860403347 ubox
9 35 0.004608550 ubox
9 41 0.003979553 ubox
9 68 0.003281067 ubox
9 69 0.008112669 ubox
9 70 0.165698337 ubox
9 71 0.473210254 ubox
9 72 0.015594583 ubox
9 75 0.008783263 ubox
10 21 0.005517066 ubox
10 23 0.990314067 ubox
10 31 0.005915085 ubox
10 40 0.003681169 ubox
10 65 0.015472499 ubox
10 68 0.008004433 ubox
10 69 0.003539374 ubox
10 70 0.130383244 ubox
10 71 0.004993815 ubox
11 20 0.007294965 ubox
11 22 0.998951989 ubox
11 30 0.005982310 ubox
11 39 0.003613655 ubox
11 64 0.016113541 ubox
11 67 0.008090137 ubox
12 21 0.998810806 ubox
12 29 0.005474018 ubox
12 63 0.016118318 ubox
12 69 0.003919467 ubox
13 20 0.997800763 ubox
13 22 0.009711441 ubox
13 62 0.016107221 ubox
13 64 0.004248085 ubox
13 66 0.005120140 ubox
13 67 0.005397000 ubox
14 21 0.008969591 ubox
14 63 0.004205136 ubox
16 59 0.010488611 ubox
16 69 0.003616122 ubox
17 58 0.008991891 ubox
17 59 0.005524619 ubox
18 36 0.003419235 ubox
18 58 0.006443086 ubox
18 59 0.003336376 ubox
19 66 0.005976114 ubox
20 32 0.005811393 ubox
20 34 0.016811934 ubox
20 35 0.015404320 ubox
20 37 0.008543549 ubox
20 57 0.016654361 ubox
20 65 0.005969661 ubox
21 33 0.016737264 ubox
21 56 0.016720729 ubox
21 64 0.005940429 ubox
22 31 0.012969196 ubox
22 32 0.012676837 ubox
22 34 0.024603739 ubox
22 35 0.004058904 ubox
22 37 0.004185600 ubox
22 55 0.016721466 ubox
22 63 0.005910632 ubox
23 30 0.016299539 ubox
23 54 0.016229543 ubox
23 62 0.005895812 ubox
24 29 0.014571628 ubox
24 31 0.020158401 ubox
24 32 0.993004410 ubox
24 34 0.006171039 ubox
24 35 0.064378609 ubox
24 37 0.004669235 ubox
24 41 0.065557615 ubox
24 69 0.023226995 ubox
24 70 0.006504423 ubox
24 71 0.003322648 ubox
24 72 0.004312724 ubox
25 31 0.994015699 ubox
25 32 0.007830035 ubox
25 34 0.064362281 ubox
25 35 0.003358434 ubox
25 36 0.003512068 ubox
25 40 0.065625900 ubox
25 60 0.004388134 ubox
25 68 0.025489724 ubox
25 70 0.003722551 ubox
25 71 0.004309397 ubox
26 30 0.986798709 ubox
26 39 0.065545393 ubox
26 67 0.025457850 ubox
27 36 0.004603070 ubox
28 36 0.003902275 ubox
29 38 0.026545108 ubox
29 56 0.004542511 ubox
29 64 0.004609713 ubox
29 66 0.019646382 ubox
30 34 0.005541941 ubox
30 35 0.022398875 ubox
30 37 0.028545525 ubox
30 40 0.003276004 ubox
30 55 0.004646339 ubox
30 63 0.005935402 ubox
30 65 0.024170490 ubox
30 68 0.019123942 ubox
31 39 0.003305390 ubox
31 54 0.004299860 ubox
31 62 0.006025948 ubox
31 64 0.017166060 ubox
31 66 0.003860028 ubox
31 67 0.019122814 ubox
32 53 0.003834579 ubox
32 61 0.006017298 ubox
32 64 0.019337097 ubox
32 66 0.018725808 ubox
33 63 0.026934271 ubox
34 39 0.005991419 ubox
34 54 0.026245016 ubox
34 62 0.027143649 ubox
34 67 0.011692746 ubox
35 53 0.061221397 ubox
35 61 0.027111367 ubox
35 66 0.011711881 ubox
36 52 0.061542379 ubox
37 51 0.061568100 ubox
38 46 0.004079697 ubox
38 50 0.060159116 ubox
38 58 0.021569990 ubox
38 69 0.896266736 ubox
39 45 0.004922372 ubox
39 49 0.048729110 ubox
39 55 0.014801871 ubox
39 57 0.021763722 ubox
39 68 0.986850140 ubox
39 69 0.003926661 ubox
40 54 0.014823048 ubox
40 67 0.987267891 ubox
41 51 0.003439265 ubox
41 53 0.013927085 ubox
41 54 0.006021415 ubox
41 66 0.986239499 ubox
41 67 0.003180243 ubox
42 46 0.006218139 ubox
42 50 0.003607660 ubox
43 51 0.015452521 ubox
43 53 0.992942283 ubox
43 64 0.017706009 ubox
44 52 0.995582689 ubox
44 53 0.003415408 ubox
45 51 0.995725227 ubox
45 53 0.036559780 ubox
45 62 0.009461925 ubox
45 64 0.003470467 ubox
46 51 0.005676529 ubox
46 52 0.035840321 ubox
46 53 0.003821294 ubox
46 61 0.008648195 ubox
47 59 0.003305256 ubox
47 76 0.011480123 ubox
48 58 0.003222527 ubox
48 63 0.016872688 ubox
48 75 0.013173602 ubox
49 62 0.017108264 ubox
49 74 0.013417046 ubox
50 56 0.003811954 ubox
50 61 0.017535672 ubox
50 73 0.012943774 ubox
51 55 0.003819089 ubox
51 60 0.018691329 ubox
51 68 0.009287467 ubox
51 70 0.020384252 ubox
51 72 0.011107679 ubox
52 58 0.003215163 ubox
52 59 0.018323780 ubox
52 69 0.021109704 ubox
53 57 0.003631256 ubox
53 58 0.014784657 ubox
53 65 0.003592883 ubox
53 68 0.021000186 ubox
53 70 0.005597197 ubox
53 71 0.004677838 ubox
54 63 0.004159588 ubox
54 65 0.997953526 ubox
54 68 0.003404501 ubox
54 70 0.003391392 ubox
55 62 0.004327458 ubox
55 64 0.999144755 ubox
55 66 0.005283319 ubox
55 67 0.003413770 ubox
56 63 0.998671126 ubox
57 61 0.011990239 ubox
57 62 0.997758230 ubox
57 64 0.005975772 ubox
58 62 0.004041936 ubox
60 66 0.003780344 ubox
61 65 0.003586741 ubox
61 72 0.003480561 ubox
62 71 0.003476293 ubox
66 70 0.006703088 ubox
66 71 0.008805336 ubox
66 72 0.061663682 ubox
66 78 0.004465273 ubox
67 71 0.060732716 ubox
67 72 0.005778425 ubox
67 77 0.003630549 ubox
69 73 0.004914155 ubox
69 74 0.006277998 ubox
70 79 0.014515730 ubox
71 79 0.011566374 ubox
72 79 0.030980545 ubox
73 77 0.007066238 ubox
75 79 0.005149849 ubox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
38 69 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
showpage
end
%%EOF
