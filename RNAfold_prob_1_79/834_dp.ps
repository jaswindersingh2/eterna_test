%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (834)
} def

/sequence { (\
GGAAAACAGAGACGUCAAAAGCAAAAAACUUUGAGAGAAAACUCACAAAGAGCGACGACUCUGAAAAAUACUCGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.032621830 ubox
1 69 0.078160531 ubox
1 71 0.101001898 ubox
1 72 0.049779121 ubox
1 73 0.063858275 ubox
1 75 0.039981634 ubox
1 76 0.026916173 ubox
1 78 0.079024660 ubox
2 7 0.008959254 ubox
2 69 0.033298511 ubox
2 71 0.065888872 ubox
2 72 0.049860145 ubox
2 73 0.079765892 ubox
2 75 0.031032047 ubox
2 77 0.077924629 ubox
2 78 0.113631963 ubox
3 69 0.034953525 ubox
3 72 0.078190174 ubox
3 76 0.074615076 ubox
3 77 0.113057421 ubox
4 69 0.028772116 ubox
4 72 0.009321654 ubox
4 76 0.103144191 ubox
4 77 0.008077952 ubox
5 69 0.016186441 ubox
5 72 0.013189602 ubox
5 76 0.009455159 ubox
5 77 0.010874568 ubox
6 15 0.003899227 ubox
6 69 0.040104279 ubox
6 72 0.019710717 ubox
6 76 0.012942192 ubox
6 77 0.004634637 ubox
7 14 0.004167029 ubox
7 63 0.992920822 ubox
7 74 0.006682108 ubox
8 62 0.998814954 ubox
9 16 0.008360139 ubox
9 61 0.999761702 ubox
9 73 0.004828230 ubox
10 15 0.008153848 ubox
10 60 0.999583336 ubox
10 62 0.009622415 ubox
10 72 0.004813106 ubox
11 59 0.997327273 ubox
11 61 0.009911294 ubox
11 71 0.004765441 ubox
12 60 0.009810126 ubox
13 54 0.005088437 ubox
13 57 0.997304681 ubox
14 22 0.006271924 ubox
14 53 0.005158269 ubox
14 56 0.999615118 ubox
14 59 0.013380999 ubox
15 21 0.005916297 ubox
15 34 0.004870118 ubox
15 52 0.004911047 ubox
15 54 0.004192334 ubox
15 55 0.999295881 ubox
15 58 0.016143215 ubox
15 64 0.003537106 ubox
16 21 0.007314985 ubox
16 33 0.006392278 ubox
16 52 0.006092365 ubox
16 54 0.998069031 ubox
16 57 0.016156046 ubox
16 63 0.003578425 ubox
17 32 0.008753620 ubox
17 62 0.003375620 ubox
18 30 0.003267986 ubox
18 31 0.009033993 ubox
18 32 0.071967732 ubox
19 30 0.007954977 ubox
19 31 0.083479654 ubox
19 32 0.008243626 ubox
19 77 0.004841497 ubox
20 30 0.087532820 ubox
20 31 0.009285176 ubox
20 76 0.005378373 ubox
21 29 0.088658286 ubox
21 30 0.009264918 ubox
21 53 0.843179793 ubox
21 75 0.005454195 ubox
22 33 0.092965214 ubox
22 35 0.003810246 ubox
22 50 0.021151432 ubox
22 52 0.842569125 ubox
22 54 0.005622389 ubox
22 74 0.005445183 ubox
23 30 0.005743121 ubox
23 31 0.007858602 ubox
23 32 0.093663056 ubox
24 30 0.008930379 ubox
24 31 0.091921114 ubox
24 32 0.010183060 ubox
25 30 0.080225605 ubox
25 31 0.011712969 ubox
25 32 0.008097671 ubox
26 30 0.009545720 ubox
26 31 0.008182026 ubox
26 32 0.004614924 ubox
27 31 0.004121099 ubox
27 32 0.003238042 ubox
29 35 0.006169056 ubox
29 37 0.017511764 ubox
29 50 0.982346246 ubox
29 52 0.042763438 ubox
30 34 0.005661140 ubox
30 36 0.017490858 ubox
30 38 0.003858376 ubox
30 39 0.010261343 ubox
30 40 0.011597972 ubox
30 41 0.011395575 ubox
30 47 0.019173854 ubox
30 48 0.014553422 ubox
30 49 0.985398139 ubox
30 50 0.008233093 ubox
30 51 0.043534847 ubox
30 66 0.004341044 ubox
31 35 0.015774831 ubox
31 37 0.004032305 ubox
31 38 0.011394992 ubox
31 39 0.012871921 ubox
31 40 0.013331293 ubox
31 41 0.003405889 ubox
31 45 0.005310936 ubox
31 47 0.015889199 ubox
31 48 0.985119553 ubox
31 49 0.009247825 ubox
31 50 0.040807654 ubox
31 51 0.003811061 ubox
31 65 0.004731505 ubox
32 36 0.003165490 ubox
32 37 0.011282124 ubox
32 38 0.013119391 ubox
32 39 0.013695868 ubox
32 40 0.004068521 ubox
32 45 0.104555788 ubox
32 47 0.984561933 ubox
32 48 0.008217229 ubox
32 49 0.027645656 ubox
32 50 0.003179683 ubox
32 64 0.004765090 ubox
33 44 0.123852680 ubox
33 46 0.982270307 ubox
34 43 0.126139875 ubox
34 62 0.004903607 ubox
35 42 0.125864785 ubox
35 44 0.984869273 ubox
35 46 0.008610752 ubox
35 61 0.004922351 ubox
36 43 0.986700973 ubox
36 60 0.004920834 ubox
37 42 0.978473381 ubox
37 44 0.039833094 ubox
37 53 0.005173890 ubox
37 59 0.004901615 ubox
38 43 0.037303693 ubox
42 50 0.004310173 ubox
42 52 0.078710804 ubox
43 49 0.004179936 ubox
43 51 0.079263363 ubox
44 50 0.079287387 ubox
46 50 0.008662997 ubox
46 52 0.020572213 ubox
49 62 0.003604049 ubox
50 61 0.003869638 ubox
50 77 0.006615771 ubox
51 60 0.003919591 ubox
51 76 0.015147957 ubox
52 59 0.003908898 ubox
52 75 0.016294772 ubox
53 74 0.016302198 ubox
54 73 0.016289995 ubox
55 72 0.015592740 ubox
57 71 0.008119568 ubox
58 69 0.003886322 ubox
62 67 0.003388616 ubox
62 74 0.010524569 ubox
62 79 0.008548057 ubox
63 71 0.006063993 ubox
63 73 0.033450798 ubox
63 75 0.005324821 ubox
63 78 0.042653043 ubox
64 69 0.024761340 ubox
64 72 0.035731429 ubox
64 76 0.008640950 ubox
64 77 0.046760720 ubox
65 69 0.014099505 ubox
65 72 0.024333936 ubox
65 76 0.044142246 ubox
65 77 0.021554360 ubox
66 72 0.019487040 ubox
66 76 0.022221237 ubox
66 77 0.042303869 ubox
67 72 0.021130407 ubox
67 76 0.046171737 ubox
67 77 0.025401222 ubox
68 72 0.011029894 ubox
68 76 0.026287877 ubox
68 77 0.034690635 ubox
69 74 0.019024623 ubox
69 79 0.005953824 ubox
70 76 0.011532460 ubox
70 77 0.014318810 ubox
71 79 0.034741679 ubox
72 79 0.009610437 ubox
73 79 0.098943495 ubox
74 78 0.101398014 ubox
75 79 0.014401797 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
