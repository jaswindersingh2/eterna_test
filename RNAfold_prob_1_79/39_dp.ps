%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (39)
} def

/sequence { (\
GGAAAACGCGGCGCAUGAAAUCAUGCCGGACCGCCGGAAACGGCAACUCUAACGAGUGGGACGGCCGCUAAGGGUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.084087608 ubox
1 32 0.004053873 ubox
1 75 0.009289643 ubox
1 76 0.008370356 ubox
1 77 0.016191497 ubox
1 78 0.799103892 ubox
2 7 0.027067690 ubox
2 31 0.004048408 ubox
2 69 0.003848341 ubox
2 75 0.011972136 ubox
2 76 0.025186033 ubox
2 77 0.800388668 ubox
2 78 0.498333194 ubox
3 69 0.005345486 ubox
3 75 0.027026267 ubox
3 76 0.799994589 ubox
3 77 0.486324142 ubox
4 69 0.007242172 ubox
4 75 0.794619604 ubox
4 76 0.470575339 ubox
4 77 0.155782238 ubox
5 69 0.013464784 ubox
5 75 0.369688647 ubox
5 76 0.199930379 ubox
5 77 0.004227927 ubox
6 69 0.058438260 ubox
6 75 0.234262630 ubox
6 76 0.003976462 ubox
7 72 0.769855683 ubox
7 73 0.341789409 ubox
7 74 0.259579843 ubox
7 79 0.003682062 ubox
8 14 0.003898229 ubox
8 68 0.992007412 ubox
8 69 0.019798650 ubox
9 13 0.003875323 ubox
9 28 0.006299067 ubox
9 29 0.004499806 ubox
9 67 0.993034692 ubox
9 72 0.061551129 ubox
9 73 0.004812434 ubox
10 27 0.006372941 ubox
10 32 0.004739505 ubox
10 66 0.993179276 ubox
10 69 0.111373691 ubox
11 26 0.006041241 ubox
11 27 0.005265160 ubox
11 31 0.004733637 ubox
11 65 0.993176636 ubox
11 68 0.115158254 ubox
12 25 0.005764129 ubox
12 29 0.003590946 ubox
12 63 0.006410414 ubox
12 64 0.991884050 ubox
12 67 0.115167554 ubox
13 24 0.003773030 ubox
13 26 0.990946016 ubox
13 27 0.009758642 ubox
13 66 0.111797602 ubox
13 68 0.009655704 ubox
14 25 0.994373856 ubox
14 67 0.009650520 ubox
15 24 0.995392077 ubox
16 23 0.995239220 ubox
16 79 0.004309633 ubox
17 21 0.004472825 ubox
17 22 0.992443652 ubox
17 78 0.007012822 ubox
18 77 0.007016147 ubox
19 76 0.007010647 ubox
20 75 0.007013136 ubox
21 74 0.006999923 ubox
22 73 0.006946546 ubox
25 65 0.105213882 ubox
26 37 0.005398458 ubox
26 64 0.117645644 ubox
27 36 0.008693651 ubox
27 63 0.988488880 ubox
28 32 0.004264118 ubox
28 35 0.008754429 ubox
28 50 0.003253712 ubox
28 62 0.998382840 ubox
28 66 0.003802348 ubox
29 34 0.008715564 ubox
29 49 0.003488119 ubox
29 62 0.013551523 ubox
29 65 0.003805762 ubox
30 48 0.003400386 ubox
31 58 0.004072038 ubox
31 59 0.997103729 ubox
31 60 0.056503821 ubox
31 64 0.003858457 ubox
32 58 0.996069336 ubox
32 59 0.056494195 ubox
32 63 0.004063981 ubox
33 44 0.997443089 ubox
33 57 0.053793923 ubox
34 43 0.998559122 ubox
34 56 0.052538218 ubox
35 42 0.998552706 ubox
35 54 0.051999846 ubox
36 41 0.995785026 ubox
36 50 0.003563802 ubox
36 53 0.051848049 ubox
37 41 0.007114140 ubox
37 49 0.007126969 ubox
37 53 0.005852980 ubox
38 48 0.006885996 ubox
39 50 0.022399550 ubox
40 48 0.004759034 ubox
40 50 0.005531056 ubox
41 63 0.008378743 ubox
42 47 0.035814408 ubox
42 48 0.011297381 ubox
42 49 0.011697172 ubox
42 50 0.005562790 ubox
42 62 0.008421376 ubox
43 47 0.011550295 ubox
43 48 0.008284903 ubox
43 49 0.005747850 ubox
44 58 0.003175918 ubox
44 59 0.004182114 ubox
44 60 0.003328551 ubox
45 57 0.034839872 ubox
45 76 0.007172976 ubox
46 57 0.966876495 ubox
46 75 0.008406308 ubox
47 54 0.007503286 ubox
47 56 0.997702552 ubox
47 60 0.010501493 ubox
47 74 0.008691492 ubox
48 55 0.997740488 ubox
48 59 0.010516606 ubox
48 61 0.004047447 ubox
48 73 0.008652569 ubox
49 54 0.995919007 ubox
49 56 0.013020223 ubox
49 58 0.010630027 ubox
49 59 0.003901165 ubox
49 60 0.004261922 ubox
49 72 0.008651661 ubox
50 54 0.004856442 ubox
50 55 0.012567658 ubox
50 58 0.003913225 ubox
50 59 0.004210830 ubox
50 71 0.007596173 ubox
51 57 0.003945808 ubox
55 69 0.009258311 ubox
56 68 0.009717281 ubox
57 67 0.009720966 ubox
58 62 0.004154847 ubox
58 66 0.010943322 ubox
59 65 0.010938273 ubox
64 75 0.004286998 ubox
65 73 0.003197306 ubox
65 74 0.004709172 ubox
66 72 0.003553670 ubox
66 73 0.004742733 ubox
68 73 0.004528493 ubox
69 73 0.007122888 ubox
69 74 0.008802765 ubox
70 75 0.004448481 ubox
70 76 0.006822702 ubox
70 77 0.011249062 ubox
71 75 0.006116772 ubox
71 76 0.011291011 ubox
71 77 0.006991922 ubox
72 76 0.005585595 ubox
72 77 0.005530589 ubox
72 78 0.039731859 ubox
73 77 0.025899136 ubox
73 78 0.038742917 ubox
74 78 0.013520236 ubox
1 78 0.9500000 lbox
2 77 0.9500000 lbox
3 76 0.9500000 lbox
4 75 0.9500000 lbox
7 72 0.9500000 lbox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
