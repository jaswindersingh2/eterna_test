%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (936)
} def

/sequence { (\
GGAAAGCGGCGGCCGGUUGCGGCAGGUUGAGGGAAUCACGCCCUCAACCACUCCUCCUGGAGGGCCGCAUGUGAGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.007914106 ubox
1 10 0.004020918 ubox
1 70 0.008185526 ubox
1 72 0.066428475 ubox
1 76 0.012594678 ubox
1 77 0.017825424 ubox
1 78 0.259795997 ubox
2 7 0.003824720 ubox
2 70 0.029803175 ubox
2 72 0.077407523 ubox
2 76 0.026977196 ubox
2 77 0.258604452 ubox
2 78 0.219845473 ubox
3 70 0.063180490 ubox
3 72 0.044598765 ubox
3 76 0.250812432 ubox
3 77 0.219046494 ubox
4 18 0.016756610 ubox
4 70 0.182480797 ubox
4 72 0.052042495 ubox
4 76 0.198267865 ubox
4 77 0.016246102 ubox
5 17 0.021683908 ubox
5 18 0.003400087 ubox
5 70 0.131868796 ubox
5 72 0.043701037 ubox
5 76 0.020296148 ubox
5 77 0.006222344 ubox
6 13 0.014722915 ubox
6 17 0.004788306 ubox
6 68 0.959819484 ubox
6 70 0.005361784 ubox
6 72 0.259115869 ubox
6 76 0.005055091 ubox
7 12 0.014783577 ubox
7 15 0.025052659 ubox
7 16 0.004350147 ubox
7 67 0.960910456 ubox
7 71 0.263376721 ubox
7 73 0.057716173 ubox
7 75 0.005136195 ubox
7 79 0.012769766 ubox
8 14 0.025281693 ubox
8 66 0.960969816 ubox
8 70 0.233621004 ubox
8 72 0.054865868 ubox
8 77 0.004980044 ubox
8 78 0.013777405 ubox
9 13 0.024875099 ubox
9 17 0.003794950 ubox
9 65 0.960976887 ubox
9 68 0.273204800 ubox
9 72 0.007056581 ubox
9 76 0.007162093 ubox
9 77 0.010603581 ubox
9 78 0.006122620 ubox
10 16 0.003884249 ubox
10 63 0.043114930 ubox
10 64 0.959103703 ubox
10 67 0.273521737 ubox
10 71 0.008056881 ubox
10 75 0.008151751 ubox
10 79 0.012687886 ubox
11 23 0.047743688 ubox
11 51 0.005225509 ubox
11 66 0.273466449 ubox
11 70 0.007731819 ubox
11 77 0.013792639 ubox
11 78 0.013651102 ubox
12 20 0.003376509 ubox
12 23 0.959368565 ubox
12 65 0.270776842 ubox
12 72 0.003455018 ubox
12 76 0.021037513 ubox
12 77 0.010096106 ubox
13 19 0.003363566 ubox
13 22 0.961937950 ubox
13 60 0.005504803 ubox
13 64 0.270021435 ubox
13 71 0.003440465 ubox
13 73 0.004402306 ubox
13 75 0.023165855 ubox
14 21 0.962302657 ubox
14 59 0.005590737 ubox
14 63 0.268420016 ubox
14 71 0.005323065 ubox
14 73 0.026665664 ubox
14 75 0.003368949 ubox
15 20 0.962028380 ubox
15 23 0.073679913 ubox
15 49 0.006374235 ubox
15 57 0.004826754 ubox
15 58 0.006134287 ubox
15 70 0.004659092 ubox
15 72 0.025639658 ubox
16 20 0.020937426 ubox
16 23 0.128464085 ubox
16 48 0.006372179 ubox
16 56 0.004826639 ubox
16 57 0.006129426 ubox
16 70 0.005530078 ubox
16 72 0.003346050 ubox
17 21 0.036647271 ubox
17 22 0.122486184 ubox
17 24 0.007356858 ubox
17 47 0.006350126 ubox
17 61 0.004478478 ubox
17 62 0.003755831 ubox
17 69 0.004113991 ubox
18 22 0.005594875 ubox
18 24 0.043355806 ubox
18 46 0.006271435 ubox
18 60 0.004490142 ubox
18 61 0.004704006 ubox
18 69 0.034999584 ubox
19 23 0.046112270 ubox
19 45 0.006216442 ubox
19 54 0.005862305 ubox
19 56 0.007027225 ubox
19 57 0.004332003 ubox
19 68 0.040803557 ubox
20 25 0.004087724 ubox
20 59 0.005751816 ubox
20 67 0.040816508 ubox
21 42 0.005149267 ubox
21 43 0.003343102 ubox
21 51 0.003419521 ubox
21 52 0.004874745 ubox
21 53 0.004940429 ubox
21 54 0.009926468 ubox
21 57 0.004615889 ubox
21 58 0.005187591 ubox
21 66 0.040845423 ubox
22 41 0.005374678 ubox
22 51 0.005388028 ubox
22 52 0.004582595 ubox
22 53 0.009924807 ubox
22 56 0.004620890 ubox
22 57 0.005159700 ubox
22 65 0.040845699 ubox
23 40 0.005575192 ubox
23 64 0.040752853 ubox
24 52 0.005538720 ubox
24 55 0.004431981 ubox
25 37 0.004935147 ubox
25 49 0.998529366 ubox
25 54 0.003333482 ubox
26 36 0.004978685 ubox
26 48 0.999939261 ubox
27 35 0.005003529 ubox
27 47 0.999495856 ubox
28 34 0.004961228 ubox
28 46 0.999417344 ubox
29 37 0.003487339 ubox
29 45 0.999960839 ubox
30 36 0.003452598 ubox
30 44 0.999825760 ubox
31 42 0.010091775 ubox
31 43 0.999898786 ubox
32 41 0.014242607 ubox
32 42 0.999832080 ubox
32 43 0.006185236 ubox
33 39 0.008371474 ubox
33 41 0.998099996 ubox
33 42 0.008306779 ubox
36 40 0.026015136 ubox
49 63 0.026715237 ubox
51 62 0.977777991 ubox
51 63 0.048076837 ubox
51 64 0.005664738 ubox
52 61 0.981296691 ubox
52 62 0.021072575 ubox
52 64 0.013445534 ubox
53 60 0.981938662 ubox
53 63 0.187706496 ubox
54 59 0.981406049 ubox
54 60 0.004753270 ubox
54 62 0.188197260 ubox
55 59 0.004929038 ubox
55 61 0.188058498 ubox
56 60 0.186480223 ubox
56 63 0.009281747 ubox
57 62 0.009280648 ubox
68 73 0.004666118 ubox
68 75 0.005540096 ubox
69 76 0.068345828 ubox
69 77 0.019700861 ubox
70 74 0.010320133 ubox
70 75 0.070982306 ubox
70 79 0.107086416 ubox
71 76 0.010677415 ubox
71 77 0.019949203 ubox
71 78 0.175329651 ubox
72 79 0.079712186 ubox
73 77 0.009079550 ubox
73 78 0.135622864 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
showpage
end
%%EOF
