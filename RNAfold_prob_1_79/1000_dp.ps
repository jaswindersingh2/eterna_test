%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1000)
} def

/sequence { (\
GGAAAACCCAAUGGGAAGCUCAAAGAGCAAGCCUCAACGAGGCACGGUCAAAGACCACGGCAAAGCCAUCGAGCCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.042042280 ubox
1 8 0.191483667 ubox
1 9 0.501897490 ubox
1 12 0.003620641 ubox
1 20 0.007367609 ubox
1 21 0.011361989 ubox
1 33 0.045911229 ubox
1 34 0.005573206 ubox
1 35 0.011717309 ubox
1 38 0.004550803 ubox
1 45 0.021469901 ubox
1 56 0.008841680 ubox
1 58 0.043920200 ubox
1 61 0.003930812 ubox
1 67 0.044298577 ubox
1 69 0.003686478 ubox
1 70 0.063753613 ubox
1 74 0.020670394 ubox
1 75 0.374074071 ubox
1 76 0.046816143 ubox
1 77 0.010786031 ubox
1 78 0.338471074 ubox
2 7 0.191952665 ubox
2 8 0.501234587 ubox
2 9 0.034538455 ubox
2 19 0.009720833 ubox
2 20 0.009452510 ubox
2 21 0.011645424 ubox
2 32 0.045843378 ubox
2 33 0.007370909 ubox
2 34 0.009369507 ubox
2 35 0.016226312 ubox
2 45 0.013350730 ubox
2 55 0.008601037 ubox
2 58 0.027021675 ubox
2 66 0.044089113 ubox
2 67 0.003647898 ubox
2 69 0.041172993 ubox
2 70 0.125968482 ubox
2 74 0.373414303 ubox
2 75 0.053606765 ubox
2 76 0.013805988 ubox
2 77 0.330414922 ubox
2 78 0.485434450 ubox
3 12 0.006841590 ubox
3 20 0.011455961 ubox
3 34 0.015566365 ubox
3 69 0.118120990 ubox
3 76 0.312025437 ubox
3 77 0.481041729 ubox
4 12 0.004316757 ubox
4 69 0.010219505 ubox
4 76 0.433347495 ubox
4 77 0.031428931 ubox
5 12 0.007223193 ubox
5 69 0.015375645 ubox
5 76 0.036342811 ubox
5 77 0.018836912 ubox
6 12 0.004815856 ubox
6 69 0.018012967 ubox
6 76 0.019542105 ubox
6 77 0.007660029 ubox
7 13 0.017656145 ubox
7 14 0.237117191 ubox
7 15 0.723305735 ubox
7 42 0.003745360 ubox
7 60 0.006668978 ubox
7 71 0.015968043 ubox
7 73 0.048627503 ubox
7 79 0.007891153 ubox
8 13 0.236663895 ubox
8 14 0.736003248 ubox
8 15 0.183785278 ubox
8 39 0.004064942 ubox
8 41 0.003762485 ubox
8 59 0.006513901 ubox
8 60 0.012151909 ubox
8 71 0.011480838 ubox
8 73 0.011620524 ubox
8 79 0.007355525 ubox
9 13 0.730804937 ubox
9 14 0.185856370 ubox
9 15 0.012109776 ubox
9 39 0.006610115 ubox
9 59 0.012169027 ubox
9 71 0.043117380 ubox
9 73 0.004567445 ubox
9 79 0.012313141 ubox
10 34 0.004296995 ubox
10 69 0.003392842 ubox
10 77 0.017835033 ubox
11 34 0.016715897 ubox
11 69 0.056125939 ubox
11 76 0.017611743 ubox
11 77 0.020251377 ubox
12 17 0.006329016 ubox
12 22 0.012758797 ubox
12 36 0.112490595 ubox
12 37 0.006988574 ubox
12 57 0.004051988 ubox
12 68 0.058399452 ubox
12 71 0.008154659 ubox
12 72 0.010450816 ubox
12 73 0.004262041 ubox
12 79 0.043908928 ubox
13 21 0.014061680 ubox
13 32 0.004311433 ubox
13 33 0.150023098 ubox
13 34 0.085733831 ubox
13 35 0.124166823 ubox
13 45 0.003344125 ubox
13 56 0.004398708 ubox
13 58 0.006435331 ubox
13 67 0.058529960 ubox
13 70 0.012947407 ubox
13 74 0.004127028 ubox
13 75 0.072295640 ubox
13 76 0.127415008 ubox
13 77 0.025212362 ubox
13 78 0.067755075 ubox
14 19 0.003759466 ubox
14 20 0.013770854 ubox
14 32 0.150258235 ubox
14 33 0.122423162 ubox
14 34 0.094822977 ubox
14 45 0.003712008 ubox
14 55 0.004341747 ubox
14 58 0.006847043 ubox
14 66 0.058187673 ubox
14 67 0.006673032 ubox
14 69 0.009525530 ubox
14 70 0.014180101 ubox
14 74 0.072080013 ubox
14 75 0.138375254 ubox
14 76 0.032959039 ubox
14 77 0.061631486 ubox
14 78 0.304319636 ubox
15 19 0.013479479 ubox
15 32 0.122434458 ubox
15 33 0.094331147 ubox
15 35 0.008032019 ubox
15 45 0.004287731 ubox
15 58 0.006059774 ubox
15 66 0.007076346 ubox
15 69 0.009183557 ubox
15 70 0.029939186 ubox
15 74 0.137667261 ubox
15 75 0.035312214 ubox
15 76 0.050810718 ubox
15 77 0.305055738 ubox
15 78 0.488025278 ubox
16 34 0.007993009 ubox
16 69 0.028366022 ubox
16 76 0.303403938 ubox
16 77 0.491738069 ubox
17 69 0.005260744 ubox
17 76 0.488091699 ubox
17 77 0.007978052 ubox
18 28 0.797108784 ubox
18 32 0.014111629 ubox
18 61 0.008876167 ubox
18 74 0.494538686 ubox
18 75 0.341193904 ubox
19 25 0.005006931 ubox
19 27 0.798186961 ubox
19 31 0.014172516 ubox
19 60 0.008862562 ubox
19 73 0.600924810 ubox
20 24 0.004638352 ubox
20 25 0.005228497 ubox
20 26 0.797573270 ubox
20 30 0.013426551 ubox
20 59 0.007769280 ubox
20 72 0.600780573 ubox
21 25 0.790882994 ubox
21 27 0.006162956 ubox
21 39 0.003188210 ubox
21 71 0.600076425 ubox
21 79 0.006007683 ubox
22 69 0.054723451 ubox
23 69 0.092498930 ubox
23 77 0.023101610 ubox
24 69 0.029674216 ubox
24 76 0.025581912 ubox
25 35 0.017471996 ubox
25 45 0.015061930 ubox
25 49 0.067174420 ubox
25 58 0.009953683 ubox
25 66 0.004145398 ubox
25 67 0.072966397 ubox
25 69 0.013023111 ubox
25 70 0.120752542 ubox
25 75 0.025916838 ubox
25 77 0.003401468 ubox
25 78 0.005759441 ubox
26 34 0.017485505 ubox
26 48 0.067051331 ubox
26 69 0.113032401 ubox
26 76 0.003735508 ubox
26 77 0.005494296 ubox
27 33 0.017323429 ubox
27 43 0.006127808 ubox
27 45 0.083369147 ubox
27 48 0.005915339 ubox
27 58 0.010049557 ubox
27 61 0.008019382 ubox
27 66 0.087354335 ubox
27 67 0.004689768 ubox
27 69 0.003542563 ubox
27 70 0.010119893 ubox
27 74 0.027296188 ubox
28 42 0.005717847 ubox
28 46 0.065792993 ubox
28 47 0.007340778 ubox
28 60 0.008017710 ubox
28 65 0.087352757 ubox
28 73 0.027393277 ubox
29 69 0.004015728 ubox
29 77 0.009582171 ubox
30 69 0.003217980 ubox
30 76 0.010709927 ubox
31 35 0.004131173 ubox
31 38 0.006955996 ubox
31 43 0.969235791 ubox
31 45 0.005871142 ubox
31 61 0.005396082 ubox
31 74 0.004127637 ubox
31 75 0.009585759 ubox
32 42 0.970267246 ubox
32 60 0.005391234 ubox
32 73 0.003462192 ubox
33 39 0.003589111 ubox
33 41 0.970259076 ubox
33 59 0.005351420 ubox
33 73 0.010239337 ubox
34 39 0.016790260 ubox
34 40 0.964846839 ubox
34 72 0.010527940 ubox
35 39 0.892962717 ubox
35 41 0.003802320 ubox
35 71 0.009499143 ubox
35 79 0.009348439 ubox
38 71 0.012769619 ubox
38 79 0.190974537 ubox
39 70 0.015644155 ubox
39 77 0.125568720 ubox
39 78 0.198925766 ubox
40 69 0.015573579 ubox
40 76 0.193609923 ubox
40 77 0.141508526 ubox
41 67 0.016485450 ubox
41 75 0.239549459 ubox
41 76 0.024571751 ubox
42 61 0.003729781 ubox
42 66 0.016508988 ubox
42 74 0.240083872 ubox
42 75 0.018840791 ubox
43 60 0.003835329 ubox
43 65 0.016479928 ubox
43 73 0.240321554 ubox
44 69 0.004005301 ubox
45 53 0.005209615 ubox
45 59 0.017806342 ubox
45 60 0.007616194 ubox
45 71 0.124520014 ubox
45 73 0.010481839 ubox
45 79 0.004134963 ubox
46 55 0.008595811 ubox
46 56 0.993062452 ubox
46 58 0.012943293 ubox
46 67 0.004058385 ubox
46 70 0.075092496 ubox
46 75 0.016303799 ubox
47 55 0.994698868 ubox
47 56 0.006828773 ubox
47 58 0.013338122 ubox
47 61 0.016406228 ubox
47 66 0.004099616 ubox
47 69 0.067089798 ubox
47 74 0.016315778 ubox
48 53 0.008289887 ubox
48 54 0.993949947 ubox
48 57 0.013169494 ubox
48 60 0.016411816 ubox
48 65 0.003850088 ubox
48 68 0.066324306 ubox
48 72 0.004477755 ubox
48 73 0.015021020 ubox
49 53 0.985593556 ubox
49 59 0.016373653 ubox
49 71 0.005027132 ubox
49 73 0.004383850 ubox
53 58 0.014172187 ubox
53 61 0.003475493 ubox
53 70 0.019267545 ubox
54 69 0.018693374 ubox
55 60 0.004739961 ubox
56 71 0.005183350 ubox
57 69 0.101473393 ubox
57 76 0.019579988 ubox
57 77 0.016970151 ubox
58 65 0.032412428 ubox
58 71 0.059304516 ubox
58 73 0.016025694 ubox
58 79 0.009529834 ubox
59 66 0.016647595 ubox
59 67 0.868741988 ubox
59 70 0.051784367 ubox
59 75 0.471256896 ubox
59 76 0.003557946 ubox
59 78 0.009149597 ubox
60 66 0.869826520 ubox
60 67 0.007187016 ubox
60 69 0.045524003 ubox
60 70 0.003202838 ubox
60 74 0.471861731 ubox
60 75 0.004197334 ubox
60 77 0.007657379 ubox
60 78 0.004717120 ubox
61 65 0.863523078 ubox
61 71 0.005272599 ubox
61 73 0.471450687 ubox
62 69 0.022343378 ubox
62 77 0.006911363 ubox
63 69 0.030720496 ubox
63 76 0.008298341 ubox
63 77 0.006762982 ubox
64 69 0.054263794 ubox
64 76 0.008640243 ubox
65 69 0.026102203 ubox
65 70 0.132251191 ubox
65 74 0.044023325 ubox
65 75 0.007776375 ubox
66 71 0.033838098 ubox
66 73 0.044453187 ubox
67 71 0.016468785 ubox
67 73 0.007784304 ubox
68 76 0.003695678 ubox
68 77 0.005309378 ubox
69 73 0.010338197 ubox
70 79 0.089597484 ubox
71 75 0.030935181 ubox
71 76 0.006472182 ubox
71 77 0.006441117 ubox
71 78 0.111715279 ubox
72 76 0.007070718 ubox
72 77 0.104552715 ubox
73 78 0.008309173 ubox
74 79 0.005120582 ubox
75 79 0.003686884 ubox
1 75 0.9500000 lbox
2 74 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
showpage
end
%%EOF
