%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (65)
} def

/sequence { (\
GGAAAAACAUUCGAUUGGAAACAAUCGCUGGCGAUGGAAACAUCAGAUGGAAACAUCGCUGGCGAAUGAUACCUAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.274909228 ubox
1 10 0.013980287 ubox
1 11 0.006897163 ubox
1 12 0.254227684 ubox
1 22 0.003849261 ubox
1 72 0.018286499 ubox
1 73 0.350780476 ubox
1 74 0.073634436 ubox
1 76 0.007766994 ubox
1 77 0.004371147 ubox
1 78 0.097857568 ubox
2 8 0.054452275 ubox
2 10 0.007740016 ubox
2 11 0.255675548 ubox
2 12 0.282248671 ubox
2 16 0.003166572 ubox
2 70 0.003214434 ubox
2 72 0.350904049 ubox
2 73 0.077662617 ubox
2 74 0.015492611 ubox
2 76 0.005891650 ubox
2 77 0.096209147 ubox
2 78 0.099654449 ubox
3 10 0.239698914 ubox
3 11 0.281800738 ubox
3 16 0.003845965 ubox
3 70 0.039249463 ubox
3 74 0.011878898 ubox
3 76 0.092483257 ubox
3 77 0.099108145 ubox
4 10 0.257697340 ubox
4 11 0.032982004 ubox
4 15 0.003711326 ubox
4 16 0.003961646 ubox
4 70 0.153212364 ubox
4 74 0.020250694 ubox
4 76 0.091222100 ubox
4 77 0.005816894 ubox
5 10 0.032703255 ubox
5 11 0.019726957 ubox
5 15 0.003816833 ubox
5 16 0.009892801 ubox
5 70 0.043506752 ubox
5 74 0.036836044 ubox
5 76 0.006973035 ubox
5 77 0.003703374 ubox
6 10 0.017195872 ubox
6 11 0.013798459 ubox
6 15 0.010206676 ubox
6 16 0.006534166 ubox
6 70 0.171906214 ubox
6 74 0.028693996 ubox
6 76 0.004070210 ubox
6 77 0.005266569 ubox
7 11 0.007197708 ubox
7 15 0.006593749 ubox
7 16 0.003259200 ubox
7 67 0.004675882 ubox
7 70 0.072487934 ubox
7 74 0.012466112 ubox
7 76 0.005876113 ubox
8 13 0.017066924 ubox
8 17 0.030791841 ubox
8 68 0.486276034 ubox
8 79 0.012496556 ubox
9 15 0.004060747 ubox
9 16 0.030775530 ubox
9 67 0.488076556 ubox
9 70 0.005749085 ubox
10 14 0.003990398 ubox
10 19 0.020391902 ubox
10 20 0.056807148 ubox
10 21 0.003420721 ubox
10 66 0.488056390 ubox
10 69 0.005620515 ubox
10 79 0.008930212 ubox
11 18 0.022003387 ubox
11 19 0.065717962 ubox
11 65 0.488211665 ubox
11 68 0.004647026 ubox
11 69 0.022150278 ubox
11 79 0.027872187 ubox
12 17 0.022672491 ubox
12 18 0.066633704 ubox
12 27 0.067979274 ubox
12 64 0.487694074 ubox
12 68 0.022543523 ubox
12 79 0.657165570 ubox
13 26 0.553380959 ubox
13 63 0.007551294 ubox
13 67 0.008791544 ubox
13 74 0.004415653 ubox
13 76 0.007968688 ubox
13 77 0.222041134 ubox
13 78 0.767121041 ubox
14 25 0.554669608 ubox
14 74 0.007901606 ubox
14 76 0.278943565 ubox
14 77 0.736949224 ubox
15 24 0.555177687 ubox
15 75 0.281584025 ubox
16 23 0.555720509 ubox
16 75 0.631495860 ubox
16 79 0.005557655 ubox
17 22 0.555736758 ubox
17 72 0.021960368 ubox
17 73 0.583447519 ubox
17 74 0.578981718 ubox
17 78 0.009185105 ubox
18 22 0.004530004 ubox
18 26 0.003651111 ubox
18 70 0.005001465 ubox
18 72 0.585631456 ubox
18 73 0.575985662 ubox
18 74 0.003327893 ubox
18 77 0.009100056 ubox
18 78 0.011591229 ubox
19 25 0.003535332 ubox
19 70 0.073096904 ubox
19 76 0.008884233 ubox
19 77 0.011543440 ubox
20 70 0.360425699 ubox
20 76 0.010577833 ubox
21 67 0.014141658 ubox
21 70 0.273879539 ubox
21 74 0.005184543 ubox
22 68 0.798967531 ubox
23 67 0.794668396 ubox
24 67 0.110733813 ubox
24 70 0.003418612 ubox
25 65 0.817276049 ubox
25 66 0.081161862 ubox
26 64 0.832202267 ubox
27 63 0.996945425 ubox
28 61 0.003802490 ubox
28 62 0.999888086 ubox
29 61 0.995992558 ubox
30 60 0.996040851 ubox
31 59 0.999982506 ubox
32 58 0.999959915 ubox
33 44 0.139667350 ubox
33 57 0.990134450 ubox
34 43 0.139838270 ubox
34 56 0.989905639 ubox
35 42 0.139856211 ubox
35 55 0.989646782 ubox
36 41 0.139842019 ubox
36 54 0.989193733 ubox
37 44 0.020296999 ubox
37 54 0.016051449 ubox
38 43 0.018566470 ubox
39 48 0.022950891 ubox
40 48 0.020432470 ubox
41 46 0.030801626 ubox
41 49 0.954907111 ubox
41 50 0.087374984 ubox
42 48 0.935842575 ubox
43 47 0.829839766 ubox
43 49 0.014484514 ubox
43 50 0.048835830 ubox
43 51 0.057189571 ubox
44 49 0.053876410 ubox
44 50 0.058360550 ubox
46 57 0.139631464 ubox
47 56 0.139835213 ubox
48 53 0.004509674 ubox
48 55 0.139859001 ubox
49 54 0.139846974 ubox
63 79 0.067983366 ubox
64 72 0.003292235 ubox
64 73 0.008253826 ubox
64 78 0.250795054 ubox
65 77 0.251036136 ubox
66 76 0.250783779 ubox
67 75 0.249624343 ubox
67 79 0.028192575 ubox
68 72 0.007502124 ubox
68 73 0.066299595 ubox
68 74 0.231383762 ubox
68 77 0.008538963 ubox
68 78 0.048192657 ubox
69 74 0.015415144 ubox
69 76 0.016365820 ubox
69 77 0.048207861 ubox
70 75 0.016431277 ubox
70 79 0.003876054 ubox
71 76 0.004669335 ubox
71 77 0.003744852 ubox
72 79 0.014705701 ubox
73 79 0.012563274 ubox
74 79 0.004997556 ubox
12 79 0.9500000 lbox
13 78 0.9500000 lbox
14 77 0.9500000 lbox
16 75 0.9500000 lbox
17 74 0.9500000 lbox
18 73 0.9500000 lbox
22 68 0.9500000 lbox
23 67 0.9500000 lbox
25 65 0.9500000 lbox
26 64 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
29 61 0.9500000 lbox
30 60 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 57 0.9500000 lbox
34 56 0.9500000 lbox
35 55 0.9500000 lbox
36 54 0.9500000 lbox
41 49 0.9500000 lbox
42 48 0.9500000 lbox
43 47 0.9500000 lbox
showpage
end
%%EOF
