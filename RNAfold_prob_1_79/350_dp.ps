%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (350)
} def

/sequence { (\
GGAAAGUGUCAUAAAAAAAUAUGCCGAAACGGAGCACACGCACUCAAAAAGAGGUUCAAAAGAACGCGUAAUACAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.004525186 ubox
1 10 0.031698640 ubox
1 12 0.003626734 ubox
1 25 0.068211747 ubox
1 30 0.026681484 ubox
1 35 0.014166213 ubox
1 37 0.011300741 ubox
1 41 0.006733879 ubox
1 45 0.004602578 ubox
1 67 0.006036494 ubox
1 72 0.003587778 ubox
1 74 0.024978331 ubox
1 77 0.005064110 ubox
1 78 0.187800227 ubox
2 9 0.025787684 ubox
2 10 0.034873533 ubox
2 24 0.068110743 ubox
2 25 0.006152515 ubox
2 30 0.014558816 ubox
2 35 0.010160118 ubox
2 37 0.003731314 ubox
2 39 0.005250918 ubox
2 41 0.008000274 ubox
2 43 0.003737816 ubox
2 44 0.003380742 ubox
2 45 0.007641243 ubox
2 67 0.004948166 ubox
2 74 0.012507464 ubox
2 76 0.006711589 ubox
2 77 0.178128968 ubox
2 78 0.884199319 ubox
3 7 0.003551830 ubox
3 9 0.033530159 ubox
3 22 0.005920245 ubox
3 44 0.007181348 ubox
3 72 0.005361213 ubox
3 76 0.164030344 ubox
3 77 0.883489703 ubox
4 9 0.003424307 ubox
4 22 0.012249491 ubox
4 69 0.003815566 ubox
4 72 0.005129505 ubox
4 76 0.839680146 ubox
4 77 0.041144039 ubox
5 12 0.007901863 ubox
5 20 0.004310394 ubox
5 22 0.007368851 ubox
5 44 0.014175155 ubox
5 69 0.003820468 ubox
5 72 0.006454407 ubox
5 76 0.049882309 ubox
5 77 0.178405824 ubox
6 10 0.006941814 ubox
6 12 0.006661993 ubox
6 20 0.032390319 ubox
6 22 0.038827130 ubox
6 24 0.019388658 ubox
6 25 0.051865010 ubox
6 30 0.026134373 ubox
6 35 0.010069863 ubox
6 37 0.297099142 ubox
6 39 0.029860347 ubox
6 41 0.020386616 ubox
6 43 0.015467784 ubox
6 67 0.019858959 ubox
6 69 0.006019695 ubox
6 72 0.015681159 ubox
6 74 0.888303106 ubox
6 76 0.238308835 ubox
6 77 0.005180227 ubox
6 78 0.009649004 ubox
7 11 0.006356721 ubox
7 13 0.004924651 ubox
7 14 0.009322093 ubox
7 15 0.006071755 ubox
7 16 0.010474673 ubox
7 17 0.006814196 ubox
7 18 0.009602430 ubox
7 19 0.033182045 ubox
7 21 0.041237393 ubox
7 23 0.018812473 ubox
7 26 0.080587381 ubox
7 27 0.008203517 ubox
7 28 0.004687263 ubox
7 29 0.025297202 ubox
7 31 0.010683490 ubox
7 34 0.009666654 ubox
7 36 0.297480631 ubox
7 38 0.030249604 ubox
7 40 0.020392717 ubox
7 42 0.015579823 ubox
7 66 0.019631072 ubox
7 68 0.014536231 ubox
7 70 0.004368351 ubox
7 71 0.015796120 ubox
7 73 0.888406366 ubox
7 75 0.256622269 ubox
7 79 0.003724110 ubox
8 12 0.004845929 ubox
8 20 0.041687914 ubox
8 22 0.018716674 ubox
8 24 0.070426114 ubox
8 25 0.107042666 ubox
8 30 0.014101706 ubox
8 35 0.297637400 ubox
8 37 0.031949614 ubox
8 39 0.020414423 ubox
8 41 0.015595353 ubox
8 65 0.015578828 ubox
8 67 0.020617244 ubox
8 69 0.004029222 ubox
8 72 0.878990407 ubox
8 74 0.258485782 ubox
8 76 0.005971732 ubox
8 78 0.006192900 ubox
9 13 0.004655306 ubox
9 14 0.007138588 ubox
9 15 0.006999301 ubox
9 16 0.010568714 ubox
9 17 0.008534876 ubox
9 18 0.010578348 ubox
9 19 0.040401381 ubox
9 21 0.018752861 ubox
9 23 0.015332403 ubox
9 26 0.004347042 ubox
9 27 0.014315652 ubox
9 29 0.013983514 ubox
9 32 0.004981940 ubox
9 33 0.028994698 ubox
9 34 0.285277080 ubox
9 36 0.029084228 ubox
9 38 0.019344633 ubox
9 40 0.014943280 ubox
9 63 0.005067703 ubox
9 64 0.013664448 ubox
9 66 0.019662155 ubox
9 68 0.003951590 ubox
9 70 0.033311434 ubox
9 71 0.845125772 ubox
9 73 0.241597657 ubox
9 75 0.006044549 ubox
10 23 0.724060550 ubox
10 26 0.015401024 ubox
10 31 0.010645639 ubox
10 32 0.031422697 ubox
10 34 0.023334716 ubox
10 62 0.007108920 ubox
10 66 0.019076703 ubox
10 68 0.041999242 ubox
11 20 0.076040742 ubox
11 22 0.735707110 ubox
11 69 0.134099642 ubox
11 72 0.079544733 ubox
12 16 0.015556315 ubox
12 17 0.026208960 ubox
12 18 0.024695235 ubox
12 19 0.077872668 ubox
12 21 0.737618285 ubox
12 23 0.027974442 ubox
12 29 0.004673488 ubox
12 31 0.008373372 ubox
12 32 0.004646362 ubox
12 33 0.010978085 ubox
12 66 0.010732576 ubox
12 68 0.127819407 ubox
12 70 0.059893583 ubox
12 71 0.077790097 ubox
12 73 0.005601101 ubox
13 20 0.702613199 ubox
13 22 0.032690270 ubox
13 69 0.048892198 ubox
13 72 0.008397270 ubox
13 77 0.003793589 ubox
14 20 0.035107019 ubox
14 22 0.015477932 ubox
14 69 0.007987949 ubox
14 72 0.005092485 ubox
14 76 0.003991754 ubox
14 77 0.003434725 ubox
15 20 0.028791604 ubox
15 22 0.024299413 ubox
15 69 0.003289886 ubox
15 72 0.004292053 ubox
15 76 0.003462128 ubox
16 20 0.016842419 ubox
16 22 0.018993046 ubox
16 72 0.006845300 ubox
17 22 0.020706891 ubox
17 72 0.006160220 ubox
18 22 0.012898760 ubox
18 72 0.022577571 ubox
18 77 0.005028869 ubox
19 72 0.016764423 ubox
19 76 0.005437071 ubox
20 33 0.010915002 ubox
20 34 0.010147123 ubox
20 36 0.026187480 ubox
20 38 0.033321048 ubox
20 40 0.004040806 ubox
20 70 0.233550011 ubox
20 71 0.013263767 ubox
20 73 0.006225940 ubox
20 75 0.004978391 ubox
21 69 0.236545502 ubox
21 72 0.007486857 ubox
21 76 0.010257878 ubox
22 27 0.005733451 ubox
22 28 0.005195208 ubox
22 29 0.005818043 ubox
22 31 0.013121966 ubox
22 33 0.064766915 ubox
22 34 0.050921190 ubox
22 36 0.428564668 ubox
22 38 0.012482080 ubox
22 42 0.015101005 ubox
22 68 0.236720980 ubox
22 70 0.011029313 ubox
22 71 0.007081741 ubox
22 75 0.011297192 ubox
23 30 0.017326221 ubox
23 35 0.498135219 ubox
23 37 0.023388205 ubox
23 41 0.017497526 ubox
23 55 0.008488099 ubox
23 67 0.236775936 ubox
23 69 0.010899453 ubox
23 74 0.011526630 ubox
24 31 0.024516414 ubox
24 32 0.803795922 ubox
24 34 0.492529221 ubox
24 40 0.016383754 ubox
24 54 0.008931357 ubox
24 66 0.223242849 ubox
24 68 0.010372560 ubox
25 31 0.816453814 ubox
25 32 0.487814780 ubox
25 34 0.037053546 ubox
25 40 0.012521294 ubox
25 51 0.011551790 ubox
25 53 0.012423673 ubox
25 62 0.003250086 ubox
25 66 0.014498067 ubox
25 68 0.006512472 ubox
25 79 0.030225062 ubox
26 30 0.764476109 ubox
26 35 0.021180022 ubox
26 37 0.008440422 ubox
26 39 0.013779938 ubox
26 41 0.010188507 ubox
26 45 0.007685222 ubox
26 65 0.009953607 ubox
26 67 0.006950593 ubox
26 78 0.035670650 ubox
27 44 0.007359176 ubox
27 77 0.035296092 ubox
28 76 0.032266969 ubox
28 77 0.004728651 ubox
29 69 0.025652386 ubox
29 76 0.006056536 ubox
30 34 0.006706874 ubox
30 40 0.084455679 ubox
30 68 0.026552284 ubox
30 79 0.135562387 ubox
31 35 0.008508933 ubox
31 37 0.049583432 ubox
31 39 0.086022728 ubox
31 41 0.010959175 ubox
31 43 0.010666551 ubox
31 44 0.015413242 ubox
31 45 0.008085481 ubox
31 67 0.026209379 ubox
31 74 0.019734709 ubox
31 76 0.004951242 ubox
31 78 0.144349635 ubox
32 37 0.030915594 ubox
32 39 0.012610607 ubox
32 41 0.013239474 ubox
32 43 0.018379095 ubox
32 44 0.005272028 ubox
32 45 0.039784914 ubox
32 57 0.022579230 ubox
32 69 0.004026523 ubox
32 72 0.004937878 ubox
32 74 0.015579155 ubox
32 76 0.004781527 ubox
32 77 0.144044249 ubox
32 78 0.020737503 ubox
33 44 0.040107467 ubox
33 56 0.022563800 ubox
33 69 0.006095577 ubox
33 72 0.019968711 ubox
33 76 0.142951731 ubox
33 77 0.020699483 ubox
34 39 0.022201377 ubox
34 41 0.447286497 ubox
34 43 0.038939389 ubox
34 55 0.021938011 ubox
34 67 0.038010219 ubox
34 69 0.016465647 ubox
34 72 0.011958065 ubox
34 74 0.062812875 ubox
34 76 0.017820765 ubox
35 40 0.447148237 ubox
35 54 0.021887219 ubox
35 66 0.038019795 ubox
35 68 0.016256166 ubox
36 69 0.016742285 ubox
36 72 0.027640957 ubox
37 51 0.003656505 ubox
37 53 0.008486928 ubox
37 66 0.012020609 ubox
37 68 0.015802325 ubox
38 69 0.828236662 ubox
38 72 0.004219546 ubox
39 51 0.007614509 ubox
39 53 0.004637604 ubox
39 66 0.010358689 ubox
39 68 0.871069527 ubox
40 55 0.015878512 ubox
40 65 0.004196016 ubox
40 67 0.873252076 ubox
40 69 0.010639623 ubox
41 51 0.004164100 ubox
41 53 0.004948959 ubox
41 54 0.017383585 ubox
41 66 0.872355962 ubox
41 68 0.010974649 ubox
42 55 0.011353093 ubox
42 69 0.003872106 ubox
43 51 0.035311240 ubox
43 53 0.991187786 ubox
43 54 0.010480589 ubox
43 62 0.005103505 ubox
43 68 0.003847662 ubox
44 49 0.004603382 ubox
44 50 0.034253519 ubox
44 51 0.005639799 ubox
44 52 0.993952525 ubox
44 53 0.009471538 ubox
44 61 0.004864082 ubox
44 63 0.015899469 ubox
45 51 0.993663291 ubox
45 53 0.019072608 ubox
45 62 0.016104976 ubox
48 69 0.003341575 ubox
49 56 0.003671305 ubox
49 69 0.006277241 ubox
50 55 0.003762265 ubox
50 69 0.010959300 ubox
51 57 0.008157216 ubox
51 67 0.021754680 ubox
51 69 0.014541177 ubox
52 56 0.007113958 ubox
52 69 0.004677604 ubox
53 65 0.005917893 ubox
53 67 0.036978533 ubox
54 65 0.996894365 ubox
54 67 0.014873279 ubox
55 63 0.005268399 ubox
55 64 0.997690305 ubox
55 66 0.013643696 ubox
56 61 0.003230150 ubox
56 62 0.005878300 ubox
56 63 0.998190912 ubox
57 62 0.996914215 ubox
62 67 0.004232408 ubox
66 72 0.003685987 ubox
66 74 0.006887900 ubox
67 79 0.007105487 ubox
68 72 0.003182345 ubox
68 74 0.021098374 ubox
68 76 0.003705166 ubox
68 78 0.008071842 ubox
69 73 0.019098957 ubox
69 75 0.004337248 ubox
70 76 0.004561453 ubox
70 77 0.009991026 ubox
71 76 0.009155996 ubox
71 77 0.009541637 ubox
72 79 0.004145205 ubox
74 79 0.016482804 ubox
2 78 0.9500000 lbox
3 77 0.9500000 lbox
4 76 0.9500000 lbox
6 74 0.9500000 lbox
7 73 0.9500000 lbox
8 72 0.9500000 lbox
9 71 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
38 69 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
showpage
end
%%EOF
