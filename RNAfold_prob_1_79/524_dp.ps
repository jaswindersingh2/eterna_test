%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (524)
} def

/sequence { (\
GGAAACGUAUCGAACAUAUACGUGUACGCAACAGCAUACACGGCACACAAGCACAAUGUUCAGAUACGAUGCGUAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.023792565 ubox
1 70 0.004333240 ubox
1 72 0.196713904 ubox
1 74 0.028262174 ubox
1 76 0.006224886 ubox
1 77 0.006555231 ubox
1 78 0.741670368 ubox
2 6 0.003405406 ubox
2 11 0.004400443 ubox
2 70 0.016790944 ubox
2 72 0.195359930 ubox
2 74 0.015072636 ubox
2 76 0.008555630 ubox
2 77 0.742421966 ubox
2 78 0.469118752 ubox
3 10 0.004162981 ubox
3 70 0.143206674 ubox
3 74 0.011680330 ubox
3 76 0.736894749 ubox
3 77 0.468850030 ubox
4 70 0.121577106 ubox
4 74 0.019796686 ubox
4 76 0.454203342 ubox
4 77 0.010844224 ubox
5 70 0.078248478 ubox
5 74 0.874029336 ubox
5 76 0.010302354 ubox
6 68 0.455516996 ubox
6 71 0.005241955 ubox
6 73 0.886082795 ubox
7 67 0.464981652 ubox
7 72 0.885167820 ubox
8 66 0.466160009 ubox
8 71 0.884302351 ubox
9 65 0.469858781 ubox
9 70 0.881794537 ubox
10 62 0.004087520 ubox
10 63 0.007522007 ubox
10 64 0.473160782 ubox
10 69 0.880464554 ubox
11 63 0.473818461 ubox
11 68 0.879808700 ubox
12 60 0.005167067 ubox
12 61 0.825390891 ubox
12 65 0.005882809 ubox
12 67 0.556645604 ubox
13 17 0.008176223 ubox
13 19 0.012255024 ubox
13 59 0.009485385 ubox
13 60 0.941083639 ubox
13 65 0.093150987 ubox
14 19 0.010547158 ubox
14 59 0.947446448 ubox
14 60 0.007790181 ubox
14 65 0.066372281 ubox
15 43 0.003354451 ubox
15 58 0.948296904 ubox
15 63 0.077557713 ubox
16 57 0.936176415 ubox
16 59 0.038656193 ubox
16 60 0.004784684 ubox
16 65 0.040639679 ubox
17 45 0.011800660 ubox
17 47 0.010475507 ubox
17 49 0.003618003 ubox
17 53 0.010534168 ubox
17 55 0.036254671 ubox
17 56 0.896442454 ubox
17 58 0.039873687 ubox
17 62 0.038293277 ubox
17 63 0.011262295 ubox
17 64 0.039938247 ubox
17 66 0.045874049 ubox
18 57 0.041314136 ubox
18 59 0.038342993 ubox
18 60 0.010503316 ubox
18 65 0.046108642 ubox
19 43 0.010711213 ubox
19 45 0.015621882 ubox
19 53 0.040021862 ubox
19 55 0.073239520 ubox
19 56 0.043257932 ubox
19 58 0.038807470 ubox
19 62 0.011952201 ubox
19 63 0.006021332 ubox
19 64 0.044508637 ubox
19 66 0.006877283 ubox
20 57 0.034694747 ubox
20 59 0.034548146 ubox
20 60 0.005461551 ubox
20 65 0.006404882 ubox
21 42 0.986640926 ubox
21 43 0.006068587 ubox
21 51 0.004058628 ubox
21 58 0.033124046 ubox
21 63 0.004436179 ubox
22 41 0.999877714 ubox
22 57 0.005763527 ubox
23 40 0.999749957 ubox
23 56 0.005109072 ubox
24 39 0.999957352 ubox
25 38 0.999278017 ubox
26 37 0.990884270 ubox
27 34 0.028216058 ubox
28 35 0.998170580 ubox
29 34 0.997773165 ubox
42 48 0.017667690 ubox
42 52 0.009480901 ubox
42 54 0.093424924 ubox
42 60 0.006010471 ubox
42 61 0.006398376 ubox
43 48 0.042320040 ubox
43 52 0.970924214 ubox
43 54 0.029961163 ubox
43 59 0.033626599 ubox
43 60 0.007475124 ubox
43 61 0.033246897 ubox
43 65 0.003502418 ubox
43 67 0.004134314 ubox
44 51 0.971289015 ubox
44 58 0.034927810 ubox
44 63 0.011575804 ubox
45 57 0.031553396 ubox
45 59 0.041574820 ubox
45 60 0.006190072 ubox
45 65 0.006046378 ubox
46 51 0.047817807 ubox
46 58 0.043334383 ubox
46 63 0.016994502 ubox
47 57 0.039010090 ubox
47 59 0.046358956 ubox
47 60 0.003308700 ubox
47 65 0.003746881 ubox
48 58 0.049366979 ubox
48 63 0.019491777 ubox
49 57 0.046170287 ubox
49 60 0.010648456 ubox
50 57 0.010980874 ubox
50 59 0.010617886 ubox
50 60 0.100773193 ubox
51 59 0.118097708 ubox
51 60 0.003916033 ubox
51 61 0.012603733 ubox
52 58 0.119548284 ubox
52 63 0.006330621 ubox
53 57 0.097112678 ubox
53 59 0.043878104 ubox
53 60 0.008712729 ubox
53 65 0.007231941 ubox
54 58 0.046343997 ubox
54 63 0.047627225 ubox
55 59 0.004767043 ubox
55 60 0.009163087 ubox
55 65 0.005878991 ubox
56 60 0.005178876 ubox
56 65 0.073846104 ubox
57 62 0.009091649 ubox
57 63 0.009267676 ubox
57 64 0.076660770 ubox
57 66 0.048301805 ubox
58 65 0.053815058 ubox
58 67 0.048980587 ubox
59 63 0.005758430 ubox
59 64 0.051262328 ubox
59 66 0.050048233 ubox
60 64 0.006315279 ubox
60 66 0.006276806 ubox
63 67 0.050634003 ubox
63 77 0.010080197 ubox
63 78 0.004283725 ubox
64 76 0.011149111 ubox
65 75 0.011681108 ubox
66 74 0.011787529 ubox
67 73 0.011830028 ubox
67 79 0.005934017 ubox
68 72 0.011745585 ubox
68 77 0.007376559 ubox
68 78 0.032358156 ubox
69 74 0.006591314 ubox
69 76 0.015786850 ubox
69 77 0.032892388 ubox
70 75 0.015690628 ubox
70 79 0.016418010 ubox
71 76 0.004217102 ubox
71 77 0.003882120 ubox
71 78 0.026558906 ubox
72 79 0.108777736 ubox
73 77 0.004355112 ubox
73 78 0.121651584 ubox
74 79 0.004620953 ubox
1 78 0.9500000 lbox
2 77 0.9500000 lbox
3 76 0.9500000 lbox
5 74 0.9500000 lbox
6 73 0.9500000 lbox
7 72 0.9500000 lbox
8 71 0.9500000 lbox
9 70 0.9500000 lbox
10 69 0.9500000 lbox
11 68 0.9500000 lbox
12 61 0.9500000 lbox
13 60 0.9500000 lbox
14 59 0.9500000 lbox
15 58 0.9500000 lbox
16 57 0.9500000 lbox
17 56 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
showpage
end
%%EOF
