%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (948)
} def

/sequence { (\
GGAAACGAUGAGUGCGAAAGCACAGAUCGUAGCGAAAAAAGCUACGAUCACAUCGAAAGAUGACAUCGGCAUACGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.039115493 ubox
1 64 0.003621746 ubox
1 70 0.038043980 ubox
1 72 0.076115220 ubox
1 74 0.358664121 ubox
1 76 0.013090761 ubox
1 77 0.010943986 ubox
1 78 0.256404718 ubox
2 6 0.005646312 ubox
2 67 0.005541958 ubox
2 70 0.098083202 ubox
2 72 0.087737368 ubox
2 74 0.108725099 ubox
2 76 0.016017453 ubox
2 77 0.251293013 ubox
2 78 0.325744909 ubox
3 66 0.005202160 ubox
3 72 0.092258081 ubox
3 76 0.243292717 ubox
3 77 0.278444002 ubox
4 72 0.046441445 ubox
4 76 0.201727082 ubox
4 77 0.238969520 ubox
5 30 0.006525253 ubox
5 72 0.030977196 ubox
5 76 0.306926606 ubox
5 77 0.005549929 ubox
6 29 0.007220625 ubox
6 55 0.040258289 ubox
6 68 0.920843711 ubox
6 69 0.028835843 ubox
6 75 0.352901072 ubox
6 79 0.036492078 ubox
7 28 0.007484979 ubox
7 54 0.042665230 ubox
7 67 0.930395001 ubox
7 70 0.008155022 ubox
7 74 0.350360437 ubox
7 77 0.013060779 ubox
7 78 0.038339892 ubox
8 27 0.007499356 ubox
8 53 0.042681139 ubox
8 66 0.930242581 ubox
8 72 0.348579926 ubox
8 76 0.019774379 ubox
8 77 0.033495345 ubox
9 24 0.003402399 ubox
9 26 0.007498647 ubox
9 52 0.042656805 ubox
9 65 0.929607997 ubox
9 68 0.021322960 ubox
9 71 0.350487453 ubox
9 73 0.018447293 ubox
9 75 0.024170891 ubox
9 79 0.009244501 ubox
10 51 0.042484635 ubox
10 64 0.925803945 ubox
10 67 0.025713679 ubox
10 70 0.349482444 ubox
10 72 0.015458863 ubox
10 74 0.024400955 ubox
10 78 0.014981836 ubox
11 66 0.025227758 ubox
11 72 0.004924624 ubox
11 77 0.014131043 ubox
12 21 0.005645919 ubox
12 23 0.997874833 ubox
12 67 0.005437422 ubox
12 70 0.005336504 ubox
12 72 0.015612202 ubox
13 20 0.005584849 ubox
13 22 0.999132943 ubox
13 69 0.004923761 ubox
13 71 0.016230514 ubox
14 21 0.999809336 ubox
14 23 0.003341980 ubox
14 70 0.016264164 ubox
15 20 0.999424202 ubox
15 68 0.009303779 ubox
15 69 0.014002572 ubox
16 21 0.003617110 ubox
16 67 0.012451592 ubox
17 66 0.011671968 ubox
18 66 0.004223914 ubox
20 64 0.003911134 ubox
25 49 0.998516293 ubox
26 48 0.999500090 ubox
27 47 0.999680826 ubox
28 46 0.999938188 ubox
29 45 0.999931423 ubox
30 44 0.999721637 ubox
31 43 0.999687086 ubox
32 42 0.999974727 ubox
33 41 0.999834792 ubox
33 79 0.003937295 ubox
34 78 0.004802459 ubox
35 77 0.004789493 ubox
36 76 0.004673836 ubox
41 70 0.004200048 ubox
42 69 0.004189687 ubox
45 68 0.006955674 ubox
46 67 0.007724853 ubox
47 66 0.007746170 ubox
48 65 0.007534939 ubox
50 66 0.007830045 ubox
51 59 0.004191080 ubox
51 62 0.992218017 ubox
52 61 0.996333254 ubox
53 60 0.996980161 ubox
53 63 0.017666422 ubox
53 69 0.031138321 ubox
54 59 0.996874156 ubox
54 62 0.019318463 ubox
54 68 0.042426338 ubox
54 79 0.007006252 ubox
55 61 0.013617404 ubox
55 67 0.042602203 ubox
55 78 0.013573844 ubox
56 66 0.040437737 ubox
56 77 0.013791129 ubox
57 66 0.004506214 ubox
57 76 0.011934586 ubox
59 64 0.013274924 ubox
59 67 0.015297747 ubox
59 74 0.014522695 ubox
59 77 0.006413067 ubox
59 78 0.005450321 ubox
60 66 0.015148972 ubox
60 72 0.020307539 ubox
60 76 0.007071984 ubox
60 77 0.004865956 ubox
61 65 0.013480373 ubox
61 68 0.005310833 ubox
61 71 0.020884281 ubox
61 75 0.007326948 ubox
61 79 0.014111043 ubox
62 67 0.011124763 ubox
62 70 0.021028926 ubox
62 74 0.007324291 ubox
62 77 0.005234980 ubox
62 78 0.022940696 ubox
63 72 0.003961817 ubox
63 76 0.008003869 ubox
63 77 0.022394401 ubox
64 68 0.033712536 ubox
64 69 0.060556153 ubox
64 75 0.008425975 ubox
64 79 0.003473839 ubox
65 72 0.006384826 ubox
65 76 0.009293009 ubox
65 77 0.007404922 ubox
66 71 0.006117108 ubox
66 75 0.003268728 ubox
67 75 0.048354530 ubox
67 79 0.011348967 ubox
68 74 0.058706556 ubox
68 77 0.046722846 ubox
68 78 0.027043652 ubox
69 74 0.077434525 ubox
69 76 0.248297842 ubox
69 77 0.024293824 ubox
69 78 0.054181777 ubox
70 75 0.258980374 ubox
70 79 0.034311685 ubox
71 76 0.015376836 ubox
71 77 0.031381652 ubox
72 79 0.010131817 ubox
73 77 0.006490219 ubox
74 79 0.040793969 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
showpage
end
%%EOF
