%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (274)
} def

/sequence { (\
GGAAAAAAGUAGAACUACGAAAGUAGAGAGUGGAGGAGGAUGGGAAACGAUCACUCUGCUCAACUACAGAUAUAAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.011811930 ubox
1 15 0.016309292 ubox
1 16 0.013745434 ubox
1 18 0.019832771 ubox
1 64 0.011051084 ubox
1 65 0.018043883 ubox
1 67 0.017418355 ubox
1 71 0.006818333 ubox
1 73 0.013932610 ubox
1 76 0.011691972 ubox
1 77 0.006099719 ubox
1 78 0.146024701 ubox
2 10 0.005752866 ubox
2 15 0.014536683 ubox
2 18 0.007642284 ubox
2 64 0.019025949 ubox
2 67 0.009866500 ubox
2 71 0.007395163 ubox
2 73 0.015556291 ubox
2 76 0.008056726 ubox
2 77 0.144191749 ubox
2 78 0.160681717 ubox
3 10 0.009547884 ubox
3 16 0.003248961 ubox
3 65 0.004187875 ubox
3 71 0.012128104 ubox
3 73 0.028134843 ubox
3 76 0.136670165 ubox
3 77 0.159651099 ubox
4 10 0.007348012 ubox
4 16 0.003198336 ubox
4 65 0.003675631 ubox
4 71 0.025015525 ubox
4 73 0.028926781 ubox
4 76 0.144624957 ubox
4 77 0.008785164 ubox
5 10 0.008542042 ubox
5 71 0.049843539 ubox
5 73 0.030864520 ubox
5 76 0.010082820 ubox
5 77 0.007763876 ubox
6 10 0.005319822 ubox
6 71 0.030373331 ubox
6 73 0.031185562 ubox
6 76 0.008757703 ubox
6 77 0.006463051 ubox
7 16 0.007020192 ubox
7 65 0.004794602 ubox
7 71 0.049267497 ubox
7 73 0.024773598 ubox
7 76 0.006763408 ubox
7 77 0.009922166 ubox
8 16 0.095827853 ubox
8 65 0.087432749 ubox
8 71 0.036795210 ubox
8 73 0.016708341 ubox
8 76 0.010737145 ubox
8 77 0.010322321 ubox
9 15 0.099515754 ubox
9 16 0.005056057 ubox
9 18 0.182721297 ubox
9 64 0.090724069 ubox
9 67 0.897734226 ubox
9 71 0.019994045 ubox
9 73 0.027535120 ubox
9 76 0.011404550 ubox
9 78 0.008227570 ubox
10 14 0.089721887 ubox
10 17 0.182158798 ubox
10 19 0.003880525 ubox
10 27 0.004951335 ubox
10 62 0.003936478 ubox
10 63 0.087488013 ubox
10 66 0.898855693 ubox
10 68 0.005206080 ubox
10 69 0.006350735 ubox
10 70 0.020015836 ubox
10 72 0.028271419 ubox
10 74 0.008837550 ubox
10 75 0.011217798 ubox
10 79 0.006352022 ubox
11 16 0.172091294 ubox
11 65 0.898547987 ubox
11 71 0.027033424 ubox
11 73 0.009206942 ubox
11 77 0.003812289 ubox
12 16 0.004215360 ubox
12 18 0.015493394 ubox
12 61 0.006583210 ubox
12 64 0.893258535 ubox
12 65 0.004550621 ubox
12 67 0.013745208 ubox
12 76 0.003475973 ubox
12 77 0.006845803 ubox
12 78 0.165930861 ubox
13 60 0.005018652 ubox
13 65 0.005089628 ubox
13 71 0.004921999 ubox
13 76 0.007074210 ubox
13 77 0.165471520 ubox
14 24 0.044006292 ubox
14 65 0.003720137 ubox
14 76 0.153251195 ubox
15 19 0.006580236 ubox
15 23 0.045727062 ubox
15 26 0.936069860 ubox
15 69 0.017255217 ubox
16 21 0.005678140 ubox
16 22 0.044916756 ubox
16 25 0.941653271 ubox
16 26 0.003877015 ubox
16 68 0.017176435 ubox
16 72 0.014231035 ubox
16 74 0.107560381 ubox
16 75 0.009324965 ubox
17 24 0.942157303 ubox
17 71 0.014194665 ubox
17 73 0.105806926 ubox
18 23 0.941937973 ubox
18 26 0.007571719 ubox
18 69 0.013932554 ubox
18 79 0.063848320 ubox
19 67 0.006700907 ubox
19 71 0.036039714 ubox
19 73 0.004064511 ubox
19 78 0.069059927 ubox
20 71 0.016062496 ubox
20 73 0.003537119 ubox
20 77 0.068503334 ubox
21 71 0.012850779 ubox
21 76 0.063049409 ubox
21 77 0.006187565 ubox
22 65 0.036173186 ubox
22 71 0.011343864 ubox
22 73 0.011380009 ubox
22 76 0.008311162 ubox
23 64 0.037368818 ubox
23 67 0.326740113 ubox
23 73 0.009934905 ubox
24 63 0.037018234 ubox
24 66 0.327328942 ubox
24 72 0.010205649 ubox
25 65 0.327282118 ubox
25 71 0.010096331 ubox
26 61 0.005136431 ubox
26 64 0.325932672 ubox
26 67 0.003182474 ubox
27 57 0.005653097 ubox
27 60 0.004794000 ubox
27 65 0.010131209 ubox
28 56 0.005815894 ubox
28 59 0.003982510 ubox
28 61 0.996841838 ubox
28 64 0.008061598 ubox
28 67 0.023009491 ubox
29 55 0.005826086 ubox
29 60 0.998109282 ubox
29 65 0.041815825 ubox
30 54 0.005839238 ubox
30 59 0.998400840 ubox
30 61 0.010743673 ubox
30 64 0.042906023 ubox
30 67 0.010301715 ubox
31 53 0.005834337 ubox
31 58 0.996223441 ubox
31 62 0.023535938 ubox
31 63 0.038509355 ubox
31 66 0.010292754 ubox
32 52 0.005626556 ubox
32 57 0.979627849 ubox
32 59 0.008903875 ubox
32 60 0.020294737 ubox
32 61 0.028257819 ubox
32 65 0.010133941 ubox
33 51 0.005195319 ubox
33 56 0.982766700 ubox
33 59 0.027353304 ubox
33 60 0.021132514 ubox
33 61 0.038353101 ubox
33 64 0.009640312 ubox
34 55 0.980508021 ubox
34 57 0.021489034 ubox
34 60 0.038554934 ubox
35 48 0.004536977 ubox
35 54 0.969416604 ubox
35 55 0.054610810 ubox
35 56 0.019290017 ubox
35 57 0.173464432 ubox
35 59 0.035913595 ubox
36 52 0.153753083 ubox
36 54 0.125706531 ubox
36 55 0.014438466 ubox
36 56 0.182189256 ubox
36 61 0.008740986 ubox
37 51 0.149867510 ubox
37 55 0.184836121 ubox
37 57 0.019277200 ubox
37 60 0.008736590 ubox
38 48 0.023917820 ubox
38 51 0.048961755 ubox
38 52 0.211267293 ubox
38 54 0.188238458 ubox
38 56 0.019232051 ubox
38 59 0.008719371 ubox
39 48 0.046843175 ubox
39 51 0.152148335 ubox
39 52 0.957983579 ubox
39 54 0.003408605 ubox
39 55 0.011476772 ubox
40 51 0.972264682 ubox
40 57 0.007672853 ubox
41 45 0.004923186 ubox
41 46 0.027578048 ubox
41 47 0.033726222 ubox
41 49 0.160071670 ubox
41 50 0.971309296 ubox
41 53 0.017091085 ubox
42 48 0.183487719 ubox
42 52 0.017177912 ubox
42 55 0.006383498 ubox
42 56 0.004739814 ubox
43 48 0.966169181 ubox
43 51 0.016278943 ubox
43 54 0.006616684 ubox
43 55 0.004652823 ubox
44 48 0.012437193 ubox
44 52 0.006044687 ubox
44 54 0.004623035 ubox
45 51 0.005828216 ubox
62 71 0.006433041 ubox
62 77 0.004937960 ubox
63 71 0.004783252 ubox
63 73 0.003248858 ubox
63 76 0.005386830 ubox
64 69 0.018037740 ubox
64 79 0.005123172 ubox
65 69 0.003844545 ubox
65 70 0.006167231 ubox
65 72 0.013884875 ubox
65 74 0.018814423 ubox
65 75 0.003278334 ubox
66 71 0.013314067 ubox
66 73 0.018409175 ubox
67 79 0.026000059 ubox
68 73 0.032326032 ubox
68 76 0.017730083 ubox
68 77 0.020742310 ubox
69 73 0.011268906 ubox
69 76 0.017796200 ubox
69 77 0.061246871 ubox
69 78 0.563217368 ubox
70 76 0.066510417 ubox
70 77 0.555971513 ubox
71 75 0.061610781 ubox
71 79 0.006677072 ubox
72 76 0.015282818 ubox
72 77 0.022376066 ubox
73 79 0.008187511 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
31 58 0.9500000 lbox
32 57 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
