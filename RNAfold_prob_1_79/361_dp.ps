%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (361)
} def

/sequence { (\
GGAAAGCAGCGACUAAAAUGUCGGCCAAAGGCACUGCAGGCACACGAAAAGUGGAUGGAAACAUCGCCCGUGUCCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.028191862 ubox
1 10 0.005295550 ubox
1 26 0.020488074 ubox
1 32 0.006099466 ubox
1 34 0.004734919 ubox
1 35 0.006385047 ubox
1 37 0.008313266 ubox
1 41 0.011581082 ubox
1 68 0.005393803 ubox
1 69 0.014025344 ubox
1 74 0.003246663 ubox
1 75 0.109701966 ubox
1 76 0.005740793 ubox
1 77 0.005531231 ubox
1 78 0.144501148 ubox
2 7 0.011732955 ubox
2 25 0.018984745 ubox
2 26 0.008206303 ubox
2 32 0.003817660 ubox
2 34 0.006818604 ubox
2 37 0.004490517 ubox
2 41 0.013744560 ubox
2 67 0.005412825 ubox
2 68 0.013624970 ubox
2 74 0.109835074 ubox
2 75 0.006282367 ubox
2 76 0.004170467 ubox
2 77 0.131074806 ubox
2 78 0.223087596 ubox
3 35 0.006873940 ubox
3 73 0.100531304 ubox
3 76 0.095120271 ubox
3 77 0.216125833 ubox
4 71 0.008718243 ubox
4 73 0.005022689 ubox
4 76 0.130335835 ubox
4 77 0.015265315 ubox
5 35 0.008591600 ubox
5 71 0.019527526 ubox
5 76 0.013193981 ubox
5 77 0.008189914 ubox
6 21 0.007291427 ubox
6 25 0.082356399 ubox
6 26 0.017356049 ubox
6 32 0.012179401 ubox
6 34 0.008873135 ubox
6 37 0.984824033 ubox
6 41 0.004269332 ubox
6 67 0.011170612 ubox
6 71 0.027888298 ubox
6 73 0.018050216 ubox
6 74 0.007882269 ubox
6 75 0.008490208 ubox
6 78 0.003817986 ubox
7 20 0.007490125 ubox
7 24 0.082626834 ubox
7 31 0.012166615 ubox
7 36 0.985870829 ubox
7 40 0.004260950 ubox
7 66 0.011206166 ubox
7 70 0.027992499 ubox
7 72 0.019990750 ubox
7 79 0.003408979 ubox
8 19 0.007346897 ubox
8 35 0.984633155 ubox
8 71 0.013853741 ubox
9 25 0.053261939 ubox
9 26 0.008015621 ubox
9 34 0.978692227 ubox
9 37 0.009671743 ubox
9 67 0.008169361 ubox
9 68 0.004795181 ubox
9 69 0.006264969 ubox
9 71 0.003673104 ubox
10 23 0.986965525 ubox
10 24 0.038083399 ubox
10 36 0.009397217 ubox
10 66 0.007951491 ubox
10 70 0.004472808 ubox
11 22 0.999734515 ubox
11 32 0.007747150 ubox
11 69 0.003708840 ubox
12 21 0.999656022 ubox
13 20 0.999290841 ubox
13 30 0.005308034 ubox
13 31 0.005520488 ubox
14 18 0.030517179 ubox
14 20 0.007894272 ubox
14 29 0.005199812 ubox
14 30 0.005361930 ubox
15 19 0.031215530 ubox
19 33 0.014237408 ubox
19 38 0.003978758 ubox
20 32 0.014410235 ubox
20 37 0.004868184 ubox
21 31 0.014397929 ubox
21 36 0.004770386 ubox
22 30 0.014396019 ubox
23 32 0.012245884 ubox
23 34 0.018076681 ubox
24 32 0.988830806 ubox
24 37 0.004232600 ubox
24 41 0.020459965 ubox
24 78 0.009140434 ubox
25 30 0.013454013 ubox
25 31 0.990007333 ubox
25 36 0.004075277 ubox
25 40 0.020489960 ubox
25 79 0.006107367 ubox
26 30 0.982816461 ubox
26 31 0.010500354 ubox
26 39 0.020449956 ubox
26 79 0.040006127 ubox
27 77 0.012901972 ubox
28 76 0.013092093 ubox
28 77 0.104951473 ubox
29 35 0.010215995 ubox
29 76 0.115828442 ubox
29 77 0.005224072 ubox
30 34 0.010091905 ubox
30 35 0.003389370 ubox
30 37 0.010230096 ubox
30 68 0.003764427 ubox
30 74 0.033784970 ubox
30 75 0.117111599 ubox
30 76 0.005487108 ubox
31 37 0.010890185 ubox
31 67 0.003774740 ubox
31 73 0.035319018 ubox
31 74 0.116771871 ubox
31 75 0.005588581 ubox
32 36 0.010898108 ubox
32 66 0.003761261 ubox
32 72 0.085914227 ubox
33 71 0.085194379 ubox
33 73 0.084111262 ubox
34 70 0.083817569 ubox
34 72 0.084090925 ubox
34 79 0.010412590 ubox
35 42 0.004242455 ubox
35 70 0.015154998 ubox
35 72 0.032353840 ubox
35 79 0.040103615 ubox
36 41 0.004798908 ubox
36 67 0.016365884 ubox
36 68 0.006347101 ubox
36 69 0.050398812 ubox
36 71 0.092431774 ubox
36 73 0.010260991 ubox
36 77 0.007121032 ubox
36 78 0.073132089 ubox
37 66 0.016681327 ubox
37 70 0.095889426 ubox
37 72 0.011649349 ubox
37 79 0.005757905 ubox
38 71 0.011608789 ubox
38 76 0.896254666 ubox
38 77 0.124169575 ubox
39 68 0.168837259 ubox
39 69 0.013476286 ubox
39 74 0.031243824 ubox
39 75 0.971097839 ubox
39 76 0.141843110 ubox
39 77 0.004861430 ubox
39 78 0.017637913 ubox
40 67 0.169473050 ubox
40 68 0.010560838 ubox
40 73 0.031359497 ubox
40 74 0.971277692 ubox
40 75 0.145095850 ubox
40 76 0.003502144 ubox
40 77 0.016596161 ubox
41 53 0.013349113 ubox
41 54 0.003240945 ubox
41 66 0.169482782 ubox
41 72 0.045027681 ubox
42 52 0.014098589 ubox
42 71 0.043502796 ubox
42 73 0.979436840 ubox
43 51 0.014162073 ubox
43 53 0.175399259 ubox
43 70 0.039827445 ubox
43 72 0.983354281 ubox
44 52 0.176921526 ubox
44 71 0.983211556 ubox
44 73 0.005332637 ubox
45 51 0.177077526 ubox
45 53 0.007939423 ubox
45 66 0.017992240 ubox
45 70 0.983355554 ubox
45 72 0.005482612 ubox
45 79 0.003285422 ubox
46 52 0.006765508 ubox
46 65 0.017964207 ubox
46 67 0.005396860 ubox
46 68 0.043492912 ubox
46 69 0.975423775 ubox
46 71 0.005325715 ubox
46 78 0.003456990 ubox
47 52 0.013942185 ubox
47 64 0.016951942 ubox
47 77 0.003359896 ubox
48 52 0.007892579 ubox
49 64 0.005166432 ubox
50 64 0.006429602 ubox
51 62 0.021220757 ubox
51 64 0.160161896 ubox
51 65 0.044777085 ubox
51 67 0.735068785 ubox
51 68 0.477456209 ubox
51 69 0.026018463 ubox
52 61 0.021234094 ubox
52 63 0.171030713 ubox
52 66 0.716689058 ubox
53 62 0.171655916 ubox
53 65 0.547484603 ubox
53 67 0.242843248 ubox
53 68 0.056073795 ubox
53 69 0.006734653 ubox
54 62 0.005783697 ubox
54 64 0.287018807 ubox
54 65 0.815999674 ubox
54 67 0.049048966 ubox
54 68 0.006423062 ubox
54 78 0.014501084 ubox
55 64 0.939275681 ubox
55 71 0.005729683 ubox
55 77 0.014142451 ubox
56 60 0.004113598 ubox
56 61 0.010505350 ubox
56 63 0.982725972 ubox
56 66 0.021535431 ubox
56 70 0.005941221 ubox
57 62 0.983052440 ubox
57 64 0.005313553 ubox
57 65 0.021585026 ubox
57 68 0.011304876 ubox
57 69 0.006389218 ubox
57 75 0.015289049 ubox
58 62 0.009579440 ubox
58 64 0.015767831 ubox
58 65 0.009538039 ubox
58 67 0.011317512 ubox
58 68 0.006370470 ubox
58 74 0.015317121 ubox
59 64 0.009088197 ubox
59 73 0.013924264 ubox
61 71 0.013060194 ubox
61 73 0.004550452 ubox
62 70 0.013481341 ubox
62 72 0.007057471 ubox
63 71 0.007044923 ubox
64 70 0.006570591 ubox
66 73 0.004324704 ubox
67 72 0.005073558 ubox
69 79 0.012950419 ubox
70 75 0.005697302 ubox
70 78 0.013854437 ubox
71 79 0.004606671 ubox
72 78 0.007909487 ubox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
38 76 0.9500000 lbox
39 75 0.9500000 lbox
40 74 0.9500000 lbox
42 73 0.9500000 lbox
43 72 0.9500000 lbox
44 71 0.9500000 lbox
45 70 0.9500000 lbox
46 69 0.9500000 lbox
51 67 0.9500000 lbox
52 66 0.9500000 lbox
53 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
showpage
end
%%EOF
