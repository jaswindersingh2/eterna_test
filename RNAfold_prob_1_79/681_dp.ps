%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (681)
} def

/sequence { (\
GGAAACUACAACUACAAAAAAAAAAAGUAGAACUACAAAAAAAAAAAGUAGAAGUAGAAAAAAAAAAAGAAAUUGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.036917468 ubox
1 7 0.010788079 ubox
1 9 0.027743961 ubox
1 12 0.003954964 ubox
1 15 0.004166654 ubox
1 33 0.003547788 ubox
1 34 0.005562197 ubox
1 36 0.005553587 ubox
1 76 0.004877678 ubox
1 77 0.003307042 ubox
1 78 0.098774624 ubox
2 6 0.011637004 ubox
2 7 0.003600809 ubox
2 9 0.011449650 ubox
2 12 0.003347275 ubox
2 33 0.005945874 ubox
2 74 0.005577234 ubox
2 76 0.004636038 ubox
2 77 0.097602267 ubox
2 78 0.103514123 ubox
3 73 0.005570692 ubox
3 74 0.008125770 ubox
3 76 0.094140120 ubox
3 77 0.100938678 ubox
4 73 0.008229070 ubox
4 74 0.026340016 ubox
4 76 0.086529166 ubox
4 77 0.027187842 ubox
5 28 0.008221752 ubox
5 55 0.038249730 ubox
5 73 0.027245234 ubox
5 74 0.028863779 ubox
5 76 0.034651160 ubox
5 77 0.003654338 ubox
6 27 0.008555163 ubox
6 30 0.077862104 ubox
6 51 0.018360460 ubox
6 54 0.039670996 ubox
6 57 0.977424089 ubox
6 69 0.009717721 ubox
6 75 0.037593556 ubox
6 79 0.010012936 ubox
7 26 0.008288057 ubox
7 29 0.078452681 ubox
7 35 0.004135115 ubox
7 50 0.018489534 ubox
7 53 0.038279579 ubox
7 56 0.984056815 ubox
7 57 0.004306179 ubox
7 68 0.009315179 ubox
7 71 0.003736198 ubox
7 72 0.003832745 ubox
7 75 0.003988467 ubox
8 28 0.078437321 ubox
8 34 0.004303402 ubox
8 49 0.018484281 ubox
8 55 0.984594623 ubox
8 73 0.005334498 ubox
8 74 0.005250690 ubox
8 76 0.044769350 ubox
9 27 0.078331234 ubox
9 30 0.007591374 ubox
9 48 0.018420997 ubox
9 51 0.012768953 ubox
9 54 0.983473683 ubox
9 57 0.004533080 ubox
9 69 0.007886599 ubox
9 75 0.049138814 ubox
9 79 0.004319065 ubox
10 74 0.047836328 ubox
11 28 0.031942317 ubox
11 49 0.015806355 ubox
11 55 0.004295536 ubox
11 73 0.040025963 ubox
12 27 0.033194637 ubox
12 30 0.342237864 ubox
12 48 0.016194796 ubox
12 51 0.931746439 ubox
12 54 0.004225699 ubox
12 57 0.018664228 ubox
12 69 0.003529808 ubox
13 20 0.004139520 ubox
13 21 0.003369499 ubox
13 22 0.008468520 ubox
13 23 0.006930921 ubox
13 24 0.004065511 ubox
13 25 0.004929366 ubox
13 26 0.032385438 ubox
13 29 0.344323655 ubox
13 47 0.015458832 ubox
13 50 0.933035839 ubox
13 53 0.003752809 ubox
13 56 0.018775482 ubox
13 68 0.003280538 ubox
13 71 0.005478381 ubox
14 28 0.344490392 ubox
14 49 0.932783565 ubox
14 55 0.018776796 ubox
14 76 0.011047186 ubox
15 27 0.344238931 ubox
15 30 0.003214720 ubox
15 48 0.929683461 ubox
15 54 0.018721307 ubox
15 69 0.005780953 ubox
15 75 0.011939653 ubox
16 74 0.011922074 ubox
17 73 0.011853519 ubox
19 28 0.004108585 ubox
21 28 0.004344593 ubox
22 28 0.003410155 ubox
23 28 0.003694659 ubox
25 34 0.005458022 ubox
26 34 0.120781064 ubox
27 33 0.126063878 ubox
27 34 0.009515269 ubox
27 36 0.873460608 ubox
28 32 0.113621456 ubox
28 35 0.872496805 ubox
28 37 0.019615724 ubox
28 38 0.010122334 ubox
28 39 0.004043510 ubox
28 56 0.012730452 ubox
29 34 0.824397172 ubox
29 55 0.013241250 ubox
30 34 0.017315404 ubox
30 36 0.019021032 ubox
30 78 0.015088616 ubox
31 55 0.007636162 ubox
31 77 0.015379330 ubox
32 49 0.031042553 ubox
32 55 0.014477913 ubox
32 76 0.015379708 ubox
33 48 0.032288519 ubox
33 51 0.340553474 ubox
33 54 0.014469250 ubox
33 57 0.085292064 ubox
33 75 0.014937895 ubox
34 39 0.004549908 ubox
34 40 0.004191674 ubox
34 41 0.005354208 ubox
34 42 0.003354650 ubox
34 43 0.005042655 ubox
34 47 0.031533708 ubox
34 50 0.342655064 ubox
34 53 0.013523214 ubox
34 56 0.085859984 ubox
35 49 0.342868900 ubox
35 55 0.085899209 ubox
35 76 0.004588397 ubox
36 48 0.342620283 ubox
36 51 0.009450871 ubox
36 54 0.085812006 ubox
36 75 0.005001740 ubox
37 74 0.004935662 ubox
38 73 0.004348558 ubox
40 49 0.007891145 ubox
41 49 0.007061870 ubox
42 49 0.006832874 ubox
43 49 0.003442317 ubox
49 56 0.003943033 ubox
50 55 0.004112541 ubox
51 78 0.010239479 ubox
52 74 0.004274850 ubox
52 77 0.010364117 ubox
53 73 0.004348528 ubox
53 74 0.006108790 ubox
53 76 0.010007448 ubox
54 73 0.006739043 ubox
54 78 0.004400238 ubox
55 60 0.003730527 ubox
55 61 0.003436318 ubox
55 62 0.004381064 ubox
55 64 0.004031608 ubox
55 72 0.006664031 ubox
55 75 0.004042398 ubox
56 73 0.003857547 ubox
56 74 0.004294272 ubox
56 76 0.003599351 ubox
57 73 0.003235454 ubox
57 78 0.044987180 ubox
58 73 0.005599911 ubox
58 74 0.018689051 ubox
58 76 0.006113980 ubox
58 77 0.046729949 ubox
59 73 0.017355266 ubox
59 74 0.018214744 ubox
59 76 0.041655200 ubox
59 77 0.016220693 ubox
60 73 0.017450268 ubox
60 74 0.022260640 ubox
60 76 0.016302131 ubox
60 77 0.021040506 ubox
61 73 0.021113334 ubox
61 74 0.032771634 ubox
61 76 0.020709027 ubox
61 77 0.020221936 ubox
62 73 0.031817374 ubox
62 74 0.028534926 ubox
62 76 0.020001698 ubox
62 77 0.025312344 ubox
63 73 0.026962232 ubox
63 74 0.049927702 ubox
63 76 0.024940724 ubox
63 77 0.026325778 ubox
64 73 0.051522613 ubox
64 74 0.034237307 ubox
64 76 0.026367309 ubox
64 77 0.035886098 ubox
65 73 0.033627744 ubox
65 74 0.057875963 ubox
65 76 0.035169188 ubox
65 77 0.022935560 ubox
66 73 0.054548671 ubox
66 74 0.044118508 ubox
66 76 0.022408802 ubox
66 77 0.030787666 ubox
67 73 0.042724352 ubox
67 74 0.094880333 ubox
67 76 0.032599788 ubox
67 77 0.046348667 ubox
68 73 0.096152777 ubox
68 74 0.030937069 ubox
68 76 0.050822237 ubox
68 77 0.028763756 ubox
69 73 0.022941933 ubox
69 74 0.017378520 ubox
69 76 0.028275244 ubox
69 77 0.034698188 ubox
69 78 0.582830329 ubox
70 74 0.034110403 ubox
70 76 0.036377616 ubox
70 77 0.575471329 ubox
71 76 0.479048358 ubox
71 77 0.027347942 ubox
72 76 0.026089827 ubox
72 77 0.026291294 ubox
73 79 0.007036442 ubox
74 79 0.008286442 ubox
6 57 0.9500000 lbox
7 56 0.9500000 lbox
8 55 0.9500000 lbox
9 54 0.9500000 lbox
12 51 0.9500000 lbox
13 50 0.9500000 lbox
14 49 0.9500000 lbox
15 48 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
showpage
end
%%EOF
