%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (75)
} def

/sequence { (\
GGAAAAAGACACGUCACGAAAGUGACCCGAGCCGUCGAAAGACGAGUGCGAAAGCACGCGAGGGUGUCGAUCAACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.016602641 ubox
1 12 0.007643639 ubox
1 28 0.012312997 ubox
1 68 0.003349649 ubox
1 71 0.008463415 ubox
1 72 0.147080980 ubox
1 75 0.284922295 ubox
1 76 0.127286898 ubox
1 77 0.014444433 ubox
1 78 0.280013146 ubox
2 10 0.003658351 ubox
2 27 0.012315095 ubox
2 68 0.005077324 ubox
2 71 0.133860764 ubox
2 72 0.393890049 ubox
2 75 0.146356858 ubox
2 76 0.017611818 ubox
2 77 0.276923842 ubox
2 78 0.280897091 ubox
3 67 0.004315836 ubox
3 71 0.386055194 ubox
3 76 0.265865385 ubox
3 77 0.280372562 ubox
4 71 0.061465709 ubox
4 76 0.261660626 ubox
4 77 0.011994904 ubox
5 71 0.165405245 ubox
5 76 0.014037130 ubox
5 77 0.005174391 ubox
6 71 0.074237523 ubox
6 76 0.004669182 ubox
6 77 0.010230749 ubox
7 67 0.003839595 ubox
7 71 0.030018537 ubox
7 76 0.011783256 ubox
7 77 0.003320255 ubox
8 32 0.004682080 ubox
8 67 0.004266446 ubox
8 68 0.995362017 ubox
8 72 0.016010675 ubox
8 75 0.008275940 ubox
8 78 0.004337546 ubox
9 65 0.004901373 ubox
9 67 0.997816354 ubox
9 71 0.013972135 ubox
9 77 0.003972152 ubox
10 24 0.010674146 ubox
10 29 0.006640566 ubox
10 31 0.003283467 ubox
10 64 0.004954502 ubox
10 66 0.998263699 ubox
10 69 0.007518733 ubox
11 23 0.010837749 ubox
11 65 0.996510587 ubox
11 67 0.008825718 ubox
12 22 0.010852837 ubox
12 29 0.004818523 ubox
12 63 0.008100023 ubox
12 64 0.994532660 ubox
12 66 0.009034960 ubox
12 69 0.005332933 ubox
12 79 0.003390977 ubox
13 26 0.993596136 ubox
13 27 0.007880659 ubox
13 28 0.003873002 ubox
13 65 0.003574451 ubox
13 68 0.005147634 ubox
13 75 0.003686858 ubox
13 78 0.003171293 ubox
14 25 0.997589813 ubox
14 62 0.005482075 ubox
14 74 0.003598393 ubox
15 24 0.999820812 ubox
15 62 0.003254885 ubox
16 23 0.999491354 ubox
17 22 0.999152510 ubox
17 60 0.004077496 ubox
17 79 0.007375387 ubox
18 59 0.004054940 ubox
18 72 0.006928079 ubox
18 78 0.007756812 ubox
19 71 0.006850925 ubox
19 77 0.007068118 ubox
20 76 0.006052727 ubox
20 77 0.003330838 ubox
21 76 0.004626308 ubox
22 57 0.004059140 ubox
22 68 0.006764842 ubox
22 75 0.005619416 ubox
23 56 0.004121519 ubox
23 73 0.005941935 ubox
23 74 0.004399808 ubox
24 55 0.004121008 ubox
24 72 0.006778905 ubox
25 65 0.053291080 ubox
25 71 0.005306591 ubox
26 63 0.023540416 ubox
26 64 0.074072182 ubox
27 31 0.006205809 ubox
27 41 0.003897084 ubox
27 60 0.004671866 ubox
27 62 0.029407806 ubox
27 63 0.984454682 ubox
27 64 0.012222760 ubox
28 34 0.004104016 ubox
28 37 0.051935590 ubox
28 50 0.015645466 ubox
28 58 0.003370213 ubox
28 60 0.030812827 ubox
28 62 0.986633435 ubox
28 63 0.023673547 ubox
28 69 0.011379904 ubox
28 79 0.006006916 ubox
29 33 0.004752838 ubox
29 36 0.052554814 ubox
29 49 0.015715102 ubox
29 59 0.030289090 ubox
29 68 0.011579437 ubox
29 78 0.006462885 ubox
30 35 0.051195318 ubox
30 47 0.007864425 ubox
30 67 0.010800659 ubox
30 77 0.006065451 ubox
31 47 0.027613296 ubox
31 59 0.986618483 ubox
31 65 0.011239654 ubox
31 75 0.003672616 ubox
31 76 0.004773499 ubox
32 44 0.006159882 ubox
32 46 0.030603553 ubox
32 58 0.984726919 ubox
32 60 0.006058743 ubox
32 63 0.010091018 ubox
32 64 0.011965761 ubox
33 41 0.003239550 ubox
33 44 0.987752117 ubox
33 58 0.009214341 ubox
33 62 0.009890986 ubox
33 63 0.012176566 ubox
34 43 0.998090351 ubox
34 71 0.005382635 ubox
35 42 0.998010594 ubox
35 45 0.022207081 ubox
35 61 0.011638069 ubox
35 70 0.005833609 ubox
36 41 0.997684122 ubox
36 44 0.023748087 ubox
36 60 0.011505191 ubox
36 69 0.005856096 ubox
37 43 0.023513335 ubox
37 59 0.010759861 ubox
37 68 0.005855394 ubox
38 67 0.005753059 ubox
43 58 0.004418837 ubox
43 60 0.052005448 ubox
43 62 0.004596545 ubox
44 57 0.003486210 ubox
44 59 0.058263378 ubox
46 55 0.006149994 ubox
46 57 0.996912601 ubox
46 59 0.005560450 ubox
47 54 0.006083458 ubox
47 56 0.998459165 ubox
47 58 0.005286659 ubox
47 60 0.018778278 ubox
48 55 0.999253024 ubox
48 57 0.005044810 ubox
48 59 0.033438861 ubox
49 54 0.998868242 ubox
49 58 0.033467631 ubox
50 55 0.004338146 ubox
50 57 0.032939686 ubox
54 67 0.005616403 ubox
55 63 0.003221672 ubox
55 66 0.005997872 ubox
56 65 0.006020025 ubox
56 67 0.003767604 ubox
57 62 0.008443028 ubox
57 63 0.007933338 ubox
57 64 0.006028232 ubox
57 66 0.004041622 ubox
58 65 0.007252652 ubox
59 63 0.010531226 ubox
59 64 0.007809477 ubox
59 69 0.006530717 ubox
59 79 0.030248331 ubox
60 68 0.006653596 ubox
60 78 0.033676087 ubox
61 67 0.006574111 ubox
61 77 0.033610385 ubox
62 76 0.033349491 ubox
63 72 0.003641638 ubox
63 75 0.033088613 ubox
63 76 0.005238678 ubox
64 71 0.004449710 ubox
64 75 0.009365546 ubox
65 70 0.004524857 ubox
65 73 0.026362144 ubox
65 74 0.009902169 ubox
66 72 0.031002912 ubox
66 75 0.006321016 ubox
67 74 0.006039518 ubox
68 79 0.066706466 ubox
69 75 0.048388940 ubox
69 76 0.012005107 ubox
69 77 0.023628866 ubox
69 78 0.462113384 ubox
70 76 0.025370879 ubox
70 77 0.456227615 ubox
71 79 0.004172291 ubox
72 79 0.026933888 ubox
73 77 0.006783301 ubox
75 79 0.013535802 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
