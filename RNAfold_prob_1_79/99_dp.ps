%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (99)
} def

/sequence { (\
GGAAAAACGAUCGUAUCGAAAGAUACCCGGCGGAUCGAAAGAUCACUACGAAAGUAGCGAAGGGAUCGGCUACUAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.161923192 ubox
1 11 0.003548736 ubox
1 12 0.057394425 ubox
1 27 0.016952080 ubox
1 28 0.161133992 ubox
1 31 0.012430605 ubox
1 36 0.011468331 ubox
1 43 0.005758759 ubox
1 44 0.091799599 ubox
1 46 0.066236943 ubox
1 47 0.057605411 ubox
1 49 0.019678112 ubox
1 71 0.009622371 ubox
1 73 0.036454414 ubox
1 74 0.074609500 ubox
1 76 0.007470021 ubox
1 77 0.004774863 ubox
1 78 0.126062150 ubox
2 8 0.038074770 ubox
2 11 0.050800299 ubox
2 12 0.101804322 ubox
2 17 0.003462845 ubox
2 26 0.015904005 ubox
2 27 0.161032484 ubox
2 28 0.006133487 ubox
2 31 0.014483977 ubox
2 35 0.010427835 ubox
2 36 0.021525960 ubox
2 43 0.084024073 ubox
2 44 0.106886339 ubox
2 46 0.060509189 ubox
2 47 0.009446554 ubox
2 49 0.012044480 ubox
2 70 0.010024944 ubox
2 71 0.004586968 ubox
2 73 0.078766177 ubox
2 74 0.015317437 ubox
2 76 0.006048425 ubox
2 77 0.122897648 ubox
2 78 0.164694805 ubox
3 11 0.098246019 ubox
3 16 0.003410551 ubox
3 24 0.004495381 ubox
3 35 0.021022057 ubox
3 43 0.104730513 ubox
3 47 0.010031645 ubox
3 71 0.013907719 ubox
3 74 0.011449253 ubox
3 76 0.115818965 ubox
3 77 0.163296906 ubox
4 11 0.012831137 ubox
4 24 0.004353812 ubox
4 43 0.010606541 ubox
4 47 0.009286666 ubox
4 71 0.029132680 ubox
4 74 0.019285828 ubox
4 76 0.146718658 ubox
4 77 0.009345642 ubox
5 11 0.008835645 ubox
5 24 0.004314875 ubox
5 35 0.008162795 ubox
5 43 0.004370710 ubox
5 47 0.009088388 ubox
5 71 0.108587718 ubox
5 74 0.029633689 ubox
5 76 0.010392336 ubox
5 77 0.006388760 ubox
6 11 0.009523419 ubox
6 24 0.004392245 ubox
6 47 0.010948892 ubox
6 71 0.022961152 ubox
6 74 0.017292626 ubox
6 76 0.006715955 ubox
6 77 0.005824156 ubox
7 11 0.005838257 ubox
7 14 0.008362245 ubox
7 47 0.007839407 ubox
7 71 0.009461419 ubox
7 74 0.006334531 ubox
7 76 0.005775707 ubox
8 13 0.009492421 ubox
8 18 0.034984956 ubox
8 22 0.014345892 ubox
8 29 0.440518542 ubox
8 30 0.066333875 ubox
8 32 0.613896614 ubox
8 33 0.004654528 ubox
8 37 0.252646210 ubox
8 41 0.003237499 ubox
8 50 0.007877080 ubox
8 68 0.252699375 ubox
8 69 0.007408714 ubox
8 79 0.149646167 ubox
9 17 0.035669506 ubox
9 26 0.005925359 ubox
9 27 0.034004247 ubox
9 28 0.447484675 ubox
9 31 0.621757896 ubox
9 36 0.257541789 ubox
9 44 0.096755446 ubox
9 46 0.009017749 ubox
9 49 0.009074219 ubox
9 67 0.254362855 ubox
9 73 0.006370321 ubox
9 77 0.015082383 ubox
9 78 0.157896504 ubox
10 16 0.035210812 ubox
10 24 0.012305334 ubox
10 35 0.257482447 ubox
10 43 0.096843504 ubox
10 47 0.003295834 ubox
10 66 0.254298465 ubox
10 76 0.022269062 ubox
10 77 0.146889692 ubox
11 15 0.031214923 ubox
11 19 0.020238071 ubox
11 23 0.012699232 ubox
11 29 0.061174499 ubox
11 30 0.379606622 ubox
11 33 0.020440193 ubox
11 34 0.256527952 ubox
11 38 0.004321066 ubox
11 42 0.096825749 ubox
11 51 0.012637737 ubox
11 65 0.254222336 ubox
11 75 0.025342113 ubox
12 18 0.020855929 ubox
12 22 0.012759905 ubox
12 29 0.380289737 ubox
12 30 0.022610259 ubox
12 32 0.046935554 ubox
12 33 0.253891783 ubox
12 37 0.004547216 ubox
12 41 0.096715506 ubox
12 50 0.013496738 ubox
12 63 0.004213220 ubox
12 64 0.253807445 ubox
12 79 0.007848279 ubox
13 17 0.019528027 ubox
13 26 0.959003052 ubox
13 27 0.064711627 ubox
13 28 0.245462190 ubox
13 31 0.050650789 ubox
13 36 0.004337616 ubox
13 44 0.006111328 ubox
13 46 0.013527852 ubox
13 49 0.011456148 ubox
13 73 0.021150255 ubox
13 76 0.008482789 ubox
14 25 0.989582969 ubox
14 30 0.044822929 ubox
14 32 0.011395318 ubox
14 39 0.008941467 ubox
14 40 0.013332303 ubox
14 45 0.013444020 ubox
14 48 0.011111729 ubox
14 62 0.026217969 ubox
14 72 0.021204610 ubox
14 75 0.008923203 ubox
15 24 0.995366538 ubox
15 35 0.004719438 ubox
15 43 0.016859410 ubox
15 47 0.008712655 ubox
15 71 0.020631849 ubox
15 74 0.008571704 ubox
16 23 0.995792957 ubox
16 25 0.003321806 ubox
16 29 0.003252240 ubox
16 30 0.027823248 ubox
16 34 0.004841955 ubox
16 38 0.043761341 ubox
16 42 0.018726911 ubox
16 60 0.027021964 ubox
16 69 0.015910462 ubox
17 22 0.995598165 ubox
17 29 0.036656272 ubox
17 32 0.005415816 ubox
17 33 0.004769965 ubox
17 37 0.044698497 ubox
17 41 0.018819109 ubox
17 59 0.027547545 ubox
17 68 0.016206530 ubox
17 69 0.004753535 ubox
17 79 0.004655125 ubox
18 26 0.008035378 ubox
18 27 0.010372397 ubox
18 28 0.036427183 ubox
18 31 0.005512377 ubox
18 36 0.043363994 ubox
18 58 0.027221309 ubox
18 67 0.014649057 ubox
18 70 0.006709289 ubox
18 78 0.005234646 ubox
19 24 0.003791987 ubox
19 35 0.041497797 ubox
19 66 0.013626444 ubox
19 77 0.005125351 ubox
20 76 0.004369003 ubox
21 55 0.007373302 ubox
22 26 0.004193285 ubox
22 27 0.007754216 ubox
22 28 0.007736564 ubox
22 31 0.027214225 ubox
22 36 0.024103674 ubox
22 67 0.026957313 ubox
22 77 0.006112996 ubox
22 78 0.009701355 ubox
23 35 0.025159211 ubox
23 55 0.008509649 ubox
23 66 0.027388093 ubox
23 76 0.006872721 ubox
23 77 0.009459881 ubox
24 29 0.005247999 ubox
24 30 0.005884380 ubox
24 34 0.028416830 ubox
24 52 0.004179621 ubox
24 54 0.008326914 ubox
24 56 0.006811866 ubox
24 65 0.028641702 ubox
24 75 0.007218066 ubox
25 55 0.007642344 ubox
25 74 0.006896753 ubox
26 32 0.006644939 ubox
26 33 0.033073783 ubox
26 54 0.007701944 ubox
26 63 0.003162742 ubox
26 64 0.032891721 ubox
27 32 0.053291770 ubox
27 33 0.040928784 ubox
27 37 0.004569682 ubox
27 50 0.017610433 ubox
27 62 0.003770108 ubox
27 63 0.240690063 ubox
27 69 0.004049130 ubox
27 79 0.003180422 ubox
28 32 0.045384195 ubox
28 33 0.016648047 ubox
28 37 0.076218129 ubox
28 50 0.238270548 ubox
28 59 0.011304519 ubox
28 62 0.241213177 ubox
28 63 0.003822870 ubox
28 68 0.004082024 ubox
28 79 0.008733624 ubox
29 36 0.076714727 ubox
29 46 0.041200424 ubox
29 47 0.246136609 ubox
29 49 0.251306695 ubox
29 58 0.011361068 ubox
29 67 0.004017146 ubox
29 70 0.006119322 ubox
29 71 0.163307188 ubox
29 73 0.007519036 ubox
29 78 0.008657555 ubox
30 35 0.052016708 ubox
30 36 0.003293076 ubox
30 44 0.003519785 ubox
30 46 0.279048583 ubox
30 47 0.063393950 ubox
30 49 0.031151093 ubox
30 58 0.009744249 ubox
30 66 0.003421111 ubox
30 70 0.184397561 ubox
30 77 0.005441596 ubox
31 37 0.015833024 ubox
31 50 0.022287478 ubox
31 57 0.009329630 ubox
31 59 0.239980455 ubox
31 68 0.005470470 ubox
31 69 0.184456412 ubox
31 79 0.007538968 ubox
32 36 0.015020121 ubox
32 44 0.057408434 ubox
32 46 0.365656889 ubox
32 47 0.019233239 ubox
32 49 0.023779818 ubox
32 58 0.237348286 ubox
32 67 0.004522794 ubox
32 71 0.003258386 ubox
32 78 0.007387824 ubox
33 43 0.030189454 ubox
33 44 0.938349625 ubox
33 46 0.014400967 ubox
33 67 0.184348412 ubox
33 70 0.003456723 ubox
34 43 0.940801307 ubox
34 66 0.184525116 ubox
35 42 0.941528407 ubox
35 51 0.005544878 ubox
35 64 0.003659597 ubox
35 65 0.184491065 ubox
35 69 0.003956801 ubox
36 41 0.941382380 ubox
36 50 0.005997870 ubox
36 63 0.006827388 ubox
36 64 0.184360193 ubox
36 68 0.004395739 ubox
37 44 0.022615397 ubox
37 46 0.005123388 ubox
37 49 0.006072102 ubox
37 67 0.004411501 ubox
38 43 0.020956652 ubox
38 47 0.006272616 ubox
38 66 0.004312046 ubox
39 47 0.004517908 ubox
40 47 0.046012959 ubox
41 46 0.047346894 ubox
41 47 0.004705783 ubox
41 49 0.004350030 ubox
41 58 0.010654935 ubox
41 67 0.003533801 ubox
42 47 0.004793543 ubox
42 66 0.003539040 ubox
43 51 0.008633924 ubox
43 60 0.180170840 ubox
43 61 0.012471405 ubox
43 65 0.003448853 ubox
44 50 0.009322958 ubox
44 59 0.185120112 ubox
44 64 0.003332979 ubox
45 55 0.011325447 ubox
46 50 0.005302642 ubox
46 54 0.011890676 ubox
46 57 0.313596993 ubox
46 62 0.005930955 ubox
46 79 0.009406362 ubox
47 52 0.004537400 ubox
47 53 0.011673589 ubox
47 56 0.314996581 ubox
47 61 0.005857649 ubox
47 79 0.004276437 ubox
48 55 0.315127757 ubox
49 54 0.315050411 ubox
49 59 0.006582005 ubox
49 79 0.860572085 ubox
50 58 0.006573978 ubox
50 76 0.003949332 ubox
50 77 0.042211469 ubox
50 78 0.907385017 ubox
51 74 0.003557850 ubox
51 76 0.071665472 ubox
51 77 0.905333648 ubox
52 74 0.015299047 ubox
52 76 0.877427514 ubox
52 77 0.013419731 ubox
53 74 0.932591175 ubox
53 76 0.008590086 ubox
54 73 0.948434702 ubox
54 74 0.009137556 ubox
55 72 0.948348663 ubox
56 71 0.948308438 ubox
57 70 0.948273207 ubox
58 62 0.005549934 ubox
58 63 0.032977802 ubox
58 64 0.003362966 ubox
58 68 0.451007070 ubox
58 69 0.834373116 ubox
58 79 0.008834926 ubox
59 66 0.011239815 ubox
59 67 0.637124126 ubox
59 78 0.009568392 ubox
60 66 0.609299997 ubox
60 77 0.009539060 ubox
61 66 0.433962124 ubox
61 76 0.009214097 ubox
62 66 0.015948690 ubox
62 67 0.084993030 ubox
62 71 0.003723146 ubox
62 74 0.004156974 ubox
63 67 0.008838472 ubox
63 70 0.003858263 ubox
63 73 0.004589923 ubox
63 74 0.007187113 ubox
63 78 0.008362050 ubox
64 73 0.007932295 ubox
64 77 0.008472281 ubox
65 76 0.008525225 ubox
66 75 0.008311152 ubox
68 73 0.012426817 ubox
68 74 0.004380918 ubox
68 78 0.004213686 ubox
69 73 0.007197655 ubox
69 74 0.004150789 ubox
69 77 0.004116349 ubox
69 78 0.011737411 ubox
70 79 0.007863424 ubox
72 77 0.003492716 ubox
73 79 0.011745717 ubox
8 32 0.9500000 lbox
9 31 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
49 79 0.9500000 lbox
50 78 0.9500000 lbox
51 77 0.9500000 lbox
52 76 0.9500000 lbox
53 74 0.9500000 lbox
54 73 0.9500000 lbox
55 72 0.9500000 lbox
56 71 0.9500000 lbox
57 70 0.9500000 lbox
58 69 0.9500000 lbox
showpage
end
%%EOF
