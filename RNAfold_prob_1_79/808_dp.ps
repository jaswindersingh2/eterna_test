%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (808)
} def

/sequence { (\
GGAAAAAUCAUAGCUACUAUAAGAUACAUCAUAGCGAAAAGACUAGAUAGUAUCUAUAGAGACUAGAAUAUAGAUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.008024487 ubox
1 9 0.055358001 ubox
1 11 0.005302750 ubox
1 14 0.004378112 ubox
1 15 0.005644452 ubox
1 69 0.004228836 ubox
1 71 0.011257673 ubox
1 75 0.025397145 ubox
1 76 0.012940503 ubox
1 77 0.024335657 ubox
1 78 0.454087846 ubox
2 8 0.040617373 ubox
2 9 0.117458297 ubox
2 14 0.005974889 ubox
2 69 0.005790338 ubox
2 71 0.015009530 ubox
2 75 0.016683040 ubox
2 76 0.037766989 ubox
2 77 0.451778104 ubox
2 78 0.503205366 ubox
3 8 0.107674350 ubox
3 69 0.009639024 ubox
3 71 0.028258542 ubox
3 75 0.039563127 ubox
3 76 0.446824835 ubox
3 77 0.498979839 ubox
4 8 0.005115556 ubox
4 11 0.004272093 ubox
4 69 0.028051127 ubox
4 71 0.054075454 ubox
4 75 0.413451806 ubox
4 76 0.475154438 ubox
4 77 0.041942101 ubox
5 11 0.004451566 ubox
5 69 0.040540950 ubox
5 71 0.160267640 ubox
5 75 0.428743435 ubox
5 76 0.049159049 ubox
5 77 0.255942193 ubox
6 11 0.004297477 ubox
6 69 0.188809106 ubox
6 71 0.156065588 ubox
6 75 0.050414912 ubox
6 76 0.311596936 ubox
6 77 0.012900352 ubox
7 69 0.451166657 ubox
7 71 0.192359594 ubox
7 75 0.350490206 ubox
7 76 0.012982321 ubox
7 77 0.004360426 ubox
8 65 0.005109243 ubox
8 66 0.009607386 ubox
8 67 0.534274496 ubox
8 68 0.459235784 ubox
8 70 0.174159179 ubox
8 72 0.120707245 ubox
8 73 0.021584090 ubox
8 74 0.373394250 ubox
9 66 0.569292881 ubox
9 73 0.373223867 ubox
9 79 0.004716715 ubox
10 20 0.015635734 ubox
10 64 0.005724058 ubox
10 69 0.071561860 ubox
10 71 0.308780240 ubox
10 75 0.003969314 ubox
11 19 0.016602305 ubox
11 62 0.003340692 ubox
11 65 0.923619188 ubox
11 66 0.016320582 ubox
11 67 0.015385623 ubox
11 68 0.048963552 ubox
11 70 0.292173527 ubox
11 72 0.036010511 ubox
11 74 0.003528187 ubox
12 18 0.016763908 ubox
12 64 0.943340609 ubox
12 69 0.275878366 ubox
12 71 0.026479838 ubox
13 17 0.016439342 ubox
13 63 0.947489163 ubox
13 64 0.008721856 ubox
13 69 0.008233438 ubox
13 71 0.003522717 ubox
14 61 0.940691348 ubox
14 66 0.282437427 ubox
14 73 0.005751618 ubox
15 60 0.937392292 ubox
15 61 0.076204935 ubox
15 62 0.044283832 ubox
15 65 0.282889963 ubox
15 66 0.005006662 ubox
15 72 0.005851950 ubox
16 64 0.279144486 ubox
16 71 0.005782430 ubox
17 59 0.995221044 ubox
17 61 0.047692934 ubox
17 66 0.004749454 ubox
18 58 0.997649171 ubox
18 60 0.045157169 ubox
18 62 0.006705911 ubox
18 65 0.004664934 ubox
19 57 0.997162130 ubox
19 64 0.004441460 ubox
20 56 0.991207360 ubox
20 58 0.034478700 ubox
20 59 0.004166378 ubox
21 55 0.698809093 ubox
21 57 0.035770351 ubox
22 55 0.709528858 ubox
23 53 0.005085257 ubox
23 54 0.999736900 ubox
24 53 0.999700829 ubox
25 52 0.999485778 ubox
26 51 0.999668484 ubox
27 50 0.999254068 ubox
28 48 0.973658126 ubox
29 46 0.004177089 ubox
29 47 0.983091305 ubox
29 49 0.021916742 ubox
30 46 0.981410665 ubox
31 44 0.009344659 ubox
31 48 0.005946748 ubox
32 42 0.003933756 ubox
32 45 0.986833167 ubox
32 47 0.004354570 ubox
33 44 0.993790720 ubox
34 43 0.994006405 ubox
34 44 0.004609583 ubox
35 41 0.851398277 ubox
36 43 0.010489402 ubox
59 78 0.042718001 ubox
60 76 0.005111498 ubox
60 77 0.045097319 ubox
61 75 0.005246299 ubox
61 76 0.045945103 ubox
61 78 0.011105780 ubox
62 75 0.046376543 ubox
62 77 0.011005187 ubox
63 73 0.087686163 ubox
63 79 0.003647217 ubox
64 70 0.005180300 ubox
64 72 0.089123947 ubox
65 69 0.005376201 ubox
65 71 0.088770541 ubox
65 77 0.005563707 ubox
66 71 0.008748398 ubox
66 75 0.003843792 ubox
66 76 0.011191826 ubox
66 77 0.078415251 ubox
66 78 0.252238002 ubox
67 71 0.009214288 ubox
67 75 0.011367754 ubox
67 76 0.087802010 ubox
67 77 0.251085250 ubox
68 75 0.093309076 ubox
68 76 0.245570072 ubox
68 77 0.020316838 ubox
69 73 0.008029432 ubox
69 74 0.091708354 ubox
69 79 0.003700179 ubox
70 75 0.016562130 ubox
70 76 0.017578707 ubox
70 77 0.020079350 ubox
71 79 0.005791140 ubox
72 76 0.005427783 ubox
72 77 0.009827508 ubox
73 77 0.006083942 ubox
73 78 0.068334694 ubox
75 79 0.004349350 ubox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 41 0.9500000 lbox
showpage
end
%%EOF
