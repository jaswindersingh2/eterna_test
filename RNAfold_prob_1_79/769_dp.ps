%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (769)
} def

/sequence { (\
GGAAAAUGGACUGGCAUCAUGCAUGGCCGUGCAGCUCCGUGUCUGACGUGCCAUCAUGAGCGCAGCCGAGGAGGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.024516349 ubox
1 11 0.027190780 ubox
1 12 0.042285528 ubox
1 15 0.003838877 ubox
1 67 0.032210510 ubox
1 75 0.076179810 ubox
1 76 0.065417979 ubox
1 77 0.004863025 ubox
1 78 0.091243792 ubox
2 7 0.010915395 ubox
2 11 0.044988430 ubox
2 15 0.003167340 ubox
2 61 0.004141041 ubox
2 66 0.032292928 ubox
2 75 0.075472016 ubox
2 76 0.004979532 ubox
2 77 0.086971433 ubox
2 78 0.103085018 ubox
3 7 0.014004105 ubox
3 12 0.007263022 ubox
3 76 0.080732086 ubox
3 77 0.100293108 ubox
4 12 0.004780984 ubox
4 76 0.084172128 ubox
4 77 0.006582067 ubox
5 12 0.008278782 ubox
5 76 0.007077183 ubox
5 77 0.007781726 ubox
6 12 0.005190547 ubox
6 17 0.015827771 ubox
6 57 0.008571926 ubox
6 76 0.008937469 ubox
6 77 0.003626888 ubox
7 13 0.003614255 ubox
7 16 0.023137311 ubox
7 56 0.008803147 ubox
7 64 0.003631351 ubox
7 68 0.294990178 ubox
7 69 0.063937480 ubox
7 70 0.019301992 ubox
7 71 0.009302770 ubox
7 72 0.024028284 ubox
7 73 0.024029288 ubox
7 74 0.005947122 ubox
7 79 0.021729374 ubox
8 12 0.003179931 ubox
8 15 0.025018933 ubox
8 55 0.008713632 ubox
8 63 0.005596568 ubox
8 66 0.012781413 ubox
8 67 0.942483721 ubox
8 76 0.004108292 ubox
8 78 0.034384267 ubox
9 15 0.003359680 ubox
9 54 0.007519093 ubox
9 55 0.004676147 ubox
9 63 0.010366149 ubox
9 66 0.947852922 ubox
9 67 0.074106624 ubox
9 75 0.004456758 ubox
9 77 0.031598355 ubox
9 78 0.030301232 ubox
10 54 0.004940713 ubox
10 76 0.024371825 ubox
10 77 0.028075502 ubox
11 60 0.003177753 ubox
11 62 0.013059482 ubox
11 65 0.963667983 ubox
11 70 0.005328822 ubox
11 79 0.005458993 ubox
12 53 0.009795215 ubox
12 62 0.009783614 ubox
12 64 0.967088782 ubox
12 68 0.004325961 ubox
12 69 0.004620826 ubox
12 79 0.005861542 ubox
13 52 0.010203158 ubox
13 61 0.012265021 ubox
13 63 0.968110643 ubox
13 67 0.007684658 ubox
13 78 0.010609997 ubox
14 51 0.010203786 ubox
14 61 0.968676380 ubox
14 63 0.116673279 ubox
14 66 0.007679541 ubox
15 50 0.010203045 ubox
15 60 0.968192586 ubox
15 62 0.129059007 ubox
15 65 0.007615710 ubox
16 49 0.009821767 ubox
17 46 0.008327029 ubox
17 48 0.005470175 ubox
17 58 0.006444254 ubox
17 59 0.995797805 ubox
17 60 0.008937911 ubox
18 45 0.010074793 ubox
18 58 0.999872349 ubox
19 44 0.010023114 ubox
19 57 0.999530652 ubox
20 56 0.999490936 ubox
21 42 0.009996198 ubox
21 55 0.999455244 ubox
22 41 0.010200066 ubox
23 40 0.010197616 ubox
23 54 0.993312108 ubox
24 39 0.010179446 ubox
24 53 0.999152957 ubox
25 38 0.010057548 ubox
25 52 0.999927935 ubox
26 37 0.009856597 ubox
26 51 0.999936906 ubox
27 50 0.999734277 ubox
28 34 0.005650186 ubox
28 45 0.004160812 ubox
28 48 0.998391109 ubox
28 50 0.013786613 ubox
29 35 0.006551898 ubox
29 44 0.004143913 ubox
29 47 0.998841449 ubox
29 49 0.018400520 ubox
30 34 0.006138186 ubox
30 45 0.009924404 ubox
30 46 0.995440430 ubox
30 48 0.028020631 ubox
31 40 0.013328401 ubox
31 42 0.103485139 ubox
31 43 0.023274636 ubox
31 44 0.007219604 ubox
31 47 0.030699010 ubox
32 39 0.013369997 ubox
32 41 0.106367078 ubox
32 45 0.981302462 ubox
33 40 0.103333223 ubox
33 42 0.006133997 ubox
33 44 0.982937566 ubox
34 38 0.011265421 ubox
34 40 0.027272311 ubox
34 42 0.187807407 ubox
34 43 0.974323789 ubox
35 39 0.036328743 ubox
35 41 0.903275079 ubox
36 41 0.091193325 ubox
37 41 0.084179563 ubox
60 78 0.003640008 ubox
61 79 0.043481836 ubox
62 75 0.008518354 ubox
62 77 0.016482955 ubox
62 78 0.153837782 ubox
63 74 0.008520416 ubox
63 79 0.010084908 ubox
64 76 0.234097841 ubox
64 77 0.010063183 ubox
65 75 0.260879809 ubox
66 71 0.009230681 ubox
66 74 0.265761298 ubox
66 79 0.008438544 ubox
67 73 0.265777376 ubox
67 74 0.004299005 ubox
67 79 0.169085891 ubox
68 75 0.034965075 ubox
68 76 0.006076254 ubox
68 77 0.302500653 ubox
68 78 0.788589260 ubox
69 76 0.353260507 ubox
69 77 0.782015387 ubox
70 75 0.373301015 ubox
70 76 0.770995939 ubox
70 77 0.013541984 ubox
70 78 0.108407162 ubox
71 75 0.754696131 ubox
71 76 0.015224436 ubox
71 77 0.104997283 ubox
71 78 0.154659696 ubox
72 76 0.089697870 ubox
72 77 0.144900957 ubox
73 77 0.003918906 ubox
73 78 0.039501890 ubox
74 78 0.016185072 ubox
75 79 0.005237034 ubox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 41 0.9500000 lbox
68 78 0.9500000 lbox
69 77 0.9500000 lbox
70 76 0.9500000 lbox
71 75 0.9500000 lbox
showpage
end
%%EOF
