%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1062)
} def

/sequence { (\
GGAAAGAAGGCAGUGGGUGUCCCAGAAACUGCGGACUGCUGACGCGUCAAUGACCGUCUCCCAGUGCCUGCACGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 71 0.017119608 ubox
1 73 0.092674047 ubox
1 75 0.156040003 ubox
1 76 0.338250933 ubox
1 77 0.024002849 ubox
1 78 0.553797478 ubox
2 71 0.017609352 ubox
2 73 0.096068551 ubox
2 75 0.390260870 ubox
2 76 0.025186641 ubox
2 77 0.550819233 ubox
2 78 0.454152307 ubox
3 69 0.014130044 ubox
3 76 0.536119999 ubox
3 77 0.449607896 ubox
4 69 0.004760921 ubox
4 76 0.414398417 ubox
4 77 0.083011776 ubox
5 69 0.007788615 ubox
5 76 0.106268346 ubox
5 77 0.005166425 ubox
6 68 0.003910664 ubox
6 69 0.006792853 ubox
6 71 0.457502432 ubox
6 73 0.477069569 ubox
6 75 0.119227495 ubox
6 76 0.003368115 ubox
6 77 0.010299038 ubox
6 78 0.067319543 ubox
7 69 0.036985511 ubox
7 76 0.011530264 ubox
7 77 0.067079348 ubox
8 69 0.963607336 ubox
8 76 0.038011648 ubox
8 77 0.003226420 ubox
9 68 0.999615208 ubox
9 69 0.006265753 ubox
9 75 0.021681736 ubox
9 76 0.003986543 ubox
10 32 0.004697730 ubox
10 67 0.999855717 ubox
10 68 0.004575776 ubox
10 71 0.010719589 ubox
10 75 0.004783410 ubox
11 31 0.004703855 ubox
11 66 0.999860575 ubox
11 70 0.010729191 ubox
11 74 0.005405350 ubox
12 30 0.004708421 ubox
12 65 0.997863812 ubox
12 69 0.010699347 ubox
13 29 0.004710158 ubox
13 68 0.010603173 ubox
13 71 0.010310733 ubox
14 24 0.005121163 ubox
14 28 0.003518149 ubox
14 63 0.997903504 ubox
14 70 0.010306948 ubox
15 23 0.006463667 ubox
15 61 0.011741923 ubox
15 62 0.999823763 ubox
15 69 0.010324273 ubox
16 22 0.006478939 ubox
16 39 0.004488569 ubox
16 40 0.026747001 ubox
16 60 0.016158299 ubox
16 61 0.999306647 ubox
16 62 0.004479299 ubox
16 68 0.010427023 ubox
17 21 0.006374553 ubox
17 37 0.016074324 ubox
17 39 0.127562454 ubox
17 40 0.005472616 ubox
17 59 0.013275371 ubox
17 60 0.982536628 ubox
17 61 0.005995391 ubox
17 67 0.010425342 ubox
18 38 0.136211620 ubox
18 66 0.010086038 ubox
19 36 0.996770412 ubox
19 37 0.021185886 ubox
19 39 0.012290481 ubox
19 58 0.007151107 ubox
19 59 0.008279217 ubox
20 34 0.003415183 ubox
20 35 0.999285711 ubox
20 38 0.009072099 ubox
21 33 0.005150276 ubox
21 34 0.999906059 ubox
21 56 0.003616398 ubox
22 33 0.999773954 ubox
22 34 0.005250982 ubox
23 31 0.998165624 ubox
23 33 0.006651466 ubox
23 52 0.003615935 ubox
24 30 0.995955633 ubox
24 51 0.003597336 ubox
25 29 0.974144100 ubox
25 30 0.019252545 ubox
25 32 0.014829514 ubox
26 30 0.004514699 ubox
28 65 0.004719917 ubox
29 64 0.004910794 ubox
30 63 0.004911943 ubox
31 39 0.004781908 ubox
31 45 0.004212981 ubox
31 62 0.004912100 ubox
32 38 0.004801300 ubox
32 44 0.004214758 ubox
33 43 0.004204598 ubox
33 61 0.004927127 ubox
33 68 0.004470599 ubox
34 60 0.004928205 ubox
34 67 0.004482542 ubox
35 59 0.004921016 ubox
35 65 0.006376988 ubox
36 64 0.006816007 ubox
37 46 0.008339806 ubox
37 63 0.007390545 ubox
38 45 0.020542870 ubox
38 58 0.007145093 ubox
38 59 0.025760909 ubox
38 60 0.027885810 ubox
38 61 0.006264900 ubox
38 62 0.007241492 ubox
38 65 0.005464352 ubox
39 44 0.020530988 ubox
39 64 0.005630729 ubox
40 63 0.005596492 ubox
41 48 0.003397100 ubox
41 57 0.003215676 ubox
41 58 0.997352015 ubox
41 59 0.007129845 ubox
41 60 0.005013136 ubox
41 62 0.003507047 ubox
42 57 0.999299609 ubox
42 59 0.005290819 ubox
43 56 0.999635392 ubox
44 54 0.005595302 ubox
44 55 0.999095567 ubox
44 57 0.010706356 ubox
45 52 0.017438185 ubox
45 56 0.011501195 ubox
46 51 0.011659928 ubox
46 54 0.999100221 ubox
46 55 0.009751872 ubox
47 52 0.008298452 ubox
47 53 0.998587893 ubox
48 52 0.990190735 ubox
52 58 0.003947411 ubox
53 57 0.003441366 ubox
70 75 0.031022207 ubox
70 76 0.004730701 ubox
70 77 0.005860721 ubox
70 78 0.017057391 ubox
71 79 0.012175417 ubox
72 76 0.006484914 ubox
72 77 0.009059274 ubox
73 79 0.073251450 ubox
74 78 0.072226166 ubox
75 79 0.007947010 ubox
8 69 0.9500000 lbox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
showpage
end
%%EOF
