%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1041)
} def

/sequence { (\
GGAAAAGACAAAGUCAAGAACAAAGUUCAAGCAAUAAAAUUGCAAGCACAAAGUGCAAGCCAAAGGCACAAAGAUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.088471838 ubox
1 15 0.005858684 ubox
1 21 0.011717298 ubox
1 28 0.004078892 ubox
1 61 0.035698838 ubox
1 67 0.003650019 ubox
1 69 0.062389074 ubox
1 75 0.003374801 ubox
1 76 0.006125207 ubox
1 77 0.018971121 ubox
1 78 0.514118276 ubox
2 9 0.036581391 ubox
2 14 0.004869192 ubox
2 15 0.011345532 ubox
2 27 0.003995993 ubox
2 28 0.005458020 ubox
2 60 0.035607117 ubox
2 67 0.003433760 ubox
2 69 0.032435064 ubox
2 75 0.005882714 ubox
2 76 0.028920184 ubox
2 77 0.510673854 ubox
2 78 0.718781595 ubox
3 14 0.010814908 ubox
3 26 0.003860078 ubox
3 27 0.005407464 ubox
3 75 0.029207028 ubox
3 76 0.502938724 ubox
3 77 0.717055230 ubox
4 26 0.005055766 ubox
4 75 0.437002649 ubox
4 76 0.696161117 ubox
4 77 0.047629498 ubox
5 14 0.006134272 ubox
5 75 0.605486297 ubox
5 76 0.059442972 ubox
5 77 0.019390803 ubox
6 14 0.010630965 ubox
6 75 0.060830559 ubox
6 76 0.021442097 ubox
6 77 0.013496497 ubox
7 14 0.009382328 ubox
7 15 0.859524696 ubox
7 27 0.024142604 ubox
7 28 0.013796235 ubox
7 69 0.012216853 ubox
7 75 0.008751367 ubox
7 76 0.013505237 ubox
7 77 0.009315141 ubox
7 78 0.115226337 ubox
8 14 0.859447095 ubox
8 26 0.026754211 ubox
8 27 0.011142025 ubox
8 75 0.012998130 ubox
8 76 0.009132948 ubox
8 77 0.105572102 ubox
9 13 0.851071943 ubox
9 18 0.007115037 ubox
9 25 0.027990186 ubox
9 73 0.045223197 ubox
9 79 0.162904707 ubox
10 14 0.004583435 ubox
10 75 0.008416451 ubox
10 76 0.014306174 ubox
10 77 0.028668612 ubox
11 75 0.010515031 ubox
11 76 0.028323084 ubox
11 77 0.372045982 ubox
12 75 0.021720810 ubox
12 76 0.420079313 ubox
12 77 0.011185430 ubox
13 21 0.027016224 ubox
13 28 0.003552985 ubox
13 32 0.006585717 ubox
13 67 0.038950813 ubox
13 69 0.040883382 ubox
13 75 0.436591568 ubox
13 76 0.009578547 ubox
13 78 0.008126706 ubox
14 20 0.026092180 ubox
14 29 0.004714500 ubox
14 30 0.008075014 ubox
14 31 0.005746567 ubox
14 66 0.038975319 ubox
14 68 0.038340591 ubox
14 71 0.003396730 ubox
14 72 0.004525162 ubox
14 74 0.439969095 ubox
15 31 0.004153283 ubox
15 65 0.038799890 ubox
15 73 0.439750029 ubox
15 79 0.004613123 ubox
16 27 0.017106279 ubox
16 75 0.004016558 ubox
16 76 0.007995882 ubox
16 77 0.008846688 ubox
17 26 0.019132839 ubox
17 27 0.005804325 ubox
17 75 0.007960834 ubox
17 76 0.009027882 ubox
17 77 0.005398128 ubox
18 26 0.005912257 ubox
18 27 0.015965097 ubox
18 28 0.987967159 ubox
18 69 0.006469422 ubox
18 76 0.004064181 ubox
18 77 0.003679701 ubox
18 78 0.020977374 ubox
19 26 0.016269055 ubox
19 27 0.988683264 ubox
19 75 0.003959869 ubox
19 76 0.003995190 ubox
19 77 0.020619839 ubox
20 26 0.986174498 ubox
20 27 0.006464180 ubox
20 75 0.003750232 ubox
20 76 0.017413921 ubox
21 25 0.976797427 ubox
21 73 0.006461542 ubox
21 79 0.007553272 ubox
22 26 0.003533849 ubox
22 27 0.004767438 ubox
22 77 0.003513774 ubox
23 76 0.003897502 ubox
23 77 0.016795068 ubox
24 75 0.003617948 ubox
24 76 0.018687715 ubox
24 77 0.006046577 ubox
25 32 0.004008849 ubox
25 47 0.012082884 ubox
25 49 0.011057963 ubox
25 69 0.010286535 ubox
25 75 0.019608268 ubox
25 76 0.006476608 ubox
26 31 0.003821862 ubox
26 45 0.005585144 ubox
26 46 0.012062507 ubox
26 48 0.010823260 ubox
26 68 0.009634245 ubox
26 74 0.018865803 ubox
27 44 0.006276727 ubox
27 45 0.012750850 ubox
27 73 0.017058069 ubox
27 74 0.015870232 ubox
28 42 0.003344038 ubox
28 46 0.009707278 ubox
28 73 0.017506383 ubox
29 41 0.004404579 ubox
29 76 0.004086070 ubox
29 77 0.004371504 ubox
30 35 0.003627375 ubox
30 40 0.004481209 ubox
30 75 0.004266397 ubox
30 76 0.004504119 ubox
31 43 0.997940774 ubox
31 47 0.003903844 ubox
31 56 0.003823013 ubox
31 67 0.010747700 ubox
32 42 0.998976094 ubox
32 46 0.003897607 ubox
32 55 0.003826209 ubox
32 66 0.010752719 ubox
33 40 0.014923729 ubox
33 41 0.995462943 ubox
33 54 0.003646951 ubox
34 40 0.967395019 ubox
34 41 0.031103816 ubox
35 39 0.858172390 ubox
36 40 0.008269853 ubox
36 41 0.004366499 ubox
40 51 0.003329540 ubox
40 58 0.019721496 ubox
40 63 0.004475301 ubox
41 50 0.003700715 ubox
41 57 0.022146001 ubox
41 62 0.005078508 ubox
41 70 0.003626032 ubox
42 49 0.003741432 ubox
42 56 0.022522279 ubox
42 60 0.010370717 ubox
42 61 0.003800030 ubox
42 69 0.003692195 ubox
43 55 0.022502413 ubox
43 59 0.011039478 ubox
44 54 0.019138446 ubox
45 54 0.004123539 ubox
46 54 0.014120744 ubox
46 56 0.995669256 ubox
46 67 0.005790889 ubox
47 53 0.016018485 ubox
47 55 0.996705709 ubox
47 66 0.005793149 ubox
47 73 0.003213675 ubox
48 54 0.994566461 ubox
49 53 0.984799067 ubox
49 55 0.006446862 ubox
49 73 0.009153254 ubox
50 54 0.005428321 ubox
53 60 0.005546327 ubox
53 69 0.071697447 ubox
54 59 0.005471612 ubox
54 68 0.071789822 ubox
54 70 0.007499761 ubox
55 67 0.071679418 ubox
55 69 0.008525580 ubox
56 65 0.007352861 ubox
56 66 0.071197627 ubox
58 75 0.003749699 ubox
59 67 0.993391733 ubox
59 69 0.008194166 ubox
60 65 0.012222317 ubox
60 66 0.994420130 ubox
61 65 0.987199485 ubox
61 66 0.010400991 ubox
61 73 0.005023499 ubox
63 76 0.003253543 ubox
63 77 0.003182425 ubox
64 75 0.003363687 ubox
64 76 0.003577479 ubox
65 69 0.004653531 ubox
65 78 0.003307924 ubox
67 73 0.012960818 ubox
68 75 0.014902280 ubox
68 76 0.004434618 ubox
68 77 0.003197743 ubox
69 73 0.055958301 ubox
69 79 0.004281444 ubox
70 75 0.014514823 ubox
70 76 0.011059288 ubox
70 77 0.009251275 ubox
71 75 0.012817608 ubox
71 76 0.011642510 ubox
71 77 0.006082812 ubox
72 76 0.006398193 ubox
72 77 0.004132655 ubox
73 78 0.016402635 ubox
2 78 0.9500000 lbox
3 77 0.9500000 lbox
4 76 0.9500000 lbox
5 75 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
showpage
end
%%EOF
