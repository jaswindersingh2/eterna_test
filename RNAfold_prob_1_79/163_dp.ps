%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (163)
} def

/sequence { (\
GGAAAAAAGCAGAUCAGGUCCUGGUAAAGACGGAAACGAUCGACGAGAGAGCAAGAUCAAGCAAAAAAGAUGUUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.173385066 ubox
1 15 0.003593370 ubox
1 21 0.015820444 ubox
1 31 0.005274649 ubox
1 37 0.005868582 ubox
1 41 0.003450338 ubox
1 44 0.016180822 ubox
1 52 0.010311312 ubox
1 62 0.006188657 ubox
1 71 0.009998389 ubox
1 75 0.030176531 ubox
1 76 0.069981970 ubox
1 77 0.003930483 ubox
1 78 0.079778494 ubox
2 10 0.043784387 ubox
2 15 0.007045794 ubox
2 20 0.015902336 ubox
2 31 0.003630975 ubox
2 41 0.006310056 ubox
2 44 0.007362478 ubox
2 52 0.004607791 ubox
2 62 0.004435036 ubox
2 74 0.029365023 ubox
2 75 0.080816096 ubox
2 77 0.070938443 ubox
2 78 0.141926360 ubox
3 14 0.006720696 ubox
3 19 0.015195621 ubox
3 40 0.005882792 ubox
3 71 0.003510568 ubox
3 73 0.028375046 ubox
3 74 0.079666806 ubox
3 76 0.064843383 ubox
3 77 0.138082312 ubox
4 71 0.003832910 ubox
4 73 0.073758000 ubox
4 74 0.011863192 ubox
4 76 0.124910315 ubox
4 77 0.009992709 ubox
5 71 0.006963214 ubox
5 73 0.012367966 ubox
5 74 0.030241444 ubox
5 76 0.011371270 ubox
5 77 0.021661140 ubox
6 71 0.013373046 ubox
6 73 0.029409934 ubox
6 74 0.027512174 ubox
6 76 0.024673293 ubox
6 77 0.009975929 ubox
7 25 0.003562257 ubox
7 71 0.008811673 ubox
7 73 0.023042387 ubox
7 74 0.014865614 ubox
7 76 0.010921427 ubox
7 77 0.019336985 ubox
8 14 0.006931046 ubox
8 19 0.003323209 ubox
8 25 0.051017781 ubox
8 71 0.017281679 ubox
8 73 0.014157398 ubox
8 74 0.108779701 ubox
8 76 0.021734228 ubox
8 77 0.003304167 ubox
9 15 0.003588691 ubox
9 19 0.004396181 ubox
9 25 0.009127302 ubox
9 31 0.003479986 ubox
9 41 0.004551644 ubox
9 44 0.352002356 ubox
9 52 0.007935926 ubox
9 62 0.618949668 ubox
9 71 0.003350936 ubox
9 73 0.117932941 ubox
9 75 0.021488869 ubox
9 78 0.008757829 ubox
10 17 0.005085040 ubox
10 18 0.004799045 ubox
10 23 0.062792941 ubox
10 24 0.007288514 ubox
10 29 0.006336977 ubox
10 38 0.003376458 ubox
10 42 0.174497825 ubox
10 45 0.027875526 ubox
10 51 0.007928953 ubox
10 61 0.618862126 ubox
10 69 0.008060353 ubox
10 72 0.118918376 ubox
10 79 0.006880033 ubox
11 22 0.063101249 ubox
11 71 0.116773968 ubox
11 73 0.009247857 ubox
11 74 0.003929994 ubox
11 76 0.007671204 ubox
12 20 0.017131425 ubox
12 21 0.061539077 ubox
12 37 0.004461955 ubox
12 41 0.696729652 ubox
12 44 0.009238553 ubox
12 57 0.003561824 ubox
12 58 0.706263974 ubox
12 75 0.007778114 ubox
12 78 0.004304304 ubox
13 19 0.021942793 ubox
13 25 0.061368670 ubox
13 40 0.697313515 ubox
13 57 0.707370866 ubox
13 71 0.009842317 ubox
13 74 0.007195782 ubox
13 77 0.003223396 ubox
14 18 0.020340434 ubox
14 24 0.062727941 ubox
14 34 0.013149308 ubox
14 39 0.697214183 ubox
14 43 0.025240545 ubox
14 46 0.005175331 ubox
14 48 0.007825119 ubox
14 55 0.006478750 ubox
14 56 0.707384811 ubox
14 68 0.003479871 ubox
14 70 0.010631785 ubox
15 23 0.064096893 ubox
15 33 0.014076461 ubox
15 38 0.695708816 ubox
15 42 0.027225733 ubox
15 45 0.005477460 ubox
15 47 0.008236108 ubox
15 55 0.706423925 ubox
15 69 0.010663673 ubox
15 72 0.005933893 ubox
16 22 0.063957523 ubox
16 71 0.005187818 ubox
17 21 0.062558013 ubox
17 37 0.261135647 ubox
17 41 0.041012527 ubox
17 52 0.577762335 ubox
17 58 0.003761515 ubox
18 31 0.075510310 ubox
18 37 0.071286499 ubox
18 40 0.041186584 ubox
18 44 0.011185589 ubox
18 52 0.372180832 ubox
18 57 0.003784235 ubox
19 30 0.075566564 ubox
19 33 0.011638541 ubox
19 34 0.660467041 ubox
19 35 0.059147928 ubox
19 36 0.066537433 ubox
19 39 0.041201943 ubox
19 43 0.011214171 ubox
19 48 0.007954505 ubox
19 49 0.008967003 ubox
19 50 0.661747206 ubox
19 51 0.245634870 ubox
19 56 0.003783502 ubox
20 29 0.072818248 ubox
20 32 0.011876518 ubox
20 33 0.661339101 ubox
20 38 0.041139446 ubox
20 42 0.011137269 ubox
20 47 0.007588405 ubox
20 49 0.684805205 ubox
20 51 0.021036921 ubox
20 55 0.003768000 ubox
21 29 0.032394470 ubox
21 32 0.655838792 ubox
21 33 0.209526544 ubox
21 47 0.700109884 ubox
21 49 0.103731820 ubox
22 26 0.005425020 ubox
22 27 0.044641201 ubox
22 28 0.054371920 ubox
22 29 0.042412812 ubox
22 30 0.154767574 ubox
22 32 0.222823657 ubox
22 33 0.031072900 ubox
22 36 0.004053941 ubox
22 39 0.003335416 ubox
22 42 0.003850664 ubox
22 45 0.012993951 ubox
22 46 0.698056112 ubox
22 47 0.009920488 ubox
22 48 0.102806356 ubox
23 31 0.498390214 ubox
23 37 0.003479329 ubox
23 41 0.006783233 ubox
23 44 0.023430859 ubox
24 31 0.248731667 ubox
24 37 0.005561245 ubox
24 40 0.006872747 ubox
24 44 0.698666893 ubox
25 29 0.031018803 ubox
25 30 0.241875848 ubox
25 36 0.005419330 ubox
25 39 0.006845282 ubox
25 42 0.020048162 ubox
25 43 0.674619658 ubox
25 45 0.013066584 ubox
25 46 0.011290620 ubox
26 40 0.004966303 ubox
27 40 0.035256927 ubox
28 40 0.225623710 ubox
29 37 0.016138640 ubox
29 40 0.041548678 ubox
29 41 0.591824622 ubox
29 44 0.008615095 ubox
30 40 0.591268196 ubox
31 38 0.706795247 ubox
31 42 0.060122985 ubox
31 45 0.005663067 ubox
31 79 0.003942729 ubox
32 37 0.707196127 ubox
32 41 0.060127165 ubox
32 44 0.005863077 ubox
32 78 0.004197015 ubox
33 37 0.041965310 ubox
33 40 0.040639177 ubox
33 41 0.011407001 ubox
33 77 0.004034900 ubox
34 40 0.011857889 ubox
34 76 0.003892554 ubox
35 74 0.003594839 ubox
36 73 0.003946327 ubox
37 42 0.003729742 ubox
37 45 0.005376991 ubox
37 51 0.003557245 ubox
37 72 0.004140174 ubox
38 44 0.005493082 ubox
38 58 0.010713293 ubox
38 78 0.003165200 ubox
39 57 0.010744106 ubox
39 71 0.003448684 ubox
40 48 0.006080667 ubox
40 56 0.010748055 ubox
40 70 0.004132690 ubox
41 47 0.006644139 ubox
41 49 0.003218472 ubox
41 55 0.010745344 ubox
41 69 0.004136214 ubox
41 79 0.007784225 ubox
42 52 0.003772686 ubox
42 62 0.003490995 ubox
42 78 0.035741879 ubox
43 77 0.030494297 ubox
44 49 0.006080052 ubox
44 51 0.008347279 ubox
44 61 0.004765975 ubox
44 79 0.542853858 ubox
45 52 0.004223154 ubox
45 58 0.004401762 ubox
45 62 0.003380711 ubox
45 75 0.004237912 ubox
45 77 0.014593581 ubox
45 78 0.611915891 ubox
46 57 0.004354531 ubox
46 74 0.004084002 ubox
46 76 0.018219705 ubox
46 77 0.540521913 ubox
47 52 0.003260929 ubox
47 58 0.011095799 ubox
47 75 0.020355236 ubox
47 76 0.330794432 ubox
47 77 0.407986323 ubox
47 78 0.127692585 ubox
48 57 0.011074625 ubox
48 74 0.019118091 ubox
48 76 0.605417262 ubox
48 77 0.092301171 ubox
49 58 0.012703351 ubox
49 73 0.009621158 ubox
49 74 0.004714845 ubox
49 75 0.700248940 ubox
49 76 0.021940577 ubox
49 77 0.037571579 ubox
49 78 0.048750537 ubox
50 57 0.012550334 ubox
50 71 0.003389835 ubox
50 73 0.004486394 ubox
50 74 0.699920537 ubox
50 76 0.048539702 ubox
50 77 0.047697779 ubox
51 62 0.028249033 ubox
51 73 0.699315837 ubox
51 75 0.052960338 ubox
51 76 0.043951078 ubox
51 78 0.011628174 ubox
52 61 0.028304321 ubox
52 69 0.003467071 ubox
52 72 0.699512079 ubox
52 79 0.003474350 ubox
53 71 0.605941268 ubox
53 73 0.003562197 ubox
53 74 0.071705818 ubox
53 77 0.026175910 ubox
54 71 0.056728305 ubox
54 73 0.078326439 ubox
54 76 0.029485547 ubox
55 62 0.028217622 ubox
55 71 0.023394323 ubox
55 75 0.029988151 ubox
55 78 0.009893089 ubox
56 71 0.292085307 ubox
56 74 0.029037969 ubox
56 77 0.009771237 ubox
57 61 0.003759650 ubox
57 63 0.007008213 ubox
57 64 0.017064766 ubox
57 65 0.018491817 ubox
57 66 0.052728012 ubox
57 67 0.044823271 ubox
57 68 0.066214397 ubox
57 69 0.029478697 ubox
57 70 0.516976810 ubox
58 69 0.518897854 ubox
58 72 0.024303989 ubox
59 71 0.022894227 ubox
59 74 0.010636663 ubox
59 76 0.012708224 ubox
59 77 0.031697866 ubox
60 71 0.010869219 ubox
60 73 0.009235614 ubox
60 74 0.151414950 ubox
60 76 0.035038826 ubox
60 77 0.004356202 ubox
61 71 0.006071252 ubox
61 73 0.179634864 ubox
61 74 0.004556631 ubox
61 75 0.034465994 ubox
61 76 0.003464296 ubox
61 78 0.012108461 ubox
62 69 0.055653971 ubox
62 72 0.182624093 ubox
62 79 0.005957602 ubox
63 71 0.172161238 ubox
63 73 0.007999425 ubox
63 74 0.029155938 ubox
63 76 0.005726767 ubox
63 77 0.012407359 ubox
64 71 0.020241896 ubox
64 73 0.029474206 ubox
64 74 0.012994489 ubox
64 76 0.012201666 ubox
64 77 0.018136274 ubox
65 71 0.014104330 ubox
65 73 0.013397531 ubox
65 74 0.021740613 ubox
65 76 0.017860779 ubox
65 77 0.015428696 ubox
66 71 0.014823371 ubox
66 73 0.021372968 ubox
66 74 0.017596955 ubox
66 76 0.013386112 ubox
66 77 0.030372800 ubox
67 71 0.008442567 ubox
67 73 0.017707475 ubox
67 74 0.035314733 ubox
67 76 0.027509398 ubox
67 77 0.370817483 ubox
68 73 0.036868619 ubox
68 74 0.012375823 ubox
68 76 0.413478620 ubox
68 77 0.018873567 ubox
69 73 0.009726028 ubox
69 74 0.009764946 ubox
69 75 0.419885944 ubox
69 76 0.017484108 ubox
69 77 0.018241400 ubox
69 78 0.300163092 ubox
70 74 0.365338561 ubox
70 76 0.019145146 ubox
70 77 0.296402241 ubox
71 79 0.039130399 ubox
72 76 0.006823147 ubox
72 77 0.010093697 ubox
72 78 0.063239907 ubox
73 79 0.003429517 ubox
74 79 0.003803973 ubox
75 79 0.006044643 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
showpage
end
%%EOF
