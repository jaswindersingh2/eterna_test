%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (121)
} def

/sequence { (\
GGAAACUAGCGCGCCAGAGCCUGCGAAAGCCCGGAAGGAGCACGGAGAGCACGAGGCGGAGCAACAAUGGAAUAAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.202896861 ubox
1 7 0.077181362 ubox
1 10 0.041539166 ubox
1 12 0.003371339 ubox
1 62 0.011142856 ubox
1 65 0.040684080 ubox
1 68 0.019884603 ubox
1 73 0.010356372 ubox
1 76 0.005737088 ubox
1 77 0.003225390 ubox
1 78 0.082801172 ubox
2 6 0.080090795 ubox
2 7 0.024343623 ubox
2 10 0.012451209 ubox
2 62 0.008815013 ubox
2 65 0.027086479 ubox
2 68 0.016015918 ubox
2 73 0.008621666 ubox
2 76 0.004306984 ubox
2 77 0.081204262 ubox
2 78 0.094178448 ubox
3 7 0.012825780 ubox
3 68 0.035598887 ubox
3 73 0.020711027 ubox
3 76 0.077407896 ubox
3 77 0.092971650 ubox
4 68 0.022393671 ubox
4 73 0.015377668 ubox
4 76 0.083738385 ubox
4 77 0.009668746 ubox
5 68 0.018600221 ubox
5 73 0.017843869 ubox
5 76 0.011838595 ubox
6 11 0.012935896 ubox
6 59 0.005823792 ubox
6 61 0.047653289 ubox
6 69 0.036917857 ubox
6 70 0.186667811 ubox
6 79 0.013247624 ubox
7 59 0.003228500 ubox
7 60 0.044273289 ubox
7 61 0.012639252 ubox
7 63 0.106964333 ubox
7 64 0.127189263 ubox
7 66 0.037673647 ubox
7 67 0.011277461 ubox
7 69 0.187700691 ubox
7 70 0.003576109 ubox
7 71 0.004637574 ubox
7 72 0.006512646 ubox
7 74 0.029824197 ubox
7 75 0.004309689 ubox
8 68 0.185820488 ubox
8 73 0.030379942 ubox
9 62 0.977920991 ubox
9 65 0.013215716 ubox
10 58 0.036766102 ubox
10 59 0.101225302 ubox
10 61 0.978268407 ubox
10 69 0.013628876 ubox
10 70 0.006369712 ubox
10 79 0.004496064 ubox
11 57 0.037193163 ubox
11 62 0.038089148 ubox
11 65 0.014466720 ubox
11 68 0.013045076 ubox
11 78 0.004346106 ubox
12 56 0.037143135 ubox
12 58 0.984089795 ubox
12 59 0.127708652 ubox
12 61 0.035720237 ubox
13 57 0.998978063 ubox
13 62 0.005731024 ubox
14 53 0.003385299 ubox
14 55 0.022142155 ubox
14 56 0.999038651 ubox
14 59 0.019676524 ubox
14 61 0.005713911 ubox
14 70 0.003742200 ubox
15 53 0.022376020 ubox
15 55 0.997740756 ubox
15 58 0.019691359 ubox
15 69 0.003755207 ubox
16 68 0.003710147 ubox
17 50 0.004001761 ubox
17 52 0.869566841 ubox
19 50 0.998101339 ubox
19 52 0.010826368 ubox
19 57 0.020670495 ubox
20 47 0.003420340 ubox
20 49 0.999252785 ubox
20 56 0.020692936 ubox
21 45 0.003762018 ubox
21 47 0.999097745 ubox
21 49 0.005505932 ubox
21 55 0.020689184 ubox
21 59 0.003195552 ubox
22 44 0.003707693 ubox
22 46 0.996134738 ubox
22 47 0.008445228 ubox
22 48 0.006571661 ubox
22 51 0.006422434 ubox
22 54 0.020195929 ubox
22 58 0.003194412 ubox
23 30 0.009527928 ubox
23 43 0.003732625 ubox
23 50 0.007551357 ubox
23 52 0.003200009 ubox
23 57 0.003200548 ubox
24 29 0.009558965 ubox
24 44 0.998866034 ubox
24 45 0.025933956 ubox
24 47 0.003350181 ubox
24 49 0.007544608 ubox
24 53 0.018817340 ubox
24 56 0.003189164 ubox
25 43 0.996776332 ubox
25 50 0.003178363 ubox
25 52 0.018800415 ubox
29 41 0.996045399 ubox
29 50 0.012724927 ubox
30 37 0.003428776 ubox
30 38 0.059073347 ubox
30 40 0.996390115 ubox
30 47 0.013828296 ubox
30 49 0.012701032 ubox
31 37 0.058524327 ubox
31 38 0.994416054 ubox
31 40 0.003879362 ubox
31 45 0.022102939 ubox
32 37 0.994188409 ubox
32 38 0.080416847 ubox
32 44 0.022150269 ubox
33 43 0.022109718 ubox
34 41 0.010961847 ubox
43 53 0.003938085 ubox
44 52 0.004014720 ubox
58 65 0.008282167 ubox
58 78 0.006445306 ubox
59 65 0.012290165 ubox
59 77 0.007679482 ubox
59 78 0.027669221 ubox
60 68 0.006343627 ubox
60 73 0.003614706 ubox
60 76 0.007898091 ubox
60 77 0.027225908 ubox
61 65 0.008058491 ubox
61 76 0.022106278 ubox
61 78 0.004548996 ubox
62 69 0.046579532 ubox
62 70 0.011138808 ubox
62 79 0.003848966 ubox
63 68 0.043753523 ubox
63 73 0.008015136 ubox
63 76 0.004847477 ubox
63 77 0.011654800 ubox
64 68 0.013117945 ubox
64 73 0.015730798 ubox
64 76 0.011571931 ubox
64 77 0.006335988 ubox
65 69 0.040885224 ubox
65 70 0.063641455 ubox
65 79 0.062931790 ubox
66 73 0.016178185 ubox
66 76 0.007917663 ubox
66 77 0.177191976 ubox
67 73 0.027552419 ubox
67 76 0.198430109 ubox
67 77 0.014592636 ubox
68 72 0.025479167 ubox
68 74 0.023447742 ubox
68 75 0.200428989 ubox
68 79 0.285957191 ubox
69 73 0.021635401 ubox
69 76 0.020899382 ubox
69 77 0.012370714 ubox
69 78 0.463572439 ubox
70 76 0.012230171 ubox
70 77 0.448610690 ubox
70 78 0.424358335 ubox
71 76 0.404662165 ubox
71 77 0.418999053 ubox
72 76 0.319619977 ubox
72 77 0.034629310 ubox
73 79 0.007833135 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
showpage
end
%%EOF
