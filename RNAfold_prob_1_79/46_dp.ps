%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (46)
} def

/sequence { (\
GGAAAAAGAGUCGGAUCAAAAGAUCCCCAAGCGUACAAAAGUACAGUGGAAAACCACGCAAGGGACUCUAACAGAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.011156505 ubox
1 69 0.004213893 ubox
1 72 0.130261758 ubox
1 76 0.023483001 ubox
1 77 0.012019221 ubox
1 78 0.260139612 ubox
2 11 0.010746507 ubox
2 12 0.013945996 ubox
2 68 0.003712281 ubox
2 69 0.004548995 ubox
2 72 0.079281925 ubox
2 76 0.016475351 ubox
2 77 0.258456221 ubox
2 78 0.247428371 ubox
3 11 0.013515412 ubox
3 69 0.007068375 ubox
3 76 0.248094156 ubox
3 77 0.246807856 ubox
4 69 0.021087768 ubox
4 76 0.228379829 ubox
4 77 0.011615577 ubox
5 69 0.013894008 ubox
5 76 0.013887747 ubox
5 77 0.018775304 ubox
6 69 0.043164084 ubox
6 76 0.022548522 ubox
6 77 0.008565802 ubox
7 69 0.952326925 ubox
7 76 0.004911074 ubox
8 68 0.988400961 ubox
8 69 0.003516304 ubox
8 72 0.004248394 ubox
8 78 0.074914942 ubox
9 67 0.988476821 ubox
9 77 0.074976261 ubox
10 66 0.988632351 ubox
10 76 0.074974777 ubox
11 64 0.012350392 ubox
11 65 0.988209989 ubox
11 75 0.075022555 ubox
12 62 0.004319269 ubox
12 63 0.023070874 ubox
12 64 0.986174498 ubox
12 74 0.074905394 ubox
12 79 0.117140300 ubox
13 25 0.004962808 ubox
13 26 0.986875416 ubox
13 27 0.027990797 ubox
13 28 0.008088386 ubox
13 72 0.015260799 ubox
13 78 0.129371137 ubox
14 25 0.990747082 ubox
14 26 0.020131838 ubox
14 27 0.006811014 ubox
14 72 0.013932375 ubox
14 77 0.129402312 ubox
15 24 0.990746210 ubox
15 76 0.129469019 ubox
16 23 0.990553645 ubox
16 70 0.010062037 ubox
16 71 0.005155419 ubox
16 75 0.129490468 ubox
17 22 0.989115337 ubox
17 74 0.129261265 ubox
19 69 0.005446614 ubox
20 69 0.005148230 ubox
21 67 0.018203902 ubox
21 69 0.127706748 ubox
22 66 0.018984446 ubox
22 68 0.131789715 ubox
23 67 0.131043980 ubox
24 65 0.094873256 ubox
25 64 0.094658616 ubox
26 49 0.003188696 ubox
26 63 0.095700673 ubox
26 64 0.109140502 ubox
27 31 0.018013890 ubox
27 33 0.003280651 ubox
27 48 0.004645023 ubox
27 49 0.160837070 ubox
27 58 0.003785183 ubox
27 62 0.096779882 ubox
27 63 0.881494636 ubox
27 64 0.028927540 ubox
28 33 0.004949857 ubox
28 48 0.161100986 ubox
28 49 0.015032934 ubox
28 58 0.006358098 ubox
28 62 0.883076856 ubox
28 63 0.041696193 ubox
29 47 0.135178755 ubox
30 47 0.053604728 ubox
31 36 0.003348004 ubox
31 42 0.030268158 ubox
31 44 0.006008920 ubox
31 47 0.062099875 ubox
31 59 0.890248604 ubox
32 41 0.031043615 ubox
32 46 0.077286413 ubox
32 58 0.889834003 ubox
32 62 0.008713079 ubox
32 63 0.010165252 ubox
33 44 0.996260296 ubox
33 57 0.040943367 ubox
34 43 0.997870562 ubox
34 56 0.031544084 ubox
35 42 0.997957080 ubox
35 47 0.008399349 ubox
36 41 0.996244771 ubox
36 46 0.008668039 ubox
40 47 0.003311086 ubox
41 59 0.006707200 ubox
42 48 0.007753886 ubox
42 49 0.003987181 ubox
42 58 0.006640795 ubox
43 47 0.006579712 ubox
44 58 0.010478088 ubox
46 54 0.014039077 ubox
46 55 0.006330970 ubox
46 57 0.979646437 ubox
46 59 0.077659529 ubox
46 72 0.008680984 ubox
47 53 0.014145526 ubox
47 56 0.981553894 ubox
47 58 0.077500368 ubox
47 70 0.010117236 ubox
47 71 0.006391903 ubox
48 54 0.011551217 ubox
48 55 0.982663074 ubox
48 57 0.077573847 ubox
48 69 0.012579086 ubox
49 54 0.976587555 ubox
49 55 0.019794611 ubox
49 68 0.012876578 ubox
50 67 0.012622000 ubox
54 62 0.004463737 ubox
54 63 0.158638766 ubox
54 64 0.009511703 ubox
55 62 0.158811459 ubox
55 63 0.015608091 ubox
57 62 0.027139806 ubox
57 63 0.023221119 ubox
58 66 0.003358897 ubox
58 72 0.006565002 ubox
59 63 0.031230179 ubox
59 64 0.005667027 ubox
61 67 0.003284602 ubox
61 69 0.015158467 ubox
62 66 0.003406499 ubox
62 68 0.015638708 ubox
62 69 0.011612655 ubox
62 72 0.005958236 ubox
63 67 0.010138462 ubox
63 68 0.012014365 ubox
63 69 0.004575093 ubox
63 72 0.010691670 ubox
64 68 0.005158354 ubox
64 72 0.005280126 ubox
64 78 0.007652589 ubox
65 77 0.007544667 ubox
67 75 0.009106037 ubox
68 74 0.010032577 ubox
69 73 0.009747888 ubox
69 74 0.006290903 ubox
69 75 0.004930333 ubox
70 76 0.011595431 ubox
70 77 0.027621294 ubox
71 76 0.025112895 ubox
71 77 0.012323660 ubox
72 79 0.057647414 ubox
73 77 0.008798752 ubox
74 78 0.036139090 ubox
7 69 0.9500000 lbox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
