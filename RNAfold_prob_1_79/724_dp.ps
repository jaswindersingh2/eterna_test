%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (724)
} def

/sequence { (\
GGAAAGACGAUGCAAAGGAUGGUCAAGUAGGAGGGAAAACGUCGUACAGUAGUCGUGAAAAGGAGUACUCGUGAAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.012164620 ubox
1 13 0.003976183 ubox
1 24 0.011453879 ubox
1 28 0.003604622 ubox
1 69 0.003529684 ubox
1 70 0.102888158 ubox
1 72 0.014175489 ubox
1 76 0.005944549 ubox
1 77 0.009777824 ubox
1 78 0.381809185 ubox
2 23 0.010647372 ubox
2 24 0.010962728 ubox
2 28 0.007544062 ubox
2 69 0.048473988 ubox
2 70 0.125124973 ubox
2 72 0.010911068 ubox
2 76 0.010168906 ubox
2 77 0.371143037 ubox
2 78 0.533072655 ubox
3 23 0.010274490 ubox
3 69 0.092913006 ubox
3 72 0.015300684 ubox
3 76 0.344959353 ubox
3 77 0.527018977 ubox
4 28 0.003339672 ubox
4 69 0.006721568 ubox
4 72 0.018602195 ubox
4 76 0.458678172 ubox
4 77 0.034345360 ubox
5 20 0.013354237 ubox
5 69 0.005362289 ubox
5 72 0.027250930 ubox
5 76 0.038422400 ubox
5 77 0.012252723 ubox
6 13 0.003574151 ubox
6 24 0.987560990 ubox
6 70 0.006371064 ubox
6 72 0.006071407 ubox
6 78 0.008613635 ubox
7 23 0.988694086 ubox
7 45 0.005349926 ubox
7 72 0.138580830 ubox
7 77 0.007265950 ubox
8 17 0.016423160 ubox
8 18 0.003465176 ubox
8 21 0.007173644 ubox
8 22 0.988700446 ubox
8 44 0.005980277 ubox
8 71 0.139835040 ubox
8 73 0.004641717 ubox
8 79 0.015599079 ubox
9 20 0.006733206 ubox
9 24 0.037111687 ubox
9 43 0.006004156 ubox
9 70 0.136792817 ubox
9 77 0.003302304 ubox
9 78 0.016443621 ubox
10 20 0.978999797 ubox
10 23 0.038078552 ubox
10 42 0.006001541 ubox
10 69 0.092032845 ubox
10 72 0.004725437 ubox
10 76 0.004988456 ubox
10 77 0.015492616 ubox
11 16 0.018337727 ubox
11 17 0.014746632 ubox
11 18 0.038084755 ubox
11 19 0.978786317 ubox
11 21 0.003942313 ubox
11 22 0.036452431 ubox
11 25 0.038117533 ubox
11 26 0.004703857 ubox
11 41 0.005987156 ubox
11 67 0.012368375 ubox
11 71 0.004784516 ubox
11 73 0.004623216 ubox
11 75 0.005276979 ubox
12 20 0.005855764 ubox
12 23 0.051887222 ubox
12 24 0.041610483 ubox
12 40 0.005883179 ubox
12 66 0.012599145 ubox
12 68 0.003582572 ubox
12 70 0.004634066 ubox
12 72 0.006360887 ubox
13 17 0.799561926 ubox
13 18 0.223175072 ubox
13 21 0.052337767 ubox
13 22 0.066125958 ubox
13 65 0.012577502 ubox
13 71 0.006469815 ubox
13 73 0.007106916 ubox
14 20 0.049462214 ubox
14 23 0.007445303 ubox
14 72 0.006506905 ubox
15 20 0.011081043 ubox
16 20 0.005162904 ubox
16 23 0.007042496 ubox
16 56 0.007306503 ubox
16 72 0.007671541 ubox
17 23 0.005415929 ubox
17 24 0.039351050 ubox
17 70 0.006001578 ubox
17 78 0.017912556 ubox
18 23 0.029063069 ubox
18 24 0.039348336 ubox
18 43 0.004227264 ubox
18 54 0.008094414 ubox
18 70 0.008492909 ubox
18 77 0.017983198 ubox
18 78 0.006309863 ubox
19 23 0.034327430 ubox
19 42 0.004231497 ubox
19 53 0.008094366 ubox
19 56 0.006603672 ubox
19 69 0.005833497 ubox
19 72 0.006234473 ubox
19 76 0.017882808 ubox
19 77 0.005946736 ubox
20 25 0.003355189 ubox
20 26 0.008201336 ubox
20 41 0.004226468 ubox
20 52 0.007980822 ubox
20 55 0.006654804 ubox
20 71 0.006401354 ubox
20 75 0.016811669 ubox
21 40 0.004206365 ubox
21 54 0.006663200 ubox
21 70 0.006485685 ubox
21 78 0.003522134 ubox
22 53 0.006190374 ubox
23 32 0.003959508 ubox
23 74 0.016830060 ubox
24 31 0.004001381 ubox
24 49 0.004133689 ubox
24 71 0.007200736 ubox
24 73 0.018126302 ubox
25 72 0.017298628 ubox
25 76 0.004546473 ubox
25 77 0.010622751 ubox
26 72 0.007384908 ubox
26 76 0.010474432 ubox
26 77 0.006404948 ubox
27 47 0.993352671 ubox
27 76 0.003499539 ubox
28 46 0.994916991 ubox
28 75 0.003425862 ubox
29 45 0.993286935 ubox
30 43 0.026496593 ubox
30 45 0.005008333 ubox
30 78 0.004943842 ubox
31 42 0.025532709 ubox
31 43 0.998780729 ubox
31 77 0.003966017 ubox
31 78 0.007979716 ubox
32 42 0.996505353 ubox
32 76 0.003889433 ubox
32 77 0.007959036 ubox
33 40 0.108185451 ubox
33 42 0.008473420 ubox
33 43 0.003518781 ubox
33 76 0.007611414 ubox
33 78 0.004400398 ubox
34 40 0.991668085 ubox
34 42 0.003453854 ubox
34 43 0.004351504 ubox
34 77 0.004308199 ubox
34 78 0.006622798 ubox
35 40 0.025296139 ubox
35 42 0.003565081 ubox
35 43 0.005702511 ubox
35 76 0.003827917 ubox
35 77 0.006579224 ubox
35 78 0.010967516 ubox
36 42 0.005479417 ubox
36 76 0.006297481 ubox
36 77 0.010937667 ubox
37 76 0.010103576 ubox
39 72 0.011579555 ubox
40 71 0.011695383 ubox
40 73 0.008712590 ubox
40 79 0.014438989 ubox
41 70 0.011668557 ubox
41 72 0.008427398 ubox
41 78 0.015280610 ubox
42 74 0.005814222 ubox
43 71 0.009592315 ubox
43 73 0.006111417 ubox
44 70 0.010023151 ubox
44 72 0.004709156 ubox
44 76 0.004622188 ubox
44 78 0.005717641 ubox
45 73 0.075648872 ubox
45 74 0.004938271 ubox
45 75 0.004040924 ubox
46 72 0.089815348 ubox
47 71 0.095021712 ubox
47 73 0.008969095 ubox
48 69 0.925854322 ubox
48 72 0.011733407 ubox
49 68 0.998942740 ubox
49 69 0.004458195 ubox
49 70 0.007461071 ubox
49 78 0.007903277 ubox
50 67 0.999198384 ubox
51 66 0.995716397 ubox
51 69 0.006959342 ubox
51 77 0.003212378 ubox
52 66 0.003215839 ubox
52 68 0.007251739 ubox
52 76 0.003705588 ubox
53 63 0.012302316 ubox
53 64 0.996755134 ubox
53 67 0.006784473 ubox
53 74 0.014457353 ubox
54 62 0.021262892 ubox
54 63 0.999092763 ubox
54 65 0.005221507 ubox
54 73 0.015410003 ubox
54 79 0.003290237 ubox
55 68 0.004095828 ubox
55 72 0.014593556 ubox
55 78 0.003601990 ubox
56 60 0.013003286 ubox
56 61 0.809409904 ubox
56 62 0.037239845 ubox
56 63 0.004496078 ubox
56 64 0.004381537 ubox
56 67 0.004103357 ubox
56 71 0.014590727 ubox
56 79 0.003494440 ubox
57 66 0.004028920 ubox
57 70 0.015413600 ubox
57 78 0.006037676 ubox
58 69 0.014268788 ubox
58 77 0.006011714 ubox
59 76 0.005414534 ubox
61 66 0.004948721 ubox
61 69 0.005818722 ubox
61 72 0.006694755 ubox
62 68 0.008325000 ubox
63 70 0.007617582 ubox
63 78 0.014199917 ubox
64 69 0.007131251 ubox
64 77 0.014219865 ubox
65 76 0.014210817 ubox
66 75 0.014129261 ubox
68 73 0.013176464 ubox
69 73 0.006614004 ubox
69 74 0.009921908 ubox
69 75 0.007774560 ubox
70 79 0.236645611 ubox
71 76 0.011901911 ubox
71 77 0.017805096 ubox
71 78 0.258203845 ubox
72 79 0.061378867 ubox
73 77 0.009550133 ubox
73 78 0.103996115 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
48 69 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
showpage
end
%%EOF
