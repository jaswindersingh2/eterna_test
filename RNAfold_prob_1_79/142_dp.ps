%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (142)
} def

/sequence { (\
GGAAAAAAGCAGUAGGCGUGCGGUGGAGCCCGGAAACGAGGACAGCGACAGGAACUACGGGCAAAAAAGAUAUAGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.074411346 ubox
1 62 0.008752607 ubox
1 71 0.019944165 ubox
1 73 0.006485101 ubox
1 78 0.075635680 ubox
2 10 0.018753590 ubox
2 62 0.006406951 ubox
2 71 0.007568381 ubox
2 77 0.075015485 ubox
2 78 0.104890088 ubox
3 71 0.005187820 ubox
3 76 0.073833328 ubox
3 77 0.104519007 ubox
4 71 0.003858116 ubox
4 76 0.100931505 ubox
4 77 0.007472018 ubox
5 73 0.004841494 ubox
5 76 0.009283751 ubox
5 77 0.005633075 ubox
6 24 0.004954597 ubox
6 71 0.003953424 ubox
6 73 0.011114575 ubox
6 76 0.006665129 ubox
6 77 0.003580631 ubox
7 19 0.003497793 ubox
7 71 0.006815535 ubox
7 73 0.013781196 ubox
7 76 0.003831596 ubox
7 77 0.005881183 ubox
8 71 0.019682469 ubox
8 73 0.009733435 ubox
8 76 0.006494582 ubox
8 77 0.006082128 ubox
9 17 0.039701734 ubox
9 21 0.024746432 ubox
9 24 0.006082192 ubox
9 46 0.021570890 ubox
9 58 0.008377623 ubox
9 62 0.950201742 ubox
9 71 0.003365458 ubox
9 76 0.006654331 ubox
10 15 0.004471057 ubox
10 16 0.039699372 ubox
10 20 0.024877089 ubox
10 23 0.006445632 ubox
10 45 0.021567737 ubox
10 59 0.046250693 ubox
10 60 0.118089897 ubox
10 61 0.947548578 ubox
10 69 0.005054307 ubox
10 75 0.006693302 ubox
10 79 0.004608012 ubox
11 19 0.024404694 ubox
11 56 0.026868777 ubox
12 17 0.008662737 ubox
12 21 0.009788173 ubox
12 43 0.021372778 ubox
12 55 0.028093611 ubox
12 58 0.995144111 ubox
13 20 0.009800186 ubox
13 42 0.021288778 ubox
13 54 0.027092018 ubox
13 57 0.996855232 ubox
14 19 0.009470956 ubox
14 56 0.996914574 ubox
15 55 0.996680980 ubox
15 56 0.012437655 ubox
16 55 0.017178614 ubox
16 62 0.003208425 ubox
17 38 0.021499339 ubox
17 51 0.045818472 ubox
17 52 0.965249351 ubox
17 61 0.003207263 ubox
18 37 0.021491647 ubox
18 49 0.054040858 ubox
19 34 0.007798495 ubox
19 36 0.019394971 ubox
19 47 0.006817218 ubox
19 48 0.053859146 ubox
19 50 0.993872916 ubox
19 51 0.016029675 ubox
19 52 0.003557097 ubox
19 53 0.011297369 ubox
20 46 0.009862234 ubox
20 49 0.995521082 ubox
20 62 0.003239435 ubox
21 32 0.019853180 ubox
21 45 0.009884362 ubox
21 47 0.975557527 ubox
21 51 0.016589545 ubox
21 52 0.005187876 ubox
22 30 0.005092539 ubox
22 31 0.020023319 ubox
22 46 0.975010638 ubox
22 49 0.007435175 ubox
23 29 0.005547077 ubox
23 30 0.019833890 ubox
23 43 0.011427896 ubox
23 46 0.214782316 ubox
23 49 0.026436521 ubox
23 58 0.003876365 ubox
24 28 0.005546507 ubox
24 32 0.006818658 ubox
24 42 0.011429077 ubox
24 44 0.970277075 ubox
24 45 0.215090670 ubox
24 47 0.022016109 ubox
24 48 0.026238317 ubox
24 50 0.007290568 ubox
24 57 0.004135003 ubox
25 29 0.005621649 ubox
25 31 0.006999534 ubox
25 43 0.965736841 ubox
25 46 0.024891784 ubox
25 49 0.008212575 ubox
25 56 0.004163669 ubox
26 30 0.006967078 ubox
26 43 0.076403047 ubox
26 46 0.025167224 ubox
26 55 0.004162168 ubox
28 37 0.006488481 ubox
28 43 0.070811541 ubox
28 46 0.008282767 ubox
28 62 0.017277230 ubox
29 38 0.015187999 ubox
29 40 0.275539439 ubox
29 41 0.948225279 ubox
29 45 0.008084193 ubox
29 52 0.003947015 ubox
29 61 0.017297416 ubox
30 38 0.017822976 ubox
30 40 0.950541356 ubox
30 41 0.058750028 ubox
30 51 0.003932348 ubox
30 60 0.017297963 ubox
31 38 0.995001999 ubox
31 40 0.059791280 ubox
31 59 0.017296712 ubox
32 37 0.993073256 ubox
32 58 0.017230819 ubox
33 37 0.044251912 ubox
37 51 0.006737546 ubox
37 52 0.011131100 ubox
40 46 0.003727893 ubox
40 49 0.012941702 ubox
41 46 0.003214090 ubox
41 49 0.003681314 ubox
52 78 0.057542180 ubox
53 77 0.057824280 ubox
54 76 0.057899909 ubox
55 75 0.057953684 ubox
56 74 0.057765759 ubox
57 73 0.055678182 ubox
58 69 0.012255949 ubox
58 79 0.056379619 ubox
59 71 0.022101364 ubox
59 78 0.242046731 ubox
60 71 0.015642723 ubox
60 77 0.242657797 ubox
60 78 0.014223670 ubox
61 71 0.007280093 ubox
61 76 0.244071546 ubox
61 77 0.010683852 ubox
61 78 0.004246675 ubox
62 69 0.047464023 ubox
62 75 0.244284496 ubox
63 71 0.012939439 ubox
63 73 0.030751269 ubox
63 76 0.005790112 ubox
63 77 0.012818692 ubox
64 71 0.029930877 ubox
64 73 0.088072401 ubox
64 76 0.013127968 ubox
64 77 0.016598977 ubox
65 71 0.024170768 ubox
65 73 0.018516654 ubox
65 76 0.017108483 ubox
65 77 0.015589420 ubox
66 71 0.033598958 ubox
66 73 0.029523011 ubox
66 76 0.015666115 ubox
66 77 0.028724793 ubox
67 71 0.014119802 ubox
67 73 0.017247181 ubox
67 76 0.030981919 ubox
67 77 0.036116210 ubox
68 73 0.038017970 ubox
68 76 0.039354014 ubox
68 77 0.028347002 ubox
69 73 0.011397274 ubox
69 76 0.027778895 ubox
69 77 0.073661042 ubox
69 78 0.562605795 ubox
70 76 0.080362194 ubox
70 77 0.555234425 ubox
71 75 0.077412852 ubox
71 79 0.006672622 ubox
72 76 0.015199984 ubox
72 77 0.022266708 ubox
73 79 0.008165862 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
showpage
end
%%EOF
