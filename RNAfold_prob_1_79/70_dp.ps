%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (70)
} def

/sequence { (\
GGAAAAGCAACGCUCGAAAAGCAAAAAACUAGUAACUGAGAGGUAACUAGGGCCGAGGGUUGCAAAAAGCUCUGGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.107212348 ubox
1 11 0.060669283 ubox
1 13 0.009203731 ubox
1 14 0.006016301 ubox
1 15 0.013339222 ubox
1 22 0.009592748 ubox
1 29 0.006512080 ubox
1 54 0.006109269 ubox
1 70 0.104902163 ubox
1 71 0.089277416 ubox
1 72 0.054134618 ubox
1 73 0.116354485 ubox
1 77 0.003385742 ubox
1 78 0.121059647 ubox
2 8 0.032748074 ubox
2 11 0.038407321 ubox
2 13 0.007918876 ubox
2 14 0.010177418 ubox
2 15 0.023984126 ubox
2 22 0.005435171 ubox
2 29 0.003676730 ubox
2 53 0.006156176 ubox
2 70 0.109927269 ubox
2 71 0.033955695 ubox
2 72 0.123212291 ubox
2 76 0.003872539 ubox
2 77 0.111799634 ubox
2 78 0.152956458 ubox
3 14 0.022303594 ubox
3 71 0.120433739 ubox
3 76 0.104046150 ubox
3 77 0.147315490 ubox
4 71 0.004565127 ubox
4 73 0.005140036 ubox
4 76 0.124719585 ubox
4 77 0.007346153 ubox
5 14 0.003165756 ubox
5 71 0.003612986 ubox
5 73 0.009733574 ubox
5 76 0.006683377 ubox
5 77 0.008156020 ubox
6 14 0.047704317 ubox
6 30 0.006145733 ubox
6 48 0.018647284 ubox
6 71 0.014445263 ubox
6 73 0.059394320 ubox
6 76 0.008827881 ubox
6 77 0.006124518 ubox
7 11 0.017137421 ubox
7 13 0.051314575 ubox
7 15 0.004555929 ubox
7 22 0.081710788 ubox
7 29 0.008209613 ubox
7 44 0.006995455 ubox
7 47 0.019317234 ubox
7 53 0.017227490 ubox
7 63 0.909488679 ubox
7 70 0.011760665 ubox
7 72 0.027907813 ubox
7 73 0.005043050 ubox
7 76 0.005393530 ubox
7 78 0.013868879 ubox
8 12 0.048017664 ubox
8 16 0.009337807 ubox
8 21 0.081721288 ubox
8 43 0.007156836 ubox
8 51 0.007708392 ubox
8 52 0.017312328 ubox
8 62 0.911005631 ubox
8 69 0.010542304 ubox
8 74 0.004149281 ubox
8 75 0.005319091 ubox
8 79 0.013715125 ubox
9 14 0.003538194 ubox
9 61 0.910596978 ubox
9 77 0.007179334 ubox
10 44 0.023975356 ubox
10 60 0.910676832 ubox
10 76 0.006640312 ubox
11 16 0.017408427 ubox
11 21 0.009531885 ubox
11 42 0.010040681 ubox
11 43 0.024463139 ubox
11 51 0.011264680 ubox
11 58 0.005040490 ubox
11 59 0.910838776 ubox
11 75 0.006421176 ubox
11 79 0.019418889 ubox
12 22 0.382136800 ubox
12 53 0.006635766 ubox
12 78 0.007229731 ubox
13 21 0.382497483 ubox
13 40 0.020761716 ubox
13 42 0.020744390 ubox
13 52 0.006694246 ubox
13 57 0.910822350 ubox
13 58 0.005319544 ubox
14 18 0.003932962 ubox
14 19 0.018488890 ubox
14 20 0.368562437 ubox
14 23 0.004189660 ubox
14 39 0.020803149 ubox
14 41 0.020803202 ubox
14 51 0.006522643 ubox
14 56 0.910955348 ubox
15 21 0.012655220 ubox
15 38 0.020801523 ubox
15 40 0.020805001 ubox
15 50 0.003504506 ubox
15 55 0.911035629 ubox
15 79 0.026049295 ubox
16 22 0.032942637 ubox
16 37 0.018035601 ubox
16 53 0.063190325 ubox
16 54 0.903129863 ubox
16 78 0.028553549 ubox
17 77 0.025661583 ubox
18 37 0.006171331 ubox
18 76 0.012569298 ubox
20 30 0.009788945 ubox
20 37 0.009288790 ubox
21 29 0.012595663 ubox
21 33 0.020086369 ubox
21 36 0.009354013 ubox
21 53 0.535486245 ubox
21 54 0.009380635 ubox
22 32 0.020513372 ubox
22 50 0.015123661 ubox
22 51 0.111686894 ubox
22 52 0.530920010 ubox
23 30 0.005844816 ubox
24 30 0.006117740 ubox
28 44 0.009201737 ubox
29 40 0.004474618 ubox
29 42 0.003352434 ubox
29 43 0.009498639 ubox
29 50 0.975041785 ubox
29 51 0.069973612 ubox
29 52 0.007854647 ubox
29 79 0.004094305 ubox
30 38 0.004025057 ubox
30 39 0.004199607 ubox
30 41 0.003253419 ubox
30 42 0.009337349 ubox
30 49 0.996115411 ubox
30 50 0.043365107 ubox
30 51 0.006337161 ubox
31 37 0.005041646 ubox
31 48 0.998841031 ubox
32 36 0.005000107 ubox
32 47 0.999278643 ubox
33 39 0.006776988 ubox
33 45 0.044176089 ubox
33 46 0.984558331 ubox
34 44 0.045273053 ubox
35 44 0.982020180 ubox
36 42 0.065911752 ubox
36 43 0.996101978 ubox
36 50 0.003409517 ubox
36 51 0.003432924 ubox
37 41 0.061763454 ubox
37 42 0.970216595 ubox
37 43 0.007543513 ubox
37 45 0.006125701 ubox
37 49 0.003392768 ubox
37 50 0.003278270 ubox
38 44 0.005866017 ubox
39 48 0.004346528 ubox
40 47 0.004802001 ubox
41 48 0.009005962 ubox
42 47 0.009315099 ubox
42 54 0.003267613 ubox
43 53 0.003429912 ubox
44 52 0.003386092 ubox
45 77 0.004013379 ubox
46 76 0.004514688 ubox
47 75 0.004583552 ubox
48 74 0.004583042 ubox
49 73 0.004584284 ubox
50 72 0.004587760 ubox
50 78 0.186610486 ubox
51 71 0.004592973 ubox
51 76 0.009090424 ubox
51 77 0.325328307 ubox
51 78 0.139962370 ubox
52 70 0.004596600 ubox
52 76 0.387448653 ubox
52 77 0.108659550 ubox
52 78 0.011349046 ubox
53 69 0.004569387 ubox
53 75 0.402112024 ubox
54 58 0.003173657 ubox
54 74 0.401670930 ubox
54 75 0.087779812 ubox
55 72 0.014361118 ubox
55 73 0.198075257 ubox
55 78 0.003340602 ubox
56 71 0.014402053 ubox
56 73 0.358785000 ubox
57 70 0.013832166 ubox
57 71 0.021210752 ubox
57 72 0.411018718 ubox
57 73 0.003783618 ubox
58 63 0.003363423 ubox
58 70 0.022410363 ubox
58 71 0.410924374 ubox
58 72 0.004618922 ubox
59 70 0.411212868 ubox
60 67 0.010196020 ubox
60 68 0.026750361 ubox
60 69 0.410611926 ubox
61 66 0.014467687 ubox
61 67 0.030406145 ubox
61 68 0.402665593 ubox
61 69 0.004295878 ubox
62 70 0.009132258 ubox
63 69 0.010167361 ubox
63 74 0.012419544 ubox
64 71 0.018065113 ubox
64 73 0.023238704 ubox
64 76 0.007733136 ubox
64 77 0.018143793 ubox
65 71 0.015474081 ubox
65 73 0.016788027 ubox
65 76 0.018740820 ubox
65 77 0.019136563 ubox
66 71 0.017412082 ubox
66 73 0.026914295 ubox
66 76 0.018611585 ubox
66 77 0.031659397 ubox
67 71 0.009179645 ubox
67 73 0.021931755 ubox
67 76 0.032828819 ubox
67 77 0.087047330 ubox
68 73 0.026385909 ubox
68 76 0.095087152 ubox
68 77 0.279445595 ubox
69 73 0.011860072 ubox
69 76 0.329595122 ubox
69 77 0.011699781 ubox
69 78 0.043393331 ubox
70 74 0.092394955 ubox
70 75 0.333149061 ubox
70 79 0.033614717 ubox
71 75 0.009802288 ubox
71 79 0.004871506 ubox
72 79 0.034369653 ubox
73 79 0.024018231 ubox
74 78 0.041729710 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
