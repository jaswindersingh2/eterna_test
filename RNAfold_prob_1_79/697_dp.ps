%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (697)
} def

/sequence { (\
GGAAAGCGGUCACAAAGCGAGCGCAAGGGCGAGCAAAAAGGUCACCCAGCCACAGGAAUUCGUGCGGCUCGACAGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.009198294 ubox
1 11 0.004746503 ubox
1 13 0.010818689 ubox
1 22 0.004120848 ubox
1 24 0.005881420 ubox
1 47 0.005517159 ubox
1 51 0.009444732 ubox
1 69 0.003643564 ubox
1 70 0.094504755 ubox
1 73 0.086760028 ubox
1 76 0.005690121 ubox
1 77 0.010780600 ubox
1 78 0.336522547 ubox
2 7 0.004470410 ubox
2 10 0.004098583 ubox
2 11 0.015011648 ubox
2 22 0.007082657 ubox
2 24 0.003744857 ubox
2 46 0.004975375 ubox
2 50 0.009421851 ubox
2 69 0.044548473 ubox
2 70 0.115163636 ubox
2 73 0.044961308 ubox
2 76 0.013332313 ubox
2 77 0.326246539 ubox
2 78 0.487788280 ubox
3 10 0.014199272 ubox
3 69 0.085501971 ubox
3 76 0.301939962 ubox
3 77 0.481947198 ubox
4 69 0.006915140 ubox
4 76 0.418719215 ubox
4 77 0.032090369 ubox
5 69 0.007124872 ubox
5 76 0.035724946 ubox
5 77 0.067585588 ubox
6 13 0.003409812 ubox
6 18 0.023098259 ubox
6 22 0.011505698 ubox
6 24 0.991167881 ubox
6 47 0.003567326 ubox
6 68 0.003629424 ubox
6 73 0.016369685 ubox
6 76 0.089084261 ubox
6 78 0.003572662 ubox
7 17 0.023251680 ubox
7 19 0.005071327 ubox
7 21 0.011505181 ubox
7 23 0.992243818 ubox
7 67 0.003622870 ubox
7 71 0.021175195 ubox
7 75 0.092149776 ubox
7 79 0.006930498 ubox
8 13 0.010277242 ubox
8 18 0.005557663 ubox
8 22 0.991902017 ubox
8 46 0.006004753 ubox
8 70 0.020758428 ubox
8 73 0.003413164 ubox
8 78 0.007499994 ubox
9 18 0.017215646 ubox
9 22 0.006951086 ubox
9 45 0.006034179 ubox
9 65 0.003589506 ubox
9 69 0.008164829 ubox
9 73 0.111334466 ubox
9 77 0.005883413 ubox
10 14 0.003545012 ubox
10 16 0.004217412 ubox
10 17 0.016374388 ubox
10 19 0.004260814 ubox
10 20 0.989179211 ubox
10 21 0.006535419 ubox
10 44 0.005945738 ubox
10 72 0.112019417 ubox
11 17 0.014095663 ubox
11 19 0.990804625 ubox
11 21 0.004181181 ubox
11 64 0.003462374 ubox
11 71 0.111853006 ubox
12 42 0.005839702 ubox
12 63 0.003531469 ubox
12 69 0.003497706 ubox
12 76 0.006511222 ubox
13 17 0.549877020 ubox
13 19 0.014326986 ubox
13 21 0.004309846 ubox
13 41 0.005916325 ubox
13 62 0.003526227 ubox
13 75 0.006820563 ubox
16 69 0.004787554 ubox
17 22 0.004623127 ubox
17 24 0.109161983 ubox
17 34 0.015458169 ubox
17 68 0.005042007 ubox
17 73 0.006929960 ubox
18 23 0.109118723 ubox
18 33 0.015472145 ubox
18 67 0.005032827 ubox
18 71 0.012741594 ubox
18 79 0.032301427 ubox
19 24 0.006061195 ubox
19 34 0.005137678 ubox
19 70 0.013906985 ubox
19 78 0.040542364 ubox
20 69 0.013789887 ubox
20 77 0.040538143 ubox
21 30 0.015108242 ubox
21 65 0.004961021 ubox
21 68 0.013641476 ubox
21 76 0.040501115 ubox
22 29 0.015097232 ubox
22 31 0.006504224 ubox
22 64 0.004963374 ubox
22 66 0.006624554 ubox
22 67 0.011875112 ubox
22 75 0.040470398 ubox
23 30 0.006632255 ubox
23 50 0.007805470 ubox
23 63 0.004948877 ubox
23 65 0.009332020 ubox
23 73 0.013430454 ubox
24 29 0.006621091 ubox
24 49 0.007851903 ubox
24 62 0.004946068 ubox
24 64 0.009308822 ubox
24 66 0.003165708 ubox
24 71 0.011527657 ubox
25 63 0.008147552 ubox
25 76 0.004191673 ubox
25 77 0.009771680 ubox
26 76 0.009648004 ubox
26 77 0.005228611 ubox
27 45 0.003245696 ubox
27 46 0.016391208 ubox
27 47 0.997966129 ubox
27 78 0.007281816 ubox
28 43 0.007500622 ubox
28 45 0.016300841 ubox
28 46 0.999419879 ubox
28 47 0.008109949 ubox
28 77 0.007080905 ubox
29 42 0.007670230 ubox
29 45 0.999316757 ubox
29 46 0.007582290 ubox
29 76 0.007101965 ubox
30 40 0.003642127 ubox
30 41 0.008177386 ubox
30 71 0.004306405 ubox
30 75 0.007088867 ubox
30 79 0.016163000 ubox
31 43 0.998765601 ubox
31 70 0.004432814 ubox
31 78 0.017557052 ubox
32 42 0.994815051 ubox
32 69 0.004376975 ubox
32 77 0.017546710 ubox
33 42 0.065495899 ubox
33 43 0.004626525 ubox
33 68 0.004307122 ubox
33 76 0.017515053 ubox
34 40 0.983579799 ubox
34 41 0.120930623 ubox
34 67 0.004275600 ubox
34 75 0.017473701 ubox
40 45 0.003800432 ubox
40 46 0.007157783 ubox
40 47 0.018161281 ubox
41 45 0.007080107 ubox
41 46 0.018048227 ubox
41 73 0.011214368 ubox
42 72 0.011271169 ubox
43 71 0.011171935 ubox
46 71 0.008401432 ubox
47 71 0.030367240 ubox
48 69 0.930472323 ubox
49 65 0.007175792 ubox
49 68 0.999369870 ubox
49 69 0.004059489 ubox
50 56 0.008962498 ubox
50 64 0.005185617 ubox
50 66 0.005114835 ubox
50 67 0.999715079 ubox
51 55 0.008943647 ubox
51 64 0.014472105 ubox
51 66 0.999431299 ubox
52 63 0.025038205 ubox
53 62 0.026135869 ubox
53 64 0.998990533 ubox
54 60 0.003553937 ubox
54 63 0.997042784 ubox
55 59 0.003441543 ubox
55 60 0.007533458 ubox
55 61 0.099434938 ubox
55 63 0.006119067 ubox
55 65 0.004364319 ubox
56 60 0.065004533 ubox
56 61 0.963990332 ubox
56 78 0.014976242 ubox
57 63 0.003551399 ubox
57 77 0.015000927 ubox
58 76 0.014986989 ubox
59 75 0.014746474 ubox
60 72 0.007831943 ubox
60 74 0.012448457 ubox
61 71 0.008482975 ubox
62 70 0.008457356 ubox
62 73 0.012424332 ubox
63 72 0.012386913 ubox
64 68 0.003678161 ubox
65 71 0.007894670 ubox
66 70 0.007420885 ubox
67 76 0.004005219 ubox
68 75 0.007013939 ubox
69 74 0.010374583 ubox
69 75 0.006923122 ubox
70 75 0.161102702 ubox
70 79 0.445514650 ubox
71 76 0.012475052 ubox
71 77 0.020200908 ubox
71 78 0.488897454 ubox
72 76 0.023375603 ubox
72 77 0.440385601 ubox
73 79 0.030698513 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
48 69 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
showpage
end
%%EOF
