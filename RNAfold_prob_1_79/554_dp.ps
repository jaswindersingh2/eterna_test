%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (554)
} def

/sequence { (\
GGAAAGGUGAGUGGAUCGAAGAUUAGGACAAAGGUGCUGAUCGGAAAAAGCCAGAGAUCUAUCUUAUCGCUGUUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 64 0.007018078 ubox
1 68 0.005311289 ubox
1 70 0.009609600 ubox
1 71 0.068628843 ubox
1 73 0.046391176 ubox
1 74 0.021959879 ubox
1 75 0.361794001 ubox
1 76 0.765781036 ubox
1 77 0.035862219 ubox
1 78 0.148570447 ubox
2 63 0.008094902 ubox
2 67 0.004653323 ubox
2 68 0.009057065 ubox
2 70 0.072282702 ubox
2 71 0.014560675 ubox
2 73 0.031873485 ubox
2 74 0.362664715 ubox
2 75 0.884408976 ubox
2 76 0.010505734 ubox
2 77 0.124656010 ubox
2 78 0.074884348 ubox
3 62 0.008006976 ubox
3 67 0.008496888 ubox
3 71 0.073313996 ubox
3 73 0.357437050 ubox
3 74 0.882956367 ubox
3 76 0.119066180 ubox
3 77 0.073425566 ubox
4 65 0.006466935 ubox
4 71 0.053461214 ubox
4 73 0.702705767 ubox
4 74 0.048981126 ubox
4 76 0.054392986 ubox
4 77 0.013733908 ubox
5 60 0.008213425 ubox
5 64 0.006684986 ubox
5 65 0.005901496 ubox
5 71 0.117197203 ubox
5 73 0.047294557 ubox
5 74 0.030611390 ubox
5 76 0.017572959 ubox
6 17 0.007905255 ubox
6 59 0.008358178 ubox
6 63 0.006696259 ubox
6 64 0.006164559 ubox
6 68 0.441985249 ubox
6 70 0.107857817 ubox
6 71 0.867767758 ubox
6 73 0.011831483 ubox
6 74 0.006284301 ubox
6 75 0.018591512 ubox
7 16 0.008143147 ubox
7 58 0.008345315 ubox
7 62 0.005551970 ubox
7 63 0.006163279 ubox
7 67 0.450940027 ubox
7 68 0.071641924 ubox
7 70 0.888037755 ubox
7 71 0.003306906 ubox
7 74 0.008911309 ubox
8 15 0.008138383 ubox
8 57 0.008299222 ubox
8 61 0.004838681 ubox
8 66 0.458715644 ubox
8 69 0.887344409 ubox
9 17 0.004170672 ubox
9 63 0.014233953 ubox
9 64 0.009177782 ubox
9 65 0.465384241 ubox
9 68 0.884238181 ubox
10 16 0.004166062 ubox
10 62 0.013430408 ubox
10 64 0.481007994 ubox
10 65 0.021014765 ubox
10 67 0.871312648 ubox
10 71 0.006862215 ubox
11 17 0.004066369 ubox
11 51 0.004867362 ubox
11 62 0.818973975 ubox
11 63 0.500168295 ubox
11 64 0.027996080 ubox
11 65 0.028387305 ubox
11 67 0.011896210 ubox
11 70 0.007080759 ubox
12 50 0.004866683 ubox
12 53 0.021874079 ubox
12 61 0.956214276 ubox
12 66 0.021006691 ubox
12 69 0.007021031 ubox
13 52 0.024715885 ubox
13 60 0.968405724 ubox
13 62 0.003732404 ubox
13 63 0.015045288 ubox
13 64 0.239213114 ubox
13 65 0.014813827 ubox
13 68 0.006659699 ubox
14 51 0.024705227 ubox
14 59 0.969519095 ubox
14 62 0.003825824 ubox
14 63 0.242160111 ubox
14 64 0.003334822 ubox
14 67 0.004127739 ubox
15 58 0.969285694 ubox
15 62 0.241499793 ubox
16 45 0.008986897 ubox
16 47 0.003185556 ubox
16 49 0.003793463 ubox
16 55 0.020772560 ubox
16 56 0.003224052 ubox
16 57 0.969007273 ubox
16 61 0.232268235 ubox
17 43 0.004963492 ubox
17 44 0.010133396 ubox
17 50 0.004253078 ubox
17 54 0.023839492 ubox
17 56 0.967978262 ubox
17 79 0.011698495 ubox
18 42 0.015584283 ubox
18 51 0.028745409 ubox
18 52 0.020026236 ubox
18 59 0.226437172 ubox
18 60 0.010118305 ubox
18 78 0.015035480 ubox
19 41 0.013763121 ubox
19 58 0.211918888 ubox
19 60 0.004712864 ubox
19 77 0.015035773 ubox
20 58 0.010599310 ubox
20 60 0.008433275 ubox
20 76 0.015003879 ubox
21 41 0.003191453 ubox
21 42 0.997827465 ubox
21 51 0.005387204 ubox
21 52 0.008944168 ubox
21 59 0.007928990 ubox
21 75 0.014988735 ubox
22 41 0.999076894 ubox
22 58 0.007507236 ubox
22 74 0.014944041 ubox
23 40 0.999253948 ubox
23 57 0.006913592 ubox
24 39 0.999224243 ubox
24 56 0.005961591 ubox
24 72 0.014300236 ubox
25 38 0.999356241 ubox
25 71 0.014908591 ubox
26 37 0.999548124 ubox
26 38 0.003811892 ubox
26 52 0.003666257 ubox
26 70 0.014902386 ubox
27 35 0.004010532 ubox
27 37 0.007778126 ubox
27 51 0.003662212 ubox
27 68 0.011600711 ubox
28 35 0.995709603 ubox
28 67 0.011389265 ubox
29 33 0.020706193 ubox
29 34 0.995976998 ubox
29 36 0.015425716 ubox
30 35 0.013554348 ubox
31 65 0.013512868 ubox
32 64 0.014650332 ubox
33 42 0.003698067 ubox
33 63 0.014903830 ubox
34 41 0.003687546 ubox
34 62 0.014877580 ubox
35 40 0.003666473 ubox
35 61 0.014773799 ubox
36 60 0.012955046 ubox
39 59 0.014349947 ubox
40 58 0.014415903 ubox
41 55 0.019041103 ubox
41 57 0.014427054 ubox
42 54 0.025836822 ubox
42 56 0.014466749 ubox
43 51 0.057276114 ubox
43 52 0.902852959 ubox
43 60 0.010860200 ubox
43 76 0.003951452 ubox
44 51 0.901307539 ubox
44 52 0.041348908 ubox
44 59 0.011428649 ubox
44 75 0.004447209 ubox
45 58 0.010871152 ubox
45 74 0.004420467 ubox
46 73 0.004124244 ubox
49 60 0.005792976 ubox
49 71 0.004884731 ubox
50 59 0.005994293 ubox
50 70 0.004947511 ubox
51 56 0.009471761 ubox
51 69 0.004933001 ubox
52 56 0.006025664 ubox
53 58 0.006909812 ubox
53 60 0.036598272 ubox
53 64 0.012273314 ubox
54 59 0.038318787 ubox
54 60 0.003198414 ubox
54 63 0.014066992 ubox
54 65 0.026183356 ubox
55 60 0.003766324 ubox
55 62 0.013919534 ubox
55 64 0.027198935 ubox
56 63 0.027331880 ubox
57 62 0.024227629 ubox
68 79 0.003511337 ubox
69 74 0.003222327 ubox
69 75 0.010835896 ubox
69 76 0.003432658 ubox
69 78 0.012841678 ubox
70 79 0.009584327 ubox
71 79 0.017233320 ubox
72 77 0.006239713 ubox
72 78 0.033618122 ubox
75 79 0.003414062 ubox
1 76 0.9500000 lbox
2 75 0.9500000 lbox
3 74 0.9500000 lbox
4 73 0.9500000 lbox
6 71 0.9500000 lbox
7 70 0.9500000 lbox
8 69 0.9500000 lbox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 62 0.9500000 lbox
12 61 0.9500000 lbox
13 60 0.9500000 lbox
14 59 0.9500000 lbox
15 58 0.9500000 lbox
16 57 0.9500000 lbox
17 56 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
showpage
end
%%EOF
