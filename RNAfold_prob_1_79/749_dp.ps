%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (749)
} def

/sequence { (\
GGAAAGUCGUGGCAAAGGCAGGACAAGCAGCUGGGAAAACGAGGUGCAGACGAGGCGAAAGGCUGGUCGCUAAGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.006590664 ubox
1 24 0.010747776 ubox
1 28 0.036866464 ubox
1 31 0.011521800 ubox
1 32 0.015034552 ubox
1 40 0.003451095 ubox
1 51 0.016800744 ubox
1 70 0.022143205 ubox
1 71 0.049978861 ubox
1 75 0.022806044 ubox
1 76 0.031441215 ubox
1 77 0.008747921 ubox
1 78 0.276645332 ubox
2 7 0.004927721 ubox
2 8 0.006565556 ubox
2 24 0.005449402 ubox
2 28 0.043533990 ubox
2 31 0.015887763 ubox
2 51 0.010326124 ubox
2 68 0.003347910 ubox
2 70 0.052702567 ubox
2 71 0.006581599 ubox
2 75 0.035893730 ubox
2 76 0.011287302 ubox
2 77 0.270125025 ubox
2 78 0.398377545 ubox
3 7 0.005747450 ubox
3 71 0.006757482 ubox
3 76 0.254985759 ubox
3 77 0.393647801 ubox
4 71 0.007638198 ubox
4 76 0.353507258 ubox
4 77 0.051563384 ubox
5 71 0.012224381 ubox
5 76 0.064665859 ubox
5 77 0.008343946 ubox
6 19 0.029602969 ubox
6 24 0.993596376 ubox
6 51 0.004442610 ubox
6 70 0.008664291 ubox
6 75 0.066250967 ubox
7 18 0.029602665 ubox
7 22 0.004310539 ubox
7 23 0.995012033 ubox
7 36 0.024273138 ubox
7 50 0.004488010 ubox
7 69 0.007115546 ubox
7 73 0.006415627 ubox
7 74 0.052450815 ubox
8 17 0.029632823 ubox
8 21 0.007016249 ubox
8 22 0.995182054 ubox
8 35 0.025935612 ubox
8 49 0.004453599 ubox
8 74 0.038971400 ubox
8 79 0.045565672 ubox
9 19 0.009380846 ubox
9 24 0.006056308 ubox
9 40 0.003665292 ubox
9 70 0.005033855 ubox
9 75 0.003772246 ubox
9 78 0.050330227 ubox
10 15 0.005345425 ubox
10 16 0.003637157 ubox
10 18 0.009368105 ubox
10 20 0.988756872 ubox
10 21 0.029479894 ubox
10 23 0.005792376 ubox
10 33 0.025059180 ubox
10 39 0.003647338 ubox
10 69 0.004919976 ubox
10 72 0.059454579 ubox
10 74 0.003422456 ubox
11 19 0.960432432 ubox
11 32 0.025936538 ubox
11 71 0.064457279 ubox
11 76 0.050119854 ubox
12 19 0.261054720 ubox
12 31 0.026046621 ubox
12 70 0.064761443 ubox
12 75 0.051848624 ubox
13 17 0.809327792 ubox
13 18 0.354092943 ubox
13 30 0.025936408 ubox
13 69 0.064693138 ubox
13 74 0.051770060 ubox
16 71 0.011964482 ubox
16 77 0.004302772 ubox
17 24 0.036632868 ubox
17 28 0.006059219 ubox
17 32 0.004646182 ubox
17 70 0.010344844 ubox
17 71 0.047538615 ubox
17 76 0.005089381 ubox
18 24 0.009557435 ubox
18 28 0.020678899 ubox
18 31 0.004799000 ubox
18 70 0.049975267 ubox
18 75 0.005198076 ubox
19 27 0.020946167 ubox
19 30 0.004811488 ubox
19 69 0.050328494 ubox
19 74 0.005200863 ubox
21 28 0.004429218 ubox
24 33 0.003349131 ubox
24 49 0.005936594 ubox
25 32 0.004314478 ubox
25 76 0.003569442 ubox
25 77 0.023633122 ubox
26 32 0.014159641 ubox
26 71 0.005204592 ubox
26 76 0.026482896 ubox
26 77 0.003819890 ubox
27 31 0.014301219 ubox
27 47 0.988215297 ubox
27 70 0.004179066 ubox
27 75 0.025633268 ubox
27 78 0.004726425 ubox
28 33 0.013746622 ubox
28 34 0.011646214 ubox
28 35 0.013692258 ubox
28 46 0.989261096 ubox
28 69 0.003919123 ubox
28 74 0.025516150 ubox
29 45 0.988029689 ubox
29 71 0.004144789 ubox
29 76 0.006670926 ubox
30 45 0.010239797 ubox
30 70 0.004443663 ubox
30 75 0.007018982 ubox
31 35 0.004848801 ubox
31 43 0.989117386 ubox
31 44 0.014873061 ubox
31 69 0.004316144 ubox
31 74 0.007003151 ubox
32 37 0.007348211 ubox
32 38 0.006986049 ubox
32 39 0.007100971 ubox
32 41 0.057497454 ubox
32 42 0.984607185 ubox
32 43 0.013608372 ubox
32 73 0.006799657 ubox
33 40 0.117358274 ubox
34 40 0.979306478 ubox
35 40 0.025907985 ubox
40 79 0.134820561 ubox
41 77 0.003462803 ubox
41 78 0.142877389 ubox
42 76 0.005193171 ubox
42 77 0.142779959 ubox
43 75 0.006333662 ubox
43 76 0.142698753 ubox
44 75 0.142829967 ubox
45 72 0.006401742 ubox
45 73 0.009067058 ubox
45 74 0.141637653 ubox
46 70 0.119699488 ubox
46 71 0.005813860 ubox
47 69 0.119512595 ubox
48 71 0.044391122 ubox
48 76 0.048152285 ubox
48 77 0.007829453 ubox
49 68 0.605126783 ubox
49 70 0.043039478 ubox
49 71 0.003520098 ubox
49 75 0.053888381 ubox
49 76 0.008318086 ubox
49 77 0.009487331 ubox
49 78 0.022128752 ubox
50 67 0.606053495 ubox
50 76 0.010430797 ubox
50 77 0.021250110 ubox
51 57 0.003442528 ubox
51 65 0.003971716 ubox
51 66 0.606041889 ubox
51 69 0.043416052 ubox
51 74 0.065381203 ubox
51 79 0.751419948 ubox
52 56 0.003298190 ubox
52 68 0.043589989 ubox
52 75 0.014805631 ubox
52 77 0.003639608 ubox
52 78 0.789454184 ubox
53 64 0.596097247 ubox
53 67 0.042107446 ubox
53 71 0.004630550 ubox
53 76 0.005597628 ubox
53 77 0.789106613 ubox
54 63 0.594326116 ubox
54 64 0.106506335 ubox
54 68 0.003734258 ubox
54 70 0.003356825 ubox
54 71 0.081304590 ubox
54 75 0.006108287 ubox
54 76 0.788541679 ubox
55 63 0.126916029 ubox
55 67 0.003826995 ubox
55 70 0.083591368 ubox
55 75 0.789198458 ubox
56 61 0.583965977 ubox
56 62 0.142616411 ubox
56 66 0.003889997 ubox
56 69 0.083828310 ubox
56 74 0.788994135 ubox
56 79 0.017989585 ubox
57 68 0.084642089 ubox
57 70 0.006170881 ubox
57 71 0.004234041 ubox
57 78 0.019448302 ubox
58 67 0.083409253 ubox
58 71 0.023330035 ubox
58 77 0.018116859 ubox
59 64 0.004528962 ubox
59 71 0.054272025 ubox
59 76 0.008748897 ubox
60 64 0.005874300 ubox
60 67 0.006800795 ubox
60 71 0.203219034 ubox
60 76 0.003502714 ubox
60 77 0.011865234 ubox
61 67 0.004822586 ubox
61 68 0.077547109 ubox
61 70 0.202939343 ubox
61 71 0.728940497 ubox
61 75 0.003344172 ubox
61 76 0.021160600 ubox
62 67 0.052717453 ubox
62 68 0.042134970 ubox
62 70 0.755348052 ubox
62 71 0.005381478 ubox
62 75 0.023827228 ubox
63 69 0.757326147 ubox
63 74 0.024000108 ubox
64 69 0.008034352 ubox
64 72 0.006007759 ubox
64 73 0.023620536 ubox
65 70 0.008333364 ubox
65 71 0.007981302 ubox
66 70 0.008020593 ubox
68 74 0.003859491 ubox
69 75 0.414438545 ubox
69 76 0.006311609 ubox
69 78 0.016200918 ubox
70 74 0.411944261 ubox
70 79 0.011717306 ubox
72 76 0.003516963 ubox
72 77 0.005274085 ubox
74 78 0.010989431 ubox
75 79 0.004165795 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
51 79 0.9500000 lbox
52 78 0.9500000 lbox
53 77 0.9500000 lbox
54 76 0.9500000 lbox
55 75 0.9500000 lbox
56 74 0.9500000 lbox
61 71 0.9500000 lbox
62 70 0.9500000 lbox
63 69 0.9500000 lbox
showpage
end
%%EOF
