%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (56)
} def

/sequence { (\
GGAAAAAGAUGCGCUACGAAAGUAGCGGGACCCAUGGAAACAUGUGCUGGAAACAGCGGGACCGCAUCGGAUAUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.003564537 ubox
1 63 0.003603208 ubox
1 72 0.017292950 ubox
1 74 0.024426490 ubox
1 75 0.267901636 ubox
1 76 0.527526852 ubox
1 77 0.026827117 ubox
1 78 0.261649977 ubox
2 62 0.003583371 ubox
2 68 0.005184607 ubox
2 72 0.018920224 ubox
2 74 0.247424817 ubox
2 75 0.609163639 ubox
2 76 0.016149482 ubox
2 77 0.253967043 ubox
2 78 0.237420623 ubox
3 67 0.004663555 ubox
3 72 0.047411133 ubox
3 74 0.597034680 ubox
3 76 0.244338833 ubox
3 77 0.236489107 ubox
4 72 0.165006742 ubox
4 74 0.053359700 ubox
4 76 0.216636676 ubox
4 77 0.010923817 ubox
5 72 0.198208886 ubox
5 74 0.086166497 ubox
5 76 0.012543212 ubox
5 77 0.006717646 ubox
6 72 0.055832549 ubox
6 74 0.032363071 ubox
6 76 0.005983778 ubox
6 77 0.072448226 ubox
7 72 0.036718891 ubox
7 74 0.015401328 ubox
7 76 0.084507982 ubox
7 77 0.003387063 ubox
8 31 0.007148378 ubox
8 32 0.003375298 ubox
8 68 0.994105550 ubox
8 75 0.086726740 ubox
8 78 0.006369444 ubox
9 67 0.995209095 ubox
9 72 0.009926111 ubox
9 74 0.086248591 ubox
9 77 0.005984157 ubox
10 24 0.003285107 ubox
10 29 0.015743763 ubox
10 66 0.995314409 ubox
10 71 0.010955450 ubox
10 73 0.084132585 ubox
11 23 0.003827923 ubox
11 65 0.995755456 ubox
11 72 0.076246851 ubox
12 22 0.003905148 ubox
12 27 0.091065501 ubox
12 64 0.992951857 ubox
12 69 0.016823093 ubox
12 70 0.032650949 ubox
13 23 0.009918934 ubox
13 26 0.997837799 ubox
13 63 0.011557201 ubox
13 68 0.014772541 ubox
14 22 0.010329755 ubox
14 25 0.999037279 ubox
14 69 0.020987504 ubox
14 70 0.005655128 ubox
15 21 0.010099193 ubox
15 24 0.999258512 ubox
15 69 0.003517688 ubox
15 71 0.004769187 ubox
16 23 0.999271813 ubox
17 22 0.998983403 ubox
17 69 0.023359012 ubox
17 79 0.004092960 ubox
18 68 0.023590663 ubox
18 78 0.004304003 ubox
19 67 0.022096202 ubox
19 77 0.004250020 ubox
20 76 0.004035565 ubox
22 67 0.008154614 ubox
22 74 0.003936133 ubox
23 66 0.013175080 ubox
23 73 0.004079003 ubox
24 72 0.004031090 ubox
25 65 0.043126960 ubox
26 64 0.045551299 ubox
27 32 0.008674866 ubox
27 33 0.008379808 ubox
27 62 0.005685362 ubox
27 63 0.975756198 ubox
27 65 0.004479099 ubox
28 32 0.009263048 ubox
28 62 0.976910582 ubox
28 63 0.196969670 ubox
29 62 0.197060705 ubox
29 63 0.004559888 ubox
30 45 0.004410841 ubox
31 37 0.004000861 ubox
31 44 0.003596058 ubox
31 58 0.007071675 ubox
31 59 0.969858489 ubox
31 60 0.229635356 ubox
31 70 0.006008641 ubox
32 36 0.003998201 ubox
32 44 0.005676221 ubox
32 58 0.965227491 ubox
32 59 0.229754213 ubox
32 60 0.007658056 ubox
32 69 0.006027286 ubox
32 70 0.005275339 ubox
33 44 0.974211311 ubox
33 58 0.194891696 ubox
33 59 0.007110153 ubox
33 69 0.005283389 ubox
34 43 0.994843001 ubox
34 45 0.016740758 ubox
34 67 0.007408713 ubox
35 40 0.005950712 ubox
35 42 0.997287349 ubox
35 44 0.016731586 ubox
35 55 0.007007767 ubox
35 66 0.007522091 ubox
36 41 0.997830003 ubox
36 43 0.014633449 ubox
36 45 0.006912991 ubox
36 54 0.007059292 ubox
36 63 0.003889919 ubox
36 65 0.007499823 ubox
37 41 0.009713300 ubox
37 62 0.003893984 ubox
38 43 0.005719923 ubox
38 45 0.004143154 ubox
41 49 0.006559546 ubox
42 48 0.006141550 ubox
43 60 0.008068709 ubox
45 58 0.132321889 ubox
46 57 0.998900674 ubox
47 56 0.999929902 ubox
48 55 0.999650954 ubox
49 54 0.999227464 ubox
50 54 0.007396954 ubox
58 63 0.008366928 ubox
58 75 0.006124442 ubox
58 76 0.003737413 ubox
58 77 0.004340145 ubox
59 63 0.004720837 ubox
59 68 0.003213424 ubox
59 72 0.004137474 ubox
59 74 0.005971817 ubox
59 75 0.005199578 ubox
59 76 0.008027286 ubox
60 68 0.004839541 ubox
60 72 0.004232374 ubox
60 74 0.005010260 ubox
60 75 0.009047098 ubox
61 67 0.004580435 ubox
61 72 0.006489422 ubox
61 74 0.008965166 ubox
62 70 0.058357370 ubox
63 69 0.058815376 ubox
63 70 0.006933933 ubox
64 68 0.055186131 ubox
65 69 0.003970605 ubox
65 70 0.008124350 ubox
68 79 0.035579835 ubox
69 74 0.014162149 ubox
69 75 0.073597830 ubox
69 76 0.106222528 ubox
69 77 0.013940434 ubox
69 78 0.249162224 ubox
70 74 0.047978343 ubox
70 75 0.114778396 ubox
70 76 0.014879234 ubox
70 77 0.241395856 ubox
70 78 0.324599181 ubox
71 76 0.217911552 ubox
71 77 0.321884346 ubox
72 79 0.006551369 ubox
73 77 0.004292154 ubox
74 79 0.004803947 ubox
75 79 0.006681916 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
