%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (455)
} def

/sequence { (\
GGAAAACUACACGCCAGUCGAAAGACGUCGAAAGACGGCAAAAGAUAGCAAAAGCUAUCGUGUAGAAACUACAGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.032916186 ubox
1 8 0.016896817 ubox
1 10 0.031480111 ubox
1 12 0.014524004 ubox
1 15 0.017407713 ubox
1 69 0.125676693 ubox
1 70 0.261481932 ubox
1 72 0.244103375 ubox
1 75 0.031901007 ubox
1 76 0.027348476 ubox
1 77 0.003221844 ubox
1 78 0.096313380 ubox
2 7 0.019487629 ubox
2 10 0.007398838 ubox
2 12 0.004637060 ubox
2 14 0.017381553 ubox
2 69 0.276537570 ubox
2 70 0.055136057 ubox
2 72 0.063282321 ubox
2 75 0.031509900 ubox
2 76 0.003817967 ubox
2 77 0.094691609 ubox
2 78 0.142833214 ubox
3 8 0.004198417 ubox
3 70 0.055802289 ubox
3 76 0.089908846 ubox
3 77 0.142005889 ubox
4 70 0.034056624 ubox
4 76 0.130085565 ubox
4 77 0.010686998 ubox
5 70 0.018108567 ubox
5 76 0.012653088 ubox
5 77 0.012246701 ubox
6 18 0.008741045 ubox
6 61 0.005066964 ubox
6 70 0.024141347 ubox
6 76 0.014481718 ubox
6 77 0.005133307 ubox
7 13 0.005202090 ubox
7 17 0.009478351 ubox
7 20 0.004100345 ubox
7 24 0.003389242 ubox
7 60 0.005793426 ubox
7 65 0.978789575 ubox
7 74 0.021062242 ubox
7 79 0.004791413 ubox
8 16 0.009276645 ubox
8 23 0.003291111 ubox
8 43 0.003951422 ubox
8 64 0.988640611 ubox
8 65 0.004024066 ubox
8 73 0.017184368 ubox
8 74 0.003265140 ubox
9 18 0.007072262 ubox
9 61 0.005905470 ubox
9 63 0.989634345 ubox
10 17 0.007630713 ubox
10 20 0.004805047 ubox
10 60 0.006710822 ubox
10 62 0.989957090 ubox
10 74 0.006348489 ubox
10 79 0.004841620 ubox
11 18 0.012187495 ubox
11 61 0.989283389 ubox
11 63 0.007876019 ubox
11 77 0.003581462 ubox
12 17 0.013268276 ubox
12 20 0.005240714 ubox
12 30 0.004288232 ubox
12 37 0.005877900 ubox
12 60 0.988052673 ubox
12 62 0.008416173 ubox
12 74 0.005873123 ubox
12 79 0.007373566 ubox
13 19 0.009023958 ubox
13 26 0.003507248 ubox
13 28 0.003509186 ubox
13 29 0.005343338 ubox
13 36 0.007362423 ubox
13 39 0.954107185 ubox
13 59 0.054744635 ubox
13 61 0.008971477 ubox
13 75 0.025568889 ubox
13 78 0.005860872 ubox
14 20 0.010477955 ubox
14 24 0.004890822 ubox
14 27 0.003900994 ubox
14 37 0.003615568 ubox
14 38 0.955123183 ubox
14 60 0.009329004 ubox
14 74 0.025481785 ubox
15 20 0.019050402 ubox
15 24 0.017998394 ubox
15 27 0.005312229 ubox
15 34 0.009917198 ubox
15 37 0.953450132 ubox
15 38 0.004565577 ubox
16 28 0.007193325 ubox
16 56 0.006903316 ubox
16 76 0.005366010 ubox
17 26 0.920110695 ubox
17 36 0.325350384 ubox
17 39 0.011028816 ubox
17 46 0.009617386 ubox
17 55 0.006922386 ubox
17 75 0.005635899 ubox
18 25 0.924106838 ubox
18 31 0.174813478 ubox
18 32 0.013957111 ubox
18 33 0.004577723 ubox
18 34 0.005091996 ubox
18 35 0.322759377 ubox
18 38 0.010860582 ubox
18 45 0.011153700 ubox
18 54 0.006257202 ubox
18 74 0.005182133 ubox
19 24 0.924628623 ubox
19 27 0.005045280 ubox
19 30 0.180140867 ubox
19 34 0.320611047 ubox
19 37 0.008135340 ubox
19 44 0.012924902 ubox
19 79 0.020244704 ubox
20 26 0.010923037 ubox
20 29 0.188189481 ubox
20 36 0.006316753 ubox
20 78 0.022192266 ubox
21 28 0.177612189 ubox
21 77 0.021196602 ubox
22 28 0.008597214 ubox
22 76 0.018492055 ubox
22 77 0.006540508 ubox
23 28 0.016778495 ubox
23 76 0.008930619 ubox
24 28 0.007991813 ubox
24 29 0.240284364 ubox
24 39 0.042375984 ubox
24 75 0.010664576 ubox
26 30 0.008007505 ubox
26 37 0.114051396 ubox
26 38 0.003763794 ubox
27 36 0.899472346 ubox
27 39 0.227835981 ubox
28 35 0.900613290 ubox
28 38 0.227949991 ubox
29 34 0.900566034 ubox
29 37 0.228191284 ubox
29 38 0.003713856 ubox
30 36 0.225662260 ubox
34 78 0.003618100 ubox
35 77 0.003572449 ubox
37 76 0.011821797 ubox
38 49 0.007018943 ubox
38 63 0.004809088 ubox
38 75 0.014588327 ubox
39 44 0.007392276 ubox
39 48 0.007027232 ubox
39 62 0.004919631 ubox
39 74 0.014592407 ubox
40 61 0.005101845 ubox
41 61 0.006779372 ubox
42 61 0.011981178 ubox
43 61 0.007978201 ubox
44 58 0.004256758 ubox
44 59 0.996783986 ubox
45 58 0.999193015 ubox
46 57 0.999351679 ubox
47 56 0.999647496 ubox
48 55 0.999941824 ubox
49 54 0.998502236 ubox
60 69 0.010034013 ubox
60 72 0.008874614 ubox
60 75 0.079403806 ubox
60 78 0.006521483 ubox
61 68 0.009983424 ubox
61 71 0.008760429 ubox
61 73 0.119931551 ubox
61 74 0.046792420 ubox
62 69 0.007411237 ubox
62 70 0.005729156 ubox
62 72 0.139252535 ubox
63 68 0.007181731 ubox
63 71 0.139421853 ubox
64 70 0.139309853 ubox
64 76 0.003253297 ubox
65 69 0.136307684 ubox
65 72 0.012460242 ubox
65 75 0.005390621 ubox
65 77 0.003220053 ubox
65 78 0.096020440 ubox
66 70 0.013618300 ubox
66 76 0.009685542 ubox
66 77 0.105175379 ubox
67 76 0.104318175 ubox
67 77 0.026126643 ubox
68 76 0.027429102 ubox
68 77 0.014234842 ubox
69 74 0.078829261 ubox
69 79 0.023787077 ubox
70 74 0.011100667 ubox
70 79 0.009563613 ubox
71 76 0.012317992 ubox
71 77 0.012277384 ubox
72 79 0.059561418 ubox
73 77 0.009320957 ubox
74 78 0.038247072 ubox
75 79 0.014305907 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
