%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (42)
} def

/sequence { (\
GGAAAUCGCAGCGCCUCCUAGGAGGCCUUGGCGGGCUAACGCCCAGCUGGACCCAGCGCUGAGGCUGCAUGCCCUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.003965401 ubox
1 7 0.039482769 ubox
1 72 0.016823978 ubox
1 73 0.331028974 ubox
1 74 0.866240732 ubox
1 75 0.045080036 ubox
1 76 0.005123396 ubox
1 77 0.007418132 ubox
1 78 0.154614984 ubox
2 6 0.025674231 ubox
2 7 0.030205735 ubox
2 72 0.332383026 ubox
2 73 0.866939372 ubox
2 74 0.051552031 ubox
2 75 0.005943549 ubox
2 76 0.011387262 ubox
2 77 0.154263577 ubox
2 78 0.222163768 ubox
3 70 0.021324643 ubox
3 75 0.011759889 ubox
3 76 0.153257199 ubox
3 77 0.222433171 ubox
4 70 0.083302983 ubox
4 75 0.144196793 ubox
4 76 0.220898061 ubox
4 77 0.004133991 ubox
5 70 0.876553179 ubox
5 75 0.208579098 ubox
5 76 0.004946972 ubox
6 31 0.007457944 ubox
6 69 0.872689705 ubox
6 71 0.039585954 ubox
7 30 0.010260936 ubox
7 31 0.006883459 ubox
7 33 0.010855701 ubox
7 71 0.084037188 ubox
8 29 0.010074867 ubox
8 32 0.031952812 ubox
8 68 0.981494625 ubox
8 70 0.011151230 ubox
8 72 0.182761691 ubox
8 73 0.005169428 ubox
9 30 0.021035689 ubox
9 31 0.029266100 ubox
9 61 0.022686315 ubox
9 67 0.982042698 ubox
9 71 0.182876138 ubox
10 28 0.024133252 ubox
10 29 0.023878150 ubox
10 60 0.022845637 ubox
10 66 0.981865272 ubox
10 70 0.181255681 ubox
11 27 0.026737082 ubox
11 28 0.023005887 ubox
11 32 0.004049184 ubox
11 59 0.022875609 ubox
11 65 0.982118776 ubox
11 68 0.177570120 ubox
12 24 0.003440842 ubox
12 31 0.004044816 ubox
12 58 0.022852527 ubox
12 63 0.004083676 ubox
12 64 0.980851999 ubox
12 67 0.177678435 ubox
13 26 0.983306790 ubox
13 27 0.006544509 ubox
13 57 0.004426157 ubox
13 65 0.098184739 ubox
13 66 0.089100761 ubox
13 68 0.035471537 ubox
14 22 0.058696395 ubox
14 24 0.004590353 ubox
14 25 0.987965922 ubox
14 56 0.003918363 ubox
14 64 0.099875781 ubox
14 67 0.035304245 ubox
15 21 0.058915155 ubox
15 22 0.007968183 ubox
15 24 0.992682206 ubox
15 63 0.099881996 ubox
16 20 0.053078397 ubox
16 21 0.007365059 ubox
16 22 0.006097306 ubox
16 23 0.992569047 ubox
16 62 0.099828232 ubox
17 21 0.013002827 ubox
17 22 0.991714154 ubox
17 31 0.003570802 ubox
17 61 0.099245707 ubox
18 22 0.011586150 ubox
18 24 0.003946370 ubox
18 30 0.006515622 ubox
18 31 0.026798780 ubox
18 56 0.021705528 ubox
18 58 0.011317953 ubox
18 61 0.005795284 ubox
19 23 0.003589275 ubox
19 30 0.027113467 ubox
19 55 0.021457961 ubox
19 58 0.004758382 ubox
19 61 0.005239023 ubox
20 28 0.009432417 ubox
20 29 0.026945193 ubox
20 60 0.024032916 ubox
21 27 0.010754558 ubox
21 28 0.026693800 ubox
21 53 0.009712749 ubox
21 54 0.020574419 ubox
21 57 0.078062551 ubox
21 59 0.025773070 ubox
21 60 0.004747553 ubox
22 26 0.010591847 ubox
22 27 0.026602002 ubox
22 52 0.009699689 ubox
22 53 0.020322704 ubox
22 54 0.029405070 ubox
22 57 0.023797126 ubox
22 59 0.004791296 ubox
23 66 0.006104216 ubox
24 48 0.003790260 ubox
24 52 0.019564468 ubox
24 53 0.058589427 ubox
24 54 0.070707622 ubox
24 60 0.007320882 ubox
24 65 0.004582824 ubox
24 66 0.058001566 ubox
25 32 0.007094688 ubox
25 47 0.003853870 ubox
25 52 0.059640784 ubox
25 53 0.069884931 ubox
25 54 0.003453669 ubox
25 59 0.007409839 ubox
25 65 0.117387533 ubox
26 31 0.007086109 ubox
26 46 0.003283953 ubox
26 50 0.067375919 ubox
26 58 0.007412295 ubox
26 64 0.138184497 ubox
27 46 0.004270835 ubox
27 49 0.067266994 ubox
27 50 0.023869731 ubox
27 56 0.005093668 ubox
27 61 0.005964111 ubox
27 63 0.988132179 ubox
27 64 0.004064733 ubox
28 45 0.010378990 ubox
28 49 0.018819957 ubox
28 50 0.054283219 ubox
28 51 0.004935853 ubox
28 55 0.004903800 ubox
28 62 0.990886767 ubox
28 63 0.007706820 ubox
29 45 0.011382724 ubox
29 49 0.060563635 ubox
29 50 0.004139229 ubox
29 61 0.986854368 ubox
29 62 0.008412321 ubox
30 43 0.043418165 ubox
30 44 0.010090690 ubox
30 47 0.014452352 ubox
30 48 0.091423065 ubox
30 53 0.004157942 ubox
30 60 0.988134532 ubox
31 42 0.044136570 ubox
31 43 0.007313375 ubox
31 47 0.095986856 ubox
31 52 0.004154846 ubox
31 59 0.992208345 ubox
32 41 0.044678865 ubox
32 46 0.095999832 ubox
32 50 0.004355294 ubox
32 58 0.991184388 ubox
33 40 0.044584166 ubox
33 43 0.005629896 ubox
33 44 0.997036686 ubox
33 54 0.013791236 ubox
33 57 0.016697458 ubox
33 74 0.032752997 ubox
34 42 0.005174515 ubox
34 43 0.998231964 ubox
34 44 0.004752976 ubox
34 48 0.004485008 ubox
34 53 0.015270107 ubox
34 73 0.034059683 ubox
35 42 0.998233098 ubox
35 43 0.003599554 ubox
35 47 0.004513376 ubox
35 52 0.015275452 ubox
35 72 0.034078267 ubox
36 41 0.996528112 ubox
36 46 0.004516747 ubox
36 50 0.015249048 ubox
36 71 0.034060695 ubox
37 41 0.005557332 ubox
37 45 0.004399948 ubox
37 49 0.015214561 ubox
37 69 0.005546727 ubox
38 48 0.014305604 ubox
39 66 0.007360628 ubox
40 46 0.012280533 ubox
40 67 0.019527442 ubox
41 47 0.008185611 ubox
41 65 0.033987784 ubox
41 66 0.004135621 ubox
42 46 0.008148711 ubox
42 64 0.034273985 ubox
43 63 0.034299189 ubox
44 58 0.005348090 ubox
44 61 0.042990076 ubox
45 60 0.042477383 ubox
46 57 0.992980130 ubox
46 59 0.038226107 ubox
47 56 0.994358241 ubox
47 58 0.036677970 ubox
48 55 0.994022475 ubox
48 56 0.005995212 ubox
48 58 0.004328875 ubox
49 53 0.015947204 ubox
49 54 0.990813648 ubox
49 57 0.020737791 ubox
49 73 0.003705258 ubox
50 54 0.016904054 ubox
50 57 0.006020085 ubox
50 72 0.003737286 ubox
52 63 0.004390048 ubox
52 64 0.004100129 ubox
53 63 0.005350454 ubox
54 61 0.008470504 ubox
54 67 0.012084396 ubox
55 60 0.007650139 ubox
55 66 0.016009498 ubox
56 65 0.016373222 ubox
57 63 0.003475971 ubox
57 64 0.016363867 ubox
58 65 0.008200380 ubox
59 63 0.004135684 ubox
59 64 0.008188029 ubox
61 74 0.010887379 ubox
61 76 0.003249597 ubox
62 75 0.005629960 ubox
63 73 0.029156666 ubox
63 74 0.005058113 ubox
64 72 0.029613742 ubox
64 73 0.003802827 ubox
65 71 0.029796605 ubox
69 75 0.003502345 ubox
69 76 0.008464576 ubox
69 77 0.005136992 ubox
70 79 0.011827464 ubox
71 78 0.019083720 ubox
72 79 0.008654371 ubox
73 79 0.007444462 ubox
74 79 0.017507546 ubox
75 79 0.005793914 ubox
1 74 0.9500000 lbox
2 73 0.9500000 lbox
5 70 0.9500000 lbox
6 69 0.9500000 lbox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
29 61 0.9500000 lbox
30 60 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
