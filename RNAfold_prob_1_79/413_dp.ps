%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (413)
} def

/sequence { (\
GGAAAAGAUAGUGCGAUGUACAAAGUAUAUCCUAGCAAAGCUAGCUAUUCGAAGAAUAGGUAUUGUCGGUAUAUGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 67 0.003505839 ubox
1 70 0.035598183 ubox
1 72 0.078424529 ubox
1 74 0.067232947 ubox
1 76 0.020817420 ubox
1 77 0.012033467 ubox
1 78 0.285886053 ubox
2 50 0.010309636 ubox
2 67 0.006542167 ubox
2 70 0.074049842 ubox
2 72 0.099665098 ubox
2 74 0.025252364 ubox
2 76 0.017940527 ubox
2 77 0.285067610 ubox
2 78 0.398074265 ubox
3 49 0.010301427 ubox
3 66 0.005494978 ubox
3 70 0.070101976 ubox
3 72 0.068648676 ubox
3 74 0.028896068 ubox
3 76 0.281280715 ubox
3 77 0.398217589 ubox
4 48 0.009877321 ubox
4 70 0.288024353 ubox
4 72 0.051935980 ubox
4 74 0.034666372 ubox
4 76 0.384602391 ubox
4 77 0.008997935 ubox
5 70 0.100043910 ubox
5 72 0.020999985 ubox
5 74 0.026844308 ubox
5 76 0.008627761 ubox
5 77 0.012071444 ubox
6 46 0.009997561 ubox
6 70 0.034822621 ubox
6 72 0.033948623 ubox
6 74 0.067941372 ubox
6 76 0.014461966 ubox
6 77 0.004253307 ubox
7 45 0.010084359 ubox
7 49 0.005268908 ubox
7 67 0.997820356 ubox
7 70 0.003261781 ubox
7 72 0.003839873 ubox
7 74 0.003734315 ubox
7 77 0.007596784 ubox
7 78 0.006764977 ubox
8 48 0.005869544 ubox
8 66 0.999002854 ubox
8 72 0.027483862 ubox
8 74 0.010677356 ubox
8 76 0.008458698 ubox
8 77 0.006215630 ubox
9 43 0.009015280 ubox
9 47 0.006179245 ubox
9 65 0.998757634 ubox
9 71 0.028051608 ubox
9 73 0.010845903 ubox
9 75 0.008814296 ubox
10 42 0.010075961 ubox
10 46 0.006198938 ubox
10 64 0.997499529 ubox
10 70 0.027942481 ubox
10 72 0.008963791 ubox
10 74 0.008518191 ubox
11 21 0.003814414 ubox
11 41 0.010090064 ubox
11 45 0.006171941 ubox
11 63 0.998328123 ubox
11 72 0.012363865 ubox
11 74 0.004164313 ubox
11 78 0.003250554 ubox
12 20 0.003818770 ubox
12 37 0.006283814 ubox
12 40 0.008256964 ubox
12 44 0.003441802 ubox
12 62 0.998798513 ubox
12 68 0.027169042 ubox
12 71 0.014434759 ubox
12 73 0.003999148 ubox
13 19 0.003817415 ubox
13 32 0.004056183 ubox
13 36 0.010259524 ubox
13 61 0.998868033 ubox
13 66 0.004498233 ubox
13 67 0.026850632 ubox
13 70 0.014857070 ubox
13 76 0.003771916 ubox
14 18 0.003794922 ubox
14 35 0.010255933 ubox
14 59 0.003867424 ubox
14 60 0.998351288 ubox
14 65 0.023397199 ubox
14 68 0.006879594 ubox
14 69 0.014711277 ubox
14 75 0.003870591 ubox
15 30 0.003744489 ubox
15 31 0.997060778 ubox
15 32 0.009477851 ubox
15 64 0.005916075 ubox
15 67 0.006974459 ubox
16 30 0.999203394 ubox
16 63 0.005273535 ubox
16 66 0.006891799 ubox
17 29 0.998991338 ubox
17 62 0.004732113 ubox
17 65 0.006104943 ubox
17 73 0.003594767 ubox
18 28 0.999375655 ubox
18 61 0.003487241 ubox
18 63 0.005326577 ubox
18 64 0.004011604 ubox
18 72 0.003617395 ubox
19 27 0.999558679 ubox
19 62 0.006922354 ubox
19 71 0.003620815 ubox
20 26 0.998593235 ubox
20 61 0.007065020 ubox
20 70 0.003620617 ubox
21 25 0.988825531 ubox
21 60 0.007084929 ubox
21 69 0.003615565 ubox
25 74 0.003393848 ubox
26 73 0.003623597 ubox
27 72 0.003649856 ubox
28 71 0.003653199 ubox
29 70 0.003643342 ubox
30 69 0.003421674 ubox
31 68 0.003404529 ubox
32 40 0.004785190 ubox
32 44 0.986802816 ubox
33 39 0.004730092 ubox
33 43 0.998306181 ubox
33 44 0.004370333 ubox
33 47 0.007563651 ubox
34 42 0.999335724 ubox
34 46 0.008386248 ubox
35 41 0.999675132 ubox
35 45 0.008881665 ubox
35 66 0.005762612 ubox
36 40 0.992408367 ubox
36 44 0.009121883 ubox
36 65 0.005944546 ubox
37 64 0.005909391 ubox
38 63 0.005703734 ubox
42 62 0.006465162 ubox
43 61 0.007132082 ubox
45 51 0.003971917 ubox
45 54 0.013829421 ubox
45 59 0.995233231 ubox
46 53 0.013462989 ubox
46 58 0.998757365 ubox
46 59 0.003716715 ubox
47 57 0.998873135 ubox
48 55 0.010110796 ubox
48 56 0.998338810 ubox
49 54 0.013013599 ubox
49 55 0.997700879 ubox
49 56 0.004051864 ubox
50 54 0.989540986 ubox
50 59 0.011877736 ubox
54 78 0.012617950 ubox
55 77 0.012632606 ubox
56 76 0.012631307 ubox
57 75 0.012600231 ubox
58 74 0.012433131 ubox
60 67 0.005112527 ubox
60 72 0.011900992 ubox
61 71 0.013264265 ubox
62 70 0.013283596 ubox
63 69 0.013084135 ubox
64 68 0.009637085 ubox
67 75 0.006395409 ubox
67 79 0.020833532 ubox
68 72 0.009145147 ubox
68 74 0.024811503 ubox
68 76 0.016234070 ubox
68 77 0.023533082 ubox
68 78 0.163336499 ubox
69 74 0.012702280 ubox
69 76 0.023424884 ubox
69 77 0.156105809 ubox
69 78 0.123263025 ubox
70 75 0.015638090 ubox
70 79 0.009125524 ubox
71 76 0.021498341 ubox
71 77 0.032466282 ubox
72 79 0.011246975 ubox
73 77 0.007210760 ubox
74 79 0.009701621 ubox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
45 59 0.9500000 lbox
46 58 0.9500000 lbox
47 57 0.9500000 lbox
48 56 0.9500000 lbox
49 55 0.9500000 lbox
50 54 0.9500000 lbox
showpage
end
%%EOF
