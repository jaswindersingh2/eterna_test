%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (318)
} def

/sequence { (\
GGAAAGGGUGUGGAAAAAACCACGAGAAACUCAACCCACUCAGUGAAAAACACUGGCAAAAGCCAGAGCGGGAUAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.008230800 ubox
1 21 0.003892883 ubox
1 30 0.048980587 ubox
1 31 0.056952686 ubox
1 32 0.184023476 ubox
1 35 0.008110979 ubox
1 36 0.013260064 ubox
1 37 0.029608133 ubox
1 39 0.005118440 ubox
1 40 0.024153476 ubox
1 41 0.043219513 ubox
1 44 0.004655262 ubox
1 51 0.004156552 ubox
1 64 0.015592672 ubox
1 69 0.016238844 ubox
1 74 0.005939590 ubox
1 76 0.003908728 ubox
1 77 0.006972824 ubox
1 78 0.259634272 ubox
2 9 0.007811650 ubox
2 20 0.003878510 ubox
2 23 0.003702674 ubox
2 30 0.075423171 ubox
2 31 0.163672546 ubox
2 32 0.186945074 ubox
2 35 0.014313621 ubox
2 36 0.029592027 ubox
2 39 0.032048352 ubox
2 40 0.035064169 ubox
2 41 0.193771290 ubox
2 63 0.015421375 ubox
2 69 0.008266066 ubox
2 74 0.006225866 ubox
2 76 0.007173258 ubox
2 77 0.251458503 ubox
2 78 0.373124000 ubox
3 9 0.009179486 ubox
3 31 0.181678501 ubox
3 40 0.192960887 ubox
3 74 0.010280833 ubox
3 76 0.233418244 ubox
3 77 0.368916438 ubox
4 9 0.012966664 ubox
4 31 0.011689461 ubox
4 40 0.005596344 ubox
4 74 0.024105697 ubox
4 76 0.321866488 ubox
4 77 0.024917268 ubox
5 9 0.010053530 ubox
5 31 0.136536299 ubox
5 40 0.005627668 ubox
5 74 0.056401816 ubox
5 76 0.028169044 ubox
5 77 0.013733203 ubox
6 21 0.020902865 ubox
6 23 0.037954662 ubox
6 30 0.147921097 ubox
6 31 0.029433604 ubox
6 32 0.666505918 ubox
6 36 0.005199441 ubox
6 37 0.268164695 ubox
6 39 0.004585792 ubox
6 41 0.014513532 ubox
6 74 0.044819347 ubox
6 76 0.014246600 ubox
6 77 0.009863846 ubox
6 78 0.227809050 ubox
7 20 0.020713653 ubox
7 21 0.068729804 ubox
7 23 0.008184706 ubox
7 30 0.032735377 ubox
7 31 0.669542856 ubox
7 32 0.034308365 ubox
7 35 0.005369928 ubox
7 36 0.268542480 ubox
7 37 0.005294416 ubox
7 40 0.014576738 ubox
7 74 0.026445606 ubox
7 76 0.009505322 ubox
7 77 0.225652462 ubox
7 78 0.063067261 ubox
8 20 0.068864404 ubox
8 21 0.004715567 ubox
8 23 0.052539886 ubox
8 30 0.670702599 ubox
8 31 0.025854722 ubox
8 32 0.009889466 ubox
8 35 0.268500541 ubox
8 36 0.005206834 ubox
8 39 0.014601608 ubox
8 69 0.003703049 ubox
8 74 0.061470844 ubox
8 76 0.220220756 ubox
8 77 0.046347255 ubox
8 78 0.021989648 ubox
9 18 0.009544757 ubox
9 19 0.068017401 ubox
9 22 0.052207659 ubox
9 24 0.508368349 ubox
9 25 0.057264341 ubox
9 26 0.016353980 ubox
9 27 0.033559560 ubox
9 28 0.038239008 ubox
9 29 0.590187806 ubox
9 33 0.010993156 ubox
9 34 0.257912544 ubox
9 38 0.014220535 ubox
9 68 0.003468333 ubox
9 73 0.061719818 ubox
9 75 0.212760947 ubox
9 79 0.003330741 ubox
10 20 0.012720278 ubox
10 21 0.051027905 ubox
10 23 0.992401100 ubox
10 32 0.006328915 ubox
10 37 0.010497195 ubox
10 74 0.065692676 ubox
11 16 0.016802353 ubox
11 17 0.024185000 ubox
11 18 0.013900617 ubox
11 19 0.015406075 ubox
11 22 0.993256481 ubox
11 24 0.004009864 ubox
11 25 0.005917712 ubox
11 26 0.003502865 ubox
11 27 0.005965300 ubox
11 33 0.004296240 ubox
11 73 0.061357253 ubox
12 20 0.048514974 ubox
12 21 0.995471386 ubox
12 23 0.008144552 ubox
12 30 0.004285372 ubox
12 32 0.004615312 ubox
12 36 0.008402376 ubox
13 20 0.991688610 ubox
13 21 0.005788434 ubox
13 23 0.006472388 ubox
13 30 0.003427652 ubox
13 31 0.003773332 ubox
13 35 0.008373736 ubox
23 79 0.011048580 ubox
24 30 0.025159403 ubox
24 31 0.006908644 ubox
24 32 0.556257712 ubox
24 41 0.005617731 ubox
24 77 0.003234693 ubox
24 78 0.027816423 ubox
25 31 0.556698712 ubox
25 40 0.005631913 ubox
25 76 0.003885947 ubox
25 77 0.027494123 ubox
26 30 0.544605067 ubox
26 31 0.009103059 ubox
26 32 0.104428807 ubox
26 39 0.005606245 ubox
26 76 0.023344410 ubox
26 77 0.005287360 ubox
26 78 0.120861315 ubox
27 31 0.090969036 ubox
27 74 0.004208721 ubox
27 76 0.006002418 ubox
27 77 0.120216817 ubox
28 74 0.007555842 ubox
28 76 0.111322963 ubox
28 77 0.015487716 ubox
29 74 0.010186414 ubox
29 76 0.018347357 ubox
29 77 0.007626916 ubox
30 72 0.007010836 ubox
30 79 0.009997558 ubox
31 71 0.006694848 ubox
31 73 0.041942421 ubox
31 75 0.028313337 ubox
32 70 0.006650734 ubox
32 72 0.025350819 ubox
32 79 0.005904796 ubox
33 74 0.183586060 ubox
33 76 0.033249934 ubox
33 77 0.037528473 ubox
34 74 0.153898951 ubox
34 76 0.041052144 ubox
34 77 0.013688292 ubox
35 71 0.015313451 ubox
35 72 0.957160131 ubox
36 70 0.014536845 ubox
36 71 0.961740019 ubox
36 72 0.027417986 ubox
37 45 0.021756872 ubox
37 68 0.003561694 ubox
37 70 0.961561605 ubox
37 71 0.027241279 ubox
38 44 0.025735337 ubox
38 74 0.008271551 ubox
39 43 0.025883527 ubox
39 45 0.018380300 ubox
39 56 0.019286878 ubox
39 62 0.004029606 ubox
39 66 0.005877346 ubox
39 68 0.962081167 ubox
39 70 0.006817998 ubox
39 71 0.009875145 ubox
39 72 0.056102733 ubox
39 79 0.004649608 ubox
40 46 0.019672957 ubox
40 47 0.003392611 ubox
40 56 0.047253048 ubox
40 61 0.003442852 ubox
40 65 0.005337086 ubox
40 67 0.961279273 ubox
40 70 0.008855173 ubox
40 71 0.056309437 ubox
40 72 0.008707406 ubox
40 73 0.013260875 ubox
40 79 0.003978539 ubox
41 45 0.021339428 ubox
41 55 0.075840802 ubox
41 66 0.949223271 ubox
41 68 0.008944191 ubox
41 70 0.056047597 ubox
41 71 0.010788123 ubox
41 72 0.014152056 ubox
41 79 0.007286928 ubox
42 54 0.701816082 ubox
42 76 0.004395765 ubox
42 77 0.048077737 ubox
43 51 0.276052586 ubox
43 53 0.917119709 ubox
43 69 0.032233900 ubox
43 74 0.014566770 ubox
43 76 0.057517039 ubox
43 77 0.003822725 ubox
43 78 0.013454798 ubox
44 48 0.004604582 ubox
44 49 0.023855286 ubox
44 50 0.274911897 ubox
44 52 0.918697214 ubox
44 67 0.013827233 ubox
44 68 0.030840284 ubox
44 70 0.009712026 ubox
44 73 0.014848375 ubox
44 75 0.058045035 ubox
44 79 0.037596972 ubox
45 51 0.916960629 ubox
45 53 0.016596167 ubox
45 69 0.012201818 ubox
45 74 0.054087149 ubox
45 76 0.004025082 ubox
45 77 0.004951879 ubox
45 78 0.064247595 ubox
46 74 0.005286447 ubox
46 76 0.005532088 ubox
46 77 0.064008901 ubox
47 54 0.003876749 ubox
47 74 0.006017309 ubox
47 76 0.059505220 ubox
48 74 0.018533852 ubox
48 76 0.003286100 ubox
49 54 0.003304729 ubox
49 74 0.017654516 ubox
50 74 0.004067477 ubox
51 68 0.090893321 ubox
51 70 0.057282100 ubox
51 71 0.030462418 ubox
51 72 0.014646221 ubox
53 66 0.291879677 ubox
53 68 0.011477563 ubox
53 70 0.005736907 ubox
53 71 0.004614500 ubox
53 72 0.004285638 ubox
54 65 0.669947054 ubox
54 67 0.007824308 ubox
54 70 0.003486820 ubox
54 71 0.004265585 ubox
55 64 0.996386676 ubox
56 63 0.997504996 ubox
56 64 0.003362516 ubox
56 69 0.016043864 ubox
56 78 0.006928207 ubox
57 62 0.996101050 ubox
57 66 0.003822916 ubox
57 68 0.016078166 ubox
57 72 0.007507421 ubox
58 76 0.003167311 ubox
58 77 0.007054579 ubox
59 76 0.007310142 ubox
59 77 0.003616406 ubox
60 74 0.010524985 ubox
60 76 0.003566789 ubox
61 74 0.008039725 ubox
62 69 0.030289551 ubox
62 74 0.006695981 ubox
63 68 0.030223852 ubox
63 71 0.034971540 ubox
63 72 0.036943377 ubox
64 70 0.035196630 ubox
64 71 0.037162481 ubox
66 77 0.005705266 ubox
66 78 0.018952420 ubox
67 74 0.012070065 ubox
67 76 0.008872636 ubox
67 77 0.018969230 ubox
68 74 0.003634618 ubox
68 76 0.016281757 ubox
68 78 0.007121414 ubox
69 79 0.106388654 ubox
70 74 0.004494915 ubox
70 76 0.006660139 ubox
70 77 0.009048310 ubox
70 78 0.114952024 ubox
71 76 0.011707223 ubox
71 77 0.106578839 ubox
71 78 0.047486232 ubox
72 76 0.069271340 ubox
72 77 0.037762334 ubox
72 78 0.050372246 ubox
73 77 0.044625593 ubox
74 79 0.009279693 ubox
6 32 0.9500000 lbox
7 31 0.9500000 lbox
8 30 0.9500000 lbox
9 29 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
35 72 0.9500000 lbox
36 71 0.9500000 lbox
37 70 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
42 54 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
showpage
end
%%EOF
