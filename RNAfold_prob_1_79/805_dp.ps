%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (805)
} def

/sequence { (\
GGAAAAAAGAGAAAGAGAAACACAAAGGAGAUUCCGAAAAGAGAACUCACUUUGGUUUCCUAUUCCUACUUUUUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 66 0.008814913 ubox
1 73 0.005835431 ubox
1 74 0.031519839 ubox
1 75 0.278244932 ubox
1 76 0.696494651 ubox
1 77 0.041810634 ubox
1 78 0.413914420 ubox
2 65 0.008825268 ubox
2 72 0.008507623 ubox
2 73 0.048053047 ubox
2 74 0.278480765 ubox
2 75 0.804388713 ubox
2 76 0.039881950 ubox
2 77 0.406900014 ubox
2 78 0.237319561 ubox
3 64 0.008692061 ubox
3 71 0.008718643 ubox
3 72 0.051139692 ubox
3 73 0.277635904 ubox
3 74 0.790075162 ubox
3 76 0.399760611 ubox
3 77 0.234354710 ubox
4 63 0.007827777 ubox
4 70 0.008125554 ubox
4 71 0.053318126 ubox
4 72 0.275120975 ubox
4 73 0.773641733 ubox
4 74 0.454643107 ubox
4 76 0.181307282 ubox
4 77 0.006445138 ubox
5 70 0.053664348 ubox
5 71 0.270117523 ubox
5 72 0.756879763 ubox
5 73 0.512690110 ubox
5 74 0.060000989 ubox
5 76 0.006102518 ubox
5 77 0.003967268 ubox
6 70 0.251472014 ubox
6 71 0.736820047 ubox
6 72 0.543469041 ubox
6 73 0.058256136 ubox
6 74 0.112351710 ubox
6 77 0.008922369 ubox
7 67 0.019587025 ubox
7 70 0.663562946 ubox
7 71 0.567980611 ubox
7 72 0.052560706 ubox
7 73 0.119168423 ubox
7 74 0.005485536 ubox
7 76 0.007332458 ubox
7 77 0.134654020 ubox
8 61 0.003373616 ubox
8 67 0.612903284 ubox
8 70 0.590641013 ubox
8 71 0.041250696 ubox
8 72 0.118962659 ubox
8 73 0.005722010 ubox
8 76 0.153613060 ubox
8 77 0.003398201 ubox
9 60 0.003406994 ubox
9 64 0.003645948 ubox
9 65 0.050303615 ubox
9 66 0.641161787 ubox
9 67 0.090053552 ubox
9 69 0.610336645 ubox
9 70 0.025952978 ubox
9 71 0.119134180 ubox
9 72 0.005813524 ubox
9 75 0.157073171 ubox
9 77 0.038083857 ubox
9 78 0.016095673 ubox
10 63 0.005248326 ubox
10 64 0.053470777 ubox
10 67 0.526733724 ubox
10 70 0.118998462 ubox
10 71 0.005762251 ubox
10 74 0.156979040 ubox
10 76 0.042058306 ubox
10 77 0.011490753 ubox
11 63 0.047193974 ubox
11 64 0.149542971 ubox
11 65 0.859741376 ubox
11 66 0.432478321 ubox
11 67 0.012312863 ubox
11 69 0.108963866 ubox
11 73 0.156657992 ubox
11 75 0.043890075 ubox
12 61 0.003247634 ubox
12 63 0.173523142 ubox
12 64 0.909769197 ubox
12 67 0.023484880 ubox
12 71 0.003349196 ubox
12 72 0.156689835 ubox
12 74 0.043883200 ubox
13 61 0.016314741 ubox
13 63 0.878557467 ubox
13 64 0.199833613 ubox
13 67 0.055413487 ubox
13 70 0.003627416 ubox
13 71 0.156457376 ubox
13 73 0.043789168 ubox
14 61 0.872089655 ubox
14 63 0.192422020 ubox
14 64 0.022707868 ubox
14 67 0.017303542 ubox
14 70 0.153504910 ubox
14 72 0.043085234 ubox
15 59 0.008546928 ubox
15 60 0.887538749 ubox
15 61 0.201799432 ubox
15 63 0.024055844 ubox
15 64 0.021312493 ubox
15 65 0.084030823 ubox
15 66 0.016424672 ubox
15 69 0.150978747 ubox
15 71 0.042724716 ubox
16 58 0.008391401 ubox
16 61 0.164321672 ubox
16 63 0.025772654 ubox
16 64 0.084728358 ubox
16 67 0.068478113 ubox
16 70 0.042383607 ubox
17 57 0.005779145 ubox
17 58 0.008693423 ubox
17 59 0.990367993 ubox
17 60 0.121043091 ubox
17 63 0.013326488 ubox
17 65 0.017794500 ubox
17 66 0.043569978 ubox
17 67 0.004042305 ubox
17 69 0.028200364 ubox
18 56 0.003510441 ubox
18 57 0.007917721 ubox
18 58 0.998824800 ubox
18 64 0.018704821 ubox
18 67 0.003630893 ubox
19 56 0.005941115 ubox
19 57 0.998194525 ubox
19 58 0.013741778 ubox
19 63 0.013535131 ubox
19 64 0.004733581 ubox
19 67 0.003504766 ubox
20 56 0.998923706 ubox
20 57 0.014831168 ubox
20 63 0.003990817 ubox
21 55 0.998021642 ubox
23 54 0.998035617 ubox
24 52 0.006288546 ubox
24 53 0.999138759 ubox
24 63 0.003557996 ubox
25 51 0.006885546 ubox
25 52 0.998464090 ubox
26 51 0.999127753 ubox
26 52 0.003760572 ubox
26 61 0.013035601 ubox
27 50 0.998030810 ubox
27 51 0.004043950 ubox
27 60 0.013531870 ubox
28 48 0.996213898 ubox
28 50 0.004675303 ubox
28 59 0.013531202 ubox
29 47 0.997074109 ubox
29 58 0.013503451 ubox
30 46 0.996577456 ubox
30 47 0.027930138 ubox
30 48 0.058767399 ubox
30 57 0.013254684 ubox
31 47 0.058426132 ubox
31 56 0.012221228 ubox
32 41 0.003511858 ubox
32 42 0.012308819 ubox
32 43 0.138839271 ubox
32 44 0.146162480 ubox
32 45 0.962243813 ubox
32 55 0.003566544 ubox
33 40 0.003708668 ubox
33 41 0.011350607 ubox
33 42 0.158339095 ubox
33 43 0.134355398 ubox
33 44 0.973381997 ubox
33 45 0.009581799 ubox
34 41 0.159891590 ubox
34 43 0.973301777 ubox
34 55 0.013198555 ubox
35 41 0.841504712 ubox
35 43 0.049584712 ubox
35 54 0.013472544 ubox
36 53 0.013383298 ubox
37 52 0.013254481 ubox
38 51 0.012731372 ubox
40 47 0.003261132 ubox
40 51 0.003351028 ubox
41 46 0.003302141 ubox
41 48 0.012314985 ubox
41 50 0.003555650 ubox
42 47 0.011530062 ubox
61 68 0.013726287 ubox
62 67 0.013738241 ubox
63 68 0.007243063 ubox
1 76 0.9500000 lbox
2 75 0.9500000 lbox
3 74 0.9500000 lbox
4 73 0.9500000 lbox
5 72 0.9500000 lbox
6 71 0.9500000 lbox
7 70 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 41 0.9500000 lbox
showpage
end
%%EOF
