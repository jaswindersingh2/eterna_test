%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1044)
} def

/sequence { (\
GGAAAAGGCAAAGCCAGGUGCAAAGCACAGGUGUCAAAGACACAAGGUCAAAGACCAACGGAAACCGAAUAUAGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.040576532 ubox
1 15 0.021734943 ubox
1 21 0.059324732 ubox
1 28 0.003565365 ubox
1 41 0.012631766 ubox
1 43 0.006333913 ubox
1 56 0.014382704 ubox
1 59 0.047412505 ubox
1 65 0.020688696 ubox
1 66 0.206867504 ubox
1 70 0.009474905 ubox
1 72 0.010124807 ubox
1 75 0.064065970 ubox
1 76 0.087706925 ubox
1 77 0.015257344 ubox
1 78 0.472240880 ubox
2 9 0.025061656 ubox
2 14 0.021696268 ubox
2 19 0.003816348 ubox
2 21 0.011784699 ubox
2 41 0.004051528 ubox
2 55 0.013997922 ubox
2 59 0.029149224 ubox
2 65 0.206415746 ubox
2 66 0.019534059 ubox
2 70 0.010319169 ubox
2 72 0.011120343 ubox
2 75 0.100867036 ubox
2 76 0.019147753 ubox
2 77 0.460038488 ubox
2 78 0.682213158 ubox
3 19 0.055041460 ubox
3 70 0.015968821 ubox
3 72 0.017326297 ubox
3 76 0.432520802 ubox
3 77 0.674834365 ubox
4 19 0.003390934 ubox
4 70 0.016536007 ubox
4 72 0.026711623 ubox
4 76 0.598511427 ubox
4 77 0.045201221 ubox
5 19 0.003822501 ubox
5 70 0.018282939 ubox
5 72 0.038127316 ubox
5 76 0.050647645 ubox
5 77 0.048733381 ubox
6 70 0.018740991 ubox
6 72 0.033246666 ubox
6 76 0.054858908 ubox
6 77 0.268038138 ubox
7 14 0.016984980 ubox
7 15 0.895526349 ubox
7 28 0.005195320 ubox
7 35 0.050203072 ubox
7 56 0.005249309 ubox
7 59 0.005969720 ubox
7 65 0.003242986 ubox
7 66 0.022980465 ubox
7 75 0.040089359 ubox
7 76 0.337163175 ubox
7 77 0.008062376 ubox
7 78 0.040552126 ubox
8 14 0.896872144 ubox
8 15 0.007553791 ubox
8 19 0.003301186 ubox
8 21 0.030885318 ubox
8 26 0.009349321 ubox
8 34 0.050467462 ubox
8 35 0.003639186 ubox
8 55 0.005236283 ubox
8 59 0.004273303 ubox
8 65 0.023011314 ubox
8 72 0.004061521 ubox
8 75 0.351369232 ubox
8 77 0.028953770 ubox
8 78 0.050835189 ubox
9 13 0.890362550 ubox
9 17 0.008629597 ubox
9 18 0.003460825 ubox
9 20 0.030963009 ubox
9 25 0.009355815 ubox
9 33 0.050503563 ubox
9 53 0.004408868 ubox
9 74 0.351624653 ubox
9 79 0.076394678 ubox
10 19 0.030208368 ubox
10 32 0.030037063 ubox
10 34 0.005139963 ubox
10 70 0.006859701 ubox
10 72 0.034801710 ubox
10 77 0.018116307 ubox
11 34 0.009730801 ubox
11 70 0.012385761 ubox
11 72 0.050615432 ubox
11 76 0.013832654 ubox
11 77 0.218130042 ubox
12 32 0.009130934 ubox
12 34 0.003945610 ubox
12 70 0.013821932 ubox
12 72 0.011730618 ubox
12 76 0.243459078 ubox
12 77 0.004829631 ubox
13 19 0.003213864 ubox
13 21 0.018239869 ubox
13 26 0.008837418 ubox
13 32 0.150620254 ubox
13 34 0.009017999 ubox
13 48 0.007506045 ubox
13 70 0.014501096 ubox
13 72 0.008965135 ubox
13 75 0.246768986 ubox
14 18 0.003693581 ubox
14 20 0.018154936 ubox
14 25 0.008808677 ubox
14 30 0.043899052 ubox
14 31 0.178424867 ubox
14 33 0.009672197 ubox
14 47 0.008008999 ubox
14 61 0.032393629 ubox
14 67 0.006865798 ubox
14 74 0.245694958 ubox
15 30 0.239621318 ubox
15 31 0.033557564 ubox
15 46 0.008013943 ubox
15 60 0.032433022 ubox
15 67 0.008862442 ubox
15 74 0.015480743 ubox
16 70 0.012896875 ubox
16 72 0.047572693 ubox
16 76 0.068509326 ubox
16 77 0.017328234 ubox
17 21 0.003802869 ubox
17 26 0.021043150 ubox
17 28 0.054141394 ubox
17 56 0.034109548 ubox
17 59 0.022426719 ubox
17 65 0.012798541 ubox
17 66 0.028195446 ubox
17 70 0.010279584 ubox
17 72 0.011392686 ubox
17 75 0.073951293 ubox
17 76 0.019330205 ubox
17 77 0.006805630 ubox
17 78 0.045227228 ubox
18 26 0.028939439 ubox
18 28 0.988552041 ubox
18 55 0.034094806 ubox
18 65 0.024842050 ubox
18 70 0.005247218 ubox
18 75 0.015883004 ubox
18 77 0.020829862 ubox
18 78 0.008835262 ubox
19 24 0.018179233 ubox
19 25 0.028723300 ubox
19 27 0.991234840 ubox
19 29 0.006422824 ubox
19 54 0.033856899 ubox
19 64 0.022918583 ubox
19 69 0.005035835 ubox
19 73 0.006119510 ubox
19 74 0.013922967 ubox
19 79 0.010810702 ubox
20 26 0.992242346 ubox
20 28 0.007335130 ubox
20 72 0.004696763 ubox
20 75 0.027952969 ubox
20 78 0.018220488 ubox
21 25 0.985031091 ubox
21 30 0.007102310 ubox
21 53 0.009313289 ubox
21 61 0.005177800 ubox
21 74 0.027944071 ubox
21 79 0.024181753 ubox
22 77 0.007015798 ubox
23 72 0.004068264 ubox
23 76 0.005329129 ubox
23 77 0.090314286 ubox
24 76 0.100317082 ubox
25 48 0.030065536 ubox
25 49 0.009086781 ubox
25 59 0.004773737 ubox
25 75 0.101724788 ubox
26 30 0.003598721 ubox
26 47 0.030865955 ubox
26 74 0.101622939 ubox
27 48 0.005421439 ubox
27 72 0.008452978 ubox
28 46 0.028423776 ubox
28 47 0.005468687 ubox
29 70 0.005489552 ubox
29 72 0.005509390 ubox
29 76 0.035599360 ubox
29 77 0.007849879 ubox
30 43 0.050220579 ubox
30 56 0.014100732 ubox
30 59 0.012148473 ubox
30 65 0.006277349 ubox
30 66 0.010866309 ubox
30 70 0.005683601 ubox
30 72 0.005195317 ubox
30 75 0.039711773 ubox
30 76 0.008813245 ubox
30 78 0.018428953 ubox
31 41 0.012494592 ubox
31 43 0.979464438 ubox
31 55 0.013986779 ubox
31 56 0.008160110 ubox
31 59 0.003170813 ubox
31 65 0.009517842 ubox
31 75 0.006933693 ubox
32 40 0.012480610 ubox
32 42 0.985497213 ubox
32 44 0.011691104 ubox
32 54 0.013713352 ubox
32 64 0.008751021 ubox
32 73 0.003394612 ubox
32 74 0.005875911 ubox
33 41 0.996718028 ubox
33 43 0.018626004 ubox
33 55 0.033102045 ubox
33 56 0.003489218 ubox
34 38 0.006331069 ubox
34 39 0.008385593 ubox
34 40 0.995983701 ubox
34 42 0.017854285 ubox
34 52 0.010313747 ubox
34 54 0.033488332 ubox
34 62 0.004031957 ubox
35 39 0.987608066 ubox
35 53 0.033518581 ubox
35 61 0.004245664 ubox
37 77 0.006627897 ubox
38 76 0.007380102 ubox
39 43 0.004840316 ubox
39 49 0.037997050 ubox
39 75 0.007476308 ubox
39 78 0.004346787 ubox
40 48 0.038059624 ubox
40 77 0.004120712 ubox
41 47 0.037974376 ubox
41 60 0.003372325 ubox
41 61 0.005708409 ubox
41 74 0.004980216 ubox
43 60 0.006157444 ubox
43 61 0.004503339 ubox
44 70 0.003765056 ubox
44 72 0.003731440 ubox
44 77 0.003893829 ubox
45 70 0.004430802 ubox
45 72 0.004399728 ubox
45 76 0.004344436 ubox
46 55 0.007946928 ubox
46 56 0.997116461 ubox
46 66 0.011660913 ubox
47 55 0.998184613 ubox
47 56 0.004306938 ubox
47 65 0.011680584 ubox
48 53 0.008296499 ubox
48 54 0.997418947 ubox
48 64 0.011049622 ubox
49 53 0.989024309 ubox
49 61 0.003266755 ubox
51 77 0.004575106 ubox
52 76 0.005262054 ubox
53 59 0.008169617 ubox
53 75 0.005459287 ubox
57 70 0.042820123 ubox
57 72 0.013155116 ubox
57 77 0.003509095 ubox
58 70 0.039945203 ubox
58 72 0.020488490 ubox
58 76 0.004593442 ubox
59 67 0.928090078 ubox
59 74 0.015993794 ubox
59 79 0.047255681 ubox
60 65 0.069579111 ubox
60 66 0.946507794 ubox
60 70 0.004890268 ubox
60 72 0.004241486 ubox
60 75 0.019526085 ubox
60 76 0.009565927 ubox
60 78 0.049591330 ubox
61 65 0.931276422 ubox
61 66 0.040630097 ubox
61 70 0.004755749 ubox
61 75 0.012159493 ubox
61 77 0.048721677 ubox
61 78 0.042828537 ubox
62 70 0.005096320 ubox
62 72 0.004039524 ubox
62 76 0.046852139 ubox
62 77 0.043011189 ubox
63 70 0.008080702 ubox
63 72 0.010709845 ubox
63 76 0.040652822 ubox
63 77 0.005433573 ubox
64 70 0.005291645 ubox
64 72 0.006376749 ubox
64 76 0.007109653 ubox
65 74 0.039977542 ubox
65 79 0.007624865 ubox
66 74 0.039747460 ubox
66 79 0.144369286 ubox
67 72 0.008494548 ubox
67 75 0.032189218 ubox
67 76 0.004825401 ubox
67 77 0.007094845 ubox
67 78 0.210434880 ubox
68 72 0.026888706 ubox
68 76 0.012974516 ubox
68 77 0.210508148 ubox
69 76 0.187270103 ubox
69 77 0.010553937 ubox
70 74 0.021207081 ubox
71 76 0.011118063 ubox
71 77 0.010036180 ubox
72 79 0.003385427 ubox
73 77 0.003226802 ubox
74 78 0.009752665 ubox
75 79 0.003682422 ubox
2 78 0.9500000 lbox
3 77 0.9500000 lbox
4 76 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
showpage
end
%%EOF
