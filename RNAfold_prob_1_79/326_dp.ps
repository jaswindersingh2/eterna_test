%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (326)
} def

/sequence { (\
GGAAACGAGCAUGAAAAAACAUGUUGAAACAAACUCGACAGACCCAAAAAGGGGUGCAAAAGCACCUGCUCUGGUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.017827926 ubox
1 30 0.009683594 ubox
1 34 0.003513569 ubox
1 77 0.009937793 ubox
1 78 0.246634170 ubox
2 30 0.005964105 ubox
2 75 0.003173756 ubox
2 76 0.015555926 ubox
2 77 0.242377399 ubox
2 78 0.965247004 ubox
3 75 0.016753906 ubox
3 76 0.239774520 ubox
3 77 0.967026870 ubox
4 75 0.159512249 ubox
4 76 0.966589272 ubox
5 72 0.017070232 ubox
5 75 0.966125964 ubox
6 26 0.014256411 ubox
6 37 0.010986307 ubox
6 73 0.265106944 ubox
6 74 0.948250579 ubox
6 79 0.008273335 ubox
7 25 0.010192128 ubox
7 30 0.003489228 ubox
7 36 0.012443409 ubox
7 71 0.984323319 ubox
7 72 0.053882189 ubox
7 78 0.008666890 ubox
8 24 0.008517485 ubox
8 25 0.058464727 ubox
8 35 0.012260154 ubox
8 70 0.992246130 ubox
8 72 0.093113392 ubox
8 76 0.003223765 ubox
8 77 0.007119992 ubox
9 24 0.066111478 ubox
9 34 0.010747478 ubox
9 69 0.994471407 ubox
9 71 0.076561588 ubox
9 75 0.004008933 ubox
9 76 0.004136743 ubox
10 23 0.072237367 ubox
10 51 0.003703535 ubox
10 68 0.994556363 ubox
10 74 0.004605218 ubox
11 22 0.194593747 ubox
11 67 0.868336921 ubox
11 70 0.017504585 ubox
12 16 0.018746659 ubox
12 17 0.080734315 ubox
12 18 0.074436005 ubox
12 19 0.080729354 ubox
12 21 0.353393028 ubox
12 31 0.004452064 ubox
12 37 0.004090068 ubox
12 40 0.003759043 ubox
12 41 0.004298432 ubox
12 42 0.003663112 ubox
12 46 0.023465674 ubox
12 47 0.007483196 ubox
12 48 0.011114141 ubox
12 49 0.016732090 ubox
12 50 0.025543665 ubox
12 51 0.012275975 ubox
12 52 0.004126396 ubox
12 64 0.014116823 ubox
12 68 0.009206564 ubox
13 20 0.389503949 ubox
13 22 0.008916922 ubox
13 30 0.004717344 ubox
13 36 0.006665098 ubox
13 39 0.003751131 ubox
13 43 0.010059576 ubox
13 44 0.004576125 ubox
13 45 0.025959231 ubox
13 63 0.014311012 ubox
13 65 0.066096027 ubox
13 66 0.315183136 ubox
13 67 0.013175100 ubox
13 69 0.016175283 ubox
13 71 0.005898082 ubox
13 78 0.003715429 ubox
14 22 0.013149274 ubox
14 25 0.003745303 ubox
14 35 0.006551532 ubox
14 67 0.011704142 ubox
14 70 0.005855794 ubox
14 77 0.003679186 ubox
15 22 0.019730993 ubox
15 24 0.003731159 ubox
15 67 0.007156362 ubox
15 76 0.003423122 ubox
16 22 0.015478842 ubox
16 67 0.004850958 ubox
17 22 0.016804266 ubox
17 67 0.003505217 ubox
18 22 0.010364588 ubox
18 25 0.003296281 ubox
20 26 0.005713743 ubox
20 37 0.016812436 ubox
20 41 0.366589160 ubox
20 51 0.003662330 ubox
20 56 0.004177418 ubox
21 25 0.004655232 ubox
21 35 0.004609104 ubox
22 31 0.024813182 ubox
22 40 0.893655273 ubox
22 41 0.014265876 ubox
22 42 0.008737843 ubox
23 30 0.028060891 ubox
23 34 0.068518797 ubox
23 39 0.993782084 ubox
23 43 0.006555013 ubox
24 29 0.025959008 ubox
24 32 0.012184629 ubox
24 33 0.068515184 ubox
24 38 0.993950906 ubox
24 41 0.005110383 ubox
24 42 0.006443964 ubox
25 31 0.015267445 ubox
25 32 0.067714889 ubox
25 37 0.993454852 ubox
25 40 0.006578351 ubox
25 41 0.006121139 ubox
25 79 0.005234891 ubox
26 30 0.016614150 ubox
26 34 0.007774405 ubox
26 35 0.003170211 ubox
26 36 0.994358991 ubox
26 39 0.006962390 ubox
26 78 0.019257811 ubox
27 35 0.966053995 ubox
27 77 0.019208315 ubox
28 35 0.072171785 ubox
28 76 0.018846094 ubox
29 35 0.009841374 ubox
29 75 0.018474035 ubox
30 37 0.010753102 ubox
30 74 0.018115104 ubox
30 79 0.004954463 ubox
31 35 0.003798044 ubox
31 77 0.015939309 ubox
32 76 0.018222884 ubox
33 75 0.019045810 ubox
34 41 0.010627698 ubox
34 73 0.004564110 ubox
34 74 0.019225036 ubox
35 40 0.009884873 ubox
35 42 0.059172675 ubox
35 73 0.018825302 ubox
36 41 0.064040292 ubox
36 51 0.003483560 ubox
36 73 0.004254935 ubox
36 79 0.020088761 ubox
37 43 0.004100859 ubox
37 44 0.004412930 ubox
37 45 0.003421807 ubox
37 69 0.007035623 ubox
37 71 0.022899747 ubox
37 78 0.022105292 ubox
38 70 0.022861689 ubox
38 77 0.020491965 ubox
39 68 0.025317918 ubox
39 73 0.047256356 ubox
39 79 0.005547046 ubox
40 67 0.026398013 ubox
40 72 0.047373967 ubox
40 77 0.017183122 ubox
41 45 0.021961773 ubox
41 55 0.004820739 ubox
41 57 0.018161305 ubox
41 66 0.027726453 ubox
41 71 0.047398527 ubox
41 76 0.028219235 ubox
41 77 0.004914892 ubox
41 78 0.006904518 ubox
42 55 0.117245823 ubox
42 70 0.045205058 ubox
42 75 0.029536200 ubox
42 76 0.005611612 ubox
42 77 0.006629847 ubox
43 51 0.035079355 ubox
43 52 0.473731874 ubox
43 53 0.638046659 ubox
43 54 0.128546936 ubox
43 68 0.015301024 ubox
43 74 0.028468404 ubox
44 51 0.475030077 ubox
44 52 0.818379295 ubox
44 53 0.137000040 ubox
44 68 0.021449879 ubox
44 73 0.027176383 ubox
44 74 0.019173525 ubox
45 51 0.820610319 ubox
45 52 0.142911124 ubox
45 68 0.008332800 ubox
45 73 0.023957905 ubox
46 67 0.006033480 ubox
46 72 0.024665179 ubox
47 70 0.006369202 ubox
47 72 0.004644110 ubox
48 70 0.005689279 ubox
48 72 0.005215472 ubox
49 70 0.012768943 ubox
50 67 0.006303759 ubox
50 70 0.031595835 ubox
50 72 0.005434258 ubox
51 66 0.005641458 ubox
51 67 0.015196821 ubox
51 69 0.034002239 ubox
51 70 0.003285932 ubox
51 71 0.005633468 ubox
52 65 0.005049528 ubox
52 66 0.016543636 ubox
52 67 0.241225501 ubox
52 69 0.003484220 ubox
52 70 0.003173261 ubox
53 65 0.012297646 ubox
53 66 0.755336492 ubox
53 67 0.005391638 ubox
54 63 0.011105573 ubox
54 65 0.988869594 ubox
54 66 0.025977128 ubox
55 62 0.011006642 ubox
55 64 0.991826931 ubox
56 63 0.999052463 ubox
56 69 0.012091360 ubox
57 62 0.997631128 ubox
57 68 0.012115928 ubox
58 67 0.011918996 ubox
61 70 0.012314118 ubox
62 66 0.003285456 ubox
62 69 0.013098656 ubox
63 68 0.013084173 ubox
66 73 0.005626361 ubox
72 79 0.003662382 ubox
73 78 0.006578948 ubox
2 78 0.9500000 lbox
3 77 0.9500000 lbox
4 76 0.9500000 lbox
5 75 0.9500000 lbox
6 74 0.9500000 lbox
7 71 0.9500000 lbox
8 70 0.9500000 lbox
9 69 0.9500000 lbox
10 68 0.9500000 lbox
11 67 0.9500000 lbox
22 40 0.9500000 lbox
23 39 0.9500000 lbox
24 38 0.9500000 lbox
25 37 0.9500000 lbox
26 36 0.9500000 lbox
27 35 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
showpage
end
%%EOF
