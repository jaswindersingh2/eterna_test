%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (69)
} def

/sequence { (\
GGAAAAAGAUGACAAUCGAAAGAUUGCCAAGGGAUCAAAAGAUCACUACAAAAGUAGCCGAGGUCAUCGAUCGAGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.024510954 ubox
1 13 0.064774226 ubox
1 28 0.012920430 ubox
1 58 0.003745780 ubox
1 59 0.037866455 ubox
1 72 0.025830063 ubox
1 76 0.004453209 ubox
1 77 0.004273255 ubox
1 78 0.108235331 ubox
2 10 0.006730270 ubox
2 13 0.015938603 ubox
2 27 0.012903464 ubox
2 58 0.037961374 ubox
2 71 0.023435785 ubox
2 72 0.080678111 ubox
2 76 0.006094112 ubox
2 77 0.105987435 ubox
2 78 0.147183998 ubox
3 10 0.023273431 ubox
3 71 0.078984389 ubox
3 76 0.101581595 ubox
3 77 0.145779733 ubox
4 10 0.041073551 ubox
4 71 0.010822757 ubox
4 76 0.133678850 ubox
4 77 0.006832780 ubox
5 10 0.021087775 ubox
5 71 0.027224311 ubox
5 76 0.007177408 ubox
5 77 0.004445271 ubox
6 10 0.011559240 ubox
6 71 0.016137602 ubox
6 76 0.003878018 ubox
6 77 0.005390928 ubox
7 16 0.004908083 ubox
7 71 0.008624731 ubox
7 76 0.004719942 ubox
7 77 0.005351079 ubox
8 13 0.034809256 ubox
8 17 0.041105551 ubox
8 28 0.004130018 ubox
8 58 0.004075449 ubox
8 65 0.003235139 ubox
8 68 0.198312240 ubox
8 72 0.101315832 ubox
8 76 0.003440725 ubox
8 77 0.048252475 ubox
8 78 0.204330116 ubox
9 16 0.043412227 ubox
9 67 0.198730319 ubox
9 71 0.099977975 ubox
9 76 0.053137950 ubox
9 77 0.189018587 ubox
10 14 0.004149212 ubox
10 15 0.045448802 ubox
10 29 0.072032317 ubox
10 30 0.004680699 ubox
10 66 0.198960305 ubox
10 69 0.018464126 ubox
10 70 0.091285499 ubox
10 73 0.005713771 ubox
10 75 0.055065103 ubox
10 79 0.489072951 ubox
11 17 0.007223689 ubox
11 27 0.038204642 ubox
11 28 0.094564516 ubox
11 65 0.199115848 ubox
11 68 0.031408595 ubox
11 72 0.006863251 ubox
11 76 0.015230338 ubox
11 77 0.324061195 ubox
11 78 0.792840656 ubox
12 16 0.006432774 ubox
12 64 0.193286863 ubox
12 67 0.028762698 ubox
12 71 0.006193398 ubox
12 76 0.397958561 ubox
12 77 0.762299536 ubox
13 26 0.172054138 ubox
13 62 0.004088907 ubox
13 63 0.163584233 ubox
13 73 0.015184518 ubox
13 75 0.427594985 ubox
13 79 0.047367897 ubox
14 25 0.183345109 ubox
14 76 0.175352363 ubox
14 77 0.092068236 ubox
15 24 0.185489284 ubox
15 43 0.009549999 ubox
15 71 0.023254891 ubox
15 76 0.105918086 ubox
15 77 0.016273849 ubox
16 23 0.185935487 ubox
16 42 0.010686585 ubox
16 61 0.147701440 ubox
16 70 0.025081634 ubox
16 74 0.946704029 ubox
16 75 0.056510914 ubox
17 22 0.185964075 ubox
17 26 0.004169582 ubox
17 41 0.010891305 ubox
17 60 0.148777384 ubox
17 69 0.025332646 ubox
17 73 0.969362834 ubox
17 79 0.008303896 ubox
18 25 0.004486013 ubox
18 58 0.009826674 ubox
18 59 0.147196172 ubox
18 68 0.024434388 ubox
18 72 0.970247803 ubox
18 78 0.011486875 ubox
19 24 0.005246721 ubox
19 25 0.008310513 ubox
19 55 0.003415068 ubox
19 67 0.023551969 ubox
19 71 0.960305293 ubox
19 77 0.011424413 ubox
20 24 0.006659473 ubox
20 25 0.005414453 ubox
20 55 0.010415306 ubox
20 71 0.021291419 ubox
20 76 0.010038233 ubox
21 55 0.009267911 ubox
22 27 0.012985241 ubox
22 28 0.021001895 ubox
22 36 0.051163300 ubox
22 44 0.010498617 ubox
22 55 0.011038049 ubox
22 58 0.016229556 ubox
22 65 0.012343325 ubox
22 68 0.970043457 ubox
22 72 0.012462434 ubox
23 35 0.051207223 ubox
23 43 0.010502561 ubox
23 55 0.062665411 ubox
23 64 0.009995356 ubox
23 67 0.969352689 ubox
23 71 0.012501666 ubox
24 30 0.004982752 ubox
24 31 0.012139617 ubox
24 32 0.006420726 ubox
24 34 0.050944198 ubox
24 42 0.010406773 ubox
24 51 0.025264734 ubox
24 52 0.010215416 ubox
24 53 0.042586837 ubox
24 54 0.062823883 ubox
24 57 0.016828488 ubox
24 63 0.007400204 ubox
24 66 0.935109078 ubox
24 70 0.012551330 ubox
25 29 0.004817729 ubox
25 30 0.015766178 ubox
25 31 0.008481914 ubox
25 32 0.008977569 ubox
25 33 0.050070563 ubox
25 34 0.004890848 ubox
25 41 0.010116888 ubox
25 50 0.028152599 ubox
25 51 0.010579446 ubox
25 52 0.042562724 ubox
25 53 0.061064158 ubox
25 56 0.017509921 ubox
25 62 0.006798447 ubox
25 66 0.109547602 ubox
25 69 0.012277863 ubox
26 49 0.028617173 ubox
26 55 0.017666370 ubox
26 58 0.005899671 ubox
26 64 0.951357751 ubox
26 65 0.149803962 ubox
26 68 0.008251554 ubox
27 31 0.045250736 ubox
27 32 0.057882138 ubox
27 33 0.012318487 ubox
27 54 0.017639004 ubox
27 57 0.005615881 ubox
27 60 0.003327665 ubox
27 62 0.006982853 ubox
27 63 0.977249118 ubox
28 32 0.016853992 ubox
28 60 0.003949198 ubox
28 62 0.976825374 ubox
28 63 0.006705257 ubox
30 47 0.067000597 ubox
31 36 0.004875061 ubox
31 44 0.003609597 ubox
31 46 0.069487014 ubox
31 47 0.060336889 ubox
31 58 0.010063881 ubox
31 59 0.973667339 ubox
32 44 0.011487857 ubox
32 46 0.063540819 ubox
32 49 0.003222239 ubox
32 58 0.971082893 ubox
32 59 0.024192353 ubox
33 43 0.006831034 ubox
33 44 0.995887376 ubox
33 58 0.015918982 ubox
33 72 0.012341685 ubox
34 43 0.997394027 ubox
34 71 0.012369982 ubox
35 42 0.997436008 ubox
35 70 0.012377084 ubox
36 41 0.996031367 ubox
36 54 0.004920226 ubox
36 69 0.012356467 ubox
38 67 0.003282972 ubox
41 46 0.003290526 ubox
41 65 0.012240028 ubox
42 64 0.012250205 ubox
43 61 0.009102786 ubox
43 63 0.012063716 ubox
44 60 0.010377540 ubox
44 62 0.011888816 ubox
45 55 0.075070454 ubox
46 54 0.078833278 ubox
46 57 0.984109267 ubox
47 52 0.004800675 ubox
47 53 0.077041788 ubox
47 56 0.990066183 ubox
47 57 0.003374955 ubox
48 55 0.990500300 ubox
49 54 0.988836442 ubox
49 57 0.008572283 ubox
54 78 0.005120533 ubox
56 77 0.007152228 ubox
57 64 0.005537535 ubox
57 76 0.008827551 ubox
58 62 0.006062273 ubox
58 63 0.013126684 ubox
58 69 0.003733191 ubox
58 75 0.011006346 ubox
59 69 0.092974535 ubox
59 73 0.016043456 ubox
59 75 0.015272769 ubox
59 79 0.061687331 ubox
60 65 0.003956343 ubox
60 68 0.094111392 ubox
60 72 0.016114918 ubox
60 78 0.076716093 ubox
61 67 0.093154356 ubox
61 71 0.015709572 ubox
61 77 0.076702510 ubox
62 68 0.004194294 ubox
62 72 0.022764941 ubox
62 76 0.075538885 ubox
63 68 0.008181554 ubox
63 71 0.023040377 ubox
64 70 0.023406372 ubox
64 74 0.076490004 ubox
65 69 0.023324900 ubox
65 73 0.076508603 ubox
66 71 0.008514039 ubox
67 74 0.004427341 ubox
68 73 0.004732604 ubox
68 79 0.015734683 ubox
69 77 0.008908353 ubox
69 78 0.081499268 ubox
70 76 0.009975841 ubox
70 77 0.080414719 ubox
71 75 0.009734749 ubox
72 79 0.028545739 ubox
73 78 0.032873153 ubox
11 78 0.9500000 lbox
12 77 0.9500000 lbox
16 74 0.9500000 lbox
17 73 0.9500000 lbox
18 72 0.9500000 lbox
19 71 0.9500000 lbox
22 68 0.9500000 lbox
23 67 0.9500000 lbox
24 66 0.9500000 lbox
26 64 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
