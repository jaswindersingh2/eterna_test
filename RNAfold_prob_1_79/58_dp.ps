%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (58)
} def

/sequence { (\
GGAAAAAUGUGCCCUUGAACACAAGGCGGUCCGAGCAACAGCUCAGUCGCACACGACGGGUCGGCACAACGUACAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.010079657 ubox
1 13 0.007318136 ubox
1 14 0.003428862 ubox
1 32 0.036239794 ubox
1 70 0.018042090 ubox
1 72 0.012621960 ubox
1 74 0.178930898 ubox
1 76 0.017070892 ubox
1 77 0.009229669 ubox
1 78 0.229475053 ubox
2 8 0.003256926 ubox
2 12 0.007354210 ubox
2 13 0.003480520 ubox
2 31 0.036262873 ubox
2 70 0.026272656 ubox
2 72 0.027662837 ubox
2 74 0.124811858 ubox
2 76 0.012055051 ubox
2 77 0.219209121 ubox
2 78 0.306906421 ubox
3 8 0.007450665 ubox
3 30 0.033801702 ubox
3 72 0.074143755 ubox
3 76 0.202130515 ubox
3 77 0.295835621 ubox
4 8 0.004434113 ubox
4 72 0.135349068 ubox
4 76 0.224622660 ubox
4 77 0.024071210 ubox
5 72 0.060198222 ubox
5 76 0.021009296 ubox
5 77 0.034615117 ubox
6 72 0.077709137 ubox
6 76 0.029929908 ubox
6 77 0.509592019 ubox
7 30 0.010655358 ubox
7 72 0.084858767 ubox
7 76 0.594375958 ubox
7 77 0.012599432 ubox
8 21 0.005568843 ubox
8 23 0.026072851 ubox
8 28 0.004865974 ubox
8 29 0.014136837 ubox
8 53 0.074997608 ubox
8 55 0.003215252 ubox
8 66 0.006253368 ubox
8 68 0.699973163 ubox
8 69 0.033060194 ubox
8 71 0.068097140 ubox
8 73 0.005985822 ubox
8 75 0.626185985 ubox
9 20 0.006400354 ubox
9 22 0.028883841 ubox
9 27 0.006144548 ubox
9 31 0.007568278 ubox
9 32 0.010228336 ubox
9 50 0.003306178 ubox
9 52 0.086244544 ubox
9 54 0.007539342 ubox
9 65 0.007083337 ubox
9 67 0.767554868 ubox
9 70 0.050118433 ubox
9 74 0.629000212 ubox
9 76 0.004123204 ubox
10 19 0.006364025 ubox
10 21 0.028885424 ubox
10 28 0.038505547 ubox
10 29 0.009620356 ubox
10 49 0.003222021 ubox
10 51 0.086249603 ubox
10 53 0.007594169 ubox
10 64 0.006736116 ubox
10 66 0.768064195 ubox
10 68 0.009331171 ubox
10 69 0.041547116 ubox
10 73 0.628571913 ubox
10 75 0.004493630 ubox
11 20 0.028870259 ubox
11 27 0.058221177 ubox
11 30 0.014233592 ubox
11 50 0.086194467 ubox
11 52 0.007573158 ubox
11 61 0.008559845 ubox
11 65 0.768781345 ubox
11 67 0.012680532 ubox
11 70 0.003594102 ubox
11 72 0.627658886 ubox
11 74 0.004375103 ubox
12 26 0.048146098 ubox
12 28 0.027160632 ubox
12 29 0.015350462 ubox
12 49 0.084893531 ubox
12 60 0.010060167 ubox
12 63 0.006104532 ubox
12 64 0.767575524 ubox
12 71 0.626267293 ubox
13 17 0.004848507 ubox
13 25 0.036767443 ubox
13 26 0.821633248 ubox
13 28 0.013365074 ubox
13 29 0.003687363 ubox
13 59 0.010897306 ubox
13 60 0.012563751 ubox
13 63 0.490876313 ubox
13 64 0.009067969 ubox
13 71 0.013979039 ubox
14 25 0.965619104 ubox
14 26 0.024009703 ubox
14 28 0.004148518 ubox
14 35 0.021026393 ubox
14 58 0.011361450 ubox
14 59 0.017421824 ubox
14 60 0.195098645 ubox
14 63 0.009927812 ubox
15 23 0.003357101 ubox
15 24 0.967790836 ubox
15 25 0.023773084 ubox
15 34 0.021301871 ubox
15 56 0.008053036 ubox
15 58 0.015429204 ubox
15 59 0.197046252 ubox
15 60 0.017183716 ubox
15 68 0.004879726 ubox
15 69 0.036497392 ubox
16 21 0.003191036 ubox
16 23 0.967313440 ubox
16 24 0.023892440 ubox
16 25 0.004384512 ubox
16 28 0.004490121 ubox
16 33 0.021326328 ubox
16 55 0.008411956 ubox
16 58 0.195861379 ubox
16 59 0.018904233 ubox
16 60 0.025490913 ubox
16 63 0.007272247 ubox
16 66 0.004833907 ubox
16 68 0.038881185 ubox
16 69 0.003840831 ubox
17 22 0.961959729 ubox
17 27 0.005693968 ubox
17 31 0.007580124 ubox
17 32 0.022601686 ubox
17 54 0.008470718 ubox
17 57 0.193820692 ubox
17 61 0.011725395 ubox
17 62 0.047523993 ubox
17 65 0.004323182 ubox
17 67 0.038853201 ubox
17 70 0.004067983 ubox
18 30 0.006087033 ubox
18 61 0.041687667 ubox
19 30 0.023100391 ubox
19 61 0.015337591 ubox
20 25 0.019117565 ubox
20 26 0.004146017 ubox
20 28 0.006518548 ubox
20 29 0.024000875 ubox
20 55 0.069953555 ubox
20 58 0.019544393 ubox
20 59 0.032412444 ubox
20 60 0.019905125 ubox
20 64 0.005411336 ubox
21 30 0.008489358 ubox
21 61 0.004912807 ubox
22 26 0.005010358 ubox
22 28 0.013340734 ubox
22 29 0.008973688 ubox
22 55 0.039869820 ubox
22 58 0.013497949 ubox
22 59 0.009097508 ubox
22 60 0.005338991 ubox
25 31 0.003485278 ubox
25 32 0.026109281 ubox
25 50 0.008552325 ubox
25 52 0.075061301 ubox
25 54 0.019591705 ubox
25 57 0.005013976 ubox
25 62 0.013557467 ubox
25 65 0.058560964 ubox
25 67 0.017996939 ubox
26 30 0.003339829 ubox
26 31 0.026993235 ubox
26 32 0.014620240 ubox
26 36 0.066551320 ubox
26 39 0.015002374 ubox
26 42 0.004479357 ubox
26 50 0.429149482 ubox
26 52 0.005501552 ubox
26 61 0.017888849 ubox
26 62 0.014827568 ubox
26 65 0.235031734 ubox
26 67 0.005931605 ubox
26 70 0.020806093 ubox
27 33 0.017487144 ubox
27 35 0.066703667 ubox
27 41 0.004600195 ubox
27 49 0.431286680 ubox
27 55 0.005016298 ubox
27 58 0.004044167 ubox
27 59 0.007747680 ubox
27 60 0.018398834 ubox
27 63 0.779365250 ubox
27 64 0.245520583 ubox
27 71 0.004584045 ubox
28 32 0.024976243 ubox
28 36 0.006981802 ubox
28 39 0.004855774 ubox
28 48 0.432433699 ubox
28 50 0.009007005 ubox
28 52 0.004021257 ubox
28 54 0.005072474 ubox
28 61 0.006805472 ubox
28 62 0.813024828 ubox
28 65 0.009930407 ubox
28 67 0.053765142 ubox
28 70 0.012145340 ubox
29 36 0.019354587 ubox
29 39 0.006961543 ubox
29 47 0.416070227 ubox
29 48 0.067027881 ubox
29 50 0.006500426 ubox
29 52 0.005346841 ubox
29 57 0.008105961 ubox
29 61 0.774472786 ubox
29 62 0.264549420 ubox
29 65 0.045812460 ubox
29 67 0.079934060 ubox
29 70 0.018121213 ubox
30 34 0.003604003 ubox
30 35 0.018365621 ubox
30 38 0.006764889 ubox
30 45 0.019283370 ubox
30 46 0.054490650 ubox
30 49 0.006314458 ubox
30 51 0.005274228 ubox
30 56 0.008121003 ubox
30 59 0.009626752 ubox
30 60 0.756703184 ubox
30 63 0.005246575 ubox
30 64 0.029042296 ubox
30 66 0.079844693 ubox
30 69 0.017577205 ubox
31 46 0.411657511 ubox
31 55 0.007925687 ubox
31 58 0.010582641 ubox
31 59 0.797175070 ubox
31 60 0.322279797 ubox
31 63 0.026785280 ubox
31 64 0.101084511 ubox
32 46 0.047126834 ubox
32 49 0.004000208 ubox
32 58 0.796527525 ubox
32 59 0.321877159 ubox
32 60 0.006699049 ubox
32 63 0.101262203 ubox
32 64 0.003201940 ubox
33 39 0.003225467 ubox
33 44 0.990490340 ubox
33 57 0.018282799 ubox
33 62 0.092236632 ubox
33 67 0.012496655 ubox
34 43 0.992074855 ubox
34 61 0.067596126 ubox
35 39 0.004212589 ubox
35 42 0.992647740 ubox
35 50 0.006815293 ubox
35 61 0.005560359 ubox
35 65 0.030078942 ubox
35 67 0.003247500 ubox
36 41 0.991232675 ubox
36 49 0.006825403 ubox
36 59 0.025933236 ubox
36 60 0.010219255 ubox
36 64 0.030078583 ubox
38 47 0.006809579 ubox
39 46 0.006903069 ubox
39 58 0.006445276 ubox
39 60 0.003820376 ubox
39 63 0.018692223 ubox
39 64 0.004072889 ubox
40 61 0.004854877 ubox
41 50 0.009872837 ubox
41 61 0.097157535 ubox
41 62 0.018315408 ubox
41 65 0.004130938 ubox
42 49 0.009883570 ubox
42 58 0.005372611 ubox
42 59 0.005708870 ubox
42 60 0.114608699 ubox
42 64 0.004129900 ubox
43 58 0.005250846 ubox
43 59 0.114485079 ubox
43 60 0.019522421 ubox
43 63 0.003863298 ubox
44 58 0.113672498 ubox
44 59 0.027011715 ubox
44 60 0.006264135 ubox
45 61 0.009401203 ubox
46 52 0.008381194 ubox
46 54 0.008545101 ubox
46 57 0.882917212 ubox
46 62 0.005134356 ubox
46 65 0.143853506 ubox
46 67 0.023828159 ubox
46 70 0.008684536 ubox
47 51 0.007562652 ubox
47 53 0.008210160 ubox
47 56 0.884424948 ubox
47 59 0.011161234 ubox
47 64 0.143958063 ubox
47 66 0.023691739 ubox
47 69 0.008578344 ubox
48 55 0.884779199 ubox
48 58 0.016151167 ubox
48 60 0.005196325 ubox
48 63 0.144294584 ubox
48 64 0.003408807 ubox
49 54 0.861889576 ubox
49 57 0.016596665 ubox
49 61 0.007963811 ubox
49 62 0.144028770 ubox
49 65 0.037488396 ubox
49 67 0.004576978 ubox
50 55 0.014506368 ubox
50 58 0.006074594 ubox
50 59 0.006378135 ubox
50 60 0.034283728 ubox
50 63 0.005148253 ubox
50 64 0.037594063 ubox
51 61 0.188333942 ubox
52 58 0.052564473 ubox
52 59 0.079780167 ubox
52 60 0.195321474 ubox
52 63 0.022579577 ubox
52 64 0.025241807 ubox
53 61 0.177874541 ubox
53 72 0.004586583 ubox
54 58 0.039090876 ubox
54 59 0.205028919 ubox
54 60 0.189367285 ubox
54 63 0.089204656 ubox
54 71 0.005283126 ubox
54 79 0.084360627 ubox
55 61 0.005300625 ubox
55 62 0.149078122 ubox
55 65 0.007359937 ubox
55 70 0.007389744 ubox
55 74 0.003840314 ubox
55 78 0.088793011 ubox
56 61 0.132232846 ubox
56 72 0.007630372 ubox
56 76 0.003871700 ubox
56 77 0.087439143 ubox
57 63 0.014017319 ubox
57 64 0.007531233 ubox
57 71 0.008007276 ubox
57 79 0.012968325 ubox
58 62 0.024513241 ubox
58 65 0.025241759 ubox
58 67 0.033589307 ubox
58 70 0.017942047 ubox
58 74 0.006743916 ubox
58 76 0.007957665 ubox
58 78 0.017397969 ubox
59 65 0.022779571 ubox
59 67 0.019239730 ubox
59 70 0.014713662 ubox
59 74 0.096607340 ubox
59 76 0.004024542 ubox
59 77 0.016279911 ubox
60 65 0.011980297 ubox
60 67 0.027997492 ubox
60 70 0.024734641 ubox
60 72 0.005611802 ubox
60 74 0.032739504 ubox
60 76 0.014553890 ubox
61 66 0.025664766 ubox
61 68 0.003399809 ubox
61 69 0.024110332 ubox
61 73 0.032562551 ubox
61 75 0.013931039 ubox
62 71 0.105527102 ubox
63 67 0.014828860 ubox
63 70 0.127366969 ubox
63 74 0.005604481 ubox
64 70 0.095738045 ubox
64 72 0.019749656 ubox
65 71 0.020866718 ubox
68 72 0.003172581 ubox
68 77 0.009495582 ubox
69 76 0.012758084 ubox
69 77 0.006470993 ubox
70 79 0.293357223 ubox
71 76 0.007808593 ubox
71 77 0.014801584 ubox
71 78 0.305904672 ubox
72 79 0.007573205 ubox
73 77 0.018595932 ubox
74 79 0.033137978 ubox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
29 61 0.9500000 lbox
30 60 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
