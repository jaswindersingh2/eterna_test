%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (390)
} def

/sequence { (\
GGAAAAUAUAUAUAUAUAUGAAAAUAUAUAUAUAUACUAAUGUAUAUAUAUAUACAUAUAUAUAUAUAUAUAUAGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 38 0.003846991 ubox
1 71 0.004180419 ubox
1 73 0.018713783 ubox
1 76 0.008969838 ubox
1 77 0.009911189 ubox
1 78 0.839115697 ubox
2 37 0.004083251 ubox
2 71 0.014583468 ubox
2 73 0.024048066 ubox
2 76 0.014057511 ubox
2 77 0.840154049 ubox
2 78 0.399283745 ubox
3 69 0.004027261 ubox
3 71 0.015751510 ubox
3 73 0.016273143 ubox
3 76 0.833919978 ubox
3 77 0.397423651 ubox
4 69 0.005881386 ubox
4 71 0.072338895 ubox
4 73 0.039015541 ubox
4 76 0.371103548 ubox
4 77 0.030313266 ubox
5 38 0.005306985 ubox
5 69 0.014015749 ubox
5 71 0.036639050 ubox
5 73 0.036206018 ubox
5 76 0.034485895 ubox
5 77 0.011718105 ubox
6 35 0.018899469 ubox
6 69 0.298033187 ubox
6 71 0.139455896 ubox
6 73 0.881754418 ubox
6 76 0.012144346 ubox
7 34 0.019711316 ubox
7 36 0.034273603 ubox
7 68 0.312667075 ubox
7 70 0.148403559 ubox
7 72 0.920754091 ubox
7 74 0.129296132 ubox
7 75 0.009296381 ubox
8 33 0.019833871 ubox
8 35 0.045339499 ubox
8 67 0.314940141 ubox
8 69 0.149199001 ubox
8 71 0.925400732 ubox
8 73 0.130693494 ubox
9 32 0.019836548 ubox
9 34 0.046504699 ubox
9 36 0.003574343 ubox
9 66 0.315618228 ubox
9 68 0.149216072 ubox
9 70 0.925825641 ubox
9 72 0.130848016 ubox
10 31 0.019828921 ubox
10 33 0.046702245 ubox
10 35 0.004721276 ubox
10 65 0.315983278 ubox
10 67 0.149162024 ubox
10 69 0.925800146 ubox
10 71 0.130691235 ubox
11 30 0.019815535 ubox
11 32 0.046732064 ubox
11 34 0.004840740 ubox
11 64 0.316432916 ubox
11 66 0.149074755 ubox
11 68 0.925704438 ubox
11 70 0.130442068 ubox
12 29 0.019805196 ubox
12 31 0.046740637 ubox
12 33 0.004860417 ubox
12 63 0.316761877 ubox
12 65 0.149006037 ubox
12 67 0.925631096 ubox
12 69 0.130251705 ubox
13 28 0.019791441 ubox
13 30 0.046747083 ubox
13 32 0.004862207 ubox
13 62 0.317206877 ubox
13 64 0.148913517 ubox
13 66 0.925529800 ubox
13 68 0.129997841 ubox
14 27 0.019780799 ubox
14 29 0.046751680 ubox
14 31 0.004862107 ubox
14 61 0.317534988 ubox
14 63 0.148841765 ubox
14 65 0.925455930 ubox
14 67 0.129806539 ubox
15 26 0.019765104 ubox
15 28 0.046757626 ubox
15 30 0.004861435 ubox
15 60 0.317979680 ubox
15 62 0.148745331 ubox
15 64 0.925353937 ubox
15 66 0.129551752 ubox
16 25 0.019732564 ubox
16 27 0.046761953 ubox
16 29 0.004860877 ubox
16 59 0.318307603 ubox
16 61 0.148669651 ubox
16 63 0.925273193 ubox
16 65 0.129358927 ubox
17 24 0.019020666 ubox
17 26 0.046766331 ubox
17 28 0.004859907 ubox
17 58 0.318751731 ubox
17 60 0.148558517 ubox
17 62 0.925101791 ubox
17 64 0.129092696 ubox
18 25 0.046695699 ubox
18 27 0.004856564 ubox
18 57 0.319077413 ubox
18 59 0.148390888 ubox
18 61 0.924525572 ubox
18 63 0.128820159 ubox
19 24 0.046180124 ubox
19 26 0.004764015 ubox
19 56 0.319518664 ubox
19 58 0.147098988 ubox
19 60 0.918495611 ubox
19 62 0.127738234 ubox
20 25 0.003759223 ubox
20 55 0.319484315 ubox
20 57 0.137748235 ubox
20 59 0.867666782 ubox
20 61 0.120308859 ubox
21 53 0.009863746 ubox
21 57 0.086969425 ubox
21 59 0.050783971 ubox
21 61 0.005012011 ubox
22 53 0.032147359 ubox
22 57 0.427228027 ubox
22 59 0.038554038 ubox
23 53 0.006332508 ubox
23 57 0.044833867 ubox
23 59 0.006564499 ubox
24 51 0.049567340 ubox
24 53 0.087454088 ubox
24 57 0.058081295 ubox
24 59 0.015333400 ubox
25 50 0.051756400 ubox
25 52 0.090098316 ubox
25 54 0.955290851 ubox
25 56 0.039548238 ubox
25 58 0.014340890 ubox
26 49 0.051913542 ubox
26 51 0.090157655 ubox
26 53 0.988233090 ubox
26 57 0.012103361 ubox
27 48 0.051933183 ubox
27 50 0.089952279 ubox
27 52 0.992259196 ubox
27 54 0.006315688 ubox
27 56 0.007888900 ubox
28 47 0.051935776 ubox
28 49 0.089779038 ubox
28 51 0.992647650 ubox
28 53 0.006329574 ubox
29 46 0.051937101 ubox
29 48 0.089546645 ubox
29 50 0.992719192 ubox
29 52 0.006061152 ubox
30 45 0.051938067 ubox
30 47 0.089370070 ubox
30 49 0.992741738 ubox
30 51 0.005826888 ubox
31 44 0.051940698 ubox
31 46 0.089136214 ubox
31 48 0.992765243 ubox
31 50 0.005497795 ubox
32 43 0.051949934 ubox
32 45 0.088958704 ubox
32 47 0.992782625 ubox
32 49 0.005234287 ubox
33 42 0.051931856 ubox
33 44 0.088725884 ubox
33 46 0.992805559 ubox
33 48 0.004863702 ubox
34 41 0.051285771 ubox
34 43 0.088554093 ubox
34 45 0.992823029 ubox
34 47 0.004562279 ubox
35 40 0.048463927 ubox
35 42 0.087713304 ubox
35 44 0.992863552 ubox
35 46 0.004127036 ubox
36 41 0.074766182 ubox
36 43 0.993008372 ubox
36 45 0.003743520 ubox
36 76 0.033348557 ubox
37 42 0.992522146 ubox
37 75 0.046178733 ubox
38 42 0.003430690 ubox
38 74 0.046152553 ubox
39 73 0.036566802 ubox
40 69 0.003841570 ubox
40 71 0.024135729 ubox
40 73 0.032698362 ubox
41 68 0.003960962 ubox
41 70 0.024737967 ubox
41 72 0.043195970 ubox
41 74 0.007139851 ubox
42 67 0.003992566 ubox
42 69 0.024833601 ubox
42 71 0.043643523 ubox
42 73 0.007919357 ubox
43 66 0.003998046 ubox
43 68 0.024846788 ubox
43 70 0.043680951 ubox
43 72 0.008104064 ubox
44 65 0.004000614 ubox
44 67 0.024843846 ubox
44 69 0.043675782 ubox
44 71 0.008115136 ubox
45 64 0.004004736 ubox
45 66 0.024844390 ubox
45 68 0.043673693 ubox
45 70 0.008116012 ubox
46 63 0.004007919 ubox
46 65 0.024845301 ubox
46 67 0.043672909 ubox
46 69 0.008116114 ubox
47 62 0.004012139 ubox
47 64 0.024846498 ubox
47 66 0.043671850 ubox
47 68 0.008116043 ubox
48 61 0.004015481 ubox
48 63 0.024847402 ubox
48 65 0.043671047 ubox
48 67 0.008115987 ubox
49 60 0.004019929 ubox
49 62 0.024848555 ubox
49 64 0.043669972 ubox
49 66 0.008115892 ubox
50 59 0.004023101 ubox
50 61 0.024848953 ubox
50 63 0.043669043 ubox
50 65 0.008115814 ubox
51 58 0.003990732 ubox
51 60 0.024844978 ubox
51 62 0.043666887 ubox
51 64 0.008115600 ubox
52 57 0.003601677 ubox
52 59 0.024598525 ubox
52 61 0.043653406 ubox
52 63 0.008114144 ubox
53 58 0.022777312 ubox
53 60 0.043241427 ubox
53 62 0.008102875 ubox
54 59 0.038976040 ubox
54 61 0.007585005 ubox
70 76 0.007949343 ubox
70 77 0.009200814 ubox
71 75 0.007863958 ubox
72 77 0.008441494 ubox
73 79 0.003217626 ubox
1 78 0.9500000 lbox
2 77 0.9500000 lbox
3 76 0.9500000 lbox
6 73 0.9500000 lbox
7 72 0.9500000 lbox
8 71 0.9500000 lbox
9 70 0.9500000 lbox
10 69 0.9500000 lbox
11 68 0.9500000 lbox
12 67 0.9500000 lbox
13 66 0.9500000 lbox
14 65 0.9500000 lbox
15 64 0.9500000 lbox
16 63 0.9500000 lbox
17 62 0.9500000 lbox
18 61 0.9500000 lbox
19 60 0.9500000 lbox
20 59 0.9500000 lbox
25 54 0.9500000 lbox
26 53 0.9500000 lbox
27 52 0.9500000 lbox
28 51 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
34 45 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
