%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (497)
} def

/sequence { (\
GGAAAAGUAGUCGGCACAGGAAACUGCACGAAAGUGGCCAAAAGCUGUCGAAAGACAGCGACUACAAAGAGUGUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.005954849 ubox
1 39 0.021488455 ubox
1 65 0.003729443 ubox
1 72 0.020597228 ubox
1 74 0.009309154 ubox
1 75 0.032229913 ubox
1 76 0.062560871 ubox
1 77 0.003688551 ubox
1 78 0.073877066 ubox
2 11 0.005632491 ubox
2 12 0.007628182 ubox
2 38 0.021495226 ubox
2 65 0.004016282 ubox
2 72 0.012838091 ubox
2 74 0.030845459 ubox
2 75 0.072244000 ubox
2 77 0.060712833 ubox
2 78 0.104645247 ubox
3 11 0.007355395 ubox
3 72 0.017033593 ubox
3 74 0.071483803 ubox
3 76 0.052156202 ubox
3 77 0.097441074 ubox
4 72 0.019941903 ubox
4 74 0.010586634 ubox
4 76 0.076742784 ubox
4 77 0.006315053 ubox
5 35 0.015317548 ubox
5 72 0.013439637 ubox
5 74 0.013617807 ubox
5 76 0.006340040 ubox
5 77 0.010847422 ubox
6 35 0.005331092 ubox
6 72 0.022909667 ubox
6 74 0.033549379 ubox
6 76 0.012756172 ubox
6 77 0.003654031 ubox
7 12 0.007186645 ubox
7 15 0.004938596 ubox
7 35 0.004434876 ubox
7 38 0.003745586 ubox
7 65 0.996771309 ubox
7 75 0.010864754 ubox
8 14 0.004881361 ubox
8 32 0.003404819 ubox
8 33 0.003490748 ubox
8 34 0.004118885 ubox
8 37 0.003718057 ubox
8 64 0.998174521 ubox
8 73 0.008966068 ubox
9 63 0.998435167 ubox
9 72 0.009187555 ubox
10 62 0.998743878 ubox
10 78 0.011478929 ubox
11 31 0.022873572 ubox
11 40 0.003629307 ubox
11 41 0.005408251 ubox
11 61 0.998478507 ubox
11 70 0.009432300 ubox
12 30 0.023416633 ubox
12 60 0.997374724 ubox
12 69 0.009442364 ubox
13 17 0.009841238 ubox
13 24 0.004521862 ubox
13 25 0.003552856 ubox
13 29 0.025003741 ubox
13 38 0.016856671 ubox
13 39 0.973341429 ubox
13 59 0.071786095 ubox
13 75 0.020907519 ubox
14 24 0.003737319 ubox
14 27 0.024867092 ubox
14 29 0.009135913 ubox
14 38 0.974455062 ubox
14 39 0.003850524 ubox
14 45 0.005486851 ubox
14 59 0.011270513 ubox
14 74 0.021034106 ubox
15 20 0.004272465 ubox
15 26 0.025456443 ubox
15 36 0.040653957 ubox
15 37 0.972563896 ubox
15 44 0.006281425 ubox
15 58 0.015512885 ubox
15 73 0.021078104 ubox
16 25 0.023296518 ubox
16 35 0.054556993 ubox
16 72 0.020876849 ubox
17 26 0.982008011 ubox
17 34 0.050982706 ubox
17 36 0.064254715 ubox
17 71 0.020739407 ubox
18 25 0.986523025 ubox
18 35 0.057656140 ubox
19 24 0.986398283 ubox
19 25 0.013276969 ubox
19 27 0.006708231 ubox
19 29 0.012446827 ubox
19 39 0.116256024 ubox
20 24 0.015551230 ubox
20 25 0.003605249 ubox
20 27 0.008832893 ubox
20 29 0.017797308 ubox
20 38 0.116366127 ubox
21 25 0.004294961 ubox
23 35 0.118383409 ubox
24 30 0.020292365 ubox
24 34 0.120572680 ubox
24 37 0.013938657 ubox
25 31 0.005146035 ubox
25 32 0.009889653 ubox
25 33 0.119782116 ubox
25 36 0.014833434 ubox
25 40 0.005663880 ubox
26 35 0.017577974 ubox
26 38 0.016812800 ubox
26 39 0.006027760 ubox
27 34 0.023206460 ubox
27 36 0.984116717 ubox
27 37 0.014841677 ubox
28 35 0.986679105 ubox
29 34 0.986656995 ubox
29 36 0.031481624 ubox
29 37 0.004938059 ubox
30 35 0.022395234 ubox
30 39 0.005415021 ubox
31 35 0.003225952 ubox
34 39 0.003518460 ubox
34 65 0.005722087 ubox
35 64 0.005731295 ubox
36 63 0.005731413 ubox
37 45 0.017034870 ubox
37 62 0.005725010 ubox
38 44 0.018187887 ubox
39 44 0.008081999 ubox
44 59 0.996103354 ubox
45 58 0.999733204 ubox
46 57 0.999713022 ubox
47 56 0.999975145 ubox
48 55 0.999821259 ubox
49 54 0.999482945 ubox
60 65 0.003808894 ubox
60 75 0.041275762 ubox
60 78 0.007136350 ubox
61 72 0.007314072 ubox
61 74 0.041319382 ubox
61 77 0.007090494 ubox
62 69 0.008745690 ubox
62 71 0.007651136 ubox
62 73 0.040623306 ubox
63 68 0.008400101 ubox
63 70 0.007565369 ubox
63 73 0.008921230 ubox
64 72 0.036188535 ubox
64 74 0.010100718 ubox
65 71 0.036966962 ubox
65 73 0.012674918 ubox
65 79 0.016461826 ubox
66 72 0.016441448 ubox
66 74 0.007585109 ubox
66 76 0.007512165 ubox
66 77 0.041958328 ubox
67 72 0.015812616 ubox
67 74 0.013125280 ubox
67 76 0.038596474 ubox
67 77 0.557234437 ubox
68 72 0.009820056 ubox
68 74 0.020254783 ubox
68 76 0.621040822 ubox
68 77 0.029008147 ubox
69 74 0.012206398 ubox
69 75 0.630499037 ubox
69 76 0.026627789 ubox
69 77 0.146883820 ubox
69 78 0.400938506 ubox
70 74 0.548590069 ubox
70 76 0.161594527 ubox
70 77 0.391924356 ubox
71 75 0.164904969 ubox
71 76 0.297174516 ubox
71 77 0.017321144 ubox
71 78 0.087814990 ubox
72 79 0.059015507 ubox
73 77 0.005777384 ubox
73 78 0.099977570 ubox
74 79 0.005574393 ubox
75 79 0.008371728 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
