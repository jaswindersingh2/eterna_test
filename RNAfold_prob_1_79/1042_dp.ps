%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1042)
} def

/sequence { (\
GGAAAAGGCAAAGCCAAGGACAAAGUCCAAGUCUGAAACAGACAAGCUCAAAGAGCAACCCAAAGGGAGGUAUUGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.007263863 ubox
1 15 0.013974535 ubox
1 47 0.004240484 ubox
1 48 0.005890802 ubox
1 49 0.013084151 ubox
1 60 0.010800879 ubox
1 61 0.030383691 ubox
1 74 0.003261302 ubox
1 76 0.005618024 ubox
1 77 0.004829310 ubox
1 78 0.155941856 ubox
2 9 0.004479918 ubox
2 14 0.013945185 ubox
2 47 0.007787712 ubox
2 48 0.010375893 ubox
2 49 0.017718239 ubox
2 59 0.010875770 ubox
2 60 0.030319419 ubox
2 74 0.007107300 ubox
2 76 0.004072699 ubox
2 77 0.139906684 ubox
2 78 0.308496400 ubox
3 48 0.016887297 ubox
3 73 0.006966771 ubox
3 74 0.009760345 ubox
3 76 0.097543293 ubox
3 77 0.296233287 ubox
4 73 0.009530062 ubox
4 74 0.019218510 ubox
4 76 0.144105090 ubox
4 77 0.025799196 ubox
5 71 0.003425441 ubox
5 73 0.017914715 ubox
5 74 0.045393679 ubox
5 76 0.014519216 ubox
5 77 0.026045151 ubox
6 71 0.004420677 ubox
6 73 0.043131544 ubox
6 74 0.030430857 ubox
6 76 0.013272579 ubox
6 77 0.051968167 ubox
7 14 0.004037511 ubox
7 15 0.230565722 ubox
7 48 0.008810053 ubox
7 49 0.003179457 ubox
7 73 0.006655343 ubox
7 74 0.004502564 ubox
7 76 0.046102226 ubox
7 77 0.726126756 ubox
7 78 0.278875634 ubox
8 14 0.230811922 ubox
8 47 0.009881603 ubox
8 71 0.018358490 ubox
8 73 0.003781965 ubox
8 74 0.003646780 ubox
8 76 0.932534579 ubox
8 77 0.197675911 ubox
8 78 0.020832090 ubox
9 13 0.229135854 ubox
9 46 0.009889194 ubox
9 69 0.003934340 ubox
9 70 0.018665177 ubox
9 75 0.971502271 ubox
10 73 0.005410566 ubox
10 74 0.970081276 ubox
11 73 0.916891659 ubox
11 74 0.018350524 ubox
12 48 0.006121273 ubox
12 71 0.017182669 ubox
12 73 0.023722489 ubox
13 47 0.006499395 ubox
13 71 0.964053645 ubox
14 46 0.006470719 ubox
14 66 0.009052771 ubox
14 67 0.005257835 ubox
14 69 0.009124798 ubox
14 70 0.972106073 ubox
15 65 0.009053057 ubox
15 66 0.005207334 ubox
15 69 0.971072121 ubox
15 70 0.004087097 ubox
15 75 0.003377518 ubox
16 74 0.004448510 ubox
17 73 0.004026232 ubox
18 27 0.006180632 ubox
18 28 0.985351290 ubox
18 78 0.161539749 ubox
19 26 0.004843912 ubox
19 27 0.986376348 ubox
19 28 0.005426667 ubox
19 77 0.162424465 ubox
19 78 0.010735983 ubox
20 26 0.985080012 ubox
20 76 0.162753034 ubox
20 77 0.008621286 ubox
21 25 0.975327588 ubox
21 75 0.162873558 ubox
22 74 0.152992713 ubox
23 73 0.128208345 ubox
23 74 0.051589311 ubox
24 71 0.011004894 ubox
24 73 0.072827743 ubox
24 74 0.010677437 ubox
25 71 0.082347151 ubox
25 73 0.026687764 ubox
26 67 0.007119081 ubox
26 68 0.029233697 ubox
26 69 0.005288718 ubox
26 70 0.019399157 ubox
26 72 0.031496155 ubox
27 66 0.007523273 ubox
27 67 0.029391993 ubox
27 69 0.020411430 ubox
27 70 0.153886926 ubox
28 65 0.007647462 ubox
28 66 0.029031078 ubox
28 67 0.004293148 ubox
28 69 0.153813625 ubox
28 70 0.004037294 ubox
31 39 0.004614442 ubox
31 43 0.998196734 ubox
32 38 0.004452481 ubox
32 42 0.999518756 ubox
33 41 0.999913152 ubox
34 40 0.998679899 ubox
35 39 0.982777192 ubox
35 43 0.003365019 ubox
46 56 0.996851285 ubox
46 78 0.004623471 ubox
47 53 0.006601551 ubox
47 55 0.997906759 ubox
48 52 0.006125371 ubox
48 53 0.006521705 ubox
48 54 0.997133049 ubox
49 53 0.988762418 ubox
49 75 0.008691481 ubox
50 74 0.008674812 ubox
51 73 0.008376094 ubox
51 74 0.003277842 ubox
52 73 0.003532347 ubox
52 74 0.004449591 ubox
53 73 0.004543248 ubox
53 78 0.058584560 ubox
54 77 0.058648289 ubox
55 71 0.016383742 ubox
55 76 0.058699362 ubox
56 70 0.017602174 ubox
56 75 0.058782120 ubox
57 71 0.007088831 ubox
57 73 0.006420771 ubox
57 74 0.057614385 ubox
58 71 0.088081756 ubox
58 73 0.044940463 ubox
59 65 0.012644047 ubox
59 66 0.185092017 ubox
59 67 0.940539392 ubox
59 69 0.025392897 ubox
59 70 0.092927689 ubox
60 65 0.184955901 ubox
60 66 0.944720438 ubox
60 67 0.236885399 ubox
60 69 0.092346761 ubox
60 70 0.024684389 ubox
61 65 0.937894293 ubox
61 66 0.237322065 ubox
61 67 0.058616491 ubox
61 69 0.024977085 ubox
61 70 0.005429026 ubox
61 75 0.004755128 ubox
62 74 0.004725019 ubox
63 73 0.004335740 ubox
64 77 0.004825612 ubox
65 76 0.005758056 ubox
65 78 0.004615116 ubox
66 77 0.004492557 ubox
66 78 0.014385247 ubox
67 74 0.008061630 ubox
67 76 0.004141230 ubox
67 77 0.014399810 ubox
67 78 0.023867135 ubox
68 73 0.011184356 ubox
68 74 0.008182895 ubox
68 76 0.014659109 ubox
68 77 0.024068008 ubox
69 73 0.006032698 ubox
69 74 0.003922417 ubox
69 76 0.023104651 ubox
69 78 0.010083444 ubox
70 74 0.009393971 ubox
70 77 0.009495826 ubox
70 78 0.003469341 ubox
7 77 0.9500000 lbox
8 76 0.9500000 lbox
9 75 0.9500000 lbox
10 74 0.9500000 lbox
11 73 0.9500000 lbox
13 71 0.9500000 lbox
14 70 0.9500000 lbox
15 69 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
showpage
end
%%EOF
