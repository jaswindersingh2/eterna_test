%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (286)
} def

/sequence { (\
GGAAAAAACUAGAAGUGCAAAAGCACAGACAAGUGAAACCGACGGAAGACGGACACAAGUCAACUAGACAUCGACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.071666346 ubox
1 10 0.090197783 ubox
1 30 0.004636603 ubox
1 39 0.004538267 ubox
1 40 0.088352632 ubox
1 43 0.005113014 ubox
1 54 0.003268465 ubox
1 56 0.003649335 ubox
1 64 0.014727037 ubox
1 65 0.023845654 ubox
1 69 0.026922370 ubox
1 71 0.005514138 ubox
1 72 0.086825996 ubox
1 75 0.167915236 ubox
1 76 0.076740123 ubox
1 77 0.009448994 ubox
1 78 0.205204979 ubox
2 9 0.095480524 ubox
2 10 0.008758555 ubox
2 39 0.088297875 ubox
2 40 0.008225654 ubox
2 61 0.003252252 ubox
2 64 0.025107095 ubox
2 65 0.003700870 ubox
2 69 0.018755737 ubox
2 71 0.076034416 ubox
2 72 0.261778013 ubox
2 75 0.088181048 ubox
2 76 0.011429543 ubox
2 77 0.200791648 ubox
2 78 0.231376227 ubox
3 10 0.014853872 ubox
3 65 0.003814123 ubox
3 71 0.254996410 ubox
3 76 0.190282677 ubox
3 77 0.228970238 ubox
4 10 0.012374712 ubox
4 65 0.003965213 ubox
4 71 0.038995723 ubox
4 76 0.207198193 ubox
4 77 0.012883912 ubox
5 10 0.015033336 ubox
5 65 0.004184652 ubox
5 71 0.066557788 ubox
5 76 0.014761734 ubox
5 77 0.010208054 ubox
6 10 0.007863527 ubox
6 34 0.004000266 ubox
6 65 0.003817112 ubox
6 71 0.038327556 ubox
6 76 0.011228628 ubox
6 77 0.011068877 ubox
7 34 0.010832926 ubox
7 65 0.003771929 ubox
7 71 0.060436542 ubox
7 76 0.011683270 ubox
7 77 0.016421490 ubox
8 16 0.009759023 ubox
8 34 0.111104360 ubox
8 60 0.006204780 ubox
8 65 0.003245649 ubox
8 71 0.045489598 ubox
8 76 0.017583374 ubox
8 77 0.006103466 ubox
9 15 0.010790293 ubox
9 28 0.035454259 ubox
9 33 0.113691897 ubox
9 59 0.006608604 ubox
9 67 0.841799884 ubox
9 73 0.020195572 ubox
9 79 0.018399773 ubox
10 14 0.012166237 ubox
10 27 0.035801586 ubox
10 29 0.007144044 ubox
10 31 0.012514500 ubox
10 32 0.110562840 ubox
10 58 0.006480736 ubox
10 63 0.003285964 ubox
10 66 0.846852251 ubox
10 67 0.005082920 ubox
10 68 0.004555221 ubox
10 70 0.006803158 ubox
10 73 0.005441569 ubox
10 74 0.009519517 ubox
10 79 0.008402804 ubox
11 65 0.846883923 ubox
11 71 0.004509028 ubox
11 76 0.024998427 ubox
11 77 0.006120661 ubox
12 26 0.004517074 ubox
12 30 0.082452902 ubox
12 61 0.004207964 ubox
12 64 0.841928742 ubox
12 65 0.005134323 ubox
12 69 0.014771895 ubox
12 72 0.057740853 ubox
12 75 0.026963773 ubox
12 76 0.005866738 ubox
12 77 0.009722106 ubox
12 78 0.242405224 ubox
13 60 0.004074252 ubox
13 65 0.005633338 ubox
13 71 0.054043788 ubox
13 76 0.009929468 ubox
13 77 0.241150814 ubox
14 65 0.007381112 ubox
14 71 0.003904419 ubox
14 76 0.232377529 ubox
14 77 0.004596565 ubox
15 24 0.010478663 ubox
15 26 0.977749706 ubox
15 64 0.006027967 ubox
15 69 0.005529123 ubox
15 75 0.199611193 ubox
16 23 0.010387256 ubox
16 25 0.980654756 ubox
16 27 0.004827133 ubox
16 63 0.005445896 ubox
16 68 0.005079414 ubox
16 70 0.003763986 ubox
16 73 0.028206554 ubox
16 74 0.185869699 ubox
17 24 0.991569206 ubox
17 26 0.008626937 ubox
17 69 0.004978883 ubox
17 72 0.046613290 ubox
18 23 0.990177251 ubox
18 67 0.003806764 ubox
18 73 0.029165754 ubox
19 71 0.026386496 ubox
20 71 0.007606238 ubox
21 71 0.003581059 ubox
22 65 0.018352047 ubox
23 30 0.005145014 ubox
23 64 0.019023302 ubox
23 65 0.004074784 ubox
23 69 0.009729510 ubox
24 35 0.030764907 ubox
24 67 0.025109479 ubox
25 34 0.032020343 ubox
25 65 0.012479640 ubox
26 33 0.032184606 ubox
26 35 0.011996573 ubox
26 67 0.003919698 ubox
27 34 0.012295012 ubox
27 65 0.011089714 ubox
27 76 0.008134889 ubox
28 60 0.003763991 ubox
28 61 0.947727995 ubox
28 64 0.007447158 ubox
28 72 0.013968667 ubox
28 75 0.008748198 ubox
28 78 0.021784136 ubox
29 60 0.948793826 ubox
29 71 0.012768184 ubox
29 77 0.018599183 ubox
30 35 0.007313355 ubox
30 45 0.003717456 ubox
30 59 0.947887885 ubox
30 73 0.007051097 ubox
30 79 0.008822385 ubox
31 77 0.021823864 ubox
32 65 0.005070056 ubox
32 76 0.026059220 ubox
33 39 0.006446606 ubox
33 40 0.003858870 ubox
33 43 0.014176624 ubox
33 50 0.004944171 ubox
33 54 0.014524333 ubox
33 56 0.985779986 ubox
33 64 0.005226655 ubox
33 75 0.026551121 ubox
34 38 0.005869802 ubox
34 41 0.006997441 ubox
34 42 0.013786727 ubox
34 49 0.004921977 ubox
34 53 0.014434405 ubox
34 55 0.986761772 ubox
34 57 0.050707966 ubox
34 58 0.003670988 ubox
34 62 0.004442003 ubox
34 63 0.004095493 ubox
34 73 0.012366432 ubox
34 74 0.023635005 ubox
34 79 0.036687189 ubox
35 40 0.010205216 ubox
35 54 0.985892806 ubox
35 56 0.053330190 ubox
35 61 0.005691482 ubox
35 72 0.020563975 ubox
35 78 0.081058786 ubox
36 60 0.005633813 ubox
36 71 0.019340900 ubox
36 77 0.080986382 ubox
37 71 0.004894515 ubox
37 76 0.079057499 ubox
39 44 0.003829288 ubox
39 45 0.010980730 ubox
39 51 0.009569196 ubox
39 52 0.990372266 ubox
40 44 0.011006692 ubox
40 45 0.006153683 ubox
40 48 0.006740995 ubox
40 51 0.990920001 ubox
40 52 0.004499548 ubox
40 67 0.004897554 ubox
40 73 0.085043826 ubox
40 79 0.004283488 ubox
41 50 0.987927219 ubox
41 54 0.010308658 ubox
41 61 0.005742331 ubox
41 69 0.003751768 ubox
41 72 0.085679292 ubox
41 78 0.006490995 ubox
42 60 0.005749351 ubox
42 71 0.084438604 ubox
42 77 0.006117387 ubox
43 48 0.779352898 ubox
43 51 0.045609258 ubox
43 52 0.005719195 ubox
43 59 0.005740672 ubox
43 67 0.016198861 ubox
43 73 0.004820420 ubox
43 79 0.019427693 ubox
44 50 0.049089377 ubox
44 64 0.006489724 ubox
44 65 0.022704426 ubox
44 69 0.069891557 ubox
44 72 0.004826879 ubox
44 76 0.003720282 ubox
44 78 0.016971557 ubox
45 50 0.006461394 ubox
45 64 0.024831295 ubox
45 69 0.013364998 ubox
45 71 0.004255332 ubox
45 75 0.003847941 ubox
45 77 0.012433563 ubox
45 78 0.083512349 ubox
46 65 0.004167426 ubox
46 76 0.009567832 ubox
46 77 0.084337750 ubox
47 65 0.031770680 ubox
47 76 0.084672147 ubox
48 61 0.038041417 ubox
48 64 0.032376472 ubox
48 65 0.008960882 ubox
48 72 0.004982927 ubox
48 75 0.084825825 ubox
49 60 0.038207420 ubox
49 65 0.005257883 ubox
49 71 0.004891559 ubox
50 59 0.038213577 ubox
50 73 0.083377810 ubox
50 79 0.011055405 ubox
51 56 0.009272883 ubox
51 61 0.006580051 ubox
51 69 0.003172657 ubox
51 72 0.082812812 ubox
51 78 0.011656893 ubox
52 56 0.004892904 ubox
52 60 0.003963041 ubox
52 61 0.091105771 ubox
52 71 0.065637766 ubox
52 72 0.015402760 ubox
52 77 0.011288192 ubox
52 78 0.006942707 ubox
53 60 0.091729987 ubox
53 71 0.017510067 ubox
53 76 0.010609049 ubox
53 77 0.006431317 ubox
54 59 0.091644241 ubox
54 67 0.007538553 ubox
54 73 0.004790647 ubox
54 79 0.005326744 ubox
55 71 0.007675180 ubox
56 67 0.029309199 ubox
56 73 0.009277415 ubox
56 79 0.015460446 ubox
57 71 0.027900320 ubox
57 76 0.004393875 ubox
57 77 0.175441164 ubox
58 65 0.040309041 ubox
58 71 0.018483978 ubox
58 76 0.203606118 ubox
58 77 0.004319086 ubox
59 64 0.041121876 ubox
59 69 0.197425070 ubox
59 75 0.209989501 ubox
60 68 0.197738779 ubox
60 74 0.209991870 ubox
61 67 0.197706033 ubox
61 73 0.209804406 ubox
62 71 0.047254827 ubox
62 76 0.003261315 ubox
62 77 0.008788284 ubox
63 71 0.040541342 ubox
63 76 0.009329404 ubox
63 77 0.003240569 ubox
64 73 0.051286840 ubox
64 79 0.012000433 ubox
65 70 0.017351418 ubox
65 73 0.009699343 ubox
65 74 0.013591964 ubox
65 79 0.003688305 ubox
66 71 0.023809628 ubox
66 76 0.038585322 ubox
66 77 0.010390169 ubox
67 71 0.006293074 ubox
67 72 0.067336454 ubox
67 75 0.044431718 ubox
67 76 0.012295918 ubox
67 77 0.010320063 ubox
67 78 0.093977657 ubox
68 76 0.013348997 ubox
68 77 0.093228329 ubox
69 73 0.033514344 ubox
69 79 0.023915413 ubox
70 76 0.013820234 ubox
70 77 0.029725408 ubox
71 79 0.006554166 ubox
72 79 0.215204629 ubox
73 77 0.007732679 ubox
73 78 0.234760198 ubox
75 79 0.015532931 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
