%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (878)
} def

/sequence { (\
GGAAAGCAAGAGCACUCCCAAGGCAAGCCAGGUACACCAACGGCGAGACAGCUCAAGGGAUCCCACGCUGCGAAUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.011896310 ubox
1 13 0.004359373 ubox
1 15 0.004113774 ubox
1 16 0.012754254 ubox
1 17 0.011377607 ubox
1 18 0.928727047 ubox
1 19 0.189259607 ubox
1 38 0.004435774 ubox
1 63 0.037716037 ubox
1 64 0.018973875 ubox
1 71 0.009761086 ubox
1 75 0.004818985 ubox
1 76 0.006125085 ubox
1 77 0.011006826 ubox
1 78 0.176764725 ubox
2 7 0.004903788 ubox
2 15 0.015360975 ubox
2 16 0.009353998 ubox
2 17 0.935915912 ubox
2 18 0.167453719 ubox
2 19 0.007097230 ubox
2 37 0.004431360 ubox
2 62 0.038005153 ubox
2 63 0.018612485 ubox
2 71 0.018316384 ubox
2 75 0.008080714 ubox
2 76 0.017143557 ubox
2 77 0.176456991 ubox
2 78 0.216336027 ubox
3 16 0.932944387 ubox
3 61 0.036859581 ubox
3 69 0.004272394 ubox
3 75 0.017941877 ubox
3 76 0.175039097 ubox
3 77 0.216494125 ubox
4 16 0.043018170 ubox
4 61 0.004926452 ubox
4 75 0.157092037 ubox
4 76 0.213732673 ubox
4 77 0.005671715 ubox
5 16 0.032893235 ubox
5 69 0.058832447 ubox
5 75 0.207131505 ubox
5 76 0.007019266 ubox
6 13 0.954947839 ubox
6 15 0.036408911 ubox
6 19 0.008450135 ubox
6 24 0.007836952 ubox
6 33 0.004383550 ubox
6 68 0.060789445 ubox
6 71 0.204866127 ubox
6 75 0.006018577 ubox
6 78 0.004244099 ubox
7 12 0.954054364 ubox
7 22 0.003535310 ubox
7 23 0.007830106 ubox
7 32 0.004458786 ubox
7 57 0.025546952 ubox
7 58 0.008490873 ubox
7 59 0.004117255 ubox
7 67 0.060712678 ubox
7 70 0.204916073 ubox
7 72 0.051329940 ubox
8 69 0.176416109 ubox
8 76 0.004900525 ubox
9 16 0.014148760 ubox
9 69 0.081124310 ubox
9 75 0.005577191 ubox
10 15 0.015395057 ubox
10 17 0.017999883 ubox
10 18 0.004249965 ubox
10 19 0.009442700 ubox
10 29 0.005230039 ubox
10 54 0.072162861 ubox
10 62 0.017610654 ubox
10 63 0.011876544 ubox
10 64 0.035531010 ubox
10 66 0.101617610 ubox
10 68 0.110641087 ubox
10 69 0.008959736 ubox
10 71 0.072860528 ubox
10 78 0.008431093 ubox
11 16 0.016908698 ubox
11 53 0.072274588 ubox
11 61 0.017644491 ubox
11 69 0.176908934 ubox
11 77 0.008334994 ubox
12 17 0.004094779 ubox
12 18 0.004071452 ubox
12 19 0.004891780 ubox
12 24 0.043139453 ubox
12 28 0.006596715 ubox
12 52 0.072298342 ubox
12 61 0.003494030 ubox
12 62 0.038767812 ubox
12 63 0.030352903 ubox
12 64 0.075524578 ubox
12 66 0.070847437 ubox
12 68 0.185234550 ubox
12 71 0.037708233 ubox
12 76 0.006771619 ubox
13 22 0.007560251 ubox
13 23 0.043132123 ubox
13 27 0.006600747 ubox
13 51 0.072260892 ubox
13 67 0.184999049 ubox
13 70 0.037725447 ubox
14 61 0.049197239 ubox
14 69 0.036531885 ubox
14 75 0.003387592 ubox
15 22 0.061479613 ubox
15 23 0.009409036 ubox
15 47 0.068798802 ubox
15 59 0.004428334 ubox
15 67 0.028364914 ubox
15 79 0.006584761 ubox
16 20 0.004314386 ubox
16 21 0.057006082 ubox
16 22 0.009312056 ubox
16 23 0.005515544 ubox
16 25 0.005294994 ubox
16 46 0.068869107 ubox
16 48 0.018902263 ubox
16 58 0.003475411 ubox
16 59 0.007674553 ubox
16 60 0.263825887 ubox
16 65 0.004946597 ubox
16 73 0.012868226 ubox
17 22 0.015190703 ubox
17 23 0.017471229 ubox
17 32 0.003463333 ubox
17 45 0.068795472 ubox
17 47 0.018955114 ubox
17 57 0.003453485 ubox
17 58 0.009044872 ubox
17 59 0.269786838 ubox
17 72 0.013438749 ubox
18 22 0.019393044 ubox
18 23 0.011743058 ubox
18 31 0.003507523 ubox
18 32 0.005381223 ubox
18 43 0.054403027 ubox
18 45 0.008407832 ubox
18 57 0.009099556 ubox
18 58 0.269808198 ubox
18 59 0.005264619 ubox
18 72 0.006608443 ubox
18 79 0.003853778 ubox
19 23 0.003827067 ubox
19 31 0.005585646 ubox
19 32 0.004555063 ubox
19 42 0.054328177 ubox
19 43 0.004208078 ubox
19 45 0.010586262 ubox
19 57 0.269428178 ubox
19 58 0.005346928 ubox
19 70 0.005352437 ubox
19 72 0.067197174 ubox
19 79 0.023312100 ubox
20 53 0.004559544 ubox
20 69 0.003931941 ubox
20 75 0.033152131 ubox
20 76 0.066002537 ubox
20 77 0.055300833 ubox
21 53 0.051441515 ubox
21 69 0.003519951 ubox
21 75 0.068543547 ubox
21 76 0.059300790 ubox
21 77 0.020202392 ubox
22 28 0.005603764 ubox
22 29 0.050773886 ubox
22 37 0.003559870 ubox
22 38 0.036497811 ubox
22 41 0.004041900 ubox
22 49 0.012759718 ubox
22 52 0.050662893 ubox
22 53 0.185690212 ubox
22 54 0.126386102 ubox
22 68 0.003216890 ubox
22 69 0.033499786 ubox
22 71 0.039169031 ubox
22 75 0.058830265 ubox
22 76 0.022456862 ubox
22 77 0.007932907 ubox
22 78 0.023806239 ubox
23 28 0.050516438 ubox
23 33 0.004429017 ubox
23 37 0.036464314 ubox
23 38 0.004889010 ubox
23 44 0.010285808 ubox
23 49 0.028083141 ubox
23 52 0.229869743 ubox
23 53 0.025026773 ubox
23 54 0.004206880 ubox
23 68 0.034878830 ubox
23 71 0.944389997 ubox
23 75 0.006593807 ubox
23 77 0.008526495 ubox
23 78 0.004308814 ubox
24 31 0.005097315 ubox
24 32 0.005469650 ubox
24 43 0.010280869 ubox
24 45 0.006490635 ubox
24 47 0.053979769 ubox
24 51 0.229848382 ubox
24 67 0.034890335 ubox
24 70 0.945508921 ubox
24 72 0.046926088 ubox
25 69 0.667753776 ubox
26 33 0.005267857 ubox
26 53 0.003360247 ubox
26 69 0.673928118 ubox
27 33 0.026262031 ubox
27 35 0.007300797 ubox
27 41 0.005208120 ubox
27 44 0.297930460 ubox
27 49 0.005087383 ubox
27 52 0.003725715 ubox
27 64 0.006703709 ubox
27 66 0.023364357 ubox
27 68 0.950040673 ubox
27 71 0.008976194 ubox
28 32 0.026542599 ubox
28 43 0.298245954 ubox
28 47 0.007375364 ubox
28 51 0.003698183 ubox
28 67 0.948860760 ubox
28 70 0.007528392 ubox
28 72 0.004717645 ubox
29 42 0.297987247 ubox
29 47 0.005800445 ubox
29 67 0.030818101 ubox
29 70 0.007863258 ubox
30 69 0.009300150 ubox
31 37 0.017570406 ubox
31 38 0.280277850 ubox
31 41 0.065084930 ubox
31 44 0.007792123 ubox
31 62 0.063853965 ubox
31 63 0.367710634 ubox
31 64 0.870881709 ubox
31 66 0.013318343 ubox
31 68 0.009092954 ubox
32 37 0.278714059 ubox
32 38 0.019409734 ubox
32 41 0.058591499 ubox
32 44 0.008344536 ubox
32 61 0.064620930 ubox
32 62 0.370898828 ubox
32 63 0.869167988 ubox
32 64 0.018816112 ubox
32 66 0.013801227 ubox
33 39 0.008450041 ubox
33 40 0.057847534 ubox
33 42 0.006594104 ubox
33 43 0.008105210 ubox
33 59 0.004485788 ubox
33 60 0.078954194 ubox
33 65 0.013494356 ubox
34 61 0.675269733 ubox
35 42 0.006014773 ubox
35 58 0.016474106 ubox
35 59 0.244078178 ubox
36 61 0.044694444 ubox
37 43 0.003945019 ubox
37 57 0.023089576 ubox
37 58 0.921576953 ubox
37 59 0.229752665 ubox
38 42 0.003703237 ubox
38 57 0.920459987 ubox
38 58 0.229816994 ubox
38 59 0.005857690 ubox
39 53 0.003851598 ubox
40 53 0.009097837 ubox
41 57 0.014140226 ubox
41 58 0.003713805 ubox
41 70 0.010047303 ubox
41 79 0.003273049 ubox
42 49 0.004017453 ubox
42 52 0.009193754 ubox
42 53 0.912169624 ubox
42 54 0.142331354 ubox
42 64 0.009971487 ubox
42 69 0.010236721 ubox
42 78 0.003436727 ubox
43 52 0.951292434 ubox
43 53 0.017208435 ubox
43 54 0.007584729 ubox
43 63 0.009982121 ubox
43 68 0.010295540 ubox
44 51 0.951319125 ubox
44 67 0.010293599 ubox
44 79 0.015307320 ubox
45 49 0.048342310 ubox
45 52 0.009960430 ubox
45 54 0.142935260 ubox
45 62 0.011517207 ubox
45 66 0.008897813 ubox
45 71 0.005093872 ubox
45 76 0.005622033 ubox
45 77 0.003633167 ubox
45 78 0.074520498 ubox
46 53 0.143074621 ubox
46 61 0.011554251 ubox
46 75 0.005985012 ubox
46 76 0.004045545 ubox
46 77 0.074534551 ubox
47 52 0.142243463 ubox
47 54 0.011703076 ubox
47 62 0.004590996 ubox
47 64 0.004292396 ubox
47 71 0.041103281 ubox
47 75 0.003559164 ubox
47 76 0.073858961 ubox
47 78 0.007398284 ubox
48 53 0.010566376 ubox
48 61 0.004479595 ubox
48 75 0.072650759 ubox
48 77 0.007345179 ubox
49 58 0.011382144 ubox
49 70 0.100526797 ubox
49 72 0.005134274 ubox
50 69 0.100994456 ubox
51 68 0.101125580 ubox
51 71 0.032918241 ubox
52 58 0.003429410 ubox
52 59 0.005851051 ubox
52 67 0.100968633 ubox
52 70 0.032903039 ubox
52 72 0.004191226 ubox
53 58 0.005400963 ubox
53 60 0.009798198 ubox
53 65 0.016231814 ubox
53 73 0.004491954 ubox
54 59 0.010010504 ubox
54 67 0.010377147 ubox
54 70 0.004847311 ubox
54 72 0.004775394 ubox
55 69 0.004527545 ubox
56 69 0.027209995 ubox
57 62 0.011854092 ubox
57 63 0.046171517 ubox
57 64 0.110975015 ubox
57 66 0.029755822 ubox
57 68 0.030546980 ubox
57 69 0.004026177 ubox
57 78 0.015661476 ubox
58 62 0.045532856 ubox
58 63 0.110729251 ubox
58 64 0.048913719 ubox
58 66 0.013497420 ubox
58 68 0.004926998 ubox
58 69 0.003578507 ubox
58 77 0.015712626 ubox
58 78 0.003901691 ubox
59 63 0.048195790 ubox
59 64 0.009492555 ubox
59 66 0.029927978 ubox
59 68 0.004326664 ubox
59 76 0.015779687 ubox
59 77 0.003858830 ubox
60 75 0.015768613 ubox
60 76 0.003674423 ubox
61 65 0.003787601 ubox
61 73 0.015509961 ubox
61 74 0.013347607 ubox
62 67 0.003738251 ubox
62 72 0.018011419 ubox
63 70 0.006968484 ubox
63 72 0.011752814 ubox
64 70 0.019213983 ubox
64 72 0.005314136 ubox
65 69 0.015622398 ubox
66 70 0.003656987 ubox
66 72 0.012418519 ubox
66 79 0.004041113 ubox
67 71 0.011873844 ubox
67 78 0.004125245 ubox
70 78 0.004204463 ubox
71 79 0.064394097 ubox
72 76 0.008432312 ubox
72 77 0.016009021 ubox
72 78 0.218795014 ubox
73 77 0.190569313 ubox
75 79 0.006557350 ubox
1 18 0.9500000 lbox
2 17 0.9500000 lbox
3 16 0.9500000 lbox
6 13 0.9500000 lbox
7 12 0.9500000 lbox
23 71 0.9500000 lbox
24 70 0.9500000 lbox
25 69 0.9500000 lbox
27 68 0.9500000 lbox
28 67 0.9500000 lbox
31 64 0.9500000 lbox
32 63 0.9500000 lbox
34 61 0.9500000 lbox
37 58 0.9500000 lbox
38 57 0.9500000 lbox
42 53 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
showpage
end
%%EOF
