%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1071)
} def

/sequence { (\
GGAAAAAAGAAGACUACAGAAAAUCAAAGAUAUUUCAAAACUAGAGUCAAAGACCUAGAGUAGACUUCUAACGCAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 69 0.005022230 ubox
1 72 0.063125564 ubox
1 74 0.142765660 ubox
1 76 0.033421531 ubox
1 77 0.016615552 ubox
1 78 0.355388003 ubox
2 68 0.004953878 ubox
2 72 0.059469223 ubox
2 74 0.163759895 ubox
2 76 0.022493210 ubox
2 77 0.352817330 ubox
2 78 0.337575534 ubox
3 67 0.004663621 ubox
3 69 0.004757287 ubox
3 76 0.338696945 ubox
3 77 0.336791494 ubox
4 69 0.014022348 ubox
4 76 0.311814116 ubox
4 77 0.014733981 ubox
5 69 0.010102136 ubox
5 76 0.017502216 ubox
5 77 0.007649980 ubox
6 69 0.012462489 ubox
6 76 0.008676747 ubox
6 77 0.016804537 ubox
7 69 0.043702107 ubox
7 76 0.019326120 ubox
7 77 0.007728478 ubox
8 69 0.963135261 ubox
8 76 0.004339555 ubox
9 68 0.999586348 ubox
9 69 0.003783375 ubox
9 72 0.006076001 ubox
9 78 0.003970110 ubox
10 67 0.999446388 ubox
10 77 0.003925937 ubox
11 66 0.999113703 ubox
11 69 0.012710532 ubox
11 76 0.003490422 ubox
12 65 0.997333667 ubox
12 68 0.013222415 ubox
13 61 0.016642533 ubox
13 67 0.013078144 ubox
14 60 0.016839085 ubox
14 63 0.997272139 ubox
15 59 0.016337210 ubox
15 62 0.999299967 ubox
16 61 0.999178131 ubox
17 60 0.997976819 ubox
18 24 0.019544045 ubox
18 31 0.005894660 ubox
18 33 0.004661120 ubox
18 34 0.008830619 ubox
18 35 0.028172283 ubox
19 24 0.007383409 ubox
19 25 0.157233718 ubox
19 33 0.009712802 ubox
19 34 0.033037211 ubox
19 35 0.136435085 ubox
19 36 0.921485754 ubox
20 24 0.136962965 ubox
20 31 0.004772119 ubox
20 33 0.032019446 ubox
20 34 0.150713432 ubox
20 35 0.919999462 ubox
21 31 0.006320123 ubox
21 33 0.153139147 ubox
21 34 0.912343651 ubox
21 35 0.058800008 ubox
22 31 0.023470327 ubox
22 33 0.877519522 ubox
22 34 0.073477057 ubox
22 35 0.014709688 ubox
23 31 0.870123969 ubox
23 33 0.081037537 ubox
23 34 0.016655387 ubox
23 35 0.006045690 ubox
24 28 0.010852090 ubox
24 29 0.027224252 ubox
24 30 0.891521337 ubox
24 32 0.084097365 ubox
24 37 0.015206370 ubox
24 38 0.006834848 ubox
24 39 0.005974037 ubox
24 40 0.005857606 ubox
24 53 0.009224928 ubox
24 59 0.005341632 ubox
25 29 0.885150884 ubox
25 52 0.009407108 ubox
25 58 0.004805840 ubox
26 31 0.034658283 ubox
26 33 0.010678153 ubox
26 34 0.014177873 ubox
26 35 0.061927896 ubox
27 31 0.008868671 ubox
27 33 0.015013863 ubox
27 34 0.069299336 ubox
27 35 0.022452456 ubox
28 33 0.067967473 ubox
28 34 0.023951294 ubox
28 35 0.016321256 ubox
29 33 0.016919675 ubox
29 34 0.015598095 ubox
29 35 0.014275488 ubox
29 36 0.293719436 ubox
29 48 0.011200824 ubox
30 34 0.013486781 ubox
30 35 0.287543844 ubox
30 47 0.011190268 ubox
31 37 0.007011870 ubox
31 38 0.010529033 ubox
31 39 0.006627518 ubox
31 40 0.008451775 ubox
31 46 0.010639014 ubox
33 37 0.005568133 ubox
33 38 0.008307639 ubox
33 39 0.013634613 ubox
33 40 0.016604487 ubox
33 44 0.006937679 ubox
34 38 0.013070724 ubox
34 39 0.017396979 ubox
34 40 0.012655375 ubox
34 43 0.007511411 ubox
34 46 0.003182869 ubox
35 39 0.012501915 ubox
35 40 0.007911844 ubox
35 45 0.006533860 ubox
35 59 0.005683571 ubox
36 44 0.006660652 ubox
36 58 0.004789796 ubox
38 61 0.005012436 ubox
40 61 0.003532557 ubox
41 52 0.003180339 ubox
41 58 0.992924754 ubox
41 60 0.003874410 ubox
42 51 0.003174887 ubox
42 57 0.998842881 ubox
42 58 0.004336400 ubox
42 59 0.004785372 ubox
43 56 0.999365904 ubox
44 55 0.999423576 ubox
44 56 0.005599468 ubox
45 56 0.006512201 ubox
46 54 0.998384004 ubox
46 55 0.005670895 ubox
47 51 0.003201006 ubox
47 52 0.012199170 ubox
47 53 0.997845206 ubox
48 52 0.989453913 ubox
62 69 0.003391471 ubox
63 68 0.003395225 ubox
69 75 0.003816675 ubox
70 76 0.010552877 ubox
70 77 0.025137198 ubox
71 76 0.022854568 ubox
71 77 0.011215302 ubox
72 79 0.147619989 ubox
73 77 0.007648269 ubox
73 78 0.145099085 ubox
74 79 0.034930799 ubox
8 69 0.9500000 lbox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
showpage
end
%%EOF
