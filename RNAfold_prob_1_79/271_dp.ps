%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (271)
} def

/sequence { (\
GGAAAAAAGAUCAAGAUCGAAAGAUCAGAGAAGACGAGCAGGCGAAAGGCUGAGUCGGCUCAAGAUCAAAGCUAGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.034112570 ubox
1 18 0.005869962 ubox
1 26 0.003710410 ubox
1 67 0.012585965 ubox
1 72 0.043353699 ubox
1 73 0.157582094 ubox
1 76 0.014082171 ubox
1 77 0.011621321 ubox
1 78 0.270611382 ubox
2 11 0.030226637 ubox
2 12 0.051371330 ubox
2 17 0.003926593 ubox
2 18 0.012847713 ubox
2 25 0.003376330 ubox
2 26 0.003835952 ubox
2 66 0.007760127 ubox
2 67 0.019928184 ubox
2 72 0.166733849 ubox
2 73 0.017710804 ubox
2 76 0.017337603 ubox
2 77 0.269971792 ubox
2 78 0.258214031 ubox
3 11 0.049582784 ubox
3 17 0.012146223 ubox
3 25 0.003748736 ubox
3 66 0.018641517 ubox
3 73 0.032390061 ubox
3 76 0.265892343 ubox
3 77 0.257810694 ubox
4 11 0.006226868 ubox
4 73 0.032817496 ubox
4 76 0.249742927 ubox
4 77 0.014581278 ubox
5 11 0.004211206 ubox
5 73 0.031901176 ubox
5 76 0.018159192 ubox
5 77 0.009205929 ubox
6 11 0.004546553 ubox
6 73 0.045447926 ubox
6 76 0.010803364 ubox
6 77 0.006343085 ubox
7 73 0.040086192 ubox
7 76 0.006750335 ubox
7 77 0.010046086 ubox
8 17 0.003775869 ubox
8 73 0.049224790 ubox
8 76 0.011084945 ubox
8 77 0.004947318 ubox
9 18 0.075125842 ubox
9 26 0.054787668 ubox
9 35 0.003830484 ubox
9 67 0.954905769 ubox
9 72 0.047518177 ubox
9 73 0.003820781 ubox
9 77 0.011805397 ubox
9 78 0.059615159 ubox
10 17 0.074215017 ubox
10 25 0.054841160 ubox
10 66 0.956228924 ubox
10 73 0.004393025 ubox
10 76 0.012909553 ubox
10 77 0.057863851 ubox
11 16 0.067813176 ubox
11 20 0.038845771 ubox
11 24 0.054820688 ubox
11 27 0.004184722 ubox
11 29 0.058380554 ubox
11 30 0.004068394 ubox
11 31 0.045606093 ubox
11 34 0.007493910 ubox
11 65 0.956271123 ubox
11 69 0.004202532 ubox
11 70 0.008344805 ubox
11 71 0.006991138 ubox
11 75 0.012163121 ubox
12 19 0.041549218 ubox
12 23 0.054781308 ubox
12 28 0.062310643 ubox
12 30 0.048655292 ubox
12 33 0.008135922 ubox
12 64 0.955363132 ubox
12 71 0.008013543 ubox
12 75 0.050673908 ubox
12 79 0.004754845 ubox
13 73 0.004788442 ubox
13 76 0.003570731 ubox
13 77 0.008429877 ubox
14 73 0.048014437 ubox
14 76 0.009502397 ubox
14 77 0.005062477 ubox
15 26 0.985921614 ubox
15 61 0.003290548 ubox
15 67 0.027522474 ubox
15 72 0.048715669 ubox
15 76 0.005475109 ubox
15 77 0.010238307 ubox
15 78 0.027077233 ubox
16 25 0.986902746 ubox
16 66 0.027563901 ubox
16 73 0.007079503 ubox
16 76 0.011272982 ubox
16 77 0.026405069 ubox
17 24 0.987029146 ubox
17 29 0.003761585 ubox
17 65 0.027556149 ubox
17 70 0.007669330 ubox
17 71 0.009238918 ubox
17 74 0.005093402 ubox
17 75 0.011162715 ubox
18 23 0.986853311 ubox
18 28 0.003949681 ubox
18 64 0.027532222 ubox
18 71 0.026264692 ubox
18 75 0.022015859 ubox
18 79 0.024252234 ubox
19 26 0.020760110 ubox
19 72 0.027570692 ubox
19 73 0.003365752 ubox
19 78 0.027672920 ubox
20 25 0.018990161 ubox
20 73 0.004421234 ubox
20 77 0.027441872 ubox
21 76 0.025237872 ubox
22 73 0.006407844 ubox
22 76 0.003578004 ubox
23 67 0.144396352 ubox
23 72 0.004320602 ubox
24 66 0.144668031 ubox
25 34 0.003522081 ubox
25 65 0.144679786 ubox
26 33 0.004119466 ubox
26 64 0.144438862 ubox
27 60 0.009659871 ubox
28 35 0.014337115 ubox
28 59 0.010292075 ubox
28 61 0.977227709 ubox
28 67 0.008450413 ubox
28 78 0.004148201 ubox
29 60 0.978268468 ubox
29 66 0.008410022 ubox
29 77 0.004038852 ubox
30 35 0.012304837 ubox
30 59 0.978015246 ubox
30 61 0.067311041 ubox
30 67 0.008651119 ubox
30 76 0.003195397 ubox
30 78 0.006653518 ubox
31 60 0.054875786 ubox
31 66 0.008467911 ubox
31 77 0.006482001 ubox
32 60 0.056666518 ubox
32 76 0.005664146 ubox
33 56 0.976957074 ubox
33 59 0.067884471 ubox
33 61 0.016438814 ubox
33 67 0.004481854 ubox
33 77 0.007003737 ubox
33 78 0.003471810 ubox
34 55 0.976879160 ubox
34 60 0.015725844 ubox
34 66 0.004428167 ubox
34 76 0.008013107 ubox
35 54 0.973686592 ubox
35 57 0.104268284 ubox
35 58 0.007448955 ubox
35 64 0.003538957 ubox
35 75 0.008371734 ubox
35 79 0.159586649 ubox
36 55 0.007109346 ubox
36 56 0.106138807 ubox
36 61 0.072893150 ubox
36 78 0.167789236 ubox
37 51 0.143367918 ubox
37 55 0.105598017 ubox
37 60 0.072977136 ubox
37 73 0.008631439 ubox
37 77 0.167715975 ubox
38 50 0.147789475 ubox
38 51 0.034257268 ubox
38 55 0.008913275 ubox
38 59 0.073000528 ubox
38 72 0.009197900 ubox
38 76 0.167670034 ubox
39 48 0.015449129 ubox
39 49 0.146983010 ubox
39 52 0.912722200 ubox
39 54 0.014238636 ubox
39 58 0.072661197 ubox
39 71 0.009183611 ubox
39 75 0.167201703 ubox
40 51 0.916312131 ubox
40 73 0.018676817 ubox
41 50 0.911331760 ubox
41 51 0.318250895 ubox
41 56 0.070961044 ubox
41 67 0.006221878 ubox
41 72 0.015567189 ubox
41 73 0.152293882 ubox
42 50 0.337048158 ubox
42 55 0.072211993 ubox
42 66 0.005968595 ubox
42 72 0.166875453 ubox
43 48 0.896514227 ubox
43 49 0.351246448 ubox
43 54 0.072236532 ubox
43 57 0.003767052 ubox
43 64 0.004974438 ubox
43 71 0.167171962 ubox
43 79 0.003756761 ubox
44 50 0.004484310 ubox
44 51 0.003208897 ubox
44 56 0.003777111 ubox
44 61 0.004426081 ubox
44 67 0.022520144 ubox
44 78 0.004080582 ubox
45 51 0.006151004 ubox
45 55 0.003573375 ubox
45 60 0.003516532 ubox
45 66 0.022025354 ubox
45 77 0.004047519 ubox
46 51 0.031053071 ubox
46 66 0.004276114 ubox
46 76 0.003778090 ubox
47 51 0.006654717 ubox
47 60 0.003270168 ubox
47 66 0.018396382 ubox
48 60 0.034666898 ubox
48 61 0.009924925 ubox
48 66 0.020755425 ubox
48 67 0.083649063 ubox
48 73 0.005429237 ubox
49 59 0.037639676 ubox
49 66 0.083316959 ubox
49 67 0.008494272 ubox
49 72 0.005695987 ubox
50 58 0.037698184 ubox
50 64 0.148178684 ubox
50 71 0.005708300 ubox
51 57 0.037562902 ubox
51 62 0.123783175 ubox
51 63 0.104826299 ubox
51 68 0.004475649 ubox
51 70 0.005488823 ubox
52 56 0.035797389 ubox
52 61 0.163248849 ubox
52 67 0.005028981 ubox
53 60 0.163269807 ubox
53 66 0.004355263 ubox
54 59 0.161909578 ubox
54 61 0.004265176 ubox
54 66 0.006155429 ubox
55 65 0.007859050 ubox
56 64 0.007952878 ubox
57 73 0.017267234 ubox
58 72 0.021219201 ubox
58 76 0.003163520 ubox
59 71 0.021239816 ubox
59 75 0.003341218 ubox
60 70 0.020281540 ubox
62 77 0.003833723 ubox
63 73 0.038801726 ubox
63 76 0.004215478 ubox
64 72 0.040188676 ubox
64 73 0.005440635 ubox
64 77 0.021910240 ubox
64 78 0.059834494 ubox
65 73 0.003803123 ubox
65 76 0.024294847 ubox
65 77 0.058419949 ubox
66 70 0.006173739 ubox
66 71 0.008379594 ubox
66 75 0.024743747 ubox
67 71 0.005402529 ubox
67 75 0.045271050 ubox
67 79 0.004449337 ubox
68 73 0.022208662 ubox
68 76 0.009764687 ubox
68 77 0.035982263 ubox
69 73 0.013737230 ubox
69 76 0.036134668 ubox
69 77 0.053186903 ubox
70 76 0.057831459 ubox
70 77 0.027626729 ubox
71 76 0.023120376 ubox
71 77 0.012006031 ubox
71 78 0.051479229 ubox
72 79 0.040360541 ubox
73 79 0.007995551 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
