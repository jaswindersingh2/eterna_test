%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (856)
} def

/sequence { (\
GGAAAACAUUGACAUCAAAAGGAAAAAACAAAGAGUCAAAAGACACUUUGACCGAUGACAAUGAAAAAUUGCCGAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.034480756 ubox
1 13 0.015896639 ubox
1 16 0.004615522 ubox
1 53 0.017293516 ubox
1 69 0.034579579 ubox
1 70 0.028711060 ubox
1 72 0.095965614 ubox
1 73 0.675753378 ubox
1 78 0.061275499 ubox
2 7 0.009492572 ubox
2 10 0.003622685 ubox
2 13 0.003197941 ubox
2 15 0.003352112 ubox
2 16 0.008821326 ubox
2 52 0.017250602 ubox
2 69 0.030191431 ubox
2 70 0.037783211 ubox
2 72 0.675509139 ubox
2 73 0.032716290 ubox
2 77 0.059870744 ubox
2 78 0.087773502 ubox
3 9 0.003777929 ubox
3 10 0.005972172 ubox
3 15 0.008433143 ubox
3 69 0.053310479 ubox
3 70 0.293545714 ubox
3 76 0.056778674 ubox
3 77 0.086987403 ubox
4 9 0.005308114 ubox
4 10 0.013001913 ubox
4 69 0.276978992 ubox
4 70 0.220190897 ubox
4 76 0.078204070 ubox
4 77 0.006209544 ubox
5 9 0.009983239 ubox
5 10 0.003610337 ubox
5 69 0.289508772 ubox
5 70 0.194685837 ubox
5 76 0.007160400 ubox
5 77 0.007949752 ubox
6 69 0.195112135 ubox
6 70 0.029309224 ubox
6 76 0.009375608 ubox
6 77 0.003688489 ubox
7 11 0.003654279 ubox
7 21 0.013862493 ubox
7 22 0.010093503 ubox
7 57 0.039305029 ubox
7 63 0.988188336 ubox
7 71 0.010176997 ubox
7 74 0.006834959 ubox
8 56 0.039604946 ubox
8 62 0.992288209 ubox
8 69 0.005232139 ubox
8 70 0.009031504 ubox
8 76 0.016966841 ubox
9 18 0.042436786 ubox
9 19 0.008869781 ubox
9 20 0.011254499 ubox
9 23 0.003287244 ubox
9 24 0.003335176 ubox
9 25 0.011327359 ubox
9 26 0.004908902 ubox
9 27 0.004443243 ubox
9 28 0.004497560 ubox
9 39 0.005045974 ubox
9 55 0.039628429 ubox
9 61 0.992368637 ubox
9 64 0.005251372 ubox
9 65 0.008884239 ubox
9 66 0.004363000 ubox
9 67 0.004782031 ubox
9 68 0.005941506 ubox
9 75 0.019600213 ubox
10 17 0.048642456 ubox
10 18 0.009143233 ubox
10 19 0.012527207 ubox
10 20 0.003731996 ubox
10 22 0.003477981 ubox
10 23 0.003715598 ubox
10 24 0.013001518 ubox
10 25 0.005545173 ubox
10 26 0.005028065 ubox
10 27 0.005321215 ubox
10 30 0.003556005 ubox
10 38 0.005934262 ubox
10 54 0.039563536 ubox
10 60 0.992768936 ubox
10 63 0.005051601 ubox
10 64 0.009150276 ubox
10 65 0.004414971 ubox
10 66 0.005010662 ubox
10 67 0.005845013 ubox
10 68 0.003886224 ubox
10 74 0.019801592 ubox
10 79 0.012845975 ubox
11 16 0.049589224 ubox
11 29 0.003618614 ubox
11 37 0.006083661 ubox
11 53 0.039163747 ubox
11 59 0.991386481 ubox
11 62 0.003589673 ubox
11 73 0.019745651 ubox
11 78 0.021993048 ubox
12 36 0.006085238 ubox
12 62 0.007601233 ubox
12 77 0.021613313 ubox
13 21 0.017973557 ubox
13 22 0.012291721 ubox
13 35 0.006069547 ubox
13 57 0.986471487 ubox
13 63 0.008711126 ubox
13 71 0.010016817 ubox
14 56 0.987978953 ubox
14 62 0.008672501 ubox
14 70 0.009841430 ubox
14 76 0.021632956 ubox
15 20 0.003699893 ubox
15 22 0.015277867 ubox
15 23 0.039151571 ubox
15 34 0.006582993 ubox
15 51 0.011751326 ubox
15 54 0.004283185 ubox
15 55 0.987687456 ubox
15 58 0.103907532 ubox
15 61 0.005959355 ubox
15 64 0.013168454 ubox
15 75 0.022351971 ubox
16 21 0.027936264 ubox
16 22 0.043804375 ubox
16 33 0.006824258 ubox
16 50 0.011862095 ubox
16 54 0.986390911 ubox
16 57 0.105066007 ubox
16 63 0.013491903 ubox
16 74 0.022379241 ubox
17 49 0.011366331 ubox
17 56 0.100665089 ubox
17 62 0.012920789 ubox
17 77 0.003745309 ubox
18 48 0.009324129 ubox
18 49 0.011244670 ubox
18 56 0.013508499 ubox
18 76 0.004138948 ubox
19 47 0.006517321 ubox
19 48 0.012450873 ubox
19 49 0.019137474 ubox
20 47 0.012854895 ubox
20 48 0.018846604 ubox
20 49 0.009406958 ubox
21 29 0.148294028 ubox
21 46 0.013132096 ubox
21 47 0.018393239 ubox
21 48 0.006298849 ubox
21 49 0.014778019 ubox
21 52 0.042260276 ubox
21 53 0.805588634 ubox
21 59 0.004865978 ubox
21 73 0.016700040 ubox
21 78 0.006966479 ubox
22 29 0.071690734 ubox
22 44 0.003435225 ubox
22 46 0.018242230 ubox
22 48 0.010879445 ubox
22 49 0.012521695 ubox
22 52 0.804850701 ubox
22 53 0.055753790 ubox
22 72 0.016649720 ubox
22 77 0.006734108 ubox
22 78 0.013037756 ubox
23 47 0.007752672 ubox
23 48 0.011011381 ubox
23 49 0.008189013 ubox
23 56 0.003852225 ubox
23 76 0.006222343 ubox
23 77 0.012850511 ubox
24 47 0.006520887 ubox
24 48 0.006926671 ubox
24 49 0.022398166 ubox
24 56 0.003663074 ubox
24 76 0.011128322 ubox
25 47 0.004107294 ubox
25 48 0.017471392 ubox
25 49 0.049758067 ubox
26 47 0.010075332 ubox
26 48 0.038399324 ubox
26 49 0.028759830 ubox
27 47 0.021033056 ubox
27 48 0.022654729 ubox
27 49 0.020599448 ubox
28 36 0.006892614 ubox
28 47 0.012927708 ubox
28 48 0.014902598 ubox
28 49 0.012908930 ubox
29 33 0.016268972 ubox
29 35 0.008211382 ubox
29 50 0.966411599 ubox
29 57 0.016264224 ubox
30 48 0.006221013 ubox
30 49 0.970570239 ubox
30 56 0.016113999 ubox
31 47 0.005877888 ubox
31 48 0.971743849 ubox
31 49 0.008254205 ubox
32 47 0.973479723 ubox
32 48 0.007374950 ubox
32 49 0.020883697 ubox
33 46 0.970697414 ubox
33 47 0.005553454 ubox
33 48 0.022415066 ubox
33 53 0.159142215 ubox
34 47 0.022820371 ubox
35 44 0.972283533 ubox
35 46 0.022352647 ubox
35 52 0.218256009 ubox
35 53 0.010541518 ubox
36 43 0.974686063 ubox
36 45 0.021496978 ubox
36 51 0.219693177 ubox
37 42 0.973205381 ubox
37 50 0.219831594 ubox
38 49 0.217038896 ubox
39 47 0.003695082 ubox
39 48 0.213452403 ubox
39 49 0.033110823 ubox
40 47 0.193354202 ubox
40 48 0.046904632 ubox
41 47 0.057686622 ubox
41 48 0.004300611 ubox
42 46 0.065131694 ubox
42 47 0.005345699 ubox
52 57 0.004303566 ubox
52 79 0.006495468 ubox
53 57 0.003739549 ubox
53 71 0.010520981 ubox
53 74 0.020984184 ubox
53 79 0.064315342 ubox
54 70 0.010851859 ubox
54 73 0.020852229 ubox
54 76 0.004686833 ubox
54 77 0.017441605 ubox
54 78 0.069910546 ubox
55 62 0.003773751 ubox
55 69 0.010891680 ubox
55 76 0.023674765 ubox
55 77 0.066770173 ubox
56 61 0.004000099 ubox
56 68 0.010811700 ubox
56 74 0.056350964 ubox
56 75 0.023930366 ubox
56 79 0.004326471 ubox
57 72 0.027967223 ubox
57 73 0.071956185 ubox
57 78 0.007089359 ubox
58 77 0.007047655 ubox
59 71 0.107042344 ubox
60 70 0.107316234 ubox
61 69 0.107221521 ubox
62 67 0.006030485 ubox
62 68 0.106641763 ubox
62 79 0.010069167 ubox
63 70 0.006150326 ubox
63 72 0.005769805 ubox
63 73 0.006105914 ubox
63 78 0.030103419 ubox
64 69 0.016188295 ubox
64 70 0.037616807 ubox
64 76 0.005266565 ubox
64 77 0.032344127 ubox
65 69 0.030146141 ubox
65 70 0.024402298 ubox
65 76 0.029415903 ubox
65 77 0.014034746 ubox
66 70 0.012817902 ubox
66 76 0.013909562 ubox
66 77 0.027115847 ubox
67 76 0.028838952 ubox
67 77 0.110926019 ubox
68 76 0.123456330 ubox
68 77 0.027274668 ubox
69 74 0.009759386 ubox
69 75 0.124398681 ubox
69 79 0.004231769 ubox
70 74 0.112529621 ubox
70 75 0.037748966 ubox
70 79 0.032586703 ubox
71 76 0.008248990 ubox
71 77 0.008159160 ubox
71 78 0.054140321 ubox
72 79 0.025160865 ubox
73 79 0.083878489 ubox
74 78 0.088676620 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
