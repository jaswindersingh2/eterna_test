%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (447)
} def

/sequence { (\
GGAAAAGAUUGGAGGACUCAAAAGAGAUCAAAAGAUCCUAAAACUGAACAAAAGUUCAGCCAAUCAAAAUCCUGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 61 0.004379459 ubox
1 70 0.004537860 ubox
1 71 0.034860802 ubox
1 72 0.977145486 ubox
1 73 0.021749551 ubox
1 75 0.009161670 ubox
1 76 0.004565636 ubox
1 78 0.020939474 ubox
2 60 0.004368489 ubox
2 70 0.032384354 ubox
2 71 0.978792437 ubox
2 72 0.021566948 ubox
2 75 0.005206703 ubox
2 77 0.020600171 ubox
2 78 0.024337275 ubox
3 70 0.959846994 ubox
3 73 0.006127100 ubox
3 76 0.019991468 ubox
3 77 0.024223435 ubox
4 70 0.030168327 ubox
4 76 0.022565662 ubox
5 70 0.004690501 ubox
5 73 0.004297393 ubox
5 77 0.003863184 ubox
6 70 0.006045808 ubox
6 73 0.016888011 ubox
6 76 0.004670382 ubox
7 37 0.010110579 ubox
7 65 0.996056500 ubox
7 71 0.008865294 ubox
7 72 0.011365821 ubox
7 75 0.004137096 ubox
7 78 0.041718626 ubox
8 36 0.010282745 ubox
8 64 0.997819430 ubox
8 70 0.010055538 ubox
8 77 0.041392056 ubox
9 21 0.004434288 ubox
9 35 0.010285723 ubox
9 63 0.997397583 ubox
9 67 0.006055047 ubox
9 69 0.009336320 ubox
10 20 0.005408191 ubox
10 34 0.010199675 ubox
10 62 0.997799120 ubox
10 66 0.007271396 ubox
10 68 0.008166305 ubox
10 79 0.003730642 ubox
11 19 0.005797941 ubox
11 60 0.003982705 ubox
11 61 0.998299882 ubox
11 65 0.007595088 ubox
11 72 0.005087223 ubox
11 75 0.050982126 ubox
11 76 0.009085707 ubox
11 78 0.006328582 ubox
12 17 0.007367533 ubox
12 18 0.005279624 ubox
12 19 0.042551413 ubox
12 29 0.005857425 ubox
12 60 0.994104471 ubox
12 61 0.004482306 ubox
12 64 0.007092075 ubox
12 65 0.006826966 ubox
12 71 0.005099229 ubox
12 75 0.009742065 ubox
12 77 0.006309583 ubox
12 78 0.004434850 ubox
13 18 0.047866471 ubox
13 28 0.007024881 ubox
13 39 0.581070690 ubox
13 45 0.004256622 ubox
13 64 0.006479913 ubox
13 70 0.004692531 ubox
13 73 0.053138513 ubox
13 76 0.006098603 ubox
13 77 0.004414259 ubox
14 18 0.013898754 ubox
14 19 0.170991856 ubox
14 28 0.009490670 ubox
14 29 0.101140885 ubox
14 37 0.005430879 ubox
14 38 0.599204557 ubox
14 39 0.025081502 ubox
14 44 0.004979874 ubox
14 57 0.031077273 ubox
14 60 0.006300372 ubox
14 61 0.012018867 ubox
14 72 0.053364076 ubox
14 75 0.005949169 ubox
14 76 0.004366002 ubox
15 19 0.054940123 ubox
15 28 0.089634143 ubox
15 29 0.219252112 ubox
15 37 0.598565824 ubox
15 38 0.025825519 ubox
15 56 0.031197453 ubox
15 57 0.028710975 ubox
15 60 0.012577738 ubox
15 71 0.053347583 ubox
15 75 0.004357960 ubox
16 28 0.219982676 ubox
16 36 0.575632496 ubox
16 55 0.032804498 ubox
16 56 0.021585372 ubox
16 70 0.048956866 ubox
16 73 0.004235132 ubox
17 24 0.100005009 ubox
17 26 0.571662898 ubox
17 34 0.188492680 ubox
17 54 0.034268149 ubox
17 59 0.005210753 ubox
18 22 0.017951605 ubox
18 23 0.093321961 ubox
18 24 0.009516016 ubox
18 25 0.605642847 ubox
18 27 0.054159644 ubox
18 31 0.003744649 ubox
18 32 0.010558802 ubox
18 33 0.175061852 ubox
18 34 0.025089490 ubox
18 35 0.259148474 ubox
18 40 0.014824045 ubox
18 41 0.009736812 ubox
18 42 0.015343060 ubox
18 43 0.017979777 ubox
18 47 0.018926704 ubox
18 53 0.027648213 ubox
18 58 0.003666791 ubox
18 68 0.010392337 ubox
18 69 0.005385802 ubox
19 24 0.608571427 ubox
19 26 0.062729982 ubox
19 34 0.260466898 ubox
19 46 0.023892568 ubox
20 28 0.007538302 ubox
20 39 0.005621685 ubox
20 45 0.023126688 ubox
21 28 0.015617022 ubox
21 39 0.009187958 ubox
22 28 0.018216262 ubox
22 39 0.032659842 ubox
23 28 0.057056654 ubox
23 39 0.628749496 ubox
23 45 0.005531519 ubox
24 28 0.013460989 ubox
24 29 0.119274810 ubox
24 37 0.009646958 ubox
24 38 0.652326823 ubox
24 39 0.064959559 ubox
24 44 0.005569442 ubox
25 36 0.009313643 ubox
25 39 0.073201629 ubox
26 36 0.003967798 ubox
26 37 0.742086946 ubox
26 38 0.054392795 ubox
27 36 0.767994348 ubox
28 32 0.006139786 ubox
28 33 0.010055310 ubox
28 34 0.005424154 ubox
28 35 0.781158099 ubox
29 34 0.782367327 ubox
30 36 0.007540144 ubox
30 39 0.011521276 ubox
31 36 0.008852730 ubox
31 39 0.009022991 ubox
32 36 0.005450631 ubox
32 39 0.014820957 ubox
33 39 0.054722194 ubox
33 45 0.003188179 ubox
34 38 0.055529863 ubox
34 39 0.012423198 ubox
34 44 0.003806037 ubox
35 39 0.007070825 ubox
36 40 0.005656013 ubox
36 41 0.008485303 ubox
36 42 0.007898455 ubox
36 43 0.008542177 ubox
38 46 0.004823033 ubox
39 43 0.010213159 ubox
40 45 0.003387876 ubox
42 56 0.016604055 ubox
43 55 0.024516638 ubox
44 54 0.025357236 ubox
44 59 0.991769958 ubox
45 51 0.004207896 ubox
45 52 0.005662460 ubox
45 53 0.025223173 ubox
45 58 0.997729585 ubox
46 57 0.999018485 ubox
47 56 0.998675333 ubox
48 55 0.997809425 ubox
49 54 0.996292543 ubox
66 73 0.005906315 ubox
66 77 0.007584091 ubox
67 73 0.005126333 ubox
67 76 0.008396044 ubox
67 77 0.005732391 ubox
68 73 0.005585013 ubox
68 76 0.006029676 ubox
68 77 0.008352270 ubox
69 76 0.008262386 ubox
69 77 0.004540179 ubox
71 79 0.003859091 ubox
72 79 0.010021243 ubox
73 79 0.029471806 ubox
74 78 0.050613571 ubox
75 79 0.014667536 ubox
1 72 0.9500000 lbox
2 71 0.9500000 lbox
3 70 0.9500000 lbox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
23 39 0.9500000 lbox
24 38 0.9500000 lbox
26 37 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
