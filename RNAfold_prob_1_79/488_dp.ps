%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (488)
} def

/sequence { (\
GGAAAACCAUCCGGCAGGCGAAAGCCGGCGAAAGCCGCCAAAAGCUAGCGAAAGCUAGCGGAUGGAAACCAUAGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.007081778 ubox
1 8 0.010678287 ubox
1 12 0.030844098 ubox
1 69 0.036173088 ubox
1 70 0.928017439 ubox
1 72 0.017379078 ubox
1 75 0.012712748 ubox
1 76 0.010467579 ubox
1 78 0.031843546 ubox
2 7 0.011003663 ubox
2 11 0.030868074 ubox
2 69 0.927380239 ubox
2 70 0.069532137 ubox
2 72 0.006625168 ubox
2 75 0.012061477 ubox
2 77 0.031354146 ubox
2 78 0.048260026 ubox
3 10 0.029133121 ubox
3 72 0.004806784 ubox
3 76 0.029823613 ubox
3 77 0.048053561 ubox
4 72 0.004948592 ubox
4 76 0.044367579 ubox
4 77 0.003389040 ubox
5 72 0.005222654 ubox
5 76 0.004009419 ubox
5 77 0.004657034 ubox
6 72 0.009478161 ubox
6 76 0.005543302 ubox
7 14 0.004322911 ubox
7 64 0.009538462 ubox
7 65 0.996854245 ubox
8 13 0.004341298 ubox
8 64 0.999352156 ubox
9 63 0.999041635 ubox
10 62 0.999199249 ubox
11 28 0.004833620 ubox
11 61 0.999431955 ubox
12 27 0.006597119 ubox
12 60 0.998400959 ubox
12 61 0.003453108 ubox
13 19 0.004878843 ubox
13 26 0.294451218 ubox
13 29 0.003497341 ubox
13 36 0.006461560 ubox
13 39 0.808751446 ubox
13 59 0.157892352 ubox
13 70 0.004909713 ubox
13 76 0.025090288 ubox
14 25 0.295149545 ubox
14 26 0.003244562 ubox
14 29 0.018031417 ubox
14 35 0.006453721 ubox
14 38 0.809678902 ubox
14 45 0.005068111 ubox
14 59 0.019420303 ubox
14 69 0.004891912 ubox
14 75 0.026906884 ubox
15 24 0.295089724 ubox
15 27 0.008202899 ubox
15 28 0.018020442 ubox
15 34 0.006410907 ubox
15 37 0.808805834 ubox
15 44 0.005859035 ubox
15 58 0.026234990 ubox
15 74 0.026896277 ubox
17 25 0.003409495 ubox
17 26 0.952548994 ubox
17 36 0.045910248 ubox
17 39 0.010657411 ubox
18 25 0.954107372 ubox
18 26 0.003933668 ubox
18 29 0.004404963 ubox
18 35 0.045929817 ubox
18 38 0.010641201 ubox
18 45 0.003344679 ubox
19 24 0.953752155 ubox
19 28 0.004373768 ubox
19 34 0.045900992 ubox
19 37 0.010059876 ubox
19 44 0.003461928 ubox
19 79 0.003776012 ubox
20 26 0.003685795 ubox
20 29 0.003295586 ubox
20 36 0.006050764 ubox
20 78 0.004093455 ubox
21 77 0.003354457 ubox
23 76 0.003501918 ubox
24 29 0.029046721 ubox
24 35 0.004387682 ubox
24 38 0.007771788 ubox
24 39 0.007627098 ubox
24 75 0.004226129 ubox
25 30 0.009350076 ubox
25 34 0.004372638 ubox
25 37 0.005528632 ubox
25 74 0.004214784 ubox
26 37 0.033428108 ubox
27 36 0.825270610 ubox
27 39 0.560497853 ubox
28 35 0.826142944 ubox
28 38 0.561145131 ubox
29 34 0.825830484 ubox
29 37 0.561140776 ubox
29 79 0.004219663 ubox
30 35 0.023752127 ubox
30 36 0.557196811 ubox
30 39 0.004465713 ubox
30 78 0.005447394 ubox
31 77 0.004455380 ubox
32 77 0.003841565 ubox
33 76 0.005075398 ubox
34 75 0.005989739 ubox
35 74 0.005975823 ubox
37 45 0.017375834 ubox
38 44 0.018054837 ubox
38 61 0.005086289 ubox
38 65 0.017235777 ubox
39 44 0.006482276 ubox
39 60 0.005127601 ubox
39 64 0.017297929 ubox
40 63 0.016781106 ubox
43 56 0.014232326 ubox
44 55 0.014795228 ubox
44 59 0.986020968 ubox
45 54 0.014797483 ubox
45 58 0.999322602 ubox
46 53 0.014340249 ubox
46 57 0.999535274 ubox
47 56 0.999582710 ubox
48 55 0.999871693 ubox
49 54 0.999485152 ubox
60 70 0.006319093 ubox
60 75 0.004904930 ubox
60 76 0.003274556 ubox
61 69 0.006312704 ubox
61 75 0.003499977 ubox
62 72 0.025335581 ubox
63 71 0.026495788 ubox
64 70 0.026941048 ubox
65 69 0.026528745 ubox
65 70 0.004386898 ubox
65 78 0.036595768 ubox
66 72 0.008100024 ubox
66 76 0.004167289 ubox
66 77 0.040408163 ubox
67 72 0.008118051 ubox
67 76 0.040133216 ubox
67 77 0.011139122 ubox
68 72 0.005035929 ubox
68 76 0.011706356 ubox
68 77 0.005685727 ubox
69 74 0.030940499 ubox
69 79 0.008856367 ubox
70 74 0.010333953 ubox
70 79 0.017873955 ubox
71 76 0.014710763 ubox
71 77 0.028651227 ubox
72 79 0.013601785 ubox
73 77 0.008350107 ubox
74 78 0.038798446 ubox
75 79 0.014647142 ubox
1 70 0.9500000 lbox
2 69 0.9500000 lbox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
