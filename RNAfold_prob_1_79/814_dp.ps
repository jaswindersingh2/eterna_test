%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (814)
} def

/sequence { (\
GGAAAAAGAAGAUCUACUUUAAUAAAUAUCAUACCGAAAAGAGUAGAUAAUUUAUAAAGAGAAUCUCAUAAAAUUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.004614930 ubox
1 66 0.003891135 ubox
1 67 0.017006993 ubox
1 69 0.003994589 ubox
1 74 0.013289735 ubox
1 75 0.011608228 ubox
1 76 0.020862054 ubox
1 77 0.030549832 ubox
1 78 0.542788030 ubox
2 14 0.004897083 ubox
2 20 0.003338655 ubox
2 65 0.005141182 ubox
2 66 0.008849991 ubox
2 67 0.021243260 ubox
2 69 0.003972873 ubox
2 74 0.014836659 ubox
2 75 0.030746067 ubox
2 76 0.048018740 ubox
2 77 0.542759423 ubox
2 78 0.688056396 ubox
3 13 0.004646385 ubox
3 19 0.003438806 ubox
3 55 0.003694821 ubox
3 64 0.004959906 ubox
3 66 0.016763024 ubox
3 69 0.006638092 ubox
3 74 0.030747419 ubox
3 75 0.052078670 ubox
3 76 0.541863009 ubox
3 77 0.688372297 ubox
4 18 0.003358631 ubox
4 53 0.003743154 ubox
4 69 0.022148937 ubox
4 74 0.051468547 ubox
4 75 0.534651358 ubox
4 76 0.686376152 ubox
4 77 0.044357449 ubox
5 20 0.008083208 ubox
5 52 0.003834387 ubox
5 53 0.013322519 ubox
5 55 0.007366981 ubox
5 69 0.023220506 ubox
5 74 0.496457785 ubox
5 75 0.681757002 ubox
5 76 0.056844845 ubox
5 77 0.013637830 ubox
6 19 0.008886193 ubox
6 51 0.003565718 ubox
6 52 0.014243975 ubox
6 53 0.007993788 ubox
6 55 0.006216780 ubox
6 66 0.008272871 ubox
6 69 0.181287011 ubox
6 74 0.653319058 ubox
6 75 0.066248359 ubox
6 76 0.016419763 ubox
6 77 0.026944479 ubox
7 15 0.013699020 ubox
7 18 0.009197894 ubox
7 51 0.014305541 ubox
7 52 0.008224743 ubox
7 53 0.034968321 ubox
7 55 0.003661526 ubox
7 66 0.192802040 ubox
7 69 0.580958229 ubox
7 74 0.070360634 ubox
7 75 0.017476429 ubox
7 76 0.031312926 ubox
7 77 0.013919624 ubox
8 14 0.014212198 ubox
8 17 0.009253841 ubox
8 20 0.012298166 ubox
8 51 0.006778600 ubox
8 52 0.038607984 ubox
8 53 0.024561216 ubox
8 65 0.196981301 ubox
8 66 0.005731498 ubox
8 67 0.517422980 ubox
8 69 0.064786518 ubox
8 74 0.013465239 ubox
8 75 0.034644199 ubox
8 76 0.016818392 ubox
8 77 0.007818990 ubox
8 78 0.079237107 ubox
9 13 0.012373853 ubox
9 19 0.012782831 ubox
9 51 0.038489774 ubox
9 52 0.025361857 ubox
9 53 0.007045323 ubox
9 64 0.194092910 ubox
9 66 0.372584811 ubox
9 69 0.181284093 ubox
9 74 0.035819119 ubox
9 75 0.017357756 ubox
9 76 0.008588167 ubox
9 77 0.079178767 ubox
10 18 0.012936928 ubox
10 51 0.024974991 ubox
10 52 0.007340704 ubox
10 64 0.027534151 ubox
10 66 0.873197504 ubox
10 69 0.036823993 ubox
10 74 0.009548382 ubox
10 75 0.004889325 ubox
10 76 0.068942482 ubox
11 17 0.012932844 ubox
11 51 0.006388366 ubox
11 52 0.003186644 ubox
11 64 0.060682545 ubox
11 65 0.962189239 ubox
11 66 0.007145421 ubox
11 67 0.106906421 ubox
11 69 0.003204592 ubox
11 75 0.064954505 ubox
11 78 0.004655272 ubox
12 48 0.062031578 ubox
12 64 0.959200895 ubox
12 66 0.106302984 ubox
12 69 0.007752979 ubox
12 74 0.064230661 ubox
12 77 0.004581995 ubox
13 47 0.063793601 ubox
13 60 0.008702045 ubox
13 62 0.718131006 ubox
13 63 0.684604726 ubox
13 68 0.003810605 ubox
13 73 0.031622337 ubox
14 46 0.064119879 ubox
14 59 0.008515651 ubox
14 61 0.983902773 ubox
15 45 0.064104761 ubox
15 58 0.007628237 ubox
15 60 0.980302196 ubox
15 61 0.070152737 ubox
15 62 0.027954169 ubox
15 63 0.007076212 ubox
15 70 0.003469275 ubox
16 44 0.064107103 ubox
16 69 0.003585696 ubox
17 43 0.064116480 ubox
17 59 0.993254771 ubox
17 61 0.039839918 ubox
18 42 0.063962583 ubox
18 57 0.021394877 ubox
18 58 0.994614074 ubox
18 59 0.027195527 ubox
18 60 0.039534704 ubox
19 40 0.003502334 ubox
19 41 0.063239200 ubox
19 56 0.020518057 ubox
19 57 0.992477315 ubox
19 58 0.041885646 ubox
19 59 0.038560990 ubox
20 39 0.004360565 ubox
20 40 0.057552257 ubox
20 54 0.008284046 ubox
20 56 0.984821884 ubox
20 57 0.047988950 ubox
20 58 0.034020335 ubox
21 52 0.006404952 ubox
21 53 0.009651345 ubox
21 55 0.713962783 ubox
22 51 0.010457896 ubox
22 52 0.010900630 ubox
22 53 0.023123604 ubox
22 55 0.683349370 ubox
23 33 0.003165206 ubox
23 36 0.003227121 ubox
23 37 0.009543232 ubox
23 38 0.004793594 ubox
23 39 0.004119222 ubox
23 50 0.010446531 ubox
23 54 0.961554910 ubox
24 32 0.003207881 ubox
24 51 0.009553702 ubox
24 52 0.190887595 ubox
24 53 0.966484497 ubox
25 51 0.191035174 ubox
25 52 0.964726028 ubox
25 53 0.018794312 ubox
26 32 0.004678745 ubox
26 51 0.954307948 ubox
26 52 0.018389912 ubox
27 31 0.004400736 ubox
27 33 0.014267625 ubox
27 39 0.007971058 ubox
27 49 0.716695960 ubox
27 50 0.680563395 ubox
28 32 0.013200183 ubox
28 48 0.981510627 ubox
29 37 0.014932134 ubox
29 46 0.003386436 ubox
29 47 0.987371757 ubox
29 49 0.011027889 ubox
30 36 0.015260477 ubox
30 46 0.985549559 ubox
31 44 0.045090574 ubox
31 48 0.004272188 ubox
32 42 0.005514778 ubox
32 43 0.043901412 ubox
32 45 0.986326554 ubox
33 44 0.993292636 ubox
34 41 0.032936868 ubox
34 43 0.992512657 ubox
35 41 0.847237092 ubox
35 43 0.049023526 ubox
49 75 0.004204616 ubox
50 74 0.005320075 ubox
51 72 0.012917211 ubox
51 73 0.005399414 ubox
52 71 0.014932617 ubox
52 72 0.005246431 ubox
53 70 0.015526487 ubox
53 71 0.004759394 ubox
54 69 0.015647701 ubox
55 68 0.015148196 ubox
55 70 0.003825796 ubox
56 69 0.003820981 ubox
57 69 0.005392172 ubox
58 66 0.012551920 ubox
58 69 0.003462253 ubox
59 65 0.013242739 ubox
59 67 0.034143548 ubox
59 78 0.056131322 ubox
60 64 0.011528614 ubox
60 66 0.034235350 ubox
60 77 0.056269995 ubox
61 65 0.033499640 ubox
61 67 0.008680602 ubox
61 76 0.056296264 ubox
61 78 0.006515577 ubox
62 66 0.007588392 ubox
62 75 0.056334116 ubox
62 77 0.006518854 ubox
63 69 0.004680990 ubox
63 74 0.056172890 ubox
63 76 0.006388580 ubox
64 68 0.004335484 ubox
64 73 0.055381781 ubox
66 70 0.003628613 ubox
66 71 0.012058839 ubox
66 72 0.006268376 ubox
66 73 0.005276125 ubox
67 79 0.005943861 ubox
68 74 0.016201060 ubox
68 75 0.017693428 ubox
68 76 0.009968348 ubox
68 77 0.014833208 ubox
69 73 0.016950153 ubox
69 79 0.003573110 ubox
70 74 0.005887654 ubox
70 75 0.008654354 ubox
70 76 0.010980019 ubox
70 77 0.017642072 ubox
71 75 0.009820265 ubox
71 76 0.017729440 ubox
71 77 0.012458861 ubox
72 76 0.010581138 ubox
72 77 0.008656971 ubox
73 77 0.004523852 ubox
74 79 0.004502580 ubox
2 78 0.9500000 lbox
3 77 0.9500000 lbox
4 76 0.9500000 lbox
5 75 0.9500000 lbox
6 74 0.9500000 lbox
7 69 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 41 0.9500000 lbox
showpage
end
%%EOF
