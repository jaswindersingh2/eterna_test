%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (115)
} def

/sequence { (\
GGAAAAGCUAGGCUGCAAAAGCAAAAAAGAUAGGCUGGAAACAGGCUAUCAGCGCAGGCUAGCAAAAAGUACCGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 70 0.022193915 ubox
1 72 0.021420841 ubox
1 73 0.247944713 ubox
1 75 0.010170329 ubox
1 76 0.012840388 ubox
1 78 0.071352897 ubox
2 70 0.017961867 ubox
2 72 0.247779484 ubox
2 73 0.008057574 ubox
2 75 0.014798991 ubox
2 77 0.056407228 ubox
2 78 0.097859795 ubox
3 70 0.132028079 ubox
3 76 0.046650383 ubox
3 77 0.089183256 ubox
4 70 0.103341158 ubox
4 76 0.064554770 ubox
4 77 0.006174652 ubox
5 70 0.009834384 ubox
5 76 0.005833248 ubox
5 77 0.017482438 ubox
6 14 0.003382326 ubox
6 60 0.006097262 ubox
6 70 0.019964948 ubox
6 76 0.021003583 ubox
6 77 0.003540295 ubox
7 13 0.003971418 ubox
7 59 0.006337866 ubox
7 63 0.998570792 ubox
7 70 0.003625533 ubox
7 73 0.006589899 ubox
7 75 0.020838888 ubox
8 12 0.003945216 ubox
8 58 0.006294873 ubox
8 62 0.999680677 ubox
8 69 0.003709154 ubox
8 74 0.020494343 ubox
9 57 0.005987793 ubox
9 61 0.999447103 ubox
9 68 0.003526299 ubox
10 60 0.999412990 ubox
10 77 0.003176054 ubox
11 59 0.999414422 ubox
11 60 0.007107389 ubox
11 73 0.008233526 ubox
11 76 0.003864376 ubox
12 22 0.016433055 ubox
12 53 0.005703091 ubox
12 55 0.007593838 ubox
12 59 0.011447220 ubox
12 63 0.004284640 ubox
12 70 0.011936543 ubox
12 72 0.008173825 ubox
12 75 0.003950287 ubox
13 21 0.016474500 ubox
13 52 0.005702018 ubox
13 54 0.007585197 ubox
13 57 0.999322215 ubox
13 58 0.011863656 ubox
13 62 0.004290074 ubox
13 69 0.012050539 ubox
13 74 0.003946995 ubox
14 20 0.016383653 ubox
14 23 0.026572031 ubox
14 51 0.004427903 ubox
14 54 0.004176972 ubox
14 56 0.999057892 ubox
14 57 0.007135471 ubox
14 61 0.003716049 ubox
14 64 0.004874271 ubox
14 68 0.009951677 ubox
14 71 0.004983230 ubox
15 22 0.041518758 ubox
15 53 0.008896524 ubox
15 55 0.998841897 ubox
15 63 0.006679043 ubox
15 70 0.005030914 ubox
16 21 0.043638882 ubox
16 52 0.009638726 ubox
16 54 0.997951018 ubox
16 62 0.006676421 ubox
16 69 0.005026121 ubox
20 60 0.006434721 ubox
21 50 0.015092189 ubox
21 53 0.850244815 ubox
21 55 0.007276847 ubox
21 59 0.006563572 ubox
21 63 0.005335979 ubox
22 29 0.022107659 ubox
22 52 0.849662060 ubox
22 54 0.008163514 ubox
22 58 0.006555352 ubox
22 62 0.005338154 ubox
24 49 0.003532915 ubox
25 49 0.016017342 ubox
26 49 0.005197591 ubox
27 49 0.004458833 ubox
28 49 0.003790970 ubox
29 49 0.006116306 ubox
29 50 0.997007631 ubox
29 53 0.007305402 ubox
30 49 0.999190301 ubox
31 48 0.999438247 ubox
32 47 0.999636107 ubox
33 46 0.999664399 ubox
33 47 0.007298272 ubox
34 46 0.011577939 ubox
35 44 0.999675251 ubox
35 45 0.011948488 ubox
36 43 0.999651878 ubox
36 44 0.008357022 ubox
37 42 0.999240408 ubox
38 42 0.007694735 ubox
45 53 0.005849594 ubox
46 52 0.005853596 ubox
47 51 0.005275428 ubox
51 60 0.017219781 ubox
51 76 0.005137646 ubox
52 59 0.018797791 ubox
52 63 0.006149002 ubox
52 75 0.005807591 ubox
53 58 0.019206844 ubox
53 62 0.006155104 ubox
53 74 0.005810615 ubox
54 63 0.003620085 ubox
54 73 0.005696525 ubox
55 62 0.003621783 ubox
58 70 0.005796459 ubox
59 69 0.005938523 ubox
60 68 0.005812176 ubox
61 76 0.005201899 ubox
62 70 0.010111442 ubox
62 75 0.006367382 ubox
63 69 0.010892794 ubox
63 74 0.006537722 ubox
64 70 0.014024561 ubox
64 76 0.005601944 ubox
64 77 0.016578670 ubox
65 70 0.017891464 ubox
65 76 0.014709302 ubox
65 77 0.024061071 ubox
66 70 0.010996769 ubox
66 76 0.020499605 ubox
66 77 0.049113065 ubox
67 76 0.044354715 ubox
67 77 0.605909814 ubox
68 76 0.675610537 ubox
68 77 0.027873100 ubox
69 73 0.032030366 ubox
69 75 0.686080225 ubox
69 76 0.024047405 ubox
69 77 0.013624184 ubox
69 78 0.088177990 ubox
70 74 0.641860538 ubox
70 79 0.007693801 ubox
71 76 0.013044468 ubox
71 77 0.010873746 ubox
72 79 0.030716717 ubox
73 79 0.079513677 ubox
74 78 0.080308426 ubox
75 79 0.010452077 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
