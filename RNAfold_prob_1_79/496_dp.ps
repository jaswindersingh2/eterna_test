%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (496)
} def

/sequence { (\
GGAAAAGUCAUCGCCAUCCUAAUGGAGACUAAUGUCGGCAAAACAUGAGAAAUCUCAUGGAUGACAAAGUAGUUGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.008242476 ubox
1 12 0.006239390 ubox
1 15 0.010603426 ubox
1 19 0.013638657 ubox
1 65 0.003676104 ubox
1 70 0.036842951 ubox
1 73 0.011957879 ubox
1 74 0.016368931 ubox
1 76 0.010812087 ubox
1 77 0.004093336 ubox
1 78 0.148937738 ubox
2 8 0.007043628 ubox
2 9 0.013924622 ubox
2 11 0.005315117 ubox
2 12 0.010790652 ubox
2 14 0.010587507 ubox
2 18 0.013661140 ubox
2 65 0.003901217 ubox
2 70 0.076560320 ubox
2 73 0.018603480 ubox
2 74 0.022632340 ubox
2 76 0.005754946 ubox
2 77 0.148010254 ubox
2 78 0.186436988 ubox
3 8 0.012782241 ubox
3 11 0.010411818 ubox
3 17 0.013175246 ubox
3 70 0.055819933 ubox
3 73 0.023569756 ubox
3 74 0.018885227 ubox
3 76 0.143763799 ubox
3 77 0.186111855 ubox
4 70 0.038444527 ubox
4 73 0.020538320 ubox
4 74 0.022845924 ubox
4 76 0.176500291 ubox
4 77 0.007315559 ubox
5 11 0.006135675 ubox
5 70 0.013652664 ubox
5 73 0.022475909 ubox
5 74 0.101203605 ubox
5 76 0.008492033 ubox
5 77 0.009216211 ubox
6 30 0.008890502 ubox
6 70 0.021220320 ubox
6 73 0.107548509 ubox
6 74 0.060018596 ubox
6 76 0.010910580 ubox
6 77 0.004072775 ubox
7 12 0.009333445 ubox
7 14 0.009238393 ubox
7 29 0.009237642 ubox
7 39 0.006653325 ubox
7 44 0.007798007 ubox
7 62 0.005036640 ubox
7 65 0.995968919 ubox
7 73 0.011758916 ubox
7 74 0.003195628 ubox
8 13 0.008720952 ubox
8 28 0.009157676 ubox
8 38 0.006651565 ubox
8 43 0.007685423 ubox
8 61 0.005364159 ubox
8 64 0.997726150 ubox
8 71 0.005323314 ubox
9 27 0.009057116 ubox
9 37 0.006596715 ubox
9 60 0.005436009 ubox
9 63 0.998536977 ubox
10 62 0.998111491 ubox
11 26 0.004037962 ubox
11 28 0.005849583 ubox
11 40 0.005871281 ubox
11 41 0.006752410 ubox
11 60 0.003240472 ubox
11 61 0.998108744 ubox
12 25 0.003296990 ubox
12 27 0.008452377 ubox
12 59 0.003456066 ubox
12 60 0.997301992 ubox
13 19 0.003677043 ubox
13 29 0.006446875 ubox
13 39 0.971747345 ubox
14 25 0.158215499 ubox
14 37 0.003631459 ubox
14 38 0.972747308 ubox
14 59 0.004791593 ubox
15 24 0.158872343 ubox
15 27 0.011462513 ubox
15 34 0.003215809 ubox
15 37 0.971719130 ubox
15 38 0.003482310 ubox
16 23 0.155462048 ubox
16 30 0.003775269 ubox
16 33 0.005306129 ubox
16 35 0.019180192 ubox
17 21 0.004628199 ubox
17 22 0.142084574 ubox
17 25 0.006674199 ubox
17 26 0.921296892 ubox
17 34 0.012274884 ubox
18 24 0.010187240 ubox
18 25 0.984791834 ubox
18 34 0.018187520 ubox
19 24 0.984551823 ubox
19 25 0.021109224 ubox
19 27 0.003255955 ubox
19 34 0.005321052 ubox
20 24 0.019233066 ubox
20 25 0.003189152 ubox
20 26 0.004165571 ubox
20 31 0.007972743 ubox
20 32 0.005432423 ubox
20 34 0.003613352 ubox
21 30 0.008099816 ubox
21 33 0.004669030 ubox
22 30 0.003562004 ubox
22 33 0.006794398 ubox
23 28 0.004130074 ubox
23 31 0.009666407 ubox
23 32 0.006805962 ubox
23 40 0.028415842 ubox
23 79 0.008352401 ubox
24 29 0.015416167 ubox
24 30 0.010208693 ubox
24 39 0.031537903 ubox
24 78 0.013530795 ubox
25 29 0.010036443 ubox
25 36 0.006248230 ubox
25 39 0.006855945 ubox
25 77 0.013357741 ubox
25 78 0.004936877 ubox
26 35 0.006539248 ubox
26 76 0.012153315 ubox
26 77 0.004857044 ubox
27 35 0.003489466 ubox
27 36 0.996568185 ubox
27 39 0.007191816 ubox
27 74 0.020713570 ubox
28 33 0.004696125 ubox
28 35 0.997780423 ubox
28 70 0.004611878 ubox
28 73 0.023392699 ubox
28 74 0.003859935 ubox
29 34 0.997328677 ubox
29 37 0.003380931 ubox
29 38 0.009900109 ubox
29 69 0.004961980 ubox
29 72 0.024280037 ubox
30 34 0.003703756 ubox
30 37 0.009532696 ubox
30 68 0.004810395 ubox
30 71 0.024261032 ubox
31 70 0.023907192 ubox
33 40 0.006511667 ubox
33 66 0.024829700 ubox
34 39 0.007188375 ubox
34 65 0.026125805 ubox
35 64 0.026129178 ubox
36 63 0.026112413 ubox
37 44 0.010841408 ubox
37 62 0.024706939 ubox
39 60 0.007951546 ubox
40 62 0.003346953 ubox
41 62 0.009374349 ubox
44 59 0.997369973 ubox
45 58 0.999214848 ubox
46 57 0.999499822 ubox
47 56 0.999973565 ubox
48 55 0.999447103 ubox
49 53 0.003179716 ubox
49 54 0.995101404 ubox
58 79 0.006017397 ubox
59 78 0.021035103 ubox
60 77 0.035578124 ubox
60 78 0.017236730 ubox
61 76 0.038439528 ubox
61 77 0.013703560 ubox
62 75 0.039719066 ubox
62 79 0.005518817 ubox
63 74 0.040968583 ubox
63 77 0.015676043 ubox
63 78 0.009900956 ubox
64 70 0.003622312 ubox
64 73 0.041887797 ubox
64 76 0.031956722 ubox
64 77 0.007219432 ubox
65 69 0.004129699 ubox
65 72 0.042360307 ubox
65 75 0.040425012 ubox
66 70 0.011430420 ubox
66 73 0.018006010 ubox
66 74 0.054790362 ubox
66 76 0.010962059 ubox
66 77 0.035616415 ubox
67 73 0.052186631 ubox
67 74 0.096023801 ubox
67 76 0.037836674 ubox
67 77 0.044698195 ubox
68 73 0.096247831 ubox
68 74 0.034289424 ubox
68 76 0.048575667 ubox
68 77 0.032402142 ubox
69 73 0.025499861 ubox
69 74 0.029586525 ubox
69 76 0.030573235 ubox
69 77 0.019529223 ubox
69 78 0.128153576 ubox
70 75 0.019422637 ubox
70 79 0.012185598 ubox
71 76 0.038313128 ubox
71 77 0.026716591 ubox
72 76 0.020857862 ubox
72 77 0.027361123 ubox
72 78 0.105602568 ubox
73 79 0.007869737 ubox
74 79 0.010048545 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
