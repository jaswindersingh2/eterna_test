%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (285)
} def

/sequence { (\
GGAAAAAAGAUCAAGGUGGAAACACCAGAGAGGACGAGGUGGCGAAAGGCACAGUCAGCUCAAGAUCAGCACUCCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.004792750 ubox
1 70 0.005612241 ubox
1 72 0.008881411 ubox
1 73 0.009529130 ubox
1 74 0.014819710 ubox
1 75 0.982962579 ubox
1 76 0.014302482 ubox
1 78 0.030844648 ubox
2 11 0.004247131 ubox
2 12 0.007342681 ubox
2 67 0.003665794 ubox
2 70 0.007345680 ubox
2 72 0.011352757 ubox
2 73 0.013320970 ubox
2 74 0.984600223 ubox
2 75 0.015562385 ubox
2 77 0.029553611 ubox
2 78 0.030570893 ubox
3 11 0.007097791 ubox
3 66 0.003430312 ubox
3 73 0.962290981 ubox
3 76 0.028116840 ubox
3 77 0.030393113 ubox
4 73 0.030281152 ubox
4 76 0.027746071 ubox
5 73 0.007183076 ubox
6 73 0.008733510 ubox
7 73 0.007460780 ubox
7 77 0.006666097 ubox
8 73 0.007330142 ubox
8 76 0.007583113 ubox
9 67 0.995216163 ubox
9 70 0.004328461 ubox
9 72 0.007085961 ubox
9 74 0.003865001 ubox
9 75 0.007408405 ubox
9 78 0.004913527 ubox
10 66 0.997261858 ubox
10 73 0.003711147 ubox
10 77 0.004582910 ubox
11 29 0.006669935 ubox
11 65 0.997369107 ubox
12 28 0.007203453 ubox
12 64 0.996405310 ubox
12 69 0.003176375 ubox
14 76 0.003218519 ubox
15 25 0.003391020 ubox
15 26 0.998684107 ubox
15 75 0.003203068 ubox
16 23 0.005871410 ubox
16 25 0.999724231 ubox
16 26 0.003308881 ubox
17 22 0.005902398 ubox
17 24 0.999481603 ubox
17 27 0.018819925 ubox
18 23 0.999021797 ubox
18 26 0.020891681 ubox
19 23 0.007355036 ubox
19 25 0.020838304 ubox
27 60 0.007069253 ubox
27 76 0.006320742 ubox
28 35 0.016727518 ubox
28 59 0.007526711 ubox
28 61 0.991320374 ubox
28 74 0.003327279 ubox
28 75 0.006831003 ubox
28 78 0.008558048 ubox
29 60 0.992386025 ubox
29 73 0.003357337 ubox
29 77 0.007611632 ubox
30 35 0.014226569 ubox
30 59 0.992442421 ubox
30 61 0.078463578 ubox
30 67 0.007737166 ubox
30 72 0.003295659 ubox
30 74 0.008666008 ubox
30 76 0.004450586 ubox
30 77 0.010643133 ubox
30 78 0.005469036 ubox
31 60 0.078482558 ubox
31 66 0.007719348 ubox
31 73 0.008814492 ubox
31 76 0.012916311 ubox
31 77 0.004611869 ubox
32 56 0.007362914 ubox
32 59 0.077788460 ubox
32 60 0.006169460 ubox
32 72 0.008811795 ubox
32 75 0.014071460 ubox
32 76 0.003545805 ubox
33 55 0.005546674 ubox
33 56 0.994258102 ubox
33 59 0.008561549 ubox
33 61 0.003333682 ubox
33 67 0.004845303 ubox
33 74 0.014064462 ubox
33 75 0.003497000 ubox
34 55 0.994157562 ubox
34 60 0.003276083 ubox
34 66 0.004790421 ubox
34 73 0.013466448 ubox
35 54 0.990635116 ubox
35 58 0.007497865 ubox
35 64 0.004706832 ubox
35 69 0.007175898 ubox
36 52 0.021682485 ubox
36 55 0.011781158 ubox
36 56 0.032215998 ubox
36 61 0.089109562 ubox
36 72 0.004179088 ubox
37 55 0.032110196 ubox
37 60 0.089217950 ubox
38 50 0.008286150 ubox
38 52 0.128006308 ubox
38 55 0.005135357 ubox
38 59 0.089213744 ubox
38 70 0.004409308 ubox
39 50 0.082672913 ubox
39 52 0.974798119 ubox
40 48 0.007512553 ubox
40 49 0.082429555 ubox
40 51 0.986460671 ubox
40 53 0.060858762 ubox
40 57 0.089086320 ubox
40 68 0.004559158 ubox
41 50 0.981414278 ubox
41 52 0.061372293 ubox
41 56 0.089209985 ubox
41 67 0.004597208 ubox
42 50 0.146208249 ubox
42 55 0.089070078 ubox
42 66 0.004386327 ubox
43 48 0.964339986 ubox
43 49 0.181601448 ubox
43 54 0.089079650 ubox
43 64 0.003418973 ubox
44 50 0.005692549 ubox
44 52 0.015931265 ubox
48 60 0.004835329 ubox
49 59 0.005109089 ubox
50 58 0.005116292 ubox
58 70 0.008333937 ubox
59 69 0.008342412 ubox
60 68 0.008054006 ubox
62 77 0.005883218 ubox
63 73 0.006689135 ubox
63 76 0.006791789 ubox
64 70 0.011390032 ubox
64 72 0.008392425 ubox
64 74 0.006834195 ubox
64 75 0.006838006 ubox
64 78 0.007692886 ubox
65 73 0.006738859 ubox
65 77 0.007591075 ubox
68 73 0.003783348 ubox
68 76 0.017607494 ubox
68 77 0.005313532 ubox
69 74 0.006806158 ubox
69 75 0.018935501 ubox
69 76 0.005157692 ubox
69 78 0.009299076 ubox
70 79 0.007490590 ubox
71 76 0.003330684 ubox
72 79 0.009540887 ubox
74 79 0.004620565 ubox
1 75 0.9500000 lbox
2 74 0.9500000 lbox
3 73 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
