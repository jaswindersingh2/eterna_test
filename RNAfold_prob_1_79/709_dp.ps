%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (709)
} def

/sequence { (\
GGAAAGUGGGAGCAAAGGUCGCACAAGACGCUGGGAAAACGAGGGUCAGUGGCAGGGAAACGUGGCACGUGGUAAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 20 0.006086857 ubox
1 22 0.003417063 ubox
1 24 0.004008691 ubox
1 29 0.006976030 ubox
1 68 0.007404034 ubox
1 70 0.010542317 ubox
1 73 0.010482780 ubox
1 76 0.005513609 ubox
1 77 0.009881465 ubox
1 78 0.373881420 ubox
2 19 0.005943351 ubox
2 20 0.009003916 ubox
2 24 0.004759160 ubox
2 68 0.004562470 ubox
2 70 0.011448968 ubox
2 73 0.014608818 ubox
2 76 0.009931478 ubox
2 77 0.362050813 ubox
2 78 0.539396266 ubox
3 19 0.008969322 ubox
3 70 0.015942354 ubox
3 73 0.014684173 ubox
3 76 0.333718490 ubox
3 77 0.532854574 ubox
4 70 0.016134781 ubox
4 73 0.022078820 ubox
4 76 0.460093161 ubox
4 77 0.034857260 ubox
5 70 0.017613235 ubox
5 73 0.032076766 ubox
5 76 0.038663117 ubox
5 77 0.012993181 ubox
6 13 0.007693638 ubox
6 22 0.020268799 ubox
6 24 0.997471115 ubox
6 76 0.003509925 ubox
7 12 0.007576304 ubox
7 14 0.011987898 ubox
7 21 0.020285459 ubox
7 23 0.998748861 ubox
7 25 0.007064797 ubox
7 75 0.003527755 ubox
8 13 0.012404910 ubox
8 20 0.020106865 ubox
8 22 0.999213177 ubox
8 24 0.007786918 ubox
8 78 0.003208936 ubox
9 19 0.018350000 ubox
9 20 0.021070519 ubox
9 22 0.010541913 ubox
9 24 0.003513184 ubox
9 78 0.004804957 ubox
10 19 0.018445965 ubox
10 20 0.998760976 ubox
10 24 0.003165879 ubox
10 77 0.004715514 ubox
10 78 0.004384539 ubox
11 19 0.987518167 ubox
11 76 0.004554153 ubox
11 77 0.004307419 ubox
12 19 0.125964630 ubox
12 22 0.009544574 ubox
12 76 0.003242069 ubox
13 17 0.872868599 ubox
13 18 0.238748413 ubox
13 21 0.009590004 ubox
16 32 0.003647469 ubox
17 31 0.003693370 ubox
17 78 0.003676161 ubox
18 29 0.004760271 ubox
18 73 0.004487927 ubox
18 77 0.003458317 ubox
19 28 0.004777277 ubox
19 72 0.008441170 ubox
19 74 0.003194843 ubox
20 27 0.004784044 ubox
20 71 0.010544799 ubox
20 72 0.004106436 ubox
21 70 0.010618564 ubox
21 73 0.004261353 ubox
22 69 0.010618858 ubox
22 71 0.015279878 ubox
22 72 0.003702254 ubox
23 70 0.015892618 ubox
23 73 0.003395566 ubox
24 69 0.016019733 ubox
24 71 0.007192068 ubox
24 72 0.003834221 ubox
25 70 0.008833454 ubox
25 73 0.005795628 ubox
25 76 0.004612345 ubox
25 77 0.010849640 ubox
26 70 0.007690996 ubox
26 73 0.006814555 ubox
26 76 0.010613152 ubox
26 77 0.005966504 ubox
27 46 0.005242189 ubox
27 47 0.994893537 ubox
27 78 0.005189360 ubox
28 46 0.998731017 ubox
28 77 0.003803328 ubox
29 34 0.004166502 ubox
29 44 0.009329731 ubox
29 45 0.999441170 ubox
31 43 0.999385019 ubox
31 44 0.014446987 ubox
32 41 0.057990566 ubox
32 42 0.994715167 ubox
32 43 0.013213742 ubox
33 40 0.117686489 ubox
34 40 0.989281401 ubox
35 40 0.025704295 ubox
40 79 0.016924736 ubox
41 78 0.017973469 ubox
42 77 0.017924635 ubox
43 76 0.017421224 ubox
45 73 0.008267082 ubox
46 72 0.033249010 ubox
47 69 0.009469795 ubox
47 71 0.085093789 ubox
47 72 0.005203137 ubox
48 70 0.128742244 ubox
48 73 0.013776336 ubox
48 76 0.004321944 ubox
48 77 0.004083055 ubox
49 66 0.018678903 ubox
49 68 0.997171036 ubox
50 65 0.018658880 ubox
50 67 0.998895184 ubox
50 69 0.004168934 ubox
50 74 0.006877333 ubox
51 66 0.999512077 ubox
51 68 0.005638241 ubox
51 73 0.007580215 ubox
52 63 0.018628851 ubox
52 66 0.011416681 ubox
53 62 0.018640875 ubox
53 64 0.999502654 ubox
53 65 0.010536669 ubox
53 71 0.008067654 ubox
54 63 0.997966517 ubox
54 70 0.008057924 ubox
55 61 0.077677308 ubox
55 63 0.005724426 ubox
56 61 0.990488565 ubox
56 68 0.008000251 ubox
57 61 0.011790001 ubox
57 66 0.004226586 ubox
60 70 0.005312292 ubox
61 69 0.005456097 ubox
62 68 0.005452628 ubox
63 67 0.004912465 ubox
67 73 0.005500653 ubox
68 72 0.006314990 ubox
68 79 0.022225813 ubox
69 73 0.015945598 ubox
69 76 0.115140161 ubox
69 77 0.014233141 ubox
69 78 0.104533098 ubox
70 74 0.016025108 ubox
70 75 0.128543256 ubox
70 79 0.151325682 ubox
71 76 0.039098452 ubox
71 77 0.015718801 ubox
71 78 0.258943116 ubox
72 76 0.014664732 ubox
72 77 0.230444212 ubox
72 78 0.090169022 ubox
73 79 0.006724059 ubox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
13 17 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
56 61 0.9500000 lbox
showpage
end
%%EOF
