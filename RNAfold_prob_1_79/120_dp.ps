%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (120)
} def

/sequence { (\
GGAAAAAAGCGCCAGACGGCCUAGCAAAGCACCAUGGUAGCAGCAAGAGCGGGACUGGAAGCAAAAAUCUAAGACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.043195452 ubox
1 12 0.003610305 ubox
1 13 0.008689025 ubox
1 33 0.010029894 ubox
1 62 0.007744954 ubox
1 68 0.008516607 ubox
1 69 0.091132525 ubox
1 70 0.680171465 ubox
1 75 0.014392384 ubox
1 76 0.007495762 ubox
1 78 0.044722342 ubox
2 10 0.012958751 ubox
2 12 0.008895827 ubox
2 32 0.010017006 ubox
2 62 0.005621800 ubox
2 68 0.083185634 ubox
2 69 0.720267063 ubox
2 70 0.012491531 ubox
2 75 0.008461132 ubox
2 77 0.042844766 ubox
2 78 0.062160230 ubox
3 68 0.704238857 ubox
3 70 0.008294598 ubox
3 76 0.040647162 ubox
3 77 0.061617382 ubox
4 68 0.025220946 ubox
4 70 0.005751498 ubox
4 76 0.055457772 ubox
4 77 0.004227914 ubox
5 68 0.009610776 ubox
5 70 0.004201770 ubox
5 76 0.004892688 ubox
5 77 0.003184374 ubox
6 68 0.006334824 ubox
6 70 0.003289465 ubox
6 76 0.003518946 ubox
6 77 0.003363022 ubox
7 68 0.004260343 ubox
7 70 0.003191550 ubox
7 76 0.003529866 ubox
7 77 0.012638491 ubox
8 22 0.021971659 ubox
8 56 0.005012712 ubox
8 68 0.007398231 ubox
8 70 0.013537817 ubox
8 76 0.014330631 ubox
9 21 0.022883424 ubox
9 25 0.016037205 ubox
9 41 0.034757363 ubox
9 44 0.005679715 ubox
9 50 0.004461848 ubox
9 55 0.005193608 ubox
9 62 0.974001678 ubox
9 69 0.012115856 ubox
9 75 0.013470421 ubox
10 24 0.016044189 ubox
10 40 0.034801212 ubox
10 43 0.005681468 ubox
10 49 0.004463472 ubox
10 51 0.006986091 ubox
10 61 0.974796743 ubox
10 73 0.006615033 ubox
10 79 0.005195702 ubox
11 20 0.033715545 ubox
11 38 0.034120305 ubox
11 50 0.007090676 ubox
11 62 0.020798269 ubox
11 69 0.004790125 ubox
11 78 0.005378616 ubox
12 19 0.033774012 ubox
12 37 0.036366762 ubox
12 49 0.007076913 ubox
12 52 0.004790428 ubox
12 57 0.003652180 ubox
12 58 0.993667310 ubox
12 61 0.015674670 ubox
13 18 0.033728557 ubox
13 36 0.036375417 ubox
13 47 0.004947274 ubox
13 51 0.004774141 ubox
13 57 0.998519785 ubox
13 58 0.008015775 ubox
14 35 0.036101832 ubox
14 56 0.998149262 ubox
15 33 0.004686783 ubox
15 55 0.995121320 ubox
17 43 0.003254502 ubox
17 51 0.128345215 ubox
17 52 0.958516086 ubox
17 53 0.161131703 ubox
17 57 0.010297344 ubox
18 32 0.010830313 ubox
18 33 0.005518257 ubox
18 50 0.124048966 ubox
18 56 0.010396018 ubox
19 30 0.035690102 ubox
19 32 0.005456785 ubox
19 38 0.004703059 ubox
19 41 0.010074698 ubox
19 44 0.008598436 ubox
19 50 0.990306092 ubox
19 55 0.010464083 ubox
20 29 0.035359168 ubox
20 37 0.004818542 ubox
20 40 0.007219152 ubox
20 43 0.008545730 ubox
20 47 0.003370480 ubox
20 49 0.991141000 ubox
20 51 0.004756726 ubox
20 52 0.007617426 ubox
20 53 0.014947918 ubox
21 29 0.007339374 ubox
21 36 0.004827808 ubox
21 40 0.042116267 ubox
21 43 0.013729695 ubox
21 47 0.993325129 ubox
21 49 0.019322997 ubox
21 51 0.007545431 ubox
21 52 0.014992756 ubox
21 58 0.006450713 ubox
22 27 0.007958847 ubox
22 28 0.008686466 ubox
22 39 0.043022213 ubox
22 42 0.013752938 ubox
22 45 0.033856005 ubox
22 46 0.974326603 ubox
22 47 0.023709112 ubox
22 48 0.026050342 ubox
22 51 0.013436049 ubox
22 57 0.006695418 ubox
23 38 0.043178767 ubox
23 56 0.006862156 ubox
23 70 0.003769020 ubox
24 30 0.012436076 ubox
24 41 0.029937391 ubox
24 44 0.995854009 ubox
24 50 0.015031567 ubox
24 55 0.006869471 ubox
24 62 0.004208558 ubox
24 69 0.003796324 ubox
25 29 0.012361481 ubox
25 36 0.043357651 ubox
25 40 0.030000208 ubox
25 43 0.995980410 ubox
25 49 0.015026444 ubox
25 53 0.004721268 ubox
25 61 0.004207159 ubox
26 35 0.042438650 ubox
26 38 0.004183172 ubox
27 38 0.005609011 ubox
28 35 0.006469490 ubox
28 38 0.072871229 ubox
28 56 0.006221458 ubox
29 33 0.004939741 ubox
29 35 0.003501282 ubox
29 38 0.186324278 ubox
29 41 0.964868151 ubox
29 44 0.016295963 ubox
29 50 0.007388722 ubox
29 55 0.006454719 ubox
29 62 0.019896624 ubox
30 36 0.096314937 ubox
30 37 0.188906234 ubox
30 40 0.964930326 ubox
30 43 0.016316757 ubox
30 49 0.007382002 ubox
30 61 0.019890042 ubox
31 35 0.079039443 ubox
31 38 0.847849635 ubox
32 36 0.070362464 ubox
32 37 0.848191545 ubox
32 40 0.004937406 ubox
32 47 0.003823253 ubox
32 52 0.006746674 ubox
32 58 0.018527200 ubox
33 37 0.121801882 ubox
33 40 0.012704522 ubox
33 47 0.003461849 ubox
33 51 0.006738781 ubox
33 57 0.018721784 ubox
33 58 0.008386941 ubox
34 38 0.017177872 ubox
34 56 0.015614160 ubox
35 39 0.007160620 ubox
35 42 0.046931345 ubox
35 45 0.006968643 ubox
35 57 0.010930345 ubox
35 63 0.003884884 ubox
36 41 0.047489691 ubox
36 44 0.007218584 ubox
36 55 0.009711638 ubox
36 56 0.018649016 ubox
36 62 0.004282912 ubox
37 44 0.005479711 ubox
37 55 0.021498815 ubox
38 42 0.003669074 ubox
38 43 0.005373540 ubox
38 54 0.021343610 ubox
38 57 0.003955156 ubox
38 60 0.004014234 ubox
39 56 0.005021328 ubox
40 50 0.013033870 ubox
40 55 0.005181556 ubox
41 47 0.003641513 ubox
41 49 0.013040333 ubox
41 51 0.011160210 ubox
41 52 0.011536348 ubox
41 53 0.005745653 ubox
41 57 0.009010067 ubox
42 56 0.009262815 ubox
43 50 0.040808037 ubox
43 55 0.009251205 ubox
43 62 0.003370939 ubox
44 49 0.040810541 ubox
44 53 0.008488839 ubox
44 61 0.003369976 ubox
46 70 0.003620849 ubox
47 69 0.003754620 ubox
47 77 0.003166023 ubox
47 78 0.008297731 ubox
48 56 0.003851088 ubox
48 68 0.003734321 ubox
48 76 0.003491193 ubox
48 77 0.008091543 ubox
49 55 0.003938513 ubox
49 62 0.005884571 ubox
49 75 0.003631982 ubox
49 76 0.005384591 ubox
49 78 0.006713724 ubox
50 61 0.005888853 ubox
50 73 0.003194019 ubox
50 79 0.008894777 ubox
51 75 0.006109883 ubox
51 76 0.014092180 ubox
51 77 0.011366586 ubox
51 78 0.011212036 ubox
52 70 0.005535445 ubox
52 75 0.015634876 ubox
52 76 0.015698536 ubox
52 77 0.009440634 ubox
52 78 0.007168261 ubox
53 69 0.005686241 ubox
53 75 0.017277626 ubox
53 76 0.006719842 ubox
53 77 0.007154438 ubox
53 78 0.003545337 ubox
54 68 0.005495233 ubox
54 76 0.006653180 ubox
54 77 0.003502525 ubox
55 73 0.021955935 ubox
56 63 0.006168241 ubox
56 71 0.026093941 ubox
56 72 0.016162289 ubox
57 62 0.006639760 ubox
57 70 0.031247724 ubox
57 78 0.003301619 ubox
58 69 0.032033497 ubox
58 78 0.063768698 ubox
59 68 0.031667704 ubox
59 76 0.003645040 ubox
59 77 0.071271548 ubox
60 68 0.004621449 ubox
60 70 0.017227875 ubox
60 76 0.072928459 ubox
61 69 0.017745175 ubox
61 70 0.003498658 ubox
61 75 0.073068155 ubox
61 78 0.004141259 ubox
62 73 0.058174301 ubox
63 68 0.012996538 ubox
63 70 0.018769216 ubox
63 76 0.005107495 ubox
63 77 0.013901629 ubox
64 68 0.007624586 ubox
64 70 0.017478406 ubox
64 76 0.014673731 ubox
64 77 0.015947640 ubox
65 70 0.021379397 ubox
65 76 0.016396108 ubox
65 77 0.036075132 ubox
66 70 0.010214353 ubox
66 76 0.038132689 ubox
66 77 0.029856301 ubox
67 76 0.032374088 ubox
67 77 0.012198315 ubox
68 72 0.008659591 ubox
68 73 0.008429292 ubox
68 74 0.083887430 ubox
68 79 0.003854837 ubox
69 73 0.089302422 ubox
69 79 0.014369564 ubox
70 74 0.008138648 ubox
70 79 0.007990794 ubox
71 76 0.016116308 ubox
71 77 0.023249765 ubox
72 76 0.020290567 ubox
72 77 0.018596785 ubox
73 77 0.009674360 ubox
73 78 0.109930005 ubox
75 79 0.018493646 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
showpage
end
%%EOF
