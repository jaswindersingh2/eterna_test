%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (315)
} def

/sequence { (\
GGAAAGGAGGCCCGAAAAAGGGCGCGAAUCGCACUCCAGCCACCGGAUAACGGCACGGAAACGUGGGCGCCGUCAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.004710083 ubox
1 37 0.045147155 ubox
1 40 0.040033006 ubox
1 41 0.880434530 ubox
1 43 0.056584388 ubox
1 44 0.150833635 ubox
1 71 0.051735558 ubox
1 74 0.007047368 ubox
1 78 0.020986307 ubox
2 11 0.004725160 ubox
2 30 0.006557488 ubox
2 36 0.045150873 ubox
2 40 0.879364674 ubox
2 41 0.082837469 ubox
2 43 0.151417342 ubox
2 44 0.005433439 ubox
2 70 0.051610235 ubox
2 71 0.003881753 ubox
2 73 0.005488578 ubox
2 74 0.010555570 ubox
2 77 0.020297869 ubox
2 78 0.045961555 ubox
3 29 0.006429010 ubox
3 35 0.042895903 ubox
3 73 0.009964682 ubox
3 76 0.018865879 ubox
3 77 0.045771385 ubox
4 76 0.042460490 ubox
5 35 0.007948020 ubox
6 30 0.008532954 ubox
6 32 0.013533926 ubox
6 34 0.010597866 ubox
6 35 0.006341408 ubox
6 36 0.012763445 ubox
6 37 0.991762115 ubox
6 41 0.013060217 ubox
6 44 0.004710195 ubox
6 71 0.007396573 ubox
6 74 0.036024374 ubox
7 25 0.006713450 ubox
7 29 0.007612559 ubox
7 30 0.016311173 ubox
7 34 0.007493509 ubox
7 35 0.008006083 ubox
7 36 0.997652368 ubox
7 37 0.007703641 ubox
7 40 0.012845741 ubox
7 43 0.004736289 ubox
7 70 0.007371828 ubox
7 73 0.035098198 ubox
7 74 0.010007933 ubox
8 29 0.015923430 ubox
8 35 0.997312122 ubox
8 73 0.009686549 ubox
9 23 0.003751524 ubox
9 25 0.018394388 ubox
9 34 0.994696921 ubox
9 36 0.003287608 ubox
9 41 0.004260455 ubox
9 71 0.037532372 ubox
10 23 0.998329257 ubox
10 32 0.005112533 ubox
10 40 0.003808527 ubox
10 68 0.003888062 ubox
10 70 0.036940384 ubox
11 22 0.999232653 ubox
11 31 0.004109827 ubox
11 39 0.003707084 ubox
11 67 0.003937934 ubox
11 69 0.036811096 ubox
12 21 0.999277241 ubox
12 22 0.004470712 ubox
12 66 0.003976582 ubox
12 67 0.034220110 ubox
13 20 0.999039725 ubox
13 21 0.004948449 ubox
13 65 0.003652541 ubox
13 66 0.034192073 ubox
13 79 0.006826315 ubox
14 40 0.003291069 ubox
14 41 0.003430020 ubox
14 78 0.008126291 ubox
15 77 0.008115768 ubox
16 76 0.007893286 ubox
19 73 0.007476378 ubox
20 36 0.025835634 ubox
20 37 0.021254407 ubox
21 35 0.026193515 ubox
21 36 0.021201796 ubox
21 37 0.003233579 ubox
21 41 0.012505692 ubox
21 71 0.008191825 ubox
22 32 0.007573504 ubox
22 34 0.033214774 ubox
22 35 0.006446188 ubox
22 36 0.003270620 ubox
22 40 0.012541197 ubox
22 70 0.008196312 ubox
23 31 0.007974033 ubox
23 39 0.012551287 ubox
23 69 0.008211241 ubox
24 30 0.012581371 ubox
24 32 0.996484239 ubox
24 37 0.003922910 ubox
24 68 0.008173352 ubox
25 31 0.997434185 ubox
25 67 0.008153981 ubox
25 79 0.008168923 ubox
26 30 0.933135491 ubox
26 32 0.019163217 ubox
26 36 0.008088290 ubox
26 78 0.009208902 ubox
27 35 0.007897595 ubox
27 77 0.009206625 ubox
28 76 0.009178845 ubox
29 66 0.003371736 ubox
29 75 0.008976070 ubox
30 65 0.003462276 ubox
31 40 0.010760476 ubox
31 64 0.003470633 ubox
31 73 0.005752386 ubox
31 74 0.005810462 ubox
32 39 0.010801908 ubox
32 63 0.003464429 ubox
32 72 0.005820554 ubox
33 73 0.006973855 ubox
34 72 0.007064807 ubox
35 47 0.004437275 ubox
35 59 0.004260508 ubox
36 46 0.004755249 ubox
36 58 0.004386933 ubox
37 45 0.004757118 ubox
37 57 0.004379727 ubox
37 69 0.004111336 ubox
39 43 0.012001952 ubox
39 44 0.008919688 ubox
39 54 0.005198057 ubox
39 68 0.092670007 ubox
39 70 0.003935833 ubox
40 46 0.008537102 ubox
40 53 0.005319636 ubox
40 67 0.092784118 ubox
40 69 0.003929302 ubox
41 45 0.008555027 ubox
41 52 0.005260112 ubox
41 66 0.092670263 ubox
41 79 0.004343818 ubox
43 53 0.102753936 ubox
43 79 0.049542811 ubox
44 52 0.103223289 ubox
44 72 0.014354511 ubox
44 79 0.916780490 ubox
45 51 0.103110090 ubox
45 71 0.014871476 ubox
45 74 0.003416940 ubox
45 78 0.992417437 ubox
46 70 0.014864379 ubox
46 74 0.015887669 ubox
46 77 0.992337854 ubox
46 78 0.034098937 ubox
47 73 0.015572899 ubox
47 76 0.992061787 ubox
47 77 0.031056666 ubox
48 72 0.014872322 ubox
48 75 0.938359185 ubox
49 73 0.026586010 ubox
50 73 0.981047289 ubox
51 66 0.004038397 ubox
51 67 0.003630079 ubox
51 69 0.020062491 ubox
51 72 0.994262298 ubox
52 68 0.020313324 ubox
52 70 0.004296790 ubox
52 71 0.994334773 ubox
53 68 0.014688684 ubox
53 70 0.994140925 ubox
54 65 0.432891707 ubox
54 66 0.030357836 ubox
54 67 0.017393214 ubox
54 69 0.900226835 ubox
55 64 0.913262400 ubox
55 73 0.004622381 ubox
56 63 0.919428440 ubox
56 65 0.106354009 ubox
56 66 0.150896861 ubox
56 67 0.334889663 ubox
56 69 0.009444305 ubox
56 72 0.004940529 ubox
57 62 0.918026374 ubox
57 64 0.100981596 ubox
57 68 0.023169447 ubox
57 71 0.004955311 ubox
58 62 0.016475235 ubox
58 64 0.108978045 ubox
58 68 0.008399387 ubox
58 70 0.004948013 ubox
59 64 0.041535590 ubox
60 64 0.023554929 ubox
61 73 0.003331019 ubox
62 66 0.005585098 ubox
62 67 0.008053602 ubox
62 69 0.003382205 ubox
62 72 0.003451255 ubox
63 68 0.005642322 ubox
63 71 0.003420495 ubox
65 70 0.003171966 ubox
66 74 0.018817921 ubox
67 73 0.018872769 ubox
68 72 0.018780825 ubox
69 74 0.004899576 ubox
69 78 0.004393550 ubox
71 79 0.021306385 ubox
72 78 0.023524038 ubox
74 79 0.003473579 ubox
1 41 0.9500000 lbox
2 40 0.9500000 lbox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
44 79 0.9500000 lbox
45 78 0.9500000 lbox
46 77 0.9500000 lbox
47 76 0.9500000 lbox
48 75 0.9500000 lbox
50 73 0.9500000 lbox
51 72 0.9500000 lbox
52 71 0.9500000 lbox
53 70 0.9500000 lbox
54 69 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
showpage
end
%%EOF
