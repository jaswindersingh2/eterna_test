%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1065)
} def

/sequence { (\
GGAAAAAACUGGACUACAGAAUGUCAAAGACAAUUCAAAACUUGACUGAAACAGCAAGAGUAGACCAGUAGUCAUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.005492037 ubox
1 10 0.006363247 ubox
1 72 0.003652364 ubox
1 73 0.113664095 ubox
1 75 0.022557293 ubox
1 76 0.018211511 ubox
1 77 0.031644096 ubox
1 78 0.593345981 ubox
2 9 0.006785866 ubox
2 72 0.109539309 ubox
2 73 0.316075246 ubox
2 75 0.022844127 ubox
2 76 0.048944080 ubox
2 77 0.593158050 ubox
2 78 0.539495350 ubox
3 72 0.314904440 ubox
3 75 0.051398882 ubox
3 76 0.590091274 ubox
3 77 0.539650030 ubox
4 69 0.003793910 ubox
4 72 0.029267929 ubox
4 75 0.546632631 ubox
4 76 0.533265833 ubox
4 77 0.023398817 ubox
5 69 0.007394599 ubox
5 72 0.246258121 ubox
5 75 0.491497843 ubox
5 76 0.029501670 ubox
5 77 0.028258034 ubox
6 69 0.016165542 ubox
6 72 0.114242145 ubox
6 75 0.032051120 ubox
6 76 0.034336461 ubox
6 77 0.012224711 ubox
7 69 0.035246927 ubox
7 72 0.206501797 ubox
7 75 0.038178753 ubox
7 76 0.014075910 ubox
7 77 0.005702270 ubox
8 69 0.964312975 ubox
8 72 0.085851412 ubox
8 75 0.008914309 ubox
8 76 0.004411947 ubox
9 68 0.996169682 ubox
9 71 0.073466739 ubox
10 67 0.997482827 ubox
10 70 0.053244755 ubox
10 74 0.013640821 ubox
11 65 0.003179587 ubox
11 66 0.999023139 ubox
11 69 0.018141441 ubox
11 73 0.010637704 ubox
11 75 0.003374630 ubox
12 65 0.997835887 ubox
12 66 0.003827098 ubox
12 72 0.005561790 ubox
12 73 0.037895210 ubox
13 61 0.016443075 ubox
13 72 0.039008625 ubox
14 60 0.016636243 ubox
14 63 0.996506549 ubox
14 71 0.039420738 ubox
15 59 0.016138115 ubox
15 62 0.998532381 ubox
15 70 0.039409231 ubox
16 61 0.998398422 ubox
16 69 0.039401222 ubox
17 60 0.997201341 ubox
17 68 0.039352439 ubox
18 34 0.007062126 ubox
18 35 0.012718696 ubox
19 25 0.011858577 ubox
19 34 0.013386885 ubox
19 35 0.090361374 ubox
19 36 0.977930774 ubox
19 66 0.004258253 ubox
20 24 0.010329830 ubox
20 34 0.099108676 ubox
20 35 0.977904291 ubox
21 34 0.966616435 ubox
21 35 0.009629636 ubox
22 28 0.003398656 ubox
22 32 0.716739621 ubox
22 33 0.684675418 ubox
22 37 0.005054523 ubox
22 53 0.010532825 ubox
22 56 0.003633239 ubox
23 31 0.994090980 ubox
23 36 0.005543755 ubox
23 46 0.004699569 ubox
23 52 0.010605450 ubox
23 55 0.003744172 ubox
24 29 0.008929330 ubox
24 30 0.994857530 ubox
24 32 0.004206112 ubox
24 33 0.003170624 ubox
24 45 0.004775569 ubox
24 51 0.010284594 ubox
24 54 0.003537079 ubox
25 29 0.986542994 ubox
25 44 0.004797246 ubox
26 43 0.004432296 ubox
27 35 0.003299249 ubox
27 42 0.003793233 ubox
28 34 0.003569054 ubox
28 47 0.010600616 ubox
29 36 0.015676020 ubox
29 46 0.010671713 ubox
30 35 0.014134962 ubox
31 44 0.010481866 ubox
32 43 0.010461121 ubox
33 42 0.010154303 ubox
34 38 0.003885413 ubox
34 39 0.005837072 ubox
34 40 0.008383015 ubox
34 50 0.003877964 ubox
35 39 0.008405802 ubox
35 40 0.005820671 ubox
35 45 0.011328628 ubox
35 49 0.004456423 ubox
35 59 0.004857986 ubox
35 64 0.005029463 ubox
36 44 0.012418551 ubox
36 48 0.004534120 ubox
36 58 0.004106271 ubox
36 63 0.005535010 ubox
37 43 0.012321385 ubox
37 47 0.004271916 ubox
38 42 0.009483719 ubox
38 61 0.008222470 ubox
40 61 0.011713992 ubox
41 48 0.003965559 ubox
41 58 0.991413385 ubox
41 60 0.012538393 ubox
42 54 0.004645632 ubox
42 57 0.997044786 ubox
42 58 0.012916102 ubox
42 59 0.014301723 ubox
43 53 0.006170222 ubox
43 56 0.998452181 ubox
43 57 0.014654301 ubox
43 58 0.013447867 ubox
44 52 0.006542647 ubox
44 55 0.999022393 ubox
46 54 0.998090769 ubox
46 58 0.007833508 ubox
47 53 0.997091534 ubox
47 54 0.006580858 ubox
47 56 0.009097462 ubox
47 57 0.007201001 ubox
48 52 0.981229297 ubox
48 55 0.010237307 ubox
60 65 0.004474616 ubox
60 66 0.005632891 ubox
70 75 0.015037181 ubox
70 76 0.009719866 ubox
70 77 0.020567980 ubox
71 75 0.008423365 ubox
71 76 0.023022221 ubox
71 77 0.012349164 ubox
71 78 0.067549530 ubox
72 79 0.005036804 ubox
73 79 0.017199241 ubox
75 79 0.004148938 ubox
8 69 0.9500000 lbox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
showpage
end
%%EOF
