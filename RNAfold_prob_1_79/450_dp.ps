%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (450)
} def

/sequence { (\
GGAAAACUAUGGGGGGCGGAAAACCGAUGAAAACAUCCCUAAAGAGAUCAAAAGAUCUCCCAUAGAAAUUUCGGAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.006597293 ubox
1 61 0.007578096 ubox
1 69 0.004634824 ubox
1 70 0.006733759 ubox
1 71 0.031445623 ubox
1 72 0.506756874 ubox
1 76 0.008179375 ubox
1 77 0.005959958 ubox
1 78 0.045386703 ubox
2 60 0.007565341 ubox
2 69 0.008841587 ubox
2 70 0.048852554 ubox
2 71 0.505781013 ubox
2 72 0.829001269 ubox
2 77 0.028807240 ubox
2 78 0.035202870 ubox
3 69 0.051353447 ubox
3 70 0.502248417 ubox
3 71 0.830096938 ubox
3 76 0.026947701 ubox
3 77 0.034965613 ubox
4 69 0.459020005 ubox
4 70 0.826732364 ubox
4 71 0.036841843 ubox
4 76 0.031580454 ubox
5 69 0.806519913 ubox
5 70 0.045158378 ubox
5 71 0.012015699 ubox
6 69 0.049760053 ubox
6 70 0.013076079 ubox
6 71 0.003848712 ubox
6 76 0.003203867 ubox
7 65 0.996973435 ubox
7 73 0.014268796 ubox
8 43 0.003987406 ubox
8 64 0.999279209 ubox
8 65 0.004174779 ubox
8 66 0.003996184 ubox
9 63 0.999308824 ubox
10 41 0.013419107 ubox
10 62 0.999382216 ubox
11 39 0.006524612 ubox
11 40 0.015488471 ubox
11 60 0.006920133 ubox
11 61 0.999478443 ubox
12 17 0.003345326 ubox
12 25 0.010251212 ubox
12 38 0.007446264 ubox
12 39 0.029007978 ubox
12 40 0.115249552 ubox
12 59 0.004613921 ubox
12 60 0.990570734 ubox
12 61 0.021818270 ubox
13 17 0.009536832 ubox
13 24 0.011965863 ubox
13 25 0.159907334 ubox
13 34 0.004365570 ubox
13 37 0.008184683 ubox
13 38 0.037854963 ubox
13 39 0.435406821 ubox
13 40 0.615024301 ubox
13 59 0.494074067 ubox
13 60 0.029598428 ubox
13 61 0.003474723 ubox
14 24 0.159471087 ubox
14 25 0.510170962 ubox
14 28 0.007166528 ubox
14 34 0.004167527 ubox
14 36 0.007590142 ubox
14 37 0.036674557 ubox
14 38 0.437574380 ubox
14 39 0.658574551 ubox
14 40 0.112593694 ubox
14 57 0.005652093 ubox
14 58 0.159542320 ubox
14 59 0.015298099 ubox
14 60 0.003781643 ubox
15 24 0.510855872 ubox
15 25 0.118888001 ubox
15 28 0.011510659 ubox
15 36 0.028019986 ubox
15 37 0.436137599 ubox
15 38 0.658749113 ubox
15 39 0.116594128 ubox
15 40 0.030665836 ubox
15 57 0.135414290 ubox
15 58 0.007917282 ubox
16 24 0.118846244 ubox
16 25 0.030415218 ubox
16 28 0.043689364 ubox
16 34 0.026215931 ubox
16 36 0.394994483 ubox
16 37 0.648085947 ubox
16 38 0.115974281 ubox
16 39 0.031743390 ubox
16 40 0.005332718 ubox
16 56 0.087431572 ubox
16 57 0.004807139 ubox
17 26 0.763240175 ubox
17 29 0.017221940 ubox
17 44 0.006143891 ubox
17 46 0.007956910 ubox
17 54 0.047164732 ubox
18 24 0.044445395 ubox
18 25 0.797787462 ubox
18 28 0.013275594 ubox
18 34 0.190063604 ubox
18 36 0.014849529 ubox
18 37 0.012883402 ubox
18 38 0.034492758 ubox
18 39 0.032226192 ubox
19 24 0.792941652 ubox
19 25 0.024178255 ubox
19 34 0.061671554 ubox
19 36 0.009167486 ubox
19 37 0.034657683 ubox
19 38 0.032249719 ubox
19 49 0.003814098 ubox
20 36 0.032893904 ubox
20 48 0.003673589 ubox
21 28 0.013960853 ubox
22 28 0.015765671 ubox
23 28 0.021679597 ubox
23 40 0.007538183 ubox
24 29 0.040948954 ubox
24 46 0.003197356 ubox
25 29 0.015248815 ubox
25 44 0.004099208 ubox
25 46 0.004535193 ubox
26 34 0.012943760 ubox
26 36 0.004962473 ubox
26 37 0.596853927 ubox
26 38 0.026833230 ubox
26 39 0.010117682 ubox
26 49 0.007125082 ubox
26 57 0.003578301 ubox
27 36 0.675805240 ubox
27 40 0.005758213 ubox
27 48 0.007277259 ubox
27 56 0.006129253 ubox
28 32 0.009304947 ubox
28 33 0.034254986 ubox
28 35 0.688256606 ubox
28 41 0.004750123 ubox
28 42 0.003488696 ubox
28 43 0.003605944 ubox
28 47 0.007198318 ubox
28 50 0.024140560 ubox
28 55 0.006633558 ubox
29 34 0.688331838 ubox
29 36 0.008220824 ubox
29 37 0.042062454 ubox
29 38 0.015844006 ubox
29 39 0.009829716 ubox
29 40 0.004611051 ubox
29 49 0.026837350 ubox
30 36 0.041865501 ubox
30 48 0.025607573 ubox
31 36 0.012563015 ubox
31 40 0.005169980 ubox
32 36 0.007633779 ubox
32 40 0.003345723 ubox
33 40 0.004249272 ubox
33 48 0.004360963 ubox
34 44 0.009410755 ubox
34 46 0.015468610 ubox
35 40 0.003495095 ubox
35 48 0.033704214 ubox
35 56 0.005302431 ubox
36 42 0.003896917 ubox
36 43 0.004991797 ubox
36 45 0.034818027 ubox
36 47 0.038946639 ubox
36 55 0.006257472 ubox
37 44 0.040106548 ubox
37 46 0.040699009 ubox
37 54 0.006504888 ubox
38 44 0.068522324 ubox
38 46 0.017100626 ubox
38 54 0.004216247 ubox
39 44 0.076374359 ubox
39 46 0.065516567 ubox
39 54 0.018378170 ubox
40 44 0.012501389 ubox
40 45 0.063205820 ubox
40 46 0.004722217 ubox
40 47 0.004073084 ubox
40 53 0.017964837 ubox
42 58 0.004012669 ubox
43 48 0.005729504 ubox
43 58 0.016421890 ubox
44 49 0.020647102 ubox
44 57 0.016653169 ubox
44 58 0.019988706 ubox
44 59 0.866500651 ubox
44 60 0.006102401 ubox
45 56 0.015875850 ubox
45 58 0.974129721 ubox
46 56 0.004007289 ubox
46 57 0.990396069 ubox
47 56 0.993337250 ubox
48 53 0.008186154 ubox
48 54 0.003295409 ubox
48 55 0.994161310 ubox
49 54 0.992945374 ubox
60 74 0.008956151 ubox
61 73 0.008970990 ubox
62 71 0.003535971 ubox
65 72 0.013528671 ubox
65 78 0.018859019 ubox
66 71 0.013376773 ubox
66 77 0.020113736 ubox
67 76 0.019533896 ubox
67 77 0.032593370 ubox
68 76 0.036379614 ubox
68 77 0.007391473 ubox
69 74 0.004310583 ubox
69 75 0.036846372 ubox
70 74 0.033331116 ubox
70 75 0.003902586 ubox
72 79 0.060295989 ubox
73 77 0.008954634 ubox
73 78 0.133720513 ubox
74 78 0.045254273 ubox
2 72 0.9500000 lbox
3 71 0.9500000 lbox
4 70 0.9500000 lbox
5 69 0.9500000 lbox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 40 0.9500000 lbox
14 39 0.9500000 lbox
15 38 0.9500000 lbox
16 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
