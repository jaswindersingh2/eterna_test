%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (316)
} def

/sequence { (\
GGAAAGGGAGCAGGAAAAACUGCGGCAAAGCCAUCCCGGGCAGGCGAAAAGCCGCUGAAAUCAGCGCCGGGCGUAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 26 0.004231639 ubox
1 31 0.014437532 ubox
1 32 0.605093366 ubox
1 35 0.005637786 ubox
1 36 0.023208759 ubox
1 37 0.006448347 ubox
1 41 0.027344721 ubox
1 68 0.022653504 ubox
1 72 0.039566608 ubox
1 74 0.005651685 ubox
1 76 0.004129022 ubox
1 77 0.006973797 ubox
1 78 0.351825573 ubox
2 31 0.605278182 ubox
2 32 0.010596559 ubox
2 34 0.004574271 ubox
2 35 0.027097771 ubox
2 36 0.006380007 ubox
2 41 0.032329163 ubox
2 62 0.005289444 ubox
2 67 0.022560948 ubox
2 72 0.033916305 ubox
2 74 0.007005159 ubox
2 76 0.008366841 ubox
2 77 0.347857717 ubox
2 78 0.496399012 ubox
3 34 0.025669034 ubox
3 61 0.004958899 ubox
3 74 0.008546744 ubox
3 76 0.336417244 ubox
3 77 0.494562896 ubox
4 34 0.006413783 ubox
4 74 0.025173538 ubox
4 76 0.455164922 ubox
4 77 0.023040430 ubox
5 34 0.004571842 ubox
5 74 0.301752813 ubox
5 76 0.026523611 ubox
5 77 0.010729934 ubox
6 26 0.087342074 ubox
6 31 0.004893448 ubox
6 32 0.046547686 ubox
6 35 0.007170536 ubox
6 36 0.012489460 ubox
6 37 0.201388788 ubox
6 68 0.006544217 ubox
6 72 0.092867758 ubox
6 74 0.344510267 ubox
6 76 0.010829160 ubox
6 77 0.009642882 ubox
6 78 0.083490475 ubox
7 23 0.004418551 ubox
7 26 0.522099051 ubox
7 31 0.046507059 ubox
7 32 0.009061369 ubox
7 34 0.005778052 ubox
7 35 0.013965512 ubox
7 36 0.203178032 ubox
7 37 0.005794627 ubox
7 67 0.006503349 ubox
7 68 0.005271105 ubox
7 72 0.324316470 ubox
7 74 0.033373189 ubox
7 76 0.009433346 ubox
7 77 0.074617594 ubox
7 78 0.177853785 ubox
8 23 0.004993224 ubox
8 26 0.098875258 ubox
8 31 0.008918240 ubox
8 34 0.009215313 ubox
8 35 0.203673740 ubox
8 36 0.005782515 ubox
8 67 0.005263211 ubox
8 72 0.368552592 ubox
8 74 0.014517332 ubox
8 76 0.048535855 ubox
8 77 0.173036875 ubox
8 78 0.143543295 ubox
9 21 0.003359382 ubox
9 34 0.190616047 ubox
9 74 0.013414591 ubox
9 76 0.160356269 ubox
9 77 0.136883010 ubox
10 20 0.003356540 ubox
10 23 0.998880206 ubox
10 72 0.003910807 ubox
10 76 0.008390828 ubox
11 22 0.999885404 ubox
12 21 0.999626388 ubox
13 20 0.999257527 ubox
13 21 0.006713997 ubox
13 78 0.004213926 ubox
14 20 0.013400152 ubox
14 77 0.004195931 ubox
14 78 0.009111642 ubox
15 76 0.004101849 ubox
15 77 0.009014351 ubox
16 76 0.008355427 ubox
19 74 0.008002060 ubox
20 73 0.008282610 ubox
21 71 0.009245989 ubox
23 69 0.017484648 ubox
24 31 0.014880884 ubox
24 32 0.783100226 ubox
24 68 0.045727928 ubox
24 78 0.010499678 ubox
25 31 0.783909733 ubox
25 32 0.005983503 ubox
25 45 0.003924670 ubox
25 67 0.045783139 ubox
25 72 0.003587948 ubox
25 74 0.004434806 ubox
25 77 0.009269329 ubox
25 78 0.014874936 ubox
26 30 0.778217572 ubox
26 44 0.003939542 ubox
26 66 0.045734501 ubox
26 73 0.004514642 ubox
26 79 0.005221270 ubox
27 76 0.003824939 ubox
27 77 0.025663793 ubox
28 76 0.026823654 ubox
28 77 0.014952935 ubox
29 34 0.003417390 ubox
29 74 0.004689970 ubox
29 76 0.016285840 ubox
29 77 0.007768861 ubox
30 41 0.048728338 ubox
30 72 0.014914267 ubox
30 74 0.075718918 ubox
30 76 0.007806877 ubox
30 77 0.003337098 ubox
30 78 0.009806611 ubox
31 39 0.003222349 ubox
31 40 0.048742942 ubox
31 71 0.012783792 ubox
31 73 0.077259678 ubox
32 38 0.003749420 ubox
32 39 0.048655630 ubox
32 70 0.009496853 ubox
32 73 0.018039006 ubox
33 74 0.340633396 ubox
33 76 0.091952770 ubox
33 77 0.011849422 ubox
34 71 0.023543637 ubox
34 73 0.344887391 ubox
34 75 0.098732209 ubox
34 79 0.005338707 ubox
35 70 0.030745746 ubox
35 71 0.876998119 ubox
35 73 0.177659480 ubox
36 44 0.004132822 ubox
36 69 0.029427870 ubox
36 70 0.886385515 ubox
36 71 0.408181131 ubox
36 73 0.003348282 ubox
37 43 0.004223401 ubox
37 57 0.003595734 ubox
37 69 0.885820547 ubox
37 70 0.411532934 ubox
37 71 0.004408493 ubox
37 73 0.005045309 ubox
37 79 0.006311834 ubox
38 56 0.005214383 ubox
38 62 0.006662017 ubox
38 68 0.786385821 ubox
38 72 0.012141601 ubox
38 74 0.017154167 ubox
38 78 0.025508454 ubox
39 53 0.017847042 ubox
39 55 0.004171890 ubox
39 56 0.059752561 ubox
39 61 0.005679124 ubox
39 67 0.670969575 ubox
39 68 0.607219576 ubox
39 72 0.009250388 ubox
39 77 0.024963560 ubox
39 78 0.012536285 ubox
40 45 0.004352028 ubox
40 52 0.034157891 ubox
40 53 0.003242334 ubox
40 55 0.066877147 ubox
40 65 0.053773828 ubox
40 67 0.731814120 ubox
40 72 0.023463674 ubox
40 74 0.005448437 ubox
40 76 0.023153345 ubox
40 77 0.011025910 ubox
40 78 0.010787189 ubox
41 46 0.004574938 ubox
41 51 0.034197003 ubox
41 54 0.067132745 ubox
41 57 0.004932396 ubox
41 64 0.051973537 ubox
41 66 0.836950989 ubox
41 70 0.009209325 ubox
41 71 0.023413542 ubox
41 73 0.005572581 ubox
42 56 0.006630730 ubox
42 61 0.006539359 ubox
42 74 0.022461396 ubox
42 76 0.007808481 ubox
42 77 0.004337941 ubox
43 52 0.008886342 ubox
43 53 0.990559030 ubox
43 55 0.004397572 ubox
43 56 0.032196936 ubox
43 62 0.009452645 ubox
43 68 0.019478236 ubox
43 76 0.003566033 ubox
43 78 0.003383664 ubox
44 52 0.996332686 ubox
44 53 0.004330370 ubox
44 55 0.035547032 ubox
44 67 0.019441482 ubox
44 72 0.026048934 ubox
44 74 0.037849498 ubox
45 51 0.996208304 ubox
45 54 0.035799348 ubox
45 66 0.018153178 ubox
45 69 0.003501244 ubox
45 71 0.026047614 ubox
45 73 0.038609609 ubox
45 79 0.034011493 ubox
46 52 0.004681038 ubox
46 53 0.036021483 ubox
46 65 0.007485340 ubox
46 68 0.003622633 ubox
46 72 0.038554745 ubox
46 78 0.037091930 ubox
47 77 0.036965953 ubox
48 76 0.034385931 ubox
49 74 0.007194755 ubox
50 74 0.010727563 ubox
51 67 0.030917258 ubox
51 68 0.032396612 ubox
51 72 0.037547006 ubox
52 66 0.021994817 ubox
52 70 0.003197332 ubox
52 71 0.037472563 ubox
53 66 0.112315501 ubox
53 69 0.003775749 ubox
53 70 0.033688087 ubox
54 62 0.004221181 ubox
54 65 0.995032370 ubox
55 64 0.996191013 ubox
56 63 0.996260476 ubox
56 79 0.007142778 ubox
57 61 0.004564875 ubox
57 62 0.993421253 ubox
57 65 0.004174418 ubox
57 78 0.033243661 ubox
58 77 0.032004145 ubox
59 76 0.028707343 ubox
59 77 0.012857338 ubox
60 74 0.003396877 ubox
60 76 0.016260745 ubox
61 75 0.017452892 ubox
62 73 0.011658714 ubox
63 74 0.003761213 ubox
64 72 0.027039413 ubox
64 74 0.057038701 ubox
65 70 0.003825948 ubox
65 71 0.027016886 ubox
65 73 0.058637728 ubox
66 72 0.062107395 ubox
66 74 0.006920399 ubox
67 71 0.061664743 ubox
67 73 0.007124540 ubox
68 79 0.015521835 ubox
69 74 0.006866296 ubox
69 76 0.005067543 ubox
69 77 0.005801820 ubox
69 78 0.050334071 ubox
70 76 0.007211573 ubox
70 77 0.046011980 ubox
70 78 0.025767102 ubox
71 76 0.031414000 ubox
71 77 0.021586856 ubox
71 78 0.012270539 ubox
72 79 0.199816676 ubox
73 77 0.005970987 ubox
73 78 0.213662045 ubox
74 79 0.006803939 ubox
1 32 0.9500000 lbox
2 31 0.9500000 lbox
7 26 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
35 71 0.9500000 lbox
36 70 0.9500000 lbox
37 69 0.9500000 lbox
38 68 0.9500000 lbox
39 67 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
showpage
end
%%EOF
