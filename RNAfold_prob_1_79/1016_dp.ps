%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1016)
} def

/sequence { (\
GGAAAAGUGAAACACAAGAGCAAAGCUCAAGAUGCAAAGCAUCAAGCAGAAACUGCAAGUCAAAGACAUGAGAACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.009662478 ubox
1 13 0.024222669 ubox
1 15 0.020468473 ubox
1 21 0.019011096 ubox
1 47 0.005602574 ubox
1 56 0.003744735 ubox
1 61 0.042724000 ubox
1 67 0.032577304 ubox
1 69 0.010593922 ubox
1 75 0.072148799 ubox
1 76 0.068841971 ubox
1 77 0.014605361 ubox
1 78 0.460510395 ubox
2 8 0.004541672 ubox
2 13 0.009202708 ubox
2 15 0.006388819 ubox
2 21 0.008897939 ubox
2 47 0.004052569 ubox
2 60 0.033644953 ubox
2 61 0.058432018 ubox
2 67 0.017778217 ubox
2 69 0.007705488 ubox
2 75 0.079007584 ubox
2 76 0.018252876 ubox
2 77 0.443412643 ubox
2 78 0.676442391 ubox
3 8 0.007531873 ubox
3 60 0.054783641 ubox
3 69 0.015730720 ubox
3 76 0.413488494 ubox
3 77 0.663445803 ubox
4 8 0.006367818 ubox
4 60 0.004062466 ubox
4 69 0.015259980 ubox
4 76 0.573956384 ubox
4 77 0.052613194 ubox
5 60 0.003282758 ubox
5 69 0.017240141 ubox
5 76 0.055927706 ubox
5 77 0.360236524 ubox
6 27 0.006523625 ubox
6 54 0.005923904 ubox
6 60 0.003979777 ubox
6 69 0.017239668 ubox
6 76 0.438632521 ubox
6 77 0.016929491 ubox
7 13 0.102709062 ubox
7 15 0.772404993 ubox
7 21 0.011063891 ubox
7 26 0.006981744 ubox
7 40 0.004022851 ubox
7 47 0.004160835 ubox
7 53 0.006106561 ubox
7 61 0.004793279 ubox
7 67 0.036577504 ubox
7 69 0.050407649 ubox
7 75 0.459109512 ubox
7 76 0.009090397 ubox
7 77 0.004748312 ubox
7 78 0.021509825 ubox
8 12 0.092688210 ubox
8 14 0.772751205 ubox
8 16 0.098469793 ubox
8 17 0.029419244 ubox
8 20 0.010926979 ubox
8 22 0.004635077 ubox
8 25 0.006937043 ubox
8 29 0.004257037 ubox
8 39 0.004006661 ubox
8 46 0.003930779 ubox
8 48 0.003183899 ubox
8 52 0.005903696 ubox
8 57 0.003596509 ubox
8 58 0.003940976 ubox
8 62 0.048803149 ubox
8 66 0.035759080 ubox
8 68 0.051516056 ubox
8 70 0.009796091 ubox
8 71 0.038090426 ubox
8 72 0.022737372 ubox
8 73 0.025935399 ubox
8 74 0.445919393 ubox
8 79 0.144364370 ubox
9 13 0.761568456 ubox
9 15 0.126675897 ubox
9 21 0.005347802 ubox
9 28 0.004966666 ubox
9 47 0.003565455 ubox
9 61 0.053711373 ubox
9 67 0.049117810 ubox
9 69 0.007062691 ubox
9 75 0.021733967 ubox
9 76 0.007857530 ubox
9 77 0.012124552 ubox
9 78 0.246521646 ubox
10 27 0.004541263 ubox
10 60 0.049613408 ubox
10 69 0.032048764 ubox
10 76 0.013266298 ubox
10 77 0.243709351 ubox
11 60 0.003204037 ubox
11 69 0.037424184 ubox
11 76 0.219911125 ubox
11 77 0.012117080 ubox
12 60 0.022895064 ubox
12 69 0.041709390 ubox
12 76 0.013378174 ubox
12 77 0.003413710 ubox
13 18 0.007688827 ubox
13 20 0.007884630 ubox
13 34 0.004734323 ubox
13 59 0.026224546 ubox
13 65 0.012798795 ubox
13 70 0.205531138 ubox
13 72 0.069722575 ubox
13 79 0.017304060 ubox
14 33 0.004704855 ubox
14 60 0.031684246 ubox
14 69 0.178679625 ubox
14 76 0.004069354 ubox
14 77 0.003309543 ubox
15 20 0.005495121 ubox
15 31 0.010113925 ubox
15 59 0.033768117 ubox
15 65 0.013883150 ubox
15 70 0.098556319 ubox
15 72 0.057801797 ubox
15 79 0.018372484 ubox
16 69 0.088992706 ubox
16 76 0.006810470 ubox
16 77 0.017995316 ubox
17 27 0.005556169 ubox
17 69 0.015591009 ubox
17 76 0.018869327 ubox
17 77 0.007694709 ubox
18 26 0.005860812 ubox
18 28 0.993276314 ubox
18 43 0.004129017 ubox
18 75 0.011068003 ubox
18 77 0.029081677 ubox
18 78 0.051148626 ubox
19 27 0.994399121 ubox
19 42 0.004117518 ubox
19 76 0.032045924 ubox
19 77 0.050070504 ubox
20 26 0.994653805 ubox
20 40 0.004785644 ubox
20 56 0.008030760 ubox
20 75 0.033322364 ubox
20 76 0.043191844 ubox
20 78 0.017299076 ubox
21 25 0.987427263 ubox
21 39 0.004786285 ubox
21 55 0.008052615 ubox
21 72 0.003985423 ubox
21 79 0.011496543 ubox
22 54 0.007766465 ubox
22 76 0.008047577 ubox
22 77 0.006127866 ubox
23 76 0.005091139 ubox
23 77 0.032802033 ubox
24 76 0.036763740 ubox
25 35 0.004880049 ubox
25 47 0.020953866 ubox
25 75 0.036974245 ubox
26 34 0.004884737 ubox
26 46 0.020985412 ubox
26 49 0.005598219 ubox
26 72 0.095655201 ubox
27 45 0.020762684 ubox
27 48 0.005551562 ubox
27 71 0.096106085 ubox
27 73 0.011925155 ubox
28 46 0.005109432 ubox
28 70 0.096184779 ubox
28 72 0.012251470 ubox
29 69 0.086407757 ubox
29 76 0.003353311 ubox
29 77 0.007938791 ubox
30 69 0.006763983 ubox
30 76 0.008306023 ubox
30 77 0.003523119 ubox
31 43 0.998357168 ubox
31 75 0.003768810 ubox
32 42 0.999401062 ubox
33 41 0.999440514 ubox
34 40 0.999854673 ubox
34 56 0.003511243 ubox
35 39 0.992586641 ubox
35 55 0.003512239 ubox
36 54 0.003198572 ubox
39 47 0.003258150 ubox
40 46 0.003261983 ubox
42 71 0.004058409 ubox
43 59 0.005564659 ubox
43 70 0.004966063 ubox
44 60 0.008443639 ubox
44 69 0.005512169 ubox
44 77 0.005207657 ubox
45 54 0.022878580 ubox
45 60 0.005188976 ubox
45 69 0.004268710 ubox
45 76 0.005925254 ubox
46 53 0.023541612 ubox
46 56 0.992674881 ubox
46 75 0.004743592 ubox
46 78 0.008387217 ubox
47 55 0.995755336 ubox
47 70 0.003397453 ubox
47 79 0.005634132 ubox
48 54 0.993302207 ubox
48 69 0.003371583 ubox
48 76 0.012403350 ubox
49 53 0.971534634 ubox
49 54 0.006038008 ubox
49 56 0.006027006 ubox
49 75 0.013856372 ubox
49 76 0.003285208 ubox
49 77 0.003930041 ubox
49 78 0.046656220 ubox
50 76 0.004193512 ubox
50 77 0.046607773 ubox
51 76 0.044758814 ubox
52 60 0.005586307 ubox
53 59 0.006481583 ubox
53 65 0.004282603 ubox
53 72 0.068080028 ubox
54 58 0.005872388 ubox
54 64 0.004254914 ubox
54 71 0.068129822 ubox
54 72 0.009812153 ubox
54 73 0.008321166 ubox
54 79 0.003273929 ubox
55 67 0.003389387 ubox
55 75 0.003755144 ubox
55 78 0.006255895 ubox
56 65 0.004377820 ubox
56 70 0.104800132 ubox
56 72 0.004810817 ubox
57 69 0.154143601 ubox
57 76 0.010339791 ubox
57 77 0.111692493 ubox
58 69 0.097509541 ubox
58 76 0.149031880 ubox
58 77 0.005017901 ubox
59 67 0.850506679 ubox
59 69 0.012192469 ubox
59 75 0.165302011 ubox
59 76 0.005612813 ubox
59 78 0.005776271 ubox
60 64 0.005334322 ubox
60 65 0.010537388 ubox
60 66 0.851203983 ubox
60 68 0.012504624 ubox
60 70 0.003327608 ubox
60 71 0.380924787 ubox
60 72 0.009389859 ubox
60 73 0.122124359 ubox
60 74 0.121954390 ubox
61 65 0.844297761 ubox
61 70 0.410754757 ubox
61 72 0.152811262 ubox
61 79 0.006804878 ubox
62 69 0.375299215 ubox
63 69 0.026101610 ubox
63 76 0.003245021 ubox
63 77 0.027191302 ubox
64 69 0.100063467 ubox
64 76 0.033358411 ubox
65 69 0.015639806 ubox
65 75 0.035775120 ubox
65 77 0.003414483 ubox
65 78 0.022898153 ubox
66 76 0.003737162 ubox
66 77 0.022183011 ubox
67 72 0.042269359 ubox
67 79 0.004293947 ubox
68 76 0.009396481 ubox
68 77 0.011540767 ubox
69 73 0.017619027 ubox
69 74 0.059802087 ubox
69 79 0.077042697 ubox
70 75 0.102471025 ubox
70 76 0.009951142 ubox
70 77 0.015956418 ubox
70 78 0.128045176 ubox
71 76 0.020128700 ubox
71 77 0.126018392 ubox
72 76 0.085787572 ubox
72 77 0.007075625 ubox
72 78 0.049153330 ubox
73 77 0.042916825 ubox
75 79 0.004583414 ubox
2 78 0.9500000 lbox
3 77 0.9500000 lbox
4 76 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
showpage
end
%%EOF
