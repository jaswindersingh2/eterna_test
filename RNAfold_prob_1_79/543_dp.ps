%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (543)
} def

/sequence { (\
GGAAACCAUACACUUACAAACAGGUUGGCAAGAGCGGACCUGCCUAAAAUGGAAAGUGGGUCGUAUGGCCCGCGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.064442710 ubox
1 7 0.304579557 ubox
1 9 0.009511430 ubox
1 11 0.068817778 ubox
1 13 0.043745449 ubox
1 14 0.019950323 ubox
1 15 0.005948177 ubox
1 17 0.050058913 ubox
1 21 0.003488237 ubox
1 43 0.003633181 ubox
1 44 0.068479378 ubox
1 45 0.007408475 ubox
1 69 0.008815549 ubox
1 70 0.177412192 ubox
1 71 0.756949927 ubox
1 73 0.119558824 ubox
1 75 0.042273164 ubox
1 76 0.026817323 ubox
1 77 0.003410486 ubox
1 78 0.095995568 ubox
2 6 0.299891841 ubox
2 7 0.047162787 ubox
2 9 0.007710807 ubox
2 11 0.042196544 ubox
2 13 0.023053027 ubox
2 14 0.006021671 ubox
2 15 0.015967610 ubox
2 17 0.019710288 ubox
2 43 0.068495655 ubox
2 44 0.007775623 ubox
2 69 0.178628235 ubox
2 70 0.756956148 ubox
2 71 0.046399777 ubox
2 73 0.073262654 ubox
2 75 0.030874781 ubox
2 76 0.004023250 ubox
2 77 0.093371167 ubox
2 78 0.153406908 ubox
3 9 0.013613018 ubox
3 14 0.016052532 ubox
3 15 0.019156103 ubox
3 76 0.088223070 ubox
3 77 0.152293662 ubox
4 9 0.014030146 ubox
4 14 0.024803909 ubox
4 15 0.027286013 ubox
4 76 0.138820522 ubox
4 77 0.011090743 ubox
5 9 0.007591369 ubox
5 14 0.028324393 ubox
5 15 0.005444343 ubox
5 76 0.013127696 ubox
6 52 0.078412632 ubox
6 67 0.005403209 ubox
6 68 0.820265560 ubox
6 74 0.073092661 ubox
6 79 0.008251827 ubox
7 51 0.082829340 ubox
7 67 0.821239347 ubox
7 72 0.003678921 ubox
7 74 0.030684111 ubox
7 79 0.009591338 ubox
8 14 0.008775244 ubox
8 15 0.027079518 ubox
8 50 0.082511995 ubox
8 66 0.820952030 ubox
8 77 0.004576801 ubox
9 16 0.027453113 ubox
9 18 0.012015364 ubox
9 19 0.006811419 ubox
9 20 0.005338898 ubox
9 46 0.004848942 ubox
9 48 0.004588188 ubox
9 49 0.076858949 ubox
9 51 0.004718564 ubox
9 53 0.004936382 ubox
9 54 0.003913163 ubox
9 65 0.820875647 ubox
10 14 0.005747425 ubox
10 15 0.027291513 ubox
10 45 0.005246385 ubox
10 50 0.005832007 ubox
10 64 0.821028370 ubox
11 51 0.100996623 ubox
11 52 0.012981165 ubox
11 58 0.006147075 ubox
11 63 0.820766650 ubox
11 74 0.015023187 ubox
11 79 0.013533905 ubox
12 45 0.003508551 ubox
12 50 0.099087498 ubox
12 57 0.009704007 ubox
12 61 0.816817404 ubox
13 51 0.041478329 ubox
13 52 0.013451372 ubox
13 56 0.010105839 ubox
13 59 0.004362132 ubox
13 60 0.821151450 ubox
13 74 0.013512783 ubox
13 79 0.012662419 ubox
14 18 0.008494044 ubox
14 19 0.012730667 ubox
14 20 0.016582257 ubox
14 46 0.013384893 ubox
14 47 0.092765190 ubox
14 48 0.068341747 ubox
14 49 0.062593461 ubox
14 51 0.014184647 ubox
14 54 0.005657463 ubox
14 55 0.011057572 ubox
14 58 0.003501618 ubox
14 59 0.820260182 ubox
15 19 0.016208357 ubox
15 20 0.012751504 ubox
15 46 0.101705570 ubox
15 47 0.066687933 ubox
15 48 0.064902613 ubox
15 49 0.014519287 ubox
15 51 0.006631549 ubox
15 53 0.005520543 ubox
15 54 0.010556927 ubox
15 58 0.819299636 ubox
16 45 0.098762653 ubox
16 50 0.007155958 ubox
16 57 0.820352136 ubox
17 42 0.006653056 ubox
17 51 0.016373904 ubox
17 56 0.819522041 ubox
17 58 0.007470961 ubox
17 74 0.014577070 ubox
17 79 0.013990141 ubox
18 41 0.004726154 ubox
18 45 0.074568174 ubox
18 50 0.015765267 ubox
18 57 0.006874660 ubox
18 77 0.006985799 ubox
19 45 0.027511490 ubox
19 76 0.007004571 ubox
19 77 0.006577347 ubox
20 45 0.020693263 ubox
20 50 0.007522693 ubox
20 76 0.006122275 ubox
21 42 0.994987172 ubox
21 51 0.008559049 ubox
21 52 0.003546774 ubox
22 41 0.999222185 ubox
22 50 0.007190199 ubox
23 40 0.999962657 ubox
24 39 0.999966651 ubox
25 37 0.003446946 ubox
25 38 0.999694480 ubox
25 47 0.004468199 ubox
26 36 0.005694051 ubox
26 37 0.993728492 ubox
26 46 0.004326999 ubox
27 35 0.006693469 ubox
27 44 0.006343553 ubox
28 35 0.999850173 ubox
28 43 0.006382305 ubox
29 34 0.998483760 ubox
29 42 0.006413563 ubox
30 41 0.005661605 ubox
32 39 0.004093958 ubox
32 40 0.003948914 ubox
41 53 0.004372711 ubox
41 54 0.005112856 ubox
43 51 0.017808769 ubox
43 52 0.844889437 ubox
43 60 0.005791673 ubox
43 79 0.003250304 ubox
44 51 0.849183215 ubox
44 52 0.124276616 ubox
44 59 0.005838912 ubox
44 79 0.003941639 ubox
45 49 0.026865739 ubox
45 51 0.123809871 ubox
45 52 0.008992577 ubox
45 53 0.005086856 ubox
45 54 0.007634248 ubox
45 55 0.004196313 ubox
45 58 0.005808182 ubox
46 50 0.106416563 ubox
46 57 0.005367864 ubox
50 54 0.003178383 ubox
50 55 0.013722554 ubox
50 79 0.254740401 ubox
51 76 0.017723602 ubox
51 77 0.006060098 ubox
51 78 0.412977362 ubox
52 75 0.019689076 ubox
52 76 0.007188847 ubox
52 77 0.413065790 ubox
52 78 0.276288901 ubox
53 76 0.408635381 ubox
53 77 0.277691127 ubox
54 76 0.260440752 ubox
54 77 0.027787529 ubox
55 76 0.031129639 ubox
55 77 0.003902155 ubox
56 73 0.569279951 ubox
56 75 0.029648201 ubox
57 72 0.569379121 ubox
57 74 0.026803814 ubox
58 71 0.570395242 ubox
58 73 0.009214247 ubox
59 70 0.570491632 ubox
59 71 0.004391573 ubox
60 69 0.570495968 ubox
60 70 0.003664721 ubox
61 68 0.569236053 ubox
62 67 0.565283485 ubox
62 68 0.030577396 ubox
67 76 0.004269004 ubox
68 75 0.021040174 ubox
69 74 0.025630729 ubox
69 79 0.003339304 ubox
70 74 0.005168692 ubox
70 79 0.007568658 ubox
71 79 0.036877927 ubox
72 76 0.007256409 ubox
72 77 0.010903270 ubox
72 78 0.053461401 ubox
73 79 0.088137566 ubox
74 78 0.089702765 ubox
75 79 0.012302862 ubox
1 71 0.9500000 lbox
2 70 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 61 0.9500000 lbox
13 60 0.9500000 lbox
14 59 0.9500000 lbox
15 58 0.9500000 lbox
16 57 0.9500000 lbox
17 56 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
showpage
end
%%EOF
