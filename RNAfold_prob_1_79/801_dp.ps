%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (801)
} def

/sequence { (\
GGAAAACAUUCACCACAAAAGGAAAAAAGUUAGAGACAAAAGUCACUAACACCGUGGAGAAUGAAAAAUCUAUGAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.045981915 ubox
1 11 0.057947254 ubox
1 13 0.020753951 ubox
1 14 0.050651513 ubox
1 16 0.008266702 ubox
1 52 0.005793158 ubox
1 53 0.011638773 ubox
1 69 0.035434036 ubox
1 70 0.142004177 ubox
1 71 0.447702336 ubox
1 73 0.008410205 ubox
1 78 0.099601236 ubox
2 7 0.012838340 ubox
2 10 0.057305345 ubox
2 11 0.089198318 ubox
2 13 0.050148697 ubox
2 14 0.004241824 ubox
2 52 0.011763396 ubox
2 69 0.130672535 ubox
2 70 0.474080517 ubox
2 71 0.008283807 ubox
2 77 0.092310872 ubox
2 78 0.129216197 ubox
3 9 0.054640822 ubox
3 10 0.088650239 ubox
3 69 0.463545115 ubox
3 71 0.005655966 ubox
3 73 0.003317724 ubox
3 76 0.086097357 ubox
3 77 0.125922679 ubox
4 9 0.074007216 ubox
4 10 0.009830358 ubox
4 69 0.018134268 ubox
4 71 0.004985778 ubox
4 73 0.005621194 ubox
4 76 0.108401750 ubox
4 77 0.008851572 ubox
5 9 0.008378319 ubox
5 10 0.015396731 ubox
5 69 0.007186792 ubox
5 71 0.005044850 ubox
5 73 0.011682086 ubox
5 76 0.009921988 ubox
5 77 0.009033942 ubox
6 69 0.010620526 ubox
6 71 0.009967141 ubox
6 73 0.048360899 ubox
6 76 0.010357683 ubox
6 77 0.003964572 ubox
7 21 0.005327315 ubox
7 22 0.003589542 ubox
7 63 0.973265522 ubox
7 74 0.014605714 ubox
7 79 0.005498668 ubox
8 62 0.978168205 ubox
8 73 0.013424196 ubox
8 76 0.004082291 ubox
9 18 0.003570613 ubox
9 19 0.003268439 ubox
9 20 0.004400077 ubox
9 23 0.019432282 ubox
9 24 0.032761983 ubox
9 25 0.013671568 ubox
9 26 0.034466210 ubox
9 27 0.010426393 ubox
9 28 0.006408565 ubox
9 58 0.009678855 ubox
9 61 0.978346759 ubox
9 65 0.017108055 ubox
9 72 0.010686263 ubox
9 75 0.004350435 ubox
10 17 0.003688603 ubox
10 18 0.003363046 ubox
10 19 0.004831054 ubox
10 22 0.020703886 ubox
10 23 0.037119633 ubox
10 24 0.014760095 ubox
10 25 0.038769956 ubox
10 26 0.010815067 ubox
10 27 0.006802145 ubox
10 57 0.010519886 ubox
10 60 0.979091482 ubox
10 64 0.019744036 ubox
10 75 0.007724697 ubox
11 21 0.021382363 ubox
11 22 0.036000758 ubox
11 56 0.010932299 ubox
11 59 0.976778052 ubox
11 63 0.019963124 ubox
11 74 0.007841878 ubox
11 79 0.003546137 ubox
12 55 0.010820632 ubox
12 62 0.019709686 ubox
12 73 0.005486484 ubox
13 21 0.022288003 ubox
13 22 0.156954898 ubox
13 54 0.010223901 ubox
13 56 0.004041735 ubox
13 57 0.978400309 ubox
14 21 0.157811634 ubox
14 22 0.012286362 ubox
14 56 0.980346125 ubox
14 57 0.004326357 ubox
15 55 0.979604728 ubox
16 21 0.034025560 ubox
16 22 0.018310711 ubox
16 54 0.977577140 ubox
16 56 0.007816172 ubox
17 55 0.007999374 ubox
18 55 0.005124473 ubox
19 55 0.006396967 ubox
20 31 0.003755476 ubox
20 47 0.005466798 ubox
20 55 0.004829136 ubox
21 30 0.005839271 ubox
21 46 0.005659709 ubox
21 50 0.018782075 ubox
21 52 0.041484772 ubox
21 53 0.812338520 ubox
21 78 0.019140418 ubox
22 31 0.004353800 ubox
22 44 0.005708039 ubox
22 50 0.020772039 ubox
22 52 0.811680968 ubox
22 53 0.055928982 ubox
22 77 0.018606084 ubox
22 78 0.035879432 ubox
23 30 0.005046569 ubox
23 43 0.005669559 ubox
23 55 0.003262688 ubox
23 76 0.017241434 ubox
23 77 0.035499820 ubox
24 30 0.003545151 ubox
24 31 0.003202990 ubox
24 55 0.005318173 ubox
24 76 0.030835127 ubox
25 30 0.003679304 ubox
25 55 0.003627506 ubox
25 76 0.003262236 ubox
28 47 0.033505810 ubox
29 37 0.005982524 ubox
29 46 0.034849194 ubox
29 50 0.995244401 ubox
29 52 0.016715703 ubox
29 53 0.008989568 ubox
30 36 0.005954364 ubox
30 45 0.034330383 ubox
30 48 0.004701756 ubox
30 49 0.998063477 ubox
30 51 0.014960446 ubox
31 35 0.005367293 ubox
31 48 0.998501310 ubox
32 47 0.998867884 ubox
33 44 0.010001098 ubox
33 46 0.995391838 ubox
34 43 0.010325656 ubox
35 44 0.997009425 ubox
36 43 0.999297372 ubox
37 42 0.997470786 ubox
51 76 0.020460880 ubox
51 77 0.004584362 ubox
52 74 0.006493430 ubox
52 79 0.003847015 ubox
53 63 0.007401122 ubox
53 74 0.191759912 ubox
54 62 0.007466328 ubox
54 73 0.193383793 ubox
55 61 0.007446365 ubox
55 72 0.193578913 ubox
55 79 0.006979814 ubox
56 71 0.193552528 ubox
56 78 0.012004332 ubox
57 70 0.193610000 ubox
57 77 0.012044079 ubox
58 69 0.191175526 ubox
58 71 0.016503966 ubox
58 76 0.012029664 ubox
59 70 0.017357083 ubox
59 78 0.040457710 ubox
60 69 0.016909881 ubox
60 77 0.040512696 ubox
61 69 0.009182435 ubox
61 73 0.012225544 ubox
61 76 0.040494029 ubox
62 66 0.011095665 ubox
62 67 0.026243357 ubox
62 68 0.018297442 ubox
62 72 0.012147089 ubox
62 75 0.040294674 ubox
62 79 0.011792861 ubox
63 70 0.026022363 ubox
63 71 0.008595139 ubox
63 78 0.038058379 ubox
64 69 0.026963838 ubox
64 71 0.024081709 ubox
64 73 0.040850913 ubox
64 76 0.006678740 ubox
64 77 0.040664634 ubox
65 69 0.008033152 ubox
65 71 0.017827028 ubox
65 73 0.012987687 ubox
65 76 0.035347722 ubox
65 77 0.018446271 ubox
66 71 0.021320945 ubox
66 73 0.020804548 ubox
66 76 0.016480486 ubox
66 77 0.036497440 ubox
67 71 0.010278580 ubox
67 73 0.017776412 ubox
67 76 0.034908119 ubox
67 77 0.377249646 ubox
68 73 0.020154925 ubox
68 76 0.420669068 ubox
68 77 0.027042941 ubox
69 74 0.009291793 ubox
69 75 0.428025169 ubox
69 79 0.003924678 ubox
70 74 0.425784592 ubox
70 79 0.029003998 ubox
71 75 0.008763692 ubox
71 79 0.005524141 ubox
72 76 0.007536641 ubox
72 77 0.025929679 ubox
73 79 0.030218868 ubox
74 78 0.046676883 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
