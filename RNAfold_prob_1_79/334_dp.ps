%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (334)
} def

/sequence { (\
GGAAAGCACGACAAAAAAAUGUCGCCAAAGGCAGUGCAGGCACUGGAAAACAGGAUCGAAAGAUCGCCGCACAGUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.123129669 ubox
1 9 0.059226510 ubox
1 12 0.005028998 ubox
1 25 0.008871000 ubox
1 26 0.309965573 ubox
1 32 0.040830440 ubox
1 68 0.004881525 ubox
1 72 0.003405548 ubox
1 76 0.004392073 ubox
1 77 0.011119969 ubox
1 78 0.326406668 ubox
2 7 0.054819257 ubox
2 9 0.027840088 ubox
2 25 0.309841843 ubox
2 26 0.014831322 ubox
2 32 0.018261253 ubox
2 67 0.004865231 ubox
2 75 0.004837807 ubox
2 76 0.016419963 ubox
2 77 0.316391085 ubox
2 78 0.625293472 ubox
3 75 0.016110490 ubox
3 76 0.303325605 ubox
3 77 0.578532694 ubox
4 75 0.242843585 ubox
4 76 0.513119883 ubox
4 77 0.335271430 ubox
5 22 0.003740928 ubox
5 75 0.405591927 ubox
5 76 0.429884033 ubox
5 77 0.015187558 ubox
6 12 0.005787623 ubox
6 22 0.012307159 ubox
6 23 0.006885338 ubox
6 25 0.117327543 ubox
6 26 0.105370158 ubox
6 32 0.058744824 ubox
6 37 0.046532169 ubox
6 70 0.005730684 ubox
6 72 0.004340417 ubox
6 75 0.512408425 ubox
6 76 0.017498155 ubox
6 77 0.011072939 ubox
6 78 0.019448639 ubox
7 21 0.013520644 ubox
7 24 0.107888927 ubox
7 30 0.009625936 ubox
7 31 0.058502183 ubox
7 36 0.046584333 ubox
7 69 0.005732165 ubox
7 74 0.567015564 ubox
7 79 0.012901522 ubox
8 20 0.012186976 ubox
8 22 0.012992831 ubox
8 35 0.046570114 ubox
8 75 0.096162709 ubox
8 76 0.005958964 ubox
8 77 0.004903559 ubox
9 21 0.013359839 ubox
9 24 0.646850713 ubox
9 30 0.009601928 ubox
9 34 0.046483939 ubox
9 74 0.106901129 ubox
9 79 0.020305467 ubox
10 20 0.008965252 ubox
10 23 0.996863363 ubox
10 76 0.010843909 ubox
10 78 0.017569052 ubox
11 22 0.997542760 ubox
11 75 0.011981452 ubox
11 77 0.015709701 ubox
12 21 0.997698818 ubox
12 74 0.012469203 ubox
13 20 0.911237901 ubox
13 75 0.003294427 ubox
13 76 0.003515588 ubox
14 20 0.032887062 ubox
15 20 0.009914831 ubox
16 20 0.004436229 ubox
20 33 0.048494945 ubox
21 32 0.053852231 ubox
22 31 0.053833702 ubox
22 33 0.003380178 ubox
23 30 0.053817671 ubox
24 32 0.743792675 ubox
24 78 0.008526127 ubox
25 30 0.035522179 ubox
25 31 0.764709119 ubox
25 79 0.036519791 ubox
26 30 0.759416162 ubox
26 31 0.024334908 ubox
26 79 0.046675925 ubox
27 76 0.007933621 ubox
27 77 0.033292671 ubox
28 75 0.005963133 ubox
28 76 0.032506160 ubox
28 77 0.055452297 ubox
29 75 0.025462734 ubox
29 76 0.054903589 ubox
29 77 0.463121252 ubox
30 68 0.003406514 ubox
30 75 0.043702578 ubox
30 76 0.543718876 ubox
30 77 0.019474959 ubox
30 78 0.044788733 ubox
31 67 0.003409979 ubox
31 75 0.584860639 ubox
31 76 0.017355000 ubox
31 77 0.025840069 ubox
31 78 0.009594893 ubox
32 45 0.004711430 ubox
32 66 0.003324760 ubox
32 74 0.591579284 ubox
33 44 0.005043673 ubox
33 75 0.011587501 ubox
33 76 0.006653576 ubox
33 77 0.003950789 ubox
34 43 0.005120183 ubox
34 72 0.996219463 ubox
35 42 0.005159902 ubox
35 71 0.998313047 ubox
35 73 0.004380136 ubox
36 41 0.005143080 ubox
36 70 0.998826381 ubox
36 72 0.004522771 ubox
37 69 0.995589933 ubox
39 67 0.010556463 ubox
39 68 0.999184485 ubox
39 78 0.008418190 ubox
40 67 0.999718567 ubox
40 70 0.003771913 ubox
40 77 0.008059521 ubox
41 66 0.998694820 ubox
41 69 0.003775325 ubox
42 75 0.009736148 ubox
43 53 0.996046746 ubox
43 62 0.003734506 ubox
43 74 0.010046258 ubox
44 49 0.006564968 ubox
44 50 0.004819843 ubox
44 52 0.998549214 ubox
44 53 0.005587251 ubox
44 61 0.003502147 ubox
44 73 0.010048300 ubox
45 51 0.998844492 ubox
45 72 0.010036418 ubox
46 51 0.019397152 ubox
46 70 0.004050091 ubox
53 65 0.004314965 ubox
53 67 0.003578348 ubox
54 64 0.003514850 ubox
54 65 0.998656771 ubox
55 64 0.999462132 ubox
56 63 0.999561571 ubox
57 62 0.999376729 ubox
58 65 0.011880239 ubox
59 64 0.010866404 ubox
69 75 0.004910693 ubox
70 74 0.005366499 ubox
74 78 0.011427492 ubox
9 24 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
29 77 0.9500000 lbox
30 76 0.9500000 lbox
31 75 0.9500000 lbox
32 74 0.9500000 lbox
34 72 0.9500000 lbox
35 71 0.9500000 lbox
36 70 0.9500000 lbox
37 69 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
showpage
end
%%EOF
