%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (1078)
} def

/sequence { (\
GGAAAAGCUAUGGUCCAAAACGAAAAAACCGGUGAUGGAGAUAUGAUCGGGCGGGACGAUGGCAAAAACAUCACCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.005711285 ubox
1 9 0.005193446 ubox
1 16 0.088195920 ubox
1 30 0.007011541 ubox
1 69 0.321259123 ubox
1 71 0.011493123 ubox
1 72 0.064755561 ubox
1 74 0.028835322 ubox
1 75 0.092551543 ubox
1 76 0.009564659 ubox
1 78 0.054206407 ubox
2 8 0.005499687 ubox
2 15 0.088257772 ubox
2 29 0.006999015 ubox
2 69 0.075464951 ubox
2 71 0.058600171 ubox
2 72 0.070318291 ubox
2 74 0.092319981 ubox
2 75 0.010952779 ubox
2 77 0.053342330 ubox
2 78 0.077724099 ubox
3 14 0.086444546 ubox
3 71 0.069341820 ubox
3 76 0.051059832 ubox
3 77 0.077274033 ubox
4 11 0.005266475 ubox
4 71 0.008922384 ubox
4 76 0.070337016 ubox
4 77 0.005513902 ubox
5 11 0.010600675 ubox
5 71 0.020839048 ubox
5 76 0.006435778 ubox
5 77 0.008593812 ubox
6 11 0.072966623 ubox
6 71 0.014077165 ubox
6 76 0.010287215 ubox
6 77 0.003252108 ubox
7 11 0.005690836 ubox
7 14 0.007575950 ubox
7 63 0.994374665 ubox
7 69 0.004020242 ubox
7 75 0.005291272 ubox
8 12 0.003488225 ubox
8 13 0.009702297 ubox
8 62 0.995496174 ubox
9 61 0.995014998 ubox
10 60 0.994631603 ubox
11 22 0.005396015 ubox
11 23 0.004754037 ubox
11 58 0.004182380 ubox
11 59 0.989243713 ubox
12 21 0.007330348 ubox
12 30 0.019880792 ubox
12 57 0.005525847 ubox
13 21 0.006504427 ubox
13 29 0.019895675 ubox
13 57 0.995350579 ubox
14 20 0.006279858 ubox
14 23 0.005975562 ubox
14 28 0.018624285 ubox
14 55 0.014521055 ubox
14 56 0.995411029 ubox
15 22 0.006930410 ubox
15 54 0.027738509 ubox
15 55 0.995249581 ubox
16 22 0.008701779 ubox
16 53 0.036232008 ubox
16 54 0.994445784 ubox
21 31 0.003959499 ubox
21 49 0.076421430 ubox
21 50 0.020617459 ubox
21 51 0.092521884 ubox
21 53 0.170213405 ubox
21 54 0.006931033 ubox
21 79 0.058565041 ubox
22 29 0.009418060 ubox
22 30 0.006878388 ubox
22 48 0.076430246 ubox
22 52 0.165638107 ubox
22 78 0.061523668 ubox
23 47 0.074440402 ubox
23 77 0.061226052 ubox
24 42 0.006442627 ubox
24 44 0.010723783 ubox
24 76 0.059303114 ubox
24 77 0.004028310 ubox
25 42 0.007504500 ubox
25 44 0.020479152 ubox
25 76 0.005483817 ubox
26 42 0.008449181 ubox
26 44 0.030326640 ubox
26 76 0.003403568 ubox
27 42 0.019194529 ubox
27 44 0.007329917 ubox
27 76 0.003800915 ubox
27 77 0.004078009 ubox
28 42 0.016536435 ubox
28 44 0.006241297 ubox
28 76 0.004570668 ubox
29 38 0.073380819 ubox
29 40 0.008233456 ubox
29 49 0.004314940 ubox
29 50 0.991703606 ubox
29 51 0.034846376 ubox
29 54 0.004039244 ubox
29 79 0.004542172 ubox
30 37 0.073510749 ubox
30 38 0.009244065 ubox
30 40 0.009554869 ubox
30 49 0.992674610 ubox
30 50 0.025440403 ubox
30 53 0.005620243 ubox
31 36 0.063957862 ubox
31 48 0.992877840 ubox
31 52 0.005606567 ubox
31 75 0.088864269 ubox
32 36 0.004206276 ubox
32 42 0.003256537 ubox
32 47 0.992283944 ubox
32 48 0.006638235 ubox
32 74 0.088977054 ubox
33 38 0.003461621 ubox
33 39 0.003277946 ubox
33 41 0.003361013 ubox
33 46 0.991512279 ubox
33 49 0.006015052 ubox
33 73 0.088962315 ubox
34 44 0.006411060 ubox
34 48 0.007599424 ubox
34 72 0.088979587 ubox
35 42 0.019527346 ubox
35 44 0.985726171 ubox
35 47 0.007705893 ubox
35 71 0.088958321 ubox
36 41 0.024007529 ubox
36 43 0.986083984 ubox
36 45 0.005280828 ubox
36 46 0.007743404 ubox
36 70 0.088934197 ubox
37 42 0.946195710 ubox
37 44 0.007295509 ubox
37 69 0.088888108 ubox
38 42 0.017548268 ubox
38 44 0.004754617 ubox
39 44 0.003805173 ubox
40 48 0.003757926 ubox
40 63 0.003744694 ubox
41 47 0.003772212 ubox
42 46 0.003404141 ubox
42 61 0.004627019 ubox
42 64 0.019188636 ubox
42 65 0.004360704 ubox
43 60 0.004806550 ubox
44 59 0.004734177 ubox
44 61 0.005063056 ubox
44 62 0.063251721 ubox
44 64 0.007163386 ubox
45 63 0.007358496 ubox
46 60 0.087907970 ubox
47 56 0.004783134 ubox
47 59 0.088745107 ubox
48 55 0.004798644 ubox
48 58 0.088794128 ubox
49 57 0.088457578 ubox
50 57 0.006694448 ubox
51 78 0.015856269 ubox
52 79 0.007036513 ubox
53 75 0.010435133 ubox
53 76 0.020651615 ubox
53 77 0.006164596 ubox
53 78 0.007465185 ubox
54 74 0.010432126 ubox
54 75 0.022225681 ubox
54 76 0.008877446 ubox
54 77 0.005558825 ubox
55 74 0.022207781 ubox
55 75 0.010232481 ubox
58 72 0.031634660 ubox
59 71 0.031687377 ubox
60 70 0.031696766 ubox
61 69 0.031697524 ubox
64 71 0.019420542 ubox
64 76 0.007259833 ubox
64 77 0.017324935 ubox
65 71 0.016531814 ubox
65 76 0.018128400 ubox
65 77 0.020402912 ubox
66 71 0.017925843 ubox
66 76 0.020965877 ubox
66 77 0.039896591 ubox
67 71 0.011024132 ubox
67 76 0.043506858 ubox
67 77 0.022309041 ubox
68 76 0.022737631 ubox
68 77 0.014788418 ubox
69 79 0.028382635 ubox
70 76 0.013685438 ubox
70 77 0.037034137 ubox
71 79 0.007082704 ubox
72 79 0.044830486 ubox
73 77 0.009354694 ubox
74 79 0.038239267 ubox
75 79 0.015672777 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
