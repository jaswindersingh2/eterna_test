%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (200)
} def

/sequence { (\
GGAAAAGCCAACAGCAGAAUAAGAAAACUUAAUUCAAAACAUCACCCAAAAGGGGAUGAGCUGAAGGCAUUACGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.007001468 ubox
1 9 0.079521606 ubox
1 71 0.012773831 ubox
1 73 0.269700619 ubox
1 75 0.201135262 ubox
1 76 0.115308689 ubox
1 77 0.009147789 ubox
1 78 0.209938385 ubox
2 8 0.079424323 ubox
2 9 0.006476287 ubox
2 70 0.012242965 ubox
2 71 0.098276699 ubox
2 73 0.325889271 ubox
2 75 0.132912983 ubox
2 76 0.009448996 ubox
2 77 0.208393670 ubox
2 78 0.209774396 ubox
3 70 0.100801330 ubox
3 71 0.112855733 ubox
3 76 0.204059286 ubox
3 77 0.209637353 ubox
4 70 0.144669956 ubox
4 71 0.461860992 ubox
4 76 0.188350813 ubox
4 77 0.008334355 ubox
5 70 0.474686714 ubox
5 71 0.261945967 ubox
5 76 0.008894852 ubox
5 77 0.015798282 ubox
6 62 0.012867645 ubox
6 70 0.274549783 ubox
6 71 0.034532359 ubox
6 76 0.019081332 ubox
6 77 0.003880520 ubox
7 15 0.013297493 ubox
7 61 0.013440425 ubox
7 68 0.994071613 ubox
7 70 0.003975420 ubox
7 73 0.014899368 ubox
7 75 0.016573482 ubox
8 14 0.013256324 ubox
8 60 0.013381378 ubox
8 67 0.995217330 ubox
8 74 0.015449766 ubox
9 66 0.994500985 ubox
9 67 0.004535768 ubox
12 63 0.997246737 ubox
13 62 0.999099714 ubox
13 76 0.006367962 ubox
14 61 0.999486225 ubox
14 68 0.004637470 ubox
14 75 0.006823994 ubox
15 60 0.998445883 ubox
15 67 0.004631261 ubox
15 74 0.006818966 ubox
16 29 0.010965732 ubox
16 33 0.007202608 ubox
16 34 0.012661997 ubox
17 28 0.011706221 ubox
17 30 0.005573465 ubox
17 33 0.013305948 ubox
17 34 0.089188702 ubox
17 35 0.976664759 ubox
18 29 0.005527701 ubox
18 30 0.004135817 ubox
18 33 0.097800244 ubox
18 34 0.976636716 ubox
19 29 0.003887934 ubox
19 30 0.003749659 ubox
19 33 0.965317459 ubox
19 34 0.009918155 ubox
20 25 0.004153215 ubox
20 26 0.003291197 ubox
20 27 0.004788027 ubox
20 31 0.701764146 ubox
20 32 0.693306784 ubox
20 38 0.005626386 ubox
21 29 0.011579801 ubox
21 30 0.972322154 ubox
21 34 0.004613728 ubox
22 29 0.979134887 ubox
22 30 0.102131118 ubox
22 33 0.005361107 ubox
23 28 0.972200524 ubox
23 29 0.093135824 ubox
23 30 0.045178584 ubox
23 34 0.007173814 ubox
23 35 0.074096309 ubox
24 29 0.043812203 ubox
24 30 0.021210985 ubox
24 33 0.007843712 ubox
24 34 0.073512269 ubox
25 29 0.016737357 ubox
25 30 0.005994643 ubox
25 33 0.067864531 ubox
25 34 0.008403401 ubox
26 30 0.003744701 ubox
26 33 0.009419199 ubox
26 34 0.004192417 ubox
27 33 0.004462147 ubox
29 37 0.005844057 ubox
29 38 0.008770037 ubox
29 39 0.004150065 ubox
30 36 0.006218296 ubox
30 37 0.009323584 ubox
30 38 0.004780325 ubox
33 37 0.003956850 ubox
33 38 0.005930213 ubox
33 39 0.008380443 ubox
33 65 0.007223582 ubox
34 38 0.008445310 ubox
34 39 0.005603254 ubox
34 59 0.007147664 ubox
34 64 0.008753998 ubox
35 58 0.007001242 ubox
35 63 0.008942858 ubox
36 57 0.005872000 ubox
36 62 0.008751742 ubox
40 58 0.990942467 ubox
41 57 0.995015477 ubox
42 56 0.995580713 ubox
42 59 0.078465771 ubox
43 55 0.994748632 ubox
43 58 0.083872540 ubox
44 57 0.082938451 ubox
45 53 0.043710034 ubox
45 54 0.994696741 ubox
45 55 0.081746421 ubox
46 52 0.043750787 ubox
46 53 0.995578977 ubox
46 54 0.082157569 ubox
46 55 0.009845975 ubox
47 52 0.994156633 ubox
47 53 0.082026118 ubox
47 54 0.009863301 ubox
59 76 0.003175854 ubox
60 68 0.010053322 ubox
60 75 0.003535097 ubox
61 67 0.010058440 ubox
61 74 0.003529398 ubox
62 66 0.009062103 ubox
62 79 0.013726551 ubox
63 78 0.038983381 ubox
64 71 0.003189159 ubox
64 77 0.040399681 ubox
65 70 0.003185435 ubox
65 76 0.039771510 ubox
65 77 0.071396955 ubox
66 73 0.007751149 ubox
66 75 0.037938964 ubox
66 76 0.084303496 ubox
67 73 0.008514469 ubox
67 75 0.086879991 ubox
68 74 0.087741373 ubox
69 76 0.013083735 ubox
69 77 0.016302881 ubox
70 74 0.007586492 ubox
70 79 0.008021053 ubox
71 79 0.005805095 ubox
72 76 0.007019220 ubox
72 77 0.010444034 ubox
73 79 0.115122846 ubox
74 78 0.114358772 ubox
75 79 0.013397141 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
