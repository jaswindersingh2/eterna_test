%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (129)
} def

/sequence { (\
GGAAAAAAGCACUUGAGACCGGACAAAACCACGAAAGUAGGAUGACCAGGACAGCAAGAAGCAAAAAAUACAUACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.096975130 ubox
1 12 0.017106732 ubox
1 13 0.006164776 ubox
1 20 0.020129655 ubox
1 30 0.004735698 ubox
1 47 0.015190084 ubox
1 62 0.011414796 ubox
1 69 0.028710398 ubox
1 71 0.144087212 ubox
1 73 0.008516614 ubox
1 75 0.012491407 ubox
1 76 0.009631442 ubox
1 78 0.054493406 ubox
2 10 0.025317887 ubox
2 12 0.007776740 ubox
2 19 0.020095810 ubox
2 29 0.004726989 ubox
2 46 0.015174849 ubox
2 62 0.009057277 ubox
2 69 0.030125250 ubox
2 71 0.034297675 ubox
2 73 0.003466148 ubox
2 75 0.011072098 ubox
2 77 0.053422317 ubox
2 78 0.078707159 ubox
3 13 0.003184791 ubox
3 14 0.006658042 ubox
3 69 0.028138652 ubox
3 73 0.003603390 ubox
3 76 0.050912351 ubox
3 77 0.078088615 ubox
4 13 0.006983131 ubox
4 14 0.004428138 ubox
4 69 0.016701520 ubox
4 73 0.004619184 ubox
4 76 0.070736711 ubox
4 77 0.005558462 ubox
5 13 0.004550865 ubox
5 14 0.009909513 ubox
5 43 0.004734859 ubox
5 69 0.008956199 ubox
5 73 0.005754187 ubox
5 76 0.006495564 ubox
5 77 0.004087234 ubox
6 13 0.009547875 ubox
6 14 0.009256525 ubox
6 69 0.005614833 ubox
6 73 0.009512233 ubox
6 76 0.004540081 ubox
6 77 0.004209216 ubox
7 13 0.009014258 ubox
7 14 0.013332742 ubox
7 43 0.005234191 ubox
7 69 0.004357327 ubox
7 73 0.012965376 ubox
7 76 0.004381318 ubox
7 77 0.019011756 ubox
8 13 0.011998868 ubox
8 14 0.004988481 ubox
8 69 0.009753907 ubox
8 73 0.010623039 ubox
8 76 0.021596632 ubox
8 77 0.003278545 ubox
9 13 0.003663542 ubox
9 24 0.003245614 ubox
9 52 0.004809196 ubox
9 55 0.065394275 ubox
9 62 0.923187776 ubox
9 71 0.010319744 ubox
9 75 0.020644405 ubox
9 78 0.003707787 ubox
10 15 0.011462142 ubox
10 17 0.011282547 ubox
10 40 0.010704506 ubox
10 44 0.006728120 ubox
10 54 0.065078369 ubox
10 58 0.006897545 ubox
10 61 0.922610426 ubox
10 79 0.003205275 ubox
11 38 0.021949049 ubox
11 43 0.006689187 ubox
11 69 0.006201373 ubox
11 73 0.007438225 ubox
12 17 0.006499038 ubox
12 21 0.004057856 ubox
12 37 0.022726818 ubox
12 41 0.007526299 ubox
12 49 0.005262373 ubox
12 50 0.021062191 ubox
12 54 0.023531439 ubox
12 58 0.977802009 ubox
12 61 0.010188552 ubox
12 79 0.003576773 ubox
13 22 0.003184005 ubox
13 26 0.005739426 ubox
13 36 0.022706133 ubox
13 40 0.007529040 ubox
13 48 0.005142871 ubox
13 49 0.021051090 ubox
13 51 0.010489177 ubox
13 53 0.019551865 ubox
13 54 0.044213936 ubox
13 56 0.005624409 ubox
13 57 0.986354110 ubox
13 58 0.014537354 ubox
13 59 0.007824791 ubox
13 60 0.009963378 ubox
13 64 0.003398116 ubox
14 21 0.003947996 ubox
14 25 0.006377559 ubox
14 35 0.022509393 ubox
14 39 0.007495270 ubox
14 48 0.020948056 ubox
14 50 0.007123424 ubox
14 51 0.003763946 ubox
14 53 0.084782116 ubox
14 54 0.007097926 ubox
14 56 0.988103014 ubox
14 57 0.014006886 ubox
14 58 0.007570733 ubox
14 59 0.007967206 ubox
14 63 0.003719698 ubox
14 72 0.005744964 ubox
14 79 0.011053143 ubox
15 20 0.006232758 ubox
15 24 0.006486996 ubox
15 38 0.007347268 ubox
15 47 0.019394286 ubox
15 52 0.088287496 ubox
15 55 0.987811735 ubox
15 62 0.003590616 ubox
15 71 0.006115574 ubox
15 77 0.008119272 ubox
15 78 0.018977730 ubox
16 76 0.009507694 ubox
16 77 0.018286296 ubox
17 32 0.020778389 ubox
17 43 0.003303974 ubox
17 46 0.009460729 ubox
17 52 0.403048592 ubox
17 55 0.006973500 ubox
17 75 0.010181962 ubox
17 76 0.014359880 ubox
17 78 0.005762077 ubox
18 43 0.006351360 ubox
18 77 0.005334635 ubox
19 41 0.013322797 ubox
19 44 0.003484167 ubox
19 49 0.155871792 ubox
19 50 0.981286031 ubox
19 54 0.004741106 ubox
20 33 0.009011808 ubox
20 40 0.013335347 ubox
20 44 0.004377973 ubox
20 49 0.982145479 ubox
20 50 0.031864557 ubox
21 29 0.004161093 ubox
21 30 0.038632625 ubox
21 32 0.009113880 ubox
21 43 0.004207360 ubox
21 46 0.018670937 ubox
21 47 0.978867062 ubox
21 52 0.008330084 ubox
22 29 0.038530795 ubox
22 30 0.004162398 ubox
22 46 0.981309022 ubox
22 47 0.066350310 ubox
23 38 0.009417109 ubox
23 43 0.004842488 ubox
24 37 0.009652134 ubox
24 40 0.003785847 ubox
24 44 0.953736844 ubox
24 49 0.008275112 ubox
25 43 0.939744171 ubox
26 43 0.108373970 ubox
27 43 0.155125355 ubox
28 38 0.018781131 ubox
28 43 0.065508425 ubox
29 37 0.019145795 ubox
29 40 0.228900935 ubox
29 41 0.966250888 ubox
30 37 0.017480154 ubox
30 40 0.966555139 ubox
30 41 0.010331534 ubox
30 44 0.004748426 ubox
31 38 0.976803834 ubox
31 43 0.004751326 ubox
32 37 0.982424332 ubox
32 40 0.013940234 ubox
32 41 0.008111305 ubox
32 79 0.019872279 ubox
33 38 0.011213262 ubox
33 78 0.020884097 ubox
34 38 0.006846777 ubox
34 77 0.017172838 ubox
35 76 0.012144618 ubox
35 77 0.012541618 ubox
36 76 0.017391076 ubox
37 46 0.004506030 ubox
37 52 0.003936937 ubox
37 75 0.021110792 ubox
38 45 0.004400363 ubox
38 51 0.003862846 ubox
38 74 0.021037273 ubox
39 73 0.019855195 ubox
39 76 0.003623705 ubox
40 46 0.004945196 ubox
40 47 0.031497748 ubox
40 71 0.006658222 ubox
40 75 0.004001971 ubox
40 76 0.003488748 ubox
41 46 0.031359936 ubox
41 71 0.005974683 ubox
41 75 0.003609950 ubox
42 69 0.006601258 ubox
42 73 0.006448092 ubox
43 53 0.003807275 ubox
43 68 0.007411504 ubox
43 72 0.008631124 ubox
44 52 0.004212894 ubox
44 71 0.008637303 ubox
49 55 0.006523985 ubox
49 62 0.003688351 ubox
50 55 0.003628517 ubox
50 62 0.006951468 ubox
52 58 0.003986546 ubox
52 61 0.007400441 ubox
54 62 0.073295787 ubox
54 78 0.003926977 ubox
55 61 0.073349632 ubox
55 79 0.004004434 ubox
56 77 0.006953408 ubox
57 76 0.007699125 ubox
58 71 0.003963494 ubox
58 75 0.007830992 ubox
58 78 0.155655882 ubox
59 69 0.004397764 ubox
59 73 0.005016444 ubox
59 77 0.162248655 ubox
60 69 0.017557070 ubox
60 73 0.007828796 ubox
60 76 0.163639927 ubox
60 77 0.003731901 ubox
61 69 0.004748085 ubox
61 71 0.018890612 ubox
61 75 0.163140385 ubox
61 76 0.003473628 ubox
61 78 0.008596363 ubox
62 79 0.005731673 ubox
63 69 0.018877160 ubox
63 73 0.043746340 ubox
63 76 0.007863862 ubox
63 77 0.018126324 ubox
64 69 0.023200769 ubox
64 73 0.031664201 ubox
64 76 0.018808567 ubox
64 77 0.020365657 ubox
65 69 0.014699284 ubox
65 73 0.021118407 ubox
65 76 0.020981207 ubox
65 77 0.021551454 ubox
66 73 0.027240758 ubox
66 76 0.022140859 ubox
66 77 0.042429108 ubox
67 73 0.021259534 ubox
67 76 0.046229107 ubox
67 77 0.025277179 ubox
68 73 0.019507949 ubox
68 76 0.026120072 ubox
68 77 0.034730444 ubox
69 74 0.018893752 ubox
69 79 0.006098079 ubox
70 76 0.011511683 ubox
70 77 0.014315182 ubox
71 79 0.038932423 ubox
72 76 0.009150450 ubox
72 77 0.031631048 ubox
73 79 0.010375361 ubox
75 79 0.018329571 ubox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
showpage
end
%%EOF
