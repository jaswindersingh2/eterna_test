%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (150)
} def

/sequence { (\
GGAAAAAAGCAGAUCAAGUGGUGACGAGGCCGGAAACGAGCAGUGACACAGUGGGAUCGGGCAAAAAAAGCGCAUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.155719488 ubox
1 15 0.008975609 ubox
1 62 0.004397767 ubox
1 71 0.072222687 ubox
1 73 0.034967389 ubox
1 76 0.003896271 ubox
1 77 0.012028383 ubox
1 78 0.331732840 ubox
2 10 0.039548428 ubox
2 14 0.006312455 ubox
2 15 0.017516820 ubox
2 58 0.003250242 ubox
2 62 0.003213289 ubox
2 71 0.043013333 ubox
2 73 0.011588085 ubox
2 75 0.003787286 ubox
2 76 0.018339883 ubox
2 77 0.329310014 ubox
2 78 0.527511485 ubox
3 14 0.016706661 ubox
3 75 0.018554379 ubox
3 76 0.324364894 ubox
3 77 0.526544545 ubox
4 75 0.283057656 ubox
4 76 0.514090770 ubox
4 77 0.034809683 ubox
5 75 0.462171148 ubox
5 76 0.043398978 ubox
5 77 0.056132753 ubox
6 75 0.045006416 ubox
6 76 0.067925133 ubox
6 77 0.039766667 ubox
7 75 0.072426954 ubox
7 76 0.045937532 ubox
7 77 0.017001864 ubox
8 14 0.004067605 ubox
8 75 0.047322418 ubox
8 76 0.018331143 ubox
8 77 0.007957575 ubox
9 15 0.006201998 ubox
9 19 0.012179879 ubox
9 41 0.005999095 ubox
9 52 0.003403826 ubox
9 58 0.009659404 ubox
9 62 0.491285300 ubox
9 71 0.109899227 ubox
9 73 0.283787132 ubox
9 75 0.014287606 ubox
9 76 0.007266157 ubox
9 77 0.003831842 ubox
9 78 0.015444642 ubox
10 18 0.012983251 ubox
10 20 0.019523964 ubox
10 40 0.006001057 ubox
10 51 0.003636135 ubox
10 53 0.004466998 ubox
10 59 0.062611923 ubox
10 60 0.125382769 ubox
10 61 0.489960339 ubox
10 70 0.108586672 ubox
10 72 0.283465744 ubox
10 79 0.011430847 ubox
11 19 0.019270580 ubox
11 52 0.004358573 ubox
11 57 0.009067506 ubox
11 75 0.004922303 ubox
11 76 0.006579083 ubox
11 77 0.011745416 ubox
12 25 0.006466110 ubox
12 57 0.004601410 ubox
12 58 0.988369240 ubox
12 76 0.011319239 ubox
12 77 0.003213515 ubox
12 78 0.030276807 ubox
13 19 0.003419025 ubox
13 22 0.010083442 ubox
13 52 0.007718025 ubox
13 57 0.989484575 ubox
13 75 0.011438290 ubox
13 76 0.003398481 ubox
13 77 0.029736359 ubox
14 18 0.003268704 ubox
14 21 0.010303762 ubox
14 24 0.010402502 ubox
14 27 0.003709287 ubox
14 39 0.003315942 ubox
14 51 0.007735102 ubox
14 54 0.026419069 ubox
14 55 0.036658327 ubox
14 56 0.988787405 ubox
14 74 0.011213018 ubox
14 79 0.004786389 ubox
15 20 0.012945167 ubox
15 23 0.011042604 ubox
15 26 0.003944718 ubox
15 28 0.008832832 ubox
15 38 0.003410228 ubox
15 51 0.005681461 ubox
15 53 0.048616070 ubox
15 54 0.068479820 ubox
15 55 0.986445747 ubox
15 79 0.007104362 ubox
16 22 0.010292740 ubox
16 52 0.048517848 ubox
16 75 0.009874162 ubox
16 76 0.009424742 ubox
16 77 0.028479715 ubox
17 52 0.547420502 ubox
17 75 0.010491468 ubox
17 76 0.032970979 ubox
18 25 0.013497166 ubox
18 49 0.095977992 ubox
18 52 0.537485969 ubox
18 71 0.003198262 ubox
18 73 0.051187727 ubox
18 75 0.034270450 ubox
18 78 0.005819873 ubox
19 24 0.013382010 ubox
19 26 0.004805605 ubox
19 32 0.008382663 ubox
19 48 0.095033189 ubox
19 50 0.719116159 ubox
19 51 0.188074959 ubox
19 53 0.011167961 ubox
19 70 0.003185969 ubox
19 72 0.051216436 ubox
19 74 0.034464271 ubox
20 25 0.006311656 ubox
20 31 0.009846283 ubox
20 47 0.074192080 ubox
20 49 0.710031750 ubox
20 52 0.012199110 ubox
20 71 0.051149198 ubox
20 73 0.034108483 ubox
20 76 0.006023650 ubox
21 30 0.009878511 ubox
21 47 0.703311408 ubox
21 49 0.686835965 ubox
21 71 0.033607314 ubox
21 73 0.007180780 ubox
21 75 0.007034151 ubox
22 29 0.009801842 ubox
22 45 0.007289123 ubox
22 46 0.704687861 ubox
22 48 0.699200614 ubox
22 50 0.012099759 ubox
22 69 0.046730230 ubox
22 70 0.033547163 ubox
22 72 0.008649538 ubox
22 74 0.007126767 ubox
23 44 0.013462234 ubox
23 47 0.698684254 ubox
23 49 0.012144141 ubox
23 71 0.008830145 ubox
23 73 0.007157865 ubox
24 44 0.705802144 ubox
25 43 0.705773790 ubox
25 45 0.665012802 ubox
25 70 0.004972774 ubox
25 72 0.007147762 ubox
26 41 0.019962327 ubox
26 44 0.648596618 ubox
26 71 0.007142918 ubox
27 44 0.031799748 ubox
28 37 0.013631992 ubox
28 41 0.260831268 ubox
28 44 0.005854239 ubox
28 62 0.005614790 ubox
29 37 0.004039822 ubox
29 41 0.957879232 ubox
29 44 0.003654264 ubox
29 62 0.065833122 ubox
30 38 0.015553980 ubox
30 40 0.962313837 ubox
30 43 0.003733574 ubox
30 60 0.005807522 ubox
30 61 0.065868458 ubox
31 38 0.995243982 ubox
31 40 0.010588617 ubox
31 59 0.005961387 ubox
31 60 0.065824736 ubox
32 37 0.993158181 ubox
32 41 0.003261158 ubox
32 58 0.005940656 ubox
33 37 0.044566286 ubox
33 57 0.005368744 ubox
33 58 0.065557870 ubox
34 57 0.065175188 ubox
35 57 0.003248809 ubox
36 44 0.004212928 ubox
37 43 0.004299074 ubox
37 53 0.004999039 ubox
37 54 0.059625830 ubox
37 55 0.013778343 ubox
37 59 0.005296283 ubox
38 52 0.003954528 ubox
38 58 0.005378586 ubox
39 52 0.031389999 ubox
39 57 0.005205127 ubox
40 49 0.005540012 ubox
40 52 0.038089037 ubox
41 51 0.042345329 ubox
41 53 0.039749977 ubox
42 52 0.039761548 ubox
43 47 0.004674515 ubox
43 49 0.037353891 ubox
44 48 0.033789819 ubox
44 50 0.040273937 ubox
45 49 0.039805586 ubox
45 58 0.003228782 ubox
46 57 0.003220320 ubox
49 54 0.003961884 ubox
51 58 0.003307987 ubox
51 62 0.005905224 ubox
52 61 0.005880205 ubox
52 63 0.003997757 ubox
52 79 0.052212390 ubox
53 58 0.003990097 ubox
53 62 0.004677344 ubox
53 78 0.106656469 ubox
54 77 0.107063463 ubox
54 78 0.049903890 ubox
55 76 0.107836366 ubox
55 77 0.050063901 ubox
55 78 0.014055997 ubox
56 75 0.108040231 ubox
56 76 0.049749819 ubox
56 77 0.013702048 ubox
57 74 0.107050692 ubox
58 72 0.011567894 ubox
59 71 0.022895762 ubox
59 73 0.776573912 ubox
59 75 0.011254400 ubox
59 76 0.010121813 ubox
59 77 0.003728875 ubox
59 78 0.016766861 ubox
60 71 0.028997957 ubox
60 73 0.084068877 ubox
60 75 0.011463266 ubox
60 76 0.003847436 ubox
60 77 0.015822437 ubox
60 78 0.007617813 ubox
61 71 0.847696119 ubox
61 73 0.108227075 ubox
61 76 0.005475164 ubox
61 77 0.004706627 ubox
61 78 0.004762168 ubox
62 70 0.847573694 ubox
62 72 0.108372470 ubox
63 75 0.003761885 ubox
63 76 0.008219639 ubox
63 77 0.018006402 ubox
64 75 0.008455846 ubox
64 76 0.019891366 ubox
64 77 0.036318463 ubox
65 75 0.018382596 ubox
65 76 0.040203288 ubox
65 77 0.025647888 ubox
66 75 0.040074282 ubox
66 76 0.028093125 ubox
66 77 0.043050996 ubox
67 75 0.026656420 ubox
67 76 0.047631439 ubox
67 77 0.063064821 ubox
68 75 0.043365919 ubox
68 76 0.070076311 ubox
68 77 0.031763784 ubox
69 75 0.070548555 ubox
69 76 0.033748727 ubox
69 77 0.012106178 ubox
70 75 0.024989439 ubox
70 76 0.012181957 ubox
70 77 0.008084465 ubox
70 78 0.017539333 ubox
71 79 0.058171913 ubox
72 76 0.006463473 ubox
72 77 0.007288896 ubox
72 78 0.061400762 ubox
73 79 0.019024378 ubox
75 79 0.005347748 ubox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
17 52 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
59 73 0.9500000 lbox
61 71 0.9500000 lbox
62 70 0.9500000 lbox
showpage
end
%%EOF
