%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (499)
} def

/sequence { (\
GGAAAAGUCUGCGGCAGUUGAAAAACGCUGAAAAGCGCCAAAAGCUGUCGAAAGGCAGCGCAGACAAAGCUUCUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.010585490 ubox
1 59 0.004073651 ubox
1 61 0.006102893 ubox
1 65 0.003460232 ubox
1 70 0.118137349 ubox
1 71 0.266171580 ubox
1 72 0.018586506 ubox
1 73 0.203557572 ubox
1 74 0.336524229 ubox
1 75 0.153547835 ubox
1 76 0.143367249 ubox
1 77 0.007710344 ubox
1 78 0.080750146 ubox
2 9 0.011250684 ubox
2 59 0.006237655 ubox
2 61 0.006487444 ubox
2 65 0.003218694 ubox
2 70 0.306640382 ubox
2 71 0.018643009 ubox
2 72 0.202430970 ubox
2 73 0.415096503 ubox
2 74 0.030860253 ubox
2 75 0.165491607 ubox
2 76 0.003356824 ubox
2 77 0.075439472 ubox
2 78 0.113264366 ubox
3 8 0.010288568 ubox
3 71 0.194679953 ubox
3 72 0.413972215 ubox
3 74 0.162158964 ubox
3 76 0.072192506 ubox
3 77 0.112454464 ubox
4 71 0.386830131 ubox
4 72 0.036311271 ubox
4 74 0.012082062 ubox
4 76 0.103608787 ubox
4 77 0.006455569 ubox
5 71 0.037145252 ubox
5 72 0.158594430 ubox
5 74 0.018327588 ubox
5 76 0.007479615 ubox
5 77 0.010287442 ubox
6 71 0.168531672 ubox
6 72 0.017485539 ubox
6 74 0.057189068 ubox
6 76 0.012307753 ubox
6 77 0.003381213 ubox
7 56 0.098753633 ubox
7 65 0.982366511 ubox
7 70 0.136604227 ubox
7 71 0.003452335 ubox
7 73 0.039557019 ubox
7 75 0.008775108 ubox
8 55 0.098823038 ubox
8 64 0.989315502 ubox
8 67 0.003179369 ubox
8 68 0.005363555 ubox
8 69 0.100369146 ubox
9 20 0.003318924 ubox
9 54 0.098964676 ubox
9 58 0.006717000 ubox
9 63 0.994736528 ubox
9 69 0.004514675 ubox
10 52 0.008225794 ubox
10 53 0.098114597 ubox
10 57 0.006770234 ubox
10 62 0.994516328 ubox
10 66 0.006445395 ubox
10 68 0.004172797 ubox
11 18 0.003727072 ubox
11 56 0.006800294 ubox
11 61 0.994727930 ubox
11 65 0.006803778 ubox
11 70 0.003555127 ubox
12 17 0.005785752 ubox
12 20 0.004651902 ubox
12 30 0.026446343 ubox
12 50 0.101807711 ubox
12 55 0.006210112 ubox
12 60 0.993174025 ubox
12 63 0.006266818 ubox
12 69 0.003555736 ubox
13 18 0.015256463 ubox
13 19 0.013797784 ubox
13 26 0.012122330 ubox
13 29 0.085241337 ubox
13 38 0.006411572 ubox
13 39 0.926710282 ubox
13 46 0.003398406 ubox
13 49 0.116245918 ubox
13 59 0.130103018 ubox
14 18 0.010547181 ubox
14 19 0.008953020 ubox
14 26 0.005087614 ubox
14 28 0.091700651 ubox
14 36 0.008716410 ubox
14 38 0.927765085 ubox
14 39 0.005342290 ubox
14 45 0.015935192 ubox
14 48 0.133365650 ubox
14 49 0.009756936 ubox
14 56 0.004566775 ubox
14 59 0.020678388 ubox
14 61 0.007560822 ubox
15 20 0.059668723 ubox
15 27 0.091479911 ubox
15 30 0.050216281 ubox
15 35 0.008393736 ubox
15 37 0.922166972 ubox
15 44 0.018244653 ubox
15 47 0.134218161 ubox
15 55 0.004267698 ubox
15 58 0.028677992 ubox
15 60 0.007714235 ubox
16 29 0.060849747 ubox
16 46 0.135639275 ubox
17 26 0.888623817 ubox
17 28 0.060994991 ubox
17 36 0.203091967 ubox
17 38 0.006844913 ubox
17 39 0.004990678 ubox
17 45 0.136666383 ubox
18 22 0.009105759 ubox
18 23 0.013639389 ubox
18 24 0.025233805 ubox
18 25 0.889015081 ubox
18 27 0.058472022 ubox
18 31 0.007829624 ubox
18 32 0.017299451 ubox
18 33 0.010400646 ubox
18 34 0.072842093 ubox
18 35 0.202468931 ubox
18 37 0.004056855 ubox
18 41 0.048302402 ubox
18 42 0.012871432 ubox
18 43 0.019185751 ubox
18 44 0.136381633 ubox
19 23 0.025362268 ubox
19 24 0.873768860 ubox
19 25 0.039128718 ubox
19 27 0.017190448 ubox
19 30 0.008565636 ubox
19 31 0.019227554 ubox
19 32 0.014200746 ubox
19 33 0.072735586 ubox
19 34 0.197815083 ubox
19 35 0.004386647 ubox
19 40 0.054875665 ubox
19 41 0.014463205 ubox
19 42 0.021927841 ubox
19 43 0.133675234 ubox
19 44 0.008021223 ubox
20 26 0.055828963 ubox
20 28 0.009917462 ubox
20 29 0.010268169 ubox
20 38 0.009531252 ubox
20 39 0.055704378 ubox
21 29 0.016159554 ubox
22 29 0.040886935 ubox
23 29 0.046185796 ubox
24 29 0.061453568 ubox
25 29 0.018152434 ubox
26 30 0.008094255 ubox
26 35 0.003879841 ubox
26 37 0.329139707 ubox
27 36 0.967906523 ubox
27 38 0.022373907 ubox
27 45 0.003530254 ubox
28 35 0.968753784 ubox
28 37 0.022419100 ubox
28 44 0.003659692 ubox
29 33 0.010354122 ubox
29 34 0.959015607 ubox
29 35 0.004495463 ubox
29 37 0.006184192 ubox
29 40 0.017947525 ubox
29 43 0.003776022 ubox
30 36 0.020098764 ubox
30 38 0.007109175 ubox
30 39 0.028450733 ubox
30 75 0.004210713 ubox
31 74 0.004358416 ubox
33 72 0.008397170 ubox
34 46 0.011666683 ubox
34 71 0.009246022 ubox
35 39 0.008403032 ubox
35 45 0.013892150 ubox
35 70 0.009357698 ubox
36 44 0.014535768 ubox
36 69 0.009355331 ubox
37 45 0.020984147 ubox
37 56 0.006761987 ubox
38 44 0.023824778 ubox
38 55 0.006792273 ubox
39 44 0.013713376 ubox
39 54 0.006781684 ubox
44 56 0.005864128 ubox
44 59 0.983148507 ubox
45 55 0.005829820 ubox
45 58 0.989913678 ubox
46 54 0.005714840 ubox
46 57 0.990285688 ubox
47 56 0.990872962 ubox
48 55 0.990052336 ubox
49 54 0.988613088 ubox
49 55 0.029276269 ubox
49 58 0.009865194 ubox
50 56 0.014786201 ubox
50 59 0.014101049 ubox
50 78 0.010283491 ubox
51 77 0.010547356 ubox
52 76 0.010165037 ubox
52 77 0.009378214 ubox
53 74 0.008506369 ubox
53 76 0.010539921 ubox
54 59 0.025797437 ubox
54 73 0.008904502 ubox
54 74 0.010789131 ubox
54 75 0.010753304 ubox
55 59 0.006001304 ubox
55 61 0.003663636 ubox
55 70 0.003257918 ubox
55 72 0.008754256 ubox
55 73 0.014211001 ubox
55 74 0.006078269 ubox
56 60 0.003795586 ubox
56 69 0.003260496 ubox
57 71 0.079675091 ubox
57 72 0.005819319 ubox
57 74 0.008761929 ubox
57 76 0.010296342 ubox
58 70 0.086147783 ubox
58 71 0.005226148 ubox
58 72 0.004847892 ubox
58 73 0.009326177 ubox
58 75 0.011133030 ubox
58 78 0.003862590 ubox
59 69 0.086162060 ubox
59 79 0.021323584 ubox
60 65 0.005426521 ubox
60 70 0.035159079 ubox
60 73 0.011644041 ubox
60 75 0.008664755 ubox
60 78 0.023086315 ubox
61 69 0.035190615 ubox
62 71 0.013274371 ubox
62 74 0.014584918 ubox
62 76 0.023401654 ubox
63 70 0.013643608 ubox
63 73 0.015111768 ubox
63 75 0.024034839 ubox
63 78 0.003730577 ubox
64 72 0.014466873 ubox
64 74 0.023075352 ubox
64 77 0.003570342 ubox
65 69 0.004697710 ubox
65 79 0.005129488 ubox
66 71 0.016093451 ubox
66 72 0.025730082 ubox
66 74 0.011046283 ubox
66 76 0.014924244 ubox
66 77 0.034373846 ubox
67 71 0.021956662 ubox
67 72 0.016891790 ubox
67 74 0.019450838 ubox
67 76 0.037363490 ubox
67 77 0.152870953 ubox
68 72 0.009008694 ubox
68 74 0.073670666 ubox
68 76 0.170147467 ubox
68 77 0.026797793 ubox
69 73 0.076412426 ubox
69 74 0.013940655 ubox
69 75 0.171071967 ubox
69 76 0.025455497 ubox
69 77 0.008136777 ubox
69 78 0.041066405 ubox
70 79 0.032195081 ubox
71 79 0.004741585 ubox
72 79 0.008864000 ubox
73 79 0.027651282 ubox
74 79 0.007343262 ubox
75 79 0.012825266 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
