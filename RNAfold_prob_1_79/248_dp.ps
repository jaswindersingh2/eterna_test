%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (248)
} def

/sequence { (\
GGAAAUCCGGCCGUGACCUACUGGUCUGGCUUGCCUUUCCGUCUUUAGUCGGUGGCUCGCCUGGGCCCGAUGCUAUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.006378592 ubox
1 8 0.152243043 ubox
1 12 0.003171500 ubox
1 35 0.018731185 ubox
1 39 0.046550982 ubox
1 40 0.906940526 ubox
1 68 0.005476094 ubox
1 73 0.041055987 ubox
1 74 0.190112001 ubox
1 76 0.018256890 ubox
1 77 0.009663865 ubox
1 78 0.108466960 ubox
2 6 0.004225426 ubox
2 7 0.151874173 ubox
2 8 0.008885033 ubox
2 11 0.003171965 ubox
2 34 0.018746405 ubox
2 38 0.047587471 ubox
2 39 0.908739748 ubox
2 67 0.005200545 ubox
2 73 0.200764243 ubox
2 74 0.044071629 ubox
2 76 0.013378597 ubox
2 77 0.105341716 ubox
2 78 0.178833320 ubox
3 32 0.003679956 ubox
3 37 0.055488611 ubox
3 38 0.907576051 ubox
3 71 0.023174327 ubox
3 74 0.029857488 ubox
3 76 0.088362626 ubox
3 77 0.178517565 ubox
4 32 0.005661498 ubox
4 36 0.060071632 ubox
4 37 0.899810538 ubox
4 38 0.013762155 ubox
4 71 0.020733936 ubox
4 74 0.028799937 ubox
4 76 0.175322798 ubox
4 77 0.005709613 ubox
5 31 0.004078757 ubox
5 32 0.006149439 ubox
5 36 0.861573822 ubox
5 37 0.018797721 ubox
5 71 0.364618220 ubox
5 74 0.019102272 ubox
5 76 0.005266433 ubox
6 33 0.032034324 ubox
6 65 0.005126661 ubox
6 70 0.374883435 ubox
6 72 0.003542968 ubox
6 75 0.003412182 ubox
7 33 0.439902030 ubox
7 64 0.005536741 ubox
7 69 0.375538876 ubox
7 72 0.006521099 ubox
8 33 0.632961868 ubox
8 63 0.005536652 ubox
8 69 0.030145482 ubox
8 72 0.004842778 ubox
9 18 0.004359282 ubox
9 30 0.004962829 ubox
9 31 0.775535743 ubox
9 32 0.446932906 ubox
9 34 0.014746616 ubox
9 35 0.019430918 ubox
9 62 0.003172996 ubox
9 66 0.007463856 ubox
9 67 0.410696636 ubox
9 68 0.028546683 ubox
10 17 0.004349580 ubox
10 30 0.908911447 ubox
10 31 0.058747456 ubox
10 34 0.018446278 ubox
10 66 0.411501341 ubox
10 67 0.020395265 ubox
11 29 0.910913897 ubox
11 33 0.017526675 ubox
11 64 0.027727178 ubox
11 65 0.411133592 ubox
12 28 0.910838874 ubox
12 29 0.010277468 ubox
12 63 0.038252991 ubox
12 64 0.409916472 ubox
13 21 0.003451804 ubox
13 26 0.006242983 ubox
13 27 0.853479799 ubox
13 30 0.011777857 ubox
13 60 0.006675228 ubox
13 62 0.035287051 ubox
14 20 0.003447133 ubox
14 29 0.011271405 ubox
14 59 0.006693287 ubox
14 63 0.035502877 ubox
15 25 0.006476396 ubox
15 26 0.998835691 ubox
15 27 0.003972814 ubox
15 58 0.006682862 ubox
15 62 0.003238945 ubox
16 25 0.999696209 ubox
16 57 0.006572659 ubox
17 24 0.999925283 ubox
18 23 0.999384512 ubox
18 55 0.006511762 ubox
19 23 0.003558836 ubox
19 54 0.006518910 ubox
20 53 0.006664185 ubox
21 52 0.006671206 ubox
22 51 0.006660325 ubox
23 50 0.006642541 ubox
23 67 0.006669417 ubox
24 49 0.006412589 ubox
24 66 0.006706328 ubox
25 65 0.006712692 ubox
26 48 0.006389231 ubox
26 63 0.025053308 ubox
26 64 0.006824776 ubox
27 47 0.006360517 ubox
27 63 0.033504467 ubox
28 46 0.005637722 ubox
28 61 0.411312798 ubox
28 62 0.006818704 ubox
29 42 0.003322726 ubox
29 45 0.004644424 ubox
29 60 0.412048932 ubox
29 61 0.005141964 ubox
30 41 0.003382788 ubox
30 59 0.411884500 ubox
33 42 0.005988162 ubox
33 53 0.003789562 ubox
33 56 0.412141790 ubox
33 73 0.005661749 ubox
34 41 0.006336841 ubox
34 52 0.003897445 ubox
34 55 0.412136619 ubox
34 72 0.005655873 ubox
35 51 0.003881170 ubox
35 54 0.411407089 ubox
35 55 0.008154759 ubox
36 52 0.003294359 ubox
36 54 0.011085827 ubox
37 52 0.005853650 ubox
37 54 0.007394456 ubox
38 52 0.007601330 ubox
39 51 0.006156581 ubox
39 52 0.412134974 ubox
40 48 0.004707584 ubox
40 51 0.412879495 ubox
40 79 0.064044404 ubox
41 45 0.006788311 ubox
41 46 0.016684359 ubox
41 50 0.413035595 ubox
41 53 0.004789715 ubox
41 66 0.013316639 ubox
41 71 0.011931730 ubox
41 73 0.193662108 ubox
41 74 0.012562064 ubox
41 76 0.071269872 ubox
41 77 0.046158084 ubox
41 78 0.436499951 ubox
42 47 0.008881150 ubox
42 48 0.028970712 ubox
42 52 0.008723187 ubox
42 65 0.013250041 ubox
42 70 0.012169231 ubox
42 72 0.189563375 ubox
42 75 0.071475745 ubox
42 79 0.035154417 ubox
43 48 0.279714406 ubox
43 51 0.012674573 ubox
43 52 0.013192041 ubox
43 64 0.013137826 ubox
43 69 0.012161949 ubox
43 72 0.046210081 ubox
43 79 0.044292801 ubox
44 48 0.010330290 ubox
44 51 0.012673934 ubox
44 63 0.011617037 ubox
44 65 0.003587317 ubox
44 70 0.008397857 ubox
44 72 0.018798337 ubox
44 75 0.224158672 ubox
44 79 0.015555746 ubox
45 64 0.004916459 ubox
45 69 0.007830065 ubox
45 70 0.004228425 ubox
45 72 0.028333473 ubox
45 75 0.079630177 ubox
45 79 0.011655900 ubox
46 51 0.003206272 ubox
46 63 0.007622870 ubox
46 69 0.003657261 ubox
46 72 0.053375549 ubox
46 75 0.538178479 ubox
46 79 0.003851566 ubox
47 57 0.005032402 ubox
47 62 0.011570929 ubox
47 71 0.054515064 ubox
47 74 0.567513981 ubox
47 76 0.011910325 ubox
47 77 0.020080169 ubox
48 56 0.005194019 ubox
48 60 0.003540703 ubox
48 61 0.011774978 ubox
48 66 0.013626273 ubox
48 68 0.003930195 ubox
48 71 0.673512039 ubox
48 73 0.563280359 ubox
48 74 0.010156075 ubox
48 76 0.022305937 ubox
48 77 0.003954167 ubox
48 78 0.014542729 ubox
49 55 0.005118984 ubox
49 64 0.004064979 ubox
49 65 0.013532542 ubox
49 70 0.733436634 ubox
49 72 0.466644949 ubox
49 75 0.021670140 ubox
49 79 0.005516855 ubox
50 54 0.004952012 ubox
50 59 0.012423649 ubox
50 63 0.005312188 ubox
50 64 0.013157718 ubox
50 69 0.780600125 ubox
50 72 0.185118653 ubox
50 79 0.035999238 ubox
51 58 0.012412372 ubox
51 61 0.014981770 ubox
51 67 0.005836635 ubox
51 68 0.758985536 ubox
51 71 0.179574029 ubox
51 73 0.008755093 ubox
51 74 0.043653331 ubox
51 77 0.035581572 ubox
51 78 0.039068080 ubox
52 57 0.009046175 ubox
52 60 0.015086092 ubox
52 62 0.007035433 ubox
52 66 0.007395769 ubox
52 67 0.554546822 ubox
52 68 0.324985150 ubox
52 71 0.038941875 ubox
52 73 0.045635804 ubox
52 76 0.051273650 ubox
52 77 0.027909195 ubox
53 59 0.015080273 ubox
53 65 0.008453448 ubox
53 69 0.064115580 ubox
53 70 0.039383492 ubox
53 72 0.045366710 ubox
53 75 0.058548001 ubox
54 58 0.014366234 ubox
54 61 0.010722062 ubox
54 66 0.197673866 ubox
54 67 0.715394189 ubox
54 68 0.057479340 ubox
54 74 0.059103505 ubox
55 60 0.010671330 ubox
55 66 0.884559355 ubox
55 67 0.041094741 ubox
55 73 0.059161582 ubox
56 63 0.017478188 ubox
56 64 0.124697252 ubox
56 65 0.899839021 ubox
56 72 0.059147060 ubox
57 63 0.109405726 ubox
57 64 0.896559668 ubox
57 65 0.011558194 ubox
57 70 0.057915855 ubox
58 63 0.891937326 ubox
58 64 0.062456362 ubox
58 69 0.058698531 ubox
58 79 0.003406524 ubox
59 66 0.017672601 ubox
59 68 0.056199734 ubox
59 78 0.003716237 ubox
60 65 0.019037344 ubox
61 65 0.005435404 ubox
62 75 0.004028203 ubox
63 74 0.004191983 ubox
64 73 0.004141702 ubox
64 74 0.007873526 ubox
65 73 0.008246277 ubox
66 72 0.008260837 ubox
68 79 0.164507093 ubox
69 73 0.003691142 ubox
69 77 0.006837239 ubox
69 78 0.180278604 ubox
70 76 0.009396317 ubox
70 77 0.177770726 ubox
71 75 0.009924285 ubox
71 79 0.008371233 ubox
72 76 0.005799976 ubox
72 77 0.006938480 ubox
72 78 0.028591929 ubox
73 79 0.019950296 ubox
74 79 0.005848287 ubox
5 71 0.9500000 lbox
6 70 0.9500000 lbox
7 69 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
showpage
end
%%EOF
