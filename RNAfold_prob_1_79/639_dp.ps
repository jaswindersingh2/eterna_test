%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (639)
} def

/sequence { (\
GGAAAGCGCACCUCUCACUAUUCUACCCACCAAAAUUCAACCCUCCCUCACUUCUCUUCUUACCGCGCUCGAACUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.004214083 ubox
1 9 0.003445163 ubox
1 12 0.018767743 ubox
1 15 0.004398291 ubox
1 16 0.003928122 ubox
1 18 0.005206540 ubox
1 23 0.011255995 ubox
1 24 0.020590313 ubox
1 27 0.003904882 ubox
1 28 0.011545469 ubox
1 31 0.006173677 ubox
1 43 0.003494617 ubox
1 46 0.008893485 ubox
1 47 0.003751157 ubox
1 55 0.003307402 ubox
1 64 0.008611980 ubox
1 69 0.003742662 ubox
1 70 0.101699846 ubox
1 74 0.156027170 ubox
1 75 0.069458946 ubox
1 76 0.007620307 ubox
1 77 0.012405991 ubox
1 78 0.563153020 ubox
2 11 0.018783129 ubox
2 14 0.005849504 ubox
2 16 0.009925364 ubox
2 22 0.011313639 ubox
2 23 0.021835051 ubox
2 26 0.003895745 ubox
2 27 0.011510207 ubox
2 30 0.006146875 ubox
2 42 0.003487500 ubox
2 45 0.008938812 ubox
2 46 0.003706230 ubox
2 54 0.004081138 ubox
2 56 0.003332864 ubox
2 63 0.008607358 ubox
2 68 0.003283802 ubox
2 69 0.053117396 ubox
2 70 0.186990831 ubox
2 74 0.079798145 ubox
2 75 0.009090685 ubox
2 76 0.019162226 ubox
2 77 0.564402806 ubox
2 78 0.324969216 ubox
3 13 0.005600885 ubox
3 15 0.009720190 ubox
3 21 0.011286437 ubox
3 22 0.021779691 ubox
3 44 0.008568767 ubox
3 53 0.003750552 ubox
3 55 0.003294307 ubox
3 69 0.143806146 ubox
3 75 0.020142083 ubox
3 76 0.564404733 ubox
3 77 0.324928633 ubox
4 21 0.020818069 ubox
4 52 0.003205191 ubox
4 53 0.004363522 ubox
4 61 0.007716127 ubox
4 69 0.040439382 ubox
4 75 0.559089894 ubox
4 76 0.321330117 ubox
4 77 0.008304238 ubox
5 13 0.009739263 ubox
5 15 0.004719083 ubox
5 19 0.022396359 ubox
5 24 0.007792957 ubox
5 52 0.004849034 ubox
5 60 0.008079429 ubox
5 69 0.937807192 ubox
5 75 0.176169766 ubox
5 76 0.005260762 ubox
6 12 0.009886964 ubox
6 14 0.004839074 ubox
6 18 0.022722152 ubox
6 23 0.007811670 ubox
6 41 0.003397577 ubox
6 51 0.005109528 ubox
6 59 0.007988647 ubox
6 66 0.036969716 ubox
6 68 0.994080817 ubox
6 69 0.004476199 ubox
6 70 0.007054228 ubox
6 74 0.089178191 ubox
7 65 0.037040064 ubox
7 67 0.997462958 ubox
7 71 0.015175808 ubox
8 12 0.004236230 ubox
8 14 0.003918853 ubox
8 16 0.018813150 ubox
8 18 0.003509819 ubox
8 49 0.003762909 ubox
8 64 0.035760010 ubox
8 66 0.997449483 ubox
8 68 0.019096262 ubox
8 70 0.013678348 ubox
9 65 0.996448947 ubox
9 67 0.019326106 ubox
9 71 0.027523796 ubox
10 15 0.009395171 ubox
10 19 0.008513153 ubox
10 36 0.003507110 ubox
10 37 0.003803866 ubox
10 44 0.003867016 ubox
10 48 0.004408595 ubox
10 52 0.004866214 ubox
10 53 0.005198443 ubox
10 55 0.005848236 ubox
10 57 0.006518506 ubox
10 58 0.007521328 ubox
10 60 0.014017224 ubox
10 61 0.018952506 ubox
10 69 0.006773751 ubox
11 65 0.014939879 ubox
11 67 0.010004423 ubox
12 65 0.008629932 ubox
12 67 0.008086767 ubox
13 17 0.004931401 ubox
13 20 0.007050991 ubox
13 62 0.023284235 ubox
14 65 0.007483016 ubox
14 67 0.005960004 ubox
15 20 0.005979412 ubox
15 62 0.009030042 ubox
16 65 0.006019200 ubox
17 21 0.003808973 ubox
17 22 0.005528437 ubox
17 24 0.007017853 ubox
17 53 0.003608083 ubox
17 55 0.010038059 ubox
17 57 0.025679132 ubox
17 58 0.017095309 ubox
17 60 0.008071232 ubox
17 61 0.005374419 ubox
19 25 0.011803467 ubox
19 62 0.018779591 ubox
20 24 0.011219748 ubox
20 36 0.010441971 ubox
20 52 0.014895587 ubox
20 53 0.030438722 ubox
20 55 0.015510892 ubox
20 57 0.010093469 ubox
20 58 0.008430669 ubox
20 60 0.004226489 ubox
20 61 0.019361963 ubox
21 25 0.003546805 ubox
21 29 0.003470193 ubox
21 33 0.006194848 ubox
21 34 0.005805934 ubox
21 35 0.011360270 ubox
21 50 0.005069217 ubox
21 62 0.004284525 ubox
21 73 0.004347010 ubox
22 29 0.006173721 ubox
22 32 0.006562636 ubox
22 33 0.006246903 ubox
22 34 0.010974204 ubox
22 50 0.008953596 ubox
22 72 0.004557323 ubox
23 71 0.004568634 ubox
24 29 0.006348480 ubox
24 32 0.006772423 ubox
24 33 0.009690029 ubox
24 34 0.004193551 ubox
24 50 0.023392383 ubox
24 62 0.007322205 ubox
25 48 0.004056020 ubox
25 52 0.008408240 ubox
25 53 0.003535001 ubox
25 57 0.003274699 ubox
25 60 0.003401417 ubox
25 61 0.007252808 ubox
29 36 0.005233975 ubox
29 37 0.003473052 ubox
32 36 0.003368631 ubox
32 37 0.006452559 ubox
32 53 0.003744687 ubox
32 58 0.006699673 ubox
32 60 0.003299007 ubox
32 61 0.007276885 ubox
32 77 0.003437308 ubox
33 37 0.003791559 ubox
33 44 0.003414444 ubox
33 52 0.003896385 ubox
33 53 0.004369095 ubox
33 57 0.006748589 ubox
33 58 0.006759933 ubox
33 60 0.007315457 ubox
33 61 0.007038160 ubox
33 76 0.003782559 ubox
34 44 0.003776101 ubox
34 52 0.004523049 ubox
34 53 0.004686886 ubox
34 57 0.006391746 ubox
34 58 0.006495235 ubox
34 60 0.006940603 ubox
34 61 0.006337106 ubox
34 75 0.003680188 ubox
35 44 0.006784445 ubox
35 52 0.004691128 ubox
35 53 0.003811517 ubox
35 57 0.005994706 ubox
35 58 0.004405135 ubox
35 60 0.006129981 ubox
35 61 0.005216778 ubox
36 40 0.003737686 ubox
36 62 0.003790593 ubox
36 73 0.006291095 ubox
37 50 0.003276418 ubox
37 72 0.006728554 ubox
38 71 0.006757460 ubox
39 44 0.007651424 ubox
39 48 0.008682341 ubox
39 53 0.006268818 ubox
39 58 0.004279016 ubox
39 61 0.004219139 ubox
40 44 0.004366236 ubox
40 48 0.004773784 ubox
40 52 0.006265757 ubox
40 57 0.004196881 ubox
40 60 0.004011294 ubox
44 50 0.005553386 ubox
48 72 0.003341028 ubox
49 71 0.003506348 ubox
50 55 0.006180992 ubox
50 57 0.007048307 ubox
50 58 0.004318959 ubox
50 60 0.003197134 ubox
50 61 0.003397199 ubox
52 62 0.006026432 ubox
52 73 0.006084248 ubox
53 62 0.006089212 ubox
53 72 0.007106107 ubox
54 71 0.007195692 ubox
55 62 0.006846821 ubox
55 72 0.003795560 ubox
56 65 0.003969481 ubox
56 71 0.003983002 ubox
57 62 0.012271393 ubox
57 73 0.007657232 ubox
58 62 0.004709520 ubox
58 72 0.008987868 ubox
59 71 0.009106315 ubox
64 71 0.012224806 ubox
65 70 0.011617347 ubox
66 71 0.003349290 ubox
67 74 0.003213873 ubox
70 79 0.454418490 ubox
71 75 0.005396416 ubox
71 76 0.009515826 ubox
71 77 0.016577710 ubox
71 78 0.503022150 ubox
72 76 0.018853880 ubox
72 77 0.470451303 ubox
73 77 0.012448496 ubox
74 79 0.026682600 ubox
75 79 0.003379554 ubox
1 78 0.9500000 lbox
2 77 0.9500000 lbox
3 76 0.9500000 lbox
4 75 0.9500000 lbox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
showpage
end
%%EOF
