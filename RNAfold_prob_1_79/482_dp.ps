%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (482)
} def

/sequence { (\
GGAAAAGAGAUCGGCACACGAAAGUGCUGGAAACAGGCCAAAACUGUCCAAAAGGACAGGAUCUCAAAGAAGUGCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 39 0.035041086 ubox
1 65 0.004142203 ubox
1 73 0.013482754 ubox
1 75 0.039742214 ubox
1 76 0.016483380 ubox
1 78 0.065675721 ubox
2 38 0.035051536 ubox
2 65 0.005843622 ubox
2 73 0.008756338 ubox
2 75 0.019001930 ubox
2 77 0.062149921 ubox
2 78 0.083240796 ubox
3 64 0.004694459 ubox
3 73 0.037083631 ubox
3 76 0.058555833 ubox
3 77 0.080917366 ubox
4 73 0.009354489 ubox
4 76 0.071079665 ubox
4 77 0.005461124 ubox
5 73 0.009823879 ubox
5 76 0.006148484 ubox
5 77 0.009307377 ubox
6 64 0.003318868 ubox
6 73 0.043799722 ubox
6 76 0.011096930 ubox
6 77 0.003240766 ubox
7 34 0.013413072 ubox
7 63 0.003494380 ubox
7 65 0.997561193 ubox
7 73 0.005981000 ubox
7 75 0.007739740 ubox
7 77 0.004002788 ubox
7 78 0.006088809 ubox
8 62 0.003225835 ubox
8 64 0.998740357 ubox
8 76 0.004448845 ubox
8 77 0.005743980 ubox
9 34 0.005136382 ubox
9 63 0.999044260 ubox
9 75 0.004627967 ubox
9 76 0.003763971 ubox
9 78 0.006827942 ubox
10 62 0.998585117 ubox
10 77 0.006570036 ubox
11 21 0.005296658 ubox
11 30 0.045446059 ubox
11 31 0.007427737 ubox
11 60 0.005992268 ubox
11 61 0.997527075 ubox
12 20 0.007143287 ubox
12 29 0.105286379 ubox
12 30 0.007291546 ubox
12 59 0.003727510 ubox
12 60 0.993067284 ubox
13 19 0.015296286 ubox
13 27 0.027887089 ubox
13 28 0.563361964 ubox
13 38 0.004073520 ubox
13 39 0.684028073 ubox
13 76 0.009697952 ubox
14 19 0.005113711 ubox
14 25 0.011267905 ubox
14 27 0.710305614 ubox
14 38 0.684724516 ubox
14 75 0.010425390 ubox
15 20 0.005567496 ubox
15 24 0.011666118 ubox
15 26 0.715708767 ubox
15 29 0.016426287 ubox
15 36 0.003912707 ubox
15 37 0.683546097 ubox
15 74 0.010431965 ubox
16 25 0.716510227 ubox
16 28 0.019652878 ubox
16 73 0.010332537 ubox
17 24 0.715768976 ubox
17 26 0.690683084 ubox
17 36 0.011301590 ubox
17 72 0.010038468 ubox
18 25 0.693817460 ubox
19 24 0.694062985 ubox
19 26 0.018498945 ubox
19 29 0.003838441 ubox
19 30 0.004989388 ubox
20 25 0.013267007 ubox
20 28 0.003261060 ubox
21 28 0.004445070 ubox
24 34 0.004331299 ubox
24 38 0.012187597 ubox
24 39 0.023374779 ubox
25 33 0.004321663 ubox
25 37 0.011580153 ubox
25 40 0.004146869 ubox
26 38 0.020862449 ubox
26 39 0.004574610 ubox
27 36 0.696700586 ubox
27 37 0.018816289 ubox
28 33 0.007343587 ubox
28 35 0.705917598 ubox
28 36 0.014142873 ubox
28 37 0.004945839 ubox
28 40 0.385998392 ubox
28 41 0.018324677 ubox
28 42 0.006020665 ubox
28 43 0.003557501 ubox
28 50 0.004091378 ubox
29 34 0.717749978 ubox
29 38 0.062159342 ubox
29 39 0.641511118 ubox
29 49 0.006770770 ubox
30 34 0.021139636 ubox
30 38 0.640915991 ubox
30 39 0.061680129 ubox
30 48 0.006766569 ubox
30 78 0.005457519 ubox
31 47 0.004986125 ubox
31 77 0.005375455 ubox
32 76 0.004478691 ubox
33 47 0.006487333 ubox
34 46 0.009279893 ubox
34 74 0.004021216 ubox
34 79 0.003356141 ubox
35 45 0.011790103 ubox
35 64 0.003603845 ubox
35 73 0.003844921 ubox
35 77 0.010667011 ubox
36 44 0.013453759 ubox
36 45 0.003163161 ubox
36 63 0.003845051 ubox
36 76 0.013016941 ubox
37 44 0.004927707 ubox
37 62 0.003570487 ubox
37 75 0.013401723 ubox
38 60 0.006381381 ubox
38 74 0.013182131 ubox
39 59 0.005752409 ubox
39 60 0.005136724 ubox
39 72 0.009075364 ubox
40 73 0.003261902 ubox
41 62 0.012090198 ubox
44 59 0.996619082 ubox
44 60 0.004066506 ubox
45 58 0.999202410 ubox
46 57 0.999931750 ubox
47 56 0.999833630 ubox
48 55 0.999954759 ubox
49 54 0.998512413 ubox
60 65 0.004602123 ubox
60 75 0.010497594 ubox
60 78 0.010350707 ubox
61 73 0.003997984 ubox
61 77 0.010215202 ubox
62 70 0.016305223 ubox
62 72 0.003620510 ubox
63 69 0.017525816 ubox
63 72 0.011593397 ubox
63 74 0.005846807 ubox
64 68 0.015799484 ubox
64 70 0.006983724 ubox
64 71 0.010775063 ubox
65 69 0.007898635 ubox
65 72 0.007603559 ubox
65 74 0.008786546 ubox
65 79 0.006190426 ubox
66 73 0.018363896 ubox
66 76 0.007645152 ubox
66 77 0.033158353 ubox
67 73 0.016527691 ubox
67 76 0.034467532 ubox
67 77 0.272884341 ubox
68 73 0.034450161 ubox
68 76 0.304056039 ubox
68 77 0.030349194 ubox
69 73 0.007462596 ubox
69 75 0.307988007 ubox
69 76 0.030553856 ubox
69 77 0.037119226 ubox
69 78 0.602504686 ubox
70 76 0.039423431 ubox
70 77 0.596632960 ubox
71 76 0.519363807 ubox
71 77 0.022209232 ubox
72 76 0.019402550 ubox
72 77 0.020602127 ubox
72 78 0.080210968 ubox
73 79 0.023005755 ubox
74 78 0.037430394 ubox
75 79 0.010572629 ubox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
