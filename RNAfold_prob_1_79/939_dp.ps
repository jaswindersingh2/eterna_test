%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (939)
} def

/sequence { (\
GGAAAUUUCCACAAGAAAACUUGAGCAAGAAAGAAAAAAACUUUCUUGCACUUCAAAAGAAGAGGAAACAGACUCUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.026938455 ubox
1 10 0.983176152 ubox
1 12 0.012779950 ubox
1 20 0.007342776 ubox
1 21 0.010745356 ubox
1 51 0.006787004 ubox
1 52 0.005920797 ubox
1 54 0.038549384 ubox
1 73 0.008729647 ubox
1 74 0.004180429 ubox
1 75 0.003644925 ubox
1 76 0.006530753 ubox
1 78 0.004759043 ubox
2 7 0.003802767 ubox
2 8 0.026478855 ubox
2 9 0.983693477 ubox
2 10 0.012970612 ubox
2 20 0.014550194 ubox
2 22 0.010911783 ubox
2 51 0.006782741 ubox
2 53 0.037382808 ubox
2 54 0.046815584 ubox
2 73 0.005139561 ubox
2 75 0.007541057 ubox
2 77 0.004363261 ubox
2 78 0.006031912 ubox
3 7 0.031579348 ubox
3 8 0.919779319 ubox
3 21 0.011571481 ubox
3 22 0.005889254 ubox
3 52 0.035315412 ubox
3 53 0.046460908 ubox
3 74 0.007394359 ubox
3 76 0.004069174 ubox
3 77 0.005851976 ubox
4 8 0.022152119 ubox
4 21 0.005984228 ubox
4 22 0.005045322 ubox
4 52 0.041938846 ubox
4 76 0.005039738 ubox
5 21 0.005031282 ubox
5 52 0.003247498 ubox
6 15 0.003473834 ubox
6 16 0.005974955 ubox
6 17 0.009037901 ubox
6 18 0.064311935 ubox
6 19 0.008868985 ubox
6 50 0.006749604 ubox
6 57 0.004108357 ubox
6 58 0.004469359 ubox
6 68 0.021995018 ubox
7 14 0.004615844 ubox
7 15 0.006368165 ubox
7 16 0.010182994 ubox
7 17 0.073317299 ubox
7 18 0.009854257 ubox
7 24 0.003267007 ubox
7 56 0.004586509 ubox
7 57 0.005012524 ubox
7 67 0.025417439 ubox
8 13 0.004160572 ubox
8 14 0.005887189 ubox
8 15 0.009708036 ubox
8 16 0.075344980 ubox
8 17 0.009213944 ubox
8 24 0.007619623 ubox
8 55 0.004178128 ubox
8 56 0.004603070 ubox
8 66 0.026176432 ubox
9 15 0.075316276 ubox
9 23 0.006626379 ubox
9 65 0.026268224 ubox
9 79 0.003360676 ubox
10 15 0.012677400 ubox
10 23 0.007085865 ubox
10 64 0.026240870 ubox
10 79 0.005735382 ubox
11 22 0.006883290 ubox
11 52 0.005248839 ubox
11 53 0.005267142 ubox
12 23 0.859846194 ubox
12 79 0.013041642 ubox
13 21 0.004825135 ubox
13 22 0.864276847 ubox
13 53 0.009403698 ubox
14 21 0.864376840 ubox
14 22 0.011384343 ubox
14 52 0.010590314 ubox
15 20 0.857955662 ubox
15 21 0.011715645 ubox
15 22 0.012147784 ubox
15 51 0.010628697 ubox
15 54 0.047279311 ubox
15 78 0.003763656 ubox
16 21 0.012843166 ubox
16 22 0.009836858 ubox
16 53 0.047080068 ubox
16 77 0.003394502 ubox
17 21 0.008133042 ubox
17 22 0.006455224 ubox
17 52 0.045478777 ubox
17 53 0.004794030 ubox
18 22 0.003554811 ubox
18 52 0.005786823 ubox
18 53 0.005915457 ubox
19 52 0.006741116 ubox
19 53 0.004169996 ubox
20 59 0.007211248 ubox
20 79 0.010930967 ubox
21 50 0.009078177 ubox
21 55 0.011224787 ubox
21 56 0.387574915 ubox
21 57 0.026325442 ubox
21 58 0.012932293 ubox
22 50 0.007430463 ubox
22 55 0.431687469 ubox
22 56 0.021314245 ubox
22 57 0.008186063 ubox
23 49 0.003859660 ubox
23 51 0.098109799 ubox
23 52 0.006510230 ubox
23 53 0.018641490 ubox
23 54 0.440296398 ubox
24 52 0.043067653 ubox
24 53 0.435756530 ubox
25 49 0.997691410 ubox
25 51 0.025146884 ubox
25 52 0.044814684 ubox
26 48 0.999962806 ubox
27 47 0.999430822 ubox
28 46 0.999431180 ubox
29 45 0.999973058 ubox
30 44 0.999562019 ubox
31 43 0.998494177 ubox
31 44 0.006444697 ubox
32 42 0.998667515 ubox
32 43 0.008952611 ubox
32 46 0.003405948 ubox
33 41 0.996013144 ubox
33 42 0.010603210 ubox
33 43 0.003854194 ubox
33 45 0.003571918 ubox
34 42 0.004659187 ubox
34 43 0.003738612 ubox
34 44 0.003647749 ubox
35 42 0.004535768 ubox
35 43 0.004018759 ubox
36 42 0.004116659 ubox
51 59 0.016051521 ubox
51 62 0.029961557 ubox
51 65 0.004632523 ubox
51 79 0.010273953 ubox
52 56 0.011164446 ubox
52 57 0.016753679 ubox
52 58 0.032039568 ubox
52 61 0.033740733 ubox
52 64 0.004680023 ubox
52 79 0.003882100 ubox
53 57 0.028908173 ubox
53 58 0.016851834 ubox
53 60 0.035693542 ubox
53 63 0.004818412 ubox
53 79 0.005824477 ubox
54 59 0.036319244 ubox
54 62 0.004839729 ubox
54 79 0.016739448 ubox
59 77 0.004838203 ubox
59 78 0.997125458 ubox
60 76 0.003770661 ubox
60 77 0.998351825 ubox
61 76 0.998556406 ubox
62 75 0.999187765 ubox
62 78 0.025140509 ubox
63 74 0.999045184 ubox
63 76 0.003668543 ubox
63 77 0.025983675 ubox
64 69 0.006631546 ubox
64 73 0.999003480 ubox
64 74 0.004855016 ubox
64 75 0.003882240 ubox
64 76 0.026298905 ubox
65 69 0.010665221 ubox
65 73 0.010998035 ubox
65 74 0.003661131 ubox
65 75 0.026366872 ubox
65 78 0.007269728 ubox
66 74 0.025617404 ubox
66 77 0.007267874 ubox
67 76 0.007095980 ubox
71 78 0.006993121 ubox
72 77 0.006306659 ubox
1 10 0.9500000 lbox
2 9 0.9500000 lbox
3 8 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
59 78 0.9500000 lbox
60 77 0.9500000 lbox
61 76 0.9500000 lbox
62 75 0.9500000 lbox
63 74 0.9500000 lbox
64 73 0.9500000 lbox
showpage
end
%%EOF
