%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (82)
} def

/sequence { (\
GGAAAAACCCAGCAGACGAAUGUCUGGCAAGGGCGCAAAAGCGCACAUCGAAGGAUGCCGGGCCUGGGCCCUCACUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.065053241 ubox
1 9 0.200107965 ubox
1 10 0.729113704 ubox
1 28 0.008079860 ubox
1 44 0.004380361 ubox
1 46 0.022979972 ubox
1 49 0.011578490 ubox
1 58 0.007337032 ubox
1 59 0.204082634 ubox
1 70 0.046279837 ubox
1 71 0.046793778 ubox
1 72 0.007944542 ubox
1 73 0.069045449 ubox
1 75 0.076424808 ubox
1 76 0.031709262 ubox
1 77 0.006292528 ubox
1 78 0.189246931 ubox
2 8 0.201423118 ubox
2 9 0.727990009 ubox
2 10 0.024619873 ubox
2 28 0.007325347 ubox
2 44 0.004032095 ubox
2 46 0.011950648 ubox
2 48 0.007606660 ubox
2 49 0.022853172 ubox
2 58 0.203571553 ubox
2 59 0.015249166 ubox
2 69 0.046507210 ubox
2 70 0.046700428 ubox
2 71 0.009839876 ubox
2 72 0.055686216 ubox
2 73 0.124918803 ubox
2 75 0.036350895 ubox
2 76 0.007856670 ubox
2 77 0.184751180 ubox
2 78 0.267672098 ubox
3 48 0.021515173 ubox
3 72 0.119205680 ubox
3 76 0.174649601 ubox
3 77 0.265318876 ubox
4 72 0.024891247 ubox
4 76 0.239099894 ubox
4 77 0.017317280 ubox
5 72 0.015511804 ubox
5 76 0.020030424 ubox
5 77 0.012510454 ubox
6 72 0.018361068 ubox
6 76 0.013729222 ubox
6 77 0.010316693 ubox
7 72 0.013530972 ubox
7 76 0.010298649 ubox
7 77 0.004231667 ubox
8 12 0.009894562 ubox
8 27 0.026792872 ubox
8 31 0.026325698 ubox
8 32 0.451502889 ubox
8 33 0.107400862 ubox
8 62 0.003877335 ubox
8 68 0.153227565 ubox
8 79 0.007828228 ubox
9 26 0.023326938 ubox
9 27 0.161619947 ubox
9 31 0.452135172 ubox
9 32 0.224566663 ubox
9 33 0.005646086 ubox
9 61 0.003889943 ubox
9 67 0.153668815 ubox
9 79 0.005070207 ubox
10 26 0.164218959 ubox
10 27 0.016232047 ubox
10 31 0.225065581 ubox
10 32 0.016581672 ubox
10 60 0.003889360 ubox
10 66 0.153672531 ubox
10 79 0.007927944 ubox
11 25 0.163733089 ubox
11 65 0.152927095 ubox
11 76 0.036311686 ubox
11 77 0.008896268 ubox
12 23 0.029744086 ubox
12 24 0.161339304 ubox
12 28 0.713592268 ubox
12 46 0.003736687 ubox
12 63 0.004510333 ubox
12 64 0.148672464 ubox
12 73 0.012157564 ubox
12 75 0.038282429 ubox
12 76 0.007038315 ubox
12 77 0.003933864 ubox
12 78 0.013454799 ubox
13 18 0.005120410 ubox
13 22 0.162796889 ubox
13 26 0.834267669 ubox
13 27 0.515436254 ubox
13 62 0.005942494 ubox
14 21 0.159235599 ubox
14 23 0.013322702 ubox
14 25 0.972911020 ubox
14 76 0.004206320 ubox
15 21 0.003924285 ubox
15 24 0.984482623 ubox
15 75 0.004370146 ubox
15 78 0.005885502 ubox
16 21 0.008073460 ubox
16 23 0.984144638 ubox
16 77 0.005838469 ubox
17 22 0.982303620 ubox
17 79 0.011679338 ubox
18 73 0.012117100 ubox
18 78 0.012269283 ubox
19 72 0.012027711 ubox
19 77 0.012226336 ubox
20 76 0.010752697 ubox
21 74 0.005680770 ubox
22 63 0.057726316 ubox
22 69 0.013516169 ubox
22 73 0.005589007 ubox
22 75 0.007202575 ubox
23 62 0.057780189 ubox
23 68 0.013553449 ubox
23 74 0.006463230 ubox
24 61 0.057896109 ubox
24 67 0.013559416 ubox
25 60 0.057883993 ubox
25 66 0.012700269 ubox
25 74 0.005470189 ubox
26 59 0.058639747 ubox
26 64 0.033588449 ubox
26 70 0.006187061 ubox
26 73 0.008853639 ubox
26 75 0.016349785 ubox
26 76 0.054865465 ubox
26 77 0.003330728 ubox
26 78 0.010408879 ubox
27 34 0.006350261 ubox
27 36 0.005116817 ubox
27 46 0.003213508 ubox
27 48 0.003355094 ubox
27 49 0.011016543 ubox
27 58 0.058821248 ubox
27 63 0.140492224 ubox
27 69 0.007447494 ubox
27 72 0.006252901 ubox
27 73 0.092718605 ubox
27 75 0.289860963 ubox
27 76 0.018574451 ubox
27 77 0.014522266 ubox
27 78 0.046209640 ubox
28 32 0.006158693 ubox
28 33 0.006377145 ubox
28 35 0.005118649 ubox
28 50 0.003445915 ubox
28 57 0.057310415 ubox
28 61 0.003381178 ubox
28 62 0.140789717 ubox
28 68 0.007497261 ubox
28 79 0.009776213 ubox
29 48 0.019126185 ubox
29 56 0.039513968 ubox
29 72 0.035347595 ubox
29 76 0.028102490 ubox
29 77 0.042255111 ubox
30 48 0.023005241 ubox
30 65 0.003221259 ubox
30 72 0.773631486 ubox
30 76 0.040980259 ubox
30 77 0.021868549 ubox
31 44 0.023034989 ubox
31 46 0.111302314 ubox
31 48 0.010491740 ubox
31 49 0.011700827 ubox
31 59 0.146622046 ubox
31 64 0.003483514 ubox
31 65 0.007001276 ubox
31 71 0.814884428 ubox
31 72 0.006902149 ubox
31 73 0.012453839 ubox
31 75 0.039537045 ubox
31 76 0.025190653 ubox
31 78 0.010230409 ubox
32 44 0.010261335 ubox
32 46 0.104037503 ubox
32 48 0.010864279 ubox
32 49 0.004841380 ubox
32 58 0.146243782 ubox
32 59 0.005196603 ubox
32 63 0.003490785 ubox
32 64 0.007034818 ubox
32 70 0.815114510 ubox
32 71 0.007291419 ubox
32 72 0.010253004 ubox
32 73 0.021289258 ubox
32 75 0.025612402 ubox
32 77 0.008517451 ubox
32 78 0.006746872 ubox
33 42 0.026957752 ubox
33 44 0.567206823 ubox
33 46 0.005862188 ubox
33 63 0.006946654 ubox
33 69 0.815118312 ubox
33 70 0.006798676 ubox
33 71 0.003756837 ubox
34 41 0.027049234 ubox
34 43 0.577448526 ubox
34 62 0.006911472 ubox
34 67 0.004379700 ubox
34 68 0.815023465 ubox
35 42 0.577882716 ubox
35 44 0.026484945 ubox
35 69 0.007822167 ubox
36 41 0.577056542 ubox
36 43 0.026488371 ubox
36 60 0.004760698 ubox
36 66 0.812682938 ubox
36 67 0.043568444 ubox
36 68 0.007875925 ubox
37 65 0.800518458 ubox
38 65 0.037891961 ubox
39 65 0.051035725 ubox
40 65 0.034163279 ubox
41 58 0.003688596 ubox
41 59 0.008932381 ubox
41 63 0.808783246 ubox
41 64 0.034841155 ubox
42 57 0.003648101 ubox
42 60 0.085936091 ubox
42 61 0.029320989 ubox
42 62 0.809586142 ubox
43 56 0.003296863 ubox
43 58 0.023513071 ubox
43 59 0.085487278 ubox
43 63 0.015188150 ubox
44 57 0.024959732 ubox
44 60 0.796493589 ubox
44 61 0.055485214 ubox
44 62 0.014994964 ubox
45 56 0.020616013 ubox
46 53 0.008379108 ubox
46 54 0.005877179 ubox
46 57 0.916390674 ubox
46 60 0.003199734 ubox
46 79 0.004850211 ubox
47 56 0.918822423 ubox
48 54 0.005392523 ubox
48 55 0.919880763 ubox
48 61 0.003486956 ubox
48 79 0.005658835 ubox
49 53 0.009230577 ubox
49 54 0.919863268 ubox
49 60 0.004268591 ubox
49 79 0.354192455 ubox
50 59 0.005116877 ubox
50 73 0.008817504 ubox
50 78 0.388804389 ubox
51 72 0.006413063 ubox
51 77 0.388367212 ubox
52 72 0.010633775 ubox
52 76 0.387812311 ubox
52 77 0.018798775 ubox
53 58 0.003331927 ubox
53 59 0.013013301 ubox
53 71 0.012870689 ubox
53 73 0.003835301 ubox
53 75 0.386521896 ubox
53 76 0.026044910 ubox
53 78 0.012161566 ubox
54 58 0.013115618 ubox
54 59 0.013284617 ubox
54 70 0.012927111 ubox
54 71 0.004184040 ubox
54 72 0.005779165 ubox
54 73 0.336052365 ubox
54 75 0.034228624 ubox
54 77 0.012176747 ubox
54 78 0.008301571 ubox
55 72 0.333598678 ubox
55 76 0.011930789 ubox
55 77 0.008154679 ubox
56 74 0.122054263 ubox
57 69 0.138003977 ubox
57 70 0.026290329 ubox
57 71 0.014319426 ubox
57 72 0.023685392 ubox
57 73 0.130830626 ubox
57 75 0.006691006 ubox
58 67 0.017552046 ubox
58 68 0.140525365 ubox
59 66 0.018924875 ubox
59 67 0.140336715 ubox
60 64 0.003314214 ubox
60 65 0.015349336 ubox
60 70 0.009949324 ubox
60 71 0.539150645 ubox
60 72 0.005316190 ubox
60 73 0.003865886 ubox
61 65 0.060865732 ubox
61 69 0.009826729 ubox
61 70 0.539883638 ubox
61 71 0.005237275 ubox
62 69 0.539887585 ubox
62 70 0.004214082 ubox
63 67 0.015392375 ubox
63 68 0.537838722 ubox
64 68 0.012970578 ubox
70 79 0.003752694 ubox
71 79 0.003551857 ubox
72 79 0.003612704 ubox
73 79 0.028235125 ubox
75 79 0.015053764 ubox
1 10 0.9500000 lbox
2 9 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
30 72 0.9500000 lbox
31 71 0.9500000 lbox
32 70 0.9500000 lbox
33 69 0.9500000 lbox
34 68 0.9500000 lbox
36 66 0.9500000 lbox
37 65 0.9500000 lbox
41 63 0.9500000 lbox
42 62 0.9500000 lbox
44 60 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
