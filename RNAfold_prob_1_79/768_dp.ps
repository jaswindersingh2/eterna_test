%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (768)
} def

/sequence { (\
GGAAACCUAACCCGGGAUUUCCGUUUAUAGUUCAAUCUCACGAUCGAACUCGGCCCGCGUUAGCCAAGAAAUGGGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.106986699 ubox
1 7 0.097578876 ubox
1 8 0.025005535 ubox
1 12 0.016316413 ubox
1 13 0.008962230 ubox
1 21 0.013132800 ubox
1 22 0.389599828 ubox
1 64 0.009066653 ubox
1 65 0.368390851 ubox
1 72 0.003700510 ubox
1 77 0.005701737 ubox
1 78 0.213060198 ubox
2 6 0.097989401 ubox
2 7 0.029720122 ubox
2 11 0.016383281 ubox
2 12 0.008969780 ubox
2 19 0.004923530 ubox
2 20 0.014048725 ubox
2 21 0.389926935 ubox
2 33 0.004099542 ubox
2 64 0.368447556 ubox
2 65 0.017093680 ubox
2 76 0.006849372 ubox
2 77 0.205172227 ubox
2 78 0.370341633 ubox
3 18 0.005362054 ubox
3 19 0.018864768 ubox
3 20 0.389527553 ubox
3 32 0.003960220 ubox
3 76 0.191497178 ubox
3 77 0.340331823 ubox
4 18 0.021882068 ubox
4 19 0.388013560 ubox
4 31 0.003547775 ubox
4 76 0.266708450 ubox
4 77 0.202031456 ubox
5 18 0.382371415 ubox
5 19 0.003251644 ubox
5 76 0.259317729 ubox
5 77 0.005583338 ubox
6 15 0.064328242 ubox
6 16 0.380015431 ubox
6 63 0.051847776 ubox
6 68 0.013813199 ubox
6 73 0.111003247 ubox
6 74 0.132362332 ubox
6 75 0.297965456 ubox
6 79 0.013658839 ubox
7 14 0.065142049 ubox
7 15 0.379966001 ubox
7 16 0.060696784 ubox
7 30 0.003476363 ubox
7 63 0.851990933 ubox
7 68 0.003823316 ubox
7 73 0.115277783 ubox
7 74 0.220069846 ubox
7 75 0.005823929 ubox
7 79 0.026158107 ubox
8 14 0.368474066 ubox
8 15 0.059202816 ubox
8 27 0.005699743 ubox
8 29 0.003722382 ubox
8 62 0.889043843 ubox
8 63 0.007116807 ubox
8 67 0.003472638 ubox
8 71 0.007796119 ubox
8 73 0.195111181 ubox
8 79 0.004359100 ubox
9 25 0.003782284 ubox
9 26 0.006587429 ubox
9 28 0.003780647 ubox
9 60 0.003525819 ubox
9 61 0.901775892 ubox
9 72 0.149825881 ubox
9 77 0.063366626 ubox
10 24 0.005481111 ubox
10 25 0.006836894 ubox
10 26 0.010565599 ubox
10 60 0.912263159 ubox
10 61 0.012192258 ubox
10 72 0.003522566 ubox
10 76 0.072355282 ubox
11 23 0.004702837 ubox
11 59 0.909904478 ubox
11 68 0.013069666 ubox
11 75 0.073475308 ubox
12 23 0.003436948 ubox
12 57 0.041903717 ubox
12 59 0.048200114 ubox
12 68 0.013512269 ubox
12 74 0.073471838 ubox
13 23 0.065263587 ubox
13 57 0.912011838 ubox
13 68 0.012333275 ubox
13 73 0.073060803 ubox
13 79 0.003498246 ubox
14 22 0.070563323 ubox
14 39 0.003587305 ubox
14 55 0.005592531 ubox
14 56 0.916863283 ubox
14 65 0.004054772 ubox
14 72 0.025181324 ubox
14 78 0.003800674 ubox
15 21 0.070472601 ubox
15 22 0.031304160 ubox
15 26 0.004310342 ubox
15 38 0.003627383 ubox
15 54 0.005961889 ubox
15 55 0.916884281 ubox
15 56 0.007262765 ubox
15 64 0.004024555 ubox
15 65 0.015472411 ubox
15 77 0.003598566 ubox
15 78 0.007582222 ubox
16 20 0.045651375 ubox
16 21 0.031364522 ubox
16 25 0.004894403 ubox
16 37 0.003668461 ubox
16 54 0.916271930 ubox
16 55 0.007657581 ubox
16 64 0.015460371 ubox
16 76 0.003364351 ubox
16 77 0.007659218 ubox
16 78 0.009269599 ubox
17 24 0.006524515 ubox
17 26 0.004755670 ubox
17 28 0.009074833 ubox
17 36 0.003666283 ubox
17 72 0.012340438 ubox
17 76 0.007554866 ubox
17 77 0.009189462 ubox
18 23 0.006226432 ubox
18 27 0.009364790 ubox
18 35 0.003625999 ubox
18 52 0.006962418 ubox
18 53 0.025655335 ubox
18 62 0.004737603 ubox
18 63 0.010316801 ubox
18 68 0.003195523 ubox
18 69 0.003316406 ubox
18 71 0.016431494 ubox
18 75 0.005830325 ubox
19 34 0.003322213 ubox
19 52 0.013757838 ubox
19 53 0.006683773 ubox
19 62 0.010337458 ubox
19 67 0.003413682 ubox
19 68 0.003396883 ubox
19 70 0.016612247 ubox
20 52 0.004106362 ubox
20 53 0.015405638 ubox
20 69 0.016772086 ubox
20 75 0.012618440 ubox
21 52 0.013034757 ubox
21 53 0.913589257 ubox
21 59 0.008535427 ubox
21 68 0.016696583 ubox
21 74 0.016713674 ubox
22 52 0.914453472 ubox
22 53 0.007695337 ubox
22 57 0.009583205 ubox
22 59 0.012768905 ubox
22 73 0.016931444 ubox
23 28 0.006137584 ubox
23 33 0.004663586 ubox
23 36 0.005490807 ubox
23 37 0.003654216 ubox
23 41 0.007595217 ubox
23 44 0.009566436 ubox
23 45 0.003210901 ubox
23 49 0.009068690 ubox
23 51 0.913694291 ubox
23 54 0.045992671 ubox
23 55 0.004547867 ubox
23 56 0.011637425 ubox
23 58 0.016026927 ubox
23 72 0.018070707 ubox
23 78 0.008045458 ubox
24 29 0.006280775 ubox
24 35 0.005939034 ubox
24 40 0.007266357 ubox
24 43 0.010078264 ubox
24 48 0.009419604 ubox
24 52 0.003357235 ubox
24 53 0.046788795 ubox
24 57 0.015743006 ubox
24 70 0.003240162 ubox
24 71 0.018152884 ubox
24 75 0.004456855 ubox
25 34 0.005895831 ubox
25 42 0.009811674 ubox
25 43 0.003570253 ubox
25 47 0.009379468 ubox
25 48 0.003400820 ubox
25 52 0.046006752 ubox
25 53 0.010500459 ubox
25 69 0.003782562 ubox
25 70 0.017948203 ubox
25 74 0.005901357 ubox
26 42 0.003652230 ubox
26 46 0.009121480 ubox
26 48 0.006601088 ubox
26 52 0.015430692 ubox
26 53 0.008632783 ubox
26 68 0.003818138 ubox
26 69 0.016758697 ubox
26 73 0.006414168 ubox
27 32 0.003573936 ubox
27 36 0.003548937 ubox
27 44 0.006521259 ubox
27 50 0.022600516 ubox
27 72 0.006445031 ubox
28 35 0.003714924 ubox
28 43 0.006042310 ubox
28 52 0.019538991 ubox
28 53 0.005147587 ubox
28 67 0.004405059 ubox
28 71 0.006192552 ubox
29 38 0.017799651 ubox
29 50 0.979937558 ubox
30 37 0.018834092 ubox
30 39 0.008023638 ubox
30 41 0.015625565 ubox
30 44 0.006214209 ubox
30 45 0.018105224 ubox
30 49 0.996690280 ubox
30 50 0.003470547 ubox
31 40 0.015436947 ubox
31 43 0.005644157 ubox
31 48 0.996395350 ubox
32 42 0.004463261 ubox
32 43 0.027329987 ubox
32 47 0.996513966 ubox
33 42 0.028716456 ubox
33 46 0.993716316 ubox
34 44 0.031109928 ubox
35 44 0.975703693 ubox
36 42 0.004986203 ubox
36 43 0.994485462 ubox
37 42 0.993182097 ubox
38 42 0.005382786 ubox
41 52 0.005023577 ubox
41 79 0.004642113 ubox
42 51 0.005226804 ubox
42 78 0.004823367 ubox
43 50 0.004937793 ubox
43 76 0.004201450 ubox
43 77 0.003720430 ubox
44 75 0.005167742 ubox
45 74 0.005278537 ubox
45 79 0.067474541 ubox
46 78 0.074559362 ubox
47 72 0.004723168 ubox
47 77 0.074555024 ubox
48 76 0.074546673 ubox
49 68 0.007185857 ubox
49 75 0.074578452 ubox
50 66 0.003921616 ubox
50 67 0.009221283 ubox
50 69 0.011107442 ubox
50 74 0.074465867 ubox
50 79 0.012426709 ubox
51 57 0.003742005 ubox
51 59 0.014430682 ubox
51 68 0.014382072 ubox
51 73 0.074362634 ubox
51 79 0.235575984 ubox
52 56 0.003844516 ubox
52 58 0.014990453 ubox
52 61 0.007615477 ubox
52 65 0.104247975 ubox
52 72 0.056285516 ubox
52 76 0.006947906 ubox
52 77 0.219470600 ubox
52 78 0.255295401 ubox
53 60 0.009093832 ubox
53 64 0.104566370 ubox
53 76 0.320412992 ubox
53 77 0.186350368 ubox
53 78 0.010491084 ubox
54 59 0.009187067 ubox
54 63 0.104444716 ubox
54 68 0.013476037 ubox
54 75 0.366728679 ubox
55 59 0.003884257 ubox
55 63 0.003298033 ubox
55 68 0.029466909 ubox
55 74 0.366740828 ubox
55 75 0.082555526 ubox
56 63 0.003503120 ubox
56 68 0.023041201 ubox
56 73 0.365844727 ubox
56 74 0.082826149 ubox
56 75 0.020667747 ubox
56 79 0.008613515 ubox
57 64 0.227994316 ubox
57 65 0.013197286 ubox
57 72 0.249547639 ubox
57 78 0.009194324 ubox
58 63 0.230198435 ubox
58 68 0.052786373 ubox
58 73 0.087345875 ubox
58 79 0.030426758 ubox
59 64 0.009193824 ubox
59 65 0.009362184 ubox
59 72 0.111125427 ubox
59 78 0.032842439 ubox
60 66 0.010042324 ubox
60 67 0.051979241 ubox
60 68 0.038242232 ubox
60 69 0.222860586 ubox
60 70 0.037283019 ubox
60 71 0.122986904 ubox
60 79 0.005783657 ubox
61 66 0.047096479 ubox
61 67 0.039637525 ubox
61 68 0.218956212 ubox
61 69 0.038576167 ubox
61 70 0.123659448 ubox
61 71 0.010465778 ubox
61 79 0.003727147 ubox
62 72 0.004625908 ubox
62 76 0.042915840 ubox
62 77 0.078773974 ubox
63 72 0.003881791 ubox
63 76 0.180958451 ubox
63 77 0.007844940 ubox
63 78 0.009926888 ubox
64 68 0.022415061 ubox
64 73 0.017702502 ubox
64 74 0.686459426 ubox
64 75 0.319584135 ubox
64 79 0.006263868 ubox
65 73 0.689943112 ubox
65 74 0.319203726 ubox
65 75 0.009435993 ubox
65 79 0.006944031 ubox
66 72 0.643071597 ubox
66 77 0.023711327 ubox
67 72 0.115974719 ubox
67 76 0.026417546 ubox
67 77 0.007813074 ubox
68 72 0.017591804 ubox
68 76 0.008069951 ubox
68 77 0.020765471 ubox
68 78 0.224304332 ubox
69 76 0.021364842 ubox
69 77 0.223228739 ubox
70 76 0.203987811 ubox
70 77 0.016892150 ubox
71 76 0.016625408 ubox
71 77 0.011171634 ubox
72 79 0.034539274 ubox
73 78 0.055464344 ubox
74 78 0.016650145 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
23 51 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
64 74 0.9500000 lbox
65 73 0.9500000 lbox
66 72 0.9500000 lbox
showpage
end
%%EOF
