%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (49)
} def

/sequence { (\
GGAAAAAGGUCCGGAAGGAAACUUCCCCAGCAAGUGGAAGCACUAGAUGAAAGCAUCUGAAGGGGACCUUGGACUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.030689247 ubox
1 74 0.163335894 ubox
1 75 0.191553594 ubox
1 76 0.020892878 ubox
1 77 0.033940363 ubox
1 78 0.375250733 ubox
2 11 0.030839635 ubox
2 70 0.003762247 ubox
2 74 0.220104850 ubox
2 75 0.025088174 ubox
2 76 0.052683899 ubox
2 77 0.368677970 ubox
2 78 0.605354347 ubox
3 10 0.029107040 ubox
3 70 0.006622748 ubox
3 75 0.055437959 ubox
3 76 0.357332854 ubox
3 77 0.600935423 ubox
4 69 0.003439148 ubox
4 70 0.011278792 ubox
4 75 0.254170764 ubox
4 76 0.570640235 ubox
4 77 0.033279020 ubox
5 69 0.005814784 ubox
5 70 0.039895753 ubox
5 75 0.522378391 ubox
5 76 0.035902775 ubox
5 77 0.051855923 ubox
6 69 0.029921923 ubox
6 70 0.741028413 ubox
6 75 0.023764848 ubox
6 76 0.056362042 ubox
6 77 0.473915000 ubox
7 69 0.765406013 ubox
7 70 0.023544204 ubox
7 75 0.055284056 ubox
7 76 0.552119179 ubox
7 77 0.014873972 ubox
8 68 0.768805922 ubox
8 69 0.003887995 ubox
8 74 0.040928608 ubox
8 75 0.618331862 ubox
8 76 0.012765455 ubox
8 78 0.005109596 ubox
9 67 0.768822513 ubox
9 74 0.637195128 ubox
10 19 0.006429777 ubox
10 64 0.003237494 ubox
10 65 0.019992323 ubox
10 66 0.768436408 ubox
10 73 0.638437887 ubox
11 18 0.007292725 ubox
11 63 0.006916877 ubox
11 64 0.038234618 ubox
11 65 0.767806546 ubox
11 72 0.638541159 ubox
12 17 0.007308305 ubox
12 62 0.008172432 ubox
12 63 0.050095571 ubox
12 64 0.766304454 ubox
12 71 0.637588282 ubox
12 72 0.005999626 ubox
12 79 0.010950914 ubox
13 22 0.006796763 ubox
13 25 0.003879220 ubox
13 26 0.799971082 ubox
13 27 0.036750470 ubox
13 28 0.024256774 ubox
13 31 0.004339275 ubox
13 68 0.030913568 ubox
13 69 0.015391888 ubox
13 70 0.411693671 ubox
13 78 0.029682669 ubox
14 22 0.003276683 ubox
14 24 0.003253182 ubox
14 25 0.802432187 ubox
14 26 0.026442407 ubox
14 27 0.023484635 ubox
14 31 0.003545570 ubox
14 67 0.031305997 ubox
14 68 0.021350582 ubox
14 69 0.152935407 ubox
14 70 0.067306313 ubox
14 77 0.029789362 ubox
14 78 0.009733200 ubox
15 23 0.003346695 ubox
15 24 0.803214605 ubox
15 69 0.067723941 ubox
15 70 0.358194298 ubox
15 76 0.029821842 ubox
15 77 0.009697394 ubox
16 23 0.803899842 ubox
16 24 0.007351583 ubox
16 69 0.552843090 ubox
16 70 0.010458719 ubox
16 75 0.029841500 ubox
16 76 0.009629830 ubox
17 22 0.803741714 ubox
17 23 0.010730995 ubox
17 26 0.026005648 ubox
17 28 0.005699893 ubox
17 43 0.003340859 ubox
17 58 0.004313018 ubox
17 67 0.012310663 ubox
17 68 0.590286796 ubox
17 69 0.014479945 ubox
17 74 0.029852698 ubox
17 75 0.009583558 ubox
18 22 0.012218689 ubox
18 25 0.026140907 ubox
18 27 0.005698948 ubox
18 57 0.004344124 ubox
18 67 0.590281419 ubox
18 68 0.015271211 ubox
18 74 0.009560759 ubox
19 23 0.004009781 ubox
19 24 0.024570390 ubox
19 56 0.004303752 ubox
20 69 0.003310376 ubox
20 70 0.026216267 ubox
21 69 0.026579741 ubox
21 70 0.004487294 ubox
22 40 0.016843921 ubox
22 53 0.004318055 ubox
22 62 0.008554732 ubox
22 65 0.005430877 ubox
22 72 0.004685874 ubox
23 39 0.016976578 ubox
23 52 0.004286091 ubox
23 61 0.008580429 ubox
23 64 0.004091580 ubox
23 66 0.057362543 ubox
23 71 0.004662317 ubox
24 38 0.017038471 ubox
24 51 0.004128373 ubox
24 60 0.008583872 ubox
24 63 0.003717079 ubox
24 65 0.044165747 ubox
24 66 0.588851119 ubox
25 37 0.017025398 ubox
25 59 0.008518085 ubox
25 62 0.003692107 ubox
25 64 0.044222922 ubox
25 65 0.593394474 ubox
26 36 0.016987963 ubox
26 37 0.008142332 ubox
26 63 0.044959555 ubox
26 64 0.593710170 ubox
26 65 0.012645339 ubox
27 34 0.012802686 ubox
27 36 0.011693860 ubox
27 37 0.516781377 ubox
27 59 0.006651243 ubox
27 62 0.045609141 ubox
27 63 0.642374720 ubox
27 64 0.016900994 ubox
27 65 0.008587333 ubox
28 34 0.016451819 ubox
28 36 0.518021275 ubox
28 37 0.009836719 ubox
28 40 0.003940357 ubox
28 49 0.031068660 ubox
28 59 0.019161790 ubox
28 62 0.642009054 ubox
28 63 0.021307418 ubox
28 64 0.008611719 ubox
29 35 0.508203855 ubox
29 44 0.008471859 ubox
29 48 0.030122726 ubox
29 58 0.014597064 ubox
30 35 0.006667754 ubox
30 41 0.203121873 ubox
30 43 0.010050673 ubox
30 44 0.005369870 ubox
30 54 0.003392159 ubox
30 57 0.010311194 ubox
30 58 0.004085963 ubox
31 36 0.011851048 ubox
31 37 0.009506705 ubox
31 40 0.203312521 ubox
31 46 0.028718166 ubox
31 49 0.006427057 ubox
31 53 0.003397308 ubox
31 59 0.379459253 ubox
31 62 0.013083222 ubox
31 63 0.011555334 ubox
32 44 0.025596733 ubox
32 48 0.006413062 ubox
32 58 0.231520419 ubox
33 44 0.691646276 ubox
33 58 0.007934730 ubox
34 41 0.058306550 ubox
34 43 0.823932435 ubox
34 44 0.003393035 ubox
34 54 0.003243942 ubox
34 56 0.048318172 ubox
34 57 0.008906042 ubox
35 40 0.057418998 ubox
35 42 0.824601180 ubox
35 45 0.007004741 ubox
35 53 0.003223139 ubox
35 55 0.050056945 ubox
35 59 0.006630438 ubox
36 41 0.824160099 ubox
36 43 0.024514680 ubox
36 44 0.009791292 ubox
36 54 0.050018925 ubox
36 58 0.011193788 ubox
36 68 0.003336112 ubox
37 41 0.009404497 ubox
37 43 0.011686725 ubox
37 57 0.013774475 ubox
37 67 0.003343971 ubox
38 44 0.008257610 ubox
38 56 0.013647160 ubox
38 70 0.009114342 ubox
39 44 0.008259888 ubox
39 48 0.004521351 ubox
39 69 0.009556468 ubox
40 44 0.004316332 ubox
40 54 0.016540052 ubox
40 67 0.004362743 ubox
40 68 0.009434469 ubox
41 46 0.005849974 ubox
41 49 0.045113159 ubox
41 53 0.016569737 ubox
41 59 0.025129402 ubox
41 62 0.134248682 ubox
41 63 0.126803038 ubox
41 64 0.007729545 ubox
41 65 0.005032389 ubox
42 48 0.041272147 ubox
42 58 0.017731797 ubox
43 49 0.009975046 ubox
43 59 0.087354423 ubox
43 62 0.165388268 ubox
43 63 0.098071698 ubox
43 64 0.007872422 ubox
43 65 0.004571299 ubox
44 59 0.637262872 ubox
44 60 0.047164221 ubox
44 61 0.137421295 ubox
44 62 0.083255306 ubox
44 63 0.008562850 ubox
44 64 0.003887524 ubox
45 58 0.945373281 ubox
46 54 0.003989215 ubox
46 57 0.997122917 ubox
47 56 0.997222261 ubox
48 53 0.003173994 ubox
48 55 0.996662441 ubox
48 79 0.004575312 ubox
49 54 0.992599792 ubox
49 57 0.013225849 ubox
49 78 0.007472033 ubox
50 56 0.012724713 ubox
50 77 0.007496164 ubox
51 70 0.004987350 ubox
51 76 0.007495135 ubox
52 58 0.007813799 ubox
52 69 0.005283279 ubox
52 75 0.007498848 ubox
53 57 0.007946307 ubox
53 68 0.005304234 ubox
53 74 0.007445584 ubox
54 59 0.006840557 ubox
54 62 0.004746349 ubox
54 63 0.006547200 ubox
56 63 0.005456832 ubox
56 65 0.003222377 ubox
56 66 0.004669668 ubox
56 73 0.007038768 ubox
57 62 0.007615536 ubox
57 63 0.011499304 ubox
57 64 0.003997708 ubox
57 65 0.004884919 ubox
57 72 0.007381010 ubox
58 62 0.011000991 ubox
58 63 0.012125751 ubox
58 64 0.004878548 ubox
58 71 0.007072594 ubox
59 68 0.004071377 ubox
59 70 0.011382107 ubox
59 78 0.004180717 ubox
60 69 0.009695964 ubox
60 70 0.214494143 ubox
60 77 0.004171444 ubox
61 69 0.225381560 ubox
61 70 0.030641888 ubox
61 76 0.004144345 ubox
62 67 0.012659868 ubox
62 68 0.226888660 ubox
62 69 0.033166288 ubox
62 70 0.006143654 ubox
62 75 0.004113859 ubox
63 67 0.223231067 ubox
63 68 0.033461832 ubox
63 69 0.007886810 ubox
63 74 0.004083628 ubox
64 68 0.007959642 ubox
70 79 0.018956357 ubox
71 76 0.005346169 ubox
71 77 0.006338422 ubox
71 78 0.077974628 ubox
72 76 0.005459763 ubox
72 77 0.061616247 ubox
72 78 0.080416520 ubox
73 77 0.070102740 ubox
74 79 0.016244201 ubox
2 78 0.9500000 lbox
3 77 0.9500000 lbox
4 76 0.9500000 lbox
5 75 0.9500000 lbox
6 70 0.9500000 lbox
7 69 0.9500000 lbox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
