%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (260)
} def

/sequence { (\
GGAAAAAAGAUCAACUAGAAAACUAGACUCAAGUGAAACUGAGAAAACACAGACACAAGAGAAGAUCAUAGACCUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.022204067 ubox
1 15 0.006162693 ubox
1 16 0.005072110 ubox
1 67 0.009254614 ubox
1 73 0.036540032 ubox
1 74 0.567338164 ubox
1 75 0.086562875 ubox
1 76 0.010031541 ubox
1 77 0.016121556 ubox
1 78 0.293144161 ubox
2 11 0.019675271 ubox
2 12 0.033817148 ubox
2 15 0.005352424 ubox
2 66 0.005698075 ubox
2 67 0.014683393 ubox
2 73 0.567355498 ubox
2 74 0.099362287 ubox
2 75 0.011729120 ubox
2 76 0.024922086 ubox
2 77 0.292299128 ubox
2 78 0.293427604 ubox
3 11 0.032658623 ubox
3 66 0.013743760 ubox
3 69 0.007748229 ubox
3 75 0.026086916 ubox
3 76 0.289465366 ubox
3 77 0.292491830 ubox
4 11 0.004712807 ubox
4 69 0.018293531 ubox
4 75 0.266792355 ubox
4 76 0.284018245 ubox
4 77 0.017253779 ubox
5 11 0.003916923 ubox
5 69 0.056455006 ubox
5 75 0.259004971 ubox
5 76 0.021000647 ubox
5 77 0.016900874 ubox
6 11 0.005048739 ubox
6 69 0.081910470 ubox
6 75 0.022297854 ubox
6 76 0.018877065 ubox
6 77 0.133594553 ubox
7 69 0.233202792 ubox
7 75 0.018224922 ubox
7 76 0.155742399 ubox
7 77 0.009504421 ubox
8 16 0.016037624 ubox
8 24 0.006520269 ubox
8 29 0.003891895 ubox
8 69 0.143541290 ubox
8 75 0.167455694 ubox
8 76 0.009999647 ubox
8 77 0.007330979 ubox
9 15 0.016687909 ubox
9 23 0.006758202 ubox
9 28 0.004251836 ubox
9 30 0.016064796 ubox
9 66 0.004596209 ubox
9 67 0.960235774 ubox
9 69 0.005222414 ubox
9 73 0.037118028 ubox
9 74 0.169274445 ubox
9 75 0.005172102 ubox
9 76 0.007821618 ubox
9 77 0.006397886 ubox
9 78 0.031318037 ubox
10 29 0.015790734 ubox
10 66 0.961843761 ubox
10 69 0.014187124 ubox
10 75 0.007560927 ubox
10 76 0.006813951 ubox
10 77 0.030029893 ubox
11 19 0.016010244 ubox
11 27 0.009207954 ubox
11 53 0.004560063 ubox
11 60 0.004417334 ubox
11 62 0.004147489 ubox
11 65 0.961928407 ubox
11 68 0.012982423 ubox
11 70 0.004505979 ubox
11 72 0.160271237 ubox
12 18 0.017028709 ubox
12 26 0.008348274 ubox
12 35 0.003311462 ubox
12 52 0.004809757 ubox
12 59 0.004690016 ubox
12 61 0.004363304 ubox
12 64 0.960998223 ubox
12 71 0.162470020 ubox
12 79 0.003669454 ubox
13 29 0.004292664 ubox
13 66 0.004428951 ubox
13 69 0.015356224 ubox
14 29 0.003671401 ubox
14 34 0.004491436 ubox
14 69 0.020901873 ubox
15 26 0.988228265 ubox
15 33 0.005108650 ubox
15 61 0.011371739 ubox
15 71 0.042440763 ubox
15 79 0.004365760 ubox
16 21 0.004445255 ubox
16 22 0.003371770 ubox
16 25 0.994161370 ubox
16 26 0.004702187 ubox
16 32 0.005044044 ubox
16 60 0.009925140 ubox
16 62 0.004650495 ubox
16 68 0.004758292 ubox
16 70 0.043876000 ubox
17 24 0.994089271 ubox
17 69 0.043600060 ubox
17 75 0.003842879 ubox
17 77 0.004959347 ubox
18 23 0.985944949 ubox
18 24 0.005521061 ubox
18 30 0.007078924 ubox
18 67 0.038165718 ubox
18 74 0.004183441 ubox
18 76 0.005887532 ubox
18 77 0.004287659 ubox
18 78 0.067208590 ubox
19 24 0.005342394 ubox
19 29 0.006809615 ubox
19 66 0.037859360 ubox
19 75 0.005793882 ubox
19 76 0.004680284 ubox
19 77 0.067232126 ubox
20 66 0.008338036 ubox
20 75 0.004483032 ubox
20 76 0.066896745 ubox
21 66 0.008217937 ubox
21 75 0.065178249 ubox
21 76 0.003472270 ubox
22 66 0.004020735 ubox
22 75 0.003832320 ubox
23 52 0.003551213 ubox
23 64 0.047153001 ubox
23 71 0.071184725 ubox
24 51 0.003443622 ubox
24 63 0.046898195 ubox
24 65 0.005873872 ubox
24 70 0.071283667 ubox
25 69 0.070779080 ubox
26 67 0.070217767 ubox
27 34 0.008409981 ubox
27 66 0.070058310 ubox
28 33 0.008674859 ubox
28 35 0.005309553 ubox
28 43 0.093698025 ubox
28 59 0.033914704 ubox
28 61 0.981645979 ubox
28 64 0.012405574 ubox
29 36 0.011991078 ubox
29 42 0.094314900 ubox
29 44 0.004941571 ubox
29 53 0.003242909 ubox
29 58 0.033737098 ubox
29 59 0.003163775 ubox
29 60 0.987836866 ubox
29 61 0.003633287 ubox
29 62 0.026995232 ubox
29 63 0.009259223 ubox
30 35 0.012586762 ubox
30 41 0.094330352 ubox
30 43 0.005184322 ubox
30 52 0.003490127 ubox
30 59 0.987766690 ubox
30 61 0.028912165 ubox
31 40 0.079245583 ubox
32 40 0.050138500 ubox
33 39 0.070708926 ubox
33 50 0.009374340 ubox
33 54 0.010313232 ubox
33 56 0.992205192 ubox
34 38 0.063719863 ubox
34 49 0.009389744 ubox
34 53 0.010262755 ubox
34 55 0.993162202 ubox
34 57 0.052012543 ubox
34 58 0.003482748 ubox
35 48 0.009370219 ubox
35 54 0.992185007 ubox
35 56 0.052650449 ubox
39 52 0.987051580 ubox
40 46 0.003891595 ubox
40 47 0.008515525 ubox
40 49 0.102090846 ubox
40 51 0.987871289 ubox
40 53 0.006583204 ubox
41 48 0.106199545 ubox
41 50 0.986851952 ubox
43 48 0.401914775 ubox
43 50 0.015111530 ubox
48 52 0.005661915 ubox
48 59 0.007079343 ubox
48 61 0.009626772 ubox
50 59 0.017619660 ubox
50 61 0.007318949 ubox
52 56 0.007532257 ubox
52 67 0.006821463 ubox
53 66 0.006630008 ubox
54 59 0.015383141 ubox
54 61 0.017663416 ubox
54 64 0.004881971 ubox
56 61 0.015141005 ubox
56 64 0.003188127 ubox
57 69 0.005162977 ubox
58 69 0.004421657 ubox
58 75 0.003710974 ubox
58 77 0.006791421 ubox
59 67 0.035827856 ubox
59 69 0.003509169 ubox
59 74 0.003876782 ubox
59 76 0.008136762 ubox
59 78 0.033328734 ubox
60 66 0.035520277 ubox
60 69 0.003487236 ubox
60 75 0.008423990 ubox
60 77 0.032264095 ubox
61 67 0.018211591 ubox
61 74 0.008549568 ubox
61 76 0.029532830 ubox
61 77 0.029260670 ubox
61 78 0.019996343 ubox
62 66 0.016426445 ubox
62 69 0.011324207 ubox
62 75 0.026072280 ubox
62 76 0.068312472 ubox
62 77 0.019021800 ubox
63 69 0.017007095 ubox
63 75 0.079566461 ubox
63 76 0.016854768 ubox
63 77 0.005117580 ubox
64 69 0.005924797 ubox
64 73 0.030779420 ubox
64 74 0.083814891 ubox
64 75 0.012860456 ubox
64 76 0.006124071 ubox
64 77 0.004934483 ubox
64 78 0.028715307 ubox
65 69 0.006023512 ubox
65 75 0.006004989 ubox
65 76 0.005413804 ubox
65 77 0.028383980 ubox
66 70 0.005283461 ubox
66 71 0.004772707 ubox
66 72 0.080707750 ubox
67 71 0.082071913 ubox
68 75 0.012803795 ubox
68 76 0.014495896 ubox
68 77 0.021281182 ubox
69 79 0.009187339 ubox
70 75 0.012192247 ubox
70 76 0.013366232 ubox
70 77 0.020783106 ubox
71 75 0.011585943 ubox
71 76 0.020933337 ubox
71 77 0.021592150 ubox
71 78 0.195119133 ubox
72 76 0.020253819 ubox
72 77 0.175969341 ubox
73 79 0.023144497 ubox
74 79 0.027305412 ubox
75 79 0.005194168 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
showpage
end
%%EOF
